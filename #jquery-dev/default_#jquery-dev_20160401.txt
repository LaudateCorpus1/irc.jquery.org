[06:15:35] <doesallmagic2> Project jQuery Migrate 3.x build #39: SUCCESS in 2 min 35 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%203.x/39/
[07:17:49] <doesallmagic2> Yippee, build fixed!
[07:17:50] <doesallmagic2> Project jQuery Migrate 1.x Core 2.x build #254: FIXED in 2 min 49 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%201.x%20Core%202.x/254/
[08:14:10] <doesallmagic2> Yippee, build fixed!
[08:14:10] <doesallmagic2> Project jQuery Migrate 1.x Core 1.x build #451: FIXED in 5 min 10 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%201.x%20Core%201.x/451/
[09:51:45] <m_gol> jzaefferer: this might be of interest to you: https://github.com/creationix/nvm#zsh
[10:01:11] <dcherman> out of curiosity, has there been any movement on the release of jQuery 3?  beta came out in January, just curious if there's a timeline for the rc and/or final release
[10:01:55] <platinumazure> Hi folks. Just wondering, is there any reason why someone would return out of a QUnit test?
[10:02:25] <platinumazure> Like, is there a good reason to do it? Does returning a particular value signal something to the test runner (e.g., return false means the test is inconclusive or failed, etc.)?
[10:13:28] <DaveMethvin> dcherman: i think timmywil was trying for the end of March but there were a couple of serious blockers
[10:13:44] <DaveMethvin> so, it should be soon
[10:15:26] <dcherman> sweet, thanks.  super excited about some of the upcoming changes in data since they make a surprisingly big perf impact
[10:15:59] <DaveMethvin> yeah, it's taken a while but major releases are like that
[10:16:21] <DaveMethvin> the 2.2 release showed a few issues that slowed us down as well
[10:16:27] <dcherman> yup, i hear that;  took us a year to release our internal major at work
[11:03:39] <jzaefferer> m_gol: thanks! one more reason to give zsh a try
[12:06:04] <jqcommit> [13jquery] 15ctheiss opened issue #3031: Shape of $.getJSON deferred changes depending on how it's used 02https://git.io/vVCS6
[12:32:36] <gibson042> platinumazure: QUnit checks test return values to see if they are thenable (e.g., Promises) for async resolution, but that's it at this point
[12:33:26] <platinumazure> gibson042: Thanks. Do you think it's worth me opening an issue and suggesting that it throws (or at least adds an assert failure) when the test returns a non-thenable?
[12:35:25] <JamesMGreene> IIRC, we discussed that when we were adding the Promise support and ended up being against it as it can make extending QUnit more difficult if that extension relies on a return value
[12:35:34] <JamesMGreene> I'm not sure there are any real-world examples of such, though
[12:40:48] <JamesMGreene> I think it would be reasonable to start enforcing such in v2.0.0 but not before then
[12:42:44] <JamesMGreene> Related discussion starts around here and continues in subsequent comments: https://github.com/jquery/qunit/issues/534#issuecomment-53967771
[13:49:59] <platinumazure> Thanks @JamesMGreene. To be honest, part of the reason I'm asking is because I'm trying to see if it would be worth writing an ESLint rule to flag that. If nothing else, people who are using a hypothetical QUnit extension that depends on a return value would be able to disable the rule for their projects.
[15:02:21] <gnarf> OMG scott_gonzalez davemethvin agcolom leobalter s5fs timmywil arschmitz  https://github.com/blog/2141-squash-your-commits
[15:02:28] <gnarf> it seems realy real!!!!
[15:02:29] <gnarf> :swoon:
[15:02:53] <arschmitz> wow!
[15:04:16] <agcolom> so we will be able to press the github "button??
[15:05:20] <arschmitz> unless im missing it just ads the option to suqash to a single commit
[15:05:25] <arschmitz> not do a rebase
[15:05:27] <arschmitz> instead
[15:05:32] <agcolom> :-( 
[15:05:47] <agcolom> maybe that will come??
[15:06:22] <arschmitz> will work for a lot of simple pr's though
[15:08:13] <jqcommit> [13jquery] 15deejain opened issue #3032: Over event isn't propagated if nested droppable doesn't accept draggable under a certain scenario 02https://git.io/vVWlH
[15:13:59] <jqcommit> [13jquery] 15mgol closed issue #3032: Over event isn't propagated if nested droppable doesn't accept draggable under a certain scenario 02https://git.io/vVWlH
