[00:00:19] <Krinkle> %R
[00:01:52] <JamesMGreene> Leaving `testDone` out, eh?
[00:02:05] <JamesMGreene> I guess that's fine
[00:02:10] <JamesMGreene> given its flag
[00:02:30] <JamesMGreene> Want to just move the `iframe.style.display = "none";` into the `moduleDone`?
[00:02:50] <Krinkle> then we need to make it visible from start
[00:02:51] <JamesMGreene> though that would require a corresponding moduleStart
[00:02:55] <JamesMGreene> yeah
[00:02:55] <Krinkle> yep
[00:02:56] <JamesMGreene> nm
[00:03:00] <JamesMGreene> leave it like that for now
[00:03:25] <JamesMGreene> I have some other ideas for that anyway
[00:04:53] <JamesMGreene> I'd still like to investigate a way to NOT screw with the user's active `module` lifecycle if possible
[00:04:57] <JamesMGreene> but let's continue for now
[00:05:07] <JamesMGreene> so we can move this damn thing into its own repo
[00:05:35] <Krinkle> https://gist.github.com/Krinkle/f485b3e2011f6548ca78
[00:06:23] <Krinkle> QUnit.testDone() is outside indeed, but outside entirely
[00:06:27] <Krinkle> outside QUnit.testSuites as well
[00:06:53] <Krinkle> would be more efficient if it only starts listening when relevant
[00:07:02] <Krinkle> but then, an .off() would be nice too, to disable afterwards
[00:07:07] <Krinkle> lets keep it as-is for now
[00:07:57] <JamesMGreene> yup
[00:08:02] <JamesMGreene> Commit #9
[00:08:19] <JamesMGreene> "Improved the defensive coding techniques...:
[00:09:36] <JamesMGreene> It also somehow snuck into the wrong commit for me but this one should also add the `QUnit.` before the `asyncTest` (it was in Commit #8 by accident)
[00:10:05] <JamesMGreene> imho QUnit addons shouldn't assume those functions will be globally available
[00:10:07] <Krinkle> already done
[00:10:09] <Krinkle> in master
[00:10:18] <JamesMGreene> oh ok
[00:10:20] <JamesMGreene> great
[00:10:50] <JamesMGreene> Same for the `QUnit.start`?
[00:10:54] <Krinkle> Yep
[00:11:07] <Krinkle> you tripped over its space earlier
[00:11:21] <JamesMGreene> And how about the nasty message?
[00:11:25] <JamesMGreene> oh right
[00:11:25] <Krinkle> tripped is the wrong word there.
[00:11:33] <Krinkle> forgot, omitted.
[00:11:33] <JamesMGreene> nasty msg fix: https://github.com/JamesMGreene/qunit/commit/0f0fde1746428e72bf77fe668cfdb53342b1ede5#L0R117
[00:11:33] <b-ot> JamesMGreene: James M. Greene (2w 5d ago): QUnit Composite: Improved the defensive coding techniques used while working with the iframe.
[00:11:45] <Krinkle> $R
[00:11:48] <Krinkle> %R
[00:14:08] <JamesMGreene> Still missing?
[00:15:28] <Krinkle> https://gist.github.com/Krinkle/f485b3e2011f6548ca78
[00:16:30] <JamesMGreene> k, looks good
[00:16:48] <Krinkle> I fixed the comments and shadow variables in the style guide commit
[00:16:58] <Krinkle> since they were shadowing global module and test.
[00:17:12] <Krinkle> https://gist.github.com/Krinkle/f485b3e2011f6548ca78#file-gistfile1-diff-L206
[00:17:12] <JamesMGreene> Yup, I saw
[00:17:13] <JamesMGreene> Commit #10: https://github.com/JamesMGreene/qunit/commit/e04dcf4744652d5b19322c9c87278d5ef73a4a0f
[00:17:13] <b-ot> JamesMGreene: James M. Greene (2w 5d ago): QUnit Composite: Updated the class name of the iframe and the title of the test page to use the 'Composite' name.
[00:17:50] <Krinkle> SubsuiteRunner
[00:17:56] <Krinkle> Whoammashoarmalol
[00:18:13] <JamesMGreene> the last trace of its jQuery UI roots :)
[00:19:23] <JamesMGreene> I left the "-subsuite" in the class name, hack it off if you like
[00:21:24] <JamesMGreene> So close now
[00:21:49] <JamesMGreene> 2 more commits to circle back through
[00:22:44] <Krinkle> %R
[00:23:18] <JamesMGreene> Looks good.
[00:23:24] <JamesMGreene> Circle back to Commit #5: https://github.com/JamesMGreene/qunit/commit/128059fe5ee2e59a33177b4c58861ac55ea60a38
[00:23:24] <b-ot> JamesMGreene: James M. Greene (2w 5d ago): QUnit Composite: Fixed bug with use of inline style instead of CSS class that prevented the test results from ever being expanded.
[00:23:41] <Krinkle> how so?
[00:24:02] <Krinkle> I admit I removed 'undo the auto-expansion of failed tests' because it was broken
[00:24:04] <JamesMGreene> i.e. we skipped that one because you removed the code it fixes
[00:24:06] <Krinkle> this would fix it
[00:24:11] <Krinkle> but, do we want it?
[00:24:19] <Krinkle> QUnit does this on purpose
[00:24:20] <JamesMGreene> according to scott_gonzalez and jzaefferer, yes
[00:24:45] <JamesMGreene> because of the fact that these are test _suites_
[00:24:59] <JamesMGreene> they were more interested in seeing if they passed or failed
[00:25:14] <Krinkle> and in case of failure you need to know what's broken
[00:25:24] <JamesMGreene> and would prefer to drill into any failing pages rather than continuing to run the overarching suite
[00:25:32] <JamesMGreene> Right
[00:25:38] <Krinkle> you'd have to re-run it
[00:25:39] <JamesMGreene> My fix still allows you to expand it
[00:25:45] <Krinkle> Right
[00:26:14] <JamesMGreene> The point of that block was to undo QUnit core's choice to auto-expand modules/tests with failures
[00:26:33] * Krinkle creates a failing test
[00:28:55] <JamesMGreene> on purpose ;)
[00:30:59] <JamesMGreene> https://github.com/jquery/qunit/blob/ced38da838bfa137b1c2e6385ee062a5e215768a/qunit/qunit.js#L272-L274
[00:31:11] <JamesMGreene> ^ what this commit is fighting
[00:31:36] <Krinkle> yeah, I know the behaviour
[00:31:48] <JamesMGreene> long story short, apparently QUnit used to do this w/ inline styles instead of classes but the addon didn't get updated
[00:31:58] <Krinkle> I know
[00:32:00] <Krinkle> I changed that
[00:32:03] <Krinkle> :)
[00:32:09] <JamesMGreene> good choice :-P
[00:32:28] <JamesMGreene> but you totally forgot to update the Composite addon, RAWR
[00:33:33] <Krinkle> but * forgot to update * addon
[00:34:15] <JamesMGreene> indeed
[00:34:15] <Krinkle> Im gonna cheat, and for good reason
[00:34:34] <Krinkle> master] Expose class utility methods
[00:34:42] <Krinkle> we have addEvent as well
[00:34:53] <Krinkle> they are probably used in more places outside our realm
[00:36:19] <JamesMGreene> k
[00:36:53] <jqcommit> 01[13qunit01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/dgoaRQ
[00:36:53] <jqcommit> 13qunit/06master 1424a8e98 15Timo Tijhof: Expose class utility methods
[00:38:31] <doesallmagic> Yippie, build fixed!
[00:38:32] <doesallmagic> Project QUnit build #266: FIXED in 1 min 52 sec: http://swarm.jquery.org:8080/job/QUnit/266/
[00:38:32] <doesallmagic> Timo Tijhof: Expose class utility methods
[00:41:14] <Krinkle> JamesMGreene: https://gist.github.com/Krinkle/f485b3e2011f6548ca78
[00:41:22] <Krinkle> r30
[00:42:16] <JamesMGreene> Loop if not jQuery style
[00:42:19] <JamesMGreene> is not*
[00:42:28] <Krinkle> How so? We cache length
[00:42:41] <Krinkle> It doesn't have to be "for ( ; "
[00:42:44] <Krinkle> that isn't jquery style
[00:42:52] <Krinkle> that just a few characters shorter, sometimes
[00:42:58] <JamesMGreene> https://github.com/JamesMGreene/qunit/commit/010e590f767f42356fff1fa080832ec63eb222f1
[00:42:59] <b-ot> JamesMGreene: James M. Greene (2w 5d ago): QUnit Composite: Switched `for` loops to jQuery's preferred coding style.
[00:43:02] <Krinkle> afaik that's the only reason and only if it is shorter - in jquery core.
[00:43:09] <JamesMGreene> correct
[00:43:33] <JamesMGreene> DaveMethvin|away and some other guy (I forgot, sorry guy) recommended I do it that way
[00:43:35] <Krinkle> e.g. dont pull out the vars if there are no other vars
[00:43:54] <JamesMGreene> Though, of course, our bytes are less expensive than jQuery core's
[00:43:55] <Krinkle> in this case there are other vars
[00:44:10] <Krinkle> but I don't do it because there is a large chunk of code between var and for() in this case
[00:44:15] <Krinkle> it pulls it too far apart
[00:44:19] <Krinkle> not needed.
[00:44:24] <JamesMGreene> k
[00:45:18] <JamesMGreene> How many lines are between them? o_O
[00:45:20] <Krinkle> in qunit it is significantly more important that the code is intuitive and maintainable. jquery core is more worried about bandwidth and has a lot of maintainers that'll figure it out and squeeze ever last drop
[00:45:37] <Krinkle> at least one block
[00:45:55] <Krinkle> Personally I'd rather keep the var block entirely without assignments
[00:46:05] <Krinkle> Just declarations
[00:46:14] <Krinkle> I only move assignments in there if I'd have those on top anyway
[00:46:19] <Krinkle> to save repeating the name twice.
[00:46:23] <Krinkle> var a, b; b = 123;
[00:46:43] <JamesMGreene> well I'm OK with that
[00:46:51] <Krinkle> but know that javascript will still hoist it. var a, b = 123; to var a, b; b = 123;
[00:46:58] <Krinkle> which is the reason we put var on top
[00:47:00] <Krinkle> always
[00:47:08] <JamesMGreene> yup
[00:48:02] <Krinkle> shall I push the branch? (not to master yet)
[00:48:16] <JamesMGreene> So the only thing we skipped now was Commit #2 but I'm already confident we've dealt with that https://github.com/JamesMGreene/qunit/commit/85a9e6a033e04dde3b8f0f5c2269101de4f02751?w=1
[00:48:16] <b-ot> JamesMGreene: James M. Greene (2w 5d ago): QUnit Composite: Reduced API surface area.
[00:48:32] <JamesMGreene> Did you run grunt? :)
[00:48:34] <Krinkle> btw, can I just say.. you're the first James I know that has a middle name.
[00:48:36] <Krinkle> yes
[00:48:41] <Krinkle> grunt watch
[00:48:46] <JamesMGreene> oh ok
[00:48:49] <JamesMGreene> Really?
[00:48:59] <JamesMGreene> Norweigans don't do the middle name thing?
[00:49:00] <Krinkle> no, that doesn't work in qunit yet (works in core)
[00:49:18] <Krinkle> but I did kwatch * -exec grunt
[00:49:32] <Krinkle> which is I joke towards a German word
[00:49:45] <Krinkle> JamesMGreene: Who said anything about Norweigans?
[00:49:58] <JamesMGreene> Thought you were Norweigan...?
[00:50:00] <Krinkle> JamesMGreene: I know lots of people with middle names, sorry I didn't finish that statement.
[00:50:36] <Krinkle> And because you're the first James I know who has a middle name, it still sounds a bit odd in my head when I pronounce your (full) nick name
[00:50:53] <JamesMGreene> bah, you're Dutch
[00:50:54] <JamesMGreene> my bad
[00:50:55] <Krinkle> it's so unique that I can only correlate it to one other name, that I associate you with every time I read your name
[00:51:02] <Krinkle> James T. Kirk
[00:51:09] <JamesMGreene> lol yeah
[00:51:38] <Krinkle> the names both implement the same interface, so to speak.
[00:51:40] <Krinkle> anyway
[00:51:41] <Krinkle> yeah Dutch
[00:51:49] <Krinkle> I have a middle name, too by the way.
[00:51:52] <Krinkle> Sebastiaan
[00:51:59] <Krinkle> Timo Sebastiaan.
[00:52:22] <JamesMGreene> I don't use it much in the real world but I can never seem to get just plain ole JamesGreene at any non-tech sites
[00:52:48] <JamesMGreene> So, in a concerted effort to have consistent IDs, I decided to go with the middle initial in all my IDs
[00:52:57] <JamesMGreene> Except for g.d. Twitter
[00:53:09] <JamesMGreene> _JamesMGreene there
[00:53:29] <Krinkle> underscore even
[00:53:30] <jqcommit> 01[13qunit01] 15Krinkle created 06composite (+8 new commits): 02http://git.io/8YZaQw
[00:53:30] <jqcommit> 13qunit/06composite 1498762dc 15James M. Greene: Composite: Restructured to match other addons' folders
[00:53:30] <jqcommit> 13qunit/06composite 140f7c3e1 15James M. Greene: Composite: Apply style guide...
[00:53:30] <jqcommit> 13qunit/06composite 14f5e22e2 15James M. Greene: Composite: Ensure the begin callback is only bound once...
[00:54:00] <JamesMGreene> JamesMGreene never uses his account but his phone is set to auto-login into it or something, so his account is never flagged as inactive and ergo I can't pilfer his ID
[00:55:10] <JamesMGreene> (Twitter only lets you repossess other people's IDs if they haven't logged in for a while)
[00:55:20] <Krinkle> so now for something interesting
[00:55:44] <JamesMGreene> Now push it to its own repo and drop all the unit tests :-P
[00:56:03] <Krinkle> https://github.com/jquery/qunit/pull/new/jquery:master...jquery:composite
[00:56:07] <JamesMGreene> Or did you want to merge into master first?
[00:56:07] <Krinkle> Go and create the PR.
[00:56:13] <Krinkle> Yes
[00:57:18] <Krinkle> We could merge, but there is a reason I want the PR
[00:57:40] <Krinkle> that way I can squash it into master, but preserve history by referencing the PR, which will keep the ref even if the branch is gone.
[00:58:10] <Krinkle> "Composite refactoring" or something.
[01:01:10] <Krinkle> nonbreaking spaces: WIN
[01:01:37] * Krinkle just added "Wikimedia Foundation, jQuery Foundation" to his github profile and had it display like "Wikimedia Foundation, jQuery"\n "Foundation"
[01:01:38] <Krinkle> fixed now
[01:01:59] <Krinkle> JamesMGreene: Are you creating the PR?
[01:02:23] <JamesMGreene> yessir
[01:02:34] <Krinkle> just one button :)
[01:02:58] <JamesMGreene> Sorry, was filling in the details
[01:03:00] <JamesMGreene> https://github.com/jquery/qunit/pull/425
[01:03:01] <b-ot> JamesMGreene: Pull request #425 by JamesMGreene (15s ago): QUnit Composite addon - Major cleanup
[01:03:50] <Krinkle> without " - Reduced surface area of API to minimum. " I suppose
[01:04:58] <JamesMGreene> Why's that?
[01:05:03] <JamesMGreene> oh nm
[01:05:06] <JamesMGreene> yeah, you already did that
[01:05:17] <JamesMGreene> updated
[01:05:44] <Krinkle> git co master; git merge composite --squash --ff-only; dogitcom
[01:05:55] <Krinkle> (pops up a custom editor flow)
[01:06:02] <JamesMGreene> dogitcom o_O
[01:06:33] <JamesMGreene> You want me to do this part?
[01:07:20] <Krinkle> already pushed
[01:07:22] <Krinkle> bot is delayed
[01:07:33] <jqcommit> 01[13qunit01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/h9tyKw
[01:07:33] <jqcommit> 13qunit/06master 1405ebc30 15James M. Greene: Composite Addon: Major cleanup. Closes #425.
[01:07:43] <JamesMGreene> I was just asking since you showed the commands
[01:07:50] <Krinkle> this way it shows you as author and me as committer.
[01:07:56] <JamesMGreene> yup
[01:07:59] <Krinkle> which I guess is appropiate given that most of this
[01:08:01] <Krinkle> is yours
[01:08:07] <JamesMGreene> lol, yup :)
[01:08:11] <JamesMGreene> it's a beast of an addon
[01:08:17] <JamesMGreene> but it's getting better
[01:08:28] <Krinkle> JamesMGreene: I shows the commands as I figured you'd be interested
[01:08:34] <Krinkle> don't know if knew those particular ones
[01:08:45] <JamesMGreene> now before anything else, it needs to move repo and add legit unit tests
[01:08:54] <Krinkle> Yep
[01:08:55] <Krinkle> tomorrow
[01:09:01] <JamesMGreene> indeed
[01:09:02] <Krinkle> what time you got?
[01:09:04] <JamesMGreene> 3:00am
[01:09:05] <JamesMGreene> lol
[01:09:10] <JamesMGreene> zzzzzzzzzzzzzzz
[01:09:12] <Krinkle> 10am here
[01:09:13] <Krinkle> ;-)
[01:09:18] <Krinkle> oh well, I got up very late
[01:09:35] <JamesMGreene> yeah I'll be up in ~3 hours
[01:09:40] <JamesMGreene> so I'd best go now
[01:09:45] <Krinkle> bye
[01:09:50] <JamesMGreene> g'night
[01:09:54] <JamesMGreene> thanks for the lesson
[01:09:57] <JamesMGreene> it was fun
[01:09:57] <Krinkle> people around me got up 3 hours ago
[01:10:03] <doesallmagic> Project QUnit build #267: SUCCESS in 2 min 42 sec: http://swarm.jquery.org:8080/job/QUnit/267/
[01:10:04] <doesallmagic> Timo Tijhof: Composite Addon: Major cleanup. Closes #425.
[01:10:07] <Krinkle> I always take the night shift
[01:10:12] <Krinkle> yes, likewise. nice working with you
[01:11:50] <JamesMGreene> hey Krinkle|detached
[01:11:53] <JamesMGreene> one more thing?
[01:12:14] <JamesMGreene> I don't see my fork's branches locally anymore
[01:12:19] <JamesMGreene> wat? :-o
[01:13:12] <JamesMGreene> I know they're still out there on GitHub
[01:14:56] <JamesMGreene> weird
[04:33:47] <_|Nix|_> Hey, all! In jQM we have this custom event called "navigate" which binds to hashchange xor popstate and emits a "navigate" event. I'm now trying to make a custom build with only the popup and none of our nav subsystem. I'm finding that I need to initialize the navigate event by hand (i.e., call its setup method or do something like $( window ).bind( "navigate", $.noop ), because, although I do not wish to bind to navigate, I do wish to rece
[04:34:42] <_|Nix|_> So, my question: Is there a way in jQuery to attach the same custom-event-code to two different events?
[04:35:03] * _|Nix|_ does not know much about custom event stuff ...
[04:36:08] <_|Nix|_> I cannot simply declare two different custom events with the same setup code, because I only want the setup function to be called once.
[04:36:45] <_|Nix|_> So, the semantics need to be: If anyone attaches to "navigate", or "beforenavigate", then please run this setup code.
[04:36:59] <_|Nix|_> Almost as if "beforenavigate" were an alias to "navigate".
[04:38:43] <_|Nix|_> I might be able to wing it by adding a flag saying "setup has already run for the other event so it does not need to run again", but that doesn't sound too elegant.
[04:55:22] <JamesMGreene> jzaefferer Krinkle|detached Quick review of https://github.com/jquery/qunit/pull/423#discussion_r3294777 so I can update this PR?
[04:55:22] <b-ot> JamesMGreene: Pull request #423 by JamesMGreene (14h 17m ago): Issue #377 - Build: Upgraded to Grunt 0.4.0
[04:56:29] <JamesMGreene> TL;DR: Are you guys good with using tilde versions (per sindresorhus) or do we want to leave them as-is so we can be 100% that they will continue to work?
[05:00:07] <JamesMGreene> jQuery core and jQuery UI do not use the tildes either
[05:43:59] <jzaefferer> JamesMGreene: let's give tilde versions a try; we can go back to fixed should we encounter problems again
[05:45:03] <jzaefferer> JamesMGreene: also, "dropped locally" isn't particularly helpful. Feel free to just add a new commit to the PR. We can squash once its ready. That way update-commits are easier to review in isolation.
[05:45:32] <JamesMGreene> k
[05:46:22] <JamesMGreene> So no commit --amend for PRs, got it
[06:00:22] <JamesMGreene> Udpated https://github.com/jquery/qunit/pull/423
[06:00:23] <b-ot> JamesMGreene: Pull request #423 by JamesMGreene (15h 22m ago): Issue #377 - Build: Upgraded to Grunt 0.4.0
[06:01:20] <JamesMGreene> g2g finish getting ready for work, bb in ~1 hr
[06:34:34] <gibson042> DaveMethvin: "worksforme"... that's great :D
[06:34:53] <DaveMethvin> :D
[07:10:55] <JamesMGreene> btw Krinkle|detached, I got your nationality confused with sindresorhus's
[07:11:04] <JamesMGreene> (when I said you were Norweigan)
[07:11:26] <JamesMGreene> I knew someone I had be chatting with was Norweigan :-P
[07:17:08] <JamesMGreene> been*
[07:26:35] <JamesMGreene> P.S. Are you guys familiar with the technique used by the "phantomjs" Node/NPM wrapper module? I totally dig it
[07:27:16] <JamesMGreene> I used the same technique and made an Apache/Adobe Flex SDK Node/NPM wrapper module. Very slick.
[07:37:59] <doesallmagic> Project QUnit build #268: FAILURE in 2.3 sec: http://swarm.jquery.org:8080/job/QUnit/268/
[07:38:00] <doesallmagic> james.m.greene: Build: Upgraded to Grunt 0.4.0. Fixes #377.
[07:38:10] <jqcommit> 01[13qunit01] 15JamesMGreene pushed 1 new commit to 06master: 02http://git.io/Wx_yTg
[07:38:10] <jqcommit> 13qunit/06master 142f7cad5 15James M. Greene: Build: Upgraded to Grunt 0.4.0. Fixes #377.
[07:38:45] <JamesMGreene> cute
[07:40:34] <JamesMGreene> Krinkle|detached jzaefferer What is this business?
[07:40:35] <JamesMGreene> [workspace] $ /bin/sh -xe /tmp/hudson6316816996601736015.sh
[07:40:35] <JamesMGreene> + grunt lint qunit build-git:2f7cad5204265725cab67b562d18ee34029ad161
[07:40:35] <JamesMGreene> <FATAL> Unable to find "grunt.js" config file. Do you need any --help? </FATAL>
[07:40:35] <JamesMGreene> Build step 'Execute shell' marked build as failure
[07:41:05] <JamesMGreene> Where's that .sh file from, and why it is calling `grunt lint qunit` or whatever?
[07:41:36] <jzaefferer> JamesMGreene: it didn't run `npm install` before `grunt`, so that happened
[07:42:02] <JamesMGreene> Is that expected?
[07:42:08] <JamesMGreene> i.e. that it doesn't run `npm install`?
[07:42:18] <JamesMGreene> Seems like that would be a problem whatever we change or update deps
[07:42:53] <JamesMGreene> *whenever
[07:43:10] <jzaefferer> that temp sh file is how Jenkins runs shell jobs
[07:43:21] <jzaefferer> it used to run npm install
[07:43:25] <DaveMethvin> supposedly it's to save time, since an npm install before each run would take a while
[07:43:40] <jzaefferer> looks like someone screwed up the job configuration
[07:43:49] <jzaefferer> the order of the two shell commands is reversed
[07:44:09] <jzaefferer> DaveMethvin: not really, its pretty fast since it reuses previously installed modules, unlike Travis
[07:44:34] <jzaefferer> I'm fixing that job now
[07:44:46] <jzaefferer> its really weird
[07:44:57] <JamesMGreene> So again, though, where does the `grunt lint qunit {blah}` come from?
[07:45:07] <JamesMGreene> That's not in the QUnit repo anywhere as of this commit
[07:45:11] <JamesMGreene> So it concerns me
[07:45:59] <jzaefferer> JamesMGreene: can you create a Jenkins account and give me your username? Then I can give you access to job configurations
[07:46:10] <jzaefferer> just changed the shell command tho this: https://gist.github.com/jzaefferer/239cb516ef6631c3be98
[07:46:24] <jzaefferer> JamesMGreene: its inside the Jenkins job
[07:46:28] <DaveMethvin> yeah there is magic here: http://swarm.jquery.org:8080/job/QUnit/configure
[07:47:01] <jzaefferer> in that gist, it first installs dependencies, then runs the default job, then runs TestSwarm, then builds CDN files, then uploads them
[07:47:08] <jzaefferer> I think that makes a lot more sense
[07:47:38] <DaveMethvin> seems like the right order to me
[07:48:02] <jzaefferer> yay, phantom crashed again
[07:48:10] <DaveMethvin> good old phantom
[07:48:31] <jzaefferer> for some reason that didn't abort the job though
[07:49:23] <doesallmagic> Yippie, build fixed!
[07:49:24] <doesallmagic> Project QUnit build #269: FIXED in 2 min 2 sec: http://swarm.jquery.org:8080/job/QUnit/269/
[07:50:18] <jzaefferer> JamesMGreene: there, better, right?
[07:54:56] <JamesMGreene> Apparently not...?
[07:55:01] <JamesMGreene> Grunt failed but the build passed o_O
[07:55:04] <JamesMGreene> Running PhantomJS...ERROR
[07:55:04] <JamesMGreene> >> PhantomJS has crashed. Please read the crash reporting guide at https://github.com/ariya/phantomjs/wiki/Crash-Reporting and file a bug report at https://code.google.com/p/phantomjs/issues/entry with the crash dump file attached: /tmp/1f83c906-7d4c-5760-418ee798-2dfc280c.dmp
[07:55:04] <JamesMGreene> Warning: PhantomJS exited unexpectedly with exit code null. Use --force to continue.
[07:56:12] <JamesMGreene> jzaefferer Can you run it locally on a Mac/Linux box?  Worked fine for me on Windows (obviously)
[07:57:40] <JamesMGreene> "it" = "`grunt` with qunit HEAD"
[07:58:23] <JamesMGreene> though I have a bad feeling I know why it crashed
[08:00:02] <JamesMGreene> We might need to push some PRs to the NPM modules "phantomjs", "grunt-lib-phantomjs", and "grunt-contrib-qunit" to get them updated to PhantomJS 1.8.2
[08:02:46] <doesallmagic> Yippie, build fixed!
[08:02:47] <doesallmagic> Project jQuery Migrate Core 1.x build #36: FIXED in 2 min 19 sec: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/36/
[08:12:23] <JamesMGreene> Moreover, though, jzaefferer / Krinkle|detached: Shouldn't grunt failing have failed the build? :-\
[08:22:30] <jzaefferer> JamesMGreene: I've got write access to grunt-contrib repos, so I can land PRs for those. Not sure if I can publish to npm already, but that probably can happen quickly, too
[08:22:48] <jzaefferer> Also, yes, Phantom failing should fail the build. I don't know why that didn't happen
[08:23:32] <jzaefferer> Maybe grunt didn't exist with a non-zero exit code since phantomjs exist code was null?
[08:25:54] <jzaefferer> JamesMGreene: if in doubt about priorities for QUnit: Apart from things you're already working on anway, let's clear the PR queue. I don't want people to get the idea that the project stagnates due to lots of open PRs
[08:30:47] <JamesMGreene> w.r.t. grunt exit code: maybe?  It did give the usual "Use --force to continue." and "Aborted due to warnings." messages, though, so I would expect it did indeed have an error code
[08:31:19] <JamesMGreene> w.r.t priorities and clearing the PR queue: Sounds good. Like 3 of them are for the PhantomJS runner anyway, which I'm well acquainted with
[08:32:14] <JamesMGreene> http://swarm.jquery.org:8080/job/QUnit/269/console  <-- PhantomJS crash, btw jzaefferer
[08:34:57] <jzaefferer> "/bin/sh -xe /tmp/hudson7551112328476643190.sh" <- "-e" means exit on error, "-x" to output each command. I can't tell why it continues running, but it seems to be a grunt issue, not a jenkins issue
[08:35:16] <jzaefferer> you mentioned you'd have an idea why this happens?
[08:39:38] <gnarf> grunt is exiting with code 0
[08:39:47] <gnarf> https://gist.github.com/gnarf37/3b97c54d53bbbecf1a39
[08:40:32] <DaveMethvin> oh grunt, this is not the time for a happy ending
[08:52:28] <JamesMGreene> Yeah, PhantomJS 1.8.0-1.8.1 had issues with segfaulting iframes: https://code.google.com/p/phantomjs/issues/detail?id=947
[08:52:34] <JamesMGreene> Fixed in 1.8.2
[08:53:27] <JamesMGreene> Oh ben_alman :)
[08:53:49] <ben_alman> cool
[08:54:52] <gnarf> ben_alman: why is that exiting with 0 tho ^^^
[08:55:07] <ben_alman> try it with vanilla phantomjs
[08:55:10] <ben_alman> what's the exit code
[08:55:26] <ben_alman> if phantomjs is exiting with 0 that might be a bug report for them
[08:56:41] <gnarf> well grunt is warning/exiting
[08:56:49] <gnarf> you'd think that would ensure a non-zero exit
[08:56:50] <gnarf> yeah?
[08:57:00] <ben_alman> no
[08:57:14] <ben_alman> grunt is logging something
[08:57:25] <gnarf> "Aborted due to warnings."
[08:57:27] <ben_alman> other than that, i dunno
[08:57:32] <gnarf> screams non-zero exit code to me
[08:57:37] <ben_alman> what's the 0 then
[08:57:41] <ben_alman> the exit code
[08:57:49] <gnarf> the exit code from the ; echo $?
[08:57:50] <ben_alman> weird
[08:58:14] <ben_alman> so is grunt failing to exit with a non-zero exit code sometimes?
[08:59:55] <JamesMGreene> I guess so
[09:00:32] <JamesMGreene> http://swarm.jquery.org:8080/job/QUnit/269/console <-- where it was first noticed
[09:03:22] <jzaefferer> JamesMGreene: holy crap, that's a lot of duplicates on that phantom bug
[09:03:30] <JamesMGreene> Yup
[09:03:33] <JamesMGreene> It was nasty
[09:03:52] <JamesMGreene> I believe there are 2 more dups out there that haven't been merged into yet either
[09:47:23] <jqcommit> 01[13jquery.com01] 15dmethvin pushed 2 new commits to 06master: 02http://git.io/ZIxu3g
[09:47:23] <jqcommit> 13jquery.com/06master 1453e2977 15Dave Methvin: Add WIP versions to the download page.
[09:47:23] <jqcommit> 13jquery.com/06master 14ce0308b 15Dave Methvin: 1.9.3-0
[09:52:43] <jqcommit> 01[13jquery.com01] 15dmethvin pushed 2 new commits to 06master: 02http://git.io/cz6EVw
[09:52:43] <jqcommit> 13jquery.com/06master 14ab9d3a0 15Dave Methvin: Remove older discussion of -git builds.
[09:52:43] <jqcommit> 13jquery.com/06master 14be4f46d 15Dave Methvin: 1.9.4-0
[09:52:55] <DaveMethvin> npm version randomshit
[09:53:24] <DaveMethvin> build
[09:57:58] <jqcommit> 01[13jquery.com01] 15dmethvin tagged 06v1.9.3-0 at 14c455b6a: 02http://git.io/q58L-Q
[11:52:15] <JamesMGreene> gnarf, back
[11:52:17] <JamesMGreene> check PM
[12:25:31] <jqcommit> [13jquery] 15e0ne opened pull request #1198: Ticket #13283: remove .andSelf() alias - fixed (06master...06t-13283)  02http://git.io/X_hGzQ
[12:27:45] <bluesm>  Is there tutorial that teaches jquery by source code of this library ?
[12:49:53] <JamesMGreene> bluesm Not sure I understood your question. Can you clarify?
[12:50:28] <bluesm>   JamesMGreene:  I mean tutorial that explain every method and design of jquery by showing source code :]
[12:50:45] <bluesm>  JamesMGreene:  Source code of jquery itself :)
[12:55:42] <JamesMGreene> Here's an unofficial "annotated source" project for it: http://robflaherty.github.com/jquery-annotated-source/
[12:55:51] <JamesMGreene> Not sure how helpful that would actually be
[12:56:26] <JamesMGreene> And, of course, http://api.jquery.com/ is probably the best place to go. It has good examples for most methods
[12:56:53] <JamesMGreene> If you see something lacking, you can always send a Pull Request to improve it! https://github.com/jquery/api.jquery.com
[12:58:16] <bluesm>  JamesMGreene: I think before I'll notice something "lacking" i have to understand design of jQuery :)
[12:58:38] <bluesm> JamesMGreene: Thanks for helpful links (especially first) :)
[13:00:00] <bluesm> JamesMGreene: But it seems that it isn't updated anymore. 
[13:04:16] <JamesMGreene> Unsurprising since it is, again, unofficial :)
[13:05:14] <JamesMGreene> Keep in mind that all that first link does is basically extract the in-code comments and move them to the left sidebar
[13:20:19] <carldanley> whom can I contact in regards to jQuery stickers for a developer summit?
[13:20:50] <DaveMethvin> carldanley sounds like a job for ajpiano
[13:21:04] <DaveMethvin> we were just talking about that earlier this week
[13:21:44] <carldanley> ajpiano: would you like me follow up with you via email or some other way?
[13:21:53] <carldanley> ty DaveMethvin
[13:25:11] <ajpiano> carldanley: what do you mean "for a developer summit"
[13:25:51] <ajpiano> you want regular jquery stickers for some sort of developer event
[13:25:58] <ajpiano> or like, the jQuery Developer Summit
[13:27:11] <carldanley> oh no just regular stickers for our internal company summit
[13:27:21] <ajpiano> ah ok
[13:27:23] <carldanley> we're doing a few talks on grunt & jQuery
[13:27:29] <ajpiano> when is the event
[13:27:38] <carldanley> April 2-6 in Portland, OR
[13:27:45] <carldanley> for 10up
[13:28:10] <ajpiano> aha
[13:28:35] <ajpiano> i think rworth is still working on actually getting stickers printed
[13:28:42] <ajpiano> send me an e-mail and i'll see what i can do
[13:28:48] <ajpiano> should be able to get grunt stickers if not thing else :p
[13:28:56] <carldanley> I got them in the mail today :)
[13:29:09] <carldanley> what email address?
[13:29:18] <ajpiano> ahhh
[13:29:20] <ajpiano> adam.sontag@jquery
[13:29:31] <ajpiano> should be in your address book alredy, i have e-mailed you from it
[13:29:39] <carldanley> ah sweet, ty
[13:31:01] <carldanley> sent
[17:23:57] <JamesMGreene> calling all knowledgeable jQuery dimensions gurus
[17:25:25] <JamesMGreene> What is the "right" way to get `top` and `left` values for an element that are absolute and relative to the top-left of the page (not viewport) in IE7+?
[17:26:04] <JamesMGreene> IE7+, so can use `obj.getBoundingClientRect()`
[17:26:37] <JamesMGreene> the rect's `top`/`left` values are relative to the viewport
[17:27:15] <snover> plus viewport scroll position equals page position
[17:27:25] <JamesMGreene> So then don't I just need to add `(window.pageYOffset || document.documentElement.scrollTop)` and `(window.pageXOffset || document.documentElement.scrollLeft)` to those?
[17:28:43] <JamesMGreene> The PR submitter missed the IE fallbacks of `scrollTop`/`scrollLeft` but he also substracted `document.documentElement.clientTop`/`clientLeft`... what's up with that?  https://github.com/jonrohan/ZeroClipboard/pull/114/files#L0R110
[17:28:44] <b-ot> JamesMGreene: Pull request #114 by nwah (3h 32m ago): use getBoundingClientRect in _getDOMObjectPosition
[17:30:57] <JamesMGreene> "clientLeft and clientTop: The position of the upper left corner of the content field relative to the upper left corner of the entire element (including borders)"
[17:31:05] <JamesMGreene> I don't follow what the means
[17:31:57] <snover> it’s a nonstandard property
[17:32:24] <snover> but then, so is clientwidth/height
[17:32:40] <snover> mdn used to have neat little graphics about this
[17:32:42] <snover> but they seem to be broken
[17:32:44] <snover> good job
[17:35:19] <JamesMGreene> Oh, it's the border width/height o_O
[17:35:26] <JamesMGreene> So hopefully 0 for most elements
[17:36:19] <JamesMGreene> Probably should've gone with a name like "borderWidthTop" instead ;)
[17:36:38] <JamesMGreene> er
[17:36:57] <JamesMGreene> or borderHeightTop but that would be weird compared to CSS
[17:37:07] <JamesMGreene> borderWidthTop/borderWidthLeft
[17:41:06] <JamesMGreene> So the implication is that `getBoundingClientRect()` gives the `left`/`top` values from INSIDE of the element's border, right?
[17:42:38] <JamesMGreene> oh, no, because he did it for the documentElement
[17:43:07] <JamesMGreene> Must be with regard to this note from ppk/JohnResig: "Finally, in IE 5-7 the rectangles are off by about two pixels. According to John Resig this is caused by the (invisible, but nonetheless present) borders of the <html> element."
[17:45:18] <JamesMGreene> Hmm
[17:46:29] <JamesMGreene> So is there any value to using `pageXOffset`/`pageYOffset` (not supported in oldIE) at all when the alternative `document.documentElement.scrollLeft` is supported in all browsers...?
[17:47:03] <snover> it’s not supported in all browsers, and varies depending upon document mode
[17:47:12] <snover> iirc opera uses document.body as the scrolling element
[17:51:25] <JamesMGreene> `scrollTop` does _not_ work in Chrome
[17:52:20] <JamesMGreene> Well, not for `document.documentElement` anyway
[17:52:27] <JamesMGreene> Looks like it needs to be `document.body.scrollTop` in Chrome
[17:52:36] <JamesMGreene> Ugh
[18:08:31] <JamesMGreene> Do these look about right for calculating an element's absolute top/left relative to the page's top/left (not viewport's)?
[18:08:45] <JamesMGreene> https://github.com/jonrohan/ZeroClipboard/pull/114/files#r3307117 <-- left
[18:08:45] <b-ot> JamesMGreene: Pull request #114 by nwah (4h 12m ago): use getBoundingClientRect in _getDOMObjectPosition
[18:08:48] <JamesMGreene> https://github.com/jonrohan/ZeroClipboard/pull/114/files#r3307134 <-- top
[18:08:50] <b-ot> JamesMGreene: Pull request #114 by nwah (4h 12m ago): use getBoundingClientRect in _getDOMObjectPosition
[18:09:58] <JamesMGreene> whoops, commented on the built file
[18:10:46] <JamesMGreene> ignore those URLs above
[18:10:49] <JamesMGreene> correct URLs:
[18:10:56] <JamesMGreene> https://github.com/jonrohan/ZeroClipboard/pull/114/files#r3307136 <-- left
[18:10:56] <b-ot> JamesMGreene: Pull request #114 by nwah (4h 14m ago): use getBoundingClientRect in _getDOMObjectPosition
[18:11:06] <JamesMGreene> https://github.com/jonrohan/ZeroClipboard/pull/114/files#r3307138 <-- top
[18:11:06] <b-ot> JamesMGreene: Pull request #114 by nwah (4h 14m ago): use getBoundingClientRect in _getDOMObjectPosition
[18:15:19] <JamesMGreene> Anyone? Anyone? Bueller? :)
[18:17:33] <JamesMGreene> mikesherov DaveMethvin timmywil gibson042 scott_gonzalez snover?
[18:22:10] <JamesMGreene> Hmm
[18:22:35] <JamesMGreene> Seems like jQuery doesn't consider the `document.body.scrollTop`/`document.body.scrollLeft` values when calculating offset...?
[18:22:35] <JamesMGreene> https://github.com/jquery/jquery/blob/1.9-stable/src/offset.js#L33-L34
[18:23:39] <JamesMGreene> I thought that was required to get the right value in oldIE if the page didn't have a doctype
[18:24:40] <snover> quirks mode is not supported in jquery.
[18:26:55] <JamesMGreene> oh ok, didn't realize
[18:27:03] <JamesMGreene> I'm OK with dropping those then too
[18:35:04] <JamesMGreene> cool, updated: https://github.com/jonrohan/ZeroClipboard/pull/114
[18:35:05] <b-ot> JamesMGreene: Pull request #114 by nwah (4h 38m ago): use getBoundingClientRect in _getDOMObjectPosition
[18:35:09] <JamesMGreene> Thanks snover
[18:35:16] <snover> np
[18:56:05] <JamesMGreene> Well awesome
[18:56:16] <JamesMGreene> That should solve most of ZeroClipboard's positioning issues
[20:04:15] <JamesMGreene> Krinkle|detached jzaefferer gnarf Can someone get me access to the Jenkins server so I can diagnose the PhantomJS crash?
[22:11:22] <Krinkle> JamesMGreene: I'm not sure that's trivial
[22:11:33] <Krinkle> What crash?
[22:11:49] <Krinkle> can you reproduce it locally?
[22:12:22] <JamesMGreene> I couldn't (on Windows) but gnarf could
[22:12:23] <Krinkle> Testing addons/close-enough/close-enough.html 
[22:12:46] <JamesMGreene> I'm thinking it died when it got to composite
[22:12:50] <JamesMGreene> but perhaps it was before that
[22:13:04] <Krinkle> It didn't output "OK" for close-enough
[22:13:45] <Krinkle> But I'm not sure there's much to do on the server. The error happens everytime and there's just the dump file
[22:13:59] <Krinkle> I can get the dump file and file the bug report it wants.
[22:14:41] <Krinkle> I don't see a lot of options on this one.
[22:16:16] <Krinkle> The reason jenkins is marking it as success is because someone point the shell commands all in one build step
[22:16:25] <Krinkle> and since it is plain shell, only the last command matters.
[22:16:35] <Krinkle> seems kinda obvious.
[22:17:13] <Krinkle> Changing `npm install; grunt` to `npm install && grunt`
[22:17:18] <Krinkle> and putting them in separate built steps
[22:18:43] <Krinkle> Hm.. it seems to be changing the script during execution
[22:18:45] <Krinkle> evil
[22:19:54] <Krinkle> Hm.. the -ex should make it not do that
[22:41:31] <Krinkle> Okay, hunting down the problem. I found it
[22:41:40] <Krinkle> Pretty deep, filing bug against grunt-lib-phantomjs
[23:03:16] <Krinkle> Investigation: https://github.com/gruntjs/grunt-lib-phantomjs/issues/13
[23:03:16] <b-ot> Krinkle: Issue #13 by Krinkle (7s ago): Task not marked as failure if phantomjs fails (with error other than 127)
[23:06:35] <Krinkle> detective Krinkle out
[23:06:38] <Krinkle> :D
