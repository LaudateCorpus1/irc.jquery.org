[02:37:44] <jzaefferer> danheberden gnarf: the qunitjs.com repo is ready for some staging! There's now a script that exports html files without layout, to import into WordPress - what's the next step to get this deployed?
[05:24:40] <mikesherov> .
[06:46:39] <gibson042> .
[06:46:40] <bot-t> (48 hours 9 mins ago) <mikesherov> tell gibson042 you are a wizard
[06:52:23] <DaveMethvin> .
[07:01:07] <timmywil> DaveMethvin: currently -215 https://github.com/timmywil/sizzle/compare/revamp :)
[07:01:35] <DaveMethvin> schweet!
[07:02:25] <timmywil> I need more time to flesh out qsa tests, more css3 selectors, and cache. I have to get back to work now, but that's where it's at right now.
[07:02:56] <timmywil> btw, I went with the encoding from Diego Perini, which is based on the css3 module spec
[07:03:13] <timmywil> It's the best I've seen so far
[07:05:12] <timmywil> ha, "fleeting appearance"
[07:07:36] <timmywil> DaveMethvin: I will be around for the meeting today. Thanks for your patience on Sizzle. Work is crazy busy. I went until 7am one day last week.
[07:08:12] <DaveMethvin> ugh, ok thanks timmywil, we're making forward progress and that's good
[07:49:23] <jaubourg> plop
[07:54:27] <jqcommit> [qunit] scottgonzalez pushed 1 new commit to master: http://git.io/uXUXgg
[07:54:27] <jqcommit> [qunit/master] Added padding on URL config checkboxes. - Scott González
[08:14:52] <jq-jenkins> Project QUnit build #106: FAILURE in 20 min: http://swarm.jquery.org:8080/job/QUnit/106/
[08:14:53] <jq-jenkins> Scott González: Added padding on URL config checkboxes.
[08:41:31] <DaveMethvin> Clearly jenkins doesn't think he needs any padding
[09:05:56] <gnarf> jzaefferer: I think we need to get a little further on the node-wordpress, scott_gonzalez - where are we with that?
[09:08:30] <jzaefferer> DaveMethvin: unlike other jobs, the QUnit job actually has some green: http://swarm.jquery.org:8080/job/QUnit/
[09:08:42] <DaveMethvin> :P
[09:09:26] <jzaefferer> if we'd make better usage of browserstack clients, it would also finishing in less then the timeout of 20 minutes...
[09:17:19] <jzaefferer> gnarf scott_gonzalez danheberden: Let me know what you need on the qunitjs.com side of things
[09:17:42] <gnarf> jzaefferer: soon as I know - I'll let you know :)
[09:18:52] <jzaefferer> okay
[09:18:58] <jzaefferer> until then at least there's something online at http://qunitjs.com/
[09:38:00] <rwaldron> jzaefferer I've been updating it as I add new things
[09:38:15] <rwaldron> I had some folks on IRC give feedback as well as here at bocoup
[09:38:41] <rwaldron> so qunitjs.com is the latest of all current work being done on the site
[09:47:06] <jzaefferer> rwaldron: next time you update, can you start with the gh-pages branch from https://github.com/jquery/web-qunitjs-com - and push just that, without master?
[09:47:37] <rwaldron> that's the branch I'm using, I believe
[09:47:45] <rwaldron> did I mess that up?
[09:57:24] <jzaefferer> you force-pushed and update and added a master branch
[09:57:50] <jzaefferer> having the git folder in a subfolder is a bit weird, but going forward we shouldn't need any more forced updates
[09:58:07] <rwaldron> that sounds familiar
[09:58:10] <rwaldron> sorry :(
[10:03:07] <jaubourg> re
[10:04:11] <rwaldron> gibson042 can you confirm that you have new options on ticket pages?
[10:04:46] <rwaldron> like closing, filing, categorizing and stuff like that?
[10:05:14] <rwaldron> also, what is your email address
[10:06:04] <gibson042> cool
[10:14:03] <scott_gonzalez> gnarf: I need to start over on node-wordpress
[10:14:16] <scott_gonzalez> Last week ended up pretty crazy, so I didn't have time to work with koopersmith
[10:14:33] <gnarf> scott_gonzalez: do you need anything from infra?
[10:14:34] <scott_gonzalez> koopersmith: Got time this week? I'm ready to work on the new implementation.
[10:14:58] <scott_gonzalez> gnarf: Not for the rewrite, we're switching from direct database access to XML-RPC.
[10:15:06] <gnarf> scott_gonzalez: nice
[10:15:37] <scott_gonzalez> I'm not sure how we configure the authorization stuff, but if we need anything in puppet, we'll let you know.
[10:16:23] <gnarf> scott_gonzalez: thanks
[10:17:50] <gnarf> bbiab
[10:25:49] <gibson042> jaubourg yt?
[10:31:05] <jaubourg> yep
[10:31:37] <jaubourg> gibson042: ping
[10:32:00] <gibson042> comment left for you on http://bugs.jquery.com/ticket/11611
[10:40:56] <Mithaldu> jaubourg: hi, could you please explain how making axaj POST requests obey the cache setting would break anything?
[10:41:04] <Mithaldu> ajax, even
[10:41:40] <jaubourg> post requests already obey the cache setting
[10:41:44] <jaubourg> IE8 doesn't
[10:41:51] <jaubourg> headers are set
[10:42:01] <jaubourg> which the way you do it for a POST request
[10:42:26] <jaubourg> (or rather, a POST request should never be cached)
[10:42:38] <jaubourg> which is implicit, but not to IE
[10:43:05] <Mithaldu> is this working up to an answer or supposed to be the answer?
[10:43:34] <gibson042> thanks; that's exactly what I was looking for
[10:44:19] <Mithaldu> fwiw: gibson042: yeah, my fix in that situation was to move the relevant stuff out of there
[10:45:28] <jaubourg> oh, so it must be a fix ;)
[10:45:50] <Mithaldu> is that meant to be irony?
[10:46:03] <jaubourg> man, you got an attitude, you realize that?
[10:46:14] <Mithaldu> no, i'm asking
[10:46:22] <Mithaldu> this is text and i'm bad at recognizing irony
[10:46:35] <Mithaldu> you might be serious or mocking me, but i honestly cannot tell
[10:46:46] <jaubourg>  <Mithaldu> is this working up to an answer or supposed to be the answer? <= I'm good at recognizing sarcasm in any medium
[10:46:54] <Mithaldu> that was serious as well
[10:47:11] <jaubourg> sure
[10:47:17] <Mithaldu> you might've been wanting to lay down some ground before telling me how that breaks something
[10:48:07] <jaubourg> you only cannot see any problem with a POST/GET hybrid request?
[10:48:17] <jaubourg> honestly rather
[10:48:36] <Mithaldu> no, i don't, i am also confused by what you mean with hybrid request
[10:48:51] <Mithaldu> my lack of not seeing any problem might be caused by ignorance about some topic
[10:48:54] <jaubourg> url?param=something <= GET REQUEST parameters
[10:49:23] <Mithaldu> that is a proper thing, actually
[10:49:24] <jaubourg> you effectively now transmit two sets of parameters, on in the POST body, one in the url
[10:49:28] <Mithaldu> yes
[10:49:47] <DaveMethvin> gibson042: http://jquery.org/team/
[10:49:48] <Mithaldu> and in the web app you parse them separately
[10:50:17] <jaubourg> between the web app and the browser, there is a server... actually there are dozens of server implementations
[10:50:29] <jaubourg> which do all kind of crazy assumptions
[10:50:31] <gibson042> DaveMethvin fantastic; thanks! :D
[10:50:36] <jaubourg> which a GET/POST hybrid breaks
[10:50:37] <Mithaldu> i don't see any harm in adding some noise to the query parameters on a request that is only expected to deal with body parameters
[10:50:45] <Mithaldu> like what?
[10:51:03] <jaubourg> like ignore the POST body?
[10:51:12] <Mithaldu> which software does that?
[10:51:24] <DaveMethvin> Mithaldu: when i started this stuff i didn't see any harm in a fixing a lot of stuff
[10:51:34] <Mithaldu> DaveMethvin: that's why i ask :)
[10:51:35] <DaveMethvin> like, it's amazing what some people will do
[10:51:49] <Mithaldu> i work in perl
[10:51:53] <DaveMethvin> i completely agree that it shouldn't break well written code
[10:52:00] <DaveMethvin> WELL WRITTEN CODE
[10:52:03] <Mithaldu> so i see the bending that needs to happen for some backwards compat
[10:52:03] <DaveMethvin> hahahaha
[10:52:04] <gnarf> jaubourg: I have actually used POST /bat?foo=bar
[10:52:23] <DaveMethvin> gnarf yeah so have i at times
[10:52:26] <Mithaldu> but before accepting "it will break something" i'd like to have at least one something clearly defined
[10:52:52] <Mithaldu> also, just to be sure: jquery has no way to identify it's running on ie8?
[10:52:59] <DaveMethvin> i wish we had more visibility into the way ppl are using jQuery code
[10:53:01] <DaveMethvin> but we don't
[10:53:14] <DaveMethvin> we do but we don't use "browser detects"
[10:53:16] <gnarf> Mithaldu: we don't detect browsers, we detect bugs
[10:53:18] <DaveMethvin> they tend to be fragile
[10:53:58] <jaubourg> Mithaldu: my job as the ajax maintainer is to foresee the impossible: I'm the guy who has to tell you to use your workaround because you and I can see it works in your environment (target browser, web server, web app system) but you have no proof it won't blow in your face in some configuration, even mainstream ones... the thing is, you have POST and GET requests and mixing them both could lead to problem in stupid software and we
[10:53:58] <jaubourg> ARE surrounded by stupid software
[10:54:07] <jaubourg> can I give you a name and the bug? no
[10:54:18] <jaubourg> do I know it'll break something? yes
[10:54:37] <Mithaldu> i'd be happy to hear the name of actual software that you observed ignoring body data because there were query parameters
[10:54:48] <jaubourg> ok, I see you don't wanna listen
[10:54:49] <Mithaldu> also
[10:54:55] <jaubourg> I'll be back later
[10:54:57] <Mithaldu> you are asking me literally for the impossible
[10:55:01] <DaveMethvin> Mithaldu: the only way we'll know what breaks is to change the code
[10:55:07] <Mithaldu> you are asking me to prove that it will work in ALL possible situations
[10:55:09] <DaveMethvin> and then wait for people to yell
[10:55:16] <DaveMethvin> and blame us
[10:55:17] <Mithaldu> that is a logical impossibility
[10:55:22] <jaubourg> Mithaldu: that's what the community wants us to do
[10:55:27] <jaubourg> ensure it works everywhere
[10:55:40] <jaubourg> and when it comes to ajax, we'd better be ULTRA-conservative
[10:55:44] <Mithaldu> fact is: you have not seen this break :|
[10:55:57] <DaveMethvin> true dat
[10:56:00] <DaveMethvin> but
[10:56:05] <jaubourg> fact is: I don't wanna ship a version of jQuery that proves you wrong
[10:56:16] <DaveMethvin>  ... what he said ^
[10:56:20] <Mithaldu> solution: never ship any version of jquery
[10:56:37] <jaubourg> Mithaldu: and you still pretend there is no sarcasm?
[10:56:37] <DaveMethvin> well of course
[10:56:42] <DaveMethvin> lol
[10:56:44] <jaubourg> please, go troll elsewhere thank you
[10:56:51] <gnarf> jQuery.ajaxPrefilter( function( opts ) { if ( opts.cache === false ) { opts.url += ( opts.url.indexOf('?') > -1 ? "&" : "?" ) + "_=" + (+new Date); } ) });
[10:57:00] <gnarf> Mithaldu: does that fix the problem?
[10:57:13] <DaveMethvin> there are plenty of solutions
[10:57:25] <Mithaldu> gnarf: possibly!
[10:57:32] <DaveMethvin> i am not sure why we are so focused on the ones that might break other code
[10:57:35] <Mithaldu> it looks like idtrt
[10:57:58] <Mithaldu> i'll give it a try when i'm in the office again, thanks for that
[10:58:34] <Mithaldu> and jaubourg: i honestly wasn't being sarcastic. just think about it: you ask that any change at all to be proven to never break anything. with that restriction you cannot possible release anything at all
[10:58:45] <gnarf> Mithaldu: no problem, its just a very very tricky case, and yes, I 100% agree with jaubourg if we made that a default, it might break someones code somewhere
[10:58:49] <DaveMethvin> Mithaldu: it's always a balancing act
[10:58:57] <gnarf> and tbh - POST requests shouldn't be cached anyway
[10:59:11] <jaubourg> I ask it to be anally retentively within the most restrictive subset of the standards
[10:59:22] <jaubourg> because I know how xhrs are implemented in browsers
[10:59:32] <jaubourg> and if you wanna have a taste, look into ajax/xhr.js
[10:59:37] <jaubourg> it's a nightmare
[11:00:04] <jaubourg> and I know the kind of bugs we had in the past because of stupid servers
[11:00:38] <jaubourg> just browse the bug tracker, for every bug we fixed, we unveiled 2
[11:00:50] <jaubourg> so, yes, I'm ultra careful now
[11:00:55] <Mithaldu> can't say i disagree on that
[11:01:07] <Mithaldu> just that i view uncovering bugs as a good thing :)
[11:01:16] <jaubourg> and just so you know, I used POST/GET hybrids in the past myself :P
[11:01:27] <Mithaldu> also, as a bit of amusements
[11:01:36] <gnarf> Mithaldu: besides, its an odd edge case - and we don't need to support 100% of them
[11:01:37] <Mithaldu> i've used GET requests with body data in the past
[11:01:46] <jaubourg> oh, how did it go?
[11:01:48] <Mithaldu> only because the browser won't make them, doesn't mean you can't
[11:01:51] <Mithaldu> swimmingly
[11:02:01] <Mithaldu> through lighttpd and apache to the web app
[11:02:06] <jaubourg> did you get the body server-side?
[11:02:06] <Mithaldu> everything was picked up fine
[11:02:11] <jaubourg> nice
[11:02:16] <jaubourg> apache is solid
[11:02:29] <Mithaldu> mind: i only did it because i wanted to figure out if it was possible at all
[11:02:33] <jaubourg> well, more solid than most
[11:02:44] <jaubourg> I guess you would have problems regarding caching
[11:02:46] <Mithaldu> you can in fact attach any kind of param or body to any method
[11:02:51] <gibson042> jaubourg: do you know of any way to detect a response coming from cache?
[11:02:53] <Mithaldu> the rest is just convention :)
[11:02:55] <gnarf> Mithaldu: there's a reason jaubourg dreamt up the ajaxPrefilter... you can use it to solve things in ajax globally
[11:03:01] <jaubourg> the server would feel entitled to return the cached version
[11:03:16] <jaubourg> gibson042: no, sadly
[11:03:26] <Mithaldu> gnarf: any chance we could have it documented on the ajax explanation of the cache parameter if it works fine when i try it?
[11:03:32] <jaubourg> to test this kind of stuff, you'd need data url support
[11:03:37] <jaubourg> which you don't have in IE8
[11:04:29] <gibson042> I was wondering if (status === 304 && s.type === "POST") would do it
[11:05:02] <gibson042> but that would break if the actual server response was 304
[11:05:05] <jaubourg> the problem is you'd have to make a request
[11:05:15] <jaubourg> to feature test
[11:05:29] <jaubourg> because you cannot wait for the response to determine if you need to add the param
[11:05:38] <gnarf> Mithaldu: I'm not even sure what the issue is... I've never had this problem
[11:05:44] <jaubourg> since re-issuing the request could cause havoc server-side
[11:05:44] <gibson042> you wouldn't need to feature test until a url was requested the second time
[11:05:46] <Mithaldu> gnarf:
[11:06:00] <Mithaldu> GET /foo - gets the page with the form
[11:06:08] <Mithaldu> POST /foo - submits the form
[11:06:09] <jaubourg> gibson042: read my line just before yourse
[11:06:19] <gnarf> I do this all the time...
[11:06:24] <Mithaldu> if you GET /foo to put the form in a jquery ui dialog
[11:06:32] <Mithaldu> and then have it POST /foo to submit
[11:06:42] <gibson042> that's what I'm saying... we'd only re-request if we made a non-GET non-HEAD request and got data from cache
[11:06:45] <jaubourg> Mithaldu: the prefilter is probably the way to go in that case... + you can make it control it's the right url and not disrupt anything else in your app
[11:06:47] <Mithaldu> in IE8 you'll get the cached GET response to the POST request
[11:07:05] <jaubourg> gibson042: that's a lot of code for an edge case, don't you think?
[11:07:06] <gibson042> which would thus not be a *re*-request
[11:07:23] <gibson042> probably
[11:07:29] <gnarf> so you are XHR'n GET /foo and then POST /foo and getting the GET /foo cache?
[11:07:30] <jaubourg> and the thing is, you may not have hit the cache with the GET/HEAD
[11:07:32] <Mithaldu> jaubourg: yeah, it'll probably be fine
[11:07:33] <gnarf> lame one ie8...
[11:07:38] <Mithaldu> gnarf: correct
[11:07:42] <gibson042> it would depend on the difficulty of detecting an incorrectly cached response
[11:07:43] <Mithaldu> imagine my surprise :P
[11:07:47] <jaubourg> but still have the problem with the POST
[11:08:02] <jaubourg> gnarf: yes, IE is stupid
[11:08:08] <jaubourg> and that's not the half of it
[11:08:10] <gibson042> right
[11:08:10] <gnarf> Mithaldu: yeah, write the prefilter, write a blog post about the odd problem - release your "fix" :)
[11:08:47] <gibson042> when we get a response from the POST, if it came from cache, add cache-buster param and retry
[11:08:54] <jaubourg> gibson042: if you're interested in crazy feature testing: http://jaubourg.net/feature-testing-impossible-data-uri-and-defer
[11:09:00] <gibson042> with step 2 being the elephant in the room
[11:09:03] <Mithaldu> gnarf: i'd rather a release of that in jquery documentation at least ;)
[11:09:17] <jaubourg> gibson042: retry is not an option, what if the 304 is genuine?
[11:09:22] <Mithaldu> because i know i spent a lot of time reading it to figure out why the cache: false was being ignored
[11:09:26] <jaubourg> like it's an application level 304
[11:09:31] <Mithaldu> and only stepping through the debugger made me find it
[11:10:02] <gnarf> Mithaldu: well, I can agree that the `cache: false` documentation should include mention that it only works on 'HEAD' and 'GET' if thats indeed what its doing
[11:10:08] <Mithaldu> and i don't think many jquery people will read my perl blog :D
[11:10:10] <jaubourg> Mithaldu: yeah, I guess it was nightmarish to find, but the fact you're the first one to hit it makes me believe it's as edgy as it can be
[11:10:16] <gibson042> right, we'd have to have a solid way of detecting IE8 giving us a cached response and 304 isn't it
[11:10:24] <Mithaldu> jaubourg: kind of, our UI is crap
[11:10:53] <Mithaldu> gnarf: that's what it does
[11:10:55] <gnarf> jaubourg: out of curiosity - why is the cache param only working on 'HEAD' / 'GET' - was it an arbitrary decision?
[11:11:01] <Mithaldu> in fact, i think that's what it needs
[11:11:06] <jaubourg> heh, I work in PHP most of the time so don't you imagine I dunno about crap ;P
[11:11:16] <Mithaldu> my goondolences
[11:11:29] <gnarf> kswedberg: think we could squeeze this caveat into the docs? ^^^
[11:11:34] <jaubourg> gnarf: it's not needed in other type of requests, they shouldn't be cached
[11:11:59] <jaubourg> Mithaldu: have you tried adding some headers?
[11:12:04] <jaubourg> like a no-cache one?
[11:12:20] <kswedberg> gnarf: reading backlog...
[11:12:28] <Mithaldu> no, because i have no real idea which ones to use or where to insert
[11:12:35] <Mithaldu> i usually don't have to work on that level
[11:12:47] <Mithaldu> and was hoping the docs would show me the way :)
[11:12:50] <gnarf> jaubourg: fair, second question... would removing the "arbitrary" check reduce size?
[11:13:07] <gnarf> I mean, realistically, if someone is passing cache: false, they are expecting it to alter the _GET param right?
[11:13:32] <Mithaldu> the docs don't say that either!
[11:13:34] <gnarf> I would also be confused in Mithaldu's situation to find that the thing that fixes the problem isn't doing anything
[11:13:45] <Mithaldu> i figured out what it was doing by stepping through the debugger :)
[11:14:22] <jaubourg> gnarf: I cannot let a GET/POST hybrid pass... I know it's safe but it's not safe enough for jQuery core
[11:14:26] <jaubourg> you know what I mean
[11:15:03] <jaubourg> it doesn't make sense and has the potential for trouble while the issue only arise in IE8 when the url you POST to was cached as a GET request
[11:15:28] <Mithaldu> great, now i have monty python in my head
[11:15:33] <jaubourg> hehe
[11:15:58] <gnarf> jaubourg: i wish that impl was in my head
[11:16:00] <gnarf> but its not
[11:16:11] <gnarf> does cache:false tweak the data param? or the url param?
[11:16:15] <jaubourg> well, jQuery sometimes looks like the ministry of silly walks, especially in ajax
[11:16:19] <DaveMethvin> okay, finally back to tryna land stuff from the pull requests
[11:16:20] <jaubourg> gnarf: url param
[11:16:50] <jaubourg> yeah, I have to do some work on my port if jQuery deferred to node
[11:17:17] <jaubourg> I want it to be automatic using code transformation
[11:17:24] <jaubourg> anywaynyway
[11:18:46] <sindresorhus_> I've created a bookmarklet to quickly handle tickets with missing jsfiddle testcase:
[11:18:46] <sindresorhus_> https://gist.github.com/f7983e0630cc9f77b905
[11:18:59] <gnarf> jaubourg: I imagine that removing the head/get check would reduce code size by removing a "protection" we aren't even sure that anyone would need/want - I know personally if I had Mithaldu's problem I would expect cache: false to fix it
[11:19:35] <gnarf> It just kinda feels like there is an if in there that is causing an inconsistency in the API
[11:19:50] <gnarf> parameter interoperability and what not
[11:19:58] <ajpiano> sindresorhus_: amazing
[11:20:05] <Mithaldu> maybe add an unsafe uncache option?
[11:20:12] <gnarf> Mithaldu: never - lol
[11:20:17] <Mithaldu> :P
[11:20:20] <kswedberg> so gnarf, can you summarize what should be changed in the documentation?
[11:20:47] <sindresorhus_> ajpiano: :)
[11:21:00] <Mithaldu> kswedberg: explain that cache: false only applies to HEAD and GET
[11:21:44] <Mithaldu> and possibly mention that ajaxPrefilter could be used to fix edge cases
[11:21:54] <gnarf> kswedberg: a) we should probably mention that cache: false works only with HEAD and GET requests, and that it does so by adding/replacing a "_={timestamp}" to the get parameters
[11:22:01] <ajpiano> kswedberg: Mithaldu gnarf don't forget that https://github.com/jquery/api.jquery.com/issues now exists :)
[11:22:12] <gnarf> ajpiano: thanks for the tip ;)
[11:22:37] <gnarf> kswedberg: i forgot to b) in there, but yeah
[11:22:47] <jaubourg> gnarf: the param is NOT needed for other requests except in IE8 when you POST to a URL that you already it with a GET... I prefer to leave the test and be safe
[11:23:09] <gnarf> actually
[11:23:12] <Mithaldu> ajpiano: will try to remember it next tme i have to break out the win32 VMs
[11:23:15] <gnarf> wait a min kswedberg
[11:23:20] <kswedberg> ok
[11:23:41] <ajpiano> Mithaldu: you need to break out VMs to report docs bugs :)
[11:23:45] <ajpiano> ?
[11:23:56] <Mithaldu> i needed to to find the bug
[11:24:04] <gnarf> kswedberg: continue ;)
[11:24:12] <ajpiano> indeed
[11:24:21] <gnarf> jaubourg: looking at how its written, i agree - i doubt we save any bytes by moving that outside that if
[11:25:20] <gnarf> Mithaldu: i don't want to get in the habbit of documenting each edge case on the API site
[11:25:52] <Mithaldu> that's what reference documentation is for :)
[11:25:59] <Mithaldu> the tutorials can be rough and sloppy
[11:26:59] <gnarf> Mithaldu: I argue that is what the bug tracker is for, the api shouldn't have to mention that ie8 sucks
[11:27:31] <ajpiano> we could also add a learning site article on "common fluky things that happen with ajax"
[11:27:39] <ajpiano> that's kind of what that site is gonna be for
[11:28:02] <gnarf> just describe the api - and that the cache=false option only works on head/get, and that it replaces/adds a _=timestamp to your url -- those things are API related
[11:28:27] <Mithaldu> as long as that's in there i'm happy
[11:28:42] <gnarf> although it might be nice to have a "known issues" that references bugs from trac on docs
[11:28:53] <gnarf> linking those up might be a pain though
[11:28:56] <kswedberg> it already mentions adding _= timestamp to the url. but it could be clearer
[11:31:26] <gnarf> https://github.com/jquery/jquery/pull/731#issuecomment-5288079 ;)
[11:31:27] <socialhapy> ★ Pull request on jquery by gnarf37 (2w, 19h ago): 1.8 effects
[11:31:37] <DaveMethvin> yeah so gnarf
[11:32:14] <DaveMethvin> i am tryna get the new build stuff running on my Windows box
[11:32:24] <DaveMethvin> it may take a few minutes
[11:32:37] <gnarf> DaveMethvin: no issue :)
[11:33:26] <gnarf> i gotta walk into work anyway
[11:33:33] <gnarf> be back ~30
[12:09:30] <jqcommit> [jquery] dmethvin pushed 1 new commit to 1.8pre: http://git.io/lNI47Q
[12:09:30] <jqcommit> [jquery/1.8pre] Effects: 1.8 Animation Rewrite - thanks @mikesherov and @gibson042 - Corey Frang
[12:10:30] <jq-jenkins> Project jQuery 1.8 build #35: STILL FAILING in 46 sec: http://swarm.jquery.org:8080/job/jQuery%201.8/35/
[12:10:30] <jq-jenkins> dave.methvin: Effects: 1.8 Animation Rewrite - thanks @mikesherov and @gibson042
[12:26:15] <gnarf> thx DaveMethvin
[12:26:54] <DaveMethvin> still working on my grunt tho, damned Windows hates node
[12:28:18] <gnarf> gibson042: re special easing
[12:28:35] <gnarf> my issue is the fact that a) we allow prop: [ value, "easing" ]
[12:28:51] <gnarf> but since we allow it
[12:28:56] <gnarf> when do we process it
[12:29:17] <gnarf> the reason i don't like it
[12:29:32] <gnarf> is mainly the fact that you can't ever pass an array value to a property
[12:29:44] <gnarf> imagine: backgroundPosition: [ 100, 200 ]
[12:29:51] <gnarf> 200 is not a valid easing func and boo,m
[12:30:11] <gibson042> right
[12:30:19] <gnarf> you can implement this with a prefilter prepended
[12:30:31] <gibson042> so, not an issue with the rewrite as much as an issue with our effects API
[12:30:49] <gnarf> yes, i'm just concerned with where in the pass over the props it happens
[12:30:53] <gnarf> it has to happen before hide/show
[12:30:56] <gnarf> or we break ui effects
[12:31:31] <gnarf> i dunno
[12:31:41] <gnarf> making you have to prepend to accept an array just hurts a little
[12:31:55] <gibson042> I hear ya
[12:32:02] <gnarf> specially when with the tween hooks you should be able to handle get/set arrays
[12:34:06] <gibson042> and it's happening right now in the first prefilter at line 212
[12:34:12] <gnarf> yup
[12:35:13] <gibson042> hmmm
[12:36:56] <gnarf> i mean, its trivial
[12:44:16] <gnarf> lol @ sherov: https://github.com/jquery/jquery/pull/731#issuecomment-5271930
[12:44:18] <socialhapy> ★ Pull request on jquery by gnarf37 (2w, 20h ago): 1.8 effects
[12:44:34] <gnarf> lol at me
[12:44:34] <gnarf> wow
[12:44:41] <gnarf> my email date sort got reversed
[12:44:49] <gnarf> and i read it as he found 4 more after dave's comment
[12:44:58] <gibson042> heh
[12:47:45] <gibson042> so it seems like we have a pivot point in the prefilters where that first one transforms arrays
[12:48:29] <gibson042> and the relevant parameter for implementing prefilters would be if you want to act before vs. after that point
[12:50:06] <gibson042> which is "prepend" for Animation.prefilter
[12:54:11] <gibson042> the other method that comes to mind would be iterating over props to get value (jQuery.isArray(value) ? value[0] : value) and originalValue before calling *any* prefilter and making both available to prefilter functions
[12:56:25] <gibson042> so the specialEasing logic would no longer live in a prefilter at all
[12:57:07] <jqcommit> [jquery] dmethvin pushed 1 new commit to 1.8pre: http://git.io/BKoneQ
[12:57:07] <jqcommit> [jquery/1.8pre] Fix #10067. Create jQuery.quickReady; closes gh-736. - Mike Sherov
[12:58:08] <jq-jenkins> Project jQuery 1.8 build #36: STILL FAILING in 47 sec: http://swarm.jquery.org:8080/job/jQuery%201.8/36/
[12:58:09] <jq-jenkins> dave.methvin: Fix #10067. Create jQuery.quickReady; closes gh-736.
[13:04:24] <gnarf> gibson042: hrm
[13:04:31] <gnarf> originalValue...
[13:05:01] <gnarf> although it would still badly interpret the value[1] as easing
[13:05:58] <gibson042> unfortunately, I think it would be up to the prefilter to fix that
[13:07:50] <gibson042> I really agree with you on prop: [ value, "easing" ] being bad
[13:09:15] <gnarf> DaveMethvin: can we add that to a list of 1.8 deprecations and know that we will prolly never be able to remove it ;)
[13:09:31] <DaveMethvin> which one is that
[13:09:43] <gnarf> animation prop: [ value, "easing" ]
[13:10:25] <gnarf> preferring instead option specialEasing: { prop: "easing" }
[13:10:29] <DaveMethvin> usually i like to add a little bit about why we're doing it  .... so why gnarf? :)
[13:11:18] <gnarf> DaveMethvin: It makes supporting animating "array like properties" i.e a matrix transform whole lot harder
[13:11:18] <DaveMethvin> would "toggle" fit that as well?
[13:12:01] <gnarf> i mean realistically, arrays would probably blow other things up too
[13:12:13] <gnarf> now that i think about it
[13:12:26] <gnarf> perhaps we just say "if you want to support an array, you have to prepend to prefilters"
[13:12:39] <gibson042> definitely that's the best line for 1.8
[13:12:41] <gnarf> and be done with it
[13:13:01] <gnarf> i mean, for the most part, i think most prefilters will probably be prepend anyway
[13:13:21] <gnarf> might change the meaning of that bool
[13:13:25] <DaveMethvin> as far as deprecation goes, i am fine with any deprecation that 1) saves a ton of code or 2) is something we think users shouldn't be doing because it's a bad idea anyway
[13:13:50] <DaveMethvin> but we'll need to explain why in the notes about deprecation
[13:14:16] <gnarf> DaveMethvin: I am of the opinion that an easing function is not a "value" and therefore should live in the options instead of the property
[13:14:30] <DaveMethvin> totally agree
[13:14:33] <DaveMethvin> so it's a confusion thing
[13:15:17] <gnarf> line 209 - 215 go away
[13:15:53] <gnarf> line 208 goes into jQuery.speed
[13:17:08] <gnarf> line 260 would need a type check for strings before calling exec maybe?
[13:17:55] <gnarf> at that point, arrays can get all the way through to tweenHooks
[13:18:57] <gibson042> gnarf: the boolean basically fails if someone wants to make a prefilter that operates last on complex values or first on actual (independent of easing) string values
[13:19:18] <gibson042> and I wouldn't even check type on line 260; it's fine as-is
[13:19:49] <gnarf> gibson042: yeah, hence the "issue"
[13:19:56] <gnarf> i mean right now there are two prefilters
[13:20:51] <gnarf> 1) support the "array syntax" for per-property easing & set overflow props if height/width are defined on a node - 2) handle any "hide" "show" or "toggle" values
[13:21:38] <gibson042> yeah
[13:21:54] <gnarf> you either want to do something before those or after those
[13:22:04] <gnarf> if you want to do something at all
[13:23:12] <gibson042> I can see problems if someone wants their prefilter to fire "first" and expects to operate on string values
[13:23:18] <gibson042> just to draw things into focus
[13:23:38] <gibson042> because they'd basically have to copypasta the specialEasing block
[13:24:19] <gnarf> gibson042: I think I've succeeded in explaining the "issue" :)
[13:24:30] <gibson042> yeah yeah ;)
[13:26:17] <gnarf> so - the other one up for deprecate
[13:26:21] <gibson042> having that working scenario makes me want originalProps even more
[13:26:41] <gnarf> gibson042: line 76
[13:27:09] <gnarf> gibson042: exposed via the "trust" model
[13:27:22] <gnarf> I anticipated that
[13:27:23] <gibson042> mmm, right
[13:28:04] <gibson042> I'm going to let the prefilters issue simmer for a couple of days and come back to it
[13:29:02] <gnarf> gibson042: there is a reason "propFilter" runs first
[13:29:47] <gnarf> gibson042: but it could make sense to move the array logic into propFilter too
[13:29:54] <gnarf> we do have originalProperties after all
[13:30:01] <gnarf> I just don't like the value[1] getting used for easing
[13:30:18] <gnarf> maybe we could make it ensure that value[1] is an easing fn ?
[13:30:33] <gnarf> considering right now its a script error if you pass an invalid
[13:30:46] <gibson042> no, I don't think that's quite right
[13:30:48] <gibson042> is it?
[13:31:01] <gibson042> I see
[13:31:14] <gnarf> gibson042: http://jsfiddle.net/NmLck/32/
[13:32:39] <gnarf> whereas letting an array fall through just ends up with NaNpx ;)
[13:33:43] <gibson042> I think instead we'd be "holding" the candidate specialEasings; I'm just not sure how the prefilters would tell us to throw them out
[13:34:55] <gibson042> maybe return a hash of the props that should use the complex value?
[13:35:30] <gnarf> return value of a prefilter is interpreted as a setup animation object
[13:35:51] <gibson042> damn, that's right
[13:35:53] <gnarf> so a prefilter could return a second call to animate with different opts
[13:36:05] <gnarf> or its own impl that provides .stop() and .finish()
[13:36:39] <gibson042> what about receiving the candidates as a parameter in order to delete from directly?
[13:36:55] <gibson042> it's just so damn ugly any way we slice it
[13:37:17] <gnarf> gibson042: all cuz of someone's bright idea to hack easing in as an array ;)
[13:42:54] <gibson042> jQuery.Animation.prefilter(function( elem, props, opts ) {
[13:42:54] <gibson042>   ...
[13:42:54] <gibson042>   delete this.simplifiedProps[ handledComplexProp ];
[13:42:54] <gibson042>   ...
[13:42:54] <gibson042> });
[13:43:01] <gibson042> U-G-L-Y
[13:46:09] <mikesherov> .
[13:46:25] <mikesherov> DaveMethvin: have you started using pulley for jQuery?
[13:46:30] <rwaldron> pffft
[13:46:32] <DaveMethvin> not yet
[13:46:45] <DaveMethvin> shhh don't say pulley in front of rwaldron!
[13:46:50] <mikesherov> Oh, 0.2.2 should be close enough to what you want
[13:46:58] <rwaldron> not sucking?
[13:47:02] <mikesherov> Hey
[13:47:04] <DaveMethvin> lol mean
[13:47:15] <DaveMethvin> i may give it another try
[13:47:18] <DaveMethvin> first i have to get node working
[13:47:20] <DaveMethvin> with grunt
[13:47:22] <DaveMethvin> on windows
[13:47:22] <mikesherov> The problem was that 0.2.0 only supported merging to master
[13:47:34] <mikesherov> from John's original code.
[13:47:38] <rwaldron> mikesherov yeah, exactly
[13:47:42] <mikesherov> 0.2.2 works as expected
[13:47:44] <rwaldron> my first push to jQuery
[13:47:45] <rwaldron> ever
[13:47:50] <DaveMethvin> mikesherov: it was definitely purpose-built
[13:47:50] <rwaldron> fucked.
[13:47:51] <mikesherov> D'oh
[13:48:03] <mikesherov> sorry Rick
[13:48:06] <rwaldron> i was on 1.8pre and it snuck behind me
[13:48:11] <rwaldron> over to master
[13:48:13] <rwaldron> dumb.
[13:48:16] <mikesherov> yeah, dumb
[13:48:19] <mikesherov> anyway....
[13:48:27] <rwaldron> DaveMethvin why issues are you still having?
[13:48:32] <mikesherov> 0.2.2 has pretty much all the stuff you want
[13:48:47] <mikesherov> and obviously, I'll prioritize any issues you guys are having with it
[13:48:49] <DaveMethvin> can't get grunt working right yet
[13:48:58] <DaveMethvin> so mikesherov do you have grunt working on windows
[13:48:59] <mikesherov> as you are the only real users at the moment :-P
[13:49:07] <mikesherov> No, I can't get it to work
[13:49:13] <mikesherov> path resolution issues
[13:49:14] <DaveMethvin> oh good, i mean bad
[13:49:15] <DaveMethvin> yest
[13:49:29] <DaveMethvin> it's the hassle of where it is putting everything by default
[13:49:37] <DaveMethvin> plus the fact the default paths have spaces
[13:49:38] <rwaldron> mikesherov DaveMethvin so... _not_ telling me your having issues doesn't get them fixed
[13:49:52] <mikesherov> yeah, dfiling bugs does :-)
[13:49:52] <DaveMethvin> i just started playing with it after our meeting today
[13:50:10] <rwaldron> What version of node are you both using?
[13:50:10] <mikesherov> rwaldron: I think the issue is with mostly node itself
[13:50:24] <mikesherov> 0.6.11
[13:50:26] <mikesherov> on cygwin
[13:50:44] <rwaldron> npm installed?
[13:50:48] <mikesherov> yes
[13:50:54] <rwaldron> does grunt install?
[13:50:57] <mikesherov> it's not grunt's faul;t
[13:51:01] <DaveMethvin> grunt instaled for me
[13:51:06] <rwaldron> ok, well then... good to know
[13:51:11] <DaveMethvin> the grunt packages don't
[13:51:12] <mikesherov> yeah, I can't point to grunt as the problem
[13:51:22] <mikesherov> which is why I'm not reporting a bug just yet
[13:51:22] <DaveMethvin> the grunt taskss
[13:51:28] <DaveMethvin> exactly, same here
[13:51:37] <rwaldron> DaveMethvin "grunt packages"?
[13:51:40] <DaveMethvin> i need to get further into debugging to figure out who is causing the issues
[13:51:52] <DaveMethvin> sorry all the detail has scrolled off
[13:51:52] <rwaldron> maybe we can screen share
[13:52:04] <DaveMethvin> i had to revert to 0.4.7 to land the animation stuff
[13:52:09] <rwaldron> later or whatever
[13:52:18] <DaveMethvin> so my plan was to reinstall 0.6.x and try again
[13:52:23] <rwaldron> ok
[13:52:28] <rwaldron> well, let me know how that goes
[13:52:30] <DaveMethvin> it installs grunt in my profile deeply but dosen't put it on the path
[13:52:46] <rwaldron> npm install grunt -g?
[13:52:52] <DaveMethvin> yep
[13:52:56] <DaveMethvin> that part works
[13:52:57] <rwaldron> weird.
[13:52:59] <DaveMethvin> afaict
[13:53:02] <rwaldron> but then no "grunt"?
[13:53:17] <DaveMethvin> oh its there but not on the path, among other issues
[13:53:24] <rwaldron> ugh
[13:53:31] <rwaldron> let me know how the reinstall goes
[13:53:40] <DaveMethvin> i find it and run it but then the grunt-size-thing isn't there
[13:53:44] <DaveMethvin> and it can't find it
[13:53:47] <rwaldron> yeah
[13:53:49] <DaveMethvin> even after i install that
[13:53:52] <rwaldron> npm install
[13:54:02] <gnarf> npm install grunt-size-thingy
[13:54:05] <gnarf> :)
[13:54:06] <mikesherov> yeah, same issues
[13:54:12] <gnarf> i had an issue with that too
[13:54:17] <mikesherov> I mean, part of the problem is that node/npm specifically hate cygwin
[13:54:17] <rwaldron> yeah, what happens when you install it directly
[13:54:24] <DaveMethvin> definitely need moar docs
[13:54:25] <rwaldron> npm install grunt-compare-size?
[13:54:35] <gnarf> (without -g )
[13:54:56] <DaveMethvin> yeah once i find npm.cmd i can do that
[13:54:56] <rwaldron> right, it doesnt need to be global
[13:55:04] <rwaldron> hm.
[13:55:05] <rwaldron> ok
[13:55:05] <DaveMethvin> but i can't figure out where it hid the thing once it installs
[13:55:25] <rwaldron> but you installed grunt with npm?
[13:55:42] <DaveMethvin> yep, also the npm install -g grunt does give some warnings which i will copy next time
[13:55:49] <rwaldron> ok
[13:55:57] <rwaldron> I have to step away for a moment
[13:55:57] <DaveMethvin> mostly like "this shizz is deprecated"
[13:56:29] <mikesherov> https://github.com/joyent/node/wiki/Building-node.js-on-Cygwin-%28Windows%29
[13:56:57] <DaveMethvin> although i don't care about building it, just getting it running
[13:57:05] <DaveMethvin> node is really annoying on windows
[13:57:29] <DaveMethvin> especially now that i can only use make with 0.4.x and grunt with 0.6.x
[13:57:30] <sindresorhus_> everything is annoying on windows...
[13:57:47] <koopersmith> scott_gonzalez: Just saw your ping. Later in the week works for me.
[13:57:48] <DaveMethvin> it's just that the ppl who build this don't care/test on windows so it is doubly hard
[13:57:56] <mikesherov> Agreed
[14:00:26] <sindresorhus_> mikesherov:  When you got the time, would love discuss https://github.com/jeresig/pulley/issues/50
[14:00:26] <socialhapy> ★ Issue #50 on pulley (sindresorhus; 4d, 7h ago): Use "git config" instead of config.json for all settings
[14:01:22] <mikesherov> Yeah, it makes sense to have the auth global, and the other local
[14:01:43] <mikesherov> don't really have time for lengthy discussion at the moment, but that's all I'm thinkin
[14:02:20] <sindresorhus_> Whenever you have some time, feel free to ping me or add it to the issue ;)
[14:50:37] <scott_gonzalez> koopersmith: Sounds good. I assume you're back in CA and therefore 3 hours behind me...
[14:51:10] <koopersmith> scott_gonzalez: nope, still on the east coast. I am a nomad :)
[17:23:46] <mikesherov> .
[17:35:24] <mikesherov> DaveMethvin: is it cool to start submitting pull requests that assume the "shared_<varname>" concept is already in place? The only problem I see is that they won't really pass JSHint for now
[17:35:35] <mikesherov> until we're using grunt to lint only the built file
[17:35:57] <DaveMethvin> well, if i ever get grunt/node working ....
[17:36:05] <mikesherov> right
[17:36:07] <DaveMethvin> i will be able to run this stuff
[17:36:35] <DaveMethvin> seems i need to fix that first
[17:36:42] <DaveMethvin> i got distracted by some other stuff
[17:36:57] <DaveMethvin> have a flight out tomorrow morning
[17:37:06] <mikesherov> have a safe flight!
[17:37:14] <mikesherov> In the meantime, I'm going to see if I can get grunt going myself
[17:37:19] <DaveMethvin> did you find any other info on node for windows?
[17:37:27] <DaveMethvin> i mean, it's kind of close but flakey
[17:37:29] <mikesherov> not really
[17:37:36] <mikesherov> I'm going to try a cygwin alternative
[17:38:06] <DaveMethvin> it's putting the grunt setup in my profile but i don't have a path to there
[17:38:16] <DaveMethvin> it's almost like the node guys tried to act like a windows app
[17:38:18] <DaveMethvin> which sucks
[17:38:33] <DaveMethvin> b/c that just makes it harder for it to run on cygwin
[17:38:43] <mikesherov> right
[17:38:55] <DaveMethvin> so they are putting stuff in "c:\program files (x86)\node"
[17:38:57] <DaveMethvin> WTF
[17:39:12] <DaveMethvin> then the space in the file name prevents it from working a lot of the time in a makefile
[17:39:58] <DaveMethvin> let me see what i can do tonight, it would be good to get grunt working
[17:40:07] <mikesherov> I would love a tutorial
[17:40:36] <DaveMethvin> i get the general idea of grunt but it's nowhere near turnkey atm
[17:42:07] <mikesherov> wait a sec, the current JSHint ALREADY checks the built file
[17:42:15] <mikesherov> hmmm
[17:42:23] <mikesherov> no need to wait for grunt for that
[17:43:19] <DaveMethvin> i was cheating for that last one and using the old build stuff
[17:43:24] <DaveMethvin> it pretty much still works
[17:43:39] <DaveMethvin> but of course i can't use the same node so i have two installed
[17:43:45] <DaveMethvin> and switch
[17:44:40] <mikesherov> yeah, I'm still using the old one
[17:45:14] <mikesherov> so, I'm going to do ahead and submit pull requests that assume built file only testing, considering JSHint already doesn't complain
[17:45:29] <mikesherov> it's time to save those bytes
[17:46:47] <DaveMethvin> those bytes aren't gonna save themselves you know
[18:43:34] <scott_gonzalez> gnarf: Just started testing out the WP XML-RPC stuff.
[18:43:50] <scott_gonzalez> It just uses normal user/pass credentials as part of the POST data.
[18:44:00] <scott_gonzalez> So nothing special needed there.
[18:44:26] <scott_gonzalez> We do need to enable XML-RPC in the settings, so I assume that'll need to happen via puppet.
[18:44:39] <scott_gonzalez> Not sure how the rest of the settings are being done.
[21:11:47] <nacin> scott_gonzalez: gnarf: most settings would probably happen via an install script. for XML-RPC, the plugin that runs on individual sites can force it to on with one line of code.
