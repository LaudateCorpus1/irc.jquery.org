[04:20:27] <gnarf> scott_gonzalez ajpiano and everyone - the live servers should update on symver tags now
[04:20:32] <gnarf> semver
[04:21:58] <gnarf> kborchers: ^^^
[04:33:40] <scott_gonzalez> gnarf: yay
[04:33:52] <scott_gonzalez> gnarf: What about web-base-template?
[04:34:00] <gnarf> same
[04:35:36] <gnarf> as long as the tag matches /^v?\d+\.\d+/
[04:35:41] <gnarf> it should pull
[06:52:38] <ben_alman> hey guys
[06:52:57] <ben_alman> i've noticed that jQuery.parseXML( "<p>Not a <<b>well-formed</b> xml string</p>" ); from the unit tests doesn't throw an exception in PhantomJS
[06:53:06] <ben_alman> and was wondering if you knew what was going on
[06:53:25] <ben_alman> it's literally the only unit test that fails in PhantomJS
[06:53:43] <ben_alman> and i'm curious if there's a PhantomJS bug that can be fixed here
[07:09:26] <ben_alman> ok in PhantomJS, this has a length of 0
[07:09:27] <ben_alman> (new DOMParser).parseFromString('<p>Not a <<b>well-formed</b> xml string</p>', 'text/xml').getElementsByTagName('parsererror').length;
[07:09:33] <ben_alman> it should probably be 1.
[07:09:47] <ben_alman> or at least > 0
[07:10:08] <ben_alman> i'm going to file a phantomjs issue
[07:10:50] <ben_alman> looks like it's an issue already http://code.google.com/p/phantomjs/issues/detail?id=428&q=domparser
[07:15:34] <ben_alman> issue filed http://code.google.com/p/phantomjs/issues/detail?can=2&start=0&num=100&q=domparser&colspec=ID%20Type%20Status%20Priority%20Milestone%20Owner%20Summary&groupby=&sort=&id=428
[07:30:34] <scott_gonzalez> ben_alman: If only all bug reporters handled issues like you...
[07:39:36] <ben_alman> scott_gonzalez: this is why i don't report a lot of bugs
[07:39:40] <ben_alman> i simply don't have the time
[07:39:56] <scott_gonzalez> heh
[09:45:59] <DaveMethvin> timmywil: ping on http://bugs.jquery.com/ticket/12436
[09:46:12] <DaveMethvin> posted in the wrong room...
[10:40:30] <gnarf> DaveMethvin: did you see the botio tests?
[10:40:43] <DaveMethvin> oh yeah gnarf
[10:40:53] <DaveMethvin> lots of them!
[10:40:55] <gnarf> DaveMethvin: seems like it will be useful/nice
[10:43:57] <jqcommit> [api.qunitjs.com] jzaefferer pushed 1 new commit to master: http://git.io/Nsk2Yw
[10:43:57] <jqcommit> [api.qunitjs.com/master] Update grunt-wordpress and grunt-jquery-content - Jörn Zaefferer
[10:52:36] <johnbender> ryanneufeld: I just want to to work fast on linux with pentadactyl
[10:52:50] <johnbender> zomg
[10:52:57] <johnbender> I was scrolled up like 3 days backward in time
[10:53:00] <ryanneufeld> johnbender: wat?
[10:53:03] <johnbender> ryanneufeld: talking about firefox
[10:53:10] <ryanneufeld> oih
[10:53:16] <ryanneufeld> I was like wtf
[10:53:18] <ryanneufeld> wat
[10:53:18] <b-ot> man i really tought the business of JS was to call function
[10:58:07] <timmywil> DaveMethvin: ah, thanks for replying
[11:32:56] <chewbranca> hey all, just took a peek in the topic for #jquery and saw this dev channel
[11:33:11] <chewbranca> just wanted to send you guys a quick ping to let you know microsoft and google cdn urls are broken for 1.8.1
[11:33:43] <chewbranca> https://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js 404s
[11:33:55] <chewbranca> same with http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.8.1.min.js
[11:34:04] <chewbranca> http://code.jquery.com/jquery-1.8.1.min.js does work though
[11:44:01] <DaveMethvin> chewbranca: you should contact microsoft and google, we do not control their CDNs
[11:45:52] <chewbranca> enh… its the links from: http://docs.jquery.com/Downloading_jQuery#CDN_Hosted_jQuery
[11:46:02] <chewbranca> pointing it out to you guys, do with it as you will
[11:46:24] <gnarf> paul_irish: ^^^
[11:46:38] <gnarf> paul_irish: report #3 that google CDN is slow in uploading our 1.8.1 ;)
[11:48:51] <DaveMethvin> i never know what to do about those links
[11:49:19] <DaveMethvin> if i don't update them immediately after a release, there is no way i have a todo to go back and change them when google and microsoft finally put their files up
[11:49:43] <DaveMethvin> and then people complain that we are pointing to 1.8.1 for our own files but 1.8.0 for theirs
[11:49:46] <DaveMethvin> so i can't win
[11:50:21] <DaveMethvin> maybe we should just pull out those explicit links and send people to the general cdn pages for google and microsoft
[11:50:25] <gnarf> DaveMethvin: what about if we added the "disclaimer" to the download page during the first few days of a release
[11:50:28] <DaveMethvin> that way we wouldn't need to update them
[11:50:49] <DaveMethvin> i like just linking to their generic cdn pages better
[11:51:05] <DaveMethvin> plus, i dunno where that page will end up since it's on docs.jquery.com which is going away
[11:51:10] <gnarf> but then like, they are looking for 1.8.1 and end up with 1.8.0
[11:51:24] <gnarf> DaveMethvin: jquery.com/download
[11:51:27] <gnarf> which is still 1.8.0
[11:51:43] <DaveMethvin> THATS BECAUSE WE HAVE TOO MANY DOWNLOAD PAGES! :D
[11:51:44] <gnarf> I have the commit for 1.8.1 up there, but haven't pushed the tag because of MS/Goog
[11:52:09] <DaveMethvin> i have a huge checklist of places where  it has to be changed every release
[11:52:16] <DaveMethvin> it should be in one place
[11:52:21] <DaveMethvin> like jquery.com/download only
[11:52:40] <gnarf> #jquery topic
[11:52:53] <gnarf> :)
[11:52:59] <DaveMethvin> yeah
[11:53:06] <gnarf> DaveMethvin: so btw, /botio test should work on any PR now in jquery
[11:53:16] <gnarf> I still gotta finish off like 2 things here
[11:53:20] <DaveMethvin> that will be awesome
[11:53:26] <gnarf> to make sure it runs 24/7
[11:53:45] <gnarf> usefulness vote btw
[11:53:52] <DaveMethvin> i think it deserves time off, make it run 23/6 :P
[11:54:10] <gnarf> should I cp dist/*.js to the public folder for the botio build
[11:54:40] <DaveMethvin> that should be enough...i think
[11:55:19] <gnarf> so like right now http://swarm.jquery.org:8000/d31c9de3f085af9/output.txt
[11:55:25] <gnarf> it just swarms it
[11:55:30] <gnarf> but with http://swarm.jquery.org:8000/d31c9de3f085af9/jquery.js
[11:55:48] <gnarf> that build could have its own jsperf/fiddle etc include that file too
[11:56:49] <DaveMethvin> oh...THAT could be useful as well
[11:56:59] <DaveMethvin> and maybe clean them up after a few months or whatever
[12:11:20] <ryanneufeld> so the summit is in VA... never been there before
[12:12:01] <ajpiano> it's like a suburb
[12:12:14] <DaveMethvin> it's like new york, but further south
[12:12:24] <DaveMethvin> and less smelly
[12:12:25] <ryanneufeld> gnarf: a lot of people ask me to do things that you usually do, when this happens again we should do it together next time, so maybe i could do those things
[12:12:39] <gnarf> ryanneufeld: sounds like a plan
[12:12:51] <gnarf> also
[12:12:51] <gnarf> ?ts
[12:12:52] <bot-t> That's Sexual™
[12:30:30] <ryanneufeld> gnarf: well, that doesn't make it any less fun
[13:25:06] <timmywil> DaveMethvin: what do you think of adding benchmark to our node dependencies. I wouldn't mind having some local perf tests.
[13:25:27] <timmywil> not that elusive speed folder is totally...ehem.
[13:25:38] <DaveMethvin> circa 2009 :)
[13:26:12] <DaveMethvin> yeah, timmywil, there was a ticket about what we needed as dependencies vs devDependencies
[13:26:15] <timmywil> well, we don't actually need benchmark as a node dependency
[13:26:25] <timmywil> in fact, that's a bad idea
[13:26:45] <DaveMethvin> i think it would just be loaded as a devDep wouldn't it?
[13:27:12] <timmywil> to run in all browsers, it should load client side.
[13:27:27] <timmywil> maybe a node tester would be useful though
[13:27:34] <DaveMethvin> oh browsers
[13:28:23] <DaveMethvin> so you want to run benchmarks on real browsers? we'd need our own test harness for that and not node tho, right?
[13:28:45] <DaveMethvin> the stuff in the /speed folder is such junk
[13:29:11] <DaveMethvin> but yeah, we need some sort of perf sanity check to prevent embarrassing regressions there
[13:29:29] <DaveMethvin> cough delegated events cough
[13:30:31] <timmywil> DaveMethvin: test harness?
[13:30:56] <DaveMethvin> well i'm not sure how  you'd bench inside a real browser?
[13:31:20] <timmywil> just need a test page
[13:31:55] <timmywil> kinda like there is now, but I'd suggest replacing that old "benchmark.js" with bestie's
[13:32:11] <timmywil> the node thing was me getting sidetracked
[13:32:43] <timmywil> IF we wanted, we COULD run tests in v8 using the benchmark node module
[13:32:44] <DaveMethvin> yeah i wasn't sure where node fit in
[13:32:55] <timmywil> but that's probably not all that useful
[13:33:17] <DaveMethvin> it seems like we want to run in each real browser
[13:33:56] <DaveMethvin> then determine what we want to test, and what mix
[13:34:11] <timmywil> exactly
[13:34:14] <ryanneufeld> scott_gonzalez: yt?
[13:34:22] <timmywil> DaveMethvin: I'll want to start with selector perfs
[13:34:27] <DaveMethvin> i mean, you could just load manipulation.js unit tests but that probably isn't representative
[13:34:57] <DaveMethvin> getting some granularity on individual operations would be nice
[13:35:14] <DaveMethvin> come to think of it, we will want this when we refactor 2.0
[13:35:34] <DaveMethvin> hmm
[13:36:49] <timmywil> I mean, it's easy enough to perf test one operation on jsperf, but we should really have a massive performance suite
[13:39:37] <timmywil> DaveMethvin: I'm thinking lodash's perf tests are a good boilerplate to start off, but I'm basically just going to revamp the speed folder
[13:39:48] <timmywil> starting with Sizzle
[13:39:50] <timmywil> what you think?
[13:40:03] <DaveMethvin> sounds good ... i was just looking at the window.performance stuff to see what it might buy us http://www.w3.org/TR/navigation-timing/
[13:40:15] <DaveMethvin> supported in ie9, chrome, ff
[13:40:58] <timmywil> DaveMethvin: I imagine dalton and matjas are following that closely
[13:41:14] <DaveMethvin> yeah they might be interested in  helping
[13:42:05] <timmywil> well, I'm hoping benchmark.js will make use of any native performance methods, which would be help enough
[13:42:45] <DaveMethvin> oh true it prolly does
[13:43:00] <DaveMethvin> well it's gotta be better than what is there
[13:43:07] <DaveMethvin> i played with it about 6 months ago
[13:43:13] <DaveMethvin> the benches are sooooo bad
[13:43:18] <timmywil> haha
[13:43:21] <timmywil> for jQuery?
[13:43:28] <DaveMethvin> $("body").append("junk") in a loop
[13:43:37] <timmywil> yea, good times
[13:43:43] <scott_gonzalez> ryanneufeld: hey
[13:43:45] <timmywil> no need to loop that one
[13:43:48] <timmywil> :)
[13:44:01] <DaveMethvin> so go to it timmy
[13:44:08] <timmywil> cool
[13:44:12] <ryanneufeld> scott_gonzalez: I already replied in the group. I'm lacking context on your docs question
[13:44:15] <timmywil> I'll do it on a branch
[13:44:26] <scott_gonzalez> ryanneufeld: Ok, responding now.
[13:44:53] <timmywil> DaveMethvin: should we perf against other libraries or just different versions of jQuery?
[13:45:06] <DaveMethvin> i think we shoudl just compare to ourselves
[13:45:07] <timmywil> I'd like to perf against the major selector engines
[13:45:19] <timmywil> but maybe not other libraries for jQuery as a whole
[13:46:03] <DaveMethvin> the current stuff tries to compare against libs (circa 2010) but it would be hard to build something representative in all of them
[13:46:06] <ryanneufeld> scott_gonzalez: thanks, I wasn't lurking in #jqueryui-dev, so I'm a little out of touch
[13:46:13] <DaveMethvin> i think you have an easier time of doing that with selector engines alone
[13:46:33] <scott_gonzalez> ryanneufeld: It's definitely a bit confusing with three levels of types.
[13:46:47] <ryanneufeld> An zero context to what they mean :p
[13:46:50] <DaveMethvin> the interface spec is more tightly defined and not subject to API design issues in general
[13:46:55] <scott_gonzalez> Which is why I'm wondering if we should even go that deep in the docs.
[13:47:03] <timmywil> DaveMethvin: my thoughts exactly, we couldn't provide reliable comparisons given all of the different APIs, but selector engines at least have a select function that returns an array
[13:47:27] <DaveMethvin> that makes sense timmywil
[13:47:36] <ryanneufeld> scott_gonzalez: it's 6:1 1/2 dozen IMHO
[13:48:04] <ryanneufeld> scott_gonzalez: on one hand you'll have people not reading them anyway, and asking "how do I make ajaxes my contents"
[16:13:01] <johnbender> scott_gonzalez: question for you about your "Documenting Complex Options" email
[16:13:10] <scott_gonzalez> yeah?
[16:13:20] <johnbender> scott_gonzalez: not sure how to phrase this ...
[16:13:28] <johnbender> none of the projects use jsdoc
[16:13:32] <johnbender> I was wondering if that's intentional
[16:13:38] <johnbender> ?
[16:13:38] <scott_gonzalez> yes
[16:13:52] <johnbender> scott_gonzalez: what's the reason - just crappy?
[16:14:22] <scott_gonzalez> Document code within commnets is pretty gross, and it's impossible to make changes at will.
[16:14:36] <johnbender> scott_gonzalez: what do you mean by "make changes at will"
[16:14:44] * johnbender is making notes
[16:14:48] <scott_gonzalez> We update api.jquery.com daily.
[16:14:52] <johnbender> ah!@
[16:15:05] <johnbender> you guys pointed out that tying the two together cause issues with releases etc
[16:15:26] <scott_gonzalez> Yup, you don't want the docs for a release to be frozen.
[16:15:38] <scott_gonzalez> You want to ability to update as you notice that there are bugs or missing information.
[16:15:55] <johnbender> scott_gonzalez: I suppose that with a stable api like jquery/UI the chances for divergance between the two is almost non existant
[16:16:01] <johnbender> *existent
[16:16:20] <johnbender> (the only counter argument I could muster)
[16:16:42] <scott_gonzalez> Well, you can counter your own argument with "Most developers don't remember to update comments."
[16:16:52] <johnbender> scott_gonzalez: so true
[16:17:01] <scott_gonzalez> And the person writing the code is usually not the best person at writing end user docs.
[16:17:13] <scott_gonzalez> Which is why we have a content team :-)
[16:17:22] <johnbender> scott_gonzalez: yah, but for type signatures it makes perfect sense
[16:17:29] <scott_gonzalez> sure
[16:17:33] <johnbender> assuming you discard the other shortcomings
[16:17:51] <johnbender> scott_gonzalez: thanks
[16:17:57] <scott_gonzalez> no problem
