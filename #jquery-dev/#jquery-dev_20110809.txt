[07:45:11] <timmywil> ajpiano: you use require?
[07:47:18] <ajpiano> i have
[07:47:19] <ajpiano> :)
[07:49:00] <timmywil> Getting a strange error in IE9 where I define a module from within another module.  I get "no matching script interactive for…", which apparently is a common requirejs error in IE, but burke says it only happens when the script that does the definition is loaded in a plain script tag rather than with require.
[07:49:22] <ajpiano> i have no idea :/
[07:49:25] <timmywil> hehe ok
[07:49:27] <timmywil> thx anyway
[07:49:41] <ajpiano> good thing jrburke frequents these parts :)
[07:49:48] <timmywil> yea, just wish he was here now
[07:50:49] <ajpiano> how i wish, how i wish jrburke was hereeeeeeeeeee.................we're just two guys on irc with require.js bugs, day after day
[07:55:33] <timmywil> ajpiano: don't put a define within a define in IE9
[07:55:42] <ajpiano> i won't!!!!
[07:55:48] <timmywil> I should probably let him know to add that for that error
[07:56:03] * ajpiano unstacks turtles
[08:38:21] <scott_gonzalez> rwaldron: http://bugs.jquery.com/ticket/8235#comment:14
[08:38:27] <scott_gonzalez> this bug is so odd
[08:38:50] * rwaldron looking
[08:39:41] <scott_gonzalez> reminds me of http://bugs.jquery.com/ticket/9905
[08:39:59] <rwaldron> I can fix this now
[08:40:09] <rwaldron> looks like snover made an assumption
[08:40:31] <scott_gonzalez> thanks
[08:41:03] <scott_gonzalez> I'll throw a try/catch in UI for 1.8.x :-P
[08:41:50] <scott_gonzalez> this is the code that causes the bug: https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.widget.js#L17
[08:42:54] <rwaldron> cool, thanks
[08:43:15] <rwaldron> if i link you to a branch on my fork, would you be up for double checking?
[08:43:38] <rwaldron> its an easy fix, i just want to make sure
[08:46:50] <scott_gonzalez> I can just drop the fix in locally and verify
[08:47:00] <scott_gonzalez> that'll be a lot easier than building from your fork :-)
[08:47:04] <rwaldron> indeed
[08:47:07] <rwaldron> its small enough
[08:47:17] <rwaldron> if ( (!id || (pvt && id && (cache[ id ] && !cache[ id ][ internalKey ]))) && getByName && data === undefined ) {
[08:47:24] <rwaldron> scott_gonzalez ^^
[08:49:06] <scott_gonzalez> confirmed
[08:50:56] <scott_gonzalez> thanks
[08:51:38] <jzaefferer> rwaldron, scott_gonzalez, any thoughts on adapting this for the jQuery style guide? https://github.com/einars/js-beautify
[08:52:10] <rwaldron> jzaefferer i'd be interested in exploring something like that
[08:53:14] <scott_gonzalez> sounds painful to write, but I assume we can reuse most of the code and we only need to get it right once
[08:53:16] <jzaefferer> I might be able to use that on another project, which is pretty close to their default, except for an odd space between the function keyword and its parens
[08:53:57] <jzaefferer> scott_gonzalez: yeah, the idea is to just adapt this exiting implementations, instead of writing something from scratch
[08:54:06] <jzaefferer> dunno how hard that is...
[08:56:33] <jzaefferer> maybe we could add that to jQuery's build script, so that auto corrects or at least validates the code
[08:56:44] <jzaefferer> should help both commiters and contributors..
[08:57:34] <ajpiano> yeah, i know that ryanneufeld for one would love that ^^ :)
[08:59:14] <jzaefferer> wanna !tell the bot to tell him?
[08:59:25] <jzaefferer> dunno how that works...
[09:00:13] <ajpiano> bot-t: tell ryanneufeld [11:51:37] jzaefferer is considering a tool like this for and adapting for the jQuery style guide? https://github.com/einars/js-beautify, let us know your thoughts :)
[09:00:13] <bot-t> ajpiano, Okay.
[09:00:30] <jzaefferer> thanks
[10:10:23] <timmywil> wtf @ docs#10009
[10:10:27] <bot-t> [#10009] Unable to download jQuery (e : d);else d(a) - http://jqbug.com/10009
[10:10:42] <timmywil> delete
[10:10:52] <timmywil> yes
[10:13:57] <timmywil> that was jQuery pasted into the ticket btw
[10:15:01] <aaronmcadam> haha seen a few of those
[10:17:44] <AzaToth> rwaldron: I always wonder following question: are you on the quest to fork the entire github universe?
[10:17:55] <rwaldron> no
[10:17:58] <AzaToth> ツ
[10:18:13] <rwaldron> github doesnt offer a suitable solution for "bookmarking this thing to look at later"
[10:18:30] <timmywil> im downloading the internet
[10:18:33] <AzaToth> I by some unknown reason put you into stalk mode, and you are always on my dashboard forking something ツ
[10:18:35] <rwaldron> but yeah... i ahve a lot of clones on my machine
[10:18:51] <aaronmcadam> hmm yeah
[10:18:55] <aaronmcadam> watched repos aren't great
[10:19:03] <rwaldron> aaronmcadam +1
[10:19:06] <aaronmcadam> doesn't list by added date can be hard to find stuff
[10:19:09] <AzaToth> rwaldron: well, there are "watch"
[10:19:12] <rwaldron> i forget about them
[10:19:16] <aaronmcadam> me too!
[10:19:17] <AzaToth> ok
[10:19:17] <rwaldron> yeah, i forget
[10:19:24] <rwaldron> i dont look at the feed page
[10:19:27] <rwaldron> i skip past it
[10:19:27] <aaronmcadam> spent ages yesterday lookin for a repo
[10:19:32] <rwaldron> it looks like a lot of crap
[10:19:38] <rwaldron> i just want a "bookmark this"
[10:19:46] <aaronmcadam> yes!
[10:19:49] <rwaldron> and fork is useful
[10:19:50] <AzaToth> I see
[10:19:57] <rwaldron> because its right at the top of my repo list
[10:20:00] <AzaToth> haha
[10:20:12] <rwaldron> if i dont like something, i just delete the fork
[10:20:31] <rwaldron> i'm obviously using fork for something it wasnt intended for
[10:20:33] <Krinkle> rwaldron: Doesn't your browser support bookmarks ?
[10:20:48] <rwaldron> Krinkle, yeah, as another good way to get lost
[10:20:53] <rwaldron> or forgotten
[10:21:10] <rwaldron> typing "gi"
[10:21:16] <rwaldron> autcompletes to github
[10:21:32] <rwaldron> gi-enter
[10:21:38] <rwaldron> no mouse
[10:22:03] <rwaldron> anyway, i dont question your workflow
[10:22:11] <aaronmcadam> rwaldron: I actually used to use fork before I saw the watch feature
[10:22:15] <rwaldron> (just the quality of the code you write)
[10:22:16] <rwaldron> :D
[10:22:17] <aaronmcadam> might go back to doing that now :D
[10:22:58] <aaronmcadam> haha you're attitude is cool rwaldron :P
[10:22:59] <AzaToth> rwaldron: https://api.github.com/users/rwldrn/watched ← just program your way out of it ツ
[10:23:02] <aaronmcadam> aah your even
[10:23:07] <rwaldron> thanks
[10:23:33] <rwaldron> AzaToth thats probably one of the best suggestions i've been given so far
[10:23:34] <rwaldron> thanks
[10:24:53] <AzaToth> I type "gna" or "goa" to go to github
[10:25:09] <AzaToth> depending if I want to to open an new tab or not
[10:25:12] <AzaToth> vomperator ftw
[10:25:16] <AzaToth> vimperator*
[10:26:05] <AzaToth> the best with vimperator: "normal" folks cannot use my browser
[10:28:35] <aaronmcadam> i must try that
[10:28:37] <aaronmcadam> don't use vim
[10:28:47] <aaronmcadam> but might learn those shortcuts
[10:29:48] <AzaToth> aaronmcadam: for real vi(m) users, the mouse was created by the devil
[10:30:18] <aaronmcadam> ... :p
[10:30:22] <aaronmcadam> i like the devil
[11:17:35] <maqr> the $.ajaxTransport example doesn't seem to line up with the documentation above it on the extending-ajax page :/
[11:18:33] <aaronmcadam> hey
[11:18:37] <aaronmcadam> coffeescript woes?
[11:19:03] <maqr> i dont' think it's even that
[11:19:22] <maqr> aaronmcadam: take a look at the page, they show this: $.ajaxTransport( function( options, originalOptions, jqXHR ) {
[11:19:34] <maqr> aaronmcadam: then the example under it: $.ajaxTransport( "image", function( s ) {
[11:19:37] <maqr> wtf is that?
[11:20:03] <aaronmcadam> 2 method sigs?
[11:20:17] <maqr> yeah, but the second one is really ambiguous
[11:20:22] <maqr> and undocumented, it seems
[11:20:23] <aaronmcadam> yea
[11:20:38] <maqr> aaronmcadam: if i could get $.ajaxTransport( function() { console.log('foo'); }) to work, i'd be in a debuggable spot
[11:20:45] <maqr> but it just doesn't seem to ever get called
[11:21:17] <aaronmcadam> breakpoints?
[11:21:19] <aaronmcadam> have u tried
[11:21:29] <aaronmcadam> and stepping through
[11:21:33] <maqr> aaronmcadam: i put 'debugger' instead of console.log there and it doesn't get hit
[11:21:36] <maqr> i guess i could breakpoint ajax itself
[11:22:07] <aaronmcadam> did u put debugger above the $.ajax...
[11:22:14] <maqr> no, i'm trying that now though :)
[11:22:34] <aaronmcadam> set a breakpoint on the function call
[11:22:39] <aaronmcadam> and step into
[11:23:08] <maqr> yeah, that's a good idea, i don't know why i didn't think of it sooner, trying now :P
[11:23:44] <maqr> well this only makes more questions, heh
[11:25:15] <maqr> aaronmcadam: it sure looks like it gets added to the prefilters list
[11:25:55] <maqr> aaronmcadam: the actual arguments to $.ajaxPrefilter seem to be (dataType, function)
[11:25:58] <timmywil> jrburke: quick question
[11:26:33] <timmywil> jrburke: I'm getting this error (http://requirejs.org/docs/errors.html#interactive) in IE9  "No matching script interactive for..."
[11:26:45] <aaronmcadam> ah there u go
[11:27:03] <maqr> aaronmcadam: now i'm even more confused though, because it's not actually being called and i know it made it into the prefilter list
[11:27:10] <timmywil> I'm defining two modules from within another define (also tried just making it require)
[11:27:22] <maqr> aaronmcadam: the dataTypeExpression actually turns into "*", btw, if you omit the string
[11:27:28] <maqr> which is what i want
[11:27:33] <timmywil> so I know it's not a plain script tag nor is it an eval
[11:27:34] <aaronmcadam> ah!
[11:27:44] <aaronmcadam> so u need to pass null as the first param
[11:27:49] <maqr> aaronmcadam: nono, it detects that
[11:27:50] <aaronmcadam> mayyyybe
[11:27:53] <aaronmcadam> ah k
[11:28:06] <maqr> aaronmcadam: and it gets me far enough along that it actually adds it to the prefilter list... but now i have no idea where to go... i guess i have to dive into ajax()
[11:28:15] <timmywil> jrburke: at first I thought it was because I put a define within a define
[11:28:35] <jrburke> timmywil: if you can send me a gist, that might help me follow along, also the version of requirejs you are using. i'll contact you in a private message too, take it out of this room
[11:28:50] <timmywil> jrburke: ok cool thx
[11:28:57] <maqr> aaronmcadam: addToPrefiltersOrTransports is the function, if you have the source and wanted to take a peek
[11:29:17] <aaronmcadam> hmm
[11:29:31] <maqr> also, the debugger doesn't have any steps between $.ajaxPrefilter and addToPrefiltersOrTransports, so i'm not sure if that means the debugger is skipping something or it's just aliased
[11:29:57] <aaronmcadam> confusing
[11:29:59] <maqr> very
[11:30:06] <maqr> i'm starting to feel like i could work on jquery after looking at this for so long, heh
[11:30:09] <aaronmcadam> we need a docs push on this stuff
[11:30:28] <maqr> yeah, it's super ambiguous, but i can't very well write the docs if i can't make it work for me
[11:32:43] <maqr> aaronmcadam: "git grep prefilter test/" ... :(
[11:33:12] <maqr> i'm starting to see the faults in jquery :P
[11:37:06] <maqr> aaronmcadam: maybe i'm approaching this wrong? all i need to do is get code in after every ajax call, succesful or not, and examine the headers
[11:37:17] <maqr> aaronmcadam: i don't think i actually need to change anything... maybe i can bind directly to $.ajax?
[11:37:47] <aaronmcadam> hang on
[11:37:54] <aaronmcadam> ah shit no
[11:38:06] <aaronmcadam> was gonna say could u manip it in a diff way
[11:38:12] <maqr> i'm not sure if i'd need to actually stop the call yet
[11:38:34] <aaronmcadam> ajax beforeSend
[11:38:42] <maqr> aaronmcadam: wrong side
[11:38:44] <aaronmcadam> but u need the actual req hmm
[11:38:44] <ajpiano> maqr, have you tried doing $.ajaxSetup({ beforeSend: fn });
[11:38:46] <aaronmcadam> yeah
[11:38:52] <aaronmcadam> ha :)
[11:38:56] <maqr> ajpiano: yeah i'm using that for the request side
[11:39:01] <aaronmcadam> he's trying to manip the actual req
[11:39:14] <maqr> let me explain the whole thing, maybe i'm just looking at the problem wrong:
[11:39:21] <aaronmcadam> could u use a middleware maqr?
[11:39:38] <aaronmcadam> that's set on the view?
[11:39:57] <maqr> wait, i think i see what i'm doing wrong
[11:40:32] <maqr> ok, forget everything that i was asking, give me 5 minutes to ask this smartly
[11:40:46] <maqr> i think i was using some of the wrong functions, i need to be on $.ajaxTransport :)
[11:42:41] <aaronmcadam> maqr, just thinking
[11:42:52] <aaronmcadam> doesn't your view pick up on auth?
[11:42:59] <maqr> aaronmcadam: that's the problem
[11:43:06] <maqr> aaronmcadam: i'm making a RESTful authentication system
[11:43:08] <aaronmcadam> ruby?
[11:43:12] <maqr> javascript
[11:43:14] <maqr> well, coffeescript
[11:43:16] <aaronmcadam> ahhh
[11:43:17] <maqr> backbone.js
[11:43:19] <aaronmcadam> righttttt
[11:43:24] <aaronmcadam> cool
[11:43:27] <maqr> aaronmcadam: i'm using jStorage to save user/pass
[11:43:29] <aaronmcadam> github?
[11:43:33] <maqr> private :(
[11:43:36] <aaronmcadam> np :)
[11:43:41] <maqr> i want to blog about this when i'm done though
[11:43:44] <maqr> people *should* be doing it this way
[11:43:46] <maqr> and nobody is
[11:43:53] <aaronmcadam> hopefully some bits might be opened :P
[11:44:08] <aaronmcadam> i'm not sure i agree about the should
[11:44:16] <aaronmcadam> but nice idea
[11:44:46] <aaronmcadam> i wanna know
[11:44:52] <aaronmcadam> how u get on tho
[11:46:02] <maqr> aaronmcadam: user/pass get stored in local storage, every outgoing ajax to the server should have an Authorization header set, every reply should then emit an event saying if the user is "logged-in", "logged-out", or "not authed"
[11:46:25] <maqr> aaronmcadam: that way you essentially move the 'session' client side, which is where it should be, because HTTP should be following REST
[11:46:45] <aaronmcadam> fair enough
[11:46:49] <aaronmcadam> cool idea
[11:46:51] <maqr> and i'm damn close too
[11:46:56] <aaronmcadam> sounds plausible
[11:47:01] <aaronmcadam> but it's this bloody transport
[11:47:05] <maqr> i have it working outbound and have the server receiving it fine
[11:47:06] <maqr> yeha
[11:47:21] <maqr> the preFilter is actually fine, i got confused on the function names, since they're almost the same internally
[11:47:26] <maqr> it's $.ajaxTransport that's broken
[11:47:35] <maqr>     ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
[11:47:35] <maqr>     ajaxTransport: addToPrefiltersOrTransports( transports ),
[11:47:38] <maqr> same function though
[11:47:59] <ajpiano> maqr: i think ideally, you should talk to jaubourg when he's around :)
[11:48:12] <maqr> ajpiano: i'm not sure why, but ok :)
[11:48:17] <ajpiano> he wrote it all :)
[11:48:19] <maqr> :o
[11:48:50] <ajpiano> and is pretty good at figuring out if something is a bug in the implementation or something that can just actually be done through the existing API
[11:48:55] <maqr> i think i almost understand the transports system... it's just not getting called back
[11:49:10] <maqr> i think i could maybe hack around it with a bind to $.ajax
[11:49:17] <maqr> but at this point, i just want to register a damn transport :p
[11:50:21] <ajpiano> any chance it's the same unexpected return issue as yesterday :p
[11:50:23] <ajpiano> #wishfulthinking
[11:50:29] <maqr> haha, no, i wish
[11:56:15] <maqr> all these closures are making my head spin
[11:58:20] <maqr> selection = list[ i ]( options, originalOptions, jqXHR );
[11:58:24] <maqr> chrome's debugger won't step into that
[11:58:26] <maqr> that's annoying
[12:29:53] <maqr> aaronmcadam: still around?
[12:33:57] <DaveMethvin> maqr: dunno if this helps but here are a few simpler transports to get the hang of it: https://github.com/jaubourg/ajaxHooks/tree/master/src/ajax
[12:34:12] <maqr> DaveMethvin: that actually does help
[12:34:38] <maqr> here's mine: http://pastie.org/2346499
[12:34:44] <maqr> neither console.log ever fires though
[12:34:49] <maqr> and that looks very similar to these examples
[12:35:17] <DaveMethvin> yeah but those ones are likely to work :)
[12:35:27] <DaveMethvin> the img transport is about as simple as it gets
[12:35:27] <maqr> yeah, maybe :P
[12:35:50] <DaveMethvin> true, it "works" although the img transport doesn't support a lot of features
[12:36:11] <maqr> that really looks the same to me as what i've got going on
[12:38:19] <maqr> DaveMethvin: i'm not sure i understand the 'callback' thing in the img example
[12:39:01] <maqr> i don't see why it would be on abort or why it's outside of the return dictionary
[12:39:27] <DaveMethvin> the image.onload/onerror handlers call it
[12:39:35] <DaveMethvin> they happen long after send has returned
[12:40:01] <DaveMethvin> but yeah i see what you mean it could be in the send closure?
[12:40:12] <maqr> i'd think so... but it's used in 'abort'
[12:40:20] <maqr> which, i'm not sure when abort is called, but i'd think only when xhr aborts?
[12:40:25] <maqr> i'm not sure why it's needed there
[12:40:30] <DaveMethvin> oh when the user calls xhr.abort
[12:40:48] <maqr> yeah, why do you need a callback there? if they've aborted, shouldn't the callback not happen?
[12:41:14] <DaveMethvin> but if you diidn't clear it, it might happen after abort
[12:41:41] <maqr> ohh, it's used to clear it, i see
[12:41:48] <maqr> kind of a confusing callback, but ok :P
[12:42:11] <DaveMethvin> yeah and also i think there's an unneeded new Image() there
[12:42:19] <DaveMethvin> he calls it twice
[12:42:34] <DaveMethvin> line 15 and 27
[12:42:35] <maqr> DaveMethvin: but at least this thing is being called, i assume... if you look at my example, nothing at all happens, it's like the transport isn't even registered :/
[12:42:44] <maqr> yeah, that does look extra
[12:42:46] <DaveMethvin> where is your example?
[12:42:50] <maqr> http://pastie.org/2346499
[12:43:18] <maqr> err wait, i think i'm returning an extra function
[12:43:23] <maqr> don't look at that yet, that might be the problem :)
[12:43:58] <timmywil> jrburke: thanks for the help, everything is great
[12:44:35] <maqr> DaveMethvin: i updated the paste, but that's not the problem, it's still never being called
[12:45:13] <DaveMethvin> so do you really want to pass "*" there?
[12:45:24] <DaveMethvin> isn't that like a last-resort transport?
[12:45:32] <maqr> DaveMethvin: yeah, that's what the docs say
[12:45:33] <DaveMethvin> i gotta look at the docs
[12:45:42] <maqr> "A transport is the most advanced way to enhance $.ajax() and should be used only as a last resort when prefilters and converters are insufficient."
[12:46:06] <DaveMethvin> so what is happening? are you getting an error back?
[12:46:22] <maqr> DaveMethvin: what i'm trying to do is look at all responses and examine them for a 401, then emit an event like "auth:failure" if it's gotten the 401
[12:46:41] <maqr> DaveMethvin: nothing's happening, that's what's so frustrating, it never hits either of those console.log's
[12:49:19] <DaveMethvin> maqr are you saying that nothing goes out over the wire, or just that your transport isn't being called?
[12:50:15] <maqr> DaveMethvin: the xhr goes out over the wire, but the transport isn't being called
[12:51:02] <DaveMethvin> what is your data type?
[12:51:12] <maqr> DaveMethvin: the really strange thing is that $.ajaxPrefilter works fine, and they look like their bound to almost the same function
[12:51:35] <maqr> DaveMethvin: "*", i want to get after every xhr response
[12:52:07] <DaveMethvin> as i understand transports, if there is a "script" one it will use the exact match for "script" transport
[12:52:11] <DaveMethvin> it doesn't call them all
[12:52:13] <DaveMethvin> afaik
[12:52:28] <maqr> it looks like "*" is supposed to be a special case
[12:52:28] <DaveMethvin> i mean, it's already found a transport to transport
[12:52:42] <maqr> oh, that's something i hadn't thought of
[12:53:28] <maqr> DaveMethvin: the transport is on the *receiving* side, right? as in the xhr calls the server, the xhr receives the response, and then it goes through the transport?
[12:53:49] <DaveMethvin> no the transport, er, TRANSPORTs the data to the server over the wire
[12:53:57] <maqr> oh jebus
[12:54:10] <DaveMethvin> so like an img transport uses an img tag
[12:54:15] <DaveMethvin> and an xhr uses the xhr object
[12:54:16] <maqr> i thought it transported it *back*
[12:54:22] <DaveMethvin> but once it finds a good one it uses that one
[12:54:33] <maqr> DaveMethvin: so how do i get on the response side of ajax?
[12:54:42] <DaveMethvin> so i think you can just specify that you want to handle 401 responses
[12:54:53] <maqr> where would i specify that?
[12:55:01] <DaveMethvin> hellificanremember :P
[12:55:34] <maqr> DaveMethvin: all these examples make a lot more sense now that i'm thinking about transport as going *outbound*
[12:55:54] <DaveMethvin> yeah
[12:58:02] <DaveMethvin> maqr: http://api.jquery.com/jQuery.ajax/  see statusCode
[12:58:28] <DaveMethvin> maybe redo your request in a 401  handler?
[12:58:41] <maqr> yeah, that might do it, actually
[12:59:12] <maqr> DaveMethvin: i could maybe also bind to every 'error' event emitted by $.ajax?
[12:59:47] <DaveMethvin> you can set statusCode.401 in ajaxSetup()
[12:59:54] <DaveMethvin> which might be more direct
[12:59:59] <maqr> that sounds smart
[13:00:37] <maqr> ok, i think i have direction now, thanks so much for turning my head around on that one DaveMethvin :)
[13:00:45] <DaveMethvin> plus now I've converted a #jquery-dev question into a #jquery question, double points for me! :P
[13:00:51] <maqr> haha
[13:01:01] <maqr> who would have thought *transport* is outbound when the example uses "script"
[13:01:07] <maqr> i thought for sure it was about parsing a script response
[13:30:23] <aaronmcadam> :(
[13:30:36] <maqr> nono, :) , i'm good now
[13:35:02] <aaronmcadam> maqr
[13:35:13] <aaronmcadam> progress report, stat :p
[13:35:27] <maqr> aaronmcadam: i learned that transport is for *outgoing* only
[13:35:44] <maqr> aaronmcadam: all i really needed to do was use statusCode
[13:35:59] <maqr> i was trying to solve the wrong problem, but it's ok, i learned a lot and it's working now :)
[13:58:20] <aaronmcadam> coool
