[01:07:43] <matjas> heads up: jquery.com still shows 1.6.2 as the latest version
[09:04:50] <JohnResig> today is a national holiday in the US
[09:04:55] <JohnResig> don't think a meeting is happening
[09:05:18] <jaubourg> we're there talking with Dave if you care to join John ;)
[09:12:07] <jaubourg> :/
[09:12:23] <jaubourg> it was fun to hang out in -meeting for a change :P
[09:12:48] <DaveMethvin> hey jaubourg, on docs#10202 there's nothing stopping someone from attaching their own custom data object to either the passed-in options or just passing a different context, right?
[09:12:49] <bot-t1> [#10202] `data` attribute disappears from settings for ajax GET requests (reopened bug) - http://jqbug.com/10202
[09:13:30] <DaveMethvin> the myriad interactions between ajax options are not solvable without breaking things, that's been a problem for several years
[09:13:44] <DaveMethvin> i mean, what takes priority over what?
[09:14:06] <jaubourg> well
[09:14:38] <jaubourg> the options map we're talking about here is the one that has passed through prefilters AND param serialization
[09:15:05] <jaubourg> IF you add some data in there, then re-use this map, then the data will be serialized in the new request
[09:15:21] <jaubourg> (which was what was happening before when the data wasn't cleared)
[09:16:11] <DaveMethvin> well if i say $.ajax( { ...   myCustomStuff: whatever ... }) that doesnt' get serialized to the url, it's basicallly ignored right?
[09:16:20] <DaveMethvin> but it's in the options
[09:16:27] <jaubourg> yep
[09:16:32] <DaveMethvin> so ... solved.
[09:16:59] <DaveMethvin> or, pass it in as the context
[09:17:27] <DaveMethvin> the problem here was that they wanted to look at .data which is specifically meant to be serialized to the url on a GET
[09:17:50] <DaveMethvin> but once it gets to the url we don't want to leave it in .data
[09:17:54] <jaubourg> exactly
[09:18:17] <jaubourg> I haven't looked into this rail js thingy but I'm pretty confident they're doing it wrong
[09:18:41] <DaveMethvin> haha reminds me of the $.data api, as soon as our lizard minds see "data" it says "hey this must be what I want because I want to pass some data"
[09:19:14] <jaubourg> hehe
[09:19:20] <DaveMethvin> I think $.ajax should serialize that data to HTML5 data attributes on the body element for consistency :P
[09:19:42] <jaubourg> write a prefilter for that
[09:19:44] <jaubourg> :P
[09:19:48] <DaveMethvin> and then  burn it
[09:21:37] <DaveMethvin> this is yet another example of how one man's bug is another man's feature ... i mean it's definitely changing functionality, so you could make a case for it being change in a major-point release rather than a minor one
[09:21:57] <gnarf> i thought we were getting drunk in -meeting
[09:22:00] <gnarf> and you guys all left
[09:22:18] <DaveMethvin> we had a coupla beers already and the meeting police threw us out
[09:22:35] <jaubourg> *hips*
[09:22:48] * gnarf grins
[09:23:09] <DaveMethvin> so ... 1.6.4
[09:23:54] <jaubourg> \o\\o//o/
[09:23:56] <DaveMethvin> right now i think there are only two things, back out the xhtml that got messed up and fix the capitalization issue with the .data() api
[09:24:31] <DaveMethvin> anything else?
[09:24:50] <DaveMethvin> if it's just those two i'm inclined to just do another release tomorrow with a short blog post
[09:24:51] <jaubourg> shouldn't we, like, some more days, see if a new blocker pops up?
[09:25:12] <DaveMethvin> we can do that, depends on how blocky the xhtml issue is
[09:25:13] <jaubourg> with a wait added somewhere
[09:25:42] <DaveMethvin> also it's hard to focus on 1.7 stuff is 1.6.4 is in master
[09:25:52] <jaubourg> true
[09:26:24] <DaveMethvin> but we don't have a hard schedule date for 1.7, just wanted to get it out for the conf if possible
[09:26:31] <DaveMethvin> it's just looking less and less possible
[09:27:06] <DaveMethvin> so jaubourg it sounded like you were going to be busy in October?
[09:27:11] <gnarf> DaveMethvin: branch a 1.6-stable branch?
[09:27:16] <jaubourg> in September rather
[09:27:25] <DaveMethvin> right sorry
[09:27:31] <jaubourg> October I'll be in Boston for the most part
[09:27:58] <gnarf> i mean UI has 1.9 in master for a long time but we keep the 1.8-stable cherry picked with bugfixes for stable
[09:28:01] <DaveMethvin> gnarf: we can do that but shoudl we then have two nightlies
[09:28:05] <DaveMethvin> how does ui do it?
[09:28:05] <jaubourg> I have 3 confs in October... with 3 different prez (silly me)
[09:28:32] <gnarf> DaveMethvin: our  "git" is 1.9 --- if you want the 1.8-stable you build it yourself i think
[09:28:54] <DaveMethvin> hmmm
[09:30:13] <gnarf> fixes for 1.8 code are applied first on the 1.9 branch (if they are still there) and then git cherry-pick -x sha on top of 1.8-stable
[09:30:47] <gnarf> for instance : https://github.com/jquery/jquery-ui/commit/5d4d40f7be1b0d69060eca228f8fce48d453be7e
[09:30:48] <socialhapy> ★ Commit on jquery-ui by gnarf37 (2w, 1d ago): Dialog: Update to 96e5c24 - keyup apparently doesn't work like I thought it would everywhere, switching back to keydown.(cherry picked from commit dfe75e1b552013c440186645a7a1ae9ec3c757b5)
[09:31:06] <gnarf> thats on the 1.8-stable
[09:31:15] <gnarf> the other commit mentioned is on master
[09:31:15] <DaveMethvin> yeah that part isn't bad, i am thinking of how to do the automated builds so ppl can easily test whatever we land on 1.7
[09:31:25] <gnarf> 1.7 is "master"
[09:31:40] <gnarf> you mean 1.6-stable lands?
[09:32:05] <DaveMethvin> well right now whatever is in master gets to be jQuery-git.js
[09:32:09] <gnarf> you could maybe make a jquery.1.6-git.js
[09:32:41] <gnarf> but i don't think you really need it
[09:32:46] <DaveMethvin> i dont think so either
[09:32:54] <DaveMethvin> this is relatively rare for us
[09:33:13] <gnarf> the bigger issue would be how much coverage you'd get in testswarm on the 1.6-stable branch
[09:33:16] <gnarf> id think
[09:33:34] <DaveMethvin> i don't think we want to go to maintaining two branches
[09:33:49] <gnarf> well its either that or we wait until we know we are "done" with 1.6
[09:33:52] <DaveMethvin> yep
[09:33:55] <gnarf> to pull 1.7 fixes
[09:34:02] <gnarf> which seems anti-productive
[09:34:02] <DaveMethvin> that's what we've done in the past
[09:34:27] <DaveMethvin> looking at the current build scripts they assume that workflow
[09:34:32] <gnarf> I'd rather already have the 1.7 pulls pulled in so we could be testing / working on them right now
[09:34:51] <DaveMethvin> yeah me too but then it makes landing 1.6.4 harder
[09:34:56] <gnarf> not if its a branch
[09:35:00] <gnarf> thats the whole point of branches
[09:35:07] <DaveMethvin> i agree on branches
[09:35:16] <jzaefferer> branches!
[09:35:20] <gnarf> you make the "latest stable" its own branch
[09:35:24] <DaveMethvin> it's the other stuff that the scripts automate, that assume master is going to be released
[09:35:27] <gnarf> and the "dev" is master
[09:35:56] <DaveMethvin> so yes it can be changed, but i am hoping to be lazy and not work on build scripts instead of 1.7 for the next few days
[09:36:02] <gnarf> DaveMethvin: that really doesn't sound like something that should be stopping us from implementing a 1.6-stable branch
[09:36:02] <DaveMethvin> :P
[09:36:25] <gnarf> DaveMethvin: :) the build scripts should work on whatever branch you have checked out right?
[09:37:07] <DaveMethvin> take a look and see, right now there is some stuff hard wired
[09:37:19] <DaveMethvin> i would have to double check them
[09:37:28] <gnarf> i dont know that i have the same build scripts
[09:37:35] <gnarf> cuz the make works fine on a branch
[09:37:42] <DaveMethvin> they're in jquery/build
[09:37:43] <DaveMethvin> release.js
[09:39:10] <gnarf> i see no reason that shouldn
[09:39:16] <gnarf> shouldn't work on a 1.6-stable branch
[09:39:19] <gnarf> the same it does on master
[09:40:04] <DaveMethvin> looking at it now
[09:40:13] <gnarf> you just run it from the 1.6-stable branch instead of the master branch, it should work correctly
[09:40:55] <gnarf> the "tags" don't care which branch they are in either
[09:41:08] <gnarf> so - the tagged versions will follow the branch - not master
[09:41:39] <gnarf> jzaefferer: how hard would it be to have testswarm watching two branches?
[09:41:40] <DaveMethvin> yeah looking at it i agree, only "origin" is hardwired
[09:42:27] <gnarf> that way also, changes we know are only for 1.7 don't get cherry picked to 1.6
[09:45:41] <jzaefferer> gnarf: now that I've got Jenkins somewhat running, adding more build targets and therefore testswarm jobs has become a lot easier
[09:45:57] <jzaefferer> http://swarm.jquery.org:8080/
[09:46:20] <jzaefferer> need some help figuring out how we can get to green...
[09:46:36] <jzaefferer> won't help if all builds fail all the time
[09:46:49] * gnarf grins
[09:47:49] <gnarf> jzaefferer: also - any chance I can get jquery-color tests in swarm?
[09:48:01] <gnarf> those should be green ;)
[09:48:03] <jzaefferer> yeah, that's also a lot more feasible now
[09:48:10] <jzaefferer> same for QUnit, mobile...
[09:48:33] <DaveMethvin> jzaefferer: how do I read this? where are the failed tests?
[09:48:36] <jzaefferer> still need to figure out a few details… do we want a separate user on testswarm for each job?
[09:49:10] <jzaefferer> DaveMethvin: output can be improved, but this is one build with actual output: http://swarm.jquery.org:8080/job/jQuery%20UI/4/console
[09:49:13] <gnarf> might make sense for each "user" to be a project, each project has multiple "jobs"
[09:50:05] <jzaefferer> yeah, so we need users for qunit, mobile and color, jquery and jqueryui already exist
[09:56:20] <DaveMethvin> so jzaefferer i'm trying to read this console output, but it doesn't say much to me. Chrome and presto (only) were tested and 118 tests passed out of ?? is there more info on what tests were run and which failed?
[09:59:45] <DaveMethvin> I can see it's running the tests at http://view.jqueryui.com/master/tests/unit/autocomplete/autocomplete.html but there doesn't seem to be any details on the failures
[10:08:34] <jzaefferer> it failed because only chrome and opera ran, but it expected a bunch more browsers to reach full coverage
[10:08:41] <jzaefferer> but those that ran passed all tests
[10:08:59] <jzaefferer> there's also a link to the actual job, which is now dead, more or less...
[10:09:04] <jzaefferer> lemme run a new build
[10:10:01] <jzaefferer> here: http://swarm.jquery.org:8080/job/jQuery%20UI/5/console
[10:10:08] <jzaefferer> the job actually exists now: http://swarm.jquery.org/job/9/
[10:10:22] <jzaefferer> though that page is rather broken...
[10:11:09] <jzaefferer> http://swarm.jquery.org/user/jqueryui/
[10:37:06] <DaveMethvin> thanks jzaefferer i can see that it has potential
[10:46:07] <jzaefferer> I've enabled security on Jenkins, but if you sign up, I can get you full access
[16:20:59] <Krinkle> jzaefferer: Do you have admin rights on the jQuery testing wiki ? I'd like to rename a page, but I'm only allowed to edit
[16:21:03] <Krinkle> (or someone else)
[16:21:08] <Krinkle> http://jquerytesting.pbworks.com/
