[06:53:56] <scott_gonzalez> Anyone have experience tracking down memory leaks in IE?
[07:10:58] <DaveMethvin> .
[08:35:35] <rwaldron> scott_gonzalez yt?
[08:35:40] <scott_gonzalez> yo
[08:35:54] <rwaldron> docs#11706 what are you seeing?
[08:35:55] <bot-t> [#11706] `.has()` fails on document fragments (reopened bug) - http://jqbug.com/11706
[08:36:02] <scott_gonzalez> [] as first log
[08:36:32] <scott_gonzalez> http://cl.ly/171K2n0f2U1y2v1E1t2y
[08:36:35] <rwaldron> scott_gonzalez http://gyazo.com/fd690b2751ad13a97b99cd0ba9de89fd.png
[08:36:40] <scott_gonzalez> the first and thrid line should be the same
[08:37:05] <rwaldron> change to jQuery (edge)
[08:37:18] <scott_gonzalez> Ah, that's it.
[08:37:22] <rwaldron> yeah
[08:37:22] <scott_gonzalez> So it's fixed in master.
[08:37:28] <rwaldron> This is why I closed it.
[08:37:58] <scott_gonzalez> So that should be closed as fixed, not worksforme.
[08:38:05] <rwaldron> scott_gonzalez no
[08:38:14] <rwaldron> "fixed" goes on the ticket that fixed it
[08:38:24] <scott_gonzalez> Then duplicate.
[08:38:27] <rwaldron> "worksforme" goes on everything following
[08:39:13] <rwaldron> scott_gonzalez i looked but couldnt' find a specific ticket
[08:39:37] <scott_gonzalez> rwaldron: It's possible it was fixed without a ticket.
[08:39:42] <rwaldron> I honestly dont think that detached node tests were considered before
[08:39:51] <rwaldron> I think it was fixed via another fix
[08:40:20] <rwaldron> likely one of the ones that I think gibson042 might've fixed, re: detached nodes (i think it was gibson042)
[08:40:41] <scott_gonzalez> Could be.
[08:41:07] <scott_gonzalez> worksforme seems wrong to me since it's reproducible in latest stable.
[08:41:07] <rwaldron> Can you reclose, please :)
[08:41:11] <rwaldron> thats fine
[08:41:15] <rwaldron> close as you see fit
[08:41:20] <rwaldron> but please close, none the less
[08:42:12] <Krinkle> I can reproduce the bug on Chrome console with 1.7.2: jQuery('<div><span></span></div>').has('span')
[08:42:26] <Krinkle> (returns empty set)
[08:42:34] <scott_gonzalez> What component is this considered?
[08:43:09] <Krinkle> edge fixes it yeah
[08:44:12] <scott_gonzalez> closed
[08:44:59] <rwaldron> scott_gonzalez traversing
[08:46:22] <scott_gonzalez> Yup, got it. I thought it was traversing, but wanted to double check, then I realized api.jquery.com would tell me :-)
[08:47:35] <gibson042> rwaldron: https://github.com/jquery/jquery/commit/590bcab245d969dffc3c61b7679ab4d1a9a26ebd ?
[08:47:36] <socialhapy> ★ Commit on jquery by dmethvin (1m, 4d ago): Fix #11543: .has should work on detached elements.
[08:50:08] <rwaldron> nice
[08:50:16] <rwaldron> i was looking through tickets for "has"
[08:50:24] <rwaldron> admittedly, I didnt look hard
[08:51:06] <rwaldron> thanks for looking that up, appreciate your help :)
[08:59:17] <gibson042> np
[10:13:41] <rwaldron> timmywil what the...
[10:13:42] <rwaldron> http://gyazo.com/0d98b5ccd2f64b91ae03a107d18d458a
[10:13:45] <rwaldron> brb
[10:14:01] <timmywil> heh, just noticed that
[10:14:06] <timmywil> blitz!
[12:59:39] <gnarf> um
[12:59:43] <gnarf> DaveMethvin: you around?
[13:01:38] <gnarf> actually nevermind Dave - I thought I ran into something strange, turns out it was normal
[14:36:39] <scott_gonzalez> paul_irish: Why is Google so slow at updating the CDN?
[14:39:43] <Krinkle> btw, should TestSwarm be included on http://jquery.org/? Maybe not in the main grid, but on top it has a more complete list: jQuery Core, jQuery UI, jQuery Mobile, Sizzle and QUnit
[14:40:20] <Krinkle> although I guess it would need a website first, / qunit doesn't have one yet (not used yet anyway)
[15:15:06] <jzaefferer> Krinkle: once the new sites are launched and TestSwarm 1.0 or 1.1 is done, we can still worry about doing that
[15:15:17] <Krinkle> haha
[15:30:31] <scott_gonzalez> Krinkle: Can you update TestSwarm to display 11.5 and 11.6 for Opera instead of 11.50 and 11.60?
[15:31:10] <Krinkle> Hm.. our user agent parser calls them that way, even though it checks for 11.5* the display name it 11.50
[15:31:12] <Krinkle> let me check
[15:31:30] <Krinkle> scott_gonzalez: ah, luck
[15:31:31] <Krinkle> https://github.com/jquery/testswarm/blob/master/config/useragents.ini#L100
[15:31:35] <Krinkle> display title, I did that already
[15:31:41] <Krinkle> yeah, we can override it
[15:31:45] <Krinkle> or already do
[15:32:36] * Krinkle fixes
[15:32:41] <scott_gonzalez> Opera|11|50 is misleading if that's matching 11.5*
[15:32:45] <scott_gonzalez> thanks
[15:32:59] <Krinkle> I know, *that* we can't change
[15:33:54] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/t7gZzw
[15:33:54] <jqcommit> [testswarm/master] update useragent.ini: Remove last (incorrect) digit for displaytitle of Opera browsers.
[15:36:21] <Krinkle> btw I made a "srv-swarm" symlink in /home/jqadmin so that when ssh'ing into swarm01 it is easy to get to /srv/swarm.jquery.org
[15:36:54] <Krinkle> There is a bunch of stuff in /home/jqadmin .. not sure what is used and what not
[16:07:42] <paul_irish> scott_gonzalez: i am crying bro
[16:07:58] <paul_irish> lemme take my mind off of it with some jquery-ui cdn love.
[16:08:10] <paul_irish> scott_gonzalez: this thread is the worst.
[16:08:46] <scott_gonzalez> I don't understand what's going on with Hixie.
[16:09:13] <scott_gonzalez> Tab has some awesome responses though :-)
[16:09:21] <paul_irish> yes. :)
[16:09:32] <scott_gonzalez> Also, smaug calling out dart examples in #whatwg is pretty funny.
[16:10:01] <paul_irish> haha
[17:35:42] <scott_gonzalez> paul_irish: BTW https://developers.google.com/speed/libraries/devguide was not updated last time. It still says that 1.8.18 is latest.
[17:35:49] <scott_gonzalez> Even though 1.8.19 is hosted on the CDN.
[17:54:38] <scott_gonzalez> :-( 1.8 tabs has a show callback which conflicts with new show option.
[17:54:53] <scott_gonzalez> oops, wrong -dev channel...
[18:09:06] <snover> scott_gonzalez: i appreciated your message anyway~
[18:09:36] <scott_gonzalez> snover: https://github.com/jquery/jquery-ui/pull/654
[18:09:37] <socialhapy> ★ Pull request on jquery-ui by scottgonzalez (3m, 51s ago): Tabs: Implement new show/hide animation API.
[18:17:42] <scott_gonzalez> DaveMethvin: Have you seen this? http://bitovi.com/blog/2012/04/faster-jquery-event-fix.html
[18:18:12] <DaveMethvin> scott_gonzalez: yeah, but i don't think that is the right way to do it
[18:18:27] <DaveMethvin> it only works for modern browsers, and there is a better way for them
[18:18:31] <DaveMethvin> it doesn't work for oldIE
[18:19:26] <scott_gonzalez> Right, when I saw it, I thought of using something like Object.create()
[18:19:46] <DaveMethvin> plus, it's not a bottleneck so why waste bytes doing it?
[18:19:59] <DaveMethvin> he even SAYS it isn't a bottleneck
[18:20:05] <DaveMethvin> i mean, we can add bytes and speed everything up
[18:20:08] <scott_gonzalez> I figured any speed up in event code would be worth at least investigating.
[18:20:21] <scott_gonzalez> I'm not sure how many bytes it would actually take.
[18:20:31] <scott_gonzalez> Or what speed up we'd actually see.
[18:20:47] <DaveMethvin> well it's one of those scenarios where it adds bytes to speed up the browsers that are already fast
[18:21:01] <DaveMethvin> so if the code is too slow in general it will be just as slow in oldIE
[18:21:11] <scott_gonzalez> An Object.create() solution would help everyone though, right?
[18:21:20] <DaveMethvin> except oldIE
[18:22:00] <scott_gonzalez> Why? You can do prototypes in oldIE.
[18:22:13] <DaveMethvin> the event object is a host object
[18:22:21] <DaveMethvin> it laughs at your javascript rules
[18:22:24] <scott_gonzalez> :-(
[18:23:08] <DaveMethvin> i think the event object is writable in recent browsers, so we might be able to use it directly and augment it
[18:23:14] <DaveMethvin> haven't tried it
[18:23:29] <DaveMethvin> because, since this isn't a bottleneck, there were better things to spend time on :)
[18:23:37] <DaveMethvin> and it won't work in oldIE
[18:37:45] <snover> DaveMethvin: limited writability
[18:38:18] <snover> writableish
[18:38:20] <snover> delegateableish
[18:38:22] <DaveMethvin> sounds even less appetizing then ...
[18:38:30] <scott_gonzalez> Oh, right: https://github.com/jquery/jquery-ui/blob/master/tests/jquery.simulate.js#L77
[18:38:45] <snover> you can’t override native event properties in certain browsers even if you are delegating to a new object, which is fun
[18:39:09] <DaveMethvin> if this was a serious performance problem I'd want to follow it more, but meh
[18:39:30] <scott_gonzalez> Yeah, doesn't sound too promising.
[18:39:41] <DaveMethvin> if we didn't have to normalize standard properties we could prolly get away with it
[18:41:21] <snover> well if the properties are existing/correct in the first place then it doesn’t matter
[18:42:22] <DaveMethvin> last I looked they didn't seem to all agree on some important stuff like getPreventDefault
[18:47:12] <snover> as long as it doesn’t exist and you don’t care about oldie you should be able to delegate
[18:47:24] <snover> though…I guess that would be tricky
[18:47:27] <snover> since preventDefault would exist
[18:47:29] <snover> so nevermind
[18:48:07] <snover> the solution is to ask opera and firefox why they don’t allow properties to be set on objects that delegate to frozen objects :)
[18:48:22] <snover> i haven’t been able to figure out the answer to that question
[18:48:23] <snover> it sure seems wrong
[18:48:54] <DaveMethvin> yeah, in a couple more decades  we might be able to use the native event object  and set event.originalEvent = event
[18:49:00] <DaveMethvin> but not any time soon
[18:49:52] <DaveMethvin> maybe their event handling code likes to assume that stuff they set on the event object can't be munged
[18:50:05] <snover> it’s any object that has been frozen
[18:50:18] <DaveMethvin> yeah that frozen idea was really nice
[18:50:22] <DaveMethvin> for THEM
[18:50:41] <DaveMethvin> if i wanted to protect information i wouldn't be using javascript
[18:50:45] <snover> var obj = { foo: "foo" }; Object.freeze(obj); function F(){} F.prototype = obj; var newThing = new F(); newThing.foo = "bar"; newThing.foo; // "foo"
[18:51:05] <snover> var obj = { foo: "foo" }; Object.freeze(obj); function F(){} F.prototype = obj; var newThing = new F(); newThing.bar = "bar"; newThing.bar; // "bar"
[18:51:50] <snover> makes perfect sense right?…
[18:51:57] <DaveMethvin> NO
[18:52:11] <DaveMethvin> call me Mr Mutable if you wish
[18:52:45] <DaveMethvin> i guess the problem is that most libs/frameworks are trying to create abstractions too
[18:52:52] <DaveMethvin> but we want to do it cheaply
[18:53:14] <DaveMethvin> and frozen objects mean we have to take the long way around
[18:53:40] <snover> shouldn’t matter, you aren’t modifying the frozen object
[18:53:46] <snover> in the above
[18:54:10] <snover> if it was just one browser I’d think it was a browser bug but I think it must be a spec bug
[18:54:19] <DaveMethvin> true, since it's ust the proto
[20:32:49] <Codenoob> hi
[20:32:54] <Codenoob> can anyone help me? i am having a basic problem
