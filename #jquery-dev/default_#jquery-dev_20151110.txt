[10:04:24] <jqcommit> [13jquery] 15dmethvin pushed 2 new commits to 06master: 02http://git.io/v8XLo
[10:04:24] <jqcommit> 13jquery/06master 1497d79ec 15Dave Methvin: Dimensions: Empty sets should return undefined...
[10:04:24] <jqcommit> 13jquery/06master 142937019 15Dave Methvin: Offset: offsetLeft/Top on empty set returns undefined...
[10:06:23] <markelog> timmywil: you there?
[12:03:52] <markelog> 2.2 will be a nightmare :(( 
[12:04:47] <markelog> since we released 2.1.3, which has different commit history altogether :/
[12:06:10] <markelog> oh man, just like 2.1.3
[12:44:53] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02http://git.io/v81Bm
[12:44:53] <jqcommit> 13jquery/06master 14ab06be5 15Timmy Willison: Effects: fix loading showHide in AMD mode
[13:16:21] <m_gol> markelog: that's why I think we should backport only up to 20-30 commits for each branch
[13:16:34] <markelog> i'm already on that number
[13:16:44] <markelog> currently here https://github.com/jquery/jquery/commits/master?page=8
[13:17:06] <markelog> the whole difference is 344 commits as i recall
[13:17:23] <DaveMethvin> are you working backwards? If so that's not bad
[13:18:32] <markelog> yeah, tried 3 different ways who to do it, right now, this is most promising one
[13:29:01] <jqcommit> [13jquery] 15timmywil opened pull request #2703: Selector: pass jQuery unit tests with selector-native (06master...06selector-native) 02http://git.io/v81M4
[13:39:57] <m_gol> DaveMethvin markelog: some fixes may be trivial, it'd be ideal to have no more than 10-15 large ones to backport for each branch
[13:40:20] <markelog> not possible :/
[13:40:39] <markelog> i mean possible, but it would be pretty crazy to do )
[13:41:41] <markelog> this is not a behaviour change - https://github.com/jquery/jquery/issues/1728
[13:41:44] <markelog> right?
[13:44:53] <markelog> https://github.com/jquery/jquery/commit/555a50d340706e3e1e0de09231050493d0ad841e
[13:45:29] <markelog> gibson042:m_gol: why ticket for this commit has "behaviour change" label, but commit head reads "Backwards-compatible standards interoperability"? 
[13:46:43] <gibson042> markelog: perfect backcompat was not achievable
[13:47:07] <markelog> is change breaking right, should go to 3.0? not to the minor?
[13:47:13] <gibson042> correct
[13:47:35] <markelog> okay
[13:47:38] <jqcommit> [13api.jquery.com] 15mzgol opened issue #829: The click entry contains an image instead of an example 02http://git.io/v81dr
[13:55:10] <m_gol> markelog: what do you mean by "crazy" here?
[13:56:00] <markelog> QUnit update, code-styles updates, one commits depend on the other, commit which updates depedency also updates tests
[13:56:10] <markelog> all that generates "crazy" amount of conflicts
[13:57:45] <markelog> so unless we want resolve them, we would to land everything, omitting breaking changes
[14:03:58] <m_gol> markelog: but then one breaking change omitted may generate lots of conflicts for subsequent commits
[14:04:25] <m_gol> markelog: anyway, it's either just a few commits or everyone except breaking changes, the version in the middle would be the worst
[14:04:39] <markelog> m_gol: you can try it on 1.x
[14:05:02] <markelog> i suppose our definition of "crazy" would match then )
[14:05:18] <m_gol> ;)
[14:25:17] <jqcommit> [13jquery] 15markelog 04force-pushed 062.2-stable from 14c0fd6a9 to 1482cb36c: 02http://git.io/v8TFd
[14:25:17] <jqcommit> 13jquery/062.2-stable 1499f6e4f 15Oleg Gaidarenko: Build: Move test to appropriate module
[14:25:17] <jqcommit> 13jquery/062.2-stable 141c89796 15Oleg Gaidarenko: Build: Update commitplease dev dependency
[14:25:17] <jqcommit> 13jquery/062.2-stable 14fe936af 15Scott Gonz√°lez: Build: Upgrade to grunt-bowercopy 1.0.0
[14:51:13] <jqcommit> [13jquery] 15markelog pushed 4 new commits to 062.2-stable: 02http://git.io/v8McX
[14:51:13] <jqcommit> 13jquery/062.2-stable 141ad7e4e 15Micha≈Ç Go≈Çƒôbiowski: Tests: Remove Edge version from the user agent...
[14:51:13] <jqcommit> 13jquery/062.2-stable 14ff34423 15Micha≈Ç Go≈Çƒôbiowski: Tests: Remove test/data/ua.txt...
[14:51:13] <jqcommit> 13jquery/062.2-stable 14cd2de19 15Timmy Willison: Offset: return before getBoundingClientRect to avoid error in IE8-11
[15:52:11] <m_gol> markelog: I see you're already force-pushing to 2.2-stable... why?
[15:53:01] <m_gol> this is the branch where all 2.1.x tags lied, now they're all more off-the-tree
[15:53:26] <m_gol> oh, he's gone from here
[15:55:36] <m_gol> I thought we were going to discuss it first and not force-push a lot of commits to 2.2-stable which is not supposed to be an experimental branch... cc timmywil DaveMethvin
[15:56:16] <DaveMethvin> weren't we going to look a a spreadsheet or something?
[15:56:24] <m_gol> yes, we were
[15:56:35] <DaveMethvin> i definitely see that this is going to get hairy very quickly
[15:56:54] <DaveMethvin> it's hard to skip "unimportant" commits like test style cleanup
[15:57:10] <DaveMethvin> but it still seems that we can divide and conquer this
[15:58:04] <m_gol> there are now 205 commits on 2.2-stable from the point of detachment
[15:58:31] <m_gol> and all tags 2.1.0-2.1.4 are now not almost-on 2.2-stable as they were yesterday
[15:58:44] <m_gol> but completely separate, not on any branch
[16:09:21] <m_gol> markelog: are you there?
[16:09:27] <markelog> yeah
[16:09:43] <m_gol> why did you start force-pushing to 2.2-stable? :/ This is not an experimental branch, a lot of tags were lying on it
[16:10:15] <markelog> what tags?
[16:10:30] <m_gol> 2.1.0-2.1.4
[16:10:42] <m_gol> this was a renamed 2.1-stable branch that I renamed to 2.2-stable
[16:10:46] <m_gol> there is no 2.1-stable anymore
[16:11:01] <m_gol> I assumed we'll continue with this branch
[16:11:26] <markelog> incorrect assumption
[16:11:31] <DaveMethvin> I thought our next step was to identify the commits we wanted to land, there was supposed to be a spreadsheet?
[16:11:50] <m_gol> markelog: I'd prefer if you contacted the team before force-pushing to a branch on origin that you didn't create
[16:12:20] <m_gol> the renaming was consulted with others, force-pushing is dangerous so it should always be consulted
[16:12:32] <m_gol> also, what DaveMethvin said
[16:13:22] <markelog> DaveMethvin: i started to document that, but after couple hours it became clear, that without applying commits, that information is useless, since a lot commits would have merge conflicts
[16:13:41] <markelog> i documented the omitted ones though
[16:13:56] <markelog> m_gol: you didn't consult me
[16:14:00] <DaveMethvin> understood and expected, but it would be good for us to look at it before it all lands
[16:14:24] <m_gol> markelog: the whole team is not always there but I did talk about it with timmywil & DaveMethvin and timmywil makes final decisions
[16:14:34] <m_gol> you weren't here then btw
[16:14:36] <markelog> DaveMethin: i wanted to test these changes with all browser in our disposal
[16:15:02] <m_gol> if this is going to be separate then maybe we should restore 2.1-stable/1.11-stable
[16:15:06] <DaveMethvin> i was thinking that a lot of these commits should only touch one or two files (like dimensions and its unit tests) so it might be possible to split up the work
[16:15:25] <m_gol> unless we're fine with release tags lying completely outside of any branch.
[16:15:25] <markelog> since 2.2-stable was included in swarm it was a best way to do it
[16:15:54] <markelog> m_gol: you probably should ask me then?
[16:16:12] <markelog> since i was volunteer to do the work?
[16:16:22] <markelog> and i didn't know about that conversation
[16:16:27] <m_gol> markelog: why? you weren't here and you didn't say anything about the plans to force push anything
[16:16:37] <m_gol> or to even push, you only talked about a spreadsheet
[16:17:12] <m_gol> my point is that force-pushing an existing branch to something completely different is always dangereous as it's removing commits; I didn't remove any commits as I just renamed a branch and consulted the renaming before
[16:17:25] <markelog> DaveMethvin: i had a different plan in mind, there would be a lot information in the issue, that would need to be checked by other members
[16:18:14] <markelog> m_gol: well, because i would mostly work with that branch
[16:18:28] <markelog> i didn't know that this was 2.1-stable before
[16:18:38] <markelog> i think you should have told me that
[16:18:55] <markelog> i was under impression that this is boiler plate
[16:19:00] <markelog> also, there is tag
[16:19:06] <markelog> so nothing is removed
[16:19:33] <markelog> there you go https://github.com/jquery/jquery/commits/2.1.4
[16:19:33] <m_gol> fortunately nothing really was on the branch behind the tag but that wasn't always the case
[16:20:01] <markelog> i don't think "fortunately" is right word, "logically" is
[16:21:02] <m_gol> there's nothing logical about it, some commits could have been made after a release on the branch
[16:21:33] <markelog> that would strange, why would you want something after the release?
[16:21:58] <DaveMethvin> you can always get back to a point in git/github, although the force-pushes make me nervous ... i'm just concerned we're going to decide on what to put in the release based on how few merge conflicts there are, and that's not our primary criteria
[16:22:52] <markelog> DaveMethin: i wouldn't resolve all those conflicts if that was the main point 
[16:23:18] <markelog> force-push could be bad, if user don't know what their doing
[16:23:24] <markelog> it is not the case though
[16:23:44] <m_gol> markelog: for example to add a test that was missed before, or to add a new environment to test to make sure no changes are needed etc.
[16:24:09] <markelog> now that is "there's nothing logical about it"
[16:24:23] <DaveMethvin> i think *you* know what you're doing, but i'm not sure *we* know what you're doing :) Things just started getting pushed to a branch
[16:24:34] <markelog> m_gol: and there isn't any commits like that
[16:25:19] <markelog> DaveMethivin: oh, sorry to make nervous, i just needed to run, would replied otherwise 
[16:26:51] <m_gol> ok
[16:27:07] <markelog> it seemed as most productive way to test things quickly and in all matrix that we have
[16:27:34] <m_gol> markelog: I'm not saying your way of doing it wasn't reasonable... but it would be nice to nor be surprised about it, write on IRC next time or sth so that we know what's going on
[16:27:48] <m_gol> markelog: so, did you cherry-pick commit by commit, omitting the breaking ones?
[16:28:26] <markelog> sorry to make you nervous everyone, really didn't expect such reaction
[16:28:40] <markelog> m_gol: i'm on the page four
[16:28:54] <m_gol> markelog: ok, fine, I got nervous as well but all is fine now ;)
[16:29:01] <m_gol> four of how many?
[16:29:12] <markelog> currently, 26 commits are omitted
[16:29:25] <markelog> i mean https://github.com/jquery/jquery/commits?page=4
[16:29:50] <m_gol> ah, right, going to the newer ones
[16:30:04] <markelog> there is an issue with omitted show/hide changes
[16:30:10] <markelog> so that would require some work
[16:30:26] <m_gol> so about 105-140 commits left
[16:30:27] <markelog> i will tell my plan now, so it wouldn't be suprising
[16:30:31] <m_gol> :)
[16:30:49] <markelog> i will finish cherry-picking
[16:31:04] <markelog> all will be force-pushed to the 2.2 branch
[16:31:15] <markelog> then i will start again
[16:31:23] <markelog> check if something is missing
[16:31:52] <markelog> there was some weird reverts of backcompat changes that goes to beginning of 2014
[16:32:18] <m_gol> k, others may check the cherry-picked commits to double-check if nothing breaking got there by accident?
[16:32:40] <markelog> yeah, i have a list of questionable commits
[16:32:56] <m_gol> markelog: you mean outside of 2.2-stable or on it?
[16:33:09] <markelog> wait a sec :)
[16:33:17] <markelog> not finished with the plan
[16:33:32] <markelog> then, i would need to make fixes to make do with different behaviour of show/hide 
[16:33:51] <markelog> since some commits depend on that change
[16:34:10] <markelog> then, check all it again
[16:34:33] <markelog> then, i will create an issue, on which i will list all commits that i omitted 
[16:34:45] <markelog> and commits that in 2.2 branch
[16:34:47] <m_gol> markelog: btw, JSHint is failing on 2.2-stable, that's why it doesn't even start testing on browsers
[16:34:57] <markelog> but questionable 
[16:35:04] <markelog> yeah, because of the show/hide commit
[16:35:27] <markelog> so it will be failing for awhile 
[16:35:38] <m_gol> do you want to fix it afterwards and leave it broken in the middle?
[16:35:41] <markelog> then, we would need to do the same for 1.2 branch
[16:35:52] <m_gol> * 1.12 :)
[16:35:58] <markelog> yeah-yeah
[16:36:04] <markelog> see above
[16:36:05] <markelog> "then, i would need to make fixes to make do with different behaviour of show/hide"
[16:36:22] <markelog> but with 1.12
[16:36:30] <markelog> i will try different approach
[16:36:41] <markelog> i want to make a copy of current compat branch
[16:36:42] <m_gol> yeah, I'm asking if you want to fix past commits on 2.2-stable, i.e. rewrite the branch or fix it via new commits on top of the branch
[16:36:52] <markelog> to 1.12
[16:36:54] <markelog> branch
[16:37:09] <markelog> then i will try revert back-incompat changes
[16:37:29] <markelog> yeah, with new commits
[16:38:19] <markelog> or how it will goes, not exact at the moment
[16:38:54] <markelog> sounds good?
[16:39:10] <m_gol> I guess if we backport these many commits it doesn't really matter whether we cherry-pick & omit the breaking ones or if we revert the breaking changes... the risk of comittin sth breaking is in both cases
[16:39:35] <markelog> the thing is
[16:39:41] <markelog> it is easy to revert 30 commits
[16:39:46] <markelog> then cherry-pick a 300
[16:39:50] <m_gol> I see
[16:40:18] <m_gol> you don't want to try that on 2.2, though?
[16:40:28] <markelog> maybe
[16:40:38] <markelog> the problem is
[16:40:45] <markelog> there is 10 or so commits
[16:40:53] <markelog> that implement new feature
[16:40:57] <markelog> or back-incompat
[16:40:59] <markelog> and
[16:41:09] <markelog> in 10 commits in the future
[16:41:14] <markelog> they are reverted
[16:41:21] <m_gol> lol
[16:41:29] <markelog> so i found myself in situation
[16:41:54] <markelog> when i tring to cherry-pick a reverted commit, which was never pushed to my branch
[16:42:08] <markelog> or there is commits that improve back-incompat changes
[16:42:19] <markelog> also 10-15 commits ahead
[16:42:33] <markelog> so because of that
[16:42:54] <markelog> there might be situation problematic situation
[16:43:31] <markelog> since i might succeed in landing of "improvement" commit of the back-incompat change 
[16:43:42] <markelog> then everything will break
[16:43:54] <markelog> and to be sure, i would need to start all over again
[16:44:07] <markelog> or pin point the problematic change
[16:44:43] <markelog> DaveMethvin: cool?
[16:45:03] <markelog> m_gol: so everything is clear now?
[16:45:29] <DaveMethvin> i see the problems now ... it is never pretty to watch sausage being made :)
[16:45:54] <markelog> DaveMethvin: yeah, pretty gloomy work, but, as expected i guess :-)
[16:46:05] <m_gol> markelog: well, there's always git bisect ;p
[16:46:13] <m_gol> if you find the latest commit broken
[16:46:30] <markelog> yeah, it could be united with the jshint
[16:46:33] <markelog> at least
[16:46:54] <markelog> wouldn't help with bug with the browser though
[16:47:07] <m_gol> yeah, not with those
[16:47:25] <m_gol> I hope we have good tests ;)
[16:47:39] <markelog> there is couple commits
[16:47:40] <m_gol> ok, so we'll see how easy it will be for you with 1.12
[16:47:47] <markelog> when back-incompat changes were landed
[16:47:53] <markelog> with improvement of the tests
[16:48:05] <markelog> so by missing such commits
[16:48:07] <m_gol> if it turns out relatively easy it might be easier to do the same with 2.2 than continue with how you started; but you'll see
[16:48:20] <markelog> they will conflict with other changes
[16:48:39] <markelog> so you need to be very careful not to include bad tests
[16:49:02] <m_gol> well, if you go with the reverting route you can look at every commit you omit and make sure its tests should be omitted as well or maybe some can be taken into etc.
[16:49:07] <markelog> m_gol: that is my hope as well
[16:49:35] <markelog> yeah, even without a force-push :)
[16:49:42] <m_gol> :-)
[16:49:48] <m_gol> markelog: k, good luck, I should be around tomorrow so come to IRC if sth gets hairy
[16:49:51] <markelog> but, in some cases, i would need to remove incorrect revert
[16:50:00] <m_gol> right
[16:50:05] <markelog> i hope i will have a spreadsheet by that time
[16:50:24] <markelog> there is also 11 commits
[16:50:31] <markelog> that are landed
[16:50:38] <markelog> but might not need be
[16:50:56] <markelog> there will be more by the time i will finish
[16:50:57] <m_gol> markelog: if you find yourself re-doing 2.2 the way you plan to do 1.12 you may archive the previous 2.2-stable so that you can change the approach if the latter one proves difficult
[16:51:13] <markelog> both with questionable commits and omitted ones
[16:51:35] <markelog> m_gol: yep, that is my line of thought too
[16:52:18] <m_gol> one thing we could try to do
[16:52:30] <m_gol> is to run 2.1.4 unit tests on the code you end up with on 2.2-stable
[16:52:42] <m_gol> and see what fails, if those are legitimate failures or a too specific test
[16:53:00] <m_gol> same with 1.11.3 & 1.11-stable code
[16:53:35] <markelog> yeah, might be a good idea
[16:53:53] <m_gol> markelog: one other thing
[16:54:19] <m_gol> for all commits that we end up with on 2.2.0 or 1.12.0 we'll need to change the milestone on GitHub
[16:54:25] <m_gol> in the issues
[16:54:50] <m_gol> from "3.0.0" to "1.12/2.2"
[16:54:51] <markelog> right
[16:54:56] <markelog> wanted to start doing that
[16:55:09] <markelog> but since i was going from the other side
[16:55:14] <markelog> i didn't
[16:55:14] <m_gol> but if we go with the reverting route, we'll need to be careful to not change it for every commit on the branch as some are reverted
[16:55:20] <markelog> we could generate such least though
[16:55:36] <m_gol> yeah, should be possible
[16:55:47] <m_gol> the GitHub API should allow to change a milestone in the issue
[16:55:55] <markelog> take all the commits between 2.0(1?)
[16:56:07] <markelog> then take all "Fixes #"
[16:56:16] <markelog> remove those that are in 2.x.x
[16:56:31] <markelog> and then go though those issues
[16:56:31] <m_gol> then substract all with "Fixes #NUM" in reverted commits
[16:56:45] <markelog> yeah, that too
[16:56:53] <markelog> wouldn't use github api though
[16:57:01] <m_gol> yeah, we should look at that list anyway
[16:57:07] <m_gol> before changing the milestone, to be sure
[16:57:16] <markelog> they have strict limitations even for the apps
[16:57:20] <m_gol> ah, ok
[16:57:26] <markelog> yeah, okay, noted
[16:57:41] <markelog> will post such list in the same issues
[16:57:54] <markelog> we could even use are changelog generator
[16:58:03] <markelog> *our
[16:58:21] <m_gol> good idea :)
[16:58:40] <markelog> cool, cool cool
[16:59:03] <markelog> i'm out, will be back in couple hours
[16:59:08] <m_gol> k, cu!
[17:28:21] <jqcommit> [13jquery] 15Chealer opened issue #2704: Types does not explain how named functions can be passed 02http://git.io/v8DBa
[17:53:58] <jqcommit> [13jquery] 15timmywil closed issue #2704: Types does not explain how named functions can be passed 02http://git.io/v8DBa
[21:39:36] <scott_gonzalez> AHHHH!!!
[21:39:48] <scott_gonzalez> I've got a page in Chrome on iOS that is showing alerts over and over.
[21:40:14] <scott_gonzalez> Closing Chrome and reopening results in the page just reloading and another never-ending stream of alerts.
[21:40:23] <scott_gonzalez> Anyone know how I can get this to stop?
[21:43:02] <gibson042> if the page isn't cached, airplane mode might save you
[21:43:56] <scott_gonzalez> It was cached.
[21:44:11] <scott_gonzalez> It was a local server and I didn't even have it running anymore.
[21:44:55] <gibson042> :\
[21:44:55] <scott_gonzalez> After several attempts, I was finally able to close the tab during page load before the never-ending alerts started.
[21:45:00] <DaveMethvin> so are these like alert()s? And there's no check box to make it stop?
[21:45:11] <scott_gonzalez> I'm pretty sure that you just have to be super fast to break out of this.
[21:45:18] <gibson042> party like it's 1999!
[21:45:28] <scott_gonzalez> No, because it's inside a deviceorientation alert, so Chrome doesn't see it as repeated alerts.
[21:45:35] <DaveMethvin> oh, ugh
[21:47:53] <scott_gonzalez> Hmm...no fetch()?!?
[21:50:35] <scott_gonzalez> I wonder why it fetch doesn't exist in iOS.
[23:31:38] <sizcommit> [13sizzle] 15gibson042 opened issue #366: Reorganize docs 02http://git.io/v8yNf
