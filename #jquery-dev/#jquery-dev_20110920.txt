[05:48:43] <jaubourg> hello
[06:09:18] <timmywil> go DaveMethvin!
[06:09:39] <DaveMethvin> pretty soon the bug count will go negative!
[06:18:21] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/R-hhgg
[06:18:21] <jqcommit> [jquery/master] Fix #9901, verified by this unit test. - Dave Methvin
[06:21:10] <addyosmani> ?10028
[06:21:12] <bot-t> [#10028]  (open bug) - http://jqbug.com/10028
[06:21:35] <addyosmani> timmywil, is it worth addressing the needsdocs on that given that the behaviour is borked in under 6/7?.
[06:22:28] <addyosmani> imo, might be better to wait until a fix comes along, but if you disagree, I'll doc anyway.
[06:23:50] <timmywil> addyosmani: yea i would wait
[06:24:15] <timmywil> it's low priority
[06:24:34] <addyosmani> that's cool.
[06:24:41] <timmywil> DaveMethvin: http://gitref.org/
[06:24:54] <addyosmani> Just trying to clear any of these low-hanging fruit out of the way in case anyone needs some help with 1.7 docs stuff later.
[06:25:10] <timmywil> addyosmani: nice
[06:25:59] <DaveMethvin> timmywil: that will prove handy, thanks!
[06:26:24] <timmywil> np :)
[06:28:51] <rwaldron> good morning timmywil DaveMethvin gnarf
[06:29:02] <timmywil> rwaldron: mornin!
[06:29:07] <DaveMethvin> good morning!
[06:29:36] <DaveMethvin> hmmm, it looks like something recently broke the unit tests
[06:29:43] <timmywil> yay!
[06:29:47] <DaveMethvin> might have been an event change
[06:30:56] <rwaldron> DaveMethvin I dont think you were around when I had everyone review my draft of the event prop hooks stuff...
[06:30:57] <rwaldron> https://gist.github.com/dd6bbdcb3f9b22fbfba5
[06:31:20] <rwaldron> I had everyone here weigh in on it
[06:31:36] <rwaldron> and this is what the pull request delivers
[06:31:54] <rwaldron> (I'm wondering though, if i should check for merge conflict)
[06:33:32] <rwaldron> ugh
[06:33:48] <rwaldron> timmywil DaveMethvin dont bother with p502 yet
[06:33:55] <jaubourg> hey rick, don't forget what you know you must find out regarding who you know I asked about... you know ;)
[06:33:59] <DaveMethvin> i'd  like to see jQuery.event.fix refactored before it lands, to get an idea of whether the approach needs any more/fewer features
[06:34:21] <timmywil> jaubourg: wat
[06:34:32] <DaveMethvin> that was for rwaldron
[06:34:35] <rwaldron> jaubourg yikes, thanks fo rthe reminder
[06:34:44] <jaubourg> oh hai timmy :)
[06:34:45] <rwaldron> DaveMethvin ok
[06:34:51] <jaubourg> rick: yeah, figured ;)
[06:34:56] <timmywil> jaubourg: hi :)
[06:35:02] <rwaldron> shit.
[06:35:08] <DaveMethvin> is anyone else seeing unit test failures on master?
[06:35:12] <rwaldron> I'm being called to a meeting
[06:35:19] <rwaldron> Back as soon as I can
[06:35:24] <DaveMethvin> i'm about to learn git-bisect, that's how desperate i am
[06:35:44] <DaveMethvin> always wanted to do that anyway
[06:36:26] <timmywil> DaveMethvin: running now
[06:36:30] <DaveMethvin> seems to be hanging at Running manipulation: append the same fragment with events (Bug #6997, 5566)
[06:37:11] <DaveMethvin> yeah, repeatable: http://localhost/jquery/test/?filter=append%20the%20same%20fragment
[06:37:52] <jaubourg> so proud of my own sentence: "jQuery can only do so much magic before becoming an inconsistent piece of script."
[06:38:10] <timmywil> yea, i see it
[06:41:06] <DaveMethvin> timmywil: it still happens if i go back to 1.6.4
[06:41:06] <DaveMethvin> or am i crazy?
[06:41:13] <DaveMethvin> the two aren't mutually exclusive of course
[06:41:20] <DaveMethvin> oh maybe it's the qunit update?
[06:41:25] <timmywil> that would be crazy
[06:41:29] <timmywil> ahhh
[06:41:31] <timmywil> possibly
[06:41:57] <timmywil> hmm, we're passing stop an argument of 1000
[06:43:35] <timmywil> removing the 1000 fixes it
[06:43:49] <timmywil> im not sure why that was there. doesn't look like it was needed
[06:44:48] <DaveMethvin> i dropped back to 1.6.4 and ran make, it switched back to the old qunit ... not sure why it should still break tho
[06:44:52] <DaveMethvin> just seems ... odd
[06:45:29] <timmywil> cache?
[06:47:09] <DaveMethvin> maybe ... when this sorta thing happens i always wonder how long it will be before we REALLY figure out what happened and realize it was important
[06:47:30] <jaubourg> ok, I browsed into some ajax bugs
[06:47:51] <timmywil> DaveMethvin: im not sure make will revert qunit
[06:48:01] <timmywil> once it has updates, it's hard to go back
[06:48:17] <timmywil> without a hard reset
[06:48:24] <jaubourg> heh
[06:48:27] <DaveMethvin> oh yeah i see the "already up to date"
[06:48:29] <DaveMethvin> missed that
[06:48:34] <jaubourg> I think timmy's right
[06:49:13] <DaveMethvin> so...why was that stop(1000) there?
[06:50:19] <timmywil> i don't even know what that does :P
[06:50:40] <timmywil> the argument that is
[06:51:19] <timmywil> wait, it means stop 1000 times?
[06:51:22] <timmywil> that can't be right
[06:51:32] <DaveMethvin> yeah that sounds wrong
[06:51:36] <timmywil> that would certainly cause it to hang
[06:51:37] <DaveMethvin> maybe it was just added?
[06:52:02] <timmywil> ahah
[06:52:10] <timmywil> that's what it means now, but
[06:52:10] <timmywil> Note: This used to be the timeout argument, which was never recommended for use in non-debugging code. If you need a global timeout, set QUnit.config.testTimeout instead.
[06:52:16] <timmywil> it used to be a timeout
[06:52:23] <DaveMethvin> https://github.com/jquery/qunit/commit/61137fd6d1813b5f9ab2dfe7e4749ef1d51115d9
[06:52:24] <socialhapy> ★ Commit on qunit by wwalser (2d, 6h ago): added parameter to start and stop allowing a user to increment/decrement the semaphore more than once per call
[06:52:24] <DaveMethvin> yeah
[06:52:26] <DaveMethvin> lol
[06:52:36] <timmywil> well, we don't want that
[06:52:43] <timmywil> and we don't really need a timeout
[06:53:38] <DaveMethvin> yeah, kinda seems like a breaking change to me
[06:53:57] <DaveMethvin> but what do i know, i want to removeData("a b c") :P
[06:54:25] <timmywil> DaveMethvin: you think a timeout is needed?
[06:54:33] <timmywil> i mean, we could stick on in manually
[06:54:38] <timmywil> im not sure what difference it makes
[06:54:42] <DaveMethvin> lemme look
[06:54:45] <timmywil> it just needs to fire a click handler
[06:55:54] <DaveMethvin> yeah i don't see why stop/start is needed at all?
[06:56:57] <timmywil> true i don't think that's async
[06:57:07] <timmywil> but it's fine with it in there
[06:57:12] <DaveMethvin> sure doesn't look like it
[06:57:45] <DaveMethvin> well the 1000 has to go but it should work as-is otherwise i agree
[06:58:21] <DaveMethvin> i have a meeting at 10 so i have to go in a sec
[06:58:31] <timmywil> kk
[06:58:52] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/q6-Ufw
[06:58:52] <jqcommit> [jquery/master] Remove stop argument in manipulation test, which no longer sets a timeout - timmywil
[07:08:01] <timmywil> jaubourg: can you review https://github.com/jquery/jquery/pull/505 when you get a chance?
[07:08:02] <socialhapy> ★ Pull request on jquery by Nemesis9765 (4d, 18h ago): Fixes #10287: AJAX: Implemention of ifModified attribute for pushing changes to server
[07:14:03] <timmywil> eek, github down
[07:14:15] <timmywil> ?down github.com
[07:14:22] <bot-t> timmywil, It's not just you! - http://github.com looks down from here.
[07:29:45] <addyosmani> weird. its up here atm timmywil
[07:30:23] <timmywil> it came back
[07:30:46] <timmywil> it was only down for a min looks like
[07:31:50] <timmywil> down to 10 pulls https://github.com/jquery/jquery/pulls
[07:40:35] <jaubourg> timmywil: I already said what I had to say in the bug report
[07:40:36] <jaubourg> ;)
[07:41:21] <timmywil> jaubourg: should we close the pull?
[07:41:46] <timmywil> doesn't sound like you think it should be in core
[07:41:51] <jaubourg> I think we should, it's easy enough to implement a ifModified option with a prefilter
[07:42:05] <jaubourg> well, ifNotModified actuallu
[07:42:06] <jaubourg> y
[07:42:09] <jaubourg> but you get the idea
[08:24:20] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/ECIeNw
[08:24:20] <jqcommit> [jquery/master] Landing pull request 509. Add a comment explaining the use of document.getElementsByTagName('body')[0] instead of document.body. - Mathias Bynens
[08:34:53] <rwaldron> DaveMethvin are you currently working on event stuff?
[08:36:27] <DaveMethvin> rwaldron: not atm, i have a branch that will change some ie special events
[08:36:37] <rwaldron> ok
[08:36:54] <rwaldron> i have some refactoring of jQuery.event.fix
[08:37:09] <rwaldron> i think i need some guidance
[08:37:13] <rwaldron> :\
[08:37:24] <rwaldron> i just realized that i didnt take into account namespaces
[08:37:46] <rwaldron> if i push this up, can you take a look?
[08:37:48] <rwaldron> or busy?
[08:37:57] <DaveMethvin> sure gimme a link
[08:38:32] <rwaldron> ok, this is the branch
[08:38:32] <rwaldron> https://github.com/rwldrn/jquery/tree/merge-8789
[08:38:54] <rwaldron> specific commit
[08:38:54] <rwaldron> https://github.com/rwldrn/jquery/commit/7b797156a6d78e1bd91fe5b2c39e51cb8082480c
[08:38:55] <socialhapy> ★ Commit on jquery by rwldrn (5m, 34s ago): Refactor jQuery.event.fix()
[08:40:59] <rwaldron> useful as well..
[08:40:59] <rwaldron> https://github.com/rwldrn/jquery/commit/ce6777c27d8e9a97ea1cd0bddcaacf25e74bd2d6
[08:41:00] <socialhapy> ★ Commit on jquery by rwldrn (18m, 4s ago): Resolve conflict
[08:43:59] <DaveMethvin> rwaldron: ok i took  a look, was there a particular problem?
[08:44:09] <DaveMethvin> i don't think namespaces should come into play
[08:45:22] <rwaldron> oh ok
[08:45:35] <rwaldron> i think i was just getting axious
[08:45:41] <rwaldron> anxious
[08:45:59] <rwaldron> the refactoring needs to be tested
[08:46:07] <DaveMethvin> i know there are like a bazillion things
[08:46:26] <DaveMethvin> so do we need the object case there? Seems like the hooks are usually fns and the code for the object case is big
[08:46:49] <DaveMethvin> plus that's symmetrical with the other hooks which are always fns
[08:49:14] <rwaldron> the other hooks are objects
[08:49:34] <rwaldron> hook["foo"] = { get: function(){}, set: function(){} }
[08:49:59] <rwaldron> dammit
[08:50:04] <rwaldron> this whole thing flawed
[08:50:37] <rwaldron> so, we've defined hooks for all of these events, internally
[08:51:12] <rwaldron> if a dev wants to make a hook for a property of "click", they will blow away the hook that exists
[08:51:14] <rwaldron> :(
[08:51:33] <rwaldron> DaveMethvin ^
[08:51:35] <DaveMethvin> which is true for the other hooks as well, but perhaps not as much of a problem
[08:51:47] <rwaldron> i just used that as an example
[08:51:55] <rwaldron> in favoring of listing them all
[08:52:07] <DaveMethvin> i think your use case was for events we don't currently handle
[08:52:14] <rwaldron> it was
[08:52:20] <DaveMethvin> which will be okay
[08:52:34] <rwaldron> but there is nothing stopping an end dev from redefining the ones we've created
[08:52:40] <rwaldron> and fucking everything
[08:52:41] <DaveMethvin> imo these hooks are not intended to be end-user extension points
[08:53:06] <rwaldron> ok, fair enough
[08:53:28] <DaveMethvin> but in that case maybe we need to think a bit more about these issues
[08:53:30] <rwaldron> but then who is going to define the hooks for the events we don't currently handle?
[08:53:56] <DaveMethvin> someone who wants to fix something we don't want in core
[08:54:00] <rwaldron> exactly
[08:54:02] <DaveMethvin> so it could be ui for example
[08:54:16] <DaveMethvin> and  i mean fix in the case of an event like dragenter or such
[08:54:32] <DaveMethvin> it's not broken now but you have to look in originalEvent for example
[08:54:44] <rwaldron> and what if that thing that UI wants to fix is... click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave contextmenu
[08:55:01] <DaveMethvin> they are screwed! :P
[08:55:15] <DaveMethvin> they'd  need to save the old  hook, add theirs, and call ours
[08:55:19] <rwaldron> yeah
[08:55:30] <DaveMethvin> but that's true for the other  hooks too
[08:55:41] <rwaldron> yeah, i guess you're right
[08:55:48] <rwaldron> no, not guess, you are
[08:55:58] <rwaldron> so maybe i'm _over_ thinking
[08:56:15] <DaveMethvin> well usually i under think so i guess it averages out
[08:56:27] <rwaldron> not true
[08:56:30] <rwaldron> hahahaha
[08:56:39] <rwaldron> you're my go-to guy!
[08:56:48] <DaveMethvin> how did you know i used gotos?
[08:57:07] <rwaldron> the problem is i end up getting mired in ridiculous edge cases
[08:57:15] <DaveMethvin> so do we need the object form of these hooks?
[08:57:21] <DaveMethvin> if not this is pretty small
[08:57:51] <DaveMethvin> i didnt' see any object ones in the link you sent
[08:58:00] <rwaldron> no, but i think there are tests
[08:58:12] <rwaldron> but that acn change
[08:58:13] <rwaldron> can*
[08:58:33] <rwaldron> function style can do everything object style can do
[08:58:45] <DaveMethvin> we don't have the get/set distinction for fix
[08:58:46] <rwaldron> no, not true
[08:59:02] <rwaldron> sorry, i meant "no, not true" as a response to myself
[08:59:10] <rwaldron> object allows this...
[08:59:56] <rwaldron> jQuery.event.propHooks.foo = { thing: function(){} }
[09:00:04] <rwaldron> jQuery.event.propHooks.foo.anotherProp = function() {}
[09:00:19] <rwaldron> jQuery.event.propHooks.foo.evenMore = function(){}
[09:00:28] <rwaldron> which is nice
[09:00:28] <DaveMethvin> do you need that for the ones we already have?
[09:00:42] <rwaldron> no
[09:00:49] <rwaldron> but, i like it
[09:00:57] <DaveMethvin> i like jennifer lopez
[09:01:00] <rwaldron> and when i showed everyone here, they all seemed to like it
[09:01:35] <DaveMethvin> if we don't need it right now then lets wait until we need it to add it
[09:01:41] <rwaldron> also..
[09:01:49] <rwaldron> jQuery.event.propHooks.foo.justCopyMe = true;
[09:02:05] <rwaldron> will shortcut to just copying from originalEvent
[09:02:08] <rwaldron> no function
[09:02:47] <DaveMethvin> this is why i'd like to see some real life stuff
[09:03:37] <DaveMethvin> these are real bytes we're spending, i was so sure we could have 1.7 be smaller but if we add a bunch of "nice to have one day" features that nobody has proven a need for then we'll support them forever
[09:03:37] <rwaldron> DaveMethvin http://jsfiddle.net/s9EXK/2/
[09:03:53] <rwaldron> yeah, i'm with you
[09:04:34] <DaveMethvin> it's not even that horrendous to have the event handler just say var files = e.originalEvent.files;
[09:04:49] <rwaldron> yeah
[09:05:01] <rwaldron> but then... that was the whole motivation for the ticket
[09:05:09] <rwaldron> but still, i hear ya
[09:05:16] <DaveMethvin> well if its just a function there's almost no code
[09:05:20] <rwaldron> "nice to have" is not really what jQuery does
[09:05:53] <rwaldron> ok
[09:05:55] <rwaldron> i'm with you
[09:05:59] <DaveMethvin> i don't mind proven nice-to-have especially if we need it internally
[09:06:13] <DaveMethvin> like the function form of this seems like it could clean up fix
[09:06:18] <rwaldron> basically, the only argument is to allow shit to be scattered throughout code, which is dumb anyway
[09:06:38] <DaveMethvin> although having to name all the events as strings will prolly add a lot of bytes to event.js
[09:06:40] <rwaldron> i can do the same thing that you see in that demo, with a function
[09:07:11] <jzaefferer> hey dudes! I remember seeing a (cake) diagram highlighting the filesizes of various jQuery modules - does someone have a link to that around? (my google fu isn't good enough for that one)
[09:07:13] <rwaldron> I wanna try to reuse the loop before it
[09:07:33] <rwaldron> DaveMethvin ^
[09:07:35] <DaveMethvin> jzaefferer: i think that's hard to get actually
[09:08:09] <DaveMethvin> you can get the uglified size of each file, but then they're combined so that the global closure can compress things like undefined
[09:08:22] <DaveMethvin> so the individual sizes won't sum to the size of jquery.js
[09:08:47] <rwaldron> DaveMethvin
[09:08:49] <rwaldron> 	applyPropHooks: function( event, original ) {
[09:08:49] <rwaldron> 		return this.propHooks[ event.type ]( original || event ) || event;
[09:08:49] <rwaldron> 	},
[09:08:52] <rwaldron> :)
[09:09:22] <jzaefferer> DaveMethvin: sure, but it gives you an idea of the individual compoents - I've seen that diagram already, it exists, I just can't find it...
[09:09:22] <DaveMethvin> rwaldron: could you save a fn call by doing that in fix?
[09:09:32] <jzaefferer> maybe matjas knows something?
[09:09:52] <DaveMethvin> yeah matjas seems to be watching that
[09:09:55] <rwaldron> matjas ^^ what is the link to your chart?
[09:10:02] <rwaldron> DaveMethvin i was doing that originally
[09:10:16] <matjas> rwaldron, jzaefferer: http://mths.be/demo/jquery-size
[09:10:19] <DaveMethvin> like i mentioned i am still holding out hope that 1.7 will be smaller overall, despite all the additions and bug fixes
[09:10:22] <rwaldron> but if i do, it wont get called if fix doesnt get called
[09:11:03] <rwaldron> sorry, not that it doesnt get called, i meant that in the case of custom events, fix returns at the first condition
[09:11:08] <rwaldron> so this is called in 2 places
[09:11:14] <rwaldron> actually
[09:11:16] <rwaldron> fuck it
[09:11:19] <rwaldron> no, you're right
[09:11:21] <DaveMethvin> rwaldron: oic what you mean
[09:11:26] <rwaldron> i can just call this directly
[09:11:31] <rwaldron> yes yes
[09:11:33] <rwaldron> one sec
[09:11:48] <rwaldron> replace....
[09:11:49] <rwaldron> 		if ( jQuery.event.propHooks[ event.type ] ) {
[09:11:50] <rwaldron> 			event = jQuery.event.applyPropHooks( event, originalEvent );
[09:11:50] <rwaldron> 		}
[09:11:52] <DaveMethvin> but if its a fake event without an originalEvent then i am not sure the hooks should be called anyway
[09:12:05] <jzaefferer> thanks matjas, but that doesn't look at the individual pieces
[09:12:37] <DaveMethvin> rwaldron: but then on the other hand that might be a case where you *do* want to call them
[09:12:42] <rwaldron> 		if ( jQuery.event.propHooks[ event.type ] ) {
[09:12:42] <rwaldron> 			event = jQuery.event.propHooks[ event.type ]( originalEvent || event ) || event;
[09:12:42] <rwaldron> 		}
[09:12:47] <rwaldron> DaveMethvin ^^
[09:13:10] <DaveMethvin> i think this is running into several of the same issues i had with special events
[09:13:19] <rwaldron> this will work
[09:13:27] <rwaldron> what i just showed
[09:13:31] <rwaldron> very nicely
[09:13:41] <rwaldron> applyPropHooks is out
[09:13:42] <DaveMethvin> ok so how do you tell fake triggered evnets from browser ones
[09:14:01] <DaveMethvin> if originalevent was null you'd know
[09:14:08] <DaveMethvin> but then the fns would have to always check for that
[09:14:09] <rwaldron> yeah
[09:14:11] <rwaldron> thats how
[09:14:26] <rwaldron> in handle: i pass just "event"
[09:14:36] <rwaldron> 		if ( jQuery.event.propHooks[ event.type ] ) {
[09:14:36] <rwaldron> 			event = jQuery.event.propHooks[ event.type ]( event );
[09:14:36] <rwaldron> 		}
[09:14:54] <rwaldron> let me push this up
[09:14:58] <rwaldron> and you'll see
[09:15:37] <matjas> brb
[09:21:51] <rwaldron> DaveMethvin so this is still using applyPropHooks, but https://github.com/rwldrn/jquery/commit/6f181c84e830120fe089454daf1ca73d2b1c6b79
[09:21:51] <socialhapy> ★ Commit on jquery by rwldrn (1m, 16s ago): Reduce event.propHooks.foo to function defs only
[09:22:00] <rwaldron> i wanted two sep commits
[09:24:16] <rwaldron> and this is after removing applyPropHooks https://github.com/rwldrn/jquery/commit/df6e36d2f1993e6d158d6ad89739463e971be1ca
[09:24:17] <socialhapy> ★ Commit on jquery by rwldrn (56.102s ago): Removes applyPropHooks
[09:24:55] <DaveMethvin> rwaldron: wow, saved a lot of code there
[09:25:04] <DaveMethvin> didn't make the usage much larger
[09:25:05] <rwaldron> hi just forced a commit
[09:25:10] <rwaldron> ack
[09:25:12] <rwaldron> i*
[09:25:16] <rwaldron> take a look
[09:25:28] <rwaldron> eh
[09:25:37] <rwaldron> nevermind, i need to undo that
[09:26:10] <rwaldron> yay
[09:26:18] <rwaldron> passing all the event tests
[09:26:30] <rwaldron> and i removed the stuff that expected object support
[09:28:00] <rwaldron> um.
[09:28:20] <rwaldron> we have no tests for the event.which and event.pageX/Y stuff
[09:28:25] <rwaldron> i just commented it out
[09:28:29] <rwaldron> and passed every test
[09:29:14] <rwaldron> hm, i guess because those expect interaction
[09:29:54] <DaveMethvin> welcome to my nightmare
[09:30:23] <DaveMethvin> i am going thru that with the ie form event tests
[09:30:23] <DaveMethvin> they can only be tested manually
[09:31:48] <timmywil> o hai
[09:32:22] <timmywil> should we have a bug triage before 1.7 release?
[09:32:48] <timmywil> i'm guessing there will not be time
[09:32:58] <DaveMethvin> at the very least we should go thru unreviewd bugs
[09:33:09] <DaveMethvin> they are starting to pile up
[09:35:57] <rwaldron> DaveMethvin i did that yesterday
[09:36:04] <rwaldron> i zero'ed the list
[09:36:11] <DaveMethvin> sweet!
[09:36:32] <rwaldron> WOOO
[09:36:33] <rwaldron> dude
[09:36:36] <DaveMethvin> musta been so many closed tix i didn't notice
[09:36:41] <rwaldron> i jsut removed that gross-ass loop
[09:36:42] <rwaldron> :D
[09:36:44] <rwaldron> !!!!!!!!!!!!!
[09:36:56] <rwaldron> rmouseEvents = /mouse|click/
[09:37:07] <rwaldron> and the loop that makes the shorthands now...
[09:37:22] <rwaldron> if ( rmouseEvents.test(name) )  { ....
[09:37:25] <rwaldron> lemme push this
[09:37:30] <DaveMethvin> rmouseEvents = /^(?:mouse|click)/
[09:37:37] <rwaldron> cool
[09:39:16] <rwaldron> DaveMethvin https://github.com/rwldrn/jquery/commit/f14e0846d516baf92a2373c2e54d969a46ff2947
[09:39:17] <socialhapy> ★ Commit on jquery by rwldrn (1m, 3s ago): Removes second gross loop
[09:40:53] <rwaldron> timmywil btw, this commit will support your comment
[09:40:58] <rwaldron> http://bugs.jquery.com/ticket/6942
[09:41:11] <timmywil> rwaldron: nice
[09:41:20] <DaveMethvin> oh, icy what you did there
[09:41:21] <timmywil> then we can close that pull
[09:41:40] <DaveMethvin> definitely sweet, rwaldron since it eliminates the duplicate long-ass string
[09:41:54] <timmywil> DaveMethvin: we're down to 7 pulls btw
[09:42:10] <DaveMethvin> and it's only tuesday :P
[09:42:18] <timmywil> :D
[09:42:30] <timmywil> and 1 is rwaldron's event hooks
[09:42:39] <DaveMethvin> i want to land my new ie change/submit handler stuff tonight
[09:42:47] <timmywil> another is gnarf's css expand, but I'm not sure how I feel about the size of that
[09:43:00] <rwaldron> i'm going to move this stuff over to the real branch now
[09:43:03] <rwaldron> its getting out of hand
[09:43:08] <rwaldron> it's
[09:43:15] <rwaldron> i think its ready
[09:43:18] <rwaldron> it feel solid
[09:43:22] <rwaldron> less moving parts
[09:43:36] <DaveMethvin> so maybe thursday or so we could have a 1.7 beta and announce it so we could get some real-life testing
[09:43:57] <timmywil> sounds like a plan
[09:44:02] <DaveMethvin> is there anything big that needs to land? i think we got it all
[09:44:20] <DaveMethvin> i can work on some detailed release notes, b/c people will need that
[09:44:27] <timmywil> like i said, i'm a little concerned about gnarf's pull.  would like to hear what people think
[09:44:46] <timmywil> https://github.com/jquery/jquery/pull/508/files
[09:44:47] <socialhapy> ★ Pull request on jquery by gnarf37 (2d, 8h ago): 1.7 adding a cssHooks[prop].expand for use by animate() - Fixes #8498
[09:44:49] <DaveMethvin> if it's big i'm against it! :)
[09:45:00] <timmywil> I like the implementation, but it's quite a few lines for such an edge case
[09:45:15] <DaveMethvin> i swear we are gonna make this version smaller
[09:45:39] <danzik17> how is that rMouseEvent regex matching events like "dblclick" or "contextmenu" which were in the string previously?  different behaviors i'd think
[09:45:43] <rwaldron> ;)
[09:45:46] <rwaldron> good call
[09:45:54] <rwaldron> I'll add those in
[09:46:19] <DaveMethvin> thanks danzik17!
[09:53:04] <rwaldron> DaveMethvin is there a better way to write this...
[09:53:08] <rwaldron>   /^(?:mouse)|(?:click)|(contextmenu)/
[09:53:21] <rwaldron> (it works)
[09:54:08] <timmywil> hi jrburke1
[09:54:11] <timmywil> 1 = !
[09:55:46] <rwaldron> DaveMethvin timmywil https://github.com/jquery/jquery/pull/502/files
[09:55:46] <socialhapy> ★ Pull request on jquery by rwldrn (5d, 22h ago): 1.7 Implements event property hooks. Fixes #8789
[09:55:47] <rwaldron> for review
[09:55:50] <rwaldron> :D
[10:00:56] <timmywil> brb
[10:02:06] <rwaldron> i have to leave the office for a bit
[10:02:09] <rwaldron> i'll be back later
[10:02:21] <rwaldron> so any reviews, i guess just put in the PR?
[10:15:40] <rwaldron> DaveMethvin updated
[10:15:45] <rwaldron> ok, leavin'
[12:00:01] <socialhapy> ★ Tweet from jquery: Just Announced: HTML5 Training right before jQuery Conference Boston! Get your seats now... http://t.co/igK243sd ★ http://bit.ly/qOnrcp
[12:09:41] <rwaldron> DaveMethvin http://jsfiddle.net/rwaldron/fuhtf/
[12:34:55] <gnarf> hey timmywil you around?
[12:36:31] <gnarf> anyone for that matter
[12:37:48] <gnarf> I just realized that .stop() doesn't take a queue param
[12:38:03] <gnarf> which kinda makes sense because before, animations could only be in one queue
[12:40:40] <gnarf> it literally stops all animation
[12:40:44] <gnarf> for the elemenent
[12:40:59] <gnarf> should it also send the stop event to all queue functions?
[12:47:37] <rwaldron> gnarf i'm at a client's office
[12:47:47] <rwaldron> in a meeting
[12:47:52] <rwaldron> :D
[12:47:53] <gnarf> fun
[12:59:20] <gnarf> so this is kinda the idea i'm running with for now: https://gist.github.com/b235d1ca123d73cc5567
[13:02:40] <gnarf> there seems to be an interesting case here
[13:03:03] <gnarf> also, wondering if I should add queue support to .stop()
[13:03:26] <gnarf> so you could .stop( false, true, "anotherQueue" )
[13:06:39] <jwa> how much could be saved on filesize if IE6 support would be dropped?
[13:07:42] <jwa> just wondering..
[13:09:38] <gnarf> jwa: not much considering IE7 needs most of the IE6 paths
[13:09:59] <gnarf> and IE8 isn't much better
[13:10:44] <jwa> bummer
[13:26:13] <rwaldron> gnarf this was recently asked on the forums as well
[13:26:26] <rwaldron> people seem to think IE6 is the only evil browser
[13:26:48] <rwaldron> not evil.
[13:26:50] <rwaldron> dumb as shit
[13:28:00] <erichynds> didn't JohnResig once say there are more webkit workarounds than IE in jQuery?
[14:11:01] <JohnResig> erichynds: not sure if I said more - but there's definitely more than any other browser
[14:28:00] <necromancer> IE6 isn't evil it's just old
[14:28:35] <necromancer> there are ways of styling and using javascript so that IE doesn't bother you. sometimes, that game is harder to play than other times.
[19:29:50] <jqcommit> [jquery] dmethvin pushed 2 new commits to master: http://git.io/sV0Uig
[19:29:50] <jqcommit> [jquery/master] Fix #6593. Don't let onchange trigger twice for elements in IE. - Dave Methvin
[19:29:50] <jqcommit> [jquery/master] Don't fire change on an already-selected radio. - Dave Methvin
[19:42:21] <rwaldron> DaveMethvin yt?
[19:42:28] <DaveMethvin> yep
[19:42:46] <rwaldron> yo
[19:42:52] <DaveMethvin> yo
[19:43:17] <rwaldron> was just lookign at your latest
[19:43:22] <rwaldron> nice reduction
[19:43:26] <DaveMethvin> yeah i have a test fail tho
[19:43:34] <DaveMethvin> gotta fix it
[19:43:49] <DaveMethvin> this ie stuff is such a pain b/c the unit tests don't find the probems
[19:43:54] <DaveMethvin> so i forgot to run the unit tests
[19:44:00] <DaveMethvin> duh
[19:44:11] <rwaldron> it happens
[19:44:15] <DaveMethvin> got it all working with user input and then .trigger("change") borked
[19:44:36] <rwaldron> I'm guessing you havent looked at event prop hooks
[19:44:45] <rwaldron> i pushed up some changes earlier
[19:44:57] <DaveMethvin> i reviewed it but if you made some changes i didn't see those yet
[19:45:12] <rwaldron> a long with a jsfiddle that is using the current build
[19:45:15] <rwaldron> from my drop box
[19:45:39] <DaveMethvin> i did see that fiddle  you posted this afternoon
[19:45:44] <DaveMethvin> looks like it's working
[19:45:53] <rwaldron> indeed
[19:45:58] <DaveMethvin> i wonder if that will save us some time for the events that don't need those calcs
[19:46:02] <DaveMethvin> i hope so
[19:46:18] <rwaldron> i have a french bull dog on my lap
[19:46:28] <rwaldron> hard to say  much about perf
[19:47:05] <DaveMethvin> my dog is wondering when i'll take him out
[19:47:18] <DaveMethvin> it's usually about 11 so he's looking at me thinking it's soon
[19:48:05] <rwaldron> http://gyazo.com/44b302ae2b4f76d1eaa51a383f90ec6a.png
[19:48:14] <rwaldron> gyazo makes photobooth kinda useful
[19:50:02] <rwaldron> DaveMethvin i'm having trouble thinking of simple ways to perf test the events
[19:50:13] <rwaldron> should i just try trigger?
[19:50:21] <DaveMethvin> yeah just trigger the crap out of it :)
[19:50:29] <DaveMethvin> in some ways that's more representative anyway
[19:50:36] <rwaldron> because that wont really make a real event object?
[19:50:45] <rwaldron> ok, i'll give it a shot
[19:50:48] <DaveMethvin> oh i see what you're saying
[19:51:04] <DaveMethvin> yeah you could make a standalone test page
[19:51:10] <DaveMethvin> mousemove is a good one
[19:51:22] <DaveMethvin> it's easy to generate a lot of them
[19:51:38] <rwaldron> i'm
[19:51:40] <rwaldron> hm*
[19:52:03] <rwaldron> i could maybe listen for them and average the creation time of the first 1000
[19:52:18] <rwaldron> does that make sense?
[19:52:22] <rwaldron> little timers
[19:52:32] <DaveMethvin> yeah just the event.fix time
[19:52:46] <DaveMethvin> sure it could be a quick thing just to sanity check
[19:54:54] <rwaldron> hm
[19:54:56] <rwaldron> OR
[19:55:03] <rwaldron> i could test a custom event
[19:55:06] <rwaldron> before and after
[19:55:09] <rwaldron> trigger times
[19:55:11] <rwaldron> one sec
[20:02:21] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/jZ8e-Q
[20:02:21] <jqcommit> [jquery/master] Allow IE .trigger()ed events through on a check/radio. - Dave Methvin
[20:02:22] <DaveMethvin> ugh, i'd hoped to get a couple more patches done tonight
[20:15:12] <rwaldron> DaveMethvin so, running the speed/event.html is weird
[20:15:25] <rwaldron> because if you test the git version against the git version
[20:15:35] <rwaldron> the first is faster no matter what
[20:15:52] <DaveMethvin> lol so what is the problem? put yours first
[20:16:16] <rwaldron> duh
[20:16:23] * rwaldron is one step ahead
[20:22:06] <rwaldron> Move the mouse, please!
[20:22:06] <rwaldron> 1.7event-prop-hooks: 144
[20:22:06] <rwaldron> 1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 167
[20:26:20] <rwaldron> DaveMethvin i have some bad news
[20:26:42] <DaveMethvin> you didn't save a lot of money on your car insurance?
[20:26:57] <rwaldron> worse
[20:27:19] <rwaldron> event prop hooks makes event handling slower
[20:27:22] <rwaldron> in ever browser
[20:27:24] <rwaldron> every*
[20:27:28] <DaveMethvin> well how much slower?
[20:27:29] <rwaldron> except crome
[20:27:32] <rwaldron> chrome*
[20:27:52] <rwaldron> this is opera:
[20:27:53] <rwaldron> 1.7event-prop-hooks: 356
[20:27:53] <rwaldron>  1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 269
[20:28:17] <rwaldron> safari:
[20:28:17] <rwaldron> 1.7event-prop-hooks: 53
[20:28:18] <rwaldron> 1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 48
[20:28:23] <DaveMethvin> hmm,why so slow?
[20:28:31] <DaveMethvin> it's just a property check and one function call
[20:28:49] <DaveMethvin> basically
[20:28:53] <rwaldron> i suspect the additional function call is enough to do that
[20:29:08] <DaveMethvin> is that calls per second?
[20:29:19] <rwaldron> i dont think so
[20:29:28] <rwaldron> i think that's time elapsed
[20:29:55] <rwaldron> time elapsed to execute n number of event handlers
[20:30:05] <DaveMethvin> ok so milliseconds
[20:30:13] <rwaldron> yeah
[20:30:23] <DaveMethvin> if it was just a few ms that's no problem
[20:30:35] <DaveMethvin> also remember, you're looking at the case where it has to call a fn
[20:30:43] <DaveMethvin> there will be lots of events where it doesn't now
[20:31:07] <rwaldron> true
[20:31:16] <rwaldron> keypress no longer
[20:31:21] <rwaldron> let me try that
[20:32:01] <rwaldron> wtf
[20:32:07] <rwaldron> its like... way worse
[20:32:12] <rwaldron> 1.7event-prop-hooks: 280
[20:32:13] <rwaldron> 1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 156
[20:32:14] <rwaldron> in chrome
[20:32:19] <DaveMethvin> whaaaaa?
[20:33:41] <rwaldron> 1.7event-prop-hooks: 152 1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 146
[20:33:49] <rwaldron> i dont know why it was so zany before
[20:34:06] <DaveMethvin> madcap even
[20:34:13] <rwaldron> i reverted to having the new go second
[20:34:35] <DaveMethvin> well those are pretty small numbers of ms anyway
[20:34:39] <rwaldron> Move the mouse, please!
[20:34:40] <rwaldron> 1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 128
[20:34:40] <rwaldron> 1.7event-prop-hooks: 144
[20:35:02] <DaveMethvin> yeah that's not a big deal
[20:35:19] <rwaldron> ok, here's a nice one...
[20:35:20] <rwaldron> 1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 268
[20:35:20] <rwaldron>  1.7event-prop-hooks: 257
[20:35:21] <rwaldron> opera
[20:35:32] <rwaldron> doing keypress
[20:36:04] <rwaldron> safari:
[20:36:05] <rwaldron> 1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 93
[20:36:06] <rwaldron> 1.7event-prop-hooks: 52
[20:36:11] <DaveMethvin> i will bet that even when you sum it, things are so fast that the clock imprecision is a big factor
[20:36:14] <rwaldron> almost twice as fast
[20:36:31] <rwaldron> oh absolutely
[20:36:37] <rwaldron> i hate tests like this
[20:36:39] <DaveMethvin> those are very small numbers anyway so perf prolly isn't a big concern
[20:36:43] <rwaldron> much prefer jsperf
[20:36:57] <DaveMethvin> yeah well i think you've done enough to prove it isn't killing perf
[20:37:02] <DaveMethvin> we only call fix once per event
[20:37:12] <DaveMethvin> we do a lot nastier things on every event
[20:37:29] <rwaldron> ok
[20:37:32] <rwaldron> FWIW
[20:37:34] <DaveMethvin> like bubble it up, check against selectors, match against namespace regexps, etc
[20:37:39] <rwaldron> 1.7pre Live From Git (61511d5ab35611b50bc93b8e9ecfb35e561bee1e): 202
[20:37:39] <rwaldron> 1.7event-prop-hooks: 204
[20:37:43] <rwaldron> firefox ^
[20:37:52] <DaveMethvin> yeah so it's a wash
[20:37:55] <DaveMethvin> which is good
[20:38:10] <rwaldron> wouldve been nice to see _some_ performance there
[20:38:23] <DaveMethvin> i mean, if you can have it do more and be faster then more power to ya
[20:38:32] <DaveMethvin> wait until you see my prezo at the conf
[20:38:36] <rwaldron> it only cost us 8 gzipped bytes
[20:39:05] <DaveMethvin> so have we fixed docs#6942?
[20:39:09] <bot-t> DaveMethvin, #6942 (JQuery.event.fix causes unnecessary reflows in IE when ... - Opened 13 months ago http://bugs.jquery.com/ticket/6942
[20:39:14] <rwaldron> i dunno
[20:39:16] <rwaldron> hahaha
[20:39:19] <rwaldron> i guess we have
[20:39:41] <rwaldron> because it only runs that code for certain events
[20:39:44] <rwaldron> shit
[20:39:49] <rwaldron> i have to go pick up rose
[20:39:51] <rwaldron> sorry
[20:39:54] <rwaldron> i'll catch ya later
[20:39:55] <DaveMethvin> tomorrow
