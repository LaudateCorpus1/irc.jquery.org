[00:56:29] <matjas> new jsPerf feature sneak preview: http://jsperf.com/smallest-timeout
[00:56:30] <matjas> deferred/async tests \o/
[00:56:39] <matjas> still experimental
[00:58:35] <JKarsrud> cool
[02:51:06] <gnarf> nice http://jsperf.com/smallest-timeout/2
[08:13:44] <rwaldron_> timmywil yt?
[08:13:54] <timmywil> rwaldron_: hey
[08:14:00] <rwaldron_> hey dude
[08:14:47] <rwaldron> I'm getting a failing tests in /test/unit/attributes.js
[08:15:18] <rwaldron> "Check that hooks are not attached in XML document"
[08:15:26] <timmywil> yea, make sure you empty cache because I kept getting that too because dashboard.xml was cached
[08:15:36] <rwaldron> oh ok
[08:15:39] <rwaldron> cool
[08:16:05] <rwaldron> clearing.
[08:18:01] <rwaldron> timmywil perfection
[08:18:03] <rwaldron> thanks
[08:18:09] <timmywil> rwaldron: cool
[08:19:21] <rwaldron> timmywil when you have a minute for review...
[08:19:22] <rwaldron> https://github.com/jquery/jquery/pull/412
[08:19:25] <rwaldron> no rush
[08:20:21] <timmywil> rwaldron: cool, will do
[08:21:12] <rwaldron> thanks bro
[12:51:40] <DaveMethvin> .
[12:51:55] <DaveMethvin> bot-t1 ?
[12:52:19] <gnarf> alt nick for bot-t
[12:52:23] <DaveMethvin> bot-t1: what happened to your brother?
[12:52:24] <bot-t1> DaveMethvin, Yes - definitely.
[13:00:09] <cmcnulty> Hey devs, there currently aren't any unit tests for doing an .html("<link ... />")
[13:00:49] <cmcnulty> in order to add one, I'm thinking we'd need a new .css file right?
[13:01:31] <cmcnulty> I bring it up, because I happen to know that .html("<link") fails to be inserted into the DOM some of the time.
[13:04:17] <DaveMethvin> cmcnulty: do all browsers support injecting stylesheets that way?
[13:04:39] <DaveMethvin> or are you asking for a feature to recognize specific html strings and make it work cross-browser?
[13:04:55] <cmcnulty> They all do, except that in IE8 whether or not it loads depends, bizarrely, on preceeding whitespace...
[13:05:05] <cmcnulty> see my notes (from 11 months ago) here:
[13:05:06] <cmcnulty> http://bugs.jquery.com/ticket/5977
[13:06:14] <DaveMethvin> ok, so you're just wondering whether we should have a unit test for css link injection?
[13:06:29] <DaveMethvin> i guess if it's free because we already do it .... :)
[13:06:29] <cmcnulty> basically the exact same bug that exists for <style exists for <link, but the fix for that issue only addressed <style.
[13:07:15] <gnarf> cmcnulty: have you tried adding <link to rnocache https://github.com/jquery/jquery/commit/c1ac9fdf45632f0e0d1f7183500ce45dde7319d7 and seeing if it fixes your issue?
[13:07:32] <DaveMethvin> sounds like that should fix it
[13:07:32] <gnarf> cmcnulty: also, its really hard to solve a bug without having a clear reproduction
[13:07:33] <cmcnulty> exactly, what I'm really wondering sorta, is if there's concern about test bloat, in particular adding a new file to the unit/data/ folder.
[13:08:04] <DaveMethvin> oh, i'm slowly coming up to speed cmcnulty ... so you're working on a patch and want to create a unit test?
[13:08:08] <cmcnulty> Yeah, that patch addressed the <style half of the bug.
[13:08:24] <gnarf> cmcnulty: if you're adding a .css file to inject via <link> then I'd say go ahead and do it
[13:08:27] <cmcnulty> maybe, definitely working on a unit test, and maybe a patch.
[13:08:33] <DaveMethvin> i don't have a prob with adding a file, but do we have a way to know it succeeded?
[13:08:39] <DaveMethvin> it's async
[13:08:57] <DaveMethvin> you could do a standalone test
[13:09:03] <cmcnulty> http://bugs.jquery.com/attachment/ticket/5977/test.html
[13:09:11] <cmcnulty> reproduces the bug in IE8.
[13:09:21] <cmcnulty> Text should be red (after a couple of alerts).
[13:12:09] <cmcnulty> thanks for the info.  I'm going to try to get the reproducibleness of this into jsFiddle, and then do a patch from there.
[13:14:56] <cmcnulty> Another generic dev question:  What's the threshold for adding a feature test in the core?
[13:15:21] <gnarf> cmcnulty: a testable use case?
[13:16:26] <cmcnulty> This weirdness with IE8 and inserting <styles and <links can be feature tested for, but right not it's handled with a regex that just applies it across all browsers.
[13:17:43] <cmcnulty> and the existence of a regex that just blocks certain html tags from being cached (for instance) bugs me, because over time the justification will go away as browsers are dropped, but the code will live on forever because it's not feature tested.
[13:18:38] <cmcnulty> in a nutshell the rnocache regex test feels like a backdoor browser test, but worse, because it's an implicit browser test, rather than an explicit one.
[16:13:23] <ridethefire122> could someone explain to me why this code snippet is incorrect? http://pastebin.com/YmFYKMtB
[16:33:47] <rwaldron> ridethefire122 probably have more luck in the #jquery channel
[16:33:56] <rwaldron> this channel is for jQuery core development
[16:50:39] <ridethefire122> oh ok. I love you!
[17:49:44] <mikesherov> Hey, foes anyone here know the easiest way to create a jsperf test case to comparing the latest jquery against an enhancement I'm trying to make?
[17:50:40] <mikesherov> wow, lots of typos
[17:53:52] <mikesherov> I think I have a decent optimization, but I'd love to test how much faster it is than the current jquery latest so I have some evidence when I submit my pull request
[17:58:35] <ryanneufeld> mikesherov: have you tried?
[17:59:21] <mikesherov> Have I tried what?
[17:59:25] <mikesherov> I wrote my optimization
[17:59:33] <ryanneufeld> making a jsperf
[18:00:00] <mikesherov> yes
[18:00:08] <ryanneufeld> without knowing your optimization, or what function you're optimizing its hard to help.
[18:00:13] <ryanneufeld> link please?
[18:00:31] <ryanneufeld> (i just hang out here, but I'll try and help)
[18:00:45] <mikesherov> I've made them before, but I don't get how to make one that specifically tests jquery against my version of jQuery
[18:01:06] <ryanneufeld> hmm
[18:17:51] <mikesherov> Follow up: here's what Rick Waldron had to say about it: "what I do is dump builds into my public dropbox, add the link as a resource, so I could modify it locally"...
[18:26:56] <ryanneufeld> that's insane smart
[18:27:02] <ryanneufeld> why didn't I think of that
[19:13:35] <JethroLarson> Could it be efficient to add a fn.first method for cases when you want to find a descendant element but don't care about elements past the first? $('#blah').first('a');
[19:13:35] <JethroLarson> rather than $('#blah').find('a').eq(0);
[19:20:05] <rwaldron> you mean like...
[19:20:07] <rwaldron> http://api.jquery.com/first/
[19:21:19] <rwaldron> but that accepts a selector?
[19:33:59] <rwaldron> JethroLarson http://jsfiddle.net/rwaldron/r9vrD/
[19:34:58] <JethroLarson> yes, exactly
[19:35:55] <JethroLarson> I'm forced to switch between jQuery and mootools so sometimes I get the API's mixed up :)
[19:37:10] <JethroLarson> Doesn't .find() keep looking after it's found the first match?
[19:40:17] <rwaldron> it returns the whole set of found elements
[19:40:25] <rwaldron> but only because qSA does
[19:40:46] <rwaldron> it _is_ thankfully using the parent as a context
[19:47:10] <JethroLarson> first() could theoretically use qS, right?
[19:48:14] <JethroLarson> http://jsfiddle.net/jethrolarson/r9vrD/3/
[19:48:15] <JethroLarson> using "a:first" was about twice as slow
[19:50:14] <rwaldron> perf tests like that are to wishy washy
[19:50:16] <rwaldron> one sec
[19:52:45] <JethroLarson> I guess the difference is that the ":first" forces sizzle to get involved?
[19:56:01] <rwaldron> well, techinically Sizzle is always involved
[19:56:14] <rwaldron> as it house _all_ of the querying
[19:56:29] <rwaldron> but where it can, it will short circuit to qSA
[19:56:32] <rwaldron> internally
[19:57:33] <rwaldron> Sizzle is basically a facade/adapter
[19:59:54] <rwaldron> JethroLarson dig: http://jsperf.com/first-vs-first
[20:04:42] <JethroLarson> cool.
[20:04:42] <JethroLarson> Added a case that does a lazy qS: http://jsperf.com/first-vs-first/2
[20:05:26] <JethroLarson> hella
[20:06:53] <rwaldron> ugh
[20:07:03] <rwaldron> we're trying to kill that selector property
[20:07:05] <rwaldron> hahaha
[20:07:18] <rwaldron> its never what anyone wants it to be
[20:07:25] <rwaldron> once you've filtered a set
[20:07:27] <rwaldron> :\
[20:09:25] <JethroLarson> Well, it's quite a bit worse than .eq(0) so I guess that's not going to be a hard sell
[20:10:23] <JethroLarson> granted it's not a robust test
