[02:32:19] <sueprchu_> hej
[03:09:53] <jqcommit> [jquery] jzaefferer pushed 1 new commit to 1.8pre: http://git.io/a4ef3A
[03:09:53] <jqcommit> [jquery/1.8pre] Grunt: Add testswarm task - Jörn Zaefferer
[03:12:29] <jq-jenkins> Project jQuery 1.8 build #44: STILL FAILING in 39 sec: http://swarm.jquery.org:8080/job/jQuery%201.8/44/
[03:12:29] <jq-jenkins> * richard.gibson: code compression
[03:12:30] <jq-jenkins> * j: Opera announced they will start supporting the -webkit- prefix for a selected set of css properties. Let's put the inspection of -webkit- prefix properties as the last one in case this propagates to the style object and/or other browsers (the cssPrefixes array is inspected from right to left).
[03:12:30] <jq-jenkins> * j: Simplifies the way the internal memory storage is handled.
[03:12:31] <jq-jenkins> * j: Gains 1 more byte min/gz and reminds that isResolved and isRejected are deprecated in the comments.
[03:12:31] <jq-jenkins> * j: Gandalf the Grey says you shall not leak globals, even in the depths of Unit Tests. So fly, you fools!
[03:12:32] <jq-jenkins> * waldron.rick: jQuery.ajaxSetup() data is merged with params. Fixes #10524
[03:12:32] <jq-jenkins> * waldron.rick: jQuery.fn.load optimization
[03:12:33] <jq-jenkins> * j: Makes test message more meaningful.
[03:12:33] <jq-jenkins> * j: Adds unit test to show order of parameters in the load callback are off for errors since the rewrite (this test works in master).
[03:12:34] <jq-jenkins> * j: Fixes the parameters given to load callback when the request errors.
[03:12:34] <jq-jenkins> * markelog: -8 bytes
[03:12:35] <jq-jenkins> * mike.sherov: remove jQuery.quickReady, save bytes, style nits in tests
[03:12:35] <jq-jenkins> * mike.sherov: reduce complexity of ready further, and try manipulating DOM to make sure we're really ready
[03:12:36] <jq-jenkins> * j: Transform $.bindReady into $.ready.promise. It is now possible to use $.ready.promise or $.when( $.ready ) to get the ready promise. Costs *1* byte min/gzipped. Unit test added.
[03:12:36] <jq-jenkins> * j: Fixes #11402. domManip now also removes the closing part of HTML comments or CDATA surrounding executed scripts. Unit tests added.
[03:12:37] <jq-jenkins> * dave.methvin: Simplify jQuery( html, props ), closes gh-765.
[03:12:37] <jq-jenkins> * dave.methvin: Update qunit submodule from 1.3.0pre to 1.6.0pre, close gh-761
[03:13:27] <jqcommit> [jquery] jzaefferer pushed 1 new commit to 1.8pre: http://git.io/K6zctw
[03:13:28] <jqcommit> [jquery/1.8pre] Grunt: Fix testswarm username - Jörn Zaefferer
[03:14:21] <jzaefferer> First TestSwarm 1.0.0 jQuery 1.8 job: http://swarm.jquery.org/job/40
[03:20:08] <sindresorhus> jzaefferer: Nice work! :)
[03:20:20] <jzaefferer> ?tell davemethvin jq-jenkins is back, but there's still plenty work to do: http://swarm.jquery.org/job/40
[03:20:20] <bot-t> jzaefferer, Okay.
[03:20:37] <jzaefferer> sindresorhus: being able to configure testswarm from within grunt.js is so much nicer :-)
[03:20:55] <jzaefferer> -> https://github.com/jquery/jquery/commit/bd84aad6cdde8cf3ce7842df1febb82fe9816647
[03:20:56] <socialhapy> ★ Commit on jquery by jzaefferer (14m, 34s ago): Grunt: Add testswarm task
[03:21:04] <sindresorhus> Yeah, it is!
[03:22:54] <jzaefferer> Dunno if you've seen this already: https://github.com/jquery/testswarm/wiki/Automated-Distributed-Continuous-Integration-for-JavaScript
[03:23:09] <jzaefferer> Good read if you want to know more about TestSwarm and the surrounding infrastructure
[03:26:17] <sindresorhus> Dont think so. Will give it a read ;)
[03:28:47] <jq-jenkins> Project jQuery 1.8 build #45: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/45/
[03:28:47] <jq-jenkins> joern.zaefferer: Grunt: Fix testswarm username
[04:31:17] <jqcommit> [testswarm] Krinkle pushed 2 new commits to config-json: http://git.io/em9lkQ
[04:31:17] <jqcommit> [testswarm/config-json] Use `null` instead of `false` as placeholder value for web.server setting - Timo Tijhof
[04:31:17] <jqcommit> [testswarm/config-json] Update js/run.js: Fix typo in client.saveReqTimeout - Timo Tijhof
[04:55:04] <Krinkle> jzaefferer: Hi
[05:18:17] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/BCisEA
[05:18:17] <jqcommit> [testswarm/master] update useragents.ini - Timo Tijhof
[05:20:44] <jzaefferer> hey Krinkle
[05:20:51] <Krinkle> I updated the PR
[05:33:51] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/LPLDhw
[05:33:51] <jqcommit> [testswarm/master] Add BrowserSetsQueryScript - Timo Tijhof
[05:34:04] <Krinkle> jzaefferer: Is #163 obsolete when implementing custom browserSets from testswarm.json ?
[05:34:15] <Krinkle> or would you still like the ability to override it per addjob ?
[05:39:29] <gibson042> .
[05:40:32] <jqcommit> [testswarm] Krinkle force-pushed config-json from 6678231 to 6ce0c5e: http://git.io/tOgVgA
[05:40:32] <jqcommit> [testswarm/config-json] Implement config-json & various small fixes - Timo Tijhof
[05:40:32] <jqcommit> [testswarm/config-json] Use `null` instead of `false` as placeholder value for web.server setting - Timo Tijhof
[05:40:32] <jqcommit> [testswarm/config-json] Update js/run.js: Fix typo in client.saveReqTimeout - Timo Tijhof
[05:40:44] <Krinkle> jzaefferer: rebasing to make it apply cleanly, conflict in HISTORY.md - you handle the merge?
[05:40:50] <Krinkle> oh that was quick jqcommit!
[05:49:34] <jzaefferer> Krinkle: back
[05:50:34] <jzaefferer> just closed #163
[05:51:09] <jzaefferer> Krinkle: when you rebase, you might as well squash commits
[05:51:39] <Krinkle> doesn't pulley do that?
[05:51:40] <Krinkle> as well, that is
[05:51:58] <Krinkle> I know I could've squashed stuff, but I'm terrible at that kind of git magic. Sometimes it goes flawless, other times I mess up my local repo big time.
[05:53:04] <jzaefferer> `git rebase master -i` is key
[05:53:11] <jzaefferer> -i == interactive
[05:53:23] <jzaefferer> opens an editor to let you choose what to do with each commit
[05:53:33] <jzaefferer> takes a little bit to get used to it, but very much worth it
[05:53:51] <Krinkle> docs (git rebase --help) say it can be used to split commits
[05:53:57] <Krinkle> but doesn't mention squashing though
[05:54:06] <Krinkle> I'll try it some time :)
[05:55:08] <jzaefferer> not sure about splitting, but with the interactive mode, squashing is really easy
[05:55:15] <Krinkle> ok
[05:55:46] <jzaefferer> you can get rid of the commit entirely, or keep its commit message; afterwards it'll open another editor where the commit messages can be merged manually
[05:56:31] <Krinkle> jzaefferer: Just for the record, I personally would prefer to switch to a different ua parser. The browscap ini file is really more meant to detect capabilities. It doesn't provide simple and stable IDs (I made that on top of it by creating useragents.ini)
[05:57:15] <Krinkle> Ideally we'd have some stable parser that gives us "BrowserName Major.Minor" and we'd be able to use that directly as ID. And only keep groups
[05:57:15] <jzaefferer> is Opera 12 stable?
[05:57:18] <Krinkle> beta
[05:58:18] <jzaefferer> okay, then both 11.5 and 11.6 are still targets for jQuery and jQuery UI
[05:58:20] <jzaefferer> current + current-1
[05:58:23] <Krinkle> right
[05:58:29] <jzaefferer> regarding https://github.com/jquery/testswarm/commit/409863ca8159f2108f49cee51c2e0ae62fbeac44#L1R238
[05:58:29] <socialhapy> ★ Commit on testswarm by Krinkle (40m, 15s ago): update useragents.ini  - User agents updates:  * Re-enable Firefox 12    Keeping popular=0 because jquery uses browserSet[]=popular, but    browserstack doesn't have it yet. However "active" and "current"    can be enable just fine.  * Added Firefox 13 (beta)  * Update Opera 11.5 and 11.6    - browscap supports it now  * Renamed Safari 5 to Safari 5.0    - browscap supports i
[05:58:30] <socialhapy> dded Opera 12 (beta)  - Fixes:  * fixes #168  - Updated HISTORY
[05:58:48] <jzaefferer> same applies to Safari 5.0
[05:58:50] <Krinkle> well 11.5 is hardly popular
[05:58:53] <Krinkle> neither is 5.0
[05:58:57] <Krinkle> but I know what you mean
[05:59:11] <Krinkle> popular= jquerys personal toy until we fix the browserSets custom thingy :P
[05:59:13] <jzaefferer> yeah, the label is silly, but we're going to replace that anyway
[05:59:18] <Krinkle> k
[06:01:58] <Krinkle> jzaefferer: Firefox 10 as well then
[06:02:23] <Krinkle> oh no, never mind
[06:02:25] <Krinkle> 11 and 12
[06:02:33] <Krinkle> 12 is active, just not popular due to browserstack
[06:03:12] <jzaefferer> https://github.com/jquery/testswarm/pull/173 is looking good, except for the object_merge method - can we simplify that?
[06:03:13] <socialhapy> ★ Pull request on testswarm by Krinkle (13h, 25m ago): Issue #172: Use JSON for configuration files
[06:03:33] <Krinkle> jzaefferer: I'd like to keep that, may be useful.
[06:03:37] <jzaefferer> and you should really squash those two commits, they don't provide any extra value
[06:03:44] <jzaefferer> "may" -> drop it :-)
[06:04:08] <Krinkle> jzaefferer: they are in the repo now, if I squash them I'll add more commits
[06:04:13] <Krinkle> lets squash on merge?
[06:04:25] <jzaefferer> that's not how an interactive rebase works
[06:04:41] <Krinkle> k
[06:04:45] <jzaefferer> let me do that locally, then I can give you the exact steps
[06:05:14] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/QxBJ7Q
[06:05:14] <jqcommit> [testswarm/master] Update useragents.ini: Safari 5.0 and Opera 11.5 popular=1 - Timo Tijhof
[06:05:23] <jzaefferer> Its really easy
[06:05:29] <jzaefferer> Start with
[06:05:32] <jzaefferer> `git rebase master -i`
[06:05:39] <Krinkle> in config-json branch, right ?
[06:05:43] <jzaefferer> yep
[06:06:00] <Krinkle> let me fix object_merge first,
[06:06:03] <jzaefferer> Then in the editor, you'll see the three commits. Replace "pick" with "f" (short for fixup) on the last two
[06:06:17] <jzaefferer> then force push to throw away the old commits
[06:06:17] <Krinkle> or... I'll follow your steps now, I can rebase/squash again
[06:06:25] <jzaefferer> rebase now
[06:06:34] <jzaefferer> then fix object_merge and `git commit --amend`
[06:06:45] <Krinkle> yeah
[06:06:55] <Krinkle> okay, I'm in interactive rebase now
[06:10:31] <Krinkle> done
[06:10:33] <jqcommit> [testswarm] Krinkle force-pushed config-json from 6ce0c5e to 8f70989: http://git.io/tOgVgA
[06:10:33] <jqcommit> [testswarm/config-json] Implement config-json & various small fixes - Timo Tijhof
[06:11:06] <jzaefferer> Btw. "force-pushed" -> git jedi powers!
[06:11:39] <Krinkle> hehe
[06:11:41] <jzaefferer> Krinkle: let's reopen the "replace browscap with ua-parser" issue?
[06:11:56] <Krinkle> with "another" ua-parser
[06:12:15] <jzaefferer> right
[06:12:20] <jzaefferer> I don't care about which one
[06:12:35] <jzaefferer> As long as it does the job and reduces complexity
[06:14:12] <Krinkle> btw the change from web.server false to null is a change in general, not just in json. in the INI file it used to be 0 (= ini-false) not  (empty) (= ini-null)
[06:14:22] <Krinkle> so I'll put that in the amended commit-msg
[06:17:00] <Krinkle> done
[06:17:06] <jqcommit> [testswarm] Krinkle force-pushed config-json from 8f70989 to 1fa22bc: http://git.io/tOgVgA
[06:17:06] <jqcommit> [testswarm/config-json] Implement config-json & various small fixes - Timo Tijhof
[06:17:46] <Krinkle> jzaefferer: the commit is not really thrown away though, which I knew
[06:17:46] <Krinkle> https://github.com/jquery/testswarm/commit/8f70989e9ab9abdf7d93436b171c2de6fcf5b72e
[06:17:47] <socialhapy> ★ Commit on testswarm by Krinkle (7m, 56s ago): Implement config-json & various small fixes  - Implement config-json  * Fixes #172: Use JSON for configuration files  * testswarm-defaults and testswarm-sample are now in JSON  * Documentation moved to Wiki:    https://github.com/jquery/testswarm/wiki/Settings  * Moved local settings file back into ./config where it used to be    this way it also enjoys the .htaccess protectio
[06:17:47] <socialhapy>  object_extend. Only used    in init.php.  * Update README  - Misc  * In various places $conf was set and then later it used    $this->getContext->getConf(), improved those by re-using the $conf    that was already set locally.  * Added check to make sure json_decode doesn't return false-ish. Which    it does if it is invalid JSON. This is much more common in JSON than in    INI, which is fairly loose about stuff (will try to
[06:17:48] <socialhapy> iling or missing comma.
[06:17:50] <Krinkle> https://github.com/jquery/testswarm/commit/1fa22bc97376b0a2e08dedb7ac1df621a48f1d7b
[06:17:51] <socialhapy> ★ Commit on testswarm by Krinkle (1m, 4s ago): Implement config-json & various small fixes  - Implement config-json  * Fixes #172: Use JSON for configuration files  * testswarm-defaults and testswarm-sample are now in JSON  * Documentation moved to Wiki:    https://github.com/jquery/testswarm/wiki/Settings  * Moved local settings file back into ./config where it used to be    this way it also enjoys the .htaccess protection
[06:17:51] <socialhapy> object_extend. Only used    in init.php.  * Update README  - Setting changes  * Using `null` instead of `false` as placeholder value for    web.server setting (per discussion with jzaefferer)  - Misc  * In various places $conf was set and then later it used    $this->getContext->getConf(), improved those by re-using the $conf    that was already set locally.  * Added check to make sure json_decode doesn't return false-ish.   
[06:17:51] <socialhapy> on in    JSON than in INI, which is fairly loose about stuff (will try to    make sense of stuff). Where JSON does not tolerate a trailing or    missing comma.  * Change default options of object_merge() to match options used in    the only caller. We still need the function because it is    recursive.
[06:17:54] <Krinkle> both are still in the repo
[06:18:04] <Krinkle> not in any timeline, but they're there
[06:18:38] <Krinkle> history looks cleaner now :)
[06:21:11] <jzaefferer> Looks good, let's land that in master
[06:21:45] <jzaefferer> Let's address #170 before updating swarm.jquery.org?
[06:23:21] <Krinkle> jzaefferer: ok
[06:23:25] <Krinkle> but I need json first
[06:23:38] <Krinkle> I already have an issue170 branch
[06:23:47] <Krinkle> has most of it
[06:33:19] <jzaefferer> json is done, right?
[06:33:44] <Krinkle> yep
[06:38:57] <jzaefferer> Krinkle: any idea why these tests aren't run? http://swarm.jquery.org/job/40
[06:39:17] <Krinkle> they are?
[06:39:36] <Krinkle> oh, that was 5 hours ago
[06:39:38] <Krinkle> hm..
[06:39:42] <Krinkle> 3*
[06:40:12] <Krinkle> if both client and server time out (i.e. browser crashed early on), then the cleanup script will reset the run
[06:40:20] <Krinkle> as if it was never run in the first place
[06:40:37] <Krinkle> so in that case it would go from scheduled>running>scheduled>running
[06:40:46] <Krinkle> IE7 is running `effects` now
[06:41:05] <Krinkle> or not..
[06:41:07] <Krinkle> it is not connected
[06:42:02] * Krinkle joins with browserstack manually
[06:42:04] <Krinkle> lets see
[06:42:24] <Krinkle> it is running effects now
[06:43:28] <Krinkle> http://cl.ly/1G0r0T3M2Z1n2D3M1N0s
[06:43:43] <Krinkle> little qunit bug
[06:43:49] <Krinkle> 99+ overlaps test name
[06:44:20] <Krinkle> almost ready..
[06:44:31] <Krinkle> jzaefferer: finished
[06:44:36] <Krinkle> works fine
[06:44:42] <Krinkle> no idea why browserstack took so long
[06:45:05] <Krinkle> oh this is jquery core
[06:46:28] <jzaefferer> qunit bug?
[06:46:36] <jzaefferer> and yeah, jQuery core, added that this morning
[06:47:18] <jzaefferer> we'd get a lot more jobs passing if we'd drop IE6...
[06:47:34] <jzaefferer> last UI build timed out again, even after increasing the timeout to 21 minutes
[06:48:08] <jzaefferer> increasing further doesn't really make sense either - these need to finish sometime soon after the commit for the feedback loop to be useful
[06:48:24] <Krinkle> this looks awesome though: http://swarm.jquery.org/job/42
[06:48:25] <Krinkle> all green
[06:48:51] <Krinkle> what made it not time out?
[06:48:51] <jzaefferer> for UI it would be nice to run only components that actually changed - but for that we'd need to know what the dependencies are
[06:49:16] <Krinkle> IE6 runs around the "position" module used to time out
[06:49:21] <jzaefferer> UI works better then Core, not sure why
[06:49:28] <Krinkle> http://swarm.jquery.org/user/jqueryui
[06:49:30] <jzaefferer> ah, yeah, Scott fixed position tests on Friday
[06:49:34] <Krinkle> nice
[06:49:49] <Krinkle> it is funny how that table looks for jqueryui though
[06:49:54] <Krinkle> everything is building up to the center of IE6
[06:49:58] <Krinkle> litterly
[06:50:35] <Krinkle> jzaefferer: browserstack says they'll increase limit to 12 soon
[06:50:46] <Krinkle> and on the long term maybe even remove the forced limit and go on-demand
[06:50:54] <Krinkle> (like with GUI sessions)
[06:51:47] <Krinkle> jzaefferer: so can you merge config-json? or are you busy testing
[06:52:20] <jzaefferer> Krinkle: oh, I assumed you'd merge that, as the PR was just for reviewing
[06:52:25] <Krinkle> right
[06:52:44] <jzaefferer> Just added the junit thingie here: https://github.com/jquery/infrastructure/wiki/Continuous-integration:-Next
[06:52:45] <Krinkle> So, I want to merge without merge commit, right?
[06:53:06] <Krinkle> I forgot how to do that, or just rebase on master and commit as master?
[06:53:12] <jzaefferer> if your branch is up-to-date, you can just merge it to master, and it should fast-forward
[06:53:24] <Krinkle> jzaefferer: from the command line you mean?
[06:53:32] <jzaefferer> yeah
[06:53:41] <jzaefferer> `git checkout master; git merge config-json`
[06:55:45] <Krinkle> aha
[06:58:39] <Krinkle> jzaefferer: you got an example somewhere of that that junit xml is visualized like in Jenkins?
[07:01:10] <jzaefferer> not really, though any java project with actual JUnit tests would have that
[07:01:43] <jzaefferer> I'm sure there's public Jenkins instances somewhere...
[07:01:46] <Krinkle> https://integration.mediawiki.org/ci/job/MediaWiki-GIT-Fetching/1165/aggregatedTestReport/
[07:01:59] <Krinkle> https://integration.mediawiki.org/ci/job/MediaWiki-Tests-Misc/900/testReport/(root)/
[07:02:01] <Krinkle> anything like that ?
[07:02:29] <jzaefferer> yeah, right :-)
[07:02:34] <Krinkle> nice
[07:02:34] <jzaefferer> was mostly thinking of the graph here: https://integration.mediawiki.org/ci/job/MediaWiki-Tests-Misc/
[07:03:03] <jzaefferer> I'd still like to get the job link on the job front page
[07:03:09] <Krinkle> yeah, that too
[07:03:09] <jzaefferer> that's really the one interesting console output
[07:03:23] <Krinkle> well, and the result of the grunt tasks
[07:03:36] <Krinkle> if we can get those to show up on the normal build page that'd be nice
[07:03:41] <jzaefferer> the textfinder plugin goes in that direction: https://wiki.jenkins-ci.org/display/JENKINS/Text-finder+Plugin
[07:04:52] <Krinkle> hmm
[07:08:12] <jzaefferer> addresses a different problem, but if there's no existing solution, that one might be a good reference for a custom plugin
[07:20:26] <scott_gonzalez> DaveMethvin: Did we start using "support: XXX" or something to mark browser support?
[07:21:06] <scott_gonzalez> I saw a mention of it at some point, but don't remember where.
[07:24:31] <scott_gonzalez> rwaldron: Do you know? ^
[07:25:16] <gf3> scott_gonzalez: IIRC yes
[07:25:25] <gf3> scott_gonzalez: I was required to add it to my patch
[07:27:14] <scott_gonzalez> hmm...Is "support:" the correct string?
[07:27:19] <scott_gonzalez> I only see one instance of that.
[07:27:43] <scott_gonzalez> jquery (1.8pre *) $ grep -r "support:" src
[07:27:43] <scott_gonzalez> src/dimensions.js:				// support:IE6
[07:28:02] <gf3> scott_gonzalez: Sec'
[07:29:31] <gf3> scott_gonzalez: Ahh, mine was a comment in src/support.js
[07:29:42] <scott_gonzalez> heh, ok
[07:29:45] <gf3> scott_gonzalez: To indicate if/when support could be removed for the new prop
[08:12:58] <jqcommit> [testswarm] Krinkle created issue170 (+1 new commit): http://git.io/7D4tKA
[08:12:58] <jqcommit> [testswarm/issue170] Refactor browserSets - Timo Tijhof
[08:19:27] <Krinkle> jzaefferer: got a minute to check our the PR ?
[08:19:39] <Krinkle> (no rush, if you're busy I'll continue on something else first)
[08:36:51] <jzaefferer> yeah, I'll do that later
[09:22:35] <timmywil> .
[09:22:38] <timmywil> no meeting today?
[09:22:42] <timmywil> oh nvm
[10:14:24] <jqcommit> [jquery] jaubourg pushed 1 new commit to 1.8pre: http://git.io/qoqYQw
[10:14:24] <jqcommit> [jquery/1.8pre] @mikesherov said: no need for an else if! - jaubourg
[10:21:12] <ajpiano> i wonder if we can join forces with @jsfixed
[10:24:42] <jaubourg> ajpiano: what is it?
[10:24:57] <ajpiano> it's a new thing from angus croll and anton kovalyov
[10:24:58] * Krinkle was going to ask the same @jsfixed on Twitter is empty and Github as well 
[10:25:03] <ajpiano> http://javascriptweblog.wordpress.com/2012/05/07/putting-the-developer-back-in-es-next/
[10:25:27] <ajpiano> we (jquery) will soon have seats in TC39
[10:27:28] <jaubourg> who?
[10:27:51] <ajpiano> who who?
[10:27:56] <jaubourg> who who who?
[10:28:03] <jaubourg> who from the project?
[10:28:04] <ajpiano> an owl?
[10:28:10] <jaubourg> bwahahaha
[10:28:26] <ajpiano> right now i think wycats and rwaldron will be involved with it
[10:28:31] <jaubourg> k
[10:29:32] <jaubourg> jsfixed sound good
[10:29:40] <jaubourg> I'm happy someone is trying something like that
[10:29:51] <jaubourg> I felt very sad when I saw where the standard was going
[10:29:55] <jq-jenkins> Project jQuery 1.8 build #46: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/46/
[10:29:56] <jq-jenkins> j: @mikesherov said: no need for an else if!
[11:01:50] <scott_gonzalez> Krinkle: Any reason you used 10 instead of 7 chars for the abbrivated commit shas?
[11:02:04] <Krinkle> GitHub uses 10 in various labels
[11:02:08] <Krinkle> I just took that
[11:02:25] <scott_gonzalez> Really? Where do they do that?
[11:02:34] <sindresorhus_> Krinkle: Can I run testswarm jobs on a jQuery commit from my own fork?
[11:02:44] <Krinkle> scott_gonzalez: https://github.com/jquery/jquery/commit/03e0029761b6fd5789ac5df13cd06fd219a505ab Parent: ..
[11:02:45] <socialhapy> ★ Commit on jquery by jaubourg (48m, 35s ago): @mikesherov said: no need for an else if!
[11:02:54] <Krinkle> sindresorhus_: Yes and No
[11:03:02] <Krinkle> scott_gonzalez: TestSwarm is open source and easy to install,
[11:03:09] <Krinkle> sindresorhus_: ^
[11:03:21] <scott_gonzalez> I wonder why they do that. They use the standard 7 everywhere else.
[11:03:34] <Krinkle> sindresorhus_: check out testswarm and your jquery fork, edit grunt.js to point to your own testswarm and auth token
[11:03:46] <scott_gonzalez> Look at the "view file" link on the right of each changed file on that page.
[11:03:52] <Krinkle> sindresorhus_: But that is just for the curious, not recommended to do on a regular basis obviously
[11:03:54] <sindresorhus_> Krinkle:  But then I don't have access to the Browserstack browsers, right?
[11:04:06] <Krinkle> sindresorhus_: If you have a browserstack account, then yes, sure.
[11:04:13] <scott_gonzalez> Hmm...they use 10 on the history tab too.
[11:04:14] <sindresorhus_> k
[11:04:21] <scott_gonzalez> But 7 in lists of commits for things like PRs.
[11:04:23] <scott_gonzalez> Strange.
[11:04:36] <Krinkle> sindresorhus_: But on the long term I want to create a seperate TestSwarm-Jenkins link that automatically tests PRs
[11:04:58] <sindresorhus_> Krinkle:  But you usually want to test before submitting a PR though
[11:05:18] <sindresorhus_> Krinkle: So that only abolishes lazy submitters
[11:05:31] <Krinkle> sindresorhus_: So that you can have your own fork, and if you feed like pushing it, create a PR, get feedback (from humans and from jQuery's TestSwarm install filled with jQuery's brwoserstack clients)
[11:05:42] <Krinkle> that is still a lot better than having it only after merge into master
[11:05:49] <sindresorhus_> True
[11:05:50] <Krinkle> sindresorhus_: note that PRs can be amended
[11:06:03] <Krinkle> sindresorhus_: Also note that you don't need TestSwarm to run the test suite
[11:06:23] <scott_gonzalez> Krinkle: Landed (in UI).
[11:06:33] <Krinkle> sindresorhus_: Confusing fact (I don't know how familiar you are with the code base): TestSwarm does not run any tests. it only distributes it
[11:06:47] <sindresorhus_> Krinkle: I know
[11:06:50] <Krinkle> okay :)
[11:06:59] <Krinkle> you can run jquery / test/index.html locally directly
[11:07:03] <sindresorhus_> Currently I do the testing manually. But it's an hassle opening up so many browsers
[11:07:15] <Krinkle> sindresorhus_: You can use grunt to test it automatically locally
[11:07:32] <Krinkle> grunt will do csslint, htmllint, jshint and qunit in node/phantom from the command line
[11:07:33] <sindresorhus_> Yes, but I have to test it in more than Chrome
[11:07:39] <sindresorhus_> or Webkit
[11:07:42] <Krinkle> Sure, but for a pre-commit hook that is enough
[11:07:53] <Krinkle> Anything else you would find out in the PR stage
[11:08:26] <Krinkle> that is, after we have PR-queues in Jenkins>Grunt>TestSwarm set up
[11:08:29] <Krinkle> which will take a while
[11:08:31] <sindresorhus_> Ok, but rwldrn always get so mad if you don't test before PR
[11:08:35] <sindresorhus_> :p
[11:08:40] <Krinkle> So test before PR :)
[11:08:58] <Krinkle> I doubt he'll mind that you didn't run it in all browsers before committing
[11:09:04] <sindresorhus_> Yeah, that's what I do. But it's so much work... It takes longer to test than write the damn patch.
[11:09:04] <Krinkle> Ideally it will be like this:
[11:09:49] <Krinkle> You fork, branch, commit, push, commit, do stuff, eventually: PR. Then within minutes you get an automatic bot-comment from TestSwarm and Jenkins telling you the lint-report, qunit-report and cross-browser results from TestSwarm
[11:09:59] <Krinkle> then you can fix what needs to be fixed, all without human intervention
[11:10:18] <Krinkle> and by the time rwldrn wakes up, you'll have it amended already :D
[11:10:44] <sindresorhus_> Haha, don't know. rwaldron is always there looking
[11:10:58] <Krinkle> then when everybody is happy and humans have checked and mary any changes needed, one can merge with full confidence that it will pass.
[11:11:05] <sindresorhus_> But sure. Jekins getting PR support helps a lot
[11:11:33] <sindresorhus_> And not having to get a mad Krinkle on their neck :P
[11:11:43] <Krinkle> hehe
[11:11:58] <Krinkle> I do my share of nagging testswarm failures back up to the commit or PR :)
[11:12:16] <sindresorhus_> And I'm sure they appriciate it ;)
[11:12:29] <Krinkle> Just like we appreciate JSLint :)
[11:12:37] <sindresorhus_> You mean JSHint right
[11:12:55] <Krinkle> meh, whatever you say
[11:13:25] <Krinkle> Im the kind of person that actually agrees with most of JSLint (enough to be able to use with certain options and not have any warnings left)
[11:14:48] <sindresorhus_> I don't, that's what I like about JSHint. Flexibility.
[11:15:45] <Krinkle> JSlint has enough flexibility for me, and I like the strictness
[11:16:08] <Krinkle> but hey, no hard feelings. JShint is not bad, and catches more that enough already for integration purposes
[11:16:15] <Krinkle> than*
[11:20:43] <jqcommit> [jquery] rwldrn pushed 1 new commit to 1.8pre: http://git.io/DDO9Aw
[11:20:43] <jqcommit> [jquery/1.8pre] grunt.js testswarm task: shorten job name - Timo Tijhof
[11:21:23] <ajpiano> rawf
[11:42:44] <jq-jenkins> Project jQuery 1.8 build #47: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/47/
[11:42:45] <jq-jenkins> krinklemail: grunt.js testswarm task: shorten job name
[12:51:45] <jqcommit> [jquery] rwldrn pushed 2 new commits to 1.8pre: http://git.io/qpNeGQ
[12:51:45] <jqcommit> [jquery/1.8pre] Remove unnecessary arguments from .nth(). Fixes #11720 - Sindre Sorhus
[12:51:45] <jqcommit> [jquery/1.8pre] Merge branch 'bug11720-nth-argument' of https://github.com/sindresorhus/jquery into 1.8pre - Rick Waldron
[12:52:25] <rwaldron> blah
[12:52:38] * gnarf shrugs
[12:52:40] <rwaldron> sorry about the merge commit!
[12:52:50] * rwaldron kicks dirt
[12:53:19] <gnarf> rwaldron: simple rule: cherry-pick single commits, merge --squash others ;) -- you prolly already know that tho
[12:53:26] <rwaldron> i do
[12:53:30] <rwaldron> i just didnt
[12:53:34] <rwaldron> because I'm an idiot
[12:53:41] <rwaldron> and forgot to be thorough
[12:53:46] <gnarf> happens
[12:53:47] <rwaldron> :(
[12:53:57] <gnarf> I committed "functionunction"
[12:54:02] <gnarf> so...
[12:54:03] <gnarf> :)
[12:54:04] <rwaldron> <3
[12:57:22] <David_Souther> I imagine functionunction would be a name in a program Dr Seuss writes.
[13:02:01] <sindresorhus_> rwaldron: Cheatsheet: https://gist.github.com/2630026 ;)
[13:03:33] <rwaldron> sindresorhus_ your patch got me investigating...
[13:03:43] <rwaldron> there were no tests for jQuery.nth either
[13:03:46] <rwaldron> so...
[13:04:03] <sindresorhus_> but only .next() and prev() uses it
[13:05:27] <jqcommit> [jquery] rwldrn pushed 1 new commit to 1.8pre: http://git.io/YIvEyA
[13:05:27] <jqcommit> [jquery/1.8pre] Further reduce historical cruft. Removes the untested and unnec. jQuery.nth() - Rick Waldron
[13:05:35] <rwaldron> sindresorhus_ ^
[13:07:15] <sindresorhus_> rwaldron: Probably smart ;)
[13:07:21] <jq-jenkins> Project jQuery 1.8 build #48: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/48/
[13:07:21] <jq-jenkins> sindresorhus: Remove unnecessary arguments from .nth(). Fixes #11720
[13:07:30] <rwaldron> Shocking.
[13:08:43] <ajpiano> cc ben_alman
[13:08:45] <ajpiano> whoops
[13:08:52] <ben_alman> wat
[13:09:27] <sindresorhus_> rwaldron: Lets hope there aren't any dumb souls depending on it.
[13:10:15] <rwaldron> eh
[13:10:19] <rwaldron> I did a google search
[13:10:27] <rwaldron> no one ever wrote about it, that i can tell
[13:11:07] <sindresorhus_> k
[13:22:42] <jq-jenkins> Project jQuery 1.8 build #49: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/49/
[13:22:42] <jq-jenkins> waldron.rick: Further reduce historical cruft. Removes the untested and unnec. jQuery.nth()
[13:34:07] <jzaefferer> hey rwaldron DaveMethvin - you may have noticed that jq-jenkins is back. Integration is now done via grunt.js, so you've got a lot more direct control. It'll still fail with a timeout when things don't finish in time, but you can increase the timeout directly via grunt.js
[13:34:32] <jzaefferer> Though for now there's also various tests that fail or don't finish: http://swarm.jquery.org/job/49 - fixing especially the timeouts there will decrease the overall time it takes to finish
[13:34:41] <DaveMethvin> jzaefferer: well just judging by looks alone, you've done a lot of nice work there!
[13:34:52] <DaveMethvin> we definitely need to do some work on the unit tests
[13:34:59] <DaveMethvin> most of the problems are the timer-based ones
[13:35:02] <DaveMethvin> when focus isn't there
[13:35:15] <jzaefferer> also BrowserStack will increase the parallel number of browsers available in the near future, so timeouts will become less of a problem
[13:35:35] <jzaefferer> DaveMethvin: we now restrict to only BrowserStack clients
[13:35:41] <jzaefferer> we don't have any "random" clients anymore
[13:35:50] <DaveMethvin> that should definitely help
[13:35:57] <DaveMethvin> if you have any suggestions on fixes beyond that let us know ... i'm still coming up to speed on grunt myself
[13:36:01] <jzaefferer> so unless Krinkle-away or me is running tests manually (via runToken…), you won't ever get any rogue clients anymore
[13:36:18] <jzaefferer> if you can't reproduce a failure locally, try via BrowserStack
[13:36:19] * Krinkle-away hears bleep
[13:36:27] <Krinkle> I'm not running anything
[13:36:31] <jzaefferer> Generally helpful for the IE failures anyway
[13:36:55] <Krinkle> grr IE7/IE6 stuck again?
[13:37:13] * Krinkle starts visual browserstack session
[13:37:22] <jzaefferer> DaveMethvin: first step is to see if you can reproduce a failure; tests get rerun four times, so if something fails, it should be pretty consistent
[13:37:50] <Krinkle> running IE6
[13:37:52] <DaveMethvin> btw i like the qunit changes as well
[13:37:55] <jzaefferer> UI is now getting fully green builds. Once we got rid of rogue clients, it was all reproducible
[13:38:10] <jzaefferer> DaveMethvin: you've updated from quite an old QUnit version, didn't you?
[13:38:14] <jzaefferer> 1.3 to 1.6
[13:38:17] <DaveMethvin> yep
[13:38:18] <jzaefferer> or something like that...
[13:38:25] <jzaefferer> good to know :-)
[13:38:31] <DaveMethvin> well just prod us if we get too old
[13:38:37] <jzaefferer> Also let me know if you'd like to see something else
[13:38:49] <DaveMethvin> so far you are reading my mind, so keep it up
[13:38:49] <jzaefferer> Its all in the details
[13:38:51] <DaveMethvin> :D
[13:39:17] <DaveMethvin> oh and i need to update to 1.6-not-pre
[13:39:22] <DaveMethvin> saw your comment
[13:39:26] <jqcommit> [jquery] rwldrn pushed 1 new commit to 1.8pre: http://git.io/xNJjnw
[13:39:26] <jqcommit> [jquery/1.8pre] Additional reduction per @Raynos suggestion. Thanks! - Rick Waldron
[13:39:33] <Raynos> o/
[13:39:34] <jq-jenkins> Project jQuery 1.8 build #50: STILL FAILING in 5.2 sec: http://swarm.jquery.org:8080/job/jQuery%201.8/50/
[13:39:34] <jq-jenkins> waldron.rick: Additional reduction per @Raynos suggestion. Thanks!
[13:39:43] <Raynos> Being told through IRC rather then github
[13:39:44] <Raynos> awesome.
[13:39:49] <rwaldron> haha
[13:39:53] <rwaldron> Thanks for pointing that
[13:39:54] <Raynos> also
[13:40:00] <Raynos> return cur; instead of break;
[13:40:00] <rwaldron> made me re-look
[13:40:09] <rwaldron> there is no break :)
[13:40:11] <rwaldron> just return
[13:40:15] <DaveMethvin> damn i wish we could use nextElementSibling etc
[13:40:23] <rwaldron> DaveMethvin + 1
[13:40:23] <Raynos> why while () {} instead of while();
[13:40:25] <jzaefferer> rwaldron: when jq-jenkins proclaims failure within seconds, you screwed up
[13:40:36] <jzaefferer> its now running `grunt`, so lint etc.
[13:40:41] <rwaldron> Raynos dunno.. habit?
[13:41:01] <jzaefferer> rwaldron: you, too, should setup at least `grunt lint` as a pre-commit hook
[13:41:07] <rwaldron> Raynos doesn't matter
[13:41:15] <rwaldron> seems to break the tests
[13:41:27] <Raynos> it's just interesting to see {} as an empty block. I think its ugly :P
[13:41:34] <DaveMethvin> uh oh, Commit of Shame :P
[13:41:38] <rwaldron> jzaefferer
[13:41:39] <rwaldron> i did
[13:41:40] <Raynos> I also think comma operator inside a while loop is being terse for the sake of terse :D
[13:41:40] <rwaldron> thanks
[13:41:44] <rwaldron> Running "lint:files" (lint) task
[13:41:45] <rwaldron> Lint free.
[13:41:49] <jzaefferer> so what's going on here? http://swarm.jquery.org:8080/job/jQuery%201.8/50/console
[13:42:05] <rwaldron> you have different rules?
[13:42:10] <rwaldron> i have no idea
[13:42:10] <DaveMethvin> gotta run
[13:42:16] <rwaldron> i can send a screen shot
[13:42:16] <Raynos> does jquery have any internal docs on how it uses jenkins
[13:42:23] <Raynos> I'm looking into setting up jenkins CI myself
[13:42:28] <jzaefferer> that's running `grunt`, not `grunt lint`
[13:42:37] <jzaefferer> Raynos: yep
[13:42:55] <rwaldron> ugh
[13:42:56] <rwaldron> weird
[13:42:57] <jzaefferer> Raynos: see https://github.com/jquery/testswarm/wiki/Automated-Distributed-Continuous-Integration-for-JavaScript kudos to Krinkle for that
[13:43:00] <rwaldron> and also... wtf
[13:43:06] <jzaefferer> rwaldron: it lints the built file
[13:43:18] <jzaefferer> you linted an old built file?
[13:43:28] <rwaldron> these aren't "lint"
[13:43:44] <rwaldron> anyway, i'll fix, but this is definitely "opinion"
[13:44:30] <jzaefferer> rwaldron: the configuration is in your grunt.js
[13:44:42] <Krinkle> jzaefferer: http://swarm.jquery.org/user/browserstack
[13:44:45] <Krinkle> 3 safari's ?
[13:44:53] <Krinkle> cool, but ahm.. also weird
[13:45:00] <jzaefferer> Krinkle: uhu
[13:45:09] <jzaefferer> weird indeed
[13:45:13] <Krinkle> because the others should probably have higher priority
[13:45:37] <jqcommit> [jquery] rwldrn pushed 1 new commit to 1.8pre: http://git.io/QfU4Og
[13:45:37] <jqcommit> [jquery/1.8pre] Fixes lint issues. - Rick Waldron
[13:45:40] <rwaldron> jzaefferer ya it's no big deal
[13:45:43] <rwaldron> fixed
[13:45:56] <rwaldron> I was just being "bratty"
[13:45:58] <rwaldron> ;)
[13:46:16] <jzaefferer> where are these short commit hashes coming from all of a sudden?
[13:46:17] <jzaefferer> http://swarm.jquery.org/user/jquery
[13:46:34] <rwaldron> Whoa
[13:46:39] <rwaldron> strange
[13:46:56] <rwaldron> oh, that's from Krinkle's commit earlier
[13:47:01] <jzaefferer> rwaldron: you could do a do {} while to get rid of the duplication :p
[13:47:05] <rwaldron> that trims the displayed hash
[13:47:20] <Krinkle> yeah, I did .substr() on it in grunt
[13:47:32] <Krinkle> the jQuery UI tables were sometimes spanning 2 lines
[13:47:41] <Krinkle> no need to take up half the screen with the commit list in TestSwarm
[13:47:47] <jzaefferer> ah, okay
[13:47:49] <rwaldron> I always forget about do {} ....
[13:47:53] <rwaldron> brilliant idea.
[13:49:04] <jzaefferer> I'm getting sick of 100+ emails per day :/
[13:49:52] <jqcommit> [jquery] rwldrn pushed 1 new commit to 1.8pre: http://git.io/kc8Y1A
[13:49:52] <jqcommit> [jquery/1.8pre] Use a do-while statement to reduce redundant code - Rick Waldron
[13:58:13] <jzaefferer> what's the gzipped difference for that?
[13:58:54] <gnarf> for some reason Krinkle used 10 chars instead of 7 *shrugs*
[13:59:26] <Krinkle> I used 10 because that is what GitHub used in a few places (the place I happen to be looking at when I wrote it)
[13:59:31] <Krinkle> turns out most places do 7, but whatever
[13:59:38] <gnarf> Krinkle: github uses 7 like everywhere ;)
[13:59:42] <gnarf> where does it use 10?
[13:59:43] <Krinkle> gnarf: not everywhere
[13:59:55] <Krinkle> gnarf: repo/commit/1234 page, label "Parent: "
[14:00:01] <gnarf> hrm
[14:00:03] <gnarf> fairnuff
[14:00:12] <Krinkle> and more is usually safer,
[14:00:17] <gnarf> thats strange
[14:00:25] <Krinkle> after all sha1 is stronger than md5, but the shorter it gets..
[14:00:44] <Krinkle> I've seen a repo once where 5 commits after another had the same 7char sha1
[14:00:50] <Krinkle> haha ;-D
[14:00:58] <jq-jenkins> Project jQuery 1.8 build #51: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/51/
[14:00:59] <jq-jenkins> waldron.rick: Fixes lint issues.
[14:01:04] <Krinkle> that was done on purpose (someone did a lot of calculation to try and get it and he got it)
[14:01:19] <gnarf> *shrug* not like you're using that identifier for actually referencing the sha ;)
[14:09:53] <jqcommit> [qunit] jzaefferer pushed 1 new commit to master: http://git.io/M_ivlA
[14:09:53] <jqcommit> [qunit/master] grunt.js testswarm task: shorten job name - Timo Tijhof
[14:16:23] <jq-jenkins> Project jQuery 1.8 build #52: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/52/
[14:16:24] <jq-jenkins> waldron.rick: Use a do-while statement to reduce redundant code
[14:31:44] <jq-jenkins> Project QUnit build #118: FAILURE in 15 min: http://swarm.jquery.org:8080/job/QUnit/118/
[14:31:45] <jq-jenkins> krinklemail: grunt.js testswarm task: shorten job name
[14:32:14] <Krinkle> jzaefferer: Hm.. it appears qunit is using the old node-testswarm
[14:32:18] <Krinkle> 52 http://swarm.jquery.org//job/52
[14:32:21] <Krinkle> double slash
[14:32:26] <Krinkle> other are using the new one
[14:32:31] <Krinkle> not sure where that is handled, do you?>
