[07:30:52] <jzaefferer> Ping JamesMGreene leobalter
[07:31:00] <JamesMGreene> yessir?
[07:31:12] <jzaefferer> I'm sitting next to Leo :-)
[07:31:19] <JamesMGreene> So I hear
[07:31:22] <jzaefferer> But figured we can talk about QUnit with you here
[07:31:27] <JamesMGreene> works for me
[07:32:09] <JamesMGreene> So I'm looking to add Promise support into QUnit core to make the Tests Promise-aware (i.e. allow them to return a promise)
[07:32:16] <JamesMGreene> But I'm a little confused about how to do so
[07:32:29] <JamesMGreene> I'm _thinking_ I need to add another synchronize block?
[07:33:20] <JamesMGreene> I'm not 100% following how the synchronize blocks work (though relatively obvious in theory)
[07:34:03] <JamesMGreene> Maybe I don't
[07:34:22] <JamesMGreene> Maybe I just need to handle it instead of `Test#run` and call `start` there?
[07:34:36] <JamesMGreene> * call `stop` there
[07:36:47] <JamesMGreene> Any tips, jzaefferer ?
[07:37:19] <JamesMGreene> Actually, yeah, I think I understand it now
[07:38:22] <JamesMGreene> Followup question: do we have any tests that verify failure conditions? i.e. in this case, it would be testing for a rejected Promise but without failing the test  ;)
[07:44:28] <jzaefferer> JamesMGreene: I have to dig into that a bit first
[07:44:45] <jzaefferer> I'm not even sure if a rejected promise really shouldn't fail the test...
[07:46:01] <JamesMGreene> jzaefferer: In normal usage, it should fail the test
[07:46:38] <JamesMGreene> I mean for testing it internally for QUnit core, I'd rather be able to test that scenario to prove it works but not fail a test because of it :-P
[07:46:47] <jzaefferer> JamesMGreene: in general we should do a review of the ember src to see how they're dealing with promises in their tests
[07:46:56] <jzaefferer> along with other custom assertions or any workarounds
[07:46:59] <JamesMGreene> Otherwise, it can't be tested without a permanent failure
[07:47:04] <JamesMGreene> Yeah
[07:47:16] <jzaefferer> I've been talking to Yehuda last week, unfortunately they haven't tried to bring any of that up themselves
[07:47:23] <JamesMGreene> They had some other things they were interested in but I wasn't quite following it
[07:47:35] <JamesMGreene> Yeah, I was surprised when Stefan brought it up to me
[07:47:53] <jzaefferer> We're looking at the multi even PR right now
[07:47:57] <jzaefferer> Its still rather terrible
[07:48:29] <JamesMGreene> Which PR?
[07:49:20] <jzaefferer> *env
[07:49:31] <jzaefferer> testing on other "commonjs" envs
[07:50:19] <JamesMGreene> ah, gotcha
[07:51:21] <jqcommit> [13qunit] 15leobalter closed pull request #627: Reporter: Implements the console reporter (06master...06console-log) 02http://git.io/yeODwA
[08:38:35] <jqcommit> [13qunit] 15jzaefferer opened issue #633: Support global test-level setup/teardown callbacks 02http://git.io/qJniHA
[08:38:41] <jzaefferer> JamesMGreene: how about this? https://github.com/jquery/qunit/issues/633
[08:38:45] <jqcommit> [13qunit] 15jzaefferer closed pull request #471: Add `testTeardown` logging callback. (06master...06teardown-callback) 02http://git.io/CT1lRw
[09:07:50] <m_gol> DaveMethvin|away: meeting or no meeting? ;)
[09:09:45] <jqcommit> [13qunit] 15JamesMGreene opened pull request #634: Async: Tests are now Promise-aware (06master...06promise-aware) 02http://git.io/lWa8pg
[09:10:23] <scott_gonzalez> m_gol: Dave's on vacation.
[09:10:37] <scott_gonzalez> Should be back tomorrow.
[09:23:50] <jqcommit> [13qunit] 15leobalter pushed 1 new commit to 06master: 02http://git.io/pEyBZw
[09:23:50] <jqcommit> 13qunit/06master 14435a1dd 15Leonardo Balter: Test: Removes unreacheable code...
[10:42:43] <jzaefferer> JamesMGreene: thanks for the feedback. I responded, would be great to get your attention on that again. If you agree, Leo and me can implement this today.
[10:43:44] <JamesMGreene> jzaefferer: Will do
[10:44:38] <jzaefferer> Also reviewing your PR properly now, not just on my phone ;)
[11:27:26] <JamesMGreene> leobalter jzaefferer: Can I see a push or gist of your in-progress changes for #633 to emulate your style of dividing out of the Test.prototype functions?
[11:40:52] <leobalter> JamesMGreene: almost there
[11:50:20] <jqcommit> [13qunit] 15leobalter opened pull request #635: Test: Implements universal module setup [WIP] (06master...06universal-module-setup) 02http://git.io/hajUig
[11:50:20] <leobalter> JamesMGreene: https://github.com/jquery/qunit/pull/635
[11:51:51] <JamesMGreene> Soooo are you just talking about the `globalSetup` function as an extraction of non-DRY code, then?
[11:52:24] <leobalter> and implementing the global beforeEach/afterEach
[11:53:46] <leobalter> now I'll try to copy module's setup and teardown methods to the respective names and deprecate the formers
[11:54:02] <JamesMGreene> \o/
[11:54:53] <JamesMGreene> Anyway, I need to get back to my day job work for now but I'll try to dig into this deeper tonight
[11:56:39] <jzaefferer> JamesMGreene: I just commented on the "nested" discussion, maybe you still have time for that: https://github.com/jquery/qunit/issues/543#issuecomment-53310614
[11:57:00] <JamesMGreene> jzaefferer: Was already reading over it
[11:58:04] <jzaefferer> nice
[11:58:40] <JamesMGreene> jzaefferer: I'm not sure that's true, though
[11:59:52] <JamesMGreene> I mean, I know a `test` body can call `test` but I don't believe they keep any manner of hierarchy... the new `test` just gets added to the end of the queue... not even sure if it gets associated with the parent `test`'s corresponding `module`...?  Probably not
[12:09:56] <jzaefferer> JamesMGreene: sounds like we're not talking about the same thing
[12:10:58] <JamesMGreene> I'm just asking: how would the HTML reporter choose to nest things without some sort of infinite sub-grouping/nesting being available?
[12:11:54] <jzaefferer> https://github.com/jquery/qunit/issues/543#issuecomment-53313064
[12:20:00] <JamesMGreene> https://github.com/jquery/qunit/issues/543#issuecomment-53313708
[13:26:00] <comes> hey there
[13:26:18] <comes> someone here to talk about a bug(?)
[14:19:36] <Toerkeium> hello guys
[14:21:30] <Toerkeium> I have a webpage which I include a scripts.js file with this content: http://pastebin.ca/2835548. I think the problem is the <img> with ID "add" is added dynamically, with ajax. If instead of using the <script> tag in the main page I put the scripts on the webpage which contains the <img> with ID "add" it works
[14:22:26] <Toerkeium> I took a suggestion from someone on this channel who told me to put all javascript and jquery code in one file.js and include it at the beginig, but it's becoming a pita
