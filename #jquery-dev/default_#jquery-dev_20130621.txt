[08:04:58] <timmywil> jzaefferer: quick question. I'm trying to use node-testswarm to generate a job. I keep getting invalid auth messages, but it seems to me that my auth should be valid.
[08:05:12] <timmywil> which token should I be using?
[08:05:28] <timmywil> So far, I see 3. There's the one in the database for the project,
[08:05:39] <timmywil> one cached in a file in the testswarm cache,
[08:05:41] <jzaefferer> timmywil: the one from the auth column
[08:05:47] <jzaefferer> for the project
[08:06:09] <jzaefferer> also make sure to use node-testswarm 1.1.x
[08:07:01] <timmywil> and username/id is the id for the project right?
[08:08:41] <timmywil> jzaefferer:
[08:12:16] <jzaefferer> timmywil: yeah, seems right
[08:12:27] <timmywil> weird
[08:13:50] <timmywil> ok, I'll have to dig more
[08:35:13] <doesallmagic2> Project jQuery Migrate Core 1.x build #80: FAILURE in 4.1 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%20Core%201.x/80/
[08:45:46] <timmywil> jzaefferer: it seems there's an issue with using SHA1. 
[08:46:13] <timmywil> oh
[08:46:15] <jzaefferer> timmywil: okay. How so?
[08:46:29] <timmywil> I bet I can't use the auth_token as it's listed in the database
[08:46:44] <timmywil> it's probably encrypted
[08:47:02] <timmywil> which is why passing the post-encrypted token would fail
[08:47:28] <timmywil> ok, that makes sense, but then I need to regenerate an auth token
[08:47:47] <timmywil> but I can't seem to find the script to remake a token
[08:48:11] <timmywil> it says to use "refreshProjectToken.php", which isn't in the project
[08:49:31] <timmywil> there's "refreshRunToken.php", but that doesn't seem to update the project token
[08:54:22] <timmywil> jzaefferer: is refreshProjectToken.php gone then?
[09:06:53] <jzaefferer> timmywil: no, the auth token is used as-is. Just copy the value from the DB and use that
[09:07:14] <timmywil> jzaefferer: yea, I'm looking at the code, that's not true
[09:07:59] <jzaefferer> my knowledge there might be outdated. Krinkle refactored quite a lot in that "projects" update.
[09:08:10] <jzaefferer> It used to be like that...
[09:08:32] <timmywil> $authToken = LoginAction::generateRandomHash( 40 ); $authTokenHash = sha1( $authToken );
[09:08:46] <timmywil> authToken is printed to console, the hash goes in the database
[09:09:15] <JamesMGreene> jzaefferer: On Skype now
[09:09:19] <timmywil> unfortunately, I don't see a way to get a new auth token other than recreating the project
[09:09:51] <jzaefferer> weird
[09:10:58] <JamesMGreene> jzaefferer: Video call or just audio?
[09:38:13] <jqcommit> 01[13qunit01] 15jzaefferer pushed 1 new commit to 06master: 02http://git.io/UI0U_Q
[09:38:13] <jqcommit> 13qunit/06master 14068defe 15JoÌˆrn Zaefferer: Changelog for 1.12
[09:39:32] <doesallmagic2> Project QUnit build #321: UNSTABLE in 1 min 31 sec: http://jenkins.jquery.com/job/QUnit/321/
[09:39:33] <doesallmagic2> joern.zaefferer: Changelog for 1.12
[09:46:45] <jqcommit> 01[13qunit01] 15JamesMGreene pushed 2 new commits to 06master: 02http://git.io/qc3GYw
[09:46:45] <jqcommit> 13qunit/06master 14c516fc3 15James M. Greene: Updating AUTHORS.txt
[09:46:45] <jqcommit> 13qunit/06master 14a115f28 15James M. Greene: Release 1.12.0
[09:46:53] <jqcommit> 01[13qunit01] 15JamesMGreene tagged 06v1.12.0 at 06master: 02http://git.io/UfXfWg
[09:48:37] <doesallmagic2> Yippie, build fixed!
[09:48:37] <doesallmagic2> Project QUnit build #322: FIXED in 2 min 4 sec: http://jenkins.jquery.com/job/QUnit/322/
[09:48:38] <doesallmagic2> * James M. Greene: Updating AUTHORS.txt
[09:48:38] <doesallmagic2> * James M. Greene: Release 1.12.0
[10:04:23] <jqcommit> 01[13qunit01] 15JamesMGreene pushed 1 new commit to 06master: 02http://git.io/lfT1xg
[10:04:23] <jqcommit> 13qunit/06master 143c901d9 15James M. Greene: Bump post-release version
[10:04:58] <jqcommit> 01[13qunit01] 15jzaefferer pushed 1 new commit to 06master: 02http://git.io/8E2Jyw
[10:04:58] <jqcommit> 13qunit/06master 147f2a60e 15JoÌˆrn Zaefferer: Readme: Update release instructions
[10:05:46] <doesallmagic2> Project QUnit build #323: SUCCESS in 1 min 35 sec: http://jenkins.jquery.com/job/QUnit/323/
[10:05:47] <doesallmagic2> James M. Greene: Bump post-release version
[10:07:34] <doesallmagic2> Project QUnit build #324: UNSTABLE in 1 min 47 sec: http://jenkins.jquery.com/job/QUnit/324/
[10:07:35] <doesallmagic2> joern.zaefferer: Readme: Update release instructions
[10:18:42] <jqcommit> 01[13qunit01] 15jzaefferer pushed 1 new commit to 06master: 02http://git.io/98yM3Q
[10:18:42] <jqcommit> 13qunit/06master 149e37e87 15JoÌˆrn Zaefferer: Readme: Update release instruction updates
[10:20:05] <doesallmagic2> Yippie, build fixed!
[10:20:06] <doesallmagic2> Project QUnit build #325: FIXED in 1 min 39 sec: http://jenkins.jquery.com/job/QUnit/325/
[10:20:06] <doesallmagic2> joern.zaefferer: Readme: Update release instruction updates
[10:21:56] <jzaefferer> Yay, QUnit 1.12 is out
[10:24:53] <JamesMGreene> Now to deprecate the world....
[10:47:50] <danheberden> clarkbox: what is the brand of that backup battery you used for the raspberry pis?
[10:48:15] <danheberden> cc s5fs ryanneufeld 
[11:07:39] <Krinkle> timmywil: Hi
[11:07:41] <Krinkle> What's up?
[11:07:48] <Krinkle> timmywil: There's the patrol token (of which the encrypted version is cached in the cache folder)
[11:08:04] <Krinkle> and there's the authentication token for individual users (of which the encrypted version is stored in the database)
[11:08:19] <Krinkle> eh, not patrol token. "run token".
[11:08:38] <timmywil> Krinkle: right, but the script to regenerate an auth token is gone. It's fine now, though, I just recreated the project
[11:08:47] <Krinkle> the run token is only needed if your testswarm is in non-public mode and only needed in the url of browser clients to the /run/ page
[11:08:54] <Krinkle> the authentication token is used to submit new jobs through the API
[11:09:21] <timmywil> yea I understand the difference
[11:09:22] <Krinkle> both of these tokens are not stored in plain text, you can only get them by regenerating them. At which point it'll show it once in the script output.
[11:09:32] * Krinkle looks in the repo
[11:09:37] <Krinkle> Looks like I forgot to git-add one file.
[11:09:48] <Krinkle> refreshRunToken is there
[11:09:52] <Krinkle> refreshProjectToken is not
[11:09:58] <timmywil> right
[11:10:01] <Krinkle> Fixing now
[11:10:17] <timmywil> cool! thanks man
[11:10:48] <timmywil> Krinkle: do you discuss plans for testswarm in the infra meetings?
[11:11:19] <Krinkle> Well, up until last week testswarm was part of the testing team, not infrastructure team.
[11:11:55] <timmywil> oh of course
[11:11:58] <Krinkle> I suppose testswarm, node-testswarm, node-browserstack, and, testswarm-browserstack are now all infrastructure
[11:12:11] <Krinkle> quite a few packages, so looks like infra will have to get familiarised with it
[11:12:23] <timmywil> actually, I didn't know they were switched
[11:12:38] <timmywil> I meant testing meetings
[11:12:43] <Krinkle> anyhow, I make it an effort to me transparent as I can by documenting well, creating issues in the issue tracker ahead of time, and submitting pull requests before pushing to the repo.
[11:12:59] <Krinkle> I'll also include plans in the infra meetings from now on
[11:13:10] <Krinkle> Yes, previously in the testing meetings
[11:14:40] <timmywil> cool, I'm loving testswarm. I'm hoping we can end up with a script to completely automate setting up testswarm and eventually document every script and page.
[11:16:07] <Krinkle> timmywil: I prefer in-repo documentation for most things (proper versioning, easier to enforce in the same commit, and always handy). I also have higher level documentation on the testswarm github wiki. And once we have our domain claimed from John Resig we can set up a wp-content for it.
[11:16:18] <Krinkle> Everything should be pretty well documented already. 
[11:16:28] <Krinkle> Automation for set up is pending indeed, still quite a few steps
[11:16:33] <Krinkle> What kind of format would you prefer?
[11:16:37] <Krinkle> I'm thinking puppet.
[11:16:59] <Krinkle> (a generic puppet manifest that is, that takes parameters which we'll pass from jquery/infrastructure)
[11:16:59] <timmywil> puppet sounds good to me
[11:17:09] <Krinkle> Great
[11:17:39] <timmywil> Krinkle: internal docs are great, but maybe we could somehow export the internal docs so people know what to do after it's installed
[11:18:07] <timmywil> I didn't know how to create a project until I saw an issue saying they didn't know until they looked at source
[11:19:31] <timmywil> but I'd be willing to talk more about it at the next meeting
[11:21:34] <timmywil> documenting everything on an API site would be great too. If we don't document everything about the scripts, I think we at least a legend on the wiki (and eventually a wp site) saying where all the scripts are and what they do.
[12:46:58] <jqcommit> [13jquery] 15rwldrn opened pull request #1293: Fixes #14047 jQuery.data should not miss data-* w/ hyphenated property names (06master...0614047)  02http://git.io/SBrnJA
[13:36:35] <ryanneufeld> danheberden: Anker
[13:36:44] <ryanneufeld> danheberden: http://www.ianker.com/anker-astro-external-battery-backup-charger/product/79ANS1052-BA
[14:12:53] <agcolom> hey guys if anyone is still around, any idea why the api sites are so slow?
[14:13:50] <agcolom> for example  http://api.jqueryui.com/ , http://api.jquerymobile.com or http://api.jquery.com/ 
[14:14:15] <agcolom> it was fine the last time I tried, so not sure whether this is a very recent problem. 
[14:14:22] <agcolom> stage however is fine
[14:15:07] <agcolom> I am just not sure who can help here... ryanneufeld ? danheberden ? 
[14:16:01] <agcolom> sorry, all back to normal now! 
[14:16:20] <ryanneufeld> well, php was just hammering the cpu
[14:16:36] <ryanneufeld> when I logged in it was at 100% utilization
[14:16:42] <agcolom> whoa!
[14:17:46] <agcolom> did you have to do something to fix?
[14:18:20] <ryanneufeld> no.. it stopped doing that just as I logged in
[14:19:32] <danheberden> ryanneufeld: thanks for the link :)
[14:20:51] <ryanneufeld> danheberden: np man
[14:34:40] <agcolom> ryanneufeld: I'm glad! Thanks for checking :-)
[14:55:12] <Krinkle> timmywil: ping
[14:55:21] <timmywil> Krinkle: hey there
[14:55:33] <Krinkle> https://gerrit.wikimedia.org/r/#/c/69764/
[14:55:45] <Krinkle> timmywil: Any idea why closest()/Sizzle/matchesSelector doesn't use qsa?
[14:56:58] <Krinkle> <Krinkle>: timmywil: Any idea why closest()/Sizzle/matchesSelector doesn't use qsa? 
[14:56:59] <RoanKattouw> Krinkle: ?
[14:57:29] <timmywil> Krinkle: it does
[14:57:45] <Krinkle> RoanKattouw: How did you determine it didn't?
[14:58:04] * Krinkle has a meeting and will read it later
[14:58:34] <RoanKattouw> Krinkle: Profiling in Chrome
[14:58:52] <timmywil> it can't if the selector is not to spec, but other than that I can't think of why it wouldn't
[14:59:01] <RoanKattouw> The selector is .foo-bar-baz, .foo-baz-quux
[15:01:50] <timmywil> RoanKattouw: works for me http://jsbin.com/equkij/1
[15:03:46] <timmywil> let us know if you can reproduce
[15:04:21] <RoanKattouw> my jsperf also suggests it's fast
[18:23:00] <jqcommit> [13jquery] 15silverwind opened pull request #1294: Remove obsolete getPreventDefault() usage (06master...06patch-defaultPrevented)  02http://git.io/J7aWqQ
[18:56:50] <JamesMGreene> Krinkle: Did you deprecate all the things in QUnit yet? ;)
[18:57:17] <JamesMGreene> It's already been 8 hours since we pushed 1.12
[19:01:27] <Krinkle> ;-)
