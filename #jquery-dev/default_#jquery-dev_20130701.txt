[08:52:22] <jaubourg> plop
[08:53:52] <DaveMethvin> jaubourg, so glad you plopped in!
[08:54:02] <DaveMethvin> meeting in 5 minutes
[08:56:08] <jaubourg> yeah, I can make it today so \o/
[09:45:59] <DaveMethvin> bot-t: you're suspicously quiet lately
[09:45:59] <bot-t> DaveMethvin, Is that a question?
[09:46:37] <_orkel> m_gol: ?
[09:46:50] <m_gol> _orkel: http://jsfiddle.net/m_gol/ZgMDw/2/
[09:47:52] <jaubourg> bot-t: woah, first time I ever read you writing something witty!
[09:48:46] <m_gol> I wonder why anybody bothered with making undefined write-protected while leaving it suspectible to being shadowed
[09:49:40] <DaveMethvin> they couldn't make it illegal to use as a variable name, since we use it as a function arg :)
[09:50:18] <_orkel> m_gol: weird!
[09:50:43] <m_gol> DaveMethvin: exactly, so why bother changing anything at all about it
[09:50:56] <m_gol> unless they plan to change the semantics in 10 years and that is a preparation :P\
[09:51:01] <DaveMethvin> does "var undefined=2" actually change the value?
[09:51:07] <DaveMethvin> i didn't think it did
[09:51:24] <m_gol> it doesn't change the undefined value but it creates a new variable named undefiend with value 2
[09:51:32] <m_gol> and the code below can't see past this variabler
[09:51:36] <m_gol> * variable
[09:51:51] <m_gol> so it's better to re-shadow it ourselves to be sure no one is screwing with us
[09:51:57] <DaveMethvin> i thought that is what they changed in es6
[09:52:49] <m_gol> DaveMethvin: I don't know about any undefined-related changes in ES6
[09:52:58] <m_gol> undefined immutability was specified in ES5 I believe
[09:52:59] <_orkel> m_gol: i don't know, not many people do that, and this problem is pretty famous but i don't if anybody met that problem in reallity
[09:53:46] <m_gol> _orkel: maybe, but this solution is only a byte or so so it's extremely cheap to prevent such issues on our end
[09:53:58] <m_gol> as opposed to Object.prototype etc.
[09:54:28] <DaveMethvin> and you'd think a local would be more compressible, tho we've found that isn't always true
[09:54:40] <m_gol> it would make sense if the spec dictated that every variable named undefined was immutable
[09:55:00] <m_gol> but I guess it'd create some other problems since some of them are keys on the global object etc.
[09:55:56] <m_gol> I've heard ESsth is planning to remove the global object from the scope chaing
[09:55:57] <m_gol> * chain
[09:56:12] <m_gol> it would make the solution I mentioned possible to specify, I guess
[09:56:23] <m_gol> maybe in 10 years ;D
[09:57:48] <_orkel> nor dash nor underscore nor ember does not do that, we do that only from 1.7.2 if i recall correctly
[09:58:00] <_orkel> also, we do not have test for it
[09:59:14] <_orkel> i wounder who actually use undefined argument except us
[09:59:28] <m_gol> many jQuery plugins for sure :D
[09:59:38] <m_gol> those are valid remarks, though
[10:00:21] <m_gol> underscore doesn't do it but they write void 0 instead of undefined
[10:04:00] <scott_gonzalez> I find the undefined argument to be really annoying.
[10:04:25] <scott_gonzalez> Just like I find the defensive leading semicolon to be really annoying.
[10:07:39] <m_gol> it might be that we're just overprotective here
[10:08:10] <m_gol> DaveMethvin: weird...:
[10:08:11] <m_gol> http://jsbin.com/etuvom/11 - buggy
[10:08:11] <m_gol> http://jsfiddle.net/m_gol/kDVyv/5/show/light/ - works
[10:08:11] <m_gol> (open console, refresh and look)
[10:08:32] <m_gol> if you execute those instructions manually on jsbin in the browser console, it's correct
[10:08:52] <m_gol> seems like a weird race condition...
[10:09:58] <m_gol> DaveMethvin: the same for 2.x edge:
[10:09:58] <m_gol> http://jsbin.com/etuvom/13
[10:09:58] <m_gol> http://jsfiddle.net/m_gol/kDVyv/6/show/light/
[10:23:28] <m_gol> jQuery.support.boxSizing returns undefined on jsBin for some reason
[10:27:48] <m_gol> DaveMethvin: are you here?
[10:34:55] <snover> number of times i have seen someone redefine undefined: 0
[10:58:21] <scott_gonzalez> DaveMethvin: http://api.jquery.com/after/
[10:58:30] <scott_gonzalez> Is htmlString really a valid parameter?
[10:59:25] <scott_gonzalez> On a related note, I never knew that .after() accepted a second parameter. That's kinda crazy.
[11:02:15] <jqcommit> 01[13jquery01] 15mzgol pushed 1 new commit to 06master: 02http://git.io/Qs4iVA
[11:02:15] <jqcommit> 13jquery/06master 14ec6eb38 15Jason Merino: Fixes #14049: don't append px to CSS order value. Close gh-1300.
[11:04:30] <jqcommit> 01[13jquery01] 15mzgol pushed 1 new commit to 061.x-master: 02http://git.io/M7y8Gg
[11:04:30] <jqcommit> 13jquery/061.x-master 141c6641f 15Jason Merino: Fixes #14049: don't append px to CSS order value. Close gh-1300. (cherry picked from ec6eb38c64aadd6860c402cc0894c77b82b1a65d)
[11:08:35] <jqcommit> 01[13jquery01] 15mzgol pushed 1 new commit to 061.x-master: 02http://git.io/gdQevw
[11:08:35] <jqcommit> 13jquery/061.x-master 14f8d0581 15Micha≈Ç Go≈ÇeÃ®biowski: Update AUTHORS.txt
[11:09:44] <jqcommit> 01[13jquery01] 15mzgol pushed 1 new commit to 06master: 02http://git.io/DVSWkw
[11:09:44] <jqcommit> 13jquery/06master 14d57c22c 15Micha≈Ç Go≈ÇeÃ®biowski: Update AUTHORS.txt
[11:47:18] <jqcommit> 01[13jquery01] 15orkel pushed 3 new commits to 06master: 02http://git.io/GlG0ew
[11:47:18] <jqcommit> 13jquery/06master 1416115c1 15Oleg: support.boxSizingReliable in FF 23 should be true. Close gh-1288
[11:47:18] <jqcommit> 13jquery/06master 14308980e 15Oleg: Fix test for #13937 ticket. Close gh-1299
[11:47:18] <jqcommit> 13jquery/06master 145f1aa23 15ruado1987: Fixes #13976: Garbage input should not cause error in buildFragment. Close gh-1284
[11:48:51] <jqcommit> 01[13jquery01] 15orkel pushed 1 new commit to 061.x-master: 02http://git.io/3ujHSw
[11:48:51] <jqcommit> 13jquery/061.x-master 1448a948f 15Oleg: Fix test for #13937 ticket. Close gh-1299...
[12:59:38] <DaveMethvin> jaubourg i meant to ask you about this one: http://bugs.jquery.com/ticket/14080
[13:01:58] <jaubourg> well, it's a known limitation mainly due to the fact handling it requires browser sniffing. It may be possible to handle it in 2.x though. Actually, it depends on the version of Opera we support in 1.x now. $.jsonp solves the issue... using browser sniffing because it cannot be support-tested
[13:02:48] <DaveMethvin> there was a question a coupla weeks ago about Opera 11 not working with some ES5 feature
[13:02:57] <DaveMethvin> but Opera 12 is the latest i think
[13:03:05] <DaveMethvin> other than Opera.Next which is Blink
[13:04:06] <jaubourg> so to make it fully understandable, the trick is being able to know which script tag is executing the callback (which is a nightmare in IE) and knowing when the request stopped even in case of an error (to avoid memory leaks)
[13:04:34] <jaubourg> which is (was?) a nightmare in Opera
[13:05:13] <DaveMethvin> oh yeah, i see the problem
[14:36:15] <scott_gonzalez> WAT?
[14:36:33] <scott_gonzalez> rwaldron: How dare you ask where it says we support HTTPS on our CDN.
[14:37:21] <scott_gonzalez> I'm super confused about this complaint http://bugs.jquery.com/ticket/10142#comment:13
[14:40:59] <snover> he asked a direct question. what a douche
[14:41:13] <snover> ‚Äúgoing to be‚Äù because this issue and ticket are brand new
[14:41:21] <scott_gonzalez> heh
[14:44:30] <DaveMethvin> well i hope we'll be getting https soon, but the sense of entitlement in that ticket is awesome
