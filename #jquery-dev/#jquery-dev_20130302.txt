[02:27:59] <Ancient> gnarf, Thank you.
[02:31:36] <Ancient> I've created an issue there and will continue through that. I had assumed api.jquery.com was exclusively for the API docs, rather than discussion of this nature.
[04:26:15] <gnarf> Ancient: well that's taking the opinion that its a documentaion bug to start, yeah
[04:26:32] <gnarf> if you feel like its more, open a ticket in the core trac too
[04:26:57] <gnarf> but since its about how a method is documented, the api site seemed the best place for a discussion of it
[06:28:03] <ryanneufeld> Krinkle|detached: I did not edit that json file no.
[10:07:36] <jqcommit> 01[13jquery01] 15rwldrn pushed 2 new commits to 06master: 02http://git.io/l6gh-g
[10:07:36] <jqcommit> 13jquery/06master 14761b96c 15MichaÅ‚ GoÅ‚Ä™biowski: Fixes #13550. .data should not miss attr() set data-* with hyphenated property names. Closes gh-1189
[10:07:36] <jqcommit> 13jquery/06master 149bf8b04 15Rick Waldron: test/unit/data.js style nits...
[10:12:36] <doesallmagic> Project jQuery Core build #730: STILL FAILING in 4 min 52 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/730/
[10:12:37] <doesallmagic> * Rick Waldron: Fixes #13550. .data should not miss attr() set data-* with hyphenated property names. Closes gh-1189
[10:12:38] <doesallmagic> * Rick Waldron: test/unit/data.js style nits
[10:16:58] <draconusit> I also asked the same question in jquery chat as I am not sure which channel is the right one to ask this...
[10:17:53] <draconusit> I am working on a responsive site using the 1140 grid and I want to implement the parallax effect that smashing magazine wrote a nice tutorial on here: http://coding.smashingmagazine.com/2011/07/12/behind-the-scenes-of-nike-better-world/
[10:18:40] <draconusit> Anyways, the code is in place, and the css portion is working correctly, but the js is not firing off in the data-type blocks on my site, and I am not sure why...
[10:18:48] <draconusit> Any advise would be great
[10:18:52] <draconusit> you can check out my site here:
[10:19:05] <draconusit> http://draconus.dreamhosters.com/parallax/
[10:20:38] <draconusit> lol, I just answered my own question
[10:20:39] <draconusit> lol
[10:20:47] <draconusit> I am not using sections. I am using divs
[10:20:49] <draconusit> lol
[10:38:54] <Krinkle> ryanneufeld: no worries, it was puppet overwriting the file
[10:39:54] <Krinkle> ryanneufeld: which was annoying and unexpected, it was puppetised recently, but as the entire file, not as  modular thing adding to the settings, so even the browser pool (which we edit locally all the time) was being overwritten.
[10:40:15] <Krinkle> In the testswarm-browserstack branch of jq/infra I have a different implementation
[10:40:19] <Krinkle> oh well, too late now.
[11:10:25] <jqcommit> 01[13jquery01] 15rwldrn pushed 1 new commit to 06master: 02http://git.io/c0Ezzw
[11:10:25] <jqcommit> 13jquery/06master 1491824bd 15Rick Waldron: Simplify data-* attr lookup with camelKey...
[11:15:24] <doesallmagic> Project jQuery Core build #731: STILL FAILING in 4 min 59 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/731/
[11:15:25] <doesallmagic> Rick Waldron: Simplify data-* attr lookup with camelKey
[12:35:15] <kswedberg> gnarf: I don't think Ancient was referring to documentation at all. Looks like he wants some code moved from /src/event.js to /src/event-alias.js. Unless I'm misunderstanding.
[12:37:12] <kswedberg> oh, duh. now I see your reply to his issue in github. sorry.
[13:45:26] <jrockjiggz2> ?error
[13:46:19] <bot-t> .error(handler): Bind an event handler to the "error" JavaScript event. http://api.jquery.com/error/
[14:39:44] <jqcommit> [13jquery] 15mzgol opened pull request #1190: utilize classList when supported (refs #5087) (06master...06classList)  02http://git.io/GC171A
[16:34:49] <JamesMGreene> Krinkle|detached jzaefferer Just submitted https://github.com/jquery/qunit/pull/418 to address the assertion addon extension technique issue that Krinkle|detached brought up in https://github.com/JamesMGreene/qunit-assert-html/issues/3
[16:34:49] <bot-t> (299 hours ago) <scott_gonzalez> tell JamesMGreene duplicating the QUnit repo would definitely not be the right way to build a repo for an extension.
[16:34:49] <b-ot> JamesMGreene: Pull request #418 by JamesMGreene (1m 35s ago): Fixed the extension technique used by QUnit assertion addons
[18:26:10] <Ancient> kswedberg, Correct, apologies for posting that issue to the wrong spot, I wasn't entirely sure where it should go, as it's not a bug, or a feature, or necessarily affecting the API, it was just organization of code.
[18:28:12] <Ancient> It seemed if event-alias was now it's own "module" that could be built in or excluded, it should be done properly such that event.js merely needs to provide the minimal and recommended API. While event-alias is charge of all shortcut / wrapper methods.
[19:27:17] <Ancient> scott_gonzalez, Would it be easier to discuss that issue here? I'm interested in any examples of how it would break code.
[19:28:47] <Ancient> issue 13554 if you've responded to a few in the past few minutes
[20:00:53] <scott_gonzalez> Ancient: There's very strong desire for popular projects to avoid as much API from optional modules as possible.
[20:01:13] <scott_gonzalez> There is absolutely no reason a project like jQuery UI should ever use an API from event-alias.js.
[20:01:28] <scott_gonzalez> That is a module that should be extremely safe to remove.
[20:01:38] <scott_gonzalez> And users should be encouraged not to use those shortcuts.
[20:01:47] <scott_gonzalez> However, there is a TON of code that uses .bind()
[20:02:17] <scott_gonzalez> And when that code is in plugins, there is good incentive for those plugins NOT to switch to .on() in order to support the widest range of core versions.
[20:02:47] <scott_gonzalez> It is very easy for a plugin to support a wide range of jQuery versions while also supporting a custom build that does not include event-alias.js
[20:03:06] <scott_gonzalez> But if .bind() and .delegate() are moved, then it becomes painful.
[20:06:10] <Ancient> So, event-alias, isn't intended to contain aliases for the event API, but rather to just separate a couple lines for no apparent reason?
[20:07:15] <Ancient> I do see what you're getting at with the desire to keep API compatibility with older versions, but surely it would still be kept in the default build.
[20:07:25] <Ancient> From my perspective it seems contradictory almost
[20:08:32] <Ancient> As for the jQuery UI and other projects avoiding optional modules, does it manage to entirely avoid .css(), .show(), .hide() because I'd be quite surprised
[20:09:25] <Ancient> Even though that module is optional, it's very central to a number of things that build upon jQuery, so surely it wouldn't be a stretch to say, some things don't work when you strip out big chunks of jQuery.
[20:11:16] <Ancient> It could also be argued that plugins attempting to support many older versions of jQuery would be working against standard builds, rather than custom ones with modules removed.
[20:13:54] <scott_gonzalez> .css(), .show(), .hide() are not sane options to remove.
[20:14:30] <scott_gonzalez> standard builds or nothing is a shitty option
[20:14:46] <scott_gonzalez> There should be sane modules that can be removed.
[20:14:53] <Ancient> I agree completely with that sentiment
[20:14:55] <scott_gonzalez> Or replaced with alternate modules.
[20:15:18] <scott_gonzalez> .bind() is not an alias in the sense of .mouseover().
[20:16:17] <scott_gonzalez> For example, it's sane to eventually have a build of jQuery that rips out ajax and shims $.get(), $.post(), etc.
[20:16:27] <scott_gonzalez> And have plugins only depend on the minimal functionality of the shorthands.
[20:17:06] <scott_gonzalez> Or rip out effects and essentially have .animate() -> .css().
[20:17:35] <Ancient> And that was the very reason I assumed event-alias existed
[20:18:02] <Ancient> if event only contained .on(), off(), .trigger(), it could be replaced as a whole, and event-alias would still maintain compatibility with those aliases
[20:18:25] <scott_gonzalez> It's not about maintaining compatibility with the optional module.
[20:18:32] <scott_gonzalez> It's about maintaining compatibility WITHOUT the module.
[20:18:44] <Ancient> I hear you, but what was the purpose of making it a module then
[20:18:49] <Ancient> Why not merge event-alias back into event
[20:19:02] <scott_gonzalez> Because event-alias APIs are dumb.
[20:19:10] <scott_gonzalez> They're pointles sugar.
[20:19:54] <scott_gonzalez> You need to know the list of shorthands that exist.
[20:20:07] <scott_gonzalez> The list will never grow, even as the list of spec'd events grows.
[20:22:01] <scott_gonzalez> DaveMethvin|away: Let's talk about this tomorrow. I was modules to be sane to work with for plugin devs.
[20:23:16] <Ancient> I just feel as though, bind & delegate are now essentially just sugar. Although they once served points, they no longer do when presented with .on/off (except backwards compatibility which is very valid).
[20:23:50] <Ancient> That's why I thought event-alias was intended to contain the everything necessary for backwards compatibility in the event system.
[20:24:56] <scott_gonzalez> I feel like the current separation is much more useful to the community as a whole.
[20:25:15] <scott_gonzalez> And moving .bind(), etc. is only beneficial to a small fraction of users.
[20:26:04] <Ancient> Not moving .bind(), etc is only benificial to a small fraction as well though, those who exclude event-alias yet still use bind/delegate
[20:26:52] <Ancient> I know, this is largely opinion based, so before we reiterate. I'll wait for you gentlemen to decide what will be done.
[20:28:03] <Ancient> I have no right to assert my view is any better than yours, I will simply leave this for consideration.
[20:31:37] <scott_gonzalez> Your point is valid, and it may be what happens, but I'd prefer to design our modules in a way that we can encourage users to support stripped down builds and older core versions.
[20:50:31] <JamesMGreene> brb
