[00:51:30] <One-Man-Bucket> any committers to the jquery ui layout plugin here?
[01:49:10] <One-Man-Bucket> anyone alive?
[04:24:34] <addyosmani> anyone around?
[04:59:09] <ben_alman> jzaefferer: ping
[04:59:24] <ben_alman> jzaefferer: come into #grunt when you have a chance
[05:20:17] <Cropos> hi :)
[05:21:22] <Cropos> anyone have some tips about how i can use jquery ajax to get dynamic xml content mabe from an .php file?
[05:22:13] <Cropos> i have seen alot of tuts on net about how to get it from static xml file, but that is not my problem :P
[05:33:20] <sindresorhus> Cropos: #jquery
[05:42:00] <DaveMethvin> .
[05:42:01] <bot-t> (24 hours 10 mins ago) <scott_gonzalez> tell DaveMethvin timmywil gnarf wycats paul_irish: Do we have anyone providing feedback for http://lists.w3.org/Archives/Public/public-webapps/2012JanMar/0804.html
[05:54:24] <gnarf> paul_irish: you lurking?
[05:55:01] <ben_alman> hey gnarf did you ever see the little htmlslice thing i did?
[05:55:04] <ben_alman> the jq animation
[05:55:11] <gnarf> yup, looked fun :)
[05:55:15] <ben_alman> heh
[05:55:41] <ben_alman> the question is: how can i do that in a more generic way in jquery instead of animating a fake property on a dummy element
[05:56:07] <ben_alman> the whole "animate a fake css prop from 0 to 1 on a dummy element" is kinda wonky :P
[05:56:24] <gnarf> agreed
[05:58:57] <ben_alman> gnarf: also been playing diablo 3 beta, it's great
[05:59:02] <gnarf> i wonder if the 0-1 part of animation could get separated
[05:59:03] <ben_alman> and did you see the gw2 beta signup?
[05:59:10] <ben_alman> https://beta.guildwars2.com/
[05:59:13] <gnarf> ben_alman: im in both :)
[05:59:18] <ben_alman> oh ok great
[05:59:36] <ben_alman> gw2 can't come soon enoughâ€¦ although it better not come too soone
[05:59:43] <ben_alman> how do you get into all these betas?
[05:59:45] <ben_alman> damn
[06:02:08] <gnarf> ive been in the d3 beta since i ran into some blizzard CSRs when i was in austin visiting bioware
[06:02:48] <gnarf> gw2 - i know some fansite people who had an in
[06:03:12] <ben_alman> connections + right place, right time = every beta ever
[08:30:48] <paul_irish> gnarf: can you summarize jquery's feedback on rAF?
[08:38:05] <gnarf> paul_irish: from my point of view - rAF is really handy, but it might benefit from some sort of "max wait" argument and/or a "isAnimationDesired" call
[08:38:26] <gnarf> we have issues with timing when using raf
[08:38:29] <paul_irish> i think the solution is flushing the rAF stack
[08:38:37] <paul_irish> so anims dont build up
[08:38:44] <paul_irish> when inactive
[08:38:59] <gnarf> well we only need a callback when an animation would normally be ending
[08:39:05] <gnarf> so its possible to do with setTimeout
[08:39:08] <gnarf> and raf
[08:39:41] <gnarf> just seems really really strange
[08:40:14] <gnarf> its not really a "stack" it just calls "tick" and we need a "tick" to happen right around when each animation is ending
[08:42:53] <paul_irish> gnarf: but rAF should ticket at 60hz around when each anim is ending..
[08:44:08] <gnarf> paul_irish: lets say we start a 1second amin, using raf, when the page isn't visible
[08:44:41] <gnarf> we could setTimeout( tick, 1000 )
[08:45:04] <gnarf> to guarntee we got a tick as soon after that anim ends as is possible
[08:45:28] <gnarf> but if the page is visible, we just added a second timeout
[08:45:36] <gnarf> that might not be neccesary
[08:45:56] <gnarf> hence why i was thinking if you could requestAnimationFrame( tick, 1000 )
[08:46:19] <gnarf> it would act like the timeout if the page isn't visible, but a standard rAF it it was
[08:48:34] <gnarf> i dunno - random thoughts - i think i can solve it with the timeout anyway
[08:49:01] <gnarf> gotta close up the compu - catch you in about 15
[09:30:52] <paul_irish> i dont think i follow why that's neccessary
[09:31:07] <paul_irish> but
[09:31:18] <paul_irish> we do need to submit feedback to the working group on rAF
[09:31:28] <paul_irish> so i'd like to get that summarized
[09:33:19] <mikesherov> .
[09:34:48] <mikesherov> No one leaves me messages anymore
[09:35:57] <darcyclarke> ?tell mikesherov yo man! heard people don't leave you nough msgs... :) <#
[09:35:58] <bot-t> darcyclarke, Okay.
[09:36:00] <darcyclarke> <3
[09:36:11] <mikesherov> .
[09:36:12] <bot-t> (14 secs ago) <darcyclarke> tell mikesherov yo man! heard people don't leave you nough msgs... :) <#
[09:36:15] <mikesherov> WEEEE
[09:51:29] <DaveMethvin> :(
[09:51:43] <mikesherov> :(
[09:51:45] <DaveMethvin> :)
[09:51:46] <mikesherov> why?
[09:52:02] <DaveMethvin> i figured it was more fun than .
[09:52:07] <mikesherov> ha
[09:52:24] <mikesherov> but . is the universal "do I have messages?"
[09:52:35] <DaveMethvin>   
[09:52:38] <DaveMethvin> spaces
[09:52:56] <mikesherov> I see
[09:53:37] <mikesherov> I closed two bugs that can no longer be repro'd yesterday: http://bugs.jquery.com/ticket/8949 http://bugs.jquery.com/ticket/7305
[09:54:16] <mikesherov> I figured that's the right procedure, but just in case, we don't have any policy around that, right? Something like "leave a comment and if original person doesn't respond in X days, safe to close"?
[09:54:34] <kborchers> bot-t: do i have messages?
[09:54:34] <bot-t> kborchers, You may rely on it.
[09:54:38] <DaveMethvin> yep, if we can't repro there's not much reason to leave it open
[09:54:39] <kborchers> that's more fun :)
[09:54:57] <DaveMethvin> ?tell bot-t hello
[09:54:58] <bot-t> DaveMethvin, Stop playing with me!
[09:55:02] <kborchers> hahaha
[09:55:15] <mikesherov> LOL
[09:55:21] * kborchers hugs bot-t
[09:55:21] * bot-t hugs kborchers back
[09:55:36] <kborchers> ok, done playing :)
[09:58:41] <mikesherov> by the way, looks like the IE autoupdate thing is happening in the US now
[09:58:59] <mikesherov> my coworkers who had IE7 installed automatically got IE8 yesterday
[09:59:36] <mikesherov> most of the effect is IE8 --> IE9, very little movement in IE7/IE6
[09:59:53] <DaveMethvin> that's good, I guess
[10:00:02] <mikesherov> I suppose
[10:00:04] <DaveMethvin> although really until IE8 is gone we still have a lot of mess
[10:00:14] <mikesherov> would've liked to see more IE7/IE6 movement
[10:00:27] <mikesherov> read: until Windows XP is gone
[10:00:35] <DaveMethvin> April 2014
[10:00:45] <DaveMethvin> that's when they won't be doing any more security patches
[10:00:52] <DaveMethvin> at that point you're crazy to stay on it
[10:00:56] <DaveMethvin> irresponsible really
[10:01:36] <mikesherov> yeah
[10:02:44] <mikesherov> OK, so on the topic of "bugs that affect IE6/IE7 that we're going to just forever ignore": http://bugs.jquery.com/ticket/3838 can I close this, or should I make an attempt at fixing?
[10:02:50] <mikesherov> it's IE6 only
[10:03:57] <DaveMethvin> i'd like to say screw it
[10:04:06] <DaveMethvin> wonder how scott_gonzalez feels about it
[10:04:20] <scott_gonzalez> about what?
[10:04:23] <DaveMethvin> ie6 is mighty tiny market share
[10:04:30] <DaveMethvin> http://bugs.jquery.com/ticket/3838
[10:04:53] <scott_gonzalez> I feel like you better fix it before I go insane :-P
[10:05:16] <scott_gonzalez> I don't think we're dropping IE 6 any time soon.
[10:05:22] <scott_gonzalez> Do we know what the problem/fix is for IE 6?
[10:05:33] <mikesherov> Nope, I was going to investigate
[10:05:46] <DaveMethvin> i don't know what it is, but if we have limited time ...
[10:05:49] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.dialog.js#L765
[10:05:54] <DaveMethvin> i don't know how much work to put into it
[10:06:12] <DaveMethvin> and we're not dropping support for IE6 in any case, just saying this edge case may not work
[10:06:38] <mikesherov> browser sniffing, ewww
[10:06:47] <scott_gonzalez> Yeah, I wrote that years ago.
[10:06:52] <mikesherov> Yeah
[10:07:00] <scott_gonzalez> You may notice that bug is 3 years old...
[10:07:05] <mikesherov> Right
[10:07:09] <mikesherov> it is OLD
[10:07:13] <DaveMethvin> well mikesherov if you play with it and don't find an easy solution i suggest wonfix
[10:07:21] <mikesherov> and I want to either close it or fix it
[10:07:29] <mikesherov> I want dimensions and css to be EMPTY
[10:07:31] <DaveMethvin> isn't ie6 like small single digits at this point?
[10:07:38] <mikesherov> yes, it's small
[10:07:48] <mikesherov> also, not a lot of dupes reported
[10:07:53] <scott_gonzalez> It's 7.7% worldwide.
[10:08:11] <mikesherov> meh
[10:08:12] <mikesherov> in china
[10:08:26] <mikesherov> 25% of IE6 users are in china
[10:08:27] <scott_gonzalez> Heh, Chines is 25%
[10:08:57] <mikesherov> I mean, I can try to fix it
[10:09:05] <DaveMethvin> well let's hope that all 7.7% don't need $(document).height()
[10:09:23] <DaveMethvin> since chinese people tend to be shorter it may not be a problem
[10:09:26] <mikesherov> I thought as a matter of policy, that we wouldn't be fixing things in IE6/IE7 that were "small"
[10:09:42] <mikesherov> so I'm really just asking, is this something worth going after
[10:09:47] <DaveMethvin> yes, i agree
[10:10:01] <mikesherov> because you know I love submitting PR's
[10:10:01] <DaveMethvin> at this point we've had a DECADE to understand and solve the problem
[10:10:44] <DaveMethvin> i don't think our support for ie6 needs to be at the same level as FF10 or IE9 for example
[10:11:03] <mikesherov> Sure
[10:11:12] <scott_gonzalez> Well, it means that centering or creating overlays in IE 6 is a pain.
[10:11:24] <DaveMethvin> i'm sure it does
[10:11:35] <mikesherov> LOL
[10:12:10] <DaveMethvin> it's just the problem of justifying a lot of effort to fix it, unless there is a simple/small fix
[10:12:16] <DaveMethvin> that someoen knows
[10:12:30] <DaveMethvin> actually we might as well close it patchwelcome, right?
[10:12:33] <scott_gonzalez> Well, look into it for an hour or so and see if anything comes up.
[10:12:39] <scott_gonzalez> Also, might be worth pinging Brandon.
[10:12:50] <mikesherov> I mean, I can probably figure it out in under an hour
[10:12:55] <scott_gonzalez> He did leave a comment, but then I never heard anything after that.
[10:12:59] <DaveMethvin> we need a browser historian :)
[10:13:16] <DaveMethvin> a man whose lawn is littered with the knowledge of IE6
[10:13:19] <mikesherov> I can and will submit a pull request if we feel there's any value in fixing this
[10:13:32] <DaveMethvin> if you can come up with something, sure
[10:13:38] <DaveMethvin> if not, close it patchwelcome
[10:13:49] <mikesherov> Great
[10:13:51] <mikesherov> thanks
[10:13:56] <scott_gonzalez> We can also ask Microsoft for a solution if we can't find one.
[10:14:02] <mikesherov> LOLLOL
[10:14:05] <DaveMethvin> haha
[10:14:06] <scott_gonzalez> Tony has been really helpful.
[10:14:15] <scott_gonzalez> He's fixed a few bugs in UI for us.
[10:14:17] <mikesherov> I'm just trying to calm my OCD senses
[10:14:18] <DaveMethvin> ie6?
[10:14:33] <mikesherov> Oh, you mean, a guy who knows the quirks of IE6
[10:14:35] <mikesherov> got it
[10:14:37] <scott_gonzalez> IE 6 definitely gets less priority from them.
[10:14:48] <scott_gonzalez> But he might be willing to spend a little bit of time looking into it.
[10:14:53] <scott_gonzalez> Or he might even just know of a fix.
[10:14:56] <DaveMethvin> yeah, even ie7 might get some love but ie6 i dunno
[10:15:06] <mikesherov> it's probably just an offset thing like Brandon mentions
[10:15:13] <mikesherov> I'll whip up a patch
[10:15:19] <mikesherov> thanks for the discussion guys
[10:15:59] * scott_gonzalez wonders if I will even be able to use a fix at this point...
[10:16:38] <scott_gonzalez> If a fix lands today, we can't use it in UI until AT LEAST UI 2.0.
[10:16:54] <scott_gonzalez> I wouldn't be surprised if IE 6 support is dropped by then.
[10:17:12] <DaveMethvin> but think of the starving 25% in CHINA scott_gonzalez
[10:17:28] <scott_gonzalez> A fix would be good if it's not a huge pain though.
[10:17:45] <scott_gonzalez> Also good would be a way to remove the browser sniffing while using old jQuery.
[10:17:51] <timmywil> agreed. chinese are short.
[10:17:58] <scott_gonzalez> Maybe I can just use the long IE version always.
[10:18:01] <mikesherov> LOL
[10:18:02] <DaveMethvin> lol timmywil got it
[10:18:34] <DaveMethvin> scott_gonzalez: we were talking about moving $.browser support to a plugin ... how many browser sniffs are left in UI?
[10:18:51] <scott_gonzalez> Too many.
[10:19:08] <DaveMethvin> it will still be there in 1.8 but in 1.9 we were tentatively planning to break it out
[10:19:09] <scott_gonzalez> I'll be removing them from all of widgets (not interactions) for 1.9
[10:19:34] <scott_gonzalez> And all of the interactions are being rewritten for 2.0, obviously without any use of $.browser.
[10:20:02] <DaveMethvin> well this is my impetus to get the deprecate/remove list updated and circulated then
[10:20:38] <mikesherov> Yes, the simplify offset one is big too
[10:20:46] <mikesherov> don't forget about that one, Dave.
[10:20:49] <DaveMethvin> yep
[10:21:37] <mikesherov> I'm still having trouble getting mobile to give me a yes or no on whether my patched version which simplifies offset works in the jQm browsers
[10:21:45] <DaveMethvin> was just about to ask :P
[10:22:01] <DaveMethvin> well one good way to find out is to release the next core ...
[10:22:23] <DaveMethvin> we don't know which browsers this excludes  yet
[10:22:42] <DaveMethvin> wasn't the original iPhone on the list?
[10:23:09] <mikesherov> Well, there are two parts to simplify offset
[10:24:00] <mikesherov> first is replace the giant manual calculcation which is a fallback for getBoundingRectClient with a fall to WebKitPoint
[10:24:21] <mikesherov> which will cover everything, I BELIEVE
[10:24:25] <mikesherov> I need that verified
[10:24:30] <DaveMethvin> I WANT TO BELIEVE TOO!
[10:24:39] <DaveMethvin> let us join hands
[10:25:08] <mikesherov> but then a step 2 would be to even remove the WebkitPoint fallback, but that mean the original iPhone is out, because it doesn't have getBoundingRectClient
[10:25:46] <mikesherov> Which caused my brain to explode, because honestly, who still has original iPhone? It's like <1% of market now
[10:25:51] <DaveMethvin> i don't have any numbers on how common the orig iphone is either
[10:25:56] <mikesherov> but I respect jQm's decision to support it
[10:26:15] <DaveMethvin> it's not much code is it?
[10:26:21] <DaveMethvin> to use webkitpoint
[10:26:53] <mikesherov> not that much code
[10:27:08] <mikesherov> which is why I only asked jQm about the version that keeps it in
[10:27:21] <mikesherov> and for the record, zepto does the exact same thing
[10:27:32] <mikesherov> getBoundingRectClient with fallback to WebkitPoint
[10:28:03] <mikesherov> not saying that's the right approach, but it's just another thing to evaluate
[10:29:23] <mikesherov> http://9to5mac.com/2011/01/17/developer-stats-say-90-of-ios-device-users-run-ios-4-x/
[10:29:27] <mikesherov> that's over a year old
[10:30:10] <DaveMethvin> i have to believe that nearly all orig iphones are dead at this point
[10:30:12] <mikesherov> http://stackoverflow.com/questions/4242606/how-many-units-of-each-ios-version-are-currently-in-usage
[10:30:35] <mikesherov> well, I had a long email thread with filamentgroup
[10:30:57] <mikesherov> they use graded support, and the idea was that they try their best to support it
[10:31:15] <mikesherov> so I respect that
[10:31:28] <DaveMethvin> well the other thing we could do is have them shim it on the Mobile side
[10:31:35] <mikesherov> It's not the call I would make, but I can see the reasoning
[10:31:42] <DaveMethvin> but if it's not a lot of code to use webkitpoint we can just do that
[10:32:04] <mikesherov> right, I left in webkitPoint
[10:32:19] <mikesherov> I wanted to make sure that even that worked
[10:32:52] <DaveMethvin> If Mobile didn't intend to run on all desktop browsers they could just include a subset that worked for mobile ones
[10:32:54] <DaveMethvin> that would save space
[10:33:02] <DaveMethvin> once we refactor in 1.8 and later
[10:33:16] <DaveMethvin> but since they work in ie8 etc, it doesn't really save them anything
[10:34:34] <mikesherov> Yeah, I'm trying to coordinate that
[10:35:15] <mikesherov> I sent them the patch that had getBounding with WebkitPoint fallback, and the idea that they should test and shim on their side if necessary.
[10:35:48] <mikesherov> That's all I can do really
[10:36:11] <mikesherov> I don't have all the phone they do tests on, otherwise I'd test my patch myself
[10:37:49] <mikesherov> oy, wife left the wallet at home, and can't pay for food. I gotta run. Be back in a bit.
[10:52:49] <scott_gonzalez> Both of my kids have an original iPhone :-P
[10:53:04] <scott_gonzalez> Of course being 2 and 3 years old, they don't use any web sites :-P
[10:53:57] <scott_gonzalez> But you better believe that some random day in the future, I'll decide to write a game for them and then file a ticket when the positioning doesn't work on their phones :-)
[10:55:30] <ajpiano> "jQuery doesn't work on my Commodore 64. I understand that it does not have internet access, but I thought the point of jQuery was to get rid of these cross-platform differences. Please fix."
[10:57:29] <scott_gonzalez> Well, I don't have one of those anymore, but maybe now that Mark Pilgrim has fallen off the face of the Earth, I can go to his house and pick up his.
[10:59:06] <scott_gonzalez> Does he still work for Google? paul_irish?
[11:08:16] <paul_irish> he works for google
[11:08:21] <paul_irish> but fell off the earth
[11:08:25] <paul_irish> for all intents and purposes
[11:08:34] <ajpiano> for all internets and purposes
[11:17:01] <ajpiano> withanx: as would using the "stop" even for something you want to happen when sliding stops :)
[11:17:03] <ajpiano> whoops
[11:17:55] <gnarf> ?down bugs.jquery.com
[11:17:58] <bot-t> gnarf, It's just you. - http://bugs.jquery.com is up.
[11:18:29] <FJ1> down, from switzerland
[11:18:58] <FJ1> back again.
[11:24:05] <FJ1> http://i41.tinypic.com/2wmfgv9.png
[11:40:11] <mikesherov> .
[11:41:40] <mikesherov> fixing IE6 bugs is so weird to me
[11:41:48] <mikesherov> I feel like I'm in a time machine
[11:46:02] <David_Souther> Hey kids! Today we get to debug javascript with Alerts!
[11:46:13] <mikesherov> LOL
[11:48:26] <gnarf> hrm DaveMethvin
[11:48:28] <gnarf> you here?
[11:48:55] <gnarf> any thoughts on why mouseleave events don't fire on disabled <input>s?
[11:49:04] <gnarf> http://jsfiddle.net/pm4JG/4/
[11:50:36] <David_Souther> mikesherov: http://memegenerator.net/instance/15095403 (because I have so much time at work)
[11:50:54] <mikesherov> LOL
[11:51:31] <mikesherov> gnarf: that's fun
[11:52:06] <gnarf> mikesherov: any thoughts? :)
[11:52:19] <David_Souther> I don't see the mouseover tooltip at all on the disabled inputs...
[11:52:21] <mikesherov> well, first thought is that it's not new
[11:52:34] <David_Souther> (FF3.6/Fedora 15)
[11:52:39] <mikesherov> it's happening in 1.5.2 on Chrome
[11:52:39] <gnarf> chrome lets me see the mouseover
[11:52:48] <gnarf> mikesherov: yeah - it goes back
[11:53:17] <gnarf> i think it has something to do with disabled in general
[11:53:23] <gnarf> but this is strange strange behavior
[11:56:17] <mikesherov> yeah, looking now
[11:57:52] <mikesherov> looks like this is a known thing?
[11:58:08] <mikesherov> mouseleave events don't happen for disabled inputs?
[11:58:12] <gnarf> this is a pretty sickening problem in the DOM
[11:58:25] <gnarf> mikesherov: apparently in some browsers neither does mouseenter
[11:58:36] <mikesherov> weir
[11:58:38] <mikesherov> weird
[11:59:13] <DaveMethvin> sometimes we are faking our own mouseenter from mouseover,other times the browser provides one
[11:59:32] <FJ1> on osx chrome: mouseenter and mouseleave are not working on disabled inputs
[11:59:55] <DaveMethvin> there is a lot of strangeness regarding disabled inputs
[12:00:28] <DaveMethvin> for example in oldIE a direct bind on the element for a click won't focus, but a delegated one will
[12:00:36] <DaveMethvin> sorry, s/focus/fire/
[12:00:50] <DaveMethvin> so this is just one more strange case
[12:01:15] <gnarf> DaveMethvin: yeah http://jsfiddle.net/pm4JG/5/
[12:01:40] <gnarf> i just added a "delegated" mouseover mouseout
[12:01:52] <gnarf> those fire
[12:01:57] <gnarf> but mouseenter/mouseleave don't
[12:03:46] <gnarf> that is some seriously weirdness
[12:04:07] <gnarf> why would you stop the mouse events but still bubble them?
[12:04:36] <DaveMethvin> i think it may be a bug in the special mouseenter/leave handler
[12:05:12] <DaveMethvin> // For mousenter/leave call the handler if related is outside the target.
[12:05:12] <DaveMethvin> // NB: No relatedTarget if the mouse left/entered the browser window
[12:05:12] <DaveMethvin> if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
[12:05:40] <mikesherov> events make my head hurt
[12:06:18] <gnarf> DaveMethvin: I'm thinking it might be a bug in the browser....
[12:06:29] <DaveMethvin> i'll have to look at it later, got some stuff i have to do but it seems worth a ticket in any case
[12:06:37] <gnarf> since other people in google search seem to complain their mouseenter/leave don't work
[12:06:47] <gnarf> http://jsfiddle.net/pm4JG/6/
[12:06:53] <DaveMethvin> the browsers are starting to do their own mouseenter/leave impls
[12:06:59] <DaveMethvin> another thing that IE did first! :P
[12:07:10] <DaveMethvin> so our shim doesn't run as often as it used to
[12:07:51] <gnarf> DaveMethvin: so mouseover doesn't fire on <input disabled> but you can catch the mouseover bubbling
[12:08:06] <gnarf> or rather, it apparently doesn't trigger handlers on disabled <input>s
[12:09:20] <DaveMethvin> yeah but there is a test for the target being disabled in jQuery.event.dispatch gnarf
[12:09:44] <DaveMethvin> that was to fix the problem of ie passing clicks up even though the element was disabled
[12:10:06] <DaveMethvin> and now you want mouseover/enter to happen if its disabled ... kinda the opposite :D
[12:10:55] <DaveMethvin> maybe we can let people pass in an array of events that should be allowed from disabled elements :P
[12:10:59] <gnarf> i dunno - if you want to put a tooltip on a field - the fact that its disabled shouldn't make much of a difference right?
[12:11:55] <DaveMethvin> sure i see your point, it's just that whoever filed the bug mentioned in .dispatch thought clicks shouldn't fire
[12:12:25] <DaveMethvin> i'm not even sure i agree but it was done to make it consistent cross browser
[12:13:05] <DaveMethvin> to me the fact that a browser doesn't fire mouseenter on a disabled input does seem like a bug
[12:13:21] <DaveMethvin> you migth want a tip that says why the input is disabled!
[12:24:24] <gnarf> DaveMethvin: can I leave this issue in your hands, i already found my "workaround" which was putting the tooltip on a containing element
[12:24:35] <DaveMethvin> cheater!
[12:24:41] <gnarf> i wrapped my <span title=""><input></span>
[12:25:10] <gnarf> but its dirty
[12:25:17] <gnarf> and this just seems like something we can't fix anyway
[12:25:31] <gnarf> although i hope its our fault, and not the browser ;)
[12:26:10] <DaveMethvin> gnarf, imma create a ticket anyway
[12:29:10] <kanzie> Hey guys, sorry if I repeat myself on this but last time I posted I got logged off
[12:29:18] <kanzie> I think I have found a problem with jQuery ajax() >1.4.4. I have isolated the problem to a fiddle here http://jsfiddle.net/TjPjF/
[12:29:24] <kanzie> If you run that fiddle with 1.7.1 using Webkit and track memory usage you will see that the test loads 3MB of XML, but it has Chrome consume and retain about 60MB which is not released by the garbage collector (running at 4min intervals).
[12:29:30] <kanzie> If you instead switch to jQuery 1.4.4, the memory is not consumed at all.
[12:30:29] <kanzie> What should I do?
[12:33:52] <danheberden> kanzie have you already a) created a bug or b) seen if a bug is already reported ?
[12:36:34] <danheberden> also, i'd make a test use setTimeout instead of accessing a scoped interval var
[12:36:54] <danheberden> just to make sure there's nothing for the function to hook onto/get stuck on
[12:43:34] <gnarf> DaveMethvin: thanks
[12:44:18] <DaveMethvin> kanzie: I saw the test case and it's pretty convoluted. Can you simplify it?
[12:48:57] <kanzie> DaveMethvin: ok, hmm.. Ill see what I can do. I think its pretty clear though? Do you know if pre-1.5 is using $.parseXML()
[12:50:40] <DaveMethvin> kanzie: we introd parseXML in 1.5 I think
[12:51:10] <DaveMethvin> what woudl be really helpful would be two test cases with minimal differences, one leaky and one not
[12:51:18] <kanzie> DaveMethvin: ok
[12:54:03] <mikesherov> DaveMethvin: https://github.com/jquery/jquery/pull/693
[12:54:04] <socialhapy> â˜… Pull request on jquery by mikesherov (50.646s ago): fixes #10693, generalizes the "test something in an iframe" code
[12:54:23] <mikesherov> So, I really want this merged before I finish that stupid IE6 bug
[12:55:06] <mikesherov> I found myself writing the "test something in an iframe" code a third time, and decided to stop the madness... besides, I already had an open ticket for it: http://bugs.jquery.com/ticket/10693
[12:58:43] <kanzie> DaveMethvin: I don't know how to make a test-case more clear though. If you drop down and select jQuery 1.5 the code eats up 60MB of your memory. If you instead select 1.4.4 it does not! Same code, doing one single jQuery-call...
[12:59:22] <DaveMethvin> well then, the only difference is the diff between 1.4.4 and 1.5, we'll get right on it :D
[12:59:50] <DaveMethvin> can you permute your test case to make it not leak?
[12:59:53] <kanzie> haha,
[12:59:57] <DaveMethvin> see what I'm gettting at?
[13:00:26] <kanzie> since there is only one call and it is ajaxâ€¦ the difference is in handling. I believe that a plain XHR would not leak, which leaves us with parseXML being a suspect.
[13:00:45] <mikesherov> kanzie: dave is saying to prove that.
[13:00:55] <kanzie> DaveMethvin: I can not. It leaks no matter what I doâ€¦ Ive been profiling, heap-checking and testing for 1.5 week now
[13:01:56] <kanzie> mikesherov: I thought that my fiddle did provide enough evidence to make anyone interested in it. Its  a few lines of code and it is a pretty massive leak if this is the case.
[13:01:56] <mikesherov> have the fiddle do several things on the same script: 1. load 1.4.4 and do normal XHR. 2. load 1.4.4 and do XML 3. load 1.5 do normal XHR 4. load 1.5 and do XML
[13:02:07] <mikesherov> show that only 4. leaks in that case
[13:02:24] <kanzie> ok
[13:02:27] <kanzie> makes sense
[13:02:45] <kanzie> so I just tested 1.4 and it had no leak, 1.5 had a 90MB leak
[13:02:49] <kanzie> so thats done
[13:03:00] <mikesherov> only reason I say that, is the easier it is for us to repro, and make unit tests out of the fiddle, the more likely it is that it'll be fixed
[13:03:03] <kanzie> now Ill write my on XHRâ€¦ any good snippet I can borrow from you?
[13:03:31] <mikesherov> not really :-\
[13:03:40] <mikesherov> I always use jQuery ;-P
[13:03:53] <kanzie> the jQuery-code for ajax() is to convoluted to use
[13:04:04] <mikesherov> right
[13:04:16] <mikesherov> I'm not saying right your own XHR
[13:04:30] <mikesherov> I'm saying show that $.ajax is fine in 1.5, unless you do parseXML
[13:04:35] <kanzie> not saying its badâ€¦just that it is kind of tricky to lift it out and might not prove anything since that is partly what we are testing
[13:04:41] <mikesherov> write*
[13:05:18] <kanzie> mikesherov: I tried overriding $.parseXML with a $.parseXML  = function() {} but Im not sure it worked
[13:05:46] <kanzie> not sure how I can replace the jQuery version of it
[13:05:50] <kanzie> in fiddle
[13:06:17] <mikesherov> one sec, looking....
[13:07:35] <mikesherov> you should be able to write jQuery.fn.parseXML = function(){}; write into the JS section of JSFiddle
[13:07:47] <mikesherov> right* into
[13:09:09] <DaveMethvin> thanks guys, i'm up against a 5pm deadline on something else
[13:10:28] <mikesherov> go to it, Dave. I'll work with kanzie. Wouldn't want you to miss a deadline
[13:10:47] <kanzie> the swooshing sound is awesome as they go by :-)
[13:11:08] <mikesherov> Kanzie: once you have the reduced fiddle, please submit a bug at http://bugs.jquery.com
[13:11:52] <kanzie> mikesherov: ill see how far I can get at reducing it down to acceptable level. Seems the parseXML-trick did nothing
[13:11:59] <kanzie> :-(
[13:12:41] <mikesherov> well, you can always do: jQuery.fn.parseXML = function(){console.log('here'}; to make sure it's even being fired
[13:13:15] <kanzie> mikesherov: yepâ€¦
[13:18:38] <danzik171> kanzie: fwiw, i tinkered with that last night.  and just now.  when my browser stops crashing, i'll link you the fiddle.  i accidentally 2gb memory tab.
[13:19:18] <kanzie> danzik171: awesome, yeah its a rough one this
[13:22:11] <mikesherov> thanks guys
[13:26:58] <kanzie> hmm, I noticed a tmp-var not being cleared in $.parseXMLâ€¦ testing it now. Could be that simple
[13:30:45] <danzik171> kanzie: nah, it's not.  this leaks too - no jQuery period - http://jsfiddle.net/ffn8f/4/
[13:31:22] <kanzie> danzik171: yep, it seemed better for a bit, but no...
[13:31:34] <kanzie> hmm, so it seems to be DOMParser()
[13:31:36] <kanzie> ?
[13:32:18] <mikesherov> well well well
[13:33:25] <kanzie> man, its starting at 191MB for meâ€¦how big is that DOMParser object anyway
[13:34:15] <kanzie> for me it climbed to 317MB then stayed there throughout the execution
[13:34:18] <kanzie> man I have to sleep
[13:34:20] <danzik171> kanzie: eh, i have it running 10k times.  i had it doing more, but uh....chrome doesn't like tabs at 2GB memory.
[13:34:22] <kanzie> this is driving me nuts
[14:18:12] <mikesherov> well, lo and behld, 3838 effects IE8 too!
[14:18:17] <mikesherov> docs?3838
[14:18:34] <mikesherov> ?docs3838
[14:18:36] <bot-t> mikesherov, Couldn't find "docs3838" in jQuery Docs.
[14:18:56] <mikesherov> http://jqbug.com3838
[14:19:42] <mikesherov> ugh
[14:19:50] <mikesherov> http://jqbug.com/3838
[14:20:57] <johnbender> DaveMethvin: thanks for your property access breakpoint hack
[14:21:02] <johnbender> paul_irish: ^
[14:21:15] <johnbender> I don't mean hack in a bad way
[14:21:20] <johnbender> it's awesome
[14:21:42] <paul_irish> johnbender: works for you?
[14:21:43] <johnbender> we were talking about gdb's hardware breakpoints on memory today at my "office" and I was thinking that would make a bangup feature in js
[14:21:48] <johnbender> paul_irish: it should
[14:21:48] <paul_irish> i havent tried it forreal
[14:21:50] <paul_irish> k
[14:21:53] <johnbender> I haven't had occasion to use it yet
[14:22:06] <paul_irish> yeah hypothet it should be backed into devtools
[14:22:21] <johnbender> paul_irish: either way its "amazeballs" as the kids say
[14:22:37] <johnbender> I need to start reading up on the newer ecma features asap
[14:25:04] <paul_irish> omg and thats even es5!
[14:25:10] <paul_irish> didnt even get into es6 stuff
[14:25:11] <paul_irish> :)
[14:25:14] <paul_irish> but ya
[14:25:26] <johnbender> hmm
[14:33:18] <ch3mical> What does jQuery._mark do?
[14:41:32] <kanzie> if http://jsfiddle.net/ffn8f/4/ fiddle confirms the memory-leak in DOMParser, since parseXML seems to rely on the parseFromString() method and this could be broken, what should I do instead. Treat the XML as a standard string and use regexp?
[14:58:21] <ch3mical> Ugh, don't parse UML with RegExp
[14:58:32] <ch3mical> You want to talk about wasted memory... lol
[14:59:18] <ch3mical> RegExp is not a parser, it's a pattern matching language
[14:59:57] <paul_irish> XML? /me cries
[15:01:03] <ch3mical> So I've noticed that promises on animations always result in "done" even when queue:false is set in the animation and another animation overrides
[15:01:13] <ch3mical> This seems counter intuitive
[15:01:38] <ch3mical> Shouldn't we get a reject like behavior on animations that are "cancelled" in this way?
[15:02:09] <ch3mical> Such that your "done" callback only fires if the animation actually took place?
[15:04:47] <ch3mical> The alternative is to manually create deferreds to get this behavior :/
[19:42:39] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/M-_R1A
[19:42:39] <jqcommit> [jquery/master] Fix #11370: .siblings() shouldn't throw exception on a detached element - Richard Gibson
[19:44:39] <jq-jenkins> Project jQuery build #261: STILL FAILING in 1 min 49 sec: http://swarm.jquery.org:8080/job/jQuery/261/
[19:44:39] <jq-jenkins> dave.methvin: Fix #11370: .siblings() shouldn't throw exception on a detached element
[19:57:42] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/6MYmEg
[19:57:42] <jqcommit> [jquery/master] fixes #10693, generalizes the "test something in an iframe" code when a callback isn't needed - Mike Sherov
[19:59:41] <jq-jenkins> Project jQuery build #262: STILL FAILING in 1 min 48 sec: http://swarm.jquery.org:8080/job/jQuery/262/
[19:59:41] <jq-jenkins> dave.methvin: fixes #10693, generalizes the "test something in an iframe" code when a callback isn't needed
[20:10:01] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/Vprkpw
[20:10:01] <jqcommit> [jquery/master] Fix #11359: preserve contents for cloned scripts - Richard Gibson
[20:11:09] <jq-jenkins> Project jQuery build #263: STILL FAILING in 1 min 0 sec: http://swarm.jquery.org:8080/job/jQuery/263/
[20:11:10] <jq-jenkins> dave.methvin: Fix #11359: preserve contents for cloned scripts
[20:22:41] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/PtgOew
[20:22:41] <jqcommit> [jquery/master] Firefox stalls without longer delays. - Dave Methvin
[20:23:50] <jq-jenkins> Project jQuery build #264: STILL FAILING in 1 min 1 sec: http://swarm.jquery.org:8080/job/jQuery/264/
[20:23:51] <jq-jenkins> dave.methvin: Firefox stalls without longer delays.
[20:40:20] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/Qnmi2g
[20:40:20] <jqcommit> [jquery/master] Fix #11337. Properly calculate $.support.reliableMarginRight. - Vladislav Zarakovsky
[20:42:08] <jq-jenkins> Project jQuery build #265: STILL FAILING in 1 min 41 sec: http://swarm.jquery.org:8080/job/jQuery/265/
[20:42:09] <jq-jenkins> dave.methvin: Fix #11337. Properly calculate $.support.reliableMarginRight.
[21:17:22] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/aP12_w
[21:17:22] <jqcommit> [jquery/master] Fix #7986. $.support.boxModel shan't be fooled by page-level CSS. - Mike Sherov
[21:19:02] <jq-jenkins> Project jQuery build #266: STILL FAILING in 1 min 29 sec: http://swarm.jquery.org:8080/job/jQuery/266/
[21:19:02] <jq-jenkins> dave.methvin: Fix #7986. $.support.boxModel shan't be fooled by page-level CSS.
[21:19:17] <DaveMethvin> oh jenky, you are so predictable
[21:19:59] <DaveMethvin> ?tell DaveMethvin Figure out why swarmy Safari has gained two pixels
[21:19:59] <bot-t> DaveMethvin, Okay.
