[06:16:21] <FJ1> is this a jQuery or jQuery UI Problem? http://jsfiddle.net/DNtHn/ (drag an item an you get en js error (cur is null      -      } while ( cur.nodeType !== 1 ); )
[06:30:51] <DaveMethvin> FJ1: looks like a core bug to me since it works in 1.7.2; can you open a ticket with your test case? (and thanks for testing!)
[06:32:15] <FJ1> a don't have any access :-/
[06:39:08] <FJ1> can somebody else ad a ticket or show me where.
[06:55:25] <rwaldron> .
[06:55:26] <bot-t> (19 hours 30 mins ago) <gnarf> tell rwaldron thanks man! good work
[06:56:39] <rwaldron> DaveMethvin yt?
[07:03:02] <jqcommit> [jquery] rwldrn pushed 1 new commit to master: http://git.io/vNqaGQ
[07:03:02] <jqcommit> [jquery/master] Adds src/deprecated.js, test/unit/deprecated.js; -deprecated flag; Moves jQuery.browser and removes use in test/unit/ajax.js. Fixes #11965 - Rick Waldron
[07:09:56] <DaveMethvin> rwaldron: awesome stuff
[07:17:14] <rwaldron> :D
[07:17:25] <rwaldron> I'm moving the test globals out of grunt right now
[07:17:29] <rwaldron> per scott_gonzalez's suggestion
[07:17:44] <scott_gonzalez> :-)
[07:18:11] <scott_gonzalez> rwaldron: We actually use .jshintrc files in UI so that you get proper linting in editors.
[07:18:27] <scott_gonzalez> And we just pull in the .jshintrc settings into the grunt config.
[07:18:44] <rwaldron> I was looking at that
[07:18:55] <rwaldron> I think I'll do the same on this side
[07:19:05] <rwaldron> strike that.
[07:19:11] <rwaldron> I *will* do that on this side
[07:21:35] <DaveMethvin> i'm really surpised scott remembers how to use computers
[07:22:45] <scott_gonzalez> You mean after a week of no tech?
[07:24:06] <scott_gonzalez> I can't belive that UI 1.8.x will be supporting 18 versions of jQuery when jQuery 1.8 comes out.
[07:24:27] <DaveMethvin> how far back do you go scott_gonzalez?
[07:24:52] <scott_gonzalez> 1.3.2
[07:25:01] <scott_gonzalez> It's painful.
[07:25:07] <scott_gonzalez> 1.9 will only support 1.6+
[07:25:24] <scott_gonzalez> Which is still 9 versions...
[07:25:41] <DaveMethvin> and we won't be releasing 3 versions per year anymore :D
[07:26:34] <DaveMethvin> rwaldron: ok if i land gnarf's pull for animation progress?
[07:30:36] <rwaldron> DaveMethvin sure thing
[07:31:00] <rwaldron> I doubt it has anything conflicting with the jshint stuff
[07:34:16] <jq-jenkins> Project jQuery Core build #177: STILL FAILING in 26 min: http://swarm.jquery.org:8080/job/jQuery%20Core/177/
[07:34:17] <jq-jenkins> waldron.rick: Adds src/deprecated.js, test/unit/deprecated.js; -deprecated flag; Moves jQuery.browser and removes use in test/unit/ajax.js. Fixes #11965
[07:37:39] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/EME64g
[07:37:39] <jqcommit> [jquery/master] Completes #11799: Maybe .progress() was cooler than I thought. - Corey Frang
[07:39:06] <DaveMethvin> THE PULL REQUEST QUEUE IS EMPTY
[07:42:52] <DaveMethvin> dog walking time
[07:45:00] <rwaldron> scott_gonzalez I've basically just adapted your approach in UI
[07:45:04] <rwaldron> this is really nice now
[07:45:12] <rwaldron> thanks for the suggestion :)
[07:45:28] <scott_gonzalez> rwaldron: Cool. I'm pretty sure I worked with Ben to make it easier to use .jshintrc in 0.4 too :-)
[07:45:59] <rwaldron> Yeah, he was telling about some of the goodies you cooked up :)
[07:46:40] <scott_gonzalez> Found it: https://github.com/cowboy/grunt/issues/141
[07:46:41] <socialhapy> ★ Issue #141 on grunt (scottgonzalez; 2m, 5d ago): Lint task should hook into .jshintrc files
[07:51:36] <rwaldron> marvelous
[07:51:41] <rwaldron> I love this organization
[08:00:13] <jq-jenkins> Project jQuery Core build #178: STILL FAILING in 22 min: http://swarm.jquery.org:8080/job/jQuery%20Core/178/
[08:00:14] <jq-jenkins> dave.methvin: Completes #11799: Maybe .progress() was cooler than I thought.
[08:14:23] <scott_gonzalez> timmywil: Any idea how to reliable tell if an element is contenteditable?
[08:14:31] <scott_gonzalez> I'm having problems in Opera.
[08:14:54] <scott_gonzalez> $( "[contenteditable]" ) doen't match and .prop( "contenteditable" ) might be "inherit"
[08:15:10] <scott_gonzalez> Is the only solution to walk up the DOM for inherit?
[08:16:06] <timmywil> scott_gonzalez: is the contenteditable attribute present?
[08:16:16] <timmywil> on the element
[08:16:47] <scott_gonzalez> It is in the unit test, but it could just as easily be set via script by a user.
[08:17:40] <timmywil> gotcha, then maybe a filter function? .filter(function() { return this.contenteditable === true; })
[08:20:25] <timmywil> sry, camelCase
[08:21:14] <jq-jenkins> Project jQuery Core build #179: STILL FAILING in 20 min: http://swarm.jquery.org:8080/job/jQuery%20Core/179/
[08:21:14] <jq-jenkins> waldron.rick: Adds .jshintrc files for: grunt (default set), src, tests; Adapts jQuery-UI loading method
[08:21:31] <timmywil> scott_gonzalez: also "true", not true
[08:22:32] <timmywil> scott_gonzalez: http://jsfiddle.net/timmywil/pw6Y7/
[08:25:07] <scott_gonzalez> timmywil: But if #outer is editable, and I'm checking #inner, I'd want to evaluate to true http://jsfiddle.net/pw6Y7/1/
[08:25:28] <scott_gonzalez> The question is "can this element's content be edited?"
[08:25:51] <scott_gonzalez> The answer is yes if the value is inherit and the closest non-inherit ancestor is true.
[08:26:17] <DaveMethvin> ugh, sounds like a treewalk to me
[08:26:27] <timmywil> oof, yea
[08:26:39] <scott_gonzalez> Stupid Opera.
[08:27:01] <scott_gonzalez> Ok, I'm going to expand my .is( "textarea,[contenteditable]" ) to be a filter with walking :-/
[08:27:17] <DaveMethvin> oh joy
[08:29:57] <timmywil> scott_gonzalez: http://jsfiddle.net/timmywil/pw6Y7/2/ :P
[08:30:34] <timmywil> ha, that won't work, needs to check inherit
[08:30:38] <timmywil> nvm, you know what to do
[08:30:53] <scott_gonzalez> heh
[08:32:12] <timmywil> scott_gonzalez: oh wait, duh, what about .isContentEditable?
[08:32:52] <timmywil> http://jsfiddle.net/timmywil/pw6Y7/3/
[08:32:52] <scott_gonzalez> WAT?!?
[08:33:14] <scott_gonzalez> Has that been around forever?
[08:34:10] <DaveMethvin> haha
[08:34:53] <timmywil> sry for the brain fart. yea, I think it's been around a while.
[08:36:02] <DaveMethvin> FF4 https://developer.mozilla.org/en/DOM/element.isContentEditable
[08:36:03] <scott_gonzalez> Just tested IE6 and it worked.
[08:36:05] <scott_gonzalez> Thanks.
[08:36:17] <timmywil> cool, np
[08:36:17] <DaveMethvin> safari 5
[08:36:27] <DaveMethvin> ie invented it
[08:36:30] <DaveMethvin> hmmm
[08:36:40] <timmywil> but it's now part of html5 spec
[08:36:43] <DaveMethvin> right
[08:36:52] <DaveMethvin> well that makes the solution a bit easier :D
[08:42:55] <DaveMethvin> oh, i wondered who ANASLEX was, didn't realize gf3 had dylsexia :)
[08:46:01] <gf3> DaveMethvin: :D
[08:46:28] <gf3> DaveMethvin: I was hoping people would mistake me for Alex Sexton
[08:46:47] <gf3> DaveMethvin: But I mostly just received offensive messages—WEIRD
[08:46:55] <DaveMethvin> whoda thought?
[08:47:12] <DaveMethvin> maybe you look like  him -- (puts on sunglasses) -- from the rear
[08:47:44] <gf3> DaveMethvin: Ahahahaha
[08:47:54] <gf3> (inc @DaveMethvin)
[08:57:00] <gibson042> .
[09:01:24] <DaveMethvin> meeting time timmywil rwaldron gnarf gibson042 and any other interested parties
[09:45:09] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/0H8_Nw
[09:45:09] <sizcommit> [sizzle/master] Temporarily remove directory caching in dirCheck. Fixes jQuery bug #11966. - timmywil
[09:47:05] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/IOJIuQ
[09:47:05] <jqcommit> [jquery/master] Update Sizzle: Removes directory caching in dirCheck. Fixes #11966. - timmywil
[09:49:08] <johnbender> DaveMethvin: I think we use that $( html, props ) but I'm all for simplifying the constructor function
[09:49:21] <johnbender> DaveMethvin: spotted that in the meeting channel by chance
[09:49:29] <johnbender> not very often though
[09:50:00] <DaveMethvin> it doesn't really add a lot of expressiveness but makes us do a lot more guessing
[09:51:01] <timmywil> johnbender: what do you think of `$(html, { prop: { contentEditable: "true" }, attr: { tabindex: "0" } });`
[09:51:51] <DaveMethvin> imo that just moves around some commas and parens without adding any abstraction
[09:52:16] <timmywil> heh, yea. $(html).prop(…).attr(...)
[09:52:20] <johnbender> timmywil: I always though that the jQuery function just did too much
[09:52:24] <johnbender> I'm with DaveMethvin
[09:52:46] <timmywil> yea, now that I look at it, it doesn't add much
[09:53:12] <johnbender> I've often times wished for a $.select() where it skipped the all the type checks
[09:53:20] * johnbender assumes that something like that exists
[09:53:29] <DaveMethvin> $(string) which can be a selector or some html ... definitely can be ambiguous which is why we did $.parseHTML
[09:53:39] <DaveMethvin> but there is no $.select ... at least yet
[09:53:47] <johnbender> DaveMethvin: ah! but the parseHtml is nice
[09:53:51] <johnbender> so that skips the checks then
[09:53:54] * johnbender makes a note
[09:53:55] <timmywil> eh, at this point it's just one regex check
[09:53:56] <DaveMethvin> i think it would be good for $() to select xcept for very specific cases
[09:54:22] <johnbender> timmywil: orly? hmm I guess I had it in my head that it was more complex than that because you can wrap a dom element
[09:55:14] <DaveMethvin> $() is an excellent duck classifier
[09:55:56] <gibson042> DaveMethvin aren't we getting there in 1.9? $(string) selects except when string matches /^\s*</
[09:56:01] <timmywil> johnbender: ah true, it also checks selector.nodeType and typeof === "string"
[09:56:18] <DaveMethvin> gibson042: yeah i think we're crawling there slowly
[09:56:29] <gibson042> it really was too soon this time around
[09:56:34] <DaveMethvin> yep
[09:57:48] <johnbender> DaveMethvin: great!
[09:57:56] <johnbender> timmywil: still minor
[09:58:05] <timmywil> yea
[09:58:31] <johnbender> timmywil: does it do anything complex when a context is passed?
[09:59:31] <DaveMethvin> that's another funny one, because i think $(selector, context) is always the same as $(context).find(selector)
[09:59:42] <DaveMethvin> except when context is really props :D
[09:59:47] <timmywil> johnbender: if selector is a string, it adds a call to the stack
[10:00:10] <timmywil> cause it translates it to jQuery( context ).find( selector )
[10:00:47] <timmywil> s/selector is a string/context is a string
[10:01:24] <DaveMethvin> Oh $(), is there *nothing* you can't do?
[10:03:12] <timmywil> context can be an element too, but yea
[10:07:08] <jq-jenkins> Project jQuery Core build #180: STILL FAILING in 19 min: http://swarm.jquery.org:8080/job/jQuery%20Core/180/
[10:07:08] <jq-jenkins> timmywillisn: Update Sizzle: Removes directory caching in dirCheck. Fixes #11966.
[10:10:45] <gnarf> hey dave
[10:11:01] <gnarf> DaveMethvin: other than the effects tix was there something?
[10:11:12] <gnarf> also, have you looked at part two of that ticket 11797 ?
[10:15:14] <DaveMethvin> gnarf: just the effects stuff still open in the 1.8 list
[10:15:26] <DaveMethvin> like the "tick throttling" one
[10:15:38] <DaveMethvin> i have to reboot, back soon
[12:03:11] <gnarf> oh hey - DaveMethvin - that 1.9-compat repo was private
[12:03:19] <gnarf> I made it public since you linked to it in the blog post
[12:03:24] <gnarf> i figured that was your intention
[12:03:30] <DaveMethvin> yep, thanks
[16:10:44] <gnarf> http://jsbin.com/odocid/edit -- check that out
[16:10:47] <gnarf> its kinda nice
[16:10:48] <gnarf> right?
[16:28:13] <rwaldron> DaveMethvin "Can you point to the documentation for the .selector property?" pffft
[16:32:24] <timmywil> ?osnap
[16:32:25] <bot-t> timmywil, Couldn't find "osnap" in jQuery Docs.
[16:32:58] <rwaldron> timmywil ^^^ hahahahaha
[16:33:23] <timmywil> :D
[16:33:28] <rwaldron> seems eerily appropriate
[16:33:58] <timmywil> haha yes, I'm going to pretend that was on purpose
[16:37:16] <DaveMethvin> timmywil rwaldron hey you never know, i didn't THINK it was documented
[16:39:37] <Krinkle> I hate it when I'm typing my password and I uninentionally type like `async.parallel` instead of `async.series` :D
[16:39:58] <Krinkle> "dude, them keys need to be in the right order"
[16:41:32] <rwaldron> I'm confused
[16:41:38] <ryanneufeld> Krinkle: I do that all the time
[16:41:44] <rwaldron> your password is "async.parallel"?
[16:42:03] <ryanneufeld> rwaldron: his right and left hand are typing the password out of sync
[16:42:10] <Krinkle> ^ what he said
[16:42:12] <ryanneufeld> in parallel vs serial
[16:42:18] <rwaldron> ooooohhh got ya
[16:42:21] <ryanneufeld> my right hand is much faster than my left
[16:42:31] <ryanneufeld> I do that all the time
[16:42:32] <Krinkle> Where can I file a bug :P
[16:42:40] <rwaldron> Dear Mom
[16:42:45] <ryanneufeld> bugs.jquery.com I think
[16:42:47] <rwaldron> Please fix bugs in dna
[16:42:50] <Krinkle> lol
[16:42:56] <ryanneufeld> DOH
[16:43:00] <ryanneufeld> I missed the second joke
[16:43:01] <ryanneufeld> fml
[16:43:04] <ryanneufeld> lol
[16:43:25] <ryanneufeld> who's stoked for jq conf?
[16:43:26] <Krinkle> (npm https://github.com/caolan/async)
[16:43:37] <rwaldron> Me?/
[16:43:46] <ryanneufeld> Yes you
[16:43:46] <rwaldron> I'm dreading it
[16:43:48] <ryanneufeld> why?
[16:43:59] <rwaldron> i have to fly directly from SF to Portland for another conf
[16:44:13] <ryanneufeld> ah
[16:44:16] <rwaldron> with robot parts
[16:44:24] <Krinkle> ((typeof module !== 'undefined' && module.exports) || this.myModule) = obj;
[16:44:24] <ryanneufeld> I'm flying from SF to vancouver friday night
[16:44:26] <rwaldron> can't wait to see how that shakes out.
[16:44:29] <Krinkle> Grr. ReferenceError: Invalid left-hand side in assignment
[16:44:30] <ryanneufeld> robot parts?
[16:44:33] <Krinkle> I which that worked
[16:44:57] <ryanneufeld> rwaldron: you're into robotics?
[16:45:11] <Krinkle> The Human 2.0 project?
[16:45:13] <ryanneufeld> you might want to go early, and ask for a hand inspection
[16:45:17] <rwaldron> ryanneufeld only hobby-ish
[16:45:24] <rwaldron> https://github.com/rwldrn/johnny-five
[16:45:28] <ryanneufeld> I started playing w/ arduino not to long ago
[16:45:45] <rwaldron> check out johnny-five
[16:45:46] <rwaldron> it
[16:45:51] <rwaldron> it's all arduino stuff
[16:45:55] <ryanneufeld> I see that
[16:45:58] <rwaldron> but purely JS
[16:46:07] <rwaldron> no C++, Processing... yadda
[16:46:13] <ryanneufeld> nice
[16:46:19] <ryanneufeld> any sheilds required?
[16:46:26] <ryanneufeld> I've got the ethernet one
[16:46:36] <ryanneufeld> proto, and an LCD sheild
[16:46:42] <rwaldron> yeah, needs an uno at very least
[16:46:46] <rwaldron> no lcd support yet
[16:46:59] <rwaldron> but only because I'm using the firmata protocol
[16:47:09] <ryanneufeld> I have the uni
[16:47:11] <ryanneufeld> *uno
[16:47:14] <rwaldron> i'll have some of this with me in SF
[16:47:28] <ryanneufeld> I should bring mine maybe... we could nerd out
[16:47:28] <rwaldron> so if there's an opportunity, i can show you
[16:47:35] <rwaldron> do it
[16:47:40] <ryanneufeld> consider it done
[16:47:46] <rwaldron> sweet
[16:47:50] <rwaldron> breakout
[16:47:53] <ryanneufeld> I'll be there about 1/2 day early
[16:48:08] <rwaldron> I'll be there on wednesday afternoon ish as well
[16:48:11] <ryanneufeld> land at sfo at noon
[16:49:10] <rwaldron> yikes
[16:49:14] <rwaldron> i get in at 7:30
[16:49:18] <ryanneufeld> yeah, Hotel Abri - Union Square
[16:49:21] <rwaldron> not quite the afternoon i guess
[16:49:31] <rwaldron> i have no idea where Im staying
[16:49:33] <ryanneufeld> lol
[16:49:48] <rwaldron> only because I havent looked at the email
[16:49:59] <ryanneufeld> haha, yeah, I figured today was good time to check
[16:50:05] * gf3 kisses rwaldron on the mouth
[16:50:08] <ryanneufeld> I thought I was flying out wed eventing
[16:50:27] <ryanneufeld> glad I checked
[16:50:31] <rwaldron> gf3 oh hai
[16:50:52] <gf3> rwaldron: Saw some horrible code today, thought of you
[16:51:02] <gf3> rwaldron (Your reactions, that is)
[16:51:13] <rwaldron> gf3 word
[16:51:15] <rwaldron> show me.
[16:51:39] <gf3> rwaldron: It's hilariously awesome, sec'
[16:51:49] <gf3> https://github.com/gomfunkel/node-exif#usage
[16:51:52] <gf3> BOOM
[16:52:12] <gf3> Error obj in callback AND try/catch
[16:52:26] <gf3> Constructor function AND async callback with data
[16:52:48] <gf3> The actual code in the module is equally bad
[16:54:03] * ryanneufeld is wondering 'wtf did I just read'
[16:54:15] <gf3> Indeed
[16:54:37] <gf3> rwaldron ↑
[16:54:48] <rwaldron> loooooking
[16:55:03] <rwaldron> Holy fucking shit.
[16:55:20] <gf3> rwaldron: I
[16:55:25] <rwaldron> this is mental
[16:55:31] <rwaldron> no tests
[16:55:34] <rwaldron> so who cares
[16:55:53] <gf3> rwaldron: I'm surprised they didn't just wrap it all in a `with () {…}` for good measure
[16:55:59] <rwaldron> hhahahaha
[16:56:04] <rwaldron> how does this work if there are no tests?
[16:56:28] <gf3> Not a goddamn clue
[16:57:12] <rwaldron> DON'T REPEAT YOURSELF
[16:57:13] <rwaldron> https://github.com/gomfunkel/node-exif/blob/master/lib/exif/Buffer.js
[16:57:45] <gf3> (inc @bugs)
[16:58:37] <rwaldron> Does Buffer use typed arrays at all?
[16:59:04] <rwaldron> dude
[16:59:05] <rwaldron> https://github.com/gomfunkel/node-exif/blob/master/lib/exif/ExifImage.js#L20
[16:59:39] <rwaldron> why are people so effing afraid of |this|
[17:00:19] <gf3> rwaldron: He doesn't even use `self` in there
[17:00:32] <ryanneufeld> gf3: he wanted it just in case
[17:00:32] <rwaldron> i know
[17:00:37] <rwaldron> for real
[17:00:43] <rwaldron> good old self
[17:00:46] <gf3> ?jic
[17:00:47] <bot-t> just in case™
[17:00:49] <gf3> :D
[17:00:54] <rwaldron> always there when you need it
[17:01:08] <ryanneufeld> only time I reference this like that, is when I know I'll need it in another scope
[17:01:19] <ryanneufeld> but even then, there are ways to not need that
[17:04:52] <rwaldron> ryanneufeld makes sense to me
[17:05:01] <rwaldron> ...unless you're programming for Node
[17:05:10] <rwaldron> bind(this)
[17:05:20] <rwaldron> FTW
[17:05:21] <ryanneufeld> I don't speak the node... yet
[17:05:51] <gf3> I just want to write Roy for all the things
[17:05:52] <rwaldron> Also, I think I'm going to start writing all of my programs in ES6 code and transpile with Traceur
[17:06:19] <gf3> rwaldron: In that case why not go a step further? ClojureScript, Roy, etc…
[17:06:26] <rwaldron> Um
[17:06:27] <rwaldron> no
[17:06:34] <rwaldron> those ARE nice
[17:07:20] <rwaldron> btw, Roy's logo is an Australian Kelpie
[17:07:22] <rwaldron> <33333333333333
[17:07:42] <gf3> Heh
[17:27:24] <Krinkle> New favorite shortcut of the day:
[17:27:25] <Krinkle> log = window.console && console.log && console.log.bind && console.log.bind(console) || function () {};
[17:27:50] <Krinkle> (not caring about browsers that don't support .bind and do console)
[19:16:15] <gf3> That's much prettier in coffee script
[23:18:21] <paul_irish> Krinkle: every browser since ie8 has console.log
[23:18:28] <paul_irish> so just make the assumption
[23:19:00] <paul_irish> also fwiw modernizr ships with a fn.bind polyfill
[23:19:08] <paul_irish> so EAT THAT safari
[23:19:36] <SlexAxton> but safari 2 doesn't have hasOwnProperty!
[23:20:52] <Krinkle> paul_irish: Well, that means 7.06% of Wikimedia traffic would throw up. That's 6.05% more than we're allowed to screw up :P
[23:21:13] <Krinkle> 7.06% is IE6+IE7 html page requests (not counting logged in users)
[23:22:08] <Krinkle> non-profit and for freedom of information has quite high demand on browser compatibility (Grade B or Grade C at least) - i.e. no syntax errors or visibly broken pages.
[23:22:58] <Krinkle> paul_irish: I hope next time greenpeace or such organization spread laptop-per-child in Africa they use Chromebooks auto-updating Chrome as browser :)
[23:23:06] <paul_irish> +
[23:23:11] <paul_irish> amen
[23:24:09] <Krinkle> I honestly don't know the origin of the traffic (could request it, but would need manual access from someone higher up) - but I imagine part of the old-browser traffic might come from such sources.
[23:24:12] <Krinkle> which is cool.
[23:26:07] <Krinkle> paul_irish: for example, a few years ago a member of the English Wikipedia wanted to put a christmas hat on their logo (the local community can update the logo themselves, without needing server-side access) - but the community votes against that proposal because of cultural reasons. In some cultures that symbol had a very different meaning.
[23:26:20] <Krinkle> Staying neutral turns out to be quite complicated from time to time.
[23:27:18] <Krinkle> Of course, there is a point (I guess) where one can go to far and may accept global "common sense". But still, global common sense with wide as traffic as Wikipedia turns out to be quite a challenge :P.
[23:27:52] <Krinkle> paul_irish: What're you up to these days?
[23:28:29] <Krinkle> ( btw, http://stats.wikimedia.org/wikimedia/squids/SquidReportClients.htm is the latest source - I was citing "Browser versions, non " )
[23:30:00] <Krinkle> I'm pleased to say though that Chrome > IE, and Chrome+Firefox > 50%
[23:30:33] <Krinkle> well, non-IE > 50% rather (Safari and Opera as well need their 5% to make it to 50%)
