[07:40:37] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/dxOwLA
[07:40:37] <sizcommit> [sizzle/master] No more need for Expr.match.POS; minor cleanup - Timmy Willison
[07:41:06] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/82oEGA
[07:41:06] <jqcommit> [jquery/master] Sizzle: remove unneeded vars and POS regex (-22 bytes) - Timmy Willison
[08:11:34] <doesallmagic> Project jQuery Core build #459: FAILURE in 14 min: http://swarm.jquery.org:8080/job/jQuery%20Core/459/
[08:11:35] <doesallmagic> timmywillisn: Sizzle: remove unneeded vars and POS regex (-22 bytes)
[08:12:11] <snover> not so unneeded after all
[08:13:58] <timmywil> heh
[08:14:13] <timmywil> looks like stupid ajax timeouts
[08:31:22] <gnarf> timmywil: requesting rerun
[08:32:52] <timmywil> gnarf: cool
[08:33:24] <timmywil> looks like it passed this time
[08:33:28] <gnarf> all green now
[11:13:22] <jqcommit> [jquery] rwldrn pushed 1 new commit to master: http://git.io/B-hkaQ
[11:13:22] <jqcommit> [jquery/master] Brute force property removal when removeData([a,b,c]). Fixes #12786 - Rick Waldron
[11:28:29] <doesallmagic> Yippie, build fixed!
[11:28:29] <doesallmagic> Project jQuery Core build #460: FIXED in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Core/460/
[11:28:30] <doesallmagic> waldron.rick: Brute force property removal when removeData([a,b,c]). Fixes #12786
[11:29:00] <rwaldron> I lvoe that
[11:29:02] <rwaldron> love*
[12:31:11] <jqcommit> [jquery] dmethvin pushed 2 new commits to 1.8-stable: http://git.io/juRfmg
[12:31:11] <jqcommit> [jquery/1.8-stable] Make compatible with latest JSHint. - Dave Methvin
[12:31:11] <jqcommit> [jquery/1.8-stable] Update build script. - Dave Methvin
[12:31:19] <DaveMethvin> timmywil rwaldron gibson042 gnarf jaubourg mikesherov ... getting ready for 1.8.3 release, last call
[12:31:46] <mikesherov> Awesome, is that the last one?
[12:31:53] <DaveMethvin> i sure hope so
[12:31:58] <mikesherov> great
[12:32:05] <DaveMethvin> it's kind of a pain to unit test if we add stuff atm
[12:32:21] <DaveMethvin> there isn't a testswarm set up for it, nor do i think we need one
[12:33:52] <Krinkle> DaveMethvin: it is tested by jenkins and not in testswarm?
[12:33:55] <Krinkle> how is that possible
[12:34:30] <Krinkle> oh that wasn't jenkins, that was jqcommit
[12:34:57] <DaveMethvin> Krinkle: yeah, that branch is new but it's from before last week
[12:35:37] <DaveMethvin> the only change i made today was to fix using a newer version of jshint and the build script itself
[12:36:15] <DaveMethvin> after this i expect the 1.8-stable branch can be put in a cool dry dark corner and left alone
[12:36:48] <Krinkle> I'll quickly run it in testswarm for you
[12:36:59] <timmywil> DaveMethvin: should we make the 1.8-stable branch after releasing 1.8.3?
[12:37:14] <timmywil> shouldn't*
[12:37:31] <DaveMethvin> timmywil: i had to make some changes before the release
[12:37:45] <DaveMethvin> so not sure how to do that without branching first
[12:38:00] <timmywil> i mean, locally right?
[12:38:01] <Krinkle> Copied jQuery core job in Jenkins, set branch from master to 1.8-stable; removed jquery-git.js exec and links to other jobs
[12:38:18] <Krinkle> http://swarm.jquery.org:8080/job/jQuery%20Core%20(branch%20%221.8-stable%22)/1/console
[12:38:39] <DaveMethvin> well i created the 1.8-stable branch, and then the 1.8.3 tag will be on that branch
[12:38:55] <DaveMethvin> wouldn't that be the way to go?
[12:39:06] <DaveMethvin> thanks Krinkle
[12:39:25] <timmywil> DaveMethvin: the 1.8.3 tag should be in master. it will carry over to other branches based off master
[12:39:39] <Krinkle> and in the future creating that tag will instantly push stuff to cdns and the other release tasks
[12:40:02] <Krinkle> :D
[12:40:24] <DaveMethvin> okay....so how do i make changes to master "in the middle" back 9 days??
[12:41:00] <DaveMethvin> or are you saying the *tag* should be in master and not on the 1.8-stable branch?
[12:41:01] <Krinkle> right, release branches often diverge from master a bit as development moves on to the next major release
[12:41:37] <DaveMethvin> this is the first time we've done this, so suggestions welcome
[12:42:01] <DaveMethvin> we as in jquery core, and me as in me :D
[12:43:18] <timmywil> DaveMethvin: what do we want to exclude from the last 9 days?
[12:43:29] <DaveMethvin> omg, everything
[12:43:52] <DaveMethvin> 1.8.3 is supposed to be a minor update
[12:44:04] <DaveMethvin> we hacked the hell out of everything last week :P
[12:44:33] <timmywil> ok, but what commit are you picking for release?
[12:44:36] <gnarf> DaveMethvin: the tag is whatever
[12:44:45] <gnarf> tag it on 1.8-stable
[12:44:57] <gnarf> UI release tags aren't even on branches
[12:45:22] <gnarf> the commit that changes the version in package.json is just an orphan with a tag
[12:46:11] <timmywil> actually, it may not matter as long as DaveMethvin tags a commit and git push --tags
[12:47:32] <timmywil> so I think it's going to get in the repo either way, but I do think it's important that the tag is available since all jQuery releases are available as tags on the repo
[12:47:46] <timmywil> which is good
[12:48:02] <DaveMethvin> tags apply regardless of branch tho,right?
[12:48:06] <gnarf> yes
[12:48:13] <timmywil> that's what I"m saying
[12:48:22] <gnarf> like i said, the UI release tag isn't even a commit in any branch
[12:49:06] <timmywil> gnarf: nor is it in core. just the version number change is a commit.
[12:49:14] <DaveMethvin> gnarf: how does that work? you just commit on a detached head and push it up?
[12:49:29] <timmywil> which is also where we tag it
[12:49:41] <gnarf> DaveMethvin: yes
[12:49:50] <DaveMethvin> before, we were always using master so this wasn't an issue
[12:49:53] <gnarf> DaveMethvin: we actually use a branch that we don't push
[12:49:58] <gnarf> git co -b release
[12:50:01] <gnarf> do the version stuff
[12:50:03] <gnarf> commit
[12:50:03] <gnarf> tag
[12:50:05] <gnarf> push
[12:50:21] <DaveMethvin> push --tags only tho?
[12:50:26] <gnarf> then delete the "release" branch from master and update to the next -pre
[12:50:28] <gnarf> yeah
[12:50:38] <DaveMethvin> wow
[12:50:56] <gnarf> we also commit a bunch of json files for the plugins site, etc
[12:51:03] <DaveMethvin> when you push --tags then it pushes the detached head up as well?
[12:51:03] <gnarf> that we don't want to exist in master
[12:51:09] <gnarf> if its a tag yup
[12:51:15] <DaveMethvin> i'm getting dizzy
[12:51:34] <gnarf> just sayin why we do it that way
[12:51:40] <DaveMethvin> so what do you use your -stable branches for?
[12:51:42] <gnarf> you can commit it from the branch just as easy
[12:51:56] <gnarf> DaveMethvin: the actual updates would be there, but a release would still be an orphan
[12:52:12] <gnarf> easier to draw maybe
[12:52:18] <DaveMethvin> no i get it
[12:52:28] <DaveMethvin> just never thought about doing it
[12:52:36] <timmywil> ok, but if you do a commit for the version number on 1.8-stable only and tag that commit, it won't be present in master, which is bad
[12:52:52] <DaveMethvin> but it's *not* in master
[12:52:57] <DaveMethvin> it never was
[12:53:04] <timmywil> what never was?
[12:53:17] <DaveMethvin> the commit i just made for example
[12:53:37] <timmywil> all releases have been in master since the beginning. why are we breaking that?
[12:54:13] <DaveMethvin> because we had a Summit last week
[12:54:23] <timmywil> that's no reason
[12:54:25] <DaveMethvin> and there was a lot of stuff we did that shoudln't go into a minor rel
[12:54:31] <gnarf> timmywil: there is no reason to release from master
[12:54:32] <timmywil> it doesn't have to
[12:54:39] <timmywil> gnarf: there are several
[12:54:48] <gnarf> timmywil: i'm interested to hear one
[12:54:59] <gnarf> :)
[12:55:07] <DaveMethvin> it sounds like ui never releases from master, they are just using detached heads that are tagged
[12:55:30] <gnarf> timmywil: any commits on the branch can still be merged back to master if you want
[12:55:32] <timmywil> gnarf: well, I just said a good one
[12:55:57] <gnarf> timmywil: we won't have any "release" tags in our master
[12:55:58] <timmywil> gnarf: sure, just wanted to point out that it should be done
[12:55:59] <gnarf> in UI
[12:56:08] <timmywil> core isn't ui
[12:56:11] <DaveMethvin> the only way we can release from master is to use all the commits there right now
[12:56:15] <DaveMethvin> which make behavior changes
[12:56:27] <DaveMethvin> i don't even want to think about vetting all those
[12:56:41] <gnarf> we used master as 1.9.0 pre really
[12:56:45] <timmywil> DaveMethvin: that's not what I'm suggesting
[12:56:51] <doesallmagic> Project jQuery Core (branch "1.8-stable") build #1: FAILURE in 19 min: http://swarm.jquery.org:8080/job/jQuery%20Core%20(branch%20%221.8-stable%22)/1/
[12:56:55] <gnarf> so we have to branch out of master to release regardless
[12:56:55] <DaveMethvin> haha
[12:57:23] <gnarf> DaveMethvin: asking for a rerun
[12:57:26] <gnarf> 2 effects fails
[12:57:32] <gnarf> ie 6
[12:57:39] <DaveMethvin> yeah
[12:57:48] <timmywil> DaveMethvin: you can release from 1.8-stable, that's fine. but I think we should merge in 1.8-stable to master.
[12:58:28] <DaveMethvin> well if i had known i could release on a detached head i would have done that
[12:58:31] <timmywil> or the "Tagging the 1.8.3 release" commit will not be present in jQuery's main branch
[12:58:56] <DaveMethvin> but it can't be, i don't think
[12:59:12] <timmywil> sure it can, that's what happens in a merge
[12:59:47] <DaveMethvin> oh i see what you're saying
[12:59:53] <DaveMethvin> hmm
[12:59:58] <gnarf> why should it be
[13:00:12] <gnarf> then you just need to override the merge anyway so 1.9.0-pre still wins on the version in master
[13:00:14] <timmywil> gnarf: https://github.com/jquery/jquery/tags
[13:00:31] <gnarf> timmywil: it shows up there if its a tag, regardless
[13:00:38] <DaveMethvin> but those aren't branch-specific
[13:00:38] <DaveMethvin> right
[13:00:49] <timmywil> but they are commit specific
[13:01:02] <gnarf> https://github.com/jquery/jquery-ui/tags shows 1.9.0.zip
[13:01:05] <gnarf> which isn't in master
[13:01:13] <DaveMethvin> so let me be sure i understand
[13:01:32] <DaveMethvin> in 1.8-stable i could tag 1.8.3
[13:01:44] <DaveMethvin> and then later even delete the 1.8-stable branch
[13:01:54] <DaveMethvin> and the tag would stil reference that commit
[13:01:56] <gnarf> yes, that tag will live forever
[13:01:59] <gnarf> until you delete it
[13:02:05] <DaveMethvin> i will NEVER do that :D
[13:02:11] <DaveMethvin> at least on purpose
[13:02:19] <gnarf> the tag will always be reachable by git checkout / github tags
[13:02:29] <gnarf> it doesn't even need to ever have existed in any HEAD in the first place
[13:03:03] <gnarf> a tag is just literal an alias for a specific SHA
[13:03:09] <DaveMethvin> the problem with always releasing in master is it creates a bottleneck
[13:03:45] <DaveMethvin> i can merge in the 1.8.3 commit but it don't "do" anything since we don't want/need the change
[13:03:53] <DaveMethvin> we're past it already
[13:03:59] <gnarf> no point
[13:04:08] <gnarf> you just dirty the master commit log for no good reason
[13:04:12] <gnarf> imo
[13:04:27] <gnarf> like you said, you're past it already
[13:04:36] <gnarf> now if you had say, fixed something that wasn't in master yet
[13:04:45] <gnarf> you might cherry pick that fix, or merge the branch or whatever
[13:04:49] <gnarf> into master
[13:05:15] <DaveMethvin> right but even then it creates a parallel history that isn't the same as master so it shouldn't show up on master
[13:05:17] <timmywil> OK. this is what I'm saying. Since the beginning of jQuery, we have commits in the master branch that were tagged for release. We are about to move toward two versions of jQuery for the first time. We can be consistent and make 1.8.3 the last release we ever do from master, but there's no good reason to break that consistency right before it's about to be understandable broken by 1.9/2.0
[13:06:02] <timmywil> this is literally the last time
[13:06:05] <gnarf> timmywil: i'm saying that consistency doesn't actually mean anything other than thats how we were doing things, and we have already broken from that pattern by landing the summit changes in master instead of a branch
[13:06:24] <DaveMethvin> Actually, there's nothing in 1.8.3 that couldn't wait, i don't have a problem with just punting on it
[13:06:26] <DaveMethvin> but
[13:06:35] <gnarf> the break happened at the summit, and doing a merge-loop-de-loop isn't gonna actually be useful for anyone
[13:06:37] <DaveMethvin> i wanted to bring up what to do about 2.0 anyway
[13:06:48] <DaveMethvin> so since i have  you both here ... :)
[13:07:13] <DaveMethvin> i'm thinking we get 1.9 pretty stable and clean by December
[13:07:21] <DaveMethvin> ready for an alpha or beta
[13:07:29] <DaveMethvin> then ... 2.0
[13:07:46] <DaveMethvin> would it make more sense to do a separate repo for that rather than a branch?
[13:07:54] <DaveMethvin> it's going to diverge a LOT over time
[13:07:59] <gnarf> i don't think it would be
[13:08:02] <DaveMethvin> and altho we may cherry pick stuff
[13:08:13] <gnarf> cross repo picking is kinda meh
[13:08:24] <gnarf> it would end up having to be a fork anyway
[13:08:26] <DaveMethvin> well that's good to konw
[13:08:31] <gnarf> and then you lost the point of having two repos
[13:08:44] <DaveMethvin> yeah that's what i was wondering about
[13:08:47] <timmywil> gnarf: i disagree. and it would align 1.8-stable with master since it now has 2 commits that should probably go into master anyway
[13:09:13] <DaveMethvin> no, honestly if it simplifies our discussion i can just delete 1.8-stable
[13:09:15] <DaveMethvin> it's not critical
[13:09:22] <DaveMethvin> but we have to tackle this for 1.9/2.0
[13:09:46] <DaveMethvin> if we stay on the same repo i'd like the branch to be 1.9-stable and master will be 2.0
[13:10:04] <DaveMethvin> so 1.9-stable WILL definitely have releases that aren't on master, right timmywil?? :)
[13:10:32] <DaveMethvin> and most likely we will branch before 1.9 is even released
[13:10:47] <timmywil> well sure, but I thought we agreed 1.9 would be master since 1.9+ probably looks a lot more like what we have now
[13:11:13] <DaveMethvin> well that's kind of why i thought 2.0 in a different repo made sense
[13:11:34] <gnarf> you want the most forward/dev branch to be master
[13:11:41] <gnarf> wherever you want pulls to default
[13:11:43] <gnarf> thats master
[13:12:00] <timmywil> it's hard to pick one over the other
[13:12:03] <gnarf> it is
[13:12:10] <gnarf> those branches are very similar
[13:12:16] <gnarf> the tough part is that
[13:12:23] <timmywil> if it's in the same repo, pulls will need to specify which branch they want the pull to go to
[13:12:24] <gnarf> if you DO make 1.9 "master" and 2.0 a branch
[13:12:39] <gnarf> whenever you drop 1.9
[13:12:46] <gnarf> merging the 2.0 into master will be hell
[13:12:52] <gnarf> you'll basically have to force push
[13:13:09] * DaveMethvin shudders
[13:13:18] <timmywil> afaik, we are not dropping 1.9
[13:13:21] <gnarf> master should always be "next"
[13:13:29] <timmywil> which is kinda the point here
[13:13:29] <DaveMethvin> maybe 2023
[13:13:32] <gnarf> timmywil: i'm talking like say 5 years from now
[13:13:49] <DaveMethvin> regardless of when we drop waht
[13:14:06] <DaveMethvin> 2.0 will definitely be getting more attention next year than 1.9
[13:14:27] <DaveMethvin> and 1.9 will only be getting essential bug fixes and the rare feature add
[13:14:46] <DaveMethvin> but there's this period of wild activity coming up
[13:14:47] <timmywil> I think gnarf and I might be disagreeing on how different 1.9 and 2.0 will get
[13:14:52] <gnarf> sounds like 1.9 is a branch
[13:15:07] <DaveMethvin> i can see 2.0 becoming very different
[13:15:13] <DaveMethvin> not only are we chopping out oldIE features
[13:15:19] <DaveMethvin> but we can then use ES5 features
[13:15:36] <DaveMethvin> i don't even think we'll realize them all in 2.0
[13:15:47] <timmywil> the way I see it, 1.9 is business as usual, whereas 2.0 is a new project
[13:15:56] <DaveMethvin> it feels that way to me too timmywil
[13:16:03] <DaveMethvin> that's why i wondered about a new repo
[13:16:15] <DaveMethvin> altho i agree it makes common patches hard
[13:16:21] <gnarf> seems bad for the end user to split repos
[13:16:30] <gnarf> but its a possibility
[13:16:50] <timmywil> could make things simpler as they diverge
[13:16:51] <DaveMethvin> but say, a year from now it wouldn't surpise me if more than half the lines of code is different.
[13:16:55] <gnarf> might make our dev lives a little easier to do that, but then jQuery 2.0 is going to be cloned from a different repo?
[13:17:18] <DaveMethvin> is that a good thing or a bad thing? :)
[13:17:43] <gnarf> *shrug*
[13:18:01] <gnarf> its >a< thing tho
[13:18:12] <DaveMethvin> don't look at me, i just discovered a lotta stuff about git today...AGAIN
[13:18:15] <timmywil> agreed
[13:18:25] <timmywil> but I still prefer that over a branch I think
[13:18:47] <gnarf> I think that the larger community of OSS projects don't create a new repo for a major
[13:18:59] <gnarf> even complete overhauls
[13:19:10] <DaveMethvin> that's something to consider
[13:19:51] <gnarf> like people branch, and let the old branches die and get deleted
[13:20:29] <gnarf> https://github.com/puppetlabs/puppet/branches
[13:20:49] <DaveMethvin> how about i open a discussion on jquery-devs-team about it? maybe some others have dealt with this
[13:21:08] <timmywil> sounds like a good idea
[13:21:13] <gnarf> sure
[13:21:19] <gnarf> scott prolly has an essay on it
[13:21:20] <gnarf> :)
[13:21:42] <DaveMethvin> well good, we need some rabid opinions vs your wimpy agreeable thoughts!
[13:21:43] <timmywil> if we email it, he will come
[13:21:56] <DaveMethvin> on 1.8.3
[13:22:00] <gnarf> notice btw
[13:22:00] <gnarf> https://github.com/joyent/node/branches
[13:22:03] <gnarf> 0.8 is a branch
[13:22:51] <timmywil> this is still pretty different
[13:22:56] <DaveMethvin> okay, on 1.8.3...i am perfectly happy dumping it for now
[13:23:06] <DaveMethvin> i have about 3 more hours of work to do on it
[13:23:30] <DaveMethvin> finish the blog, collect the contributor list, notify the CDN authorities, update the tracker, etc
[13:23:47] <gnarf> I really don't see how timmywil - It's just a new major - It might be a complete rewrite, but it's still just a new major
[13:24:10] <timmywil> gnarf: it's not just a new major though. We will be taking on two projects once it's released
[13:24:17] <DaveMethvin> even if we created a new repo, it will have the same diffs as if it were on master
[13:24:33] <DaveMethvin> so it's more a question of how we view master vs branches
[13:24:34] <timmywil> v0.8 of node will be the mainstream and people will forget about -v0.8
[13:24:41] <gnarf> timmywil: and so do most OSS - they still support/backport fixes to the last major for a year or two
[13:24:44] <timmywil> jQuery 1.9 will live on
[13:24:55] <DaveMethvin> shut your dirty mouth timmywil! :D
[13:25:16] <timmywil> gnarf: and we could have done that for all of our past releases but chose not to
[13:25:18] <gnarf> jQuery UI worked in 1-8-stable & master for like two years
[13:25:29] <DaveMethvin> this is just something *we* haven't tackled in core before
[13:25:46] <DaveMethvin> we've always worked on master and released from it
[13:25:52] <DaveMethvin> and only had one active release
[13:25:57] <gnarf> with entire components full of new code that was unrelated to the code we still patched in 1-8-stable
[13:26:00] <DaveMethvin> but lots of other projects do support more than one
[13:26:18] <DaveMethvin> scott is a cherry pickin fool
[13:26:34] <timmywil> aight, sry guys, I'd like to keep debating but I need to work
[13:26:43] <timmywil> email it
[13:26:45] <DaveMethvin> yeah that's fine, just wanted an opinion and i got one
[13:26:46] <gnarf> and like after two picks, cherry-pick is like the easiest think possible git can do :)
[13:26:53] <DaveMethvin> thanks
[13:47:44] <jqcommit> [jquery] rwldrn pushed 1 new commit to master: http://git.io/Yx3LAg
[13:47:44] <jqcommit> [jquery/master] Remove .hyphen property from tests (left behind in refactoring) - Rick Waldron
[14:03:44] <doesallmagic> Project jQuery Core build #461: SUCCESS in 16 min: http://swarm.jquery.org:8080/job/jQuery%20Core/461/
[14:03:44] <doesallmagic> waldron.rick: Remove .hyphen property from tests (left behind in refactoring)
[14:23:58] <Krinkle> DaveMethvin: k, for the record, it passed: http://swarm.jquery.org/job/1165
[14:24:17] <DaveMethvin> thanks Krinkle
[14:24:33] <Krinkle> not sure why it didn't report here
[14:25:04] <DaveMethvin> it reported the fail, i don't think it reports success on retest does it?
[14:25:34] <DaveMethvin> Krinkle: so when we get to the 1.9/2.0 split is there any problem with having jobs monitoring both branches and with different browsers?
[14:25:50] <Krinkle> DaveMethvin: no problem
[14:26:13] <Krinkle> I wonder why http://swarm.jquery.org:8080/job/jQuery%20Core%20(branch%20%221.8-stable%22)/1/console is marked failure
[14:26:16] <Krinkle> all tests are passing
[14:26:26] <Krinkle> or not
[14:26:27] <Krinkle> IE|6: failed (2): /result/375833
[14:26:34] <Krinkle> but the reran succeeded
[14:27:01] <DaveMethvin> it would  have normally updated the table of results, right?
[14:27:12] <DaveMethvin> and it did
[15:06:24] <doesallmagic> Project jQuery Core (branch "1.8-stable") build #2: STILL FAILING in 24 min: http://swarm.jquery.org:8080/job/jQuery%20Core%20(branch%20%221.8-stable%22)/2/
[15:48:24] <Krinkle> DaveMethvin: yeah, testswarm is all green, but jenkins is not
[15:48:36] <Krinkle> (since jenkins build are immutable once finished)
[15:48:41] <Krinkle> build results(
[15:48:57] <Krinkle> arg, again
[15:48:58] <Krinkle> Safari|5|1: failed (4): /result/376608
[15:49:03] <Krinkle> what's going on..
[15:49:13] <DaveMethvin> you're asking ME?? :D
[15:49:22] <DaveMethvin> you are very desperate.
[15:49:56] <Krinkle> previous run IE6 failed once, and succeeded on re-run
[15:50:15] <Krinkle> now Safari 5.1 randomly fails on one single assertion, and again, fine on the second try.
[15:51:03] <DaveMethvin> we've always had a few of those troublesome tests
[15:51:15] <DaveMethvin> usually related to some sort of implicit timing
[15:51:28] <DaveMethvin> i tried getting rid of them as they came up
[16:07:40] <doesallmagic> Project jQuery Core (branch "1.8-stable") build #3: STILL FAILING in 16 min: http://swarm.jquery.org:8080/job/jQuery%20Core%20(branch%20%221.8-stable%22)/3/
[17:19:44] <doesallmagic> Yippie, build fixed!
[17:19:44] <doesallmagic> Project jQuery Core (1.8-stable) build #4: FIXED in 27 min: http://swarm.jquery.org:8080/job/jQuery%20Core%20(1.8-stable)/4/
[17:41:04] <Krinkle> wee
[17:41:30] <Krinkle> doesallmagic :)
[17:41:40] <Krinkle> Gets a whole new meaning after the DC summit
[17:41:47] <DaveMethvin> and STAY FIXED! :D
[19:26:16] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/n2n_7Q
[19:26:16] <jqcommit> [jquery/master] Add new authors and sort in commit order. - Dave Methvin
[19:38:00] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/db9BJA
[19:38:00] <jqcommit> [jquery/master] Fix #9469. Remove semi-functional .selector property. Close gh-1006. - Dave Methvin
[19:45:21] <doesallmagic> Project jQuery Core build #462: SUCCESS in 19 min: http://swarm.jquery.org:8080/job/jQuery%20Core/462/
[19:45:21] <doesallmagic> dave.methvin: Add new authors and sort in commit order.
[20:31:36] <doesallmagic> Project jQuery Core build #463: SUCCESS in 14 min: http://swarm.jquery.org:8080/job/jQuery%20Core/463/
[20:31:37] <doesallmagic> dave.methvin: Fix #9469. Remove semi-functional .selector property. Close gh-1006.
[20:43:36] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/StkqXQ
[20:43:36] <jqcommit> [jquery/master] Fix #11542. document.body should not be special in .offset() and document.documentElement is the default element.offsetParent. Close gh-899. - Daniel Gálvez
[21:18:34] <doesallmagic> Project jQuery Core build #464: SUCCESS in 16 min: http://swarm.jquery.org:8080/job/jQuery%20Core/464/
[21:18:34] <doesallmagic> dave.methvin: Fix #11542. document.body should not be special in .offset() and document.documentElement is the default element.offsetParent. Close gh-899.
