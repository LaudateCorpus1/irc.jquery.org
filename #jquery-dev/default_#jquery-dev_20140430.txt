[02:03:49] <jqcommit> [13jquery] 15Rankbill opened pull request #1568: README.md (06master...06patch-1) 02http://git.io/npW9IA
[02:06:52] <jqcommit> [13jquery] 15mzgol closed pull request #1568: README.md (06master...06patch-1) 02https://github.com/jquery/jquery/pull/1568
[06:15:13] <jqcommit> [13jquery] 15markelog pushed 1 new commit to 06master: 02http://git.io/3lTJWQ
[06:15:13] <jqcommit> 13jquery/06master 14c34dbf5 15Oleg Gaidarenko: Effects: Respect display value on inline elements...
[06:15:33] <jqcommit> [13jquery] 15markelog closed pull request #1566: Effects: Respect display value on inline elements (06master...0614824) 02http://git.io/J2cXLg
[06:20:05] <doesallmagic2> Project jQuery Core build #1144: SUCCESS in 5 min 3 sec: http://jenkins.jquery.com/job/jQuery%20Core/1144/
[06:20:05] <doesallmagic2> markelog: Effects: Respect display value on inline elements
[06:26:25] <doesallmagic2> Project jQuery Core 1.x build #439: STILL FAILING in 6 min 20 sec: http://jenkins.jquery.com/job/jQuery%20Core%201.x/439/
[06:26:25] <doesallmagic2> markelog: Effects: Respect display value on inline elements
[06:36:27] <Krinkle> markelog: Hi
[06:36:33] <Krinkle> markelog: Can you release grunt-jscs-checker soon?
[06:36:33] <markelog> hey Krinkle
[06:36:39] <Krinkle> Looks like node-jscs just made a release :)
[06:36:43] <markelog> sure
[07:21:51] <Krinkle> DaveMethvin: Interesting, I was just looking into http://bugs.jquery.com/ticket/11484
[07:22:30] <DaveMethvin> what did you find?
[07:22:38] <Krinkle> Your comment
[07:22:54] <DaveMethvin> oh haha
[07:23:07] <Krinkle> and other fairly recent activity, too
[07:23:36] <Krinkle> In MediaWiki's lower level module loader system, we currently do our own script transport, one that's like $.ajax but without using that
[07:23:56] <DaveMethvin> once we switch to script tags there won't be a lot of need for special handling of sourceURL in globalEval
[07:23:59] <Krinkle> because we want debuggability, and thus need it to not use xhr for same domain, because of globalEval
[07:24:10] <Krinkle> wait, we're switching to script tags?
[07:24:14] <DaveMethvin> yep
[07:24:20] <DaveMethvin> in 1.12
[07:24:22] <Krinkle> Why?
[07:24:31] <DaveMethvin> because it works more consistently
[07:24:55] <DaveMethvin> you just said it
[07:25:10] <Krinkle> But wouldn't sourceURL in eval work?
[07:25:12] <DaveMethvin> xhr for local and script for non-local causes all kinds of different behaviors
[07:25:26] <DaveMethvin> yes but we don't need to do it if we use script tags, right?
[07:25:36] <Krinkle> i guess
[07:25:45] <Krinkle> I guess the perf is just imaginary?
[07:25:50] <Krinkle> script tags aren't slower
[07:25:59] <Krinkle> aside from the DOM manipulation itself that is
[07:25:59] <DaveMethvin> they shouldn't be
[07:26:16] <Krinkle> creating a node, setting attributes, appending it, detaching it etc.
[07:26:34] <DaveMethvin> getting the script from the remote has to be the biggest cost
[07:26:40] <Krinkle> yeah
[07:26:50] <Krinkle> and I suppose it benefits the same caching in browsers
[07:27:00] <DaveMethvin> yes
[07:27:08] <Krinkle> If anything, XHR might cause less cache hits since it modifies the request headers
[07:27:18] <Krinkle> it won't match the plain <script> equiv
[07:27:22] <DaveMethvin> yeah only ie caches them by default
[07:27:43] <DaveMethvin> and there are diffs in things like "use strict" behavior
[07:28:07] <DaveMethvin> and error handling
[07:28:15] <Krinkle> https://github.com/wikimedia/mediawiki-core/blob/master/resources/src/mediawiki/mediawiki.js#L1045-L1075
[07:28:39] <Krinkle> Hm.. even without jQuery changing its behaviour to enforce non-xhr for script, I shouldn't have to duplicate this code
[07:28:49] <Krinkle> I can just tell $.ajax to not use xhr, right? crossDomain:false ought to do it
[07:28:53] <Krinkle> or true rather
[07:29:24] <DaveMethvin> yeah, although i'd check that there are no other side effects
[07:29:34] <DaveMethvin> another reason why we need to simplify this stuff
[07:29:46] <DaveMethvin> too many special cases in the name of "do the right thing"
[07:30:08] <Krinkle> yeah
[07:30:16] <Krinkle> how's $.xhr() / $.jsonp() etc. coming along
[07:30:19] <Krinkle> $.script()
[07:30:27] <DaveMethvin> hasn't come along at all yet
[07:30:31] <DaveMethvin> but we're starting that process
[07:30:39] <DaveMethvin> i'm cleaning up the tickets today
[07:30:49] <Krinkle> I'm a bit behind on where roadmap and stuff is. Got a link I can follow for this kind of thing in general?
[07:30:54] <Krinkle> Or just trac milestone?
[07:31:06] <DaveMethvin> trac is the place to be
[07:31:09] <Krinkle> e.g. a "Roadmap" document
[07:31:18] <DaveMethvin> no there's no roadmap, just trac
[07:31:22] <Krinkle> cool
[07:31:25] <Krinkle> less duplication 
[07:31:28] <DaveMethvin> yeah
[07:31:51] <DaveMethvin> i'd rather "misuse" trac with a meta ticket than create another place to look
[08:04:27] <jqcommit> [13jquery] 15dmethvin pushed 1 new commit to 061.x-master: 02http://git.io/-cuhJA
[08:04:27] <jqcommit> 13jquery/061.x-master 14062a7d6 15Dave Methvin: Data: Work around IE11 bug with onpageshow attribute...
[08:04:38] <jqcommit> [13jquery] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/XBj_yg
[08:04:38] <jqcommit> 13jquery/06master 14b8133e2 15Dave Methvin: Data: Work around IE11 bug with onpageshow attribute...
[08:09:52] <doesallmagic2> Project jQuery Core 1.x build #440: STILL FAILING in 5 min 36 sec: http://jenkins.jquery.com/job/jQuery%20Core%201.x/440/
[08:09:53] <doesallmagic2> Dave Methvin: Data: Work around IE11 bug with onpageshow attribute
[08:25:50] <doesallmagic2> Project jQuery Core build #1145: FAILURE in 15 min: http://jenkins.jquery.com/job/jQuery%20Core/1145/
[08:25:51] <doesallmagic2> Dave Methvin: Data: Work around IE11 bug with onpageshow attribute
[08:32:37] <DaveMethvin> swarmy is flakey!
[11:07:52] <jqcommit> [13qunit] 15jseanxu opened pull request #555: Changed config.started to be the time the first time a test is run,... (06master...06master) 02http://git.io/MwXU7Q
[11:50:00] <vladikoff> hey gnarf, kborchers, hey there are reports of "(Maximum number of posts per hour for this IP (127.0.0.1) exceeded)" on bugs.jquery
[11:50:37] <DaveMethvin> vladikoff: hmmm
[11:50:44] <DaveMethvin> it's probably the spam filter
[11:50:50] <DaveMethvin> which isn't that good
[11:51:20] <vladikoff> DaveMethvin, the reverse proxy could be setting all incoming IPs to 127.0.0.1
[11:51:53] <DaveMethvin> yes indeed
[11:52:04] <DaveMethvin> here's our spam log from the last few minutes: http://upload.wnd8.com/grab/0c6938.png
[11:52:11] <DaveMethvin> it's like this 24 hours a day
[11:52:26] <DaveMethvin> so at least 2 or 3 get thru even when the spam filter is accurate
[11:53:52] <vladikoff> hmm
[11:54:08] <DaveMethvin> i just turned off the ip throttle vladikoff 
[11:54:38] <vladikoff> DaveMethvin, okay, the ip address should not be 127.0.0.1 all the time :D
[11:55:01] <DaveMethvin> i agree ... ya know how to fix that? :)
[11:55:07] <jqcommit> [13api.jquery.com] 15kswedberg closed issue #482: jQuery.ajax docs contain contradictory statements about "html" dataType behaviour 02https://github.com/jquery/api.jquery.com/issues/482
[11:55:38] <jqcommit> [13api.jquery.com] 15kswedberg tagged 06v1.11.7 at 14629f3d3: 02http://git.io/bwH-7Q
[11:57:08] <vladikoff> DaveMethvin, the reverse proxy must use needs to set X-Forwarded-For
[11:57:29] <jqcommit> [13api.jquery.com] 15kswedberg closed pull request #484: jQuery.ajax: rewrite Data Types section (06master...06ajax) 02http://git.io/b6E3mQ
[11:57:42] <DaveMethvin> that's probably a gnarf or s5fs thang then 
[11:58:19] <DaveMethvin> same problem in bugs.jqueryui.com as well but it doesn't look like they are being showered with spammers
[11:58:31] <DaveMethvin> so it prob just doesn't occur there very often if at all
[11:59:05] <DaveMethvin> even tho they have the ip throttling on and seem to have for a while
[12:22:47] <gnarf> DaveMethvin / vladikoff : trac sucks at being the end of a proxy - it doesn't read any of the forwarded for headers 
[12:24:15] <DaveMethvin> gnarf, are you saying Trac sucks? I am shocked, SHOCKED!
[12:24:44] <DaveMethvin> hey, on a different subject ... glad to hear your mom's surgery went well!
[12:36:44] <gnarf> thanks!
[12:36:59] <gnarf> just got to the hospital to relieve my dad in the waiting room :)
[12:37:08] <gnarf> showed up just in time to get the news
[14:29:48] <m_gol> oh, today's the deadline for talks for jqconf
[15:21:59] <m_gol> rwaldron: ping
[15:28:30] <m_gol> DaveMethvin: ping
[18:37:57] <jqcommit> [13api.jquery.com] 15splitz opened issue #486: selector breaks on tags with multiple classes 02http://git.io/RJd-Kg
[18:46:00] <jqcommit> [13api.jquery.com] 15vladikoff closed issue #486: selector breaks on tags with multiple classes 02http://git.io/RJd-Kg
[22:55:36] <doesallmagic2> Project jQuery Core Weekly build #33: STILL FAILING in 32 min: http://jenkins.jquery.com/job/jQuery%20Core%20Weekly/33/
[22:55:36] <doesallmagic2> * markelog: Effects: Respect display value on inline elements
[22:55:37] <doesallmagic2> * Dave Methvin: Data: Work around IE11 bug with onpageshow attribute
