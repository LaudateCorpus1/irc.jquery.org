[07:50:04] <gnarf> mikesherov: ping me on skype whenever
[07:52:09] <mikesherov> gnarf: cool, just working on an issue with a coworker first, should be like 20 minutes
[09:29:36] <mikesherov> DaveMethvin: yt>
[09:29:37] <mikesherov> ?
[09:29:49] <DaveMethvin> yes indeedy mikesherov
[09:29:53] <mikesherov> I'm merging this pull from one of the SNAP guys: https://github.com/jquery/jquery/pull/1010
[09:29:53] <socialhapy> ★ Pull request on jquery by DFoxinator (3m, 56s ago): Fixes #12139, make sure absolutely positioned elements have HTML as offsetParent
[09:30:08] <mikesherov> he signed CLA, and it's an additional unit test
[09:30:11] <DaveMethvin> sounds good!
[09:30:15] <DaveMethvin> moar tests
[09:30:15] <mikesherov> K, thanks!
[09:30:18] <mikesherov> that's all!
[09:40:49] <gnarf> mikesherov: whats up? :)
[09:40:56] <gnarf> thats a long 20 minutes :)
[09:41:26] <mikesherov> sorry
[09:41:29] <mikesherov> OK, I'm ready now
[09:41:39] <jqcommit> [jquery] mikesherov pushed 1 new commit to master: http://git.io/ihR5HA
[09:41:39] <jqcommit> [jquery/master] Fixes #12139, make sure absolutely positioned elements have HTML as offsetParent, closes gh-1010 - David Fox
[09:42:52] <mikesherov> gnarf: let me get stevs
[09:45:34] <mikesherov> gnarf: so the place we're at now is getting mergeatron to use the push system, considering you guys don't want to use mongo, or any other storage engine for that matter
[09:46:33] <gnarf> mikesherov: I wouldn't be against sqllite or mysql
[09:46:49] <gnarf> mikesherov: just the mongo/memory issue is scary on (mt) hardware atm
[09:47:07] <mikesherov> gnarf: fair enough
[09:47:35] <mikesherov> gnarf: ssurowiec1: is steves on github, creator of mergeatron
[09:53:17] <ssurowiec1> gnarf: once the webhooks plugin for github is done no db should be needed if you're just using it to run tests
[09:53:54] <ssurowiec> at that point a db should only be needed for things like jslint where we need to keep track of errors that have already been reported
[09:54:14] <gnarf> ssurowiec: yeah - no db - or sqllite / mysql works out a little better than mongo for us atm
[09:56:01] <ssurowiec> the goal is to get to a point where we rely on a db as little as possible
[09:56:23] <ssurowiec> and depending on how long-lived pr's before they're merged or closed keeping track of that stuff in memory could work too
[09:58:09] <gnarf> ssurowiec: we have pulls that sit for months :)
[09:59:09] <mikesherov> gnarf: I'm backtracking. Going to use mysql, because that's what I have already set up locally
[09:59:21] <ssurowiec> gnarf: yea that probably won't work then :)
[09:59:47] <gnarf> mikesherov: seems good
[10:01:17] <mikesherov> ssurowiec: should I make the storage layer a plugin, or just have a separate concept for that?
[10:02:09] <mikesherov> ssurowiec: seems to make sense as a plugin
[10:12:05] <doesallmagic> Project jQuery Core build #467: FAILURE in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/467/
[10:12:06] <doesallmagic> mike.sherov: Fixes #12139, make sure absolutely positioned elements have HTML as offsetParent, closes gh-1010
[11:39:06] <scott_gonzalez> gnarf mikesherov DaveMethvin: CLA verification
[11:39:38] <scott_gonzalez> We can use Google's API to get the list of people who have signed the CLA.
[11:39:44] <scott_gonzalez> Then compare that against the author of a PR.
[11:40:11] <scott_gonzalez> We'll also need to track aliases so that we can match up info, though ideally git will have the same info as the CLA.
[11:40:27] <DaveMethvin> what's the best way to handle name/email changes? maybe we just edit the spreadsheet?
[11:40:42] <DaveMethvin> there are already a couple of dups on the sheet
[11:41:16] <DaveMethvin> also, email changes over time
[11:41:42] <DaveMethvin> if we edit the sheet i think we can still use google to track edits
[11:41:55] <DaveMethvin> so we haven't lost the old inffo
[11:42:09] <DaveMethvin> or we could have them re-sign the CLA...
[11:42:13] <DaveMethvin> with the right info
[11:44:08] <ryanneufeld> Day-tah-bayse?
[11:44:44] <ryanneufeld> DaveMethvin: * perhaps a database would be useful for this?
[11:45:01] <gnarf> i think keeping it in the CLA doc is probably smart
[11:45:11] <gnarf> as that is where the live data comes from anyway
[11:45:22] <gnarf> though, we could just "sync up" with it
[11:46:22] <DaveMethvin> We can complexify it as needed, and lord knows i like automation, but there are a lot of exceptions to this and doing it a fully automated way but still being "friendly" to pull requests seems like a lot of work
[11:47:29] <DaveMethvin> for example, i sign the cla using my work address, then 6 months later i switch jobs and want to change email
[11:47:41] <DaveMethvin> simple solution would be to just have them re-sign the cla
[11:47:48] <gnarf> seems sane
[11:47:52] <DaveMethvin> which we may want to do since their employer may have diff rules
[11:48:14] <DaveMethvin> we just need the commit to match ONE of the entries
[11:48:24] <DaveMethvin> they can sign it each time their info changes if needed
[11:48:47] <scott_gonzalez> How about we just make email a list of addresses?
[11:49:06] <DaveMethvin> a list, where?
[11:49:12] <scott_gonzalez> In the spreadsheet.
[11:49:19] <scott_gonzalez> foo@example.com, bar@example.com
[11:49:29] <DaveMethvin> so when i change jobs in a year ... ?
[11:49:35] <DaveMethvin> we edit their entry?
[11:49:38] <scott_gonzalez> yup
[11:49:45] <gnarf> add the other email - or ask to sign again
[11:49:46] <gnarf> either works
[11:50:27] <scott_gonzalez> There's a bigger question about the CLA in general, which is what happens when you change jobs and the rules at the new job are different?
[11:50:29] <gnarf> also, we could make the authors.txt assume the first email
[11:50:42] <gnarf> as like an alias
[11:50:45] <DaveMethvin> scott_gonzalez: right, so re-signing isn't just a database concern
[11:50:54] <gnarf> and always use the name in the CLA form?
[11:50:55] <DaveMethvin> it re-affirms you are okay to contribute
[11:51:22] <gnarf> if it's like me who has some gnarf@gnarf.net and some gnarf37@gmail.com entries
[11:52:02] <gnarf> the authors.txt generator would know i prefer the gmail / "Corey Frang" regardless of what the git author said
[11:53:32] <scott_gonzalez> DaveMethvin: Perhaps allow 1 additional email field for people with 2 personal email address (not too uncommon), and require a new CLA for every job change?
[11:54:03] <DaveMethvin> if we don't mind additional cla i would just say let's do all changes that way
[11:54:16] <DaveMethvin> doesn't hurt anything really
[11:54:25] <DaveMethvin> and it keeps the flat file flat
[11:55:54] <DaveMethvin> we do have the ability to delete entries, for example spammy ones if we want, or ones without any commits
[11:57:14] <scott_gonzalez> seems fine
[11:57:25] <DaveMethvin> thinking about it, maybe we shoudl treat entries that match commits as a legal document and not edit them
[11:57:50] <DaveMethvin> so ask them to re-submit a cla on changes that involve name or email
[11:58:05] <DaveMethvin> of course we still have to deal with the past
[11:58:09] <DaveMethvin> the ugly, ugly, past
[11:58:35] <DaveMethvin> sorry, got a meeting at 3
[11:59:07] <DaveMethvin> ideally it would be nice to run one or two docs against the whole commit history and say "these are covered by a CLA/CAA" and "these are not accounted for"
[11:59:32] <DaveMethvin> and then determine which in the latter category are still even in the codebase
[11:59:46] <snover> DaveMethvin: it’s easier than that, just git blame
[11:59:54] <snover> and then check the commits that show up
[12:00:12] <snover> well, kinda.
[12:00:20] <snover> except for the part where people change the whitespace but don’t change the code
[12:00:21] <scott_gonzalez> snover: Not quite that simple ;-)
[12:00:28] <scott_gonzalez> yup
[12:00:44] <snover> or where people cut and paste code from one section to the next
[12:00:49] <snover> anyway, nevermind me
[12:00:56] <snover> as usual, it’s friday so my brain isn’t working
[12:00:59] <scott_gonzalez> heh
[12:01:16] <scott_gonzalez> DaveMethvin: I can work on a script to check who hasn't signed the CLA yet.
[12:01:26] <scott_gonzalez> The nice thing is we've already done the manual work for AUTHORS.txt.
[12:01:34] <scott_gonzalez> So we can just compare CLA to AUTHORS.
[12:01:40] <DaveMethvin> thanks scott_gonzalez
[12:02:12] <scott_gonzalez> Gonna run an errand, back in a bit.
[14:34:13] <_|Nix|_> Hey, all! Is there a reason why Sizzle processes attribute selectors case-sensitively? That is, why is it that "input[type='search']" does not match <input type="SEARCH"></input>?
[14:34:23] <_|Nix|_> ... at least according to https://github.com/jquery/jquery-mobile/issues/4860
[14:34:24] <socialhapy> ★ Issue #4860 on jquery-mobile (bittlelum; 2m, 1w ago): Search input type is case-sensitive
[14:35:44] <Wilto> I AM HERE TO FIGHT THE CORE DEVS WHASSUP
[14:37:00] <DaveMethvin> wilto _|Nix|_ what does the w3c say?
[14:37:16] <DaveMethvin> like, class="abc" is not the same as class="ABC" is it?
[14:37:34] <mikesherov> Wilto: lets fight
[14:37:57] <DaveMethvin> no, mikesherov, that's exactly what Wilto wants
[14:37:58] <mikesherov> I WILL SMASH YOU
[14:38:01] <DaveMethvin> he's probably drunk
[14:38:03] <Wilto> CSS-wise, yeah, same deal. `input[type="hambone"]` matches <input type="HAMBONE">.
[14:38:04] <mikesherov> to smithereens?
[14:38:05] <DaveMethvin> it's after 5
[14:38:06] <Wilto> I wish.
[14:38:11] <DaveMethvin> :D
[14:38:12] <_|Nix|_> DaveMethvin: We're not talking about that. We've checked that. We're talking about type="SEARCH" === type="search"
[14:38:34] <DaveMethvin> yeah i dunno, so what does the governing std say?
[14:38:37] <DaveMethvin> i guess that woudl be html5
[14:38:39] <mikesherov> because attributes are lowercase
[14:38:46] <mikesherov> GOVERNING STD
[14:38:49] <mikesherov> ?ts
[14:38:50] <bot-t> That's Sexual™
[14:38:56] <DaveMethvin> attribute names are always folded to lower
[14:39:03] <DaveMethvin> dunno if the values are supposed to match there
[14:39:19] <_|Nix|_> DaveMethvin: Well they do if the same selector is processed using CSS ...
[14:39:35] <mikesherov> css is stupid though, that's why
[14:39:57] <Wilto> http://www.w3.org/TR/2011/WD-selectors4-20110929/#case-sensitive ?
[14:40:01] <Wilto> css is dope
[14:40:14] <Wilto> Don’t you take away the only thing I halfway understand, mikesherov.
[14:40:46] <mikesherov> css is so great
[14:40:52] <mikesherov> css variables are so great
[14:41:05] <mikesherov> I love css, especially because getComputedStyle is awsome
[14:41:16] <mikesherov> it's like the most obvious, not broken bullshit api ever
[14:41:51] <mikesherov> I love used value vs. computed value vs. actual value vs. resolved value vs. initial value vs. default value
[14:41:52] <Wilto> mikesherov: …no comment
[14:41:58] <mikesherov> all of which are things in css
[14:42:01] <Wilto> vs Android value.
[14:42:04] <mikesherov> HAHA
[14:42:21] <DaveMethvin> these damn standards are too big
[14:42:23] <_|Nix|_> mikesherov: The fact that browsers do the Right Thing™ given some CSS does not mean they have to report to js what they've done :)
[14:42:31] <mikesherov> quiz: what is the "used value" of "margin: auto;"
[14:42:40] <Wilto> null
[14:42:44] <mikesherov> NO
[14:42:47] <Wilto> Oh, no.
[14:42:53] <Wilto> It’s the current rendered pixel value.
[14:42:57] <mikesherov> MAYBE
[14:43:01] <mikesherov> depends on who you ask
[14:43:03] <Wilto> OBV.
[14:43:07] <mikesherov> HAHA
[14:43:09] <Wilto> That’s very useful, I’ll have you know.
[14:43:36] <mikesherov> What would be useful is: getStyle("used", "margin");
[14:43:48] <mikesherov> vs getStyle("computed", "margin");
[14:43:58] <Wilto> brb; forming another community group
[14:44:02] <mikesherov> HAHAH
[14:44:09] <mikesherov> are we fighting yet?
[14:44:58] <Wilto> I’m having a hard time disagreeing. CSS is stupid, granted, but it’s _my_ kinda stupid.
[14:45:20] <Wilto> Like a dog that chases parked cars—it’s like “good effort, little buddy. Good hustle.”
[14:46:03] <_|Nix|_> OK, so, correct me if I'm wrong: If I have input[type='search'] { background: red; } it will colour all search inputs red, but if I then try to collect them with $( "input[type='search']" ) I will only get the lowercase ones?
[14:46:33] <DaveMethvin> okay, here's the best I can do, it takes reading two pages: http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#case-sensitivity-and-string-comparison
[14:46:40] <DaveMethvin> Except where otherwise stated, string comparisons must be performed in a case-sensitive manner.
[14:46:45] <DaveMethvin> http://www.w3.org/TR/html-markup/input.html
[14:47:05] <Wilto> Selector-wise though, Selectors Level 4 says they should be case insensitive.
[14:47:06] <DaveMethvin> http://www.w3.org/TR/html-markup/input.search.html#input.search
[14:47:18] <Wilto> So if Sizzle is followin’ said spec, do we have to normalize that behind the scenes?
[14:47:35] <DaveMethvin> WHY DO THEY HAVE TO USE UPPERCASE ANYWAY?
[14:47:47] <Wilto> BECAUSE THEY’RE VERY IMPORTANT SELECTORS
[14:47:51] <Wilto> THEY ALL NEED TO STAND OUT
[14:48:26] <DaveMethvin> these standards people need to get their act together
[14:49:13] <Wilto> That’s why I think the future of web standards lies with scrappy and handsome young web developers starting weird little rebellions.
[14:49:24] <DaveMethvin> hey waitaminit Wilto this says it's up to html http://www.w3.org/TR/2011/WD-selectors4-20110929/#case-sensitive
[14:49:28] <Wilto> And having sweet logos for his community group.
[14:49:34] <DaveMethvin> The case sensitivity of document language element names, attribute names, and attribute values in selectors depends on the document language. For example, in HTML, element names are case-insensitive,  ...
[14:49:51] <DaveMethvin> meaning they are punting back to html5 and the links i sent should apply
[14:50:03] <Wilto> Woah, woah.
[14:50:22] <Wilto> Hm.
[14:50:43] <DaveMethvin> so that's saying you can do A{HREF="something"] and its like a[href="something"]
[14:51:08] <DaveMethvin> but the quoted string part, well that's a different thing
[14:51:16] <Wilto> “except for parts that are not under the control of Selectors.”
[14:51:17] <Wilto> Gotcha.
[14:51:25] <DaveMethvin> i have escaped!
[14:51:26] <Wilto> I’ve never run into this with qSA, though.
[14:51:37] <DaveMethvin> really?
[14:51:45] <Wilto> Granted, I don’t use a lot of (any) all caps anything.
[14:51:51] <Wilto> Because it’s two thousand and twelve.
[14:51:51] <DaveMethvin> WHY NOT?
[14:52:00] <Wilto> Lemme see…
[14:52:19] <DaveMethvin> honestly, did someone just have their caps lock key busted on and report this?
[14:52:36] <Wilto> .NET writes uppercase markup.
[14:52:51] <DaveMethvin> well, .NET is a .ASS then
[14:52:51] <Wilto> Or whatever that crazy-ass editor is what uses it.
[14:52:55] <Wilto> NO LIE
[14:53:43] <DaveMethvin> this seems like it would be a pretty strange bug to try and patch
[14:53:47] <_|Nix|_> I'd love to find out what percent of all HTML out there is uppercase ...
[14:53:53] <DaveMethvin> clearly we don't want case-insensitive checks on everything
[14:54:39] <Wilto> http://jsfiddle.net/pFHRn/1/
[14:54:46] <Wilto> Yeah, qSA don’t curr.
[14:54:57] <_|Nix|_> DaveMethvin: I'd say on standard attributes and their values, except for the value of class and the value of id.
[14:55:12] <_|Nix|_> DaveMethvin: Though I'm not sure if id values are case sensitive or not.
[14:55:20] <DaveMethvin> _|Nix|_: sure, we just need a spec reference ...
[14:55:23] <_|Nix|_> DaveMethvin: However, I'm pretty sure class names.
[14:55:31] <_|Nix|_> DaveMethvin: ... are case-sensitive.
[14:55:40] <DaveMethvin> right
[14:57:43] <Wilto> Hm. https://github.com/jquery/sizzle/blob/master/sizzle.js#L383
[14:58:44] <Wilto> `if ( !xml ) { name = name.toLowerCase(); }` seems to match up with that spec; if HTML, handle things case insensitively.
[14:58:51] <Wilto> if XML, lol.
[15:00:03] <_|Nix|_> That's attribute name, but we also need the same for attribute values, except for data-* attributes and id(?) and class.
[15:00:41] <Wilto> Eh, yeah.
[15:00:42] <DaveMethvin> right but we need a reason
[15:00:56] <DaveMethvin> we can't go off chaning code Wilto-nilto
[15:01:00] <DaveMethvin> changing*
[15:01:03] <Wilto> I dunno; we can kick this back to them. I’m just not HEY
[15:01:29] <DaveMethvin> we just need a standard that tells us what to do
[15:01:41] <Wilto> Anyway; I dunno. qSA doesn’t care, but I dunno what the mysterious spec in question mandates.
[15:01:48] <_|Nix|_> DaveMethvin: If Sizzle wants to be like CSS, then there's your reason.
[15:02:00] <DaveMethvin> link?
[15:02:13] <DaveMethvin> as long as there is a spec we are following
[15:02:17] <DaveMethvin> i just can't find a reference
[15:02:40] <Wilto> DaveMethvin: I mean, I done it in http://jsfiddle.net/pFHRn/1/ ; scrolling through specs now.
[15:02:55] <Wilto> I dunno if this is on us or what, still. Just figure it’s worth being able to point to something in either case.
[15:02:58] <_|Nix|_> DaveMethvin: http://www.w3.org/TR/CSS2/selector.html
[15:03:10] <_|Nix|_> DaveMethvin: Looking for something more specific within that page.
[15:03:17] <DaveMethvin> CSS TWO? 1999 called and they want their spec back :D
[15:03:28] <snover> DaveMethvin: what are you looking for
[15:03:42] <DaveMethvin> snover: http://jsfiddle.net/thayes/SQyXc/1/
[15:03:46] <Wilto> BUUURN
[15:04:00] <Wilto> Hey snovington.
[15:04:04] <_|Nix|_> DaveMethvin: Oh, sorry ..
[15:04:11] <DaveMethvin> browsers are treating the type attr case-insensitively
[15:04:13] <_|Nix|_> DaveMethvin: I just googled quickly.
[15:04:15] <DaveMethvin> looking for a spec ref
[15:04:44] <Wilto> “All Selectors syntax is case-insensitive within the ASCII range (i.e. [a-z] and [A-Z] are equivalent), except for parts that are not under the control of Selectors.”
[15:04:51] <Wilto> I think that’s it.
[15:05:08] <DaveMethvin> which parts are those?
[15:05:15] <snover> there *are* things in css that are case-sensitive.
[15:05:19] <Wilto> qSA references Selectors Level 4, and it’s insensitive about the attribute value.
[15:05:25] <DaveMethvin> yeah like class values
[15:05:25] <Wilto> snover: Yeah; paths and font names and whatnot.
[15:05:49] <DaveMethvin> so something must say "this attribute value is case insensitive"
[15:05:52] <DaveMethvin> but i can't find a reference
[15:05:57] <Wilto> “under the control of Selectors” leads me to believe that the value isn’t included.
[15:06:02] <snover> attribute names and tag names are case-insensitive for html only
[15:06:07] <snover> because it’s html
[15:06:14] <Wilto> Let me make sure qSA not carin’ is consistent in a bunch of browsers.
[15:06:14] <DaveMethvin> right, but the values?
[15:06:26] <snover> values are values and shouldn’t be coerced afaik
[15:06:29] <snover> however
[15:06:36] <snover> html5 does likely define certain ones as being case-insensitive
[15:06:41] <_|Nix|_> DaveMethvin: http://www.w3.org/TR/css-2010/#css2
[15:06:42] <snover> just as it defines certain attributes as empty
[15:06:58] <Wilto> Firefox and Opera too (whatever “Opera” is). cc miketaylr
[15:07:03] <snover> so I would recommend checking out the html5 attribute appendix
[15:07:20] <snover> http://www.w3.org/TR/html5/section-index.html#attributes-1
[15:07:27] <_|Nix|_> DaveMethvin: CSS2 is OK, as long as it's not broken according to 2.1
[15:07:29] <snover> DaveMethvin: ^
[15:07:40] <snover> “case-sensitive”, “case-insensitive”, etc.
[15:07:59] <Wilto> “Except where otherwise stated, string comparisons must be performed in a case-sensitive manner.”
[15:08:13] <DaveMethvin> yeah
[15:08:16] <snover> “If an enumerated attribute is specified, the attribute's value must be an http://www.w3.org/TR/html5/infrastructure.html#ascii-case-insensitive match for one of the given keywords that are not said to be non-conforming, with no leading or trailing whitespace.”
[15:08:31] <DaveMethvin> snover: i think that would be it
[15:08:33] <DaveMethvin> specified
[15:08:34] <Wilto> Ah-hah.
[15:09:04] <DaveMethvin> holy crap
[15:09:08] <DaveMethvin> that's a nightmare
[15:09:20] <Wilto> HOORAY SPECS
[15:09:38] <DaveMethvin> specified attributes only
[15:09:42] <snover> I wouldn’t say definitively that a CSS selector should follow those rules, bz seems to know everything about everything
[15:09:46] <snover> so
[15:09:48] <Wilto> …More or less than 50% of attributes?
[15:09:48] <snover> axe him perhaps
[15:10:04] <snover> at least as far as why a browser would treat <input type="FOO"> and <input type="foo"> the same
[15:10:11] <snover> the html5 spec defines it such
[15:10:18] <DaveMethvin> well they do seem to do that
[15:10:26] <DaveMethvin> at least qSA does
[15:10:40] <Wilto> snover: Where was “If an enumerated attribute is specified, the attribute's value must be an http://www.w3.org/TR/html5/infrastructure.html#ascii-case-insensitive match for one of the given keywords that are not said to be non-conforming, with no leading or trailing whitespace?”
[15:11:05] <snover> Wilto: http://www.w3.org/TR/html5/common-microsyntaxes.html#enumerated-attribute
[15:11:23] <Wilto> DaveMethvin: I dunno if qSA does it with specifically insensitive attr, or just across the board.
[15:11:43] <DaveMethvin> well classes and ids are definitely case sensitive
[15:11:46] <DaveMethvin> right?
[15:11:52] <DaveMethvin> classes for sure
[15:12:08] <snover> yes
[15:12:15] <DaveMethvin> so for all the specified attrs in that appendix we'd need to lowercase them
[15:12:21] <DaveMethvin> but the other ones, not
[15:12:26] <_|Nix|_> DaveMethvin: The type for the value of ID is defined as "Text*"
[15:12:35] <_|Nix|_> DaveMethvin: ... in http://www.w3.org/TR/html5/section-index.html#attributes-1
[15:13:11] <Wilto> DaveMethvin: CONFIRMED. http://jsfiddle.net/pFHRn/2/
[15:13:21] <Wilto> Gross.
[15:13:32] <Wilto> I blame myself for mentioning any of this.
[15:13:39] <DaveMethvin> like, accesskey is case sensitive
[15:13:46] <Wilto> I… I understand if I’m not invited to the jQuery Christmas Party anymore.
[15:13:53] <_|Nix|_> DaveMethvin: Correct me if I'm wrong, but you need to lowercase all values of those attributes whose value type is defined to be an enum.
[15:13:55] <DaveMethvin> and i ain't even past the a's
[15:14:15] <DaveMethvin> _|Nix|_: right, a "specified" value
[15:14:29] <DaveMethvin> so like, autocomplete
[15:14:33] <DaveMethvin> ON and on should work
[15:14:39] <DaveMethvin> or On or On
[15:14:49] <DaveMethvin> or maybe even "Yeah"
[15:14:56] <DaveMethvin> not sure about the last one
[15:15:41] <_|Nix|_> DaveMethvin: That's another potential nightmare. Does the spec say anything about "true" === "yes" === "confirmed" === "absolutely" === "you betcha" === "on" === ...
[15:15:58] <DaveMethvin> boolean attributes are cool, they are just the presence of teh attr
[15:16:04] <DaveMethvin> so no problem with them
[15:16:09] <DaveMethvin> it's these damn specified atttrs
[15:16:21] <Wilto> We just loop through every letter in the alphabet one at a time, a few dozen times— aw yeah I guess that works too.
[15:16:43] <DaveMethvin> like, the title attr comparison should be case SENSITIVE
[15:17:06] <Wilto> Gross.
[15:17:09] <DaveMethvin> as Han Solo said, "I've got a bad feeling about this"
[15:17:18] <Wilto> Wanna just pretend we never brought this up?
[15:17:22] <Wilto> i was never here
[15:17:26] <Wilto> where are my smokebombs
[15:17:29] <DaveMethvin> conveniently, i have to leave
[15:17:36] <Wilto> CLASSIC METHVIN
[15:17:43] <DaveMethvin> DAMMIT WILTO
[15:17:58] <DaveMethvin> oh and DAMIT _|Nix|_
[15:18:00] <Wilto> Yeah; I dunno man. We got a bug open; we can pick it up Monday or whatever. This is kind of a mess, though.
[15:18:19] <DaveMethvin> "please press your caps lock key before typing" done
[15:18:25] <Wilto> ?cc
[15:18:26] <bot-t> CASE CLOASED >: |
[15:18:46] <DaveMethvin> ok gotta go, don't say bad things b/c i will see them in the scrollback
[15:18:53] <DaveMethvin> oh and thanks snover!
[15:19:02] <Wilto> Yes, thanks snover.
[15:19:06] <_|Nix|_> Thanks!
[15:19:11] <_|Nix|_> ... and sorry!
[15:19:49] <snover> DaveMethvin: actuallyyyyyyyyyyyyyy, there are boolean attributes that are *not* just specified
[15:19:59] <Wilto> Welp, on that note, I’m gonna go get drun^H^H^H^H^H^H^H^H read a book.
[15:20:01] <snover> like several of the ones that came from microsoft
[15:20:24] <snover> like autocomplete
[15:20:31] <snover> and contenteditable
[15:20:55] <snover> andddddd translate
[15:21:01] <Wilto> dammit snover
[15:22:17] <snover> then there are the oldie-proprietary iframe attributes…
[15:22:24] <snover> frameborder anyone?!
[15:22:35] <snover> 1|0|no|yes
[15:22:40] <snover> so good.
[15:22:42] <snover> love web platform.
[15:22:53] <_|Nix|_> *head = bullet;
[15:30:11] <Wilto> ⌘Q
[15:30:15] <Wilto> Good game, guys.
[15:31:06] <Wilto> Anyway, I gotta bail. To be continued on Monday.
[16:37:38] <gnarf> mikesherov: did you see the convo ^^^ RE: CLA & grunt & PR processing ?
[16:38:13] <mikesherov> some of it
[16:38:14] <mikesherov> recap?
[16:38:25] <mikesherov> is it about authors.json?
[16:38:38] <gnarf> um, we want to get it tied into the gdata on the actual submission form
[16:38:50] <gnarf> not sure if anyone stepped up to writing it tho
[16:39:25] <mikesherov> heh
[16:39:33] <mikesherov> let me get mergeatron running on sqlite first
[16:39:38] <mikesherov> then I'd gladly do it
[16:39:43] <mikesherov> just got a lot on my plate ATM
