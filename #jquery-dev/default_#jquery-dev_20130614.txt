[08:39:05] <doesallmagic2> Project jQuery Migrate Core 1.x build #78: STILL UNSTABLE in 3 min 56 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%20Core%201.x/78/
[11:25:23] <fivetanley> Is there anybody at jqcon I can talk about measuring performance with? Ideally in some automated fashion.
[11:31:50] <snover> https://github.com/theintern/intern/pull/25 coming soon
[11:32:16] <fivetanley> oh my, that would be insanely useful
[11:32:20] <fivetanley> any idea if it works with qunit?
[11:32:49] <snover> https://github.com/theintern/intern#comparison
[11:33:19] <snover> i‚Äôm sure that somehow you could combine qunit and benchmark.js
[11:33:33] <snover> but then you would miss all those other things too
[12:09:07] <JamesMGreene> Hey snover, what do you mean by "Extensible test interfaces" on your Intern comparison table?
[12:10:15] <snover> I mean if you want BDD, it gives you BDD. If you want TDD, it gives you TDD. If you want something basic like an object-based registration, you can do that. If you want something completely different, you can write your own interface that has whatever methods you want on it.
[12:10:39] <snover> You don‚Äôt have just the One True Interface with which to register tests.
[12:11:27] <JamesMGreene> Hmm, yeah, I think I see what you mean (looking at the Mocha docs)
[12:20:10] <JamesMGreene> In fairness, the only interface extensions for Mocha are specific to Node
[12:20:14] <JamesMGreene> Not sure on Buster or Intern
[12:20:42] <JamesMGreene> I have such a hard time with Mocha and its divergent Node vs browser interfaces
[12:21:02] <JamesMGreene> Love using it but that makes it SOOOO confusing on what capabilities you can actually use
[12:21:40] <snover> use intern instead :)
[12:22:22] <snover> there‚Äôre many reasons why we didn‚Äôt just take something existing and meddle with it
[12:22:30] <snover> and it is things exactly like what you just described
[13:36:00] <dcherman> snover: out of curiosity, do you know of any repos on github that use theintern for in-browser tests that i can use as an example?  trying to get some basic tests running w/ angularjs, but failing horribly at the moment
[13:55:24] <snover> dcherman: https://github.com/bitpshr/intern-tutorial
[13:55:55] <snover> dcherman: https://github.com/theintern/intern-examples
[13:56:36] <dcherman> snover: sweet, thanks
[13:58:46] <JamesMGreene> snover:  >=/  `with (tdd) {`
[14:02:35] <snover> don‚Äôt make me link you to one of angus‚Äôs talks
[14:09:44] <JamesMGreene> snover: Feel free
[14:10:18] <JamesMGreene> All I know if the gist of what it does, plus the fact that it's been banished in ES5+... "SyntaxError: Strict mode code may not include a `with` statement"
[14:11:23] <m_gol> JamesMGreene: ugh, where's this with stuff?
[14:11:59] <JamesMGreene> In snover's https://github.com/theintern/intern-examples repo
[14:12:42] <m_gol> ah, this: https://github.com/theintern/intern/wiki/Writing-Tests#tdd
[14:12:56] <JamesMGreene> The use of it makes sense if the users just want to avoid having to type `tdd.suite(` instead of `suite(` but it makes me sad to continue seeing it used in modern JS
[14:13:00] <m_gol> I'd like to see the angus talk you're talking about, snover
[14:13:22] <m_gol> though I seriously doubt anything can convince me `with` is a good idea, like, anywhere
[14:13:47] <doesallmagic2> Project QUnit build #319: SUCCESS in 2 min 4 sec: http://jenkins.jquery.com/job/QUnit/319/
[14:14:24] <m_gol> yeah, instead of `tdd.suite()` you write `with (tdd) { suite() }`, what a gain :P
[14:14:43] <JamesMGreene> https://twitter.com/BrendanEich/status/68001466471817216
[14:15:09] <m_gol> you're also excluding yourself from ES6 modules & classes in this way, they'll have implicit strict mode
[14:16:44] <snover> https://speakerdeck.com/anguscroll/break-all-the-rulez
[14:17:45] <snover> if you want to type more, feel free to type more. I type more. i don‚Äôt care if other people want to type less. it doesn‚Äôt harm anything.
[14:19:47] <m_gol> the thing is - yes, it does cause harm
[14:20:00] <snover> not in this context
[14:22:22] <snover> Q. is this production code? A. no, it‚Äôs unit tests. Q. how many times is this code going to be executed? A. exactly once, when the test runs. Q. do you have to use it? A. no, but it‚Äôs convenient. Q. what do other testing frameworks do? A. pollute global scope. *that* sounds better.
[14:26:24] <m_gol> the thing is, it's in examples
[14:26:26] <m_gol> it shouldn't
[14:26:46] <m_gol> you should really, really, really know what you're doing when using such things
[14:26:54] <m_gol> and examples are read be regular people
[14:27:25] <m_gol> and they later move those practices to other things because they don't fully understand consequences
[14:27:31] <m_gol> which is evil
[14:28:14] <snover> says the guy that works on a library that sets jQuery.fn = jQuery.prototype and then assigns everything to jQuery.fn :)
[14:29:30] <m_gol> what's so bad about fn?
[14:31:05] <snover> it‚Äôs successfully fleeced an entire generation of javascript developers into thinking jQuery, and jQuery.fn, is some sort of magic
[14:31:12] <snover> it‚Äôs not magic. it‚Äôs prototype.
[14:31:29] <snover> and *that* was done‚Ä¶ to be able to type a little bit less.
[14:33:24] <m_gol> well, making people not realizing jQuery.fn === jQuery.prototype isn't really comparable to making people use `with` without understanding consequences IMHO
[14:33:44] <snover> who‚Äôs ‚Äúmaking‚Äù people do something?
[14:34:49] <m_gol> s/making/fleecing/g
[14:34:53] <m_gol> let it be :P
[14:55:34] <rwaldron> Looks like I missed a seriously awesome conversation
[15:00:33] <m_gol> haha
[15:01:15] <m_gol> rwaldron: so, what does a TC39 member has to say about all that? ;)
[15:02:06] <rwaldron> I think JamesMGreene made an incorrect statement, but it's sort of a nit pick
[15:02:18] <rwaldron> with is not banished in ES5+
[15:02:26] <rwaldron> it's banished in strict-mode
[15:02:48] <rwaldron> (which of course, only came to exist in ES5)
[15:03:05] <rwaldron> I think snover is totally right though
[15:03:18] <rwaldron> but I'd argue: please not in an example
[15:03:22] <rwaldron> with() {} is fine
[15:03:36] <rwaldron> in fact, all your template engines probably use it
[15:03:55] <rwaldron> they all stole John's micro-templating pattern anyway
[15:04:18] <rwaldron> except for mine, but it doesn't allow anything more then replacement identifiers
[15:17:26] <m_gol> yeah, my main gripe is about it being in an example
[15:20:36] <JamesMGreene> Agreed with m_gol
[15:21:59] <JamesMGreene> `jQuery.fn = jQuery.prototype` is bared in the source code, which a significantly smaller percentage of people will look at compared to the percentage that will look at examples
[15:22:10] <JamesMGreene> bared = buried
[15:23:20] <JamesMGreene> Basically I'm saying:
[15:24:14] <JamesMGreene> snover: as someone who has a great working knowledge of the language, I would encourage you to think about the repercussions of encouraging the less experienced to use the `with` statement
[15:24:53] <m_gol> JamesMGreene: as for jQuery.fn, I assume that's exaclty what snover meant, that it's buried and people use jQuery.fn.pluginName without realizing it's on the prototype
[15:27:09] <JamesMGreene> Perhaps but they're not necessarily doing any damage there
[15:28:05] <m_gol> that's what I meant; not knowing that jQuery.fn === jQuery.prototype doesn't really cause any damage in people's code
[15:28:15] <m_gol> as opposed to using `with`
[15:28:18] <JamesMGreene> right
[15:28:22] <m_gol> in client-side code
[15:36:30] <snover> In consideration of noobs reading these examples‚Ä¶people that are fresh enough at JavaScript that they‚Äôve never heard ‚Äúdon‚Äôt use `with` it‚Äôs evil!!!!‚Äù a million times are going to be in one of two camps: 1. ‚Äúunit tests? I don‚Äôt know what this is. Probably not important. Back to dollar-land!‚Äù. 2. they‚Äôll fuck something else up that‚Äôs a lot more important anyway.
[15:36:31] <snover> :)
[15:36:56] <snover> so I am not really concerned about somehow propagating bad advice
[17:26:17] <jqcommit> 01[13testswarm01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/d6IVUw
[17:26:17] <jqcommit> 13testswarm/06master 14493e105 15Timo Tijhof: ProjectAction: Mention correct id-pattern in description...
