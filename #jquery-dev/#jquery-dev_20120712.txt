[06:21:49] <scott_gonzalez> ?tell mikesherov I wasn't suggesting to keep a ticket open. I was wondering if we should choose one as the "master" ticket and close the others as duplicates of it.
[06:21:50] <bot-t> scott_gonzalez, Okay.
[06:37:27] <DaveMethvin> .
[06:56:02] <sizcommit> [sizzle] dmethvin pushed 1 new commit to master: http://git.io/JzCGgg
[06:56:02] <sizcommit> [sizzle/master] Have to use typeof so oldIE won't call getAttribute. - dmethvin
[07:00:42] <gibson042> DaveMethvin: did the non-typeof code error? I specifically tested an oldIE and it looked safe
[07:01:10] <DaveMethvin> gibson042: yeah, but it's stranger than that even
[07:01:23] <DaveMethvin> i am getting two fails when i run the sizzle unit tests
[07:01:44] <DaveMethvin> but when i update the submodule and run jquery selector tests, no problem
[07:01:56] <DaveMethvin> i'll let jenkins be the judge
[07:02:14] <DaveMethvin> i suspect there was some caching issue
[07:02:23] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/K1ZjhA
[07:02:23] <jqcommit> [jquery/master] Update Sizzle to fix oldIE erroneous getAttribute invokification. - Dave Methvin
[07:02:33] <DaveMethvin> it happened to me on ie8 twice where i thought i wasn't fixing it but it was the old version cached
[07:03:29] <DaveMethvin> my mantra lately is "jQuery 2.0, jQuery 2.0, ...." it brings me serenity :)
[07:03:51] <gibson042> :)
[07:04:46] <DaveMethvin> looks like that fixed it http://swarm.jquery.org/job/241
[07:05:09] <gibson042> yeah, checking testswarm shows that it failed for *XML* documents, which I didn't test
[07:05:25] <gibson042> we should add that to the Sizzle suite too
[07:10:42] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/hmIvPA
[07:10:42] <jqcommit> [jquery/master] Followup on #10791: "[class~=foo]" is better. Closes gh-858. - Richard Gibson
[07:15:12] <Krinkle> /whois jzaefferer
[07:15:13] <bot-t> (24 hours 10 mins ago) <gnarf> tell Krinkle Are the browserstack/testswarms still doing a retry count on failed tests? I'm noticing that we have some intermittent failures in our suite that would probably "fix" themselves if they were allowed to run a second or third time... Didn't know if this still happened or not.
[07:16:09] <Krinkle> gnarf: Not related to testswarm-browserstack. The addjob takes a runMax parameter, if that is set to > 1 then it should still be retried, yes.
[07:16:25] <Krinkle> jzaefferer: "support" in the issue tracker was not for "adding support in the software" but for support inquiries, like "help".
[07:16:33] <Krinkle> (which is what it has been used for so far)
[07:16:40] * Krinkle renames labek
[07:16:55] <jzaefferer> Krinkle: I don't know what you're referring to
[07:17:16] <Krinkle> I thought you added the label "support" to https://github.com/jquery/testswarm/issues/216
[07:17:17] <socialhapy> ★ Issue #216 on testswarm (jzaefferer; 20h, 25m ago): Add support for Mocha
[07:17:24] <Krinkle> since you created it, and nothing else was in it.
[07:17:53] <Krinkle> I swapped it for enhancement like the others and renamed support to label.
[07:18:00] <jzaefferer> ah, that one
[07:18:05] <jzaefferer> alright
[07:26:22] <jq-jenkins> Project jQuery Core build #248: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%20Core/248/
[07:26:23] <jq-jenkins> dave.methvin: Update Sizzle to fix oldIE erroneous getAttribute invokification.
[07:52:07] <jq-jenkins> Project jQuery Core build #249: STILL FAILING in 25 min: http://swarm.jquery.org:8080/job/jQuery%20Core/249/
[07:52:08] <jq-jenkins> dave.methvin: Followup on #10791: "[class~=foo]" is better. Closes gh-858.
[08:44:07] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/DTVSlw
[08:44:07] <jqcommit> [jquery/master] Update to QUnit 1.9.0 - Dave Methvin
[09:01:02] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/2UuJZw
[09:01:02] <jqcommit> [jquery/master] Image location is relative to css file, not html file. - Dave Methvin
[09:03:11] <jq-jenkins> Project jQuery Core build #250: STILL FAILING in 18 min: http://swarm.jquery.org:8080/job/jQuery%20Core/250/
[09:03:11] <jq-jenkins> dave.methvin: Update to QUnit 1.9.0
[09:11:52] <DaveMethvin> failing smailing
[09:11:58] <DaveMethvin> schmailing*
[09:14:03] <gnarf> Krinkle / jzaefferer - do you know if we are using runMax > 1 ??  I think we should at least have 2 or 3 retries on a failed test
[09:14:28] <Krinkle> gnarf: Check either node-testswarm-config.json or the grunt files
[09:14:31] <Krinkle> its in one of thos
[09:14:43] <Krinkle> the node config is on swarm01, the grunt files are in the repos
[09:14:51] <Krinkle> it calls testswarm({ runMax: .. }) in grunt.js
[09:15:02] <Krinkle> I'm at a conference now, can't check.
[09:15:06] <gnarf> k
[09:23:11] <gnarf> jzaefferer Krinkle just increased runMax from 2 to 3 to see if it gives us more stable jQuery builds
[09:23:30] <Krinkle> gnarf: it doesn't affect jenkins builds
[09:23:37] <Krinkle> never did
[09:24:05] <gnarf> in the sense that some of these reds showing up in core are "intermittent" timeout based fails
[09:24:06] <Krinkle> jenkins stops polling as soon as node-testswarm receives a complete job summary
[09:24:25] <Krinkle> inside testswarm re-runs are a hack that amend the job afterwards.
[09:24:34] <gnarf> and testswarm reports a job that has a red, but still has retries as "fail" ?
[09:24:34] <Krinkle> so it will affect the /job pages, but not Jenkins.
[09:24:53] <gnarf> that seems wrong ^^^
[09:24:56] <Krinkle> because Jenkins gets the job summary once it has been complete and then the build Jenkins is done
[09:25:11] <jzaefferer> if the job is still red in the end is doesn't matter anyway
[09:25:20] <jzaefferer> afaik that's the case right now
[09:25:33] <jzaefferer> until its not green eventually, the jenkins status doesn't matter
[09:25:36] <Krinkle> that a client is getting the same run again after the job is ready and alters the database to amend it is fine, but Jenkins can't go back in time and report a different status.
[09:25:45] <Krinkle> just saying :)
[09:26:03] <gnarf> Krinkle: but it could report the first red as a "still waiting" because it will hand it out again
[09:26:07] <Krinkle> jzaefferer: If you suspect a re-run related issue you can trigger it manually
[09:26:07] <jzaefferer> I'm not sure what we're dealing with...
[09:26:09] <gnarf> this seems like what it should be doing
[09:26:12] <Krinkle> log in to testswarm and double-click the table cell
[09:26:15] <Krinkle> it'll reset it
[09:26:18] <Krinkle> worth a shot
[09:26:22] <Krinkle> let me know if that works
[09:26:27] <gnarf> Krinkle: hrm, thats nice
[09:26:43] <Krinkle> you have to make sure not to click the anchor link (watch the cursor)
[09:26:48] <Krinkle> its a little ugly, but works :)
[09:27:52] <gnarf> here is a good example: http://swarm.jquery.org/job/243
[09:28:03] <gnarf> there was an effects fail in opera 12
[09:28:35] <gnarf> the job right after it: http://swarm.jquery.org/job/245
[09:28:38] <gnarf> no failure
[09:28:52] <gnarf> something in the "timing chain" on that test on opera failed
[09:28:58] <gnarf> in 243
[09:29:18] <gnarf> the test blew up, but - it should have been retried before it was considered "failed"
[09:29:47] <gnarf> I really think we should make the testswarm report a job that has failed, but hasn't yet met its max retries as "still waiting"
[09:30:21] <Krinkle> obviously
[09:30:23] <gnarf> so that node-browserstack still runs a browser for it, and that jenkins doesn't report early
[09:30:33] <Krinkle> browserstack does run a browser for it
[09:30:35] <Krinkle> or should
[09:30:40] <Krinkle> node-browserstack isn't related
[09:30:44] <Krinkle> nor is testswarm-browserstack
[09:30:47] <gnarf> okay :)
[09:30:49] <Krinkle> we need to fix this in testswarm
[09:30:53] <Krinkle> re-runs is a hack right now
[09:31:00] <Krinkle> well, not really.
[09:31:34] <Krinkle> it just hasn't been brought to the new system yet
[09:31:34] <gnarf> it just doesn't delay the "yup, its bad" reporting
[09:31:37] <gnarf> which it should :)
[09:31:56] <gnarf> Krinkle: do you already have an issue for it, or should I create one?
[09:34:04] <jq-jenkins> Project jQuery Core build #251: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%20Core/251/
[09:34:05] <jq-jenkins> dave.methvin: Image location is relative to css file, not html file.
[09:36:12] <gnarf> looks like only the IE8 offsets inside the iframe issue remains http://swarm.jquery.org/job/245
[09:36:17] <Krinkle> gnarf: there is now
[09:36:17] <Krinkle> https://github.com/jquery/testswarm/issues/217
[09:36:18] <socialhapy> ★ Issue #217 on testswarm (Krinkle;  ago): Re-runs should be part of the main job flow
[09:36:27] <gnarf> Krinkle: thanks! :)
[09:38:02] <gnarf> Krinkle: added a comment more to get the update on the issue and throw in an idea :)
[09:38:31] <Krinkle> gnarf: it currently yellow during in-progress
[09:38:39] <Krinkle> then turns red for fail
[09:38:42] <gnarf> aha
[09:38:48] <gnarf> so you said that anyway
[09:38:49] <gnarf> ;)
[09:38:51] <Krinkle> then turns in-progress again as soon as the re-run starts
[09:39:01] <gnarf> oh well - now I'll get updates on the issue ;)
[09:39:19] <Krinkle> so if Jenkins' poll gets around while its red, it'll mark it complete.
[09:40:07] <Krinkle> anyway, I'll probably make it faded red with the clock icon in the GUI
[09:40:12] <Krinkle> and in the API return in-progress
[09:40:28] <Krinkle> (Jenkins, and by extend, node-testswarm, uses the API now)
[09:47:10] <gnarf> red + clock makes sense
[09:49:59] <socialhapy> ★ Tweet from jquerymobile: Announcing jQuery Mobile 1.1.1 FINAL - improved transitions on long pages + Cordova, form tweaks, lots of fixes - http://t.co/ao2Ampqb ★ http://bit.ly/LijRW6
[09:51:02] <socialhapy> ★ Tweet from jquerymobile: Announcing jQuery Mobile 1.1.1 FINAL - improved transitions on long pages + Cordova, form tweaks, lots of fixes - http://t.co/2TShJ3MT ★ http://bit.ly/Mnfsij
[10:02:58] <scott_gonzalez> gnarf: https://github.com/jquery/jquery-color/compare/manifest
[10:03:07] <scott_gonzalez> Let me know if that looks good to you.
[10:03:36] <scott_gonzalez> We'll need to add it to the release process, whatever that will be.
[10:08:08] <jq-jenkins> Project jQuery Core build #252: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%20Core/252/
[10:16:27] <DaveMethvin> i have a feature request for the jq-jenkins messages
[10:16:50] <DaveMethvin> if there are a lot fewer fails than the previous runs it should say NOT FAILING AS BADLY
[10:22:36] <scott_gonzalez> DaveMethvin: If the number of fails increaes should it say "You suck even more." ?
[10:23:08] <DaveMethvin> GETTING WORSER
[10:23:23] <DaveMethvin> GOING DOWNHILL
[10:23:32] <DaveMethvin> hey maybe the message should be random
[10:25:38] <scott_gonzalez> We could compile a list of crazy jQuery bashings and have it pick from that :-)
[10:25:54] <scott_gonzalez> "jquery is just ease javascript and many other bad things happen u dum"
[10:26:03] <scott_gonzalez> "i dont hate u but i hated what u made"
[10:26:50] <DaveMethvin> rename jq-jenkins to david_mark and we have a deal
[10:27:03] <scott_gonzalez> :-)
[10:27:58] <scott_gonzalez> The success message could then be "Tests are passing, but you're still an idiot for using jQuery."
[11:18:01] <i-hate-dave> Project jQuery Color build #52: SUCCESS in 3 min 19 sec: http://swarm.jquery.org:8080/job/jQuery%20Color/52/
[11:18:01] <i-hate-dave> Scott González: Added grunt task to generate manifest file.
[11:18:31] <ajpiano> looool
[11:18:39] <ajpiano> i figured that was jenkins in disguise
[12:04:10] <DaveMethvin> hating me isn't so bad, but taunting me with a SUCCESS on another project? U N F O R G I V E A B L E !
[12:04:57] <gf3> Hahahaha
[12:12:36] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/H-1VhQ
[12:12:36] <jqcommit> [jquery/master] Fix #11397. Shush Firefox warning by re-breaking #6932 for BB 4.7. - Dave Methvin
[12:22:21] <DaveMethvin> scott_gonzalez: have you been able to run ie6 thru browserstack lately?
[12:22:30] <scott_gonzalez> Let me try.
[12:22:37] <DaveMethvin> the browser starts for me but crashes to a black screen
[12:23:00] <scott_gonzalez> Works fine for me.
[12:23:42] <DaveMethvin> strange
[12:23:51] <DaveMethvin> can you load a page?
[12:24:40] <DaveMethvin> yeah it's working for me now as well
[12:24:46] <DaveMethvin> just loaded  yahoo.com and clicked around
[12:24:49] <DaveMethvin> it was crashing before
[12:25:02] <scott_gonzalez> :-/
[12:25:09] <DaveMethvin> nm :D
[12:32:07] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/UU8umg
[12:32:07] <jqcommit> [jquery/master] Revert "Fix #11397. Shush Firefox warning by re-breaking #6932 for BB 4.7." - Dave Methvin
[12:32:22] <DaveMethvin> nope, i still can't run unit tests in ie6 tho
[12:43:12] <i-hate-dave> Project jQuery Core build #253: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/253/
[12:43:13] <i-hate-dave> dave.methvin: Fix #11397. Shush Firefox warning by re-breaking #6932 for BB 4.7.
[12:47:32] <scott_gonzalez> DaveMethvin: They seem to be running in TestSwarm.
[12:47:57] <DaveMethvin> yeah, that's how i saw the problem with the commit i backed out :/
[12:48:21] <DaveMethvin> but for some reason when i run our unit tests, the screen just goes black a few seconds after it starts
[12:48:47] <DaveMethvin> hmmm, flash was bothering me today, maybe i need a flash update
[12:49:04] <DaveMethvin> because you know, a flash update always makes things better, yeah
[12:49:12] <scott_gonzalez> :-P
[13:13:36] <i-hate-dave> Project jQuery Core build #254: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/254/
[13:13:37] <i-hate-dave> dave.methvin: Revert "Fix #11397. Shush Firefox warning by re-breaking #6932 for BB 4.7."
[13:27:34] <rwaldron> DaveMethvin yt?
[13:27:37] <rwaldron> https://github.com/jquery/jquery/pull/859/files#r1153472
[13:27:38] <socialhapy> ★ Pull request on jquery by dmethvin (1h, 58m ago): Move .toggle(fn, fn, ...) to deprecated.js.
[13:27:40] <DaveMethvin> yep
[13:28:00] <DaveMethvin> sup rwaldron
[13:29:11] <rwaldron> link above ^^
[13:29:33] <DaveMethvin> yeah already replied :D
[13:29:43] <rwaldron> oh, i hadnt seen yet
[13:29:52] <DaveMethvin> it's gonna need more work
[13:29:57] <DaveMethvin> deprecated needs to be last
[13:29:57] <rwaldron> ugh
[13:30:09] <rwaldron> last?
[13:30:14] <DaveMethvin> last on the file list
[13:30:20] <DaveMethvin> right now it's the first optional module
[13:30:22] <rwaldron> we can enforce that
[13:30:29] <rwaldron> with code
[13:30:32] <rwaldron> not really
[13:30:35] <rwaldron> more  like..
[13:30:37] <rwaldron> with rules
[13:30:41] <rwaldron> one sec.
[13:30:55] <DaveMethvin> i just wonder if it was put there to make the code work out right with less editing
[13:30:59] <DaveMethvin> b/c it did so for me
[13:31:11] <DaveMethvin> but it will leave a bigger mess once we remove the deprecated items
[13:31:40] <DaveMethvin> for example the deprecated .toggle(fn,fn) is the FIRST toggle defined and the other two duck punch it
[13:31:41] <rwaldron> I put that there for no reason at all
[13:31:56] <rwaldron> so, it can move
[13:31:59] <rwaldron> I think?
[13:32:15] <DaveMethvin> i'll move it
[13:32:43] <rwaldron> if you want to enforce css first, add: needs: ["css"]
[13:32:43] <DaveMethvin> this will be cleaner anyway
[13:33:03] <rwaldron> but I guess that will just include css
[13:33:16] <DaveMethvin> well, like, effects needs css
[13:33:28] <DaveMethvin> so in my case, css does the first duck punch for toggle
[13:33:28] <rwaldron> soo...
[13:33:34] <rwaldron> ugh
[13:33:36] <rwaldron> annoying.
[13:33:42] <DaveMethvin> but if effects is there it punches it a second time!
[13:34:03] <rwaldron> wow.
[13:34:05] <DaveMethvin> the good thing is, i didn't have to handle css missing but effects there
[13:34:19] <DaveMethvin> but now, the RIGHT way to do this is to make deprecated last
[13:34:30] <rwaldron> that's fine though
[13:34:31] <DaveMethvin> that way it will do a final punch for the deprecated stuff
[13:34:32] <rwaldron> right?
[13:34:35] <DaveMethvin> just like the plugin would
[13:34:39] <DaveMethvin> yeah
[13:34:49] <DaveMethvin> assuming nothing in deprecated breaks, it's fine!
[13:34:51] <DaveMethvin> :D
[13:35:00] <rwaldron> all that's in there is jQuery.browser and jQuery.sub
[13:35:11] <rwaldron> and we dont even use jQuery.browser
[13:35:13] <DaveMethvin> yeah and neither of those have any deps
[13:35:20] <rwaldron> right
[13:35:42] <DaveMethvin> i just wanted to move a few more items in there before 1.8 solidifies
[13:36:07] <rwaldron> hm, i was just re-reading about downward and upward funarg problems
[13:36:14] <rwaldron> and here i see: "// Save reference to arguments for access in closure"
[13:37:01] <rwaldron> implementing first class function closures in stack-based languages.
[13:37:13] <DaveMethvin> so kinda related, what do you think of getting everyting to work in "use strict" in 1.9?
[13:37:21] <rwaldron> love it.
[13:37:40] <DaveMethvin> i think there was some code in one of the modules that was changing its argumetns array
[13:38:02] <DaveMethvin> or maybe jaubourg took it out, i think firefox was enforcing that even without use strict
[13:38:33] <DaveMethvin> anyway i don't think we have too many places where things would break, i removed a few where we expected this==global
[13:38:40] <DaveMethvin> back in 1.7
[13:39:52] <rwaldron> I've never seen anything that really stuck out
[13:40:01] <rwaldron> we can find out pretty easily
[13:40:11] <rwaldron> just throw "use strict"; in the intro.js
[13:40:54] <rwaldron> hm
[13:41:04] <rwaldron> mostly just need to add some `new` to Sizzle
[13:41:25] <DaveMethvin> yep
[13:41:36] <rwaldron> and to gnarf's Animation constructor
[13:41:38] <DaveMethvin> that also saves a fn call
[13:41:40] <rwaldron> not too shabby
[13:41:46] <rwaldron> yes, indeed
[13:41:57] <rwaldron> brb
[13:42:21] <gnarf> um
[13:42:23] <gnarf> new?
[13:42:48] <gnarf> jQuery.Animation return a {} decorated with methods
[13:42:55] <gnarf> not anything prototyped
[13:43:12] <gnarf> although jQuery.Tween uses prototypes, i believe it also uses new
[13:43:33] <DaveMethvin> yeah how does it know come to think of it?
[13:43:55] <DaveMethvin> it's interesting b/c i added the "new" in Event for perf reasons
[13:54:57] <gnarf> I think I could write data events / in such a way that it was excludable through the deprecated.js code
[13:56:22] <gnarf> we could write a prox type thing like if ( jQuery._deprecated ) { jQuery._deprecated.doSomeExtraStuff( with, these, arguments ); }
[13:56:58] <gnarf> +1 function call on the "deprecated" path - but like it makes the "custom:-deprecated" build way more useful :)
[13:57:12] <gnarf> probably a little bit of file size for each of those too
[14:00:54] <DaveMethvin> yeah i do suspect it will add some bytes, but at least they'll be deprecated bytes :D
[14:02:34] <gnarf> afk a bit again
[14:29:41] <rwaldron> gnarf DaveMethvin i wonder if jshint is set to assume that capitalized functions should be constructors
[14:29:53] <rwaldron> and strict mode won't allow you to call a constructor without new
[14:30:00] <rwaldron> to avoid the "wrong this"
[14:30:15] <DaveMethvin> that must be it, i was thinking it might be looking for "this" in the function
[14:30:26] <DaveMethvin> but there aren't any in Sizzle
[14:30:27] <rwaldron> I think it just makes the leap
[14:30:36] <rwaldron> assumption city
[14:31:09] <DaveMethvin> i hope there is a way to disable that "option" in jshint
[14:32:49] <rwaldron> yep
[14:32:52] <rwaldron> newcap: false
[14:33:04] <rwaldron> DaveMethvin ^
[14:33:19] <DaveMethvin> haha
[14:34:31] <rwaldron> it defaults to newcap: true
[17:08:59] <scott_gonzalez> gnarf: ping
[17:09:24] <gnarf> yes
[17:10:03] <scott_gonzalez> https://gist.github.com/871a3f0c37d7f9cba50a
[17:10:29] <gnarf> hrm
[17:10:31] <gnarf> so thats
[17:10:37] <gnarf> username/repo/ref basically?
[17:11:00] <scott_gonzalez> refresh
[17:11:40] <scott_gonzalez> <username>/<repo>/commit/<branch>  or <username>/<repo>/tag/<tag>
[17:11:57] <gnarf> nice
[17:12:03] <scott_gonzalez> I can use a ref, it'd be easier.
[17:12:12] <gnarf> i mean
[17:12:13] <scott_gonzalez> The only diff would be "heads" instead of "commit"
[17:12:28] <gnarf> heads/master
[17:12:34] <scott_gonzalez> right
[17:12:39] <gnarf> +1
[17:12:45] <scott_gonzalez> ok
[17:12:54] <scott_gonzalez> That simplifies the code a bit.
[17:13:00] <gnarf> is data the raw api data?
[17:13:01] <scott_gonzalez> BTW, this is working :-)
[17:13:06] <gnarf> or does it have useful things?
[17:13:17] <scott_gonzalez> It is right now. I wanted to know what form you want the data in.
[17:13:29] <scott_gonzalez> Let me dump the raw format for you.
[17:14:13] <scott_gonzalez> refresh
[17:16:48] <gnarf> perhaps { commit: data.after, rawAPI: data } and a tag/branch for depending on the refs type?
[17:17:10] <gnarf> cuz like the commit id, and the id of the tag/branch are really all I could see needing
[17:18:31] <scott_gonzalez> ok
[17:20:19] <scott_gonzalez> .toLowerCase() not work good v2? http://bugs.jquery.com/ticket/12075
[17:26:12] <gnarf> "Object does not support this property or method ie9 test"
[17:26:20] <scott_gonzalez> yeah
[17:26:39] <gnarf> only if timmy closes with the bug message translated to chinese
[17:26:53] <gnarf> and we find someone who can read it
[17:27:01] <gnarf> cuz ricks computer didn't do it justice
[17:27:02] <gnarf> :)
[17:30:04] <scott_gonzalez> heh
[17:34:56] <scott_gonzalez> Yikes, namespaced refs.
[17:35:55] <scott_gonzalez> Let me play around with that...
[17:41:07] <scott_gonzalez> gnarf: L152 on https://gist.github.com/871a3f0c37d7f9cba50a#file_namespace.json
[17:41:19] <scott_gonzalez> Why can you not link to a line in a gist?
[17:42:09] <gnarf> scott_gonzalez: i would hope that would come back as branch: "mynamespace/mybranch" in the api
[17:42:39] <scott_gonzalez> Yeah, but you'll need to know to bind to "name/repo/heads/**" not just "name/repo/heads/*"
[17:42:44] <scott_gonzalez> Unless we pick a different delimiter.
[17:42:56] <scott_gonzalez> We could use ::
[17:43:00] <gnarf> but be able to do .on( "scott_gonzalez/temp-jquery-foo/heads/mynamespace/**
[17:43:11] <gnarf> the ** thing is kinda interesting
[17:43:19] <gnarf> not that we use namespaced branches much
[17:43:22] <scott_gonzalez> Yeah, you can do that if we keep / as the delimiter.
[17:43:30] <scott_gonzalez> not much = never :-P
[17:43:38] <scott_gonzalez> Someone did that on a PR once.
[17:43:39] <scott_gonzalez> I was confused.
[17:43:47] <gnarf> i use em sometimes
[17:44:10] <scott_gonzalez> The concept is cool. I didn't realize git had support for namespaces.
[17:44:28] <scott_gonzalez> So I'll keep / since it actually does work out to be useful to bind to a namespaced branch.
[17:44:49] <gnarf> yeah, just note in the API docs that ** is required to match a namespaced branch tho :)
[17:45:04] <scott_gonzalez> But yes, I'll make sure the branch comes through as "mynamespace/mybranch" in the data.
[17:45:14] <scott_gonzalez> Yeah, good point.
[17:45:18] <gnarf> either that
[17:45:20] <scott_gonzalez> docs
[17:45:23] <gnarf> or .replace("*","**")
[17:45:51] <scott_gonzalez> The * and ** are from EventEmitter2
[17:46:08] <scott_gonzalez> https://github.com/hij1nx/EventEmitter2
[17:46:34] <gibson042> .
[18:09:56] <scott_gonzalez> gnarf: https://github.com/scottgonzalez/node-git-notifier
[18:11:07] <scott_gonzalez> Play with that for a bit. I'll write docs once we know that it does what we want.
[18:11:29] <scott_gonzalez> The data is commit, owner, repo, branch/tag, raw
[18:12:01] <scott_gonzalez> The events are /heads and /tags
[18:13:33] <scott_gonzalez> Updated the gist to show all the cases: https://gist.github.com/871a3f0c37d7f9cba50a
[18:28:42] <gnarf> scott_gonzalez: roger
[18:30:35] * gnarf laughs w/ DaveMethvin
[18:30:45] <gnarf> at least you can feel my pain today DaveMethvin
[18:30:54] <DaveMethvin> oh yeah
[18:30:57] <gnarf> I just wrote a multipart/form-data processor
[18:30:59] <gnarf> in jscript
[18:31:08] <DaveMethvin> and  you're still alive?
[18:31:20] <gnarf> yeah - only took me like 3 hours
[18:31:36] <gnarf> but i have a plupload receiver now as well
[18:31:39] <gnarf> :)
[18:32:21] <scott_gonzalez> DaveMethvin: !
[18:32:39] <DaveMethvin> scott_gonzalez: ?
[18:32:45] <scott_gonzalez> Did you see what I did for the budget?
[18:32:53] <DaveMethvin> no not yet
[18:33:01] <DaveMethvin> i saw that you had talked to todd
[18:33:01] <scott_gonzalez> When is that meeting?
[18:33:15] <scott_gonzalez> Yup, finally got a hold of him.
[18:33:19] <DaveMethvin> like the deadline is the 17th?
[18:33:28] <scott_gonzalez> He's been busy with a release or something :-P
[18:33:39] <DaveMethvin> but i was gonna look at it and figure out what needed to be in our budget vs in the event budget
[18:34:00] <scott_gonzalez> I put an estimate for UI meetings at 1/4 what you had for core meetings.
[18:34:05] <scott_gonzalez> Because of piggy-backing on events.
[18:34:24] <scott_gonzalez> Also, I could fly to Chicago where Kris and Corey live.
[18:34:47] <DaveMethvin> right the piggybacking is going to make it easier on the budget numbers
[18:34:50] <DaveMethvin> but harder to figure out
[18:35:28] <scott_gonzalez> Not sure how often Kris will be in Raleigh, but Red Hat is right near me, so we might be able to piggy-back on his work trips :-P
[18:35:59] <scott_gonzalez> We'd have 0 cost for that :-)
[18:37:08] <DaveMethvin> what i thought i'd do is first map out the meetings/confs we already have, then figure the number of people, and just make sure that the budgeted money is split between dev and events
[18:38:35] <scott_gonzalez> That works.
[23:39:02] <gnarf> ATTN: Purposefully bringing down bugs.jquery.com
