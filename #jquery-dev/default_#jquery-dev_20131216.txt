[07:09:30] <jqcommit> 01[13jquery-release01] 15gseguin pushed 1 new commit to 06issue-9: 02http://git.io/7NXxwg
[07:09:30] <jqcommit> 13jquery-release/06issue-9 146a13712 15Ghislain Seguin: Release: made `complete` a method of `Release`...
[07:40:42] <jqcommit> [13jquery] 15michaelpapworth opened pull request #1459: IE XHR method polyfill (061.x-master...06ie-xhrmethod-polyfill) 02http://git.io/2D5THA
[08:16:12] -wolfe.freenode.net- [freenode-info] please register your nickname...don't forget to auto-identify! http://freenode.net/faq.shtml#nicksetup
[08:37:34] <doesallmagic2> Project jQuery Migrate Core 1.x build #142: SUCCESS in 2 min 23 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%20Core%201.x/142/
[08:44:00] <jqcommit> [13jquery] 15dmethvin closed pull request #1459: IE XHR method polyfill (061.x-master...06ie-xhrmethod-polyfill) 02http://git.io/2D5THA
[08:45:27] <jqcommit> [13jquery] 15dmethvin reopened pull request #1459: IE XHR method polyfill (061.x-master...06ie-xhrmethod-polyfill) 02http://git.io/2D5THA
[08:48:10] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/1ZiVlA
[08:48:10] <jqcommit> 13jquery/06master 14b278d81 15Dave Methvin: Revert "Ajax: Fix #14424. Use ActiveX in IE9+ on local files, close gh-1434."...
[09:01:16] <DaveMethvin> gnarf m_gol mikesherov rwaldron timmywil gibson042 jaubourg _markelog meeting time!
[09:05:03] <doesallmagic2> Project jQuery Core build #1022: STILL FAILING in 16 min: http://jenkins.jquery.com/job/jQuery%20Core/1022/
[09:05:03] <doesallmagic2> Dave Methvin: Revert "Ajax: Fix #14424. Use ActiveX in IE9+ on local files, close gh-1434."
[09:39:47] <jqcommit> [13jquery] 15dmethvin closed pull request #1446: IE8 Bugfix - JavaScript Error "Object doesn't support this property or method" (061.x-master...061.x-master) 02http://git.io/5oEgxw
[09:44:20] <jqcommit> [13jquery] 15dmethvin closed pull request #1421: Reduced size by reordering variable declarations (06master...06size-reduction) 02http://git.io/G8mpqw
[09:45:30] <jqcommit> [13jquery] 15dmethvin reopened pull request #1421: Reduced size by reordering variable declarations (06master...06size-reduction) 02http://git.io/G8mpqw
[09:53:59] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/WrDRQQ
[09:53:59] <jqcommit> 13jquery/06master 14b8d0d54 15Chris Antaki: Reduce size by reordering variable declarations...
[10:01:20] <m_gol> why do I get a failure mail from Google after each comment I post on crbug.com? :/
[10:02:02] <jqcommit> 01[13testswarm01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/CHFH-w
[10:02:02] <jqcommit> 13testswarm/06master 14de124c0 15Scott GonzÃ¡lez: README: Fixed link to license
[10:02:08] <doesallmagic2> Project jQuery Core build #1023: STILL FAILING in 8 min 19 sec: http://jenkins.jquery.com/job/jQuery%20Core/1023/
[10:02:09] <doesallmagic2> richard.gibson: Reduce size by reordering variable declarations
[10:04:13] <_markelog> gibson042: hey
[10:04:56] <gibson042> hey _markelog
[10:05:01] <_markelog> why do we test Sizzle with jQuery?
[10:05:32] <gibson042> basically to make sure that the jQuery overrides don't break it
[10:07:08] <_markelog> like selector-sizzle module?
[10:07:29] <gibson042> e.g., we used to redefine Sizzle.attr and wanted to confirm that it wasn't breaking selector logic
[10:08:06] <m_gol> we don't override anything now
[10:08:21] <gibson042> yeah, I'm seeing that too
[10:08:23] <m_gol> ah, we do one thing
[10:08:28] <m_gol> jQuery.expr = Sizzle.selectors;
[10:08:28] <m_gol> jQuery.expr[":"] = jQuery.expr.pseudos;
[10:08:41] <gibson042> that's not an override, though, just a shortcut
[10:08:47] <m_gol> right
[10:09:24] <_markelog> soo, right now there is no reason to not to test them separately?
[10:09:31] <m_gol> Sizzle tests are really slow on IE6 & IE7
[10:09:55] <_markelog> we have some hacks in order to Sizzle test work with jQuery testsuite
[10:10:05] <gibson042> it looks to me like Sizzle is mature enough for us to drop them
[10:11:03] <gibson042> any future changes could manifest independently in the jQuery tests
[10:11:15] <_markelog> i want to go futher with it - we talked about using karma for jQuery Core, i could start with Sizzle instead as it easier to implement
[10:11:42] <gibson042> ok
[10:11:46] <_markelog> DaveMethvin: thoughts?
[10:22:42] <_markelog> gibson042: https://github.com/jquery/jquery/pull/1458#discussion_r8374465
[10:22:46] <_markelog> did you publish it?
[10:22:53] <gibson042> yes
[10:23:47] <_markelog> hm
[10:23:48] <_markelog> $ npm view grunt-compare-size version
[10:23:48] <_markelog> 0.4.0-rc.3
[10:23:55] <_markelog> and https://npmjs.org/package/grunt-compare-size
[10:24:05] <_markelog> still 0.4.0-rc.3
[10:25:40] <gibson042> hmmm
[10:27:31] <m_gol> _markelog: 0.4.0 for me
[10:27:39] <m_gol> you must be hitting on some cache
[10:28:20] <_markelog> i thought that too, but it still old version on npmjs
[10:29:05] <m_gol> npmjs is cached as well
[10:29:10] <m_gol> I always see delays there
[10:29:54] <_markelog> alrighty i will wait then
[10:30:03] <_markelog> gibson042, m_gol: thanks
[10:30:24] <m_gol> _markelog: try `npm cache clean`
[10:31:42] <_markelog> no luck
[10:32:03] <m_gol> weird
[10:53:08] <timmywil> DaveMethvin: Sorry, I had a company lunch. I've skimmed the meeting logs. As for my tickets, I think we said we wanted to wait on changing behavior for :hidden/:visible, which moves two tickets to 1.12/2.2. As for the other two, I'll try to get to them today.
[11:18:26] <markelog> timmywil: ping
[11:18:48] <timmywil> hi
[11:20:36] <markelog> i talked with gibson042 about moving Sizzle tests from the jQuery testsuite and make them separate
[11:20:43] <markelog> what your take on that?
[11:25:07] <markelog> timmywil: /
[11:26:21] <timmywil> markelog: The selector tests in the jQuery repo are in the jQuery repo because they are only expected to pass when Sizzle is plugged into jQuery
[11:29:14] <timmywil> Although I'd be fine with moving all of the attribute selector tests over to Sizzle since we moved all of jQuery's attribute handling into Sizzle.
[11:31:13] <markelog> selector tests - you meant â€“ https://github.com/jquery/jquery/blob/master/test/unit/selector.js
[11:31:33] <timmywil> yea
[11:31:50] <timmywil> is that not what you were talking about?
[11:32:28] <markelog> and not https://github.com/jquery/jquery/blob/master/src/sizzle/test/unit/selector.js
[11:33:03] <markelog> i meant https://github.com/jquery/jquery/blob/master/src/sizzle/test folder
[11:33:37] <timmywil> oh, you mean you don't want to run Sizzle tests?
[11:33:43] <markelog> we have to jump through the hoops for those tests to work, i wounder if we should
[11:33:45] <markelog> yeah
[11:34:08] <markelog> could we run them as stand alone project
[11:34:09] <markelog> ?
[11:34:33] <timmywil> we have run into inconsistencies in the past where some Sizzle tests fail after injection into jQuery. Running them in the jQuery suite prevents those issues.
[11:35:24] <timmywil> I agree we have to jump through hoops, but I think it is worth it.
[11:35:43] <markelog> that's happen because of the jQuery overrides right?
[11:36:08] <timmywil> We have slowly separated the dependencies for running those tests (such as running the Sizzle tests with Sizzle's text fixture)
[11:36:38] <timmywil> markelog: it's happened for different reasons as jQuery's overall structure has changed
[11:37:46] <markelog> so you think it could happen again?
[11:38:04] <timmywil> I doubt it, but I feel safer knowing those tests are there.
[11:38:14] <markelog> okay :-)
[11:38:24] <markelog> timmywil: we talked about using karma for jQuery Core, i could start with Sizzle instead as it easier to implement
[11:38:49] <timmywil> ooooo, sounds good to me!
[11:39:07] <timmywil> the only tests I'm curious about are the ajax tests, but we
[11:39:10] <timmywil> 'll get to that
[11:39:18] <markelog> i think we already could do that
[11:39:32] <markelog> karma could have proxies
[11:39:37] <timmywil> brb
[11:40:34] <markelog> so we can start two servers: karam and with our ajax handles
[11:40:55] <markelog> and karma could proxy those requests to our server
[11:41:18] <markelog> i didn't yet try it, but it looks it might work
[11:42:12] <timmywil> cool! I'd be interested to see the solution. I could use something similar in future projects
[11:45:58] <markelog> timmywil: alrighty i hope i will make PR for sizzle on this weekend
[13:18:21] <dcherman> out of curiosity, is http://bugs.jquery.com/ticket/14605 something that might be considered for an upcoming release?
[13:22:18] <DaveMethvin> dcherman not for 1.11/2.1 which is coming out soon, but maybe for 1.12/2.2?
[13:22:40] <DaveMethvin> we're looking at refactoring $.ajax into different apis and it might go in one of htose
[13:22:41] <DaveMethvin> those
[13:22:51] <DaveMethvin> the $.ajax api will be there forever of course
[13:23:01] <DaveMethvin> but it's so big it's unwieldy
[13:23:41] <DaveMethvin> and now that ES6 has defined a standard Promise API we would probably want to move towards that for the new stuff
[13:29:55] <dcherman> ya, that'll be interesting.  if i remember right, sync XHR kills "normal" promises since thye're inherently async
[13:30:16] <dcherman> but i guess my question is - should i bother working on a PR, or hold off and see what comes out of any design decisions?
[13:30:54] <DaveMethvin> i would wait ... not sure whether we'll continue to pile new stuff into $.ajax or try to wean people to $.xhr and $.jsonp
[13:32:55] <dcherman> ok, tks
[14:21:45] <DaveMethvin> very useful way to check deps! https://david-dm.org/jquery/jquery#info=devDependencies&view=table
[14:35:03] <scott_gonzalez> DaveMethvin: Yes, but the badges seem useless for projects with pinned versions.
[14:35:52] <DaveMethvin> it's mainly a nice way to look at versions, i don't need no steeenkin badges
[14:36:01] <jqcommit> [13testswarm] 15Krinkle closed pull request #292: inject.js: fixed minor typo in comment: surpressed -> suppressed (06master...06patch-3) 02http://git.io/jxBkIg
[14:36:03] <scott_gonzalez> Yes, it's useful for that.
[14:36:08] <scott_gonzalez> It's been around for a while.
[14:39:43] <scott_gonzalez> I've never looked at the tree view before. What's this amazing animated graph built with?
[14:41:53] <jqcommit> [13testswarm] 15agcolom opened pull request #294: job.js: minor change to comment: bound -> be bound (06master...06patch-5) 02http://git.io/c0fWnQ
[14:42:57] <scott_gonzalez> Ah, it's a dendrogram from D3.
[14:43:48] <scott_gonzalez> Nope, it's a collapsible tree layout (they look so similar!)
[14:55:11] <m_gol> DaveMethvin: there is also a `david` npm package by the same folks
[14:55:18] <jqcommit> [13jquery-release] 15agcolom opened pull request #13: README.md: minor typo (06master...06patch-1) 02http://git.io/AeP_8Q
[14:55:55] <DaveMethvin> with a name like that it's got to be good!
[14:56:03] <m_gol> :)
[14:56:54] <m_gol> DaveMethvin: what do you think the final situation with $.xhr & $.ajax will be? Will they both be available by default for eternity with $.ajax possible to be excluded via a build step?
[14:58:36] <DaveMethvin> that's a good topic for San Diego! maybe initially a shim for both that just calls $.ajax and then eventually their own implementation in a custom build
[14:58:53] <DaveMethvin> and then in 3.0 we include those by default with a shim for $.ajax
[14:58:58] <DaveMethvin> something like that
[15:04:00] <DaveMethvin> so that's where timmywil was https://twitter.com/timmywil
[15:04:34] <timmywil> ;)
[15:04:55] <timmywil> actually gotta run and have a drink with our new boss. bbl
[15:04:59] <DaveMethvin> if instagram was worth a billlion, quickcue must have been worth TWO billion!
[15:05:09] <DaveMethvin> you owe us a beer timmywil
[15:05:22] <DaveMethvin> congrats
[15:05:27] <timmywil> thanks :)
[15:06:22] <m_gol> congratulations, timmywil!
