[01:28:41] <gnarf> random maybe stupid question
[01:28:49] <gnarf> is it safe to $.each( arguments ) ?
[04:25:48] <jaubourg> hey
[04:33:07] <gnarf> hey hey
[04:46:14] <gnarf> jaubourg: maybe you know the answer to my earlier question - is it safe to $.each( arguments ) ?
[04:56:39] <jaubourg> should be iirc
[04:57:04] <jaubourg> hang on... I don't remember if we control if the param is an array or "array-like"
[04:58:18] <jaubourg> yep, safe
[04:58:45] <gnarf> jaubourg: awesome
[04:59:39] <gnarf> jaubourg: deferreds rock
[04:59:42] <gnarf> https://github.com/jquery/jquery-ui/pull/154 :)
[04:59:54] <gnarf> https://github.com/gnarf37/jquery-ui/commit/9cf109d88a8568e2975740a9b4265c36b83d393d (better view)
[05:03:36] <jaubourg> hehe
[05:04:10] <gnarf> jaubourg: the $.when.apply( $, arrayOfPromises ) might get a little annoying
[05:04:13] <gnarf> :)
[05:04:45] <jaubourg> yeah, I will add some helpers in ajaxHooks for Deferreds methinks
[05:04:56] <jaubourg> I'd like to have a deepWhen
[05:05:28] <gnarf> jaubourg: i was pretty happy with that map -> promise tho
[05:05:48] <jaubourg> $.deepWhen( { prop: 24, defProp: $.Deferred(...) } ).done(function( value ) { /* value == { prop: 24, defProp: resolveValue } */ });
[05:06:00] <gnarf> mmm
[05:06:06] <jaubourg> would work for arrays and all
[05:08:09] <gnarf> i just realized part of that commit is silly
[05:08:16] <gnarf> no need to split into 3 functions
[05:12:36] <jaubourg> time to fix this ;)
[05:13:41] <gnarf> https://github.com/gnarf37/jquery-ui/commit/2dcf72315141752ceb3e9813bffd53cf5655ebf9 already did ;)
[05:50:15] <matjas> jzaefferer: O HAI
[08:10:02] <tbranyen> jzaefferer: i list in the readme only works on linux atm
[08:10:03] <tbranyen> :-/
[08:10:15] <tbranyen> libcwiid limitation
[08:10:27] <tbranyen> i want to fork it and patch in the os x bluetooth headers tho
[09:03:46] <drecute> how can I slide a jquery slider automatically? http://codepad.org/NCodjOmk
[09:15:10] <JohnResig> hey everyone - are we still on for 1.6.1 final release today?
[09:16:35] <timmywil> sounds good to me
[10:02:08] <AaronDCampbell> JohnResig: Where should I watch to see the announcement as soon as possible?  Here?
[10:02:20] <AaronDCampbell> *announcement of 1.6.1 release
[10:11:47] <timmywil> AaronDCampbell: It will take some time to get on the google cdn, but you'll see it get tagged in here
[10:12:15] <AaronDCampbell> thanks timmywil
[10:14:27] <timmywil> np
[10:21:12] <danheberden> AaronDCampbell you can also follow jqcommit on twitter if you'd like to follow commits that way
[10:24:40] <gnarf> or watch blog.jquery.com for releases / notes ;)
[10:37:27] <JohnResig> timmywil: are we clear on tests?
[10:37:52] <timmywil> JohnResig: I'll run em again
[10:38:18] <JohnResig> cool - thanks!
[11:00:34] <timmywil> JohnResig: all good
[11:00:53] <timmywil> JohnResig: remember to make ;)
[11:05:35] <JohnResig> timmywil: haha, sure ;) - and thanks!
[11:05:47] <timmywil> np
[11:22:47] <sean`> hiya
[11:33:19] <timmywil> jrburke: quick question.  So I'm trying to use jQuery with require, but load jQuery from the cdn.  I've got it to the point where sometimes it tries to load locally and sometimes it doesn't.  Perhaps I should set a different path?
[11:35:18] <timmywil> Ah, looks like that worked
[11:36:11] <timmywil> well that's pretty hot
[11:39:17] <JohnResig> are we ok just using the same release notes from RC 1?
[11:39:21] <JohnResig> not much else has changed
[11:46:12] <timmywil> JohnResig: nodeName, nodeType, and tagName can't be get/set with attr anymore (even though that was never really supported).  perhaps a note about that?
[11:47:08] <JohnResig> timmywil: true, hmm
[11:53:11] <RWhitbeck> JohnResig we were going to explain the data- reversions as discussed yesterday.
[11:57:04] <JohnResig> RWhitbeck: what did we want to cover again?
[12:01:22] <RWhitbeck> JohnResig: yesterdays relevant log https://gist.github.com/969203
[12:02:23] <JohnResig>  I guess I'm not sure how to explain it better than "This will probably work the same as it did in 1.5.2 and you won't notice any difference."
[12:03:07] <RWhitbeck> that's fine but we didn't do that for the RC other then you don't have to change any code but it wasn't clear that you also did intend to say it was for the data- changes in 1.6 as well.
[12:03:21] <JohnResig> ok
[12:03:38] <sunsean> JohnResig: "Now completely backwards compatible. You won't even notice a difference!"
[12:04:54] <jqcommit> jquery: master John Resig * 9fd37b2 (1 files in 1 dirs): Tagging the 1.6.1 release. - http://bit.ly/l4mLbx
[12:05:06] <jqcommit> jquery: master John Resig * b60c856 (1 files in 1 dirs): Updating the source version to 1.6.2pre - http://bit.ly/mqLuy1
[12:13:44] <JohnResig> timmywil: right now I have nodeName, nodeType, tagName, defaultValue, selectedIndex
[12:13:50] <JohnResig> any others that are popular?
[12:14:06] <timmywil> that's about all I can think of
[12:14:20] <JohnResig> how about if someone does .attr("className") ?
[12:14:38] <timmywil> I punch them
[12:14:41] <JohnResig> full list here: http://www.javascriptkit.com/domref/elementproperties.shtml
[12:15:12] <timmywil> jk, className will only work in IE 6/7, but I don't think that's different
[12:15:22] <JohnResig> timmywil: hmm - how about .attr("style")?
[12:15:28] <JohnResig> I think I've seen people use that
[12:15:44] <timmywil> JohnResig: same as before, cssText
[12:15:48] <JohnResig> k
[12:16:02] <JohnResig> timmywil: meaning that it maps to cssText, right?
[12:16:08] <timmywil> yea
[12:16:12] <fode> so in ie7 i am finding that jquery validate will not work with the newest version of jQuery (1.6) it work fine with every thing befor that. Any ideas?
[12:16:30] <JohnResig> fode: upgrade to 1.6.1!
[12:16:42] <timmywil> heh
[12:16:50] <timmywil> and make sure validate is up to date
[12:17:11] <timmywil> we did a change to validate as soon as 1.6 came out
[12:19:05] <fode> when i use the link on the frount page it says that i am down loading 1.6 where do i find 1.6.1 (and i am using 1.8.0 for validate)
[12:20:24] <JohnResig> fode: it was only uploaded about 10 minutes ago :-P
[12:20:57] <fode> ahh that would explain it
[12:22:15] <fode> still where would i find it?
[12:23:39] <RWhitbeck> http://code.jquery.com/jquery-1.6.1.js or http://code.jquery.com/jquery-1.6.1.min.js
[12:28:52] <JohnResig> we're live: http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/
[12:29:06] <JohnResig> waiting on Doug for the homepage update
[12:29:09] <JohnResig> I'm updating download page
[12:29:15] <JohnResig> homepage is up
[12:33:22] <fode>  am still having the problem... my code is here http://pastebin.com/s2zxyCk0
[12:35:17] <JohnResig> ok, tweeted the release - we're all good!
[12:36:23] <fode> it seems to work fine with 1.5.2 but now newer version
[12:37:33] <JohnResig> fode: you should file a bug with a test case (using jsfiddle) so that we can look into it
[12:37:37] <rwaldron> JohnResig did you see this?
[12:37:39] <rwaldron> http://techcrunch.com/2011/05/10/google-chrome-frame-ie-admin/
[12:37:54] <JohnResig> rwaldron: yeah, awesome
[12:37:59] <rwaldron> totally awesome
[12:39:30] <JohnResig> timmywil: does the new table look ok?
[12:39:39] <timmywil> JohnResig: looks great!
[12:39:41] <JohnResig> I added a few properties that people might interact with
[12:44:56] <JohnResig> paul_irish: ok, I can't figure out your google email address
[12:45:03] <JohnResig> paul_irish: it's not paul.irish or pirish
[12:46:24] <fode> http://jsfiddle.net/9kXtu/
[12:46:54] <fode> ok so there is the js fiddle, it works in firefox, but not in ie (which is the problem) is there somthing else i need to do?
[12:46:56] <JohnResig> fode: shouldn't you be using an updated version of jQuery validate?
[12:47:31] <JohnResig> ah, 1.8 seems to be the latest
[12:47:48] <JohnResig> fode: dunno, you should contact Joern
[12:47:49] <timmywil> I don't think he's released the changes
[12:48:06] <timmywil> fode: you're probably better off using the github version
[12:48:34] <timmywil> fode: JohnResig: https://github.com/jzaefferer/jquery-validation/commit/3a42224bf6ffaa51a6fea62b8e154c35b0f271d1
[12:49:05] <fode> your awsome thanks
[12:49:21] <timmywil> fode:  np
[12:49:42] <JohnResig> timmywil: ah yeah, you're right
[12:50:41] <timmywil> JohnResig: occasionally :)
[12:52:28] <timmywil> bug tracker updated to 1.6.1
[12:56:55] <JohnResig> oh cool, thanks
[13:05:07] <timmywil> jdalton: hate to bug you, but can't seem to fine any require users to ask.  I'm trying load jQuery from CDN and have it work even after it's been run through the optimizer.  Problem is, the optimizer puts all of the jQuery plugins above this code http://jsbin.com/awoze5/edit
[13:05:16] <fode> well just checked it in js fiddle seems to still be broken, who did you say i need to contact (on aouther irc, email..)
[13:06:23] <timmywil> did i just ask jdalton? ugh, sry.  unless you know?!
[13:08:32] <timmywil> hrm, maybe I'll just make it blocking
[13:14:00] <sean`> Is there any documentation on why contenteditable is used with attr and not props
[13:18:19] <timmywil> sean`: either can be used
[13:19:10] <sean`> I know, but it's weird that it isn't assigned to prop in the list
[13:19:24] <sean`> refering to the last blog post related to .1.6
[13:19:31] <timmywil> sean`: for simplicity, attr is fine.  Some confuse it with a boolean attribute, which it is not.
[13:20:25] <sean`> hmm, I guess I am confused then
[13:20:31] <sean`> refering to the last blog post related to .1.6:)
[13:20:46] <sean`> err. should be :)
[13:21:47] <timmywil> sean`: which post are you referring to?
[13:21:53] <timmywil> 1.6.1rc1?
[13:22:01] <sean`> http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/
[13:22:33] <timmywil> sean`: looks right
[13:22:53] <sean`> Ah okay, Iaws under the impression it should be listed the same as checked/readonly
[13:23:50] <timmywil> ah yea, that could be confusing.  There was a note in the rc post about contenteditable and draggable being enumerated attributes, not boolean.  Their properties should actually be set to "true" and "false" instead of true and false
[13:24:15] <sean`> correct, it's nto a boolean
[13:24:24] <sean`> https://developer.mozilla.org/en/HTML/global_attributes
[13:27:04] <timmywil> sean`: yea, they get different treatment because of that, but you can do .prop("contentEditable", "true")
[13:27:27] <sean`> yeah, indeed
[13:54:41] <jrburke> timmywil: sorry i was pulled away for a long meeting. if you still have a question about cdn jquery with require give a shout
[13:56:51] <timmywil> jrburke: hey man. :)  So, I made the path for jquery the cdn path and set the priority so I could pull from the cdn and still have it non-blocking
[13:57:10] <timmywil> but the optimizer puts all of the jquery plugins above that path/priority setting
[13:57:59] <jrburke> ah, right, because you are doing all the work in say, a main.js file. Right, unfortunately with the priority setting, you would need to inline the require() call in the HTML page instead of in the main.js
[13:58:20] <jrburke> either that or wrap all the jquery plugins in a define() wrapper with a jquery dependency
[13:58:31] <jrburke> which is probably not realistic
[13:58:36] <timmywil> ah that makes sense
[13:58:57] <timmywil> jrburke: what about setting priority in the app.build.js?
[13:59:30] <timmywil> I guess the optimizer doesn't really care about that
[13:59:39] <jrburke> hmm, does not really help there, the optimizer just looks for dependencies, does not execute full script code (unless it is a plugin)
[13:59:45] <jrburke> right
[14:00:28] <timmywil> jrburke: thanks1
[14:00:32] <timmywil> s/1/!
[14:00:41] <jrburke> timmywil: i'll make a note to update the readme for the https://github.com/jrburke/require-jquery project, it instructs the use of main.js instead of doing the require call in the page
[14:00:47] <jrburke> thanks for pointing out the problem!
[14:01:38] <timmywil> jrburke: my pleasure, keep up the good work
[14:15:24] <timmywil> jrburke: this worked great: http://jsfiddle.net/timmywil/WXKBW/
[14:16:30] <jrburke> timmywil: great. you should be able to just use ['site'] instead ['jquery', 'site']
[14:17:38] <timmywil> jrburke: huh, yea you're right
[14:20:09] <timmywil> jzaefferer: have you noticed anymore issues with validate, 1.6, and IE?
[14:21:39] <timmywil> test suite passes, but 1.6.1 and the github validate don't seem to be happy together on my site.  I'll do some more digging.
[14:55:43] <timmywil> jzaefferer: sorry, works great, took me too long to figure out validate was cached
[14:56:13] <timmywil> that's probably what happened to fode as well
[15:00:41] <timmywil> I am getting that background support problem in IE8 though. jaubourg: how do we fix that thing?  My first thought is just set backgroundImage instead of background, but there must be more going on there.
[16:25:43] <ben_alman> I have a jQuery.param() question https://gist.github.com/969466
[16:28:48] <clarkbox_> makes sense to me... would be useful in a use case or two that i have
[16:39:34] <ben_alman> i think what i'm going to do is reference $.param as $._param then change $.param to sort params (still calling $._param) internally. $.param.sorted will be true by default, but if it's set to false, $.param will just return $._param
[16:42:52] <clarkbox_> or add a parameter to the signature... and fall back to _param if its not present?
[16:43:05] <ben_alman> i'd rather not change the signature
[16:43:13] <clarkbox_> ya
[16:56:47] <clarkbox_> ben_alman still there?
[16:56:55] <ben_alman> hiya
[16:57:10] <clarkbox_> what about this url.com?a[]=1&a[]=2
[16:57:22] <ben_alman> arrays won't be sorted
[16:57:25] <ben_alman> only objects
[16:57:38] <clarkbox_> ah ok
[16:57:46] <ben_alman> my code is a little broken in that it messes up with arrays where numeric indices are specified
[16:57:50] <ben_alman> so i'm trying to deal with that
[17:10:52] <ben_alman> hmmn.. sorting is proving to be very complicated
[17:10:57] <ben_alman> maybe not possible easily
[17:19:31] <gnarf> ben_alman: is the idea to use this gist for just the cache key?
[17:19:47] <gnarf> cuz if so - you could probably sort any way you like so long as it returns the same results
[17:19:49] <ben_alman> it's part of a larger plugin
[17:19:53] <ben_alman> yes
[17:20:03] <ben_alman> so i'm looking @ alphanumeric
[17:20:14] <ben_alman> since that's what Array#sort does by default
[17:20:22] <ben_alman> but it's not that simple
[17:20:29] <ben_alman> i'm trying to work out the exact logic i need
[17:20:29] <gnarf> true
[17:20:41] <gnarf> a[]=2&a[]=1
[17:20:49] <gnarf> a[]=1&a[]=2
[17:20:57] <ben_alman> those are arrays
[17:21:02] <ben_alman> they won't be sorted
[17:21:17] <ben_alman> i can only sort keys of an object
[17:21:24] <ben_alman> so that things don't assplode
[17:22:15] <gnarf> hrm
[17:22:28] <ben_alman> this is riduclously complicated
[17:23:27] <gnarf> deepEqual?
[17:23:51] <ben_alman> i'm trying to not have to fully deserialize it first
[17:24:05] <ben_alman> because that kinda defeats the purpose
[17:24:53] <gnarf> custom .toJSON() that returns a copy keysorted?
[17:25:04] <gnarf> maybe applying itself to children
[17:28:29] <ben_alman> so it looks like i can, easily, do a very basic top-level-keys-only sort
[17:28:49] <ben_alman> but with nested items it gets pretty much impossible to manage via string parsing
[17:29:01] <ben_alman> i'd have to really create a whole new $.param
[17:29:40] <clarkbox_> hm, what about splitting on &, then sort that? and the join it
[17:29:47] <clarkbox_> the*then
[17:29:55] <ben_alman> lol
[17:30:07] <ben_alman> see you guys probably don't understand how complex param strings can get
[17:30:11] <ben_alman> i'll show you an example
[17:31:16] <ben_alman> q[0][]=1&q[0][1][]=0&q[1][0][]=0&q[1][]=1&q[2][0][]=0&q[2][]=1&q[2][2][]=0&q[3][0][0][]=0
[17:31:33] <ben_alman> that represents {q: [[1,[0]], [[0],1], [[0],1,[0]], [[[0]]]]}
[17:31:50] <ben_alman> maybe people won't do this... but it's supported
[17:31:56] <ben_alman> so it had better work
[17:32:31] <ben_alman> or look at http://bit.ly/jQUsIg
[17:33:50] <clarkbox_> whats wrong with this? http://jsfiddle.net/utTm9/
[17:33:56] <clarkbox_> wont the order always be the same?
[17:35:33] <ben_alman> try this
[17:35:34] <ben_alman> {b: [2, 1], a: [4, 3]}
[17:35:56] <ben_alman> "b[]=2&b[]=1&a[]=4&a[]=3"
[17:36:06] <ben_alman> see how it fails
[17:36:12] <ben_alman> there's a LOT of edge cases
[17:36:48] <ben_alman> ?eval "b[]=2&b[]=1&a[]=4&a[]=3".split('&').sort().join('&')
[17:36:49] <bot-t> ben_alman: "a[]=3&a[]=4&b[]=1&b[]=2"
[17:36:50] <clarkbox_> http://jsfiddle.net/utTm9/1/
[17:37:11] <ben_alman> just look @ my example here
[17:37:15] <clarkbox_> ya...
[17:37:20] <ben_alman> the arrays are now our of order
[17:37:30] <ben_alman> just take my word for it, it's non-trivial
[17:37:53] <clarkbox_> ya... im just trying to catch up to where youre at
[17:38:00] <ben_alman> heh
[17:38:21] <ben_alman> might take a while
[17:38:29] <ben_alman> even my unit tests are mind-bending
[17:39:12] <clarkbox_> ummm... http://jsfiddle.net/utTm9/2/
[17:39:42] <ben_alman> that's broken
[17:40:08] <ben_alman> in x2 your a array is backwards
[17:41:05] <clarkbox_> i didnt smoke any crack today man... http://jsfiddle.net/utTm9/3/
[17:41:37] <ben_alman> your x2 a is still backwards
[17:41:45] <ben_alman> plz stop :)
[17:42:20] <clarkbox_> ha ok
[17:45:20] <clarkbox_> k.. but for the purpose of coming up with a cache key... would that not work?
[17:45:36] <ben_alman> what you have would not work
[17:45:42] <ben_alman> simplify it
[17:45:52] <ben_alman> say you have {a:[2,1]}
[17:46:03] <ben_alman> that serializes into a[]=2&a[]=1
[17:46:06] <ben_alman> if you sort that
[17:46:19] <ben_alman> a[]=1&a[]=2 deserializes into {a:[1,2]}
[17:46:22] <ben_alman> which is different
[17:46:28] <ben_alman> it's not equivalent
[17:46:33] <ben_alman> so it's unsuitable
[17:46:40] <clarkbox_> ya, ok got it
[17:46:46] <clarkbox_> duh
[17:47:56] <gnarf> ben_alman: so sort based on everything until = ?
[17:48:06] <gnarf> but then order isn't neccesarily preserved... :/
[17:48:09] <ben_alman> nope
[17:48:15] <ben_alman> no good
[17:48:16] <ben_alman> heh
[17:48:28] <ben_alman> i'm going to try the reverse
[17:48:39] <gnarf> I still think taking an obj representation and keySorting might be the easiest
[17:48:39] <ben_alman> i'm going to attempt to sort the passed object into a new sorted-object
[17:48:43] <ben_alman> then param that
[17:48:49] <ben_alman> and see if it works
[17:48:51] <gnarf> yeah
[17:53:46] <gnarf> hrm
[17:59:54] <gnarf> ben_alman: http://jsfiddle.net/gnarf/7cTSV/ ?
[18:00:56] <gnarf> ben_alman: damn, typo
[18:01:01] <gnarf> http://jsfiddle.net/gnarf/7cTSV/1/
[18:01:25] <ben_alman> yeah i have something similar
[18:02:52] <gnarf> http://jsfiddle.net/gnarf/7cTSV/2/
[18:11:53] <ben_alman> {a: [{e: 4, d: 3}, {c: 2, b: 1}]}
[18:12:01] <ben_alman> i ran into this too
[18:12:08] <ben_alman> even though you don't want to sort arrays
[18:12:12] <ben_alman> you still need to recurse through them
[18:12:17] <ben_alman> in case they contain objects
[18:12:22] <ben_alman> i'm working through that now
[18:26:12] <ben_alman> gnarf, what i have seems to be working
[18:26:21] <ben_alman> but i'm trying to see if i can optimize it
[18:26:32] <ben_alman> without making it unmaintainable
[18:39:35] <ben_alman> i'm a total idiot for trying to sort the already-serialized string
[18:39:38] <ben_alman> this works.
[22:30:16] <clarkbox_> danheberden you around
[22:31:05] <clarkbox_> ajpiano ping
[22:31:13] <ajpiano> sup
[22:31:50] <clarkbox_> yo
[22:31:56] <clarkbox_> you know shit about nginx?
[22:32:22] <ajpiano> yes... i know shit, about nginx :/
[22:32:47] <clarkbox_> k one second.. let me paste a config up
[22:32:53] <ajpiano> i was being facetious
[22:33:00] <ajpiano> i know shit, as in, i know very little,
[22:33:04] <ajpiano> :p
[22:33:09] <RWhitbeck> lol
[22:33:44] <clarkbox_> ah
[22:34:11] <clarkbox_> didnt parse the comma
[22:34:57] <clarkbox_> http://services.jquery.com:7001/
[22:35:06] <clarkbox_> work in progress
[22:35:18] <clarkbox_> you guys mind me setting up this shit?
[22:35:30] <ajpiano> clarkbox_, definitely not mind,
[22:35:38] <ajpiano> this is awesome
[22:36:00] <ajpiano> :)
[22:36:11] <clarkbox_> ya. its simple. but i dont think you want a deep search capability on these logs. it can get creepy
[22:36:23] <ajpiano> amen
[22:36:25] <clarkbox_> i had a buddy who works with splunk help set this up
[22:36:41] <ajpiano> can you filter joins and parts out of the search
[22:36:42] <clarkbox_> https://github.com/docyes/splunk_blaze
[22:36:58] <clarkbox_> ya. only on init
[22:37:03] <clarkbox_> cant query for it
[22:37:34] <ajpiano> gotcha
[22:37:55] <ajpiano> what's the link for the basic regular logs view
[22:38:00] <clarkbox_> http://services.jquery.com:7001/#q=%22buddy%22%20clarkbox
[22:38:05] <clarkbox_> its down right now
[22:38:10] <clarkbox_> im haxoring it
[22:38:16] <clarkbox_> |)
[22:38:36] <ajpiano> omg you h4xor
[22:39:03] <clarkbox_> might not get it back tonight.
[22:39:26] <clarkbox_> ill get logs per chan / stats per chan / link to search on a single page
[22:39:56] <clarkbox_> having trouble getting nginx to proxy the search app with the html folder
[22:40:17] <clarkbox_> i am not very speedy on nginx
[22:42:36] <clarkbox_> real time http://services.jquery.com:7001/#q=clarkbox_%20speed
[22:43:45] <ajpiano> but this is very speedy  on nginx :) :)
[22:44:10] <clarkbox_> yaaa
[22:45:09] <clarkbox_> it will get faster. right now you search on one thread. will have it balanced across multiple backends
[22:45:32] <clarkbox_> port 2001 is actually tornado
[22:45:36] <clarkbox_> er 7001
[22:45:46] <clarkbox_> -7005
[22:46:56] <ajpiano> this stuff is already like way more feature-rich than i imagined it would be so clarkbox_+++
[22:47:16] <clarkbox_> ya its a fun project...
[22:47:39] <clarkbox_> irc like its 1988
[22:48:18] <clarkbox_> burned a few too many work hours tho... need to put it on hold for a few days
[22:49:11] <clarkbox_> and buddy at spunk help me get it running. docyes
[22:49:31] <ajpiano> no problem
[22:49:34] <clarkbox_> youll see his signaure on 7001 http://www.featureblend.com/
[22:49:44] <clarkbox_> thats just his standard app at github
[22:50:08] <clarkbox_> anyway im out! ill keep you posted...
[22:50:14] <ajpiano> word up!
[22:55:54] <StevenBlack> clarkbox_: *very* nice search feature.
[23:00:13] <StevenBlack> I'm guessing mobile-dev, ui-dev, and -meeting are going to want this capability...
[23:03:08] <clarkbox_> ya this is logging all jquery channels
[23:04:41] <StevenBlack> I see that now.  Perfect!
