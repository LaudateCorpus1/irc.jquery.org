[04:10:06] <jqcommit> [qunit] prathe pushed 2 new commits to master: http://git.io/nFdG3A
[04:10:06] <jqcommit> [qunit/master] spelling typo - Joshua Niehus
[04:10:06] <jqcommit> [qunit/master] Merge pull request #311 from jniehus/patch-1 - Philippe Rath√©
[04:19:25] <doesallmagic> Project QUnit build #184: SUCCESS in 9 min 24 sec: http://swarm.jquery.org:8080/job/QUnit/184/
[04:19:26] <doesallmagic> jm.niehus: spelling typo
[04:53:56] <matjas> .join python
[04:54:06] <matjas> lol
[07:01:28] <timmywil> gibson042: ping
[07:01:42] <gibson042> timmywil: pong
[07:02:00] <timmywil> gibson042: just looking at https://github.com/jquery/sizzle/pull/145/files
[07:02:53] <timmywil> I was hoping tokenize would take care of returning a copy of the cached version
[07:03:09] <timmywil> wondering why another slice was needed
[07:03:36] <timmywil> maybe I missed something
[07:04:02] <gibson042> where at in particular?
[07:04:36] <timmywil> in compile and element-rooted QSA
[07:04:57] <timmywil> looks like you are slicing tokenize to make a copy
[07:05:07] <timmywil> but tokenize should be returning a copy anyway
[07:05:18] <timmywil> so maybe tokenize isn't right
[07:05:57] <gibson042> shoot, I missed that part
[07:06:02] <gibson042> it was a red herring
[07:06:05] <gibson042> update forthcoming
[07:07:52] <gibson042> updated
[07:14:20] <timmywil> gibson042: gotcha, thanks man
[07:14:30] <gibson042> np
[07:19:23] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/2kUVqA
[07:19:23] <sizcommit> [sizzle/master] Same selector, new context; do not affect the default token captures in matcherFromTokens. Fixes jQuery bug #12403. - Richard Gibson
[07:37:35] <doesallmagic> Project jQuery Core build #339: FAILURE in 16 min: http://swarm.jquery.org:8080/job/jQuery%20Core/339/
[07:37:35] <doesallmagic> timmywillisn: Sizzle: fix compilation of the same selector with different contexts. Fixes #12403.
[07:48:06] <scott_gonzalez> Note: The $("> elem", context) selector will be deprecated in a future release. Its usage is thus discouraged in lieu of using alternative selectors.
[07:48:09] <scott_gonzalez> Is that still true?
[07:51:11] <timmywil> scott_gonzalez: Where do you see that? I don't think that will ever be removed
[07:51:26] <scott_gonzalez> http://api.jquery.com/child-selector/
[07:51:39] <timmywil> Internally, it's just a shortcut to the find method, but it's used too much to remove.
[07:51:42] <scott_gonzalez> I'll remove the note in the new API repo.
[07:52:35] <timmywil> Oh, I see the point it's making, didn't look at the selector closely.
[07:52:42] <timmywil> Still, that won't stop working
[07:53:10] <scott_gonzalez> I remember John really wanting to get rid of it since it didn't work with qSA.
[07:53:14] <scott_gonzalez> But it's extremely useful.
[07:53:40] <scott_gonzalez> kswedberg: FYI: I updated the repo ^
[07:53:42] <timmywil> it's true that it's an invalid selector, but it does work with QSA because of our element-rooted hack
[07:54:12] <scott_gonzalez> I think there's discussion of it being valid with the proposed Element.find().
[07:54:24] <timmywil> yea I noticed that :)
[07:54:31] <scott_gonzalez> :-)
[07:54:51] <kswedberg> scott_gonzalez: thx
[08:39:28] <ajpiano> do we even have the foggiest clue of what happened to what was at api.jquery.com/browser
[08:39:34] <ajpiano> gnarf: danheberden ?
[08:40:43] <jzaefferer> ajpiano: are you looking for http://api.jquery.com/jQuery.browser/
[08:40:44] <jzaefferer> ?
[08:41:00] <ajpiano> no there was some fancy api browser
[08:41:20] <ajpiano> we have a plan to redirect that and visualjquery.com to jqapi.com but
[08:41:31] <ajpiano> i just don't know what even happened to the thing that used to be there
[08:41:34] <jzaefferer> ajpiano: maybe http://www.youtube.com/watch?v=4esxHSKSUZ4
[08:42:06] <ajpiano> ah yes, that's it
[09:00:01] <ryanneufeld> good morning
[09:38:11] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/JCxmsw
[09:38:11] <sizcommit> [sizzle/master] Make html from assertions xhtml compliant. Fixes jQuery bug #12359. - Timmy Willison
[09:40:05] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/tFQq1g
[09:40:05] <jqcommit> [jquery/master] Sizzle: make html from assertions xhtml compliant. Fixes #12359. - Timmy Willison
[10:00:49] <ryanneufeld> johnbender: yt?
[10:01:22] <ryanneufeld> johnbender: does mitch have a repo for the online docs for vagrant?
[10:02:40] <johnbender> ryanneufeld: I think it lives next to the project but I can't rember if he keeps gh-pages for the rendered version
[10:02:43] <johnbender> ryanneufeld: let me checkj
[10:02:51] <johnbender> ryanneufeld: I assume you want to make a correction/pr
[10:03:01] <ryanneufeld> couple actually :P
[10:03:16] <johnbender> ryanneufeld: docs
[10:03:29] <johnbender> ryanneufeld: he compiles the doc branches and publishes as gh-pages
[10:03:36] <johnbender> ryanneufeld: so you would make the alteration there
[10:03:41] <johnbender> (docs)
[10:03:43] <ryanneufeld> ah
[10:03:47] <ryanneufeld> it's a branch
[10:03:49] <ryanneufeld> derp
[10:04:18] <ryanneufeld> still getting used to the branching thing, I usually think of branches as "the same code with some changes"
[10:04:37] <johnbender> ryanneufeld: having the docs live along side the project is awkward imo
[10:04:39] <ryanneufeld> seems that the common usage is different
[10:04:46] <johnbender> ryanneufeld: becase I agree with you :D
[10:04:50] <johnbender> *because
[10:05:02] <ryanneufeld> yeah, it seems odd to have a branch for docs
[10:05:08] <ryanneufeld> but meh, I can contrib to that :)
[10:05:09] <ryanneufeld> thanks!
[10:05:12] <johnbender> my blog (which is gh-pages) is compiled and publish by pushing to a seperate repo
[10:05:29] <johnbender> ryanneufeld: np np let me know if you need anything else, and I'm sure mitch will apreciate the help on the docs
[10:05:30] <ryanneufeld> nice
[10:05:40] <johnbender> I don't think _anyone_ contribs there
[10:05:47] <ryanneufeld> I'm happy to help, I'm diggin vagrant
[10:05:52] <johnbender> ryanneufeld: great!
[10:06:01] <johnbender> I would go batshit crazy without it
[10:06:02] <ryanneufeld> gonna use it at home to migrate some sites to VMS
[10:06:15] <johnbender> ryanneufeld: you have been infected my friend
[10:06:16] <ryanneufeld> it's in use @mozilla I thik
[10:06:18] <johnbender> you can never go back :D
[10:06:21] <johnbender> ryanneufeld: yap
[10:06:31] <johnbender> that's on the homepage "in use" graphic I think
[10:06:56] <ryanneufeld> oh yeah, so it is
[10:07:10] <johnbender> ryanneufeld: if we get good use out of it I'll probably ask Dave if it's ok to put jquery up there
[10:07:27] <johnbender> Mitch and I were web devs before we started the project so we've always been jquery fans
[10:07:38] <ryanneufeld> yeah
[10:08:34] <ryanneufeld> gnarf: do you have the link to those conf vids?
[10:09:19] <johnbender> ryanneufeld: jqcon?
[10:09:23] <ryanneufeld> yeah
[10:09:28] <johnbender> http://confreaks.com/events/jqcon2012
[10:09:32] <ryanneufeld> it's yours specifically I'm looking for
[10:09:41] <johnbender> lol awesome
[10:09:49] <johnbender> http://confreaks.com/videos/1009-jqcon2012-faster-jquery-with-category-theory
[10:10:05] <johnbender> beware I have plans to trick DaveMethvin1 into letting me mess up the jquery internals
[10:10:10] <johnbender> that video is inception
[10:10:10] <ryanneufeld> ooh downloads avail
[10:10:10] <ryanneufeld> nice
[10:11:15] <doesallmagic> Project jQuery Core build #340: STILL FAILING in 31 min: http://swarm.jquery.org:8080/job/jQuery%20Core/340/
[10:11:16] <doesallmagic> timmywillisn: Sizzle: make html from assertions xhtml compliant. Fixes #12359.
[10:12:08] <ryanneufeld> looking at the core, makes me sad when I look at my own code :p
[10:14:59] <ryanneufeld> johnbender: it's called a tach-ohm-eter :p
[10:39:49] <rwaldron> DaveMethvin1 after a misstep in debugging I narrowed it down
[10:39:55] <rwaldron> (via bisect)
[10:40:06] <rwaldron> this commit created the issue: https://github.com/jquery/jquery/commit/dd845a2c0f63f97e74e4d490ee66e12e0bf180c5
[10:40:27] <rwaldron> restoring _just_ those two functions passes the test
[10:40:34] <rwaldron> anyway, that's where I'm at
[10:41:14] <ak> hi
[10:46:26] <ryanneufeld> johnbender: I think i need to watch your talk a few times :P
[10:59:20] <DaveMethvin1> rwaldron: i can see that being true, but should jQuery.clean("<p>hello</p>") return an element with a parent of a div? http://jsfiddle.net/3Lng6/
[11:00:43] <DaveMethvin1> ah i see what you mean though
[11:00:53] <johnbender> ryanneufeld: I failed then :(
[11:00:57] <rwaldron> There are a couple of things here
[11:01:00] <DaveMethvin1> it's consistently returned that the parentNode is a div since the beginning of time
[11:01:04] <rwaldron> I need to wrap something up for client work
[11:01:08] <DaveMethvin1> kk
[11:01:14] <rwaldron> and then I'll get back to this in the evening
[11:01:28] <DaveMethvin1> so the before/after change exposed this
[11:01:31] <rwaldron> DaveMethvin1 right, you got it
[11:01:31] <johnbender> ryanneufeld: and yah I bonked on the tachometer :/
[11:01:34] <ryanneufeld> johnbender: don't be sad, I got the gist of it
[11:01:40] <rwaldron> (div since forever)
[11:01:59] <DaveMethvin1> (although that still seems wrong)
[11:02:06] <rwaldron> (agreed)
[11:02:41] <DaveMethvin1> as long as the content is stuffed elsewhere this didn't matter, but once you start dealing with content and disconnected nodes this starts to matter
[11:02:54] <rwaldron> yep
[11:03:11] <rwaldron> and it will take a tricky dance to get around the wrap map crap
[11:03:55] <DaveMethvin1> hmmm,  yeah, so work on your client stuff and we can tawk latah
[11:05:16] <rwaldron> cool
[11:05:33] <ryanneufeld> johnbender: also, I'm working while listening to your talk
[12:04:18] <DaveMethvin1> timmywil gibson042: is there a way we can gracefully deal with this? http://bugs.jquery.com/ticket/12409
[12:05:36] <DaveMethvin1> like, look at function.length and wrap with a conversion function the first time if it is taking args
[12:06:25] <DaveMethvin1> i am not sure how common custom selectors are but i am pretty sure we haven't heard the last of it :D
[12:07:35] <timmywil> DaveMethvin1: not gracefully. Considering we haven't had an explosion of tickets about it, I haven't been too worried.
[12:08:44] <timmywil> I suppose we could fake it so that the 99% of custom pseudos with arguments would have something at match[3]
[12:09:24] <timmywil> it's just not a very good interface for custom pseudos
[12:09:30] <timmywil> I'd rather switch people over
[12:11:14] <DaveMethvin1> might be a good blog post, showing people how to do that
[12:11:48] <timmywil> well, it's in "The New Sizzle", but we could one just for that too
[12:11:55] <DaveMethvin1> also, how to support older versions and newer ones
[12:12:20] <DaveMethvin1> i guess they'd have to look at jQuery.fn.jquery
[12:12:37] <timmywil> nah, just the presence of $.expr.createPseudo
[12:12:55] <DaveMethvin1> feature detect ftw!
[12:15:15] <timmywil> because we compile a function up front, trying to hang on to all of the matches would be gross. It's a completely different methodology for matching
[12:16:09] <timmywil> so I went with breaking an undocumented interface for custom pseudos with arguments rather than trying to be backwards compatible
[12:16:31] <DaveMethvin1> and most custom pseudos do seem to be argless, thankfully
[12:17:14] <DaveMethvin1> honestly the one that people always seem to want is a case-insensitive :contains
[12:51:28] <ryanneufeld> bugs.jquery.com down?
[12:51:51] <ryanneufeld> nope, it's up, but I'm seeing a mysql error http://bugs.jquery.com/ticket/12409
[12:52:02] <ryanneufeld> and now it's gone
[13:08:09] <timmywil> gibson042: what do you think? https://github.com/timmywil/sizzle/commit/8e11032625a6f6d3cf93adb14c678158a9f2868d
[13:09:34] <timmywil> I'm not sure I like it because it adds a call to the stack for all pseudos with no arguments
[13:09:59] <timmywil> It's also not a real fix, just a fake one to stick something in match[3]
[13:11:07] <timmywil> but I guess the argument for it is that it will take care of backwards compatibility for almost all custom selectors with arguments
[13:11:55] <gibson042> it also prevents people from adding our preferred function signatures except through createPseudo, even if they don't take arguments
[13:12:40] <gibson042> eh
[13:13:33] <timmywil> sry, say that another way?
[13:14:18] <timmywil> gibson042: ^^
[13:14:53] <timmywil> you mean we'd need to recommend createPseudo all the time to avoid the extra function call?
[13:15:11] <timmywil> DaveMethvin: we're discussing https://github.com/timmywil/sizzle/commit/8e11032625a6f6d3cf93adb14c678158a9f2868d
[13:15:42] <DaveMethvin> ah a preemptive strike!
[13:16:05] <timmywil> DaveMethvin: My vote is -1 because it adds a call to the stack for pseudos that don't have arguments and it doesn't actually support anything but match[1] and match[3]
[13:16:13] <gibson042> timmywil: this changes forces pseudos added directly (e.g., Sizzle.selectors.pseudos = function(...)) to use the old-style signature, right?
[13:16:19] <timmywil> which is probably fine for like 99.9% of cases but...
[13:17:07] <timmywil> gibson042: ah, yes, but the change is function ( elem ) to function ( elem, useless, match )
[13:17:14] <gibson042> gotcha
[13:17:23] <DaveMethvin> it does seem rather ugly to always have to do that
[13:18:31] <DaveMethvin> i was working on the 1.8.1 release notes and was going to mention the sizzle docs
[13:18:51] <gibson042> so the choice is against adding a function call to the stack for all custom pseudos vs. breaking backcompat for custom pseudos with arguments
[13:19:08] <DaveMethvin> damn gibson042 i hate when you put it that way :D
[13:19:15] <timmywil> gibson042: basically :)
[13:20:21] <DaveMethvin> here lemme look at the code for a sec
[13:20:50] <gibson042> I guess nobody adds a custom pseudo and expects it to be performant
[13:22:21] <timmywil> gibson042: actually, I suppose the signature is changed from function( elem, context ) to function( elem, i, match )
[13:22:29] <DaveMethvin> gibson042: i think most people don't think about performance at all
[13:23:02] <timmywil> I never use context in a custom pseudo, just in certain matchers, like in combinators
[13:24:25] <gibson042> on that note timmywil, I'm pretty sure we need to change the signature of setFilters functions to properly handle compound positionals like :not(:first, :even), and doing so might eliminate the need for context outside of `compile`
[13:25:09] <gibson042> because right now each setFilter returns an array of matches that doesn't track back to the input
[13:25:49] <DaveMethvin> so with the new design, the function either will take one arg or will have sizzleFilter=true and multiple args ... is that right?
[13:28:46] <DaveMethvin> if so, it seems like  you could just do the ugly wrapper if fn.length > 1 && !fn.sizzleFilter
[13:29:36] <DaveMethvin> damn, brb
[13:30:18] <timmywil> DaveMethvin: yea possibly
[13:34:37] <gibson042> DaveMethvin: as of 1.8, markFunction/createPsuedo is used to indicate that the provided function is not itself an element tester, but rather returns one when called with (selector, context, isXML)
[13:35:11] <timmywil> gibson042, DaveMethvin: https://github.com/timmywil/sizzle/compare/master...12409
[13:35:35] <timmywil> removes context as an arg because no one, including Sizzle, uses it
[13:36:09] <timmywil> I'd be alright with this implementation if it works in IE
[13:37:05] <timmywil> seems to
[13:37:10] <gibson042> timmywil: +1
[13:37:59] <DaveMethvin> back
[13:38:14] <DaveMethvin> yeah, that works for me
[13:38:29] <DaveMethvin> and only penalizes the older stuff
[13:38:45] <timmywil> DaveMethvin: exactly
[13:38:52] <timmywil> good thinking on .length
[13:39:21] <DaveMethvin> the first time i'd thought of it being a good thing, usually it's being confused with arrays and strings :)
[13:39:42] <timmywil> yea, I've never used it
[13:40:08] <gibson042> now we only piss off the one guy who implements his custom pseudo with `arguments[<n>]` ;)
[13:40:22] <DaveMethvin> well if oldIE has it, it has to be good (tm)
[13:40:41] <timmywil> DaveMethvin: apple already patented that
[13:40:50] <DaveMethvin> most of these people are copy-pasting from blogs so i think we're save
[13:40:51] <DaveMethvin> safe
[13:41:49] <timmywil> alright, we'll call this done
[13:42:14] <DaveMethvin> well this is nice, I can update the blog post to say we met the requests of our community blah blah
[13:42:37] <timmywil> gibson042: as for compound positionals, I'd call that low priority
[13:42:48] <timmywil> but I agree
[13:43:25] <gibson042> would you consider selectors like `:not(:first[attr])` or `:not([attr]:first)` to be valid?
[13:44:23] <timmywil> heh, killin me smalls
[13:45:05] <gibson042> I really want to roll up handlePOS into select for this ticket, and stuff like that is nightmare fuel
[13:45:54] <gibson042> but doable
[13:47:18] <timmywil> gibson042: has it ever worked correctly?
[13:47:27] <gibson042> I doubt it
[13:47:32] <timmywil> I think the set was filtered immediately before as well
[13:47:32] <gibson042> not on 1.7
[13:48:23] <timmywil> well then, that's why it's low priority. But hey, if we can fix it and hold on to performance, I'm all for it.
[13:48:33] <gibson042> all right
[13:49:49] <gibson042> timmywil: are you willing to land a size reduction commit before I begin work on 12303 in earnest?
[13:50:56] <timmywil> gibson042: yup
[13:52:45] <gibson042> let me know when the queue is clear so I can rebase
[13:53:30] <sizcommit> [sizzle] timmywil pushed 2 new commits to master: http://git.io/7TthEg
[13:53:30] <sizcommit> [sizzle/master] Fix failing test in contains in FF3.6 - Timmy Willison
[13:53:30] <sizcommit> [sizzle/master] Provide backwards-compatibility for creating custom pseudos with arguments. Fixes jQuery bug #12409. - Timmy Willison
[13:54:25] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/5h1c3A
[13:54:25] <jqcommit> [jquery/master] Sizzle: provide backwards-compatibility for creating custom pseudos with arguments. Fixes #12409. - Timmy Willison
[13:55:40] <timmywil> gibson042: as long as testswarm passes, should be good to go
[13:58:48] <Krinkle> oh nice
[14:01:03] <timmywil> I think I do this a lot.
[14:01:07] <timmywil> NO WE CAN'T DO IT
[14:01:12] <timmywil> ok, yes we can...
[14:10:57] <DaveMethvin> timmywil: i've started writing a blog post called "jQuery, Where Every Change is a Breaking Change"
[14:11:07] <timmywil> lol
[14:11:10] <doesallmagic> Yippie, build fixed!
[14:11:11] <doesallmagic> Project jQuery Core build #341: FIXED in 16 min: http://swarm.jquery.org:8080/job/jQuery%20Core/341/
[14:11:11] <doesallmagic> timmywillisn: Sizzle: provide backwards-compatibility for creating custom pseudos with arguments. Fixes #12409.
[14:11:16] <DaveMethvin> SWEET
[14:11:30] <timmywil> boom
[14:11:36] <timmywil> that's right fixed
[14:12:04] <ryanneufeld> ?BOOM
[14:12:04] <bot-t> "Did you are unimpressed? and now?"
[14:12:17] <DaveMethvin> think about it, like 50% of the top 100,000 sites are using this code ... we can change comments and it will break something
[14:12:45] <ryanneufeld> and how many of them are using it in unexpected ways?
[14:12:51] <timmywil> 99%
[14:12:58] <ryanneufeld> like using _data('events')
[14:12:58] <DaveMethvin> optimist right there
[14:13:02] <timmywil> heh
[14:13:13] <ryanneufeld> I'm a realist
[14:13:18] <ryanneufeld> the glass is always full
[14:13:26] <DaveMethvin> it's just like that .outerWidth(Boolean) thing
[14:13:28] <ryanneufeld> might be 1/2 air and 1/2 water
[14:13:31] <ryanneufeld> but it's full!
[14:13:33] <DaveMethvin> no, 1 is not a Boolean
[14:13:41] <ryanneufeld> but it's truthy
[14:13:56] <DaveMethvin> sure but that's not what the docs evar said!
[14:13:56] <ryanneufeld> wait
[14:14:13] <ryanneufeld> that's it! Javascript is a terrible language and lacks strict typing
[14:14:17] <ryanneufeld> so we should't use it anymore
[14:14:28] <ryanneufeld> rewrite jquery in DART
[14:14:29] <gibson042> timmywil: https://github.com/jquery/sizzle/pull/147
[14:14:38] * ryanneufeld ducks
[14:15:09] <DaveMethvin> it's just about impossible for us to change jQuery without breaking something, and sometimes we'll have to back up a bit to ensure that the people with pitchforks and torches don't come knocking at the door
[14:15:36] <DaveMethvin> i think that patch is pretty sweet
[14:22:37] <timmywil> gibson042: <3
[14:22:45] <timmywil> I added some notes, but otherwise awesome
[14:25:55] <gibson042> sweet; thanks
[14:33:01] <ajpiano> gnarf: are you around
[14:41:13] <johnbender> DaveMethvin: I've got kin tomorrow morning to chat if you have time
[14:41:21] <johnbender> like a 15 min skype call
[14:41:23] <johnbender> ?
[14:41:43] <DaveMethvin> johnbender: sure, and some links to CODE! :)
[14:42:01] <johnbender> DaveMethvin: hmmm, let me see if we can produce that
[14:42:02] <DaveMethvin> i'm available most of the day so just ping me
[14:42:05] <johnbender> it's been a _long_ time
[14:42:10] <johnbender> DaveMethvin: thanks, and will to
[14:42:11] <johnbender> *do
[14:42:22] <johnbender> been typing Wilto too much :P
[14:44:03] <johnbender> DaveMethvin: also our jquery-git build is still broken :(
[14:44:13] <johnbender> I have to make a reduced test case though
[14:44:20] <johnbender> I'll do that in a couple minutes
[14:45:08] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/hN8OCA
[14:45:08] <jqcommit> [jquery/master] Update Sizzle: size reduction, -85 bytes - Timmy Willison
[15:08:04] <gnarf> ajpiano: sup
[15:08:43] <ajpiano> i think i'm gonna need a hand in the next day with getting the site onlien for the dc hack
[15:09:02] <gnarf> ajpiano: alright, what do we need to do?
[15:09:47] <ajpiano> at some point, there will be a new event folder in 2012
[15:13:00] <ajpiano> at that point we will just have to flip the switch to make it so events.jquery.org serves that
[15:13:15] <ajpiano> gnarf: on a side note... events.jquery.com used to redirect to events.jquery.org.  now it redirects to jquery.com
[15:13:42] <gnarf> ajpiano: yup
[15:13:52] <ajpiano> can we go back to the old way
[15:13:56] <gnarf> ajpiano: confirm, i can fix that
[15:14:07] <ajpiano> thanks
[15:15:37] <doesallmagic> Project jQuery Core build #342: FAILURE in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/342/
[15:15:37] <doesallmagic> timmywillisn: Update Sizzle: size reduction, -85 bytes
[15:16:18] <gnarf> ajpiano: do you know anything about the current events.jquery.org setup
[15:16:18] <gnarf> ?
[15:16:24] <ajpiano> very little
[15:16:28] <ajpiano> that's why i wanted to give you a heads up now
[15:18:11] <gnarf> ajpiano: do you rememebr if events....com rewrote to events...org or just shared files?
[15:18:27] <ajpiano> i never knew
[15:39:45] <gnarf> ajpiano: i think i fixed events...com now
[15:39:48] <gnarf> it should rewrite to .org
[15:39:52] <gnarf> with a 301
[15:43:35] <ajpiano> gnarf: yup, all good, thanks!
[16:40:03] <johnbender> ?tell DaveMethvin I wanted to double check that his is a valid selector before submitting the exception it generates as a bug (jquery-git) http://jsbin.com/uvoxay/1/edit - check the console for the exception
[16:40:03] <bot-t> johnbender, Okay.
[16:47:29] <gnarf> johnbender: looks valid to me
[16:47:38] <gnarf> johnbender: if it worked before, it should work now
[16:47:39] <gnarf> :)
[16:52:40] <johnbender> gnarf: this test is totally crazytown
[16:52:49] <johnbender> I've got my test case so I'm going to take that out of there
[16:52:56] <johnbender> I think we have one other failure too but I have to double check
[16:53:06] <johnbender> that is, the selector in this test is totally crazytown
[16:53:46] <gnarf> johnbender: there were some selectors broken in UI too
[16:53:58] <johnbender> haha!
[16:54:06] <johnbender> we're not the only crazy ones!
[17:02:51] <johnbender> nevermind, trying to translate that selector into js would be folly :/
