[04:50:05] <jq-jenkins> Project QUnit build #108: SUCCESS in 15 min: http://swarm.jquery.org:8080/job/QUnit/108/
[04:50:59] <jqcommit> [qunit] jzaefferer pushed 1 new commit to master: http://git.io/Swp-ww
[04:50:59] <jqcommit> [qunit/master] Update testswarm dependency - Jörn Zaefferer
[04:54:46] <jqcommit> [qunit] jzaefferer pushed 1 new commit to master: http://git.io/_3_Xpw
[04:54:46] <jqcommit> [qunit/master] Use fixed version to force npm to update via `npm install` - Jörn Zaefferer
[05:06:14] <jq-jenkins> Project QUnit build #109: SUCCESS in 15 min: http://swarm.jquery.org:8080/job/QUnit/109/
[05:06:15] <jq-jenkins> joern.zaefferer: Update testswarm dependency
[05:22:02] <jq-jenkins> Project QUnit build #110: FAILURE in 15 min: http://swarm.jquery.org:8080/job/QUnit/110/
[05:22:02] <jq-jenkins> joern.zaefferer: Use fixed version to force npm to update via `npm install`
[06:04:09] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/U8O3Qw
[06:04:09] <jqcommit> [testswarm/master] useragents.ini: adding FF12, update FF9/FF11 info - Timo Tijhof
[06:10:01] <jqcommit> [testswarm] Krinkle pushed 2 new commits to master: http://git.io/njrejg
[06:10:01] <jqcommit> [testswarm/master] fix bug in scripts/clearJobsAndClients.php, minor cleanup - Timo Tijhof
[06:10:01] <jqcommit> [testswarm/master] Add conf.web.server; use in swarmpath as fullurl option - Timo Tijhof
[06:10:42] <jqcommit> [testswarm] Krinkle force-pushed master from 6597c74 to f3913cd: http://git.io/9_ezCQ
[06:10:42] <jqcommit> [testswarm/master] Add conf.web.server; use in swarmpath as fullurl option - Timo Tijhof
[06:37:13] <Krinkle> jzaefferer: https://github.com/jzaefferer/node-testswarm/pull/2
[06:37:14] <socialhapy> ★ Pull request on node-testswarm by Krinkle (3m, 10s ago): various updates
[06:59:22] <Krinkle> jzaefferer: Can you get me an account on swarm-jenkins? I'd like to check out the settings and stuff
[06:59:27] <Krinkle> (or someone else)
[06:59:50] <Krinkle> I have this account: http://swarm.jquery.org:8080/user/Krinkle
[07:17:10] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/DQMrRw
[07:17:10] <jqcommit> [testswarm/master] Update scripts/addjob/README.md - Timo Tijhof
[07:40:10] <jzaefferer> Krinkle: you can register on Jenkins, then I can give you access to things
[07:40:31] <Krinkle> jzaefferer: I
[07:40:40] <Krinkle> jzaefferer: I've registered as 'Krinkle'
[07:42:57] <jzaefferer> Krinkle: okay, you should have access now
[07:43:06] <Krinkle> thx
[07:45:04] <Krinkle> jzaefferer: lol "Green Balls" is an actual plugin
[07:45:13] <Krinkle> I thought that was the default (maybe it is installed by default)
[07:56:13] <jzaefferer> nope, I installed that. Default colors are weird
[07:56:21] <Krinkle> yeah, agreed :)
[07:56:33] <Krinkle> I don't know any jenkins install that doesn't have it
[07:57:13] <Krinkle> jzaefferer: Can you tell me which http://swarm.jquery.org:8080/pluginManager/installed are worth documenting on  https://github.com/jquery/testswarm/wiki/Automated-Distributed-Continuous-Integration-for-JavaScript ?
[07:57:34] <Krinkle> I mean "CVS Plugin" is not relevant, neither is "Green Balls", but "Git" and "IRC" is
[07:57:40] <Krinkle> which are "used"?
[07:57:49] <jzaefferer> github is used to start builds
[07:57:57] <jzaefferer> git anyway, irc for notifications
[07:58:42] <Krinkle> ant, javadoc, ssh slaves, maven, Translation Assistance Plugin, "testswarmbuilder"
[07:58:46] <jzaefferer> that's all
[07:58:55] <jzaefferer> we don't need any of those
[07:58:56] <Krinkle> none of those
[07:58:58] <Krinkle> ok
[07:59:26] <jzaefferer> ttyl
[09:00:49] <Krinkle> jzaefferer: clarkbox scott_gonzalez https://github.com/jquery/testswarm/wiki/Automated-Distributed-Continuous-Integration-for-JavaScript
[09:03:51] <scott_gonzalez> That looks very jQuery specific.
[09:04:00] <scott_gonzalez> TestSwarm doesn't have any dependencies on Jenkins now does it?
[09:04:12] <Krinkle> I know that, did you read it?
[09:04:58] <scott_gonzalez> No, I was skimming through it and saw Jenkings and BrowserStack listed as prerequisites.
[09:04:59] <Krinkle> the terminology is somewhat specific but should get anyone wanting the same to get there fairly easily
[09:05:12] <Krinkle> and also as documentation for ourself
[09:06:07] <Krinkle> most if not all the modules used here are generic and jquery independant
[09:06:08] <scott_gonzalez> Seems confusing/misleading.
[09:06:34] <Krinkle> Can you be more specific?
[09:07:36] <scott_gonzalez> If I were looking at TestSwarm for the first time, I'd get the impression that I need to use Jenkins, BrowserStack, and node.
[09:07:54] <Krinkle> Mind you this is not the testswarm readme
[09:08:17] <Krinkle> this is specifically the wiki page on how to set it up for large scale _automated_ submission and population of testswarm
[09:08:45] <Krinkle> in that case using Jenkins (or as noted in the page, something else like it that can listen to your svn/git/github/gerrit repo is fine too)
[09:08:47] <scott_gonzalez> Oh, ok, that makes much more sense then.
[09:09:18] <Krinkle> 2-3rd paragraph there under "Prerequisites"
[09:09:18] <scott_gonzalez> Sorry, was looking at it as a getting started guide.
[09:09:24] <Krinkle> nope
[09:09:38] <Krinkle> I've added 'Just getting started with TestSwarm? Check out the README and wiki pages." to the top
[09:09:54] <snover> scott_gonzalez: did evan ever write a thing?
[09:09:55] <scott_gonzalez> Yup, I see that now. Like I said I was just skimming :-P
[09:10:06] <Krinkle> np
[09:10:16] <snover> (touch events)
[09:10:19] <scott_gonzalez> snover: I haven't seen anything.
[09:10:24] <snover> sigh.
[09:10:37] <scott_gonzalez> Did you see the blog post?
[09:10:54] <snover> ‘let me collect my thoughts’, they say. ‘i’ll get back to them’, they say.
[09:10:59] <snover> yes
[09:11:29] <scott_gonzalez> I haven't heard anything from MS about submitting a proposal.
[09:11:37] <scott_gonzalez> The WG has been completely stalled.
[09:11:49] <scott_gonzalez> And Apple continues to file more patents.
[09:12:37] <snover> give apple a break, they are just a tiny company trying to survive in this dog-eat-dog world
[09:19:34] <Krinkle> krinkle-eat-apple
[09:32:22] <rworth> snover indeed http://brendaneich.com/2012/02/mobile-web-api-evolution/#comment-10101 "Despite having billions in the bank, we don’t have the luxury of full-time W3C editors like Hixie and Tab [Googlers]"
[09:54:03] <scott_gonzalez> Trac has been real shitty today.
[10:36:17] <orkel> rwaldron you got a minute?
[11:04:40] <Krinkle> jzaefferer: He did it!
[11:04:46] <Krinkle> Browser Capabilities (project behind the browscap.ini file) went open-source on GitHub!
[11:05:07] <Krinkle> Maybe retweet this on testswarm
[11:05:07] <Krinkle> https://twitter.com/#!/TimoTijhof/status/197385953126531072
[11:05:09] <socialhapy> ★ Tweet from TimoTijhof: Browser Capabilities (project behind the famous browscap.ini file) goes open-source on GitHub! http://t.co/jZBzjwrN https://t.co/j06CpHnP ★ http://bit.ly/Jnk6bh
[11:06:38] <clarkbox> good writeup krinkle
[11:06:56] <Krinkle> thx
[11:20:19] <clarkbox> krinkle. just noticed that swarm.jquery.org is not reporting correctly
[11:20:26] <clarkbox> i have an ie6 and 7 instance open
[11:20:30] <clarkbox> and they are both running tests
[11:20:45] <Krinkle> I think I know what it is
[11:20:45] <clarkbox> but swarm.jquery.org reports 0 pending runs for all browsers
[11:21:03] <Krinkle> You know about test swarm's error-margin recovery feature?
[11:21:10] <clarkbox> ah ok
[11:21:20] <Krinkle> your ie6 and ie7 is re-running old runs that failed and didn't reach runMax yet
[11:21:36] <Krinkle> which will potentially make some runs pass that previously failed
[11:21:37] <clarkbox> maybe we need another stat per browser?
[11:22:21] <Krinkle> I'm not sure
[11:22:43] <Krinkle> we can fix SwarmstateAction to take count failed tests that have runs < max as "pending"
[11:22:53] <Krinkle> -take
[11:23:29] <Krinkle> but that will cause confusing situations as well
[11:23:52] <Krinkle> because if a client is the only client of a browser available, testswarm won't re-run it in the same browser. so then it would never finish
[11:23:53] <clarkbox> i dont mean modify behavior. just report another stat on the home page
[11:24:14] <Krinkle> re-reruns are not required and have the lowest priority, it is was idle clients do
[11:24:15] <clarkbox> and shows the ... backfill number
[11:24:17] <Krinkle> what*
[11:24:42] <clarkbox> ya its all good. we can get to those metrics on the jobs page
[11:25:05] <Krinkle> http://swarm.jquery.org/user/jqueryui
[11:25:06] <clarkbox> the "backfill"
[11:25:33] <Krinkle> yeah, I know that you mean, it is a valid use case. just not sure how or if to show it somewhere
[11:25:33] <clarkbox> the number of tests that could possibly be run. not just all-tests subtract test run
[11:26:11] <clarkbox> minor suggestion. i am sure there are higher priorities.
[11:26:19] <Krinkle> not right now
[11:27:18] <Krinkle> I'll check if I can get the number from the database directly. It depends on whether there is an index on those columns. If there is, I'll add it now. Otherwise, open an issue and we'll see about it later (unindexed queries like this will hold up the home page for too long, or even time out on large swarms)
[11:40:11] <jqcommit> [jquery] rwldrn pushed 1 new commit to 1.8pre: http://git.io/6gdcNg
[11:40:11] <jqcommit> [jquery/1.8pre] jQuery.ajaxSetup() data is merged with params. Fixes #10524 - Oleg
[11:43:56] <orkel> rwaldron are you there?
[11:44:48] <Krinkle> clarkbox: I think I got it
[11:45:06] <clarkbox> nice
[11:45:18] <Krinkle> refresh http://swarm.jquery.org/
[11:45:18] <clarkbox> ya that gives us a good eye on overall health
[11:45:21] <clarkbox> ya i see
[11:45:43] <Krinkle> committed locally and hacked on swarm-01, will undo now and push later tonight
[11:45:46] <Krinkle> dinners calling
[11:46:10] <clarkbox> good stuff man.
[11:46:19] <Krinkle> you're welcome
[11:47:25] <rwaldron> orkel I am
[11:47:35] <rwaldron> thanks for splitting these up
[11:47:41] <rwaldron> 10524 and "load"
[11:47:49] <rwaldron> makes it easier to manage them
[11:48:16] <jqcommit> [jquery] rwldrn pushed 1 new commit to 1.8pre: http://git.io/KUgayg
[11:48:16] <jqcommit> [jquery/1.8pre] jQuery.fn.load optimization - Oleg
[11:49:19] <orkel> sure!
[11:49:24] <orkel> i want to ask about #11585.
[11:49:43] <rwaldron> sure, you want it?
[11:50:05] <orkel> No, i dont think its a bug
[11:50:08] <orkel> I don't think its a regression, fadeTo, and other jQuery.fn.animate aliases uses show(), for hidden elements, before 1.7.2, disconnected nodes doesn't considered to be hidden, but this is changed after i fixed #10006.
[11:50:23] <orkel> Guy in example uses fadeTo for disconnected node, so beforehand we cannot know what styles is applied for the element and where it would be appended.
[11:50:36] <rwaldron> Good call
[11:50:40] <rwaldron> can you post that?
[11:50:40] <orkel> i think current behavior is right one.
[11:50:45] <rwaldron> and we'll close it
[11:50:47] <orkel> sure!
[11:50:51] <rwaldron> thanks!
[11:51:14] <rwaldron> orkel connected and disconnected nodes are such a pain in the ass
[11:51:23] <rwaldron> to deal with their odd-ball differences
[11:51:33] <orkel> believe me i know :-)
[11:51:41] <rwaldron> esp. in older Firefox... maybe even in newer Firefox
[11:51:48] <rwaldron> that stupid concept of "presentation"
[11:51:56] <rwaldron> display:none means no height
[11:52:23] <rwaldron> err. no i meant...
[11:52:41] <rwaldron> display: none children have no "presentation"
[11:52:45] <rwaldron> long day...
[11:53:44] <orkel> for disconnected nodes in ff you still can retrive a css declaration, which is cannot happen in other browsers
[11:54:27] <orkel> but for ie, you can retrive, though, a default css for the element
[11:55:06] <rwaldron> IIRC, we had to do this weirdness to get around issues in Firefox
[11:55:06] <rwaldron> https://github.com/jquery/jquery/blob/1.8pre/src/effects.js#L674-681
[11:55:21] <rwaldron> instead of just making the iframe display:none
[11:56:10] <rwaldron> when we did display:none, everything inside the iframe (the whole html doc and children) had no "presentation" and therefore no "display" props could be read
[11:56:12] <rwaldron> so annoying
[11:56:14] <rwaldron> :(
[11:56:40] <orkel> for old ff?
[11:56:44] <rwaldron> 3.6
[11:56:48] <rwaldron> i believe
[11:56:50] <rwaldron> so...
[11:56:56] <orkel> you still supported it?
[11:56:58] <rwaldron> we may be able to drop that junk soon :D
[11:57:04] <orkel> :-)
[11:57:05] <rwaldron> until the end of may
[11:57:49] <orkel> because mozilla drops support for it?
[11:58:02] <rwaldron> yep!
[11:58:09] <rwaldron> they're doing a "forced upgrade"
[11:58:15] <rwaldron> or something like that
[11:58:27] <rwaldron> anyone still using 3.6 after that will be "abandoned"
[11:58:52] <rwaldron> Now that they are doing auto-updates, we're safe from supporting older versions
[11:58:58] <orkel> then, you can drop alot of stuff too, in ajax module for example, alot of try... catch in there for old ff
[11:59:04] <rwaldron> so it will be "Current -1"
[11:59:14] <rwaldron> yes, hopefully
[11:59:31] <orkel> it would be cool!
[11:59:56] <rwaldron> yeah, I think we'll see a few bytes shave off the gzipped code
[12:00:20] <rwaldron> i just wish that specific workarounds were better documented in the code
[12:00:35] <rwaldron> in some places its pretty good
[12:00:45] <rwaldron> others, not so much
[12:00:48] <orkel> alot of people has the same wish
[12:01:24] <rwaldron> orkel if you know of _exact_ places in ajax where the code is FF 3.6 but doesnt have any comments, feel free to mark those and I'll pull it in
[12:01:31] <rwaldron> so we have notes about where everything is
[12:01:42] <rwaldron> anything like that is helpful
[12:02:12] <rwaldron> or just maintain a local branch of it, with that stuff taken out
[12:02:25] <rwaldron> make sure it stays up-to-date with 1.8pre
[12:02:32] <rwaldron> and then end of May you ca make a PR
[12:02:35] <orkel> i will try, but you know, those cases is pretty hard to reproduce
[12:02:41] <rwaldron> true true
[12:03:14] <orkel> then, you can drop alot of stuff too, in ajax module for example, alot of try... catch in there for old ff
[12:03:42] <rwaldron> ?
[12:03:50] <rwaldron> I think your IRC just sent the same message
[12:03:53] <rwaldron> twice?
[12:06:51] <orkel> wow, did not notice that
[12:33:08] <jqcommit> [testswarm] Krinkle pushed 2 new commits to master: http://git.io/L4APFw
[12:33:08] <jqcommit> [testswarm/master] Add pendingReRuns in SwarmstateAction and expose on HomePage - Timo Tijhof
[12:33:08] <jqcommit> [testswarm/master] Merge branch 'master' of github.com:jquery/testswarm - Timo Tijhof
[12:33:31] <Krinkle> clarkbox: ^
[12:33:39] <Krinkle> deployed
[12:34:06] <clarkbox> nice
[12:34:44] <Krinkle> which reminds me, I'll add support for that in node-testswarm
[12:35:17] <Krinkle> hm.. is your IE7 not doing those 8 pending re-runs?
[12:35:42] <Krinkle> I can't help notice they're not decreasing
[12:35:47] <clarkbox> not running anything right now
[12:36:02] <Krinkle> can you refresh one of them? I think I know the problem
[12:36:26] <clarkbox> ya 7 is running after refresh
[12:36:30] <Krinkle> okay
[12:36:38] <clarkbox> same with 6
[12:36:44] <Krinkle> yeah, I figured
[12:37:04] <clarkbox> FYI i am using the token i copied from the server. thats fine right?
[12:37:09] <Krinkle> sure
[12:37:13] <Krinkle> there is only 1 runToken for all
[12:37:17] <clarkbox> ah cool
[12:37:31] <Krinkle> JohnResig created GetrunAction in such a way that if a run is failed but less then max, it will be redistributed. That's cool.
[12:37:38] <Krinkle> but there's a catch that I'm not sure he did intentionally
[12:38:05] <Krinkle> it has a guard to not redistribute the re-try to the same client that did the failed run. that sounds good, but if there are no other clients..
[12:38:09] <Krinkle> then it is never re-ran
[12:38:23] <Krinkle> you refreshing the client means it gets a new client id
[12:38:44] <clarkbox> ahh
[12:39:02] <clarkbox> so dont get new client id on refresh?
[12:39:08] <Krinkle> no, that is good
[12:39:32] <clarkbox> but then i may run same test twice between refreshes
[12:39:33] <Krinkle> the problem is, if the requesting client is the only client of the related user agent ID, then it can't be re-ran
[12:39:55] <Krinkle> clarkbox: no that won't happen
[12:41:20] <Krinkle> I'll leave that guard as it is
[12:42:01] <Krinkle> we terminate browserstack workers once done, so it'll simply be restarted and then it continues
[12:42:22] <Krinkle> which is good, that way we will still prioritize the main run, and only do re-runs afterwards
[12:42:44] <Krinkle> arg, it depends.. if we do that, then Jenkins will never get a hold of the re-ran results
[12:43:29] <Krinkle> clarkbox: what do you think, should we simply make re-runs part of the normal flow? So that a failure will be confirmed X number of times before continuing? That will make the build process slower if there are failures.
[12:43:32] <clarkbox> well i think its safe to mark a test as failed on first run - in the case you have reliable workers.
[12:43:37] <clarkbox> re-runs are for sanity
[12:43:52] <Krinkle> yeah, but reliable workers is a fantasy imho
[12:43:56] <Krinkle> anything could happen
[12:44:16] <clarkbox> but in others case, where they have non-verified browsers (not using token) they may want MAX runs before conclusively marking a test
[12:44:26] <Krinkle> if someone does 'git pull' on swarm-01 for a split second stuff can easily fail without recovery causing the client to timeout since it never got to the run page
[12:44:30] <Krinkle> in that case we need to re-reun
[12:44:34] <clarkbox> well in that case, you have a workflow issue, and you need to correct your broken workers
[12:44:55] <clarkbox> ya its very fine line here
[12:45:33] <Krinkle> anyway, if a swarm-admin (like ourselves) don't want re-runs, we can simply disable them by sending runmax=1 in addjob from grunt
[12:47:44] <Krinkle> clarkbox: can you help me fix my my fork of node-testswarm so that the PR applies cleanly? e.g. fast-forward underneath (rebase) my commits
[12:47:51] <Krinkle> I can't figure it out, been trying for about 5 minutes
[12:48:22] <clarkbox> i suck at git
[12:48:29] <Krinkle> ai
[12:48:36] <Krinkle> jzaefferer maybe?
[12:48:58] <clarkbox> ya, and gnarf
[13:02:56] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/_814Zg
[13:02:56] <jqcommit> [testswarm/master] fixes #166: natsort user agents in UserAction - Timo Tijhof
[13:03:14] <Krinkle> alrighty IE10 sorts properly now on http://swarm.jquery.org/user/jqueryui
[13:16:28] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/Q3u30g
[13:16:28] <jqcommit> [testswarm/master] fixes #165: Expose runs/max in JobAction - Timo Tijhof
[13:41:32] <Krinkle> clarkbox: deployed current HEAD of testswarm-browserstack to swarm-01 ;  Updating 4cfe0a1..f6ca327
[13:41:39] <Krinkle> https://github.com/clarkbox/testswarm-browserstack/commits/master
[13:41:43] <Krinkle> lets hope it works :)
[13:41:49] <Krinkle> (tested locally, of course)
[13:57:08] <clarkbox> krinkle: back. working?
[13:57:20] <Krinkle> dunno yet, there hasn't been a Jenkins build yet
[13:57:30] <clarkbox> ahh
[13:57:55] <clarkbox> im going to kick one off
[13:58:29] <Krinkle> ok
[13:59:20] <clarkbox> http://swarm.jquery.org/user/qunit
[14:00:29] <Krinkle> Looks like the Safari 5 client in BrowserStack has gone AWOL
[14:00:39] <Krinkle> it is in the swarm and works but not in the /workers list
[14:00:55] <Krinkle> I've seen this bug in the past, happens when stuff is terminate and started a lot
[14:01:12] <Krinkle> the same happened to a Firefox 3.6 client on my browserstack account yesterday http://swarm.jquery.org/user/Krinkle
[14:01:18] <Krinkle> http://swarm.jquery.org/user/browserstack
[14:02:02] <Krinkle> oh shit, browserstack doesn't have Firefox 12 yet
[14:02:08] <Krinkle> I added it to TestSwarm
[14:02:20] <Krinkle> browscap.ini parser added support for Firefox 12 2 months ago when it went into beta
[14:02:45] <Krinkle> browserstack is behind
[14:02:53] <Krinkle> clarkbox: Can you poke someone at browserstack to add that soon-ish?
[14:03:02] <clarkbox> ya ill drop a note to them
[14:03:06] <Krinkle> k
[14:03:45] <Krinkle> joining now with my own FF12, should keep it going for a little while
[14:04:21] <jq-jenkins> Yippie, build fixed!
[14:04:21] <jq-jenkins> Project QUnit build #111: FIXED in 5 min 48 sec: http://swarm.jquery.org:8080/job/QUnit/111/
[14:04:39] <Krinkle> fixed? I didn;t know it was broken
[14:05:19] <Krinkle> oh, just jenkins timeout fail
[14:10:25] <Krinkle> clarkbox: k, great. so everything still works. can you show me how you re-ran that build?
[14:10:38] <Krinkle> sounds easy, but I don't know
[14:10:46] <clarkbox> just have to be logged into jenkins
[14:10:58] <clarkbox> and you can click an icon to the right of the table
[14:11:05] <clarkbox> icon is a clock
[14:11:11] <clarkbox> tooltip says "schedule build"
[14:11:22] <Krinkle> oh, it does it right away
[14:11:24] <Krinkle> I clicked it
[14:11:32] <clarkbox> yup
[14:11:35] <Krinkle> I was expecting some in-between step :P
[14:11:39] <Krinkle> k, thx
[14:12:57] <kswedberg> st33l333
[14:13:15] <kswedberg> ops
[14:13:18] <kswedberg> oops
[14:13:48] <kswedberg> stupid eye-tracking window-focus shifter isn't working.
[14:14:31] <jq-jenkins> Project QUnit build #112: SUCCESS in 3 min 19 sec: http://swarm.jquery.org:8080/job/QUnit/112/
[14:17:58] <Krinkle> lets see if the new testswarm-browserstack stuff can make jquery-ui pass in under 15 minutes as well
[14:18:06] * Krinkle kicks off jqueryui build
[14:54:17] <gnarf> you needed me for something git?
[15:18:55] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/VVdxGQ
[15:18:55] <jqcommit> [testswarm/master] Only 6 span2 "well"s per "row" - Timo Tijhof
[15:19:09] <Krinkle> gnarf: I figured it out
[15:19:31] <Krinkle> gnarf: adding a remote to upstream, and fetching/merging/rebasing locally, then resolving the conflict manually and adding the files
[15:19:56] <Krinkle> not sure if that is the right way to fix a situation where the upstream repo has new commits after I did stuff in my fork
[15:19:59] <Krinkle> but worked
[15:20:30] <Krinkle> then did a `git push -f` to my fork on github and the PR auto-updated
[15:28:58] <gnarf> Krinkle: git pull --rebase origin master
[15:29:18] <gnarf> or upstream master
[15:29:21] <Krinkle> upstream, not origin, right?
[15:29:21] <gnarf> etc
[15:29:27] <Krinkle> hm.. interesting
[15:29:32] <gnarf> but yeah, pull --rebase is pretty nice
[15:29:48] <gnarf> and ONLY EVER push -f to feature branches in your local, never push -f a production branch :)
[15:30:10] <Krinkle> I know
[15:30:50] <Krinkle> I have a fork, in which I did stuff. Then sent a PR, needed to correct something, so I fixed it and amended the commit in my fork.
[15:31:07] <Krinkle> then found out that the upstream had other commits, and rebased. again amending and forcing push to my fork
[15:31:58] <Krinkle> I'll note down the pull/rebase combo, very nice
[17:30:19] <jqcommit> [jquery] jaubourg pushed 3 new commits to 1.8pre: http://git.io/MJun_w
[17:30:19] <jqcommit> [jquery/1.8pre] Makes test message more meaningful. - jaubourg
[17:30:19] <jqcommit> [jquery/1.8pre] Adds unit test to show order of parameters in the load callback are off for errors since the rewrite (this test works in master). - jaubourg
[17:30:19] <jqcommit> [jquery/1.8pre] Fixes the parameters given to load callback when the request errors. - jaubourg
[18:14:48] <Krinkle> https://github.com/jquery/jquery/pull/761
[18:14:49] <socialhapy> ★ Pull request on jquery by Krinkle ( ago): update qunit (git submodule) from 1.3.0pre to 1.6.0pre
