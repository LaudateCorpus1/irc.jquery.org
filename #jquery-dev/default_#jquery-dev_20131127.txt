[08:51:21] <Chuwiey> Hi all, I have a question about $.Callbacks() and in regards to error handling for exceptions that are thrown via a callback. I am thinking this is the right channel, because I'm not sure if this is something that was an internal decision or not...
[08:51:44] <Chuwiey> essentially, I am finding that when a callback throws an exception, no future callbacks will be fired.
[08:53:15] <Chuwiey> I believe adding a small try-catch around https://github.com/jquery/jquery/blob/master/src/callbacks.js#L73 that could be fixed
[10:32:20] <cpeterso_> Does the jQuery dev team have an official or preferred jQuery performance test? I work on Mozilla's SpiderMonkey team and we're investigating whether we can incorporate jQuery's functional and performance tests into Firefox's automated test suite.
[11:45:21] <sizcommit> 01[13sizzle01] 15gibson042 pushed 3 new commits to 06master: 02http://git.io/rmcBAA
[11:45:21] <sizcommit> 13sizzle/06master 14300ef78 15Richard Gibson: Fix jQuery #14579: trailing spaces after an unquoted attribute value
[11:45:21] <sizcommit> 13sizzle/06master 14bbe6ebf 15Richard Gibson: Update version to 1.10.14
[11:45:21] <sizcommit> 13sizzle/06master 14b60929f 15Richard Gibson: Update version to 1.10.15-pre
[11:48:42] <scott_gonzalez> cpeterso_: I believe someone is working on a new performance test suite, but I can't remember who.
[11:49:13] <scott_gonzalez> I think we used Dromaeo at one point, but I don't think it was ever consistently run.
[11:49:15] <scott_gonzalez> DaveMethvin: ^
[11:49:19] <scott_gonzalez> timmywil: ^
[11:50:21] <DaveMethvin> cpeterso_ we had someone volunteer to help out with some perf stuff but it fell off and we don't have anything good at the moment
[11:50:56] <DaveMethvin> the stuff in our /perf directory is not used and should be removed, it's not very good at all
[11:51:02] <timmywil> A new performance suite for jQuery core is still in the works, but I believe the person working on it has been working on other things of late
[11:51:11] <cpeterso_> scott_gonzalez, DaveMethvin: thanks. Dromaeo includes jQuery, but I just wanted to see if there were any perf tests that you liked.
[11:51:45] <timmywil> That said, a new performance suite was developed for Sizzle itself
[11:52:07] <cpeterso_> that sounds good, too
[11:52:49] <timmywil> it's probably the most comprehensive and accurate selector test suite out there, but it mostly proved to us that performance for selectors for all of the engines is _good enough_ for most use cases
[11:53:27] <DaveMethvin> i think that's the challenge we face, my feeling is that all the jquery/sizzle apis are fast enough for 90% of all cases
[11:53:43] <DaveMethvin> and when they could be made faster it's often at the expense of code size
[11:53:46] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/MgtX5Q
[11:53:46] <jqcommit> 13jquery/06master 14ed20e7c 15Richard Gibson: Fix #14579: attribute selectors with trailing spaces after an unquoted value
[11:53:49] <DaveMethvin> which everyone feels
[11:53:56] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 061.x-master: 02http://git.io/JQGieA
[11:53:56] <jqcommit> 13jquery/061.x-master 14b869d3f 15Richard Gibson: Fix #14579: attribute selectors with trailing spaces after an unquoted value...
[11:55:45] <DaveMethvin> jquery/sizzle can cause more perf damage by forcing a layout than by the typical jsperffy tests that try to focus on one type of call
[11:56:06] <DaveMethvin> but we can't measure that in isolation usually
[11:56:53] <timmywil> true enough
[11:59:21] <cpeterso_> thanks. I will check out the sizzle perf tests.
[12:04:04] <doesallmagic2> Project jQuery Core build #1020: STILL FAILING in 10 min: http://jenkins.jquery.com/job/jQuery%20Core/1020/
[12:04:05] <doesallmagic2> richard.gibson: Fix #14579: attribute selectors with trailing spaces after an unquoted value
[12:09:35] <gibson042> you know what, doesallmagic2? I don't remember asking you a GOD DAMN thing
[12:19:18] <scott_gonzalez> FIX THE BUG!!!!!!!
[12:19:27] <scott_gonzalez> FIX IT DaveMethvin. FIX IT!
[12:20:05] <DaveMethvin> once we release 1.11/2.1 of course this isn't going to be the end of it either scott_gonzalez
[12:20:11] <doesallmagic2> Project jQuery Core 1.x build #319: STILL FAILING in 16 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/319/
[12:20:11] <doesallmagic2> richard.gibson: Fix #14579: attribute selectors with trailing spaces after an unquoted value
[12:20:19] <DaveMethvin> because we DIDN'T FIX THE OLD VERSIONS
[12:20:20] <scott_gonzalez> I DON'T CARE! FIX IT! ON MY SITE!
[12:20:36] <DaveMethvin> what's your password? :)
[12:20:51] <scott_gonzalez> It's "changeme" without the quotes.
[12:21:28] <scott_gonzalez> Oh, and it's using a CDN. So make sure you update jquery-1.6.2 on the Google CDN, ok?!?
[12:21:40] <DaveMethvin> exactly
[12:22:07] <DaveMethvin> the funny thing is, if Chrome would just REMOVE the api rather than deprecate it, everything would be fine
[12:22:38] <DaveMethvin> no api, no call, no message, we use .defaultPrevented property
[12:22:56] <scott_gonzalez> I love how people freak out when there's a warning in the console.
[12:23:39] <scott_gonzalez> At least we don't get complaints about non-standard CSS in UI anymore.
[12:23:55] <scott_gonzalez> We used to get people yelling at us for having things like filter for opacity.
