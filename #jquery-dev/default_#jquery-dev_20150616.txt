[01:12:23] <doesallmagic2> Project jQuery Core Compat Periodic build #204: STILL UNSTABLE in 14 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat%20Periodic/204/
[01:12:23] <doesallmagic2> * m.goleb: Build: Update grunt-contrib-jshint
[01:12:24] <doesallmagic2> * m.goleb: Core: Make jQuery objects iterable
[01:12:24] <doesallmagic2> * m.goleb: Event: Remove an internal argument to the on method
[01:12:25] <doesallmagic2> * m.goleb: Manipulation: Remove an internal argument to the remove method
[01:12:25] <doesallmagic2> * m.goleb: Tests: Correct a typo in the regex matching Safari 8
[01:12:26] <doesallmagic2> * m.goleb: Tests: Add Microsoft Edge results (from Windows 10 build 10130)
[04:26:18] <jqcommit> [13jquery] 15mzgol opened pull request #2397: Core: Use window.setTimeout & friends instead of global equivalents (06master...06window-settimeout4) 02http://git.io/vLOmg
[05:44:44] <jqcommit> [13jquery] 15mzgol pushed 1 new commit to 06master: 02http://git.io/vLOwQ
[05:44:45] <jqcommit> 13jquery/06master 145a1217e 15MichaÅ‚ GoÅ‚Ä™biowski: Tests: Remove Edge version from the user agent...
[05:45:46] <jqcommit> [13jquery] 15mzgol pushed 1 new commit to 06compat: 02http://git.io/vLOrL
[05:45:47] <jqcommit> 13jquery/06compat 141d052bd 15MichaÅ‚ GoÅ‚Ä™biowski: Tests: Remove Edge version from the user agent...
[05:49:04] <doesallmagic2> Yippee, build fixed!
[05:49:05] <doesallmagic2> Project jQuery Core build #1365: FIXED in 4 min 33 sec: http://jenkins.jquery.com/job/jQuery%20Core/1365/
[05:49:05] <doesallmagic2> m.goleb: Tests: Remove Edge version from the user agent
[06:03:45] <doesallmagic2> Project jQuery Core Compat build #620: SUCCESS in 14 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/620/
[06:03:46] <doesallmagic2> m.goleb: Tests: Remove Edge version from the user agent
[06:13:32] <jqcommit> [13jquery] 15mzgol opened issue #2398: Remove test/data/ua.txt 02http://git.io/vLOSM
[06:52:42] <jqcommit> [13jquery] 15mzgol opened issue #2399: The build process requires no space between closing `}` and `)` 02http://git.io/vL3vH
[07:25:41] <jqcommit> [13jquery] 15mzgol pushed 1 new commit to 06master: 02http://git.io/vL3GL
[07:25:42] <jqcommit> 13jquery/06master 14e831856 15MichaÅ‚ GoÅ‚Ä™biowski: Tests: Remove test/data/ua.txt...
[07:26:36] <jqcommit> [13jquery] 15mzgol pushed 1 new commit to 06compat: 02http://git.io/vL3GV
[07:26:36] <jqcommit> 13jquery/06compat 14d8037c6 15MichaÅ‚ GoÅ‚Ä™biowski: Tests: Remove test/data/ua.txt...
[07:29:29] <doesallmagic2> Project jQuery Core build #1366: UNSTABLE in 3 min 59 sec: http://jenkins.jquery.com/job/jQuery%20Core/1366/
[07:29:29] <doesallmagic2> m.goleb: Tests: Remove test/data/ua.txt
[07:34:12] <doesallmagic2> Project jQuery Core Compat build #621: UNSTABLE in 4 min 43 sec: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/621/
[07:34:13] <doesallmagic2> m.goleb: Tests: Remove test/data/ua.txt
[07:55:38] <jqcommit> [13jquery] 15timmywil pushed 2 new commits to 06master: 02http://git.io/vL3zg
[07:55:38] <jqcommit> 13jquery/06master 14578dcee 15Timmy Willison: Revert "Offset: allow offset setter to throw for disconnected elements"...
[07:55:38] <jqcommit> 13jquery/06master 1440dcc76 15Timmy Willison: Offset: return zeros for disconnected/hidden elements...
[07:56:19] <jqcommit> [13jquery] 15timmywil pushed 2 new commits to 06compat: 02http://git.io/vL3zb
[07:56:19] <jqcommit> 13jquery/06compat 14ee69e9c 15Timmy Willison: Revert "Offset: allow offset setter to throw for disconnected elements"...
[07:56:19] <jqcommit> 13jquery/06compat 1463f19a9 15Timmy Willison: Offset: return zeros for disconnected/hidden elements...
[07:56:29] <timmywil> arschmitz ^^
[07:56:42] <arschmitz> timmywil: awesome thank you!
[07:56:51] <timmywil> np :)
[07:59:41] <doesallmagic2> Project jQuery Core build #1367: STILL UNSTABLE in 4 min 16 sec: http://jenkins.jquery.com/job/jQuery%20Core/1367/
[07:59:41] <doesallmagic2> * Timmy Willison: Revert "Offset: allow offset setter to throw for disconnected elements"
[07:59:42] <doesallmagic2> * Timmy Willison: Offset: return zeros for disconnected/hidden elements
[08:03:31] <m_gol> hmm, the offset changes broke IE apparently
[08:03:42] <m_gol> timmywil: ^
[08:04:14] <timmywil> woops
[08:04:39] <timmywil> I'll take care of it
[08:12:54] <timmywil> ah, IE errors on getBounding when disconnected
[08:12:57] <timmywil> right
[08:14:43] <m_gol> IE8 has many more failures, most off-by-one, weird: http://swarm.jquery.org/result/385060
[08:15:30] <doesallmagic2> Project jQuery Core Compat build #622: STILL UNSTABLE in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/622/
[08:15:30] <doesallmagic2> * Timmy Willison: Revert "Offset: allow offset setter to throw for disconnected elements"
[08:15:31] <doesallmagic2> * Timmy Willison: Offset: return zeros for disconnected/hidden elements
[08:24:06] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02http://git.io/vL310
[08:24:06] <jqcommit> 13jquery/06master 140e4477c 15Timmy Willison: Offset: return before getBoundingClientRect to avoid error in IE8-11
[08:27:59] <doesallmagic2> Project jQuery Core build #1368: STILL UNSTABLE in 4 min 7 sec: http://jenkins.jquery.com/job/jQuery%20Core/1368/
[08:27:59] <doesallmagic2> Timmy Willison: Offset: return before getBoundingClientRect to avoid error in IE8-11
[08:31:13] <fcarstens> jzaefferer: event data proposal is out :-)
[08:31:27] <jzaefferer> fcarstens: nice, will check it out soon
[08:32:11] <fcarstens> okay :-)
[08:32:32] <fcarstens> (es6 is great...)
[08:59:05] <timmywil> I'm down to the scroll test in ie8. Not sure what's wrong there.
[08:59:54] <timmywil> It ended up with exactly expected - 1000
[09:01:03] <m_gol> timmywil: backporting the master fix doesn't help?
[09:01:12] <timmywil> not for this
[09:01:14] <m_gol> sometimes an earlier failure might influence later tests
[09:01:15] <m_gol> hmm
[09:02:27] <timmywil> this is the only failure now
[09:02:32] <m_gol> moment, what scroll test? every scroll test at http://swarm.jquery.org/result/385060 succeeded
[09:03:00] <timmywil> 2 and 4 of offset:scroll
[09:03:05] <timmywil> maybe locally only?
[09:03:31] <m_gol> did you have the window focused?
[09:03:32] <timmywil> could be window size or something
[09:03:35] <m_gol> yeah
[09:03:50] <m_gol> I'd just push the cherry-pick and see if it fails on TestSwarm
[09:04:02] <timmywil> well, I know it needs more than that
[09:04:18] <m_gol> k
[09:04:26] <timmywil> getClientRects() also errors on disconnected elements.
[09:04:29] <timmywil> in ie8
[09:04:40] <m_gol> :)
[09:04:57] <timmywil> so, switching back to contains for compat
[09:06:30] <gibson042> this is ridiculous
[09:07:06] <timmywil> :P
[09:10:22] <m_gol> timmywil: maybe a support test so that the badness is contained to IE8?...
[09:10:34] <m_gol> s/contained/restricted/
[09:10:56] <gibson042> no, I wouldn't bother with that
[09:11:40] <timmywil> Not sure it's worth it. There's not actually a perf loss from the previous version since we were doing contains before.
[09:12:30] <timmywil> we can limit to compat and keep what we have on master, unless we're concerned about having different code
[09:13:06] <gibson042> I'm not concerned about the code being too different
[09:13:38] <gibson042> I'm just frustrated at all this effort being put into avoiding errors from known-invalid input
[09:14:51] <gibson042> but a contains check would make sense as compat-only code
[09:15:13] <timmywil> cool
[09:16:01] <jqcommit> [13jquery] 15timmywil pushed 2 new commits to 06compat: 02http://git.io/vLsIF
[09:16:01] <jqcommit> 13jquery/06compat 1425e8620 15Timmy Willison: Offset: return before getBoundingClientRect to avoid error in IE8-11
[09:16:01] <jqcommit> 13jquery/06compat 146df3990 15Timmy Willison: Offset: revert to jQuery.contains for IE8's sake (compat only)...
[09:16:55] <jqcommit> [13jquery] 15timmywil opened pull request #2400: Build: space between curly and paren is optional (06master...062399-build) 02http://git.io/vLsLn
[09:17:24] <gibson042> timmywil: I think you went too far
[09:17:36] <gibson042> why `if ( !doc ) { return; }`?
[09:17:48] <gibson042> that introduces a master-compat behavioral difference
[09:18:30] <timmywil> need a document element for contains
[09:18:42] <gibson042> `elem.ownerDocument.documentElement`
[09:19:14] <timmywil> what's the behavior difference? can I put it in a test?
[09:19:47] <doesallmagic2> Project jQuery Core Compat build #623: STILL UNSTABLE in 4 min 1 sec: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/623/
[09:19:48] <doesallmagic2> * Timmy Willison: Offset: return before getBoundingClientRect to avoid error in IE8-11
[09:19:48] <doesallmagic2> * Timmy Willison: Offset: revert to jQuery.contains for IE8's sake (compat only)
[09:19:52] <gibson042> I guess you could put in a test
[09:19:57] <timmywil> oh, throwing on plain object
[09:20:00] <gibson042> yeah
[09:20:11] <timmywil> yea, ok
[09:20:18] <gibson042> but I wouldn't
[09:20:32] <timmywil> heh, I guess we want consistent undefined behavior
[09:20:54] <gibson042> I actually don't care if the undefined behavior is consistent
[09:21:01] <gibson042> it just looks like too much code
[09:21:10] <timmywil> ok
[09:21:50] <gibson042> I guess it's fine
[09:22:07] <gibson042> since you need `docElem` later anyway
[09:22:32] <timmywil> meh, I'll change it. Fewer line differences between master.
[09:23:00] <timmywil> I just kept reverting things to get the tests to pass.
[09:23:16] <gibson042> yeah
[09:25:55] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06compat: 02http://git.io/vLsOZ
[09:25:55] <jqcommit> 13jquery/06compat 14523de77 15Timmy Willison: Offset: no need to check for ownerDocument
[09:28:47] <doesallmagic2> Project jQuery Core Compat build #624: STILL UNSTABLE in 3 min 8 sec: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/624/
[09:28:48] <doesallmagic2> Timmy Willison: Offset: no need to check for ownerDocument
[09:29:15] <timmywil> Hmm, that scroll problem wasn't just local
[09:29:33] <timmywil> Did we change css or something?
[09:29:53] <timmywil> expected - 1000 is a pattern
[09:33:51] <timmywil> hmm, well the iframe window is scrolled by 1000
[09:34:28] <m_gol> timmywil: I restarted one of earlier jobs and it failed in IE8 as well
[09:34:35] <m_gol> so it must be infra changes
[09:34:49] <timmywil> oh, well that makes me feel better
[09:35:04] <timmywil> we already skip the .top test. Should I just skip these too?
[09:35:20] <m_gol> you said it fails locally, though
[09:35:36] <m_gol> the other ones are supposed to fail on TestSwarm only from what I see in the comments
[09:35:54] <m_gol> DaveMethvin|away would know more as he disabled them
[09:35:56] <timmywil> yea, I just don't want to deal with it. :P
[09:36:02] <m_gol> hahaha
[09:40:03] <timmywil> well, let's see. Maybe there's a discrepency.
[09:40:45] <m_gol> it passes on older commits
[09:41:07] <m_gol> I just don't like disabling tests if that's not necessary
[09:41:22] <timmywil> oh, I thought you said it didn't.
[09:42:30] <m_gol> I'm currently checking older commits via BrowserStack
[09:42:34] <m_gol> so there's not TestSwarm iframe
[09:42:37] <m_gol> and they pass
[09:42:46] <m_gol> which makes me thing this was really a TestSwarm-only issue
[09:43:04] <m_gol> and since currently it fails even without TestSwarm, something seems broken
[09:43:57] <m_gol> I even checked out the commit just before this reverted one and it passes there
[09:44:14] <timmywil> weird
[09:45:18] <timmywil> think I got it now
[09:46:20] <m_gol> timmywil: did you find the reason?
[09:46:49] <timmywil> we were skipping scroll adjustments for elements that had zero height and width
[09:47:24] <timmywil> apparently, the rect needs those adjustments in ie8
[09:48:16] <timmywil> oh wait, getBounding doesn't return width/height in ie8
[09:48:18] <timmywil> duh
[09:48:47] <timmywil> I feel sheepish
[09:50:00] <timmywil> good thing I didn't comment out the test
[09:50:00] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06compat: 02http://git.io/vLsBS
[09:50:00] <jqcommit> 13jquery/06compat 143b1de11 15Timmy Willison: Offset: getBounding doesn't return width/height in IE8. Fixes test.
[09:51:40] <m_gol> still, sth's terribly broken on TestSwarm as more offset tests fail even on older commits, like from 2 days ago: http://swarm.jquery.org/job/727
[09:51:54] <m_gol> I haven't seen these errors before (at least definitely not recently)
[09:52:49] <m_gol> gnarf Krinkle_ ryanneufeld s5fs: were there any TestSwarm-related updates recently on our infra? we have failures on IE8 even on older builds that used to succeed
[09:56:07] <gibson042> timmywil: https://github.com/jquery/jquery/commit/3b1de112675a5c39410f3ba18c433a6ee4bd4e17 looks even more divergent; hidden elements will return inverted scroll position
[09:57:02] <timmywil> This is previous behavior. What would you propose?
[09:57:41] <gibson042> the code from master, plus whatever extra code is necessary for IE8
[09:58:19] <timmywil> which code from master? It can't be the same.
[09:58:21] <gibson042> which _should_ just be a contains check before calling gBCR
[10:00:13] <timmywil> Ok, I should be able to an inverted scroll test. getClientRects().length probably covers for the fact that rect.width and rect.height are undefined.
[10:01:03] <doesallmagic2> Project jQuery Core Compat build #625: STILL UNSTABLE in 11 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/625/
[10:01:04] <doesallmagic2> Timmy Willison: Offset: getBounding doesn't return width/height in IE8. Fixes test.
[10:02:00] <timmywil> those failures seem like a testswarm issue.
[10:02:21] <m_gol> these one are
[10:02:27] <m_gol> it actually succeeded
[10:02:37] <m_gol> I wanted to check if that's a stable success so I restarted offset
[10:02:39] <m_gol> and it failed
[10:02:47] <m_gol> the same happens for older jobs
[10:02:57] <m_gol> it's either infra or BrowserStack
[10:03:09] <m_gol> maybe they have some IE8 instances broken and we sometimes hit those ones
[10:03:24] <m_gol> I'd like to hear from someone from infra if there were any changes on our side
[10:03:31] <m_gol> before writing to BrowserStack
[10:04:17] <gibson042> timmywil: IMO, we should have
[10:04:17] <gibson042> if ( !elem ) {
[10:04:17] <gibson042> 	return;
[10:04:17] <gibson042> }
[10:04:17] <gibson042> // Begin compat only
[10:04:18] <gibson042> doc = elem.ownerDocument;
[10:04:18] <gibson042> docElem = doc.documentElement;
[10:04:19] <gibson042> if ( !jQuery.contains( docElem, elem ) ) {
[10:04:19] <gibson042> 	return { top: 0, left: 0 };
[10:04:20] <gibson042> }
[10:04:20] <gibson042> // Resume shared
[10:04:21] <gibson042> rect = elem.getBoundingClientRect();
[10:04:21] <gibson042> // Make sure element is not hidden (display: none) or disconnected
[10:04:22] <gibson042> if ( rect.width || rect.height || elem.getClientRects().length ) {
[10:04:45] <timmywil> yea, that's what I was thinking
[10:05:02] <timmywil> I have a test for it now.
[10:05:13] <gibson042> what is the test?
[10:05:20] <timmywil> 	equal( $("#hidden").offset().top, 0, "Hidden elements do not subtract scroll" );
[10:05:21] <timmywil> 	equal( $("#hidden").offset().left, 0, "Hidden elements do not subtract scroll" );
[10:05:28] <timmywil> in the scrolled iframe
[10:05:35] <timmywil> and they fail right now
[10:06:12] <gibson042> could you add a comment that the tests are for master/compat consistency and not to be considered binding?
[10:06:36] <gibson042> unless you want to call hidden elements valid input now
[10:06:57] <timmywil> Isn't that what we're doing with all this?
[10:07:12] <timmywil> these aren't the only hidden elements tests
[10:07:46] <gibson042> I don't even know anymore
[10:07:52] <gibson042> the first complaint was about throwing
[10:08:43] <gibson042> and I don't even know how a framework/plugin author is expected to deal with this now
[10:09:37] <gibson042> the problem with returning (0,0)â€”which was solved by throwing exceptions insteadâ€”is that it is a valid position
[10:09:51] <gibson042> *offset
[10:10:09] <timmywil> yea, but it's what you got before (except for this case with scrolling)
[10:10:48] <gibson042> correct
[10:11:11] <gibson042> but the input was always invalid
[10:11:32] <gibson042> we just didn't (and still don't) provide the tools to differentiate valid from invalid input
[10:11:36] <timmywil> I mean, I can add that comment everywhere if you prefer
[10:11:51] <gibson042> well, what is our stance on it?
[10:11:53] <timmywil> maybe we'll still change this later
[10:12:07] <timmywil> It doesn't make sense to call it valid input
[10:12:16] <timmywil> but we're not going to change it right now
[10:12:35] <gibson042> that tells me that the tests by right shouldn't exist
[10:12:36] <timmywil> I guess that's the current stance
[10:12:46] <gibson042> it's just that we need them for master/compat consistency
[10:12:59] <timmywil> ok, then I'll add comments
[10:13:04] <gibson042> so yeah, I guess they should be commented
[10:13:18] <timmywil> sorry, I guess we just went in a circle
[10:13:34] <gibson042> or even an epicircle, given the larger context ;)
[10:13:51] <m_gol> this was mainly driven by UI problems, right?
[10:13:55] <timmywil> heh
[10:14:01] <timmywil> and mobile
[10:14:29] <gibson042> and concerns that they were indicative of other problems that we wouldn't see until after release
[10:14:36] <m_gol> did they want {0, 0} on disconnected nodes or just not throwing?
[10:14:46] <timmywil> they want zeros
[10:15:10] <m_gol> what do they do with those zeros?
[10:15:40] <m_gol> cc arschmitz
[10:17:00] <gibson042> looks to me like they don't care about the return value as long as it provides "top" and "left": https://github.com/jquery/jquery/issues/2310#issuecomment-103312088
[10:17:27] <timmywil> let's not go round and round
[10:18:13] <timmywil> we did determine that returning zeros is what native gBCR does
[10:18:34] <gibson042> right
[10:18:43] <m_gol> k
[10:19:12] <Krinkle> m_gol: Nothing recent from my side. I've got the parser change (ua-parser) pending, but not deployed.
[10:19:32] <m_gol> Krinkle: ok, thanks. I wonder if BrowserStack broke sth related to IE8...
[10:19:33] <gibson042> and as a result decided that we could just return unmodified gBCR output when there are no layout boxes
[10:19:54] <gibson042> BUT our implementation of such didn't work in compat because IE8
[10:20:51] <gibson042> so we can manually return (0,0) (because it's as (un)reasonable as anything else) in cases where we know gBCR will throw
[10:21:13] <gibson042> all without claiming that any of these cases are valid input or have defined behavior ;)
[10:21:21] <timmywil> that's a good summary :)
[10:23:33] <Krinkle> m_gol: Hm.. I'll check testswarm-browerstack  log
[10:24:17] <m_gol> Krinkle: offset test results are often off-by-one in IE8 since today, even on older commits
[10:25:39] <m_gol> Krinkle: only on TestSwarm, though, manual BrowserStack testing works
[10:27:00] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06compat: 02http://git.io/vLs11
[10:27:00] <jqcommit> 13jquery/06compat 14a0a5c0b 15Timmy Willison: Offset: add tests for hidden elements + scroll...
[10:29:37] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02http://git.io/vLsMp
[10:29:37] <jqcommit> 13jquery/06master 14b041242 15Timmy Willison: Offset: add tests for hidden elements + scroll...
[10:31:01] <doesallmagic2> Yippee, build fixed!
[10:31:02] <doesallmagic2> Project jQuery Core Compat build #626: FIXED in 4 min 15 sec: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/626/
[10:31:02] <doesallmagic2> Timmy Willison: Offset: add tests for hidden elements + scroll
[10:35:25] <doesallmagic2> Project jQuery Core build #1369: STILL UNSTABLE in 4 min 23 sec: http://jenkins.jquery.com/job/jQuery%20Core/1369/
[10:35:26] <doesallmagic2> Timmy Willison: Offset: add tests for hidden elements + scroll
[10:47:22] <m_gol> can we change the label color of "Needs info"? it blends in with "Needs review" and the former label specifically mean we do *not* have to look at it before the reporter posts something...
[10:48:44] <timmywil> what about Needs Review to red?
[10:49:39] <m_gol> the Bug label is red
[10:49:46] <timmywil> mhmm
[10:49:56] <m_gol> maybe Needs info to black? :P
[10:50:12] <timmywil> that's not one of the options
[10:50:37] <m_gol> you can put any color there
[10:50:40] <m_gol> manually
[10:50:47] <timmywil> ah
[10:51:00] <timmywil> ok, done
[10:51:06] <m_gol> thanks :)
[11:11:21] <jqcommit> [13jquery] 15mzgol closed pull request #2394: Core: Use window.setTimeout & friends when provided (06master...06window-settimeout3) 02http://git.io/vLJxB
[11:11:31] <jqcommit> [13jquery] 15mzgol closed pull request #2392: Core: Use window.setTimeout & friends when provided (06master...06window-settimeout2) 02http://git.io/vLfNs
[11:11:53] <jqcommit> [13jquery] 15mzgol closed pull request #2391: Core: Use window.setTimeout & friends when provided (06master...06window-settimeout) 02http://git.io/vLfSJ
[13:26:16] <Vanesco> Hi, I'm using jquery-ui.mulidatespicker and i'm getting a weird error when i click a date to select it. If i step through the code i can see that 'date' changes from typeof string to typeof function.. which then causes it to explode.. any ideas ?
[13:26:24] <Vanesco> Uncaught Error: Conversion from "string" format not allowed on jQuery.multiDatesPicker, I think it's a bug that it says 'string' right there.. if i see the code. http://pastebin.com/GwZDVyYt it says 'desired_format' in both switch statements, where i believe the first should be from_format
[13:26:31] <Vanesco> the error is thrown from jquery.min.js so I'm having a hard time to see where it changes from typeof string, to typeof function
[13:32:14] <m_gol> Vanesco: help is in #jquery
[13:34:47] <Vanesco> alright, thanks
[14:33:39] <jqcommit> [13jquery] 15AVGP opened pull request #2401: CSS: dimensions workaround for IE11 fullscreen quirk (06master...061764-ie-fullscreen-dimensions-workaround) 02http://git.io/vLZwo
