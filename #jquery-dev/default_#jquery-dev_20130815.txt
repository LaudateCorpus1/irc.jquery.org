[06:45:44] <ralphholzmann> DaveMethvin: PM me at your convenience
[07:05:52] <rxaviers> timmywil, are you guys preparing any documentation at learn.jquery or blog or somewhere else about the AMD updates?
[07:17:53] <timmywil> I'm preparing a talk for the Austin conference.
[07:57:33] <JamesMGreene> jzaefferer Krinkle|detached: Meeting time?   /cc: scott_gonzalez
[08:01:41] * JamesMGreene twiddles his thumbs
[08:15:45] <JamesMGreene> Oh well. Back to work. Later guys and gals
[08:26:33] <jqcommit> 01[13jquery01] 15timmywil pushed 2 new commits to 06AMD: 02http://git.io/t17K_g
[08:26:33] <jqcommit> 13jquery/06AMD 140c7d576 15Timmy Willison: Don't use strict equality when checking parent against window
[08:26:33] <jqcommit> 13jquery/06AMD 14575770f 15Timmy Willison: Update custom builds for super magic
[08:30:06] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06AMD: 02http://git.io/Uc9WUA
[08:30:06] <jqcommit> 13jquery/06AMD 1412e9a3d 15Timmy Willison: Lint build javascript
[09:36:40] <timmywil> DaveMethvin: quick event question
[09:38:36] <timmywil> In order to load jQuery with AMD (meaning asynchronously), I'm loading the tests with AMD to ensure the dependency is met. However, this has caused a failure with the ready event since the tests are loaded (and therefore ready events are bound) after DOM ready, so those bound with .on() never get triggered.
[09:39:32] <timmywil> The question is should I add a special event add function for "ready" to immediately trigger ready handlers when bound?
[10:16:47] <timmywil> ah, it seems that's tested behavior
[10:16:51] <timmywil> well, hmmmm
[11:02:23] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06AMD: 02http://git.io/Otdxtg
[11:02:23] <jqcommit> 13jquery/06AMD 1488c28dc 15Timmy Willison: Fix failing tests (except for one)
[11:04:42] <timmywil> take that back, fixed all tests (in Chrome anyway)
[11:40:29] <rxaviers> timmywil, after AMD gets landed, will you guys include the dist/jquery.js on tagged releases or not?
[11:41:26] <rxaviers> s/or not//g
[11:48:20] <m_gol> rxaviers: that's the idea, the full build will always exist
[11:50:24] <rxaviers> hey m_gol!
[11:50:25] <rxaviers> ok
[11:50:38] <rxaviers> It isnt included. But, will. Right?
[11:51:21] <m_gol> AMD is the work in progress, not everything has to be there at the moment :)
[11:54:07] <rxaviers> Yeap I know, thanks ;)
[11:59:36] <scott_gonzalez> snover: Do you remember which file controls the footer on bugs.jquery.com?
[12:00:16] <snover> itâ€™ll be one of the ones that is in the trac instanceâ€™s specific template directory
[12:00:24] <snover> there should only be like one or two
[12:00:35] <snover> ticket.html and probably another one like layout.html or something
[12:01:48] <scott_gonzalez> Hmm...I looked at all the files in /private/templates
[12:01:55] <scott_gonzalez> But the only one that had footer stuff was ancient.
[12:02:00] <scott_gonzalez> "Copyright John Resig"
[12:40:26] <timmywil> rxaviers, m_gol: actually, we weren't planning on including the full build
[12:41:00] <timmywil> however, we will be able to publish built packages to npm/bower 
[12:41:13] <rxaviers> via another repo
[12:41:13] <scott_gonzalez> snover: Apparently we have a server with a bogus copy of bugs.jquery.com :-/
[12:41:15] <rxaviers> via another repo?
[12:41:25] <scott_gonzalez> I found the real server and private/templates was correct.
[12:41:40] <timmywil> rxaviers: no, via code hosted by npm/bower
[12:41:50] <snover> scott_gonzalez: neat!
[12:42:23] <rxaviers> timmywil, wait bower doesn't host code, does it? AFAIK, it's a tool that simply points to your repo.
[12:42:32] <timmywil> rxaviers: it's coming
[12:42:47] <scott_gonzalez> After editing six sites that don't use our new jquery-wp-content setup, I want to kill someone.
[12:42:47] <rxaviers> oh.. how is it going to work?
[12:42:57] <scott_gonzalez> We need to get all these sites transitioned ASAP.
[12:43:19] <scott_gonzalez> Not sure we'll ever be able to do anything sane with the Trac setups though.
[12:43:31] <timmywil> basically the same as npm. Build a tarball and publish.
[12:44:23] <timmywil> rxaviers: but actually, I would prefer to just include the built files, but I understand the concern with including them. We don't want to have to build every commit.
[12:44:25] <rxaviers> holy cow, that's interesting... So, we'll be able to distribute something different than our source.
[12:46:07] <rxaviers> ok thanks.. just for curiosity do you have a reference of such bower new feature? like an issue or something?
[12:50:06] <timmywil> yea one sec
[12:50:46] <timmywil> github is slow for me right now
[12:51:02] <rxaviers> another question. Is the plan to publish the sources + bundle on bower or only the bundle? Because, since source files are AMD, it will be really useful to fetch the sources via bower as well as the bundle.
[12:51:15] <scott_gonzalez> They're still recovering from the DDoS attack.
[12:51:34] <timmywil> rxaviers: the plan is to include both so you can take either the built source or just certain modules
[12:51:41] <rxaviers> cool
[12:52:21] <timmywil> alright, here it comes
[12:52:50] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 061.x-master: 02http://git.io/B1Xfog
[12:52:50] <jqcommit> 13jquery/061.x-master 14217cbb7 15Timmy Willison: AMD-ify jQuery sourcegit s! Woo! Fixes #14113, #14163....
[12:52:57] <doesallmagic2> Project jQuery Core 1.x build #196: STILL FAILING in 18 sec: http://jenkins.jquery.com/job/jQuery%20Core%201.x/196/
[12:52:57] <doesallmagic2> timmywillisn: AMD-ify jQuery sourcegit s! Woo! Fixes #14113, #14163.
[12:53:06] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/8J00MA
[12:53:06] <jqcommit> 13jquery/06master 146318ae6 15Timmy Willison: AMD-ify jQuery sourcegit s! Woo! Fixes #14113, #14163.
[12:53:21] <doesallmagic2> Project jQuery Core build #873: STILL FAILING in 24 sec: http://jenkins.jquery.com/job/jQuery%20Core/873/
[12:53:22] <doesallmagic2> timmywillisn: AMD-ify jQuery sourcegit s! Woo! Fixes #14113, #14163.
[12:54:39] <timmywil> ah, the build is in a folder called var on jenkins lol
[12:54:44] <timmywil> ok
[12:57:09] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/jvlmFA
[12:57:09] <jqcommit> 13jquery/06master 14b7b50a7 15Timmy Willison: Fix build for jenkins
[12:57:52] <timmywil> rawk
[12:59:09] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 061.x-master: 02http://git.io/-8yczA
[12:59:09] <jqcommit> 13jquery/061.x-master 14f5b1a8e 15Timmy Willison: Fix build for jenkins
[12:59:29] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/HF0w_w
[12:59:29] <jqcommit> 13jquery/06master 147877c4f 15Timmy Willison: Remove log
[13:01:14] <timmywil> alright, there are probably some fails somewhere that I missed. We'll see how that goes.
[13:07:46] <rxaviers> timmywil, wow jQuery AMDied \o/
[13:07:51] <rxaviers> AMDfied*
[13:08:10] <rxaviers> amazing
[13:12:38] <doesallmagic2> Project jQuery Core build #874: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core/874/
[13:12:39] <doesallmagic2> timmywillisn: Fix build for jenkins
[13:12:52] <rxaviers> timmywil, about bower and the bundle jquery. Doesn't it still require to build on every publish?
[13:13:10] <timmywil> sure, on every publish, but not every commit
[13:13:29] <timmywil> that is if we were to track the built files like some repos
[13:13:44] <timmywil> we could also point tags at headless commits, but that feels dirty
[13:14:47] <rxaviers> ok
[13:28:35] <doesallmagic2> Project jQuery Core build #875: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core/875/
[13:28:36] <doesallmagic2> timmywillisn: Remove log
[13:44:10] <doesallmagic2> Project jQuery Core 1.x build #197: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/197/
[13:44:11] <doesallmagic2> timmywillisn: Fix build for jenkins
[14:43:37] <jqcommit> 01[13jquery01] 15timmywil 04deleted 06AMD at 1488c28dc: 02http://git.io/qiqqRA
[15:22:09] <jqcommit> 01[13jquery.com01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/icXeuw
[15:22:09] <jqcommit> 13jquery.com/06master 14b0dd2b0 15Scott GonzÃ¡lez: Add MaxCDN to list of who's using jQuery.
[15:22:49] <jqcommit> 01[13jquery.com01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/RQykSQ
[15:22:49] <jqcommit> 13jquery.com/06master 14308151b 15Scott GonzÃ¡lez: 2.0.3-2
[17:39:10] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/-BOc9w
[17:39:10] <jqcommit> 13jquery/06master 14cecb52f 15Timmy Willison: Specify support as a dependency wherever it is used. Optimize module order to save 15 bytes.
[17:43:59] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 061.x-master: 02http://git.io/k_QEKw
[17:43:59] <jqcommit> 13jquery/061.x-master 147315861 15Timmy Willison: Specify support as a dependency wherever it is used. Optimize module order to save 15 bytes....
[17:54:35] <doesallmagic2> Project jQuery Core build #876: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core/876/
[17:54:36] <doesallmagic2> timmywillisn: Specify support as a dependency wherever it is used. Optimize module order to save 15 bytes.
[18:10:11] <doesallmagic2> Project jQuery Core 1.x build #198: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/198/
[18:10:11] <doesallmagic2> timmywillisn: Specify support as a dependency wherever it is used. Optimize module order to save 15 bytes.
