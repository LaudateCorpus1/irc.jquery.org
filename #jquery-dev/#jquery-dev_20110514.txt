[09:08:10] <jqcommit> jquery: master timmywil * 6171e0a (2 files in 2 dirs): Retrieve the class attribute on a form in IE6/7. Fixes 9286. - http://bit.ly/jkdiFy
[09:08:37] <timmywil> blar, no #
[09:10:51] <addyosmani> That was quick. thanks for the fix timmywil :)
[09:11:13] <timmywil> addyosmani: np, it dawned on me as soon as I saw the ticket :)
[09:11:37] <addyosmani> sweet!
[09:11:47] <timmywil> forms get special treatment in IE6/7, but getAttributeNode('className') doesn't work like getAttribute('className') does
[09:12:01] <addyosmani> I'm sure you must be exhausted with all these attr/prop related tickets, but you've been knocking them out fairly fast.
[09:12:19] <addyosmani> ah, I see
[09:12:25] <timmywil> addyosmani: it's been lively ;)
[09:12:28] <addyosmani> lol.
[09:12:46] <addyosmani> I can imagine.
[12:05:46] <jaubourg> re
[12:09:41] <necromancer> is there a reason why .children() doesn't use Sizzle selectors? like, why can't I do .children('.class > element')? i'm limited to one field type at a time.
[12:09:56] <necromancer> so i'd have to do .children('.class').children('element')
[12:10:22] <jaubourg> if you select ".class > element", it's not longer a child
[12:10:25] <jaubourg> use find
[12:11:15] <jaubourg> or do I make no sense?
[12:11:18] <jaubourg> :P
[12:13:41] <necromancer> oh does .find('.class > element') work?
[12:14:04] <jaubourg> I'd expect it to
[12:14:05] <necromancer> no you make sense, i figured there must have been something shorter than just writing .children() over and over again...
[12:14:10] <necromancer> lol
[12:14:28] <jaubourg> though I'm not sure it'll be constraint to the children
[12:14:33] <jaubourg> that the thing
[12:15:01] <jaubourg> if you have a descendant down the structure with .class, it would be taken
[12:15:17] <jaubourg> (its element children that is)
[12:15:35] <jaubourg> wondering if .find( "> .class > element" ) would be valid
[12:15:45] <jaubourg> doubt so though
[12:17:31] <gnarf> jaubourg: it is
[12:17:41] <jaubourg> nice
[12:17:48] <gnarf> .find(">selector") === .children("selector")
[12:18:02] <gnarf> well not exactly, but same results
[12:18:03] <jaubourg> necromancer: you have your solution now ;)
[12:18:05] <gnarf> ya know
[12:18:18] <jaubourg> yeah, got you gnarf, thanks for the heads up
[13:01:15] <jaubourg> ?#9275
[13:01:41] <jaubourg> ajpiano: http://bugs.jquery.com/ticket/9275
[18:39:14] <jaubourg> kriszyp: you there?
[18:40:15] <kriszyp> yes
[18:40:20] <jaubourg> hey
[18:40:23] <kriszyp> hi
[18:40:37] <jaubourg> I made the proposal of adding progress callbacks to jQuery deferreds
[18:40:48] <jaubourg> thought you'd like to know ;)
[18:40:54] <kriszyp> cool
[18:41:08] <jaubourg> got a branch with progress in (even handled through when)
[18:41:35] <jaubourg> buggy because I messed up with how the "memory" of progress works
[18:41:40] <jaubourg> wanted to ask you
[18:41:45] <kriszyp> do have promise producer of progress updates? Will this be integrated with XHR calls?
[18:42:00] <jaubourg> it's a first step for xhr calls
[18:42:06] <kriszyp> right
[18:42:30] <jaubourg> I implemented them just like done or fail callbacks, bur repeatable
[18:42:51] <jaubourg> so if you defer.progress( fn ), fn will be called if there already was progress
[18:42:58] <jaubourg> does it make sense to you?
[18:43:30] <jaubourg> (only the last progress value obviously)
[18:43:30] <kriszyp> yeah
[18:43:54] <kriszyp> that does make sense, I hadn't really figured out the best way to do that, but I think that makes sense...
[18:44:10] <kriszyp> so what XHR calls report? the responseText so far?
[18:44:13] <jaubourg> yeah, I thought an event-like system would be weird there
[18:44:33] <jaubourg> I haven't implemented it on the jqXHR yet
[18:44:44] <jaubourg> need to add a progress callback for transports to do so
[18:44:51] <kriszyp> just curious how you were planning on doing it
[18:45:22] <jaubourg> well, it's quite the nightmare, because you have responseText progress, obviously, but you also have upload progress in xhr2
[18:45:39] <kriszyp> if each progress event would provide the progressively larger responseText (or just the text since the last progress, but if you are just giving the last progress event to a late listener, I would assume the former)
[18:45:50] <kriszyp> ah, yes, true
[18:45:53] <kriszyp> good point
[18:45:55] <jaubourg> beside, responseText progress is weird, especially when you expect a dataType... I'm not sure how I'm supposed to try & convert portions of the message
[18:46:10] <jaubourg> let's say if you expect json
[18:46:17] <kriszyp> progressive JSON parsing is pretty tough field in the browser
[18:46:24] <jaubourg> yeah
[18:46:58] <jaubourg> so I'm unsure about the way to go really
[18:47:07] <kriszyp> anyway, sounds cool, looking forward to seeing how you resolve it all (pun intended) :)
[18:47:20] <jaubourg> I promise I'll screw up as usual ;)
[18:47:40] <kriszyp> well, looks like you are making good progress ;)
[18:47:45] <jaubourg> hahaha
[18:48:06] <jaubourg> let's hope the proposal is not rejected then ;P
[18:48:51] <jaubourg> good side effect is that I scratched the _Deferred object and created a much more generic callbacks list object
[18:48:58] <jaubourg> hang on, let me link it to you
[18:49:22] <jaubourg> https://github.com/jquery/jquery/blob/1.7%2Fcallbacks/src/callbacks.js#L17
[18:50:40] <jaubourg> work in progress really, but I like the idea of providing the underlying callbacks list as an utility objects for all to use
[18:51:32] <kriszyp> interesting
