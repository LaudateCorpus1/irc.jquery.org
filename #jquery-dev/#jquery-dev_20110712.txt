[06:43:09] <rwaldron> hooray for bugs!
[07:22:08] <DaveMethvin> jaubourg: you around? docs#6400
[07:22:09] <bot-t> jaubourg, [#6400] script error with ajax call not shown (open bug) - http://jqbug.com/6400
[07:32:32] <JohnResig> rwaldron: http://docs.jquery.com/Won%27t_Fix
[07:36:24] <ajpiano> JohnResig DaveMethvin rwaldron i'll be there in half hourish, had a bad night of sleep
[07:36:33] <JohnResig> k, no problem
[07:36:35] <DaveMethvin> sorry to hear
[07:36:37] <rwaldron> ajpiano no problem
[07:36:40] <DaveMethvin> we'll assign all bugs to you
[07:36:48] <ajpiano> it's ok i'm looking forward to being bathed in the cool air of that room
[07:40:11] <DaveMethvin> https://github.com/benbarnett/jQuery-Animate-Enhanced/
[07:42:03] <rwaldron> https://github.com/louisremi/jquery.transform.js
[07:49:59] <jaubourg> sprinting?
[07:50:40] <addyosmani> fwiw, Louis's implem > Ben's
[07:51:12] <addyosmani> imo
[07:51:53] <jaubourg> DaveMethvin: ping me on skype if you're sprinting, wanna see you guys ;)
[07:52:34] <jaubourg> :|
[07:53:16] <addyosmani> +1. Might not be able to talk but I'd love to listen in and contrib to discussions where I can.
[07:53:46] <DaveMethvin> we're not saying much atm
[07:53:48] <DaveMethvin> :)
[07:54:14] <DaveMethvin> i'm going thru the 1.7 tix to be sure we closed the NOs and set the YES to 1.7 milestone
[07:54:18] <jaubourg> yeah, well, would be nice to join ;)
[07:55:27] * jaubourg misses the team feel
[07:55:28] <DaveMethvin> what's your skype jaubourg
[07:55:31] <jaubourg> underaloz
[07:55:38] <addyosmani> im doing great dave.
[07:56:29] <jaubourg> added Dave
[07:59:30] <jaubourg> so no video?
[07:59:37] <addyosmani> it appears no video
[07:59:51] <addyosmani> think you need a subscription or something
[08:00:22] <jaubourg> really? That's new?
[08:00:32] <addyosmani> group video chat is i believe
[08:02:50] <jaubourg> bought the day pass, I see you addy ;)
[08:03:05] <addyosmani> haha
[08:03:11] <jaubourg> SuperAddy
[08:03:11] <addyosmani> excellent. nice work, jaubourg
[08:03:45] <addyosmani> how are you doing today, julian?
[08:04:00] <jaubourg> man, my headset broke, look what I got as a mic
[08:04:10] <addyosmani> ouch
[08:04:17] <addyosmani> I guess its better than nothing!
[08:04:32] <jaubourg> yep but need to have it in hand so meh, not that cool
[08:04:47] <jaubourg> hey Dave, any way we could get your vid stream?
[08:04:47] <addyosmani> there's always duct-tape ; )
[08:04:52] <jaubourg> lol
[08:05:58] <addyosmani> $.browser just wont die.
[08:06:06] <jaubourg> heh
[08:06:07] <addyosmani> so depressing.
[08:06:29] <addyosmani> it's like larry king. it's going to live forever.
[08:07:36] <jaubourg> blam, no more call
[08:07:42] <DaveMethvin> come back skype!
[08:07:57] <addyosmani> i remember we had some issues like this on the last sprint a while back
[08:08:00] <addyosmani> with video etc
[08:08:10] <addyosmani> im back. i can hear/see
[08:08:25] <DaveMethvin> the network conn is bad here
[08:08:34] <DaveMethvin> we had a heck of a time yesterday
[08:08:54] <addyosmani> you guys end up having to do audio or did video finally play nice?
[08:09:11] <jaubourg> I have my video on
[08:09:17] <jaubourg> don't see you addy
[08:09:30] <addyosmani> i should be back in a sec
[08:10:26] <jaubourg> I'M IN UR SKAIP, WATCHIN' UR WOKPLASS
[08:10:36] <addyosmani> lulz
[08:10:59] <DaveMethvin> i think docs#9399 and docs#9400 are just needsdocs, right?
[08:11:00] <bot-t> [#9399] Deprecate jqXHR.success and jqXHR.error (open enhancement) - http://jqbug.com/9399
[08:11:00] <bot-t> [#9400] Remove :input Selectors (open enhancement) - http://jqbug.com/9400
[08:11:01] <jaubourg> place seems nice
[08:11:25] <jaubourg> first one definitie yes, let me check the second one
[08:11:29] <DaveMethvin> b/c we aren't removing the :input selectors atm just discouraging them
[08:11:32] <addyosmani> second one looks like it too
[08:12:08] <jaubourg> +A addy
[08:12:20] <addyosmani> DaveMethvin would those be wontfix + docs or are we leaving open for now?
[08:12:41] <DaveMethvin> i think they can be closed fixed once we make the docs changes
[08:12:49] <DaveMethvin> the "fixing" is the deprecation
[08:12:51] <addyosmani> sounds like a plan
[08:12:53] <DaveMethvin> :)
[08:13:02] <jaubourg> heh
[08:13:13] <addyosmani> I'll put some docs time in this evening to help get these out of the way
[08:13:48] <jaubourg> I'd love to see ;)
[08:14:23] <addyosmani> The Aol offices are amazing. By amazing, I mean we're now running out entire company out of someone's backyard shed.
[08:14:30] <addyosmani> *our
[08:15:02] <jaubourg> lol, my flat is nice and is incidently my workplace :P
[08:15:16] <addyosmani> your flat seems decent jaubourg
[08:15:28] <addyosmani> :)
[08:15:32] <jaubourg> let me show you around
[08:15:32] <DaveMethvin> http://bugs.jquery.com/query?milestone=1.7&col=id&col=summary&col=milestone&col=owner&col=type&col=status&col=priority&report=206&order=priority
[08:15:40] <DaveMethvin> That's the pile to be done on 1.7
[08:16:45] <addyosmani> I kid I kid. Our offices aren't bad
[08:19:10] <DaveMethvin> http://bugs.jquery.com/query?status=assigned&status=new&status=open&status=reopened&milestone=1.next&col=id&col=summary&col=milestone&col=status&col=owner&col=changetime&report=207&order=id
[08:24:35] <jaubourg> ?#9033
[08:24:36] <bot-t> [#9033] try{ } finally{ } error in IE8 (open bug) - http://jqbug.com/9033
[08:25:51] <jaubourg> the only fix I could think of is to setTimeout(..., 0) the hell out of all callbacks like I do in node-plus https://github.com/creative-area/node-plus/blob/master/lib/_/deferred.js but that would make callbacks async even for sync ajax
[08:26:07] <jaubourg> other possibility is to leave the deferred in a locked state when an exception occurs
[08:26:24] <jaubourg> (that is removing the try/finally construct altogether)
[08:26:59] <timmywil> skype me dawgz
[08:27:20] <addyosmani> ?#7930
[08:27:22] <bot-t> [#7930] Methods on custom objects are being called when an event with the same name is triggered on it (assigned bug) - http://jqbug.com/7930
[08:27:22] <jaubourg> fyi, second solution is what is currently in the callbacks branch
[08:27:26] <jaubourg> hey timmy
[08:27:36] <timmywil> hey jaubourg!
[08:27:57] <addyosmani> On that other one, scott mentions the outcome of 7930 depends on what we do with 7818, which was later fixed.
[08:28:08] <jaubourg> now let's see how badly Dave's connection behaves with a fourth video stream ;)
[08:28:12] <addyosmani> be interesting to get some sort of resolution on it if anyone else wants to review.
[08:28:13] <addyosmani> lol.
[08:28:31] <addyosmani> fingers crossed it doesn't die jaubourg
[08:28:56] <jaubourg> dream on :P
[08:29:02] <addyosmani> :P
[08:29:34] <jaubourg> what's the problem Dave?
[08:31:21] <jaubourg> kinda like using when with an object with a promise method that doesn't return a promise :P
[08:33:05] <timmywil> I'm online for whenever: timmywillison
[08:35:57] <DaveMethvin> i'll add you once you're in the list, i just sent you an invite
[08:36:38] * gnarf sighs
[08:36:42] <gnarf> still no power @ home
[08:37:39] <jaubourg> woah, Dave, your video lags like crazy
[08:38:20] <addyosmani> Its still alive. it's a modern day miracle.
[08:38:34] <timmywil> i'll mute myself for now
[08:39:30] <jaubourg> took the two deferred-related issues I found in the 1.7 list
[08:39:36] <jaubourg> (assigned to myself)
[08:39:52] <timmywil> which one are we on
[08:40:22] <jaubourg> so true
[08:40:35] <addyosmani> for later: would be useful to define what we consider the correct/most useful output from :empty. It's currently inconsistant across browsers. (see #8429)
[08:40:41] <jaubourg> timmy, put your webcam on
[08:40:49] <jaubourg> :)
[08:41:21] <timmywil> kk, hope we can handle it
[08:42:45] <jaubourg> we can't but that's what fun is all about :P
[08:43:20] <jaubourg> sob :(
[08:43:34] <jaubourg> but I'll have to go not so long after you have to Dave
[08:46:00] <timmywil> jaubourg: well, it's turned on, but I think skype is only allowing me to see dave
[08:49:50] <addyosmani> Question: do we define what versions of Safari mobile we're actively supporting for jQuery core?. I'm going through any iPad/Mobile related tickets in our list atm.
[08:49:51] <addyosmani> Just wondering.
[08:50:13] <addyosmani> I know we did a compat list for jqMobile.
[08:53:53] <jaubourg> rwaldron, I see you!
[08:54:15] <JohnResig> addyosmani: yeah, probably the same ones as jQuery Mobile
[08:54:34] <jaubourg> rwaldron, rwaldron_: turn left and say hi, you punk! :P
[08:54:59] <jaubourg> :|
[08:55:06] <addyosmani> cheers JohnResig
[08:56:06] <jaubourg> ajpiano: just take rick off his screen so that I can say hi to him face to face ;)
[08:56:56] <DaveMethvin> cya later
[09:15:03] <rwaldron> timmywil are 7770 and 7555 samesies?
[09:16:23] <timmywil> rwaldron: not sure exactly, is uses Sizzle filter rather than the selector engine, but they are certainly related
[09:18:59] <rwaldron> ok, cool
[10:08:03] <rwaldron> ajpiano http://bugs.jquery.com/ticket/9091#comment:6
[10:10:36] <rwaldron> ajpiano http://bugs.jquery.com/ticket/9507
[10:25:33] <gnarf> rwaldron: yt? http://bugs.jquery.com/ticket/9575
[10:30:33] <gnarf> just curious if that was meant to be assigned? :)
[10:30:41] <gnarf> I'd almost hit the "needsinfo"
[10:32:56] <addyosmani> http://bugs.jquery.com/ticket/9522 I'd like to +1 the vote for invalid use case here. If anyone else agrees, I'd like to close it with that resolution.
[10:57:23] <rwaldron> gnarf i have no idea
[10:57:30] <rwaldron> not sure why i assigned that to myself
[10:57:32] <rwaldron> weird
[10:57:39] <gnarf> rwaldron: hit needs info then? :)
[10:57:59] <rwaldron> i dont know
[10:58:11] <rwaldron> "bail out"
[11:13:22] <rwaldron> ben_alman http://jsfiddle.net/rwaldron/ZEuwq/11/
[11:16:34] <rwaldron> ben_alman http://jsfiddle.net/rwaldron/6VJbe/
[11:16:43] <gnarf> random question... is IE the only browser that fails the support.opacity check?
[11:17:18] <ben_alman> i was thinking that
[11:17:34] <ben_alman> the way we detect opacity is very inference-based on not so much feature-based
[11:17:35] <ben_alman> like
[11:17:44] <ben_alman> it assumes that any failing browser supports filter
[11:17:48] <ben_alman> which maybe it does
[11:17:52] <ben_alman> dunno
[11:17:58] <ben_alman> you do what ya gotta do
[11:18:03] * ben_alman dunnoes
[11:18:07] <kswedberg> yeah. that one always made me feel a little nervous.
[11:18:14] <gnarf> https://github.com/jquery/jquery/pull/416#r63212
[11:18:38] <gnarf> i was just thinking because that fix is targeting IE, we can use style.removeAttribute
[11:45:01] <gnarf> should I bother feature testing that function?
[11:53:25] <rwaldron> ben_alman http://bugs.jquery.com/ticket/8653
[11:57:31] <rwaldron> scott_gonzalez yt?
[11:57:48] <rwaldron> have a question about docs#9434 when you have a moment
[11:57:49] <bot-t> [#9434] .outerWidth()/.outerHeight()/.innerWidth()/.innerHeight() should work on window and document (open enhancement) - http://jqbug.com/9434
[12:02:07] <scott_gonzalez> yo
[12:02:41] <rwaldron> hey dude
[12:02:56] <rwaldron> i was just wondering if you could add some useful insight or details to that ticket
[12:03:04] <rwaldron> in a comment or something
[12:03:24] <scott_gonzalez> sure
[12:03:48] <rwaldron> thank you :)
[12:03:52] <scott_gonzalez> hmm...what more detail do you want?
[12:03:58] <scott_gonzalez> right now I believe they all just bomb
[12:04:04] <scott_gonzalez> they should just return this.height()
[12:39:26] <Krinkle> Hi, there has been a problem with jquery.support for a while on Test Swarm causing all boxes to be black (since the unit test for it threw an uncaught exception), not just the job page but the jquery-commit list overview is basically useless http://swarm.jquery.org/user/jquery
[12:39:28] <Krinkle> Fixed in  https://github.com/jquery/jquery/pull/433
[12:39:34] <Krinkle> Could someone pull ?
[12:40:18] <Krinkle> (if you can remember, it was supposed to look like this: http://toolserver.org/~krinkle/testswarm/user/MediaWiki )
[12:40:22] <Krinkle> gotta go, dinner. thanks!
[13:31:02] <jzaefferer> hey Krinkle, looks like you customized TestSwarm quite a bit
[13:31:13] <Krinkle> Indeed
[13:31:34] <jzaefferer> would be great if you could share that back - I'm looking for more contributors to the jQuery testing team, on both QUnit and TestSwarm
[13:31:52] <Krinkle> Fixed many bugs and made some performance improvements for slower machines and svn-compatibility and sparse/partial checkouts
[13:31:57] <jzaefferer> having the labels under the browser icons is great
[13:32:05] <jzaefferer> nice
[13:32:32] <jzaefferer> is this testing actual mediawiki stuff?
[13:32:45] <jzaefferer> looks like it :-)
[13:32:45] <Krinkle> Next week I'll be in San Fransisco with the rest of the MediaWiki team, at which point we'll re-do this The Right Way (right now it's a non-git download with local hacks). We'll start clean on a mediawiki.org subdomain and push patches
[13:33:03] <Krinkle> Yep, it's live.
[13:33:06] <jzaefferer> nice, looking forward to those
[13:33:21] <jzaefferer> would be great if you could also help out with some of the existing issues
[13:33:30] <jzaefferer> really need some help there
[13:34:14] <Krinkle> SInce some patches will depend on eachother, it would be fairly important to have someone pulling them on short to avoid having to go back and make commits merge, I dont think we'll have much time for that.
[13:34:17] <jzaefferer> would be good to hear your experience with the useragents table - I'm currently considering taking that out of the database, have it just live in code, making it easier to update it
[13:34:31] <Krinkle> Although I heard git is better at it than svn, we'll see
[13:34:42] <jzaefferer> yeah, generally merging is less of a problem
[13:34:51] <jzaefferer> also currently no one is commiting/pullin anything :/
[13:35:00] <Krinkle> right
[13:35:05] <Krinkle> you have this access ?
[13:35:29] <jzaefferer> yeah, not the only one, but probably the only one at least partially available
[13:35:35] <Krinkle> ok
[13:35:56] <Krinkle> One thing I noticed right away when I changed the ua-table is the /user/* page being all messed up
[13:36:13] <Krinkle> ie. the columns go out of alignment,
[13:36:16] <jzaefferer> actually the core bug team and core commiters have access, too, though I don't think anyone ever commited something directly
[13:36:47] <jzaefferer> yeah, that's an issue I'd really like to solve in a way that doesn't require even crazier table rendering
[13:36:57] <Krinkle> I fixed that.
[13:37:12] <Krinkle> http://toolserver.org/~krinkle/testswarm/user/KrinkleBot
[13:37:20] <Krinkle> see an Opera was added
[13:37:37] <jzaefferer> ah, nice
[13:37:37] <Krinkle> light grey = wasn't in the job submission yet
[13:37:43] <jzaefferer> that works
[13:38:23] <Krinkle> I also like to seperate projects and users (instead of having 'users' and 'users who know their auth-code'.
[13:38:32] <Krinkle> I didn't fix that, but i did create the illusion
[13:38:42] <Krinkle> http://toolserver.org/~krinkle/testswarm/ "Projects"
[13:38:44] <jzaefferer> also quite reasonable
[13:39:03] <jzaefferer> more score boards, too?
[13:39:12] <Krinkle> No, they're the default oens
[13:39:13] <Krinkle> ones*
[13:39:25] <Krinkle> but someone wrapped it in if ( false ) in git
[13:39:31] <Krinkle> because it was too slow for jquery
[13:39:42] <Krinkle>  /scores/ takes 60+ seconds to load
[13:39:45] <Krinkle> (For jquery)
[13:39:58] <jzaefferer> right, canremember that, but can't having seen the "rarest …" boards...
[13:40:30] <jzaefferer> at the time testswarm was running on a mozilla-labs machine, dunno if that was just way too small
[13:40:39] <Krinkle> we should create a key-value cache table, by default not used but if config option foobar is true, queries will be pulled from cache instead.
[13:40:53] <jzaefferer> at the time testresults were also stored as plaintext, without the gzip compression...
[13:40:56] <Krinkle> that way we'll be able to get scores for jquery on the frontpage as well
[13:41:23] <jzaefferer> dunno if we need that, just should give it a try on a proper machine again
[13:41:37] <jzaefferer> I don't think the swarm.jquery.org machine is actually in a good shape either :/
[13:41:57] <Krinkle> I also think adding some indices in the mysql table will do good as well
[13:42:13] <Krinkle> from what I see the table doesn't have any, it queries everything everytime
[13:42:49] <Krinkle> re: useragent table, I think putting that into config sounds good
[13:43:03] <Krinkle> that'll enable making custom groups without adding columns
[13:43:15] <jzaefferer> I added some indices at some point, but that's probably very much incomplete and not properly optimized at all...
[13:44:09] <Krinkle> Although I wasn't involved in development of MediaWiki's db schema, I know it fairly well and it's very optimized (it runs Wikipedia on a donation based budget)
[13:44:24] <Krinkle> so I can apply some tricks from there when needed :)
[13:44:47] <jzaefferer> would be great
[13:44:54] <jzaefferer> could help us keep the machine running :-)
[13:45:02] <Krinkle> and ours :P
[13:45:05] <jzaefferer> and I'm sure other testswarm users would appreciate that, too
[13:45:31] <jzaefferer> btw. there's now a planning wiki for the testing team, if you wanna join there, too: http://jquerytesting.pbworks.com/w/page/41556026/FrontPage
[13:45:40] <Krinkle> I know, I signed up a few hours ago
[13:45:56] <Krinkle> saw it in github commits flying by my screen
[13:46:04] <Krinkle> in the readme file or something like that
[13:46:33] <jzaefferer> ah, nice, then I actually emailed you earlier, too :-)
[13:46:42] <Krinkle> Ah, that was you :D
[13:46:45] <jzaefferer> didn't make the association with that signup and your pull request
[13:47:11] <jzaefferer> I just ran the latest jQuery testsuite, it doesn't even finish for me :/ can't really pull in your request in that state
[13:47:39] <jzaefferer> dunno what's going on there, maybe timmywil knows?
[13:49:23] <timmywil> jzaefferer: I did runs of the full suite in every browser just before the 1.6.2 release and I get full pass for current in Chrome dev.  could be your server setup?
[13:50:14] <timmywil> or are you using something not Chrome.  I could check there too
[13:50:30] <Krinkle> btw, is there a way to search through files in /jquery/jquery from github.com ? I remember something like it in the early github days, but since logged in last month after a few years, I dont see it anymore.
[13:50:45] <Krinkle> ie. all occurences of "swarm"
[13:50:47] <timmywil> there was one change that required an explicit empty cache cause Chrome's caching is extreme for some of the subpages
[13:51:06] <timmywil> jzaefferer: ^
[13:52:27] <jzaefferer> timmywil, I'm using Chrome stable
[13:52:38] <Krinkle> http://swarm.jquery.org/git/jquery/test/index.html?filter=support
[13:52:43] <timmywil> jzaefferer: strange then
[13:52:52] <Krinkle> if you create an <iframe> with that you'll see the exceptin
[13:53:05] <Krinkle> http://bugs.jquery.com/ticket/9555#comment:9
[13:53:32] <Krinkle> with my fixed applied it'll run in an iframe as well. the change is obvious though
[13:53:34] <jzaefferer> Krinkle, I'm not even doubting that your fix isn't good, just don't want to push a change when I can't verify that the testsuite passes
[13:53:42] <timmywil> ohhh, from the iframe.  I haven't looked further into that one, but I'm not terribly worried since some of the tests assume that you're not in an iframe.
[13:53:59] <Krinkle> TestSwarm runs tests in an iframe
[13:54:05] <jzaefferer> timmywil, I'm running just in regular Chrome dev, no iframe
[13:54:17] <Krinkle> besides, jquery should (and does) work fine in an iframe
[13:54:25] <jzaefferer> test 285 doesn't finish, Running ajax: .ajax() - retry with jQuery.ajax( this )
[13:54:36] <timmywil> failing tests in an iframe doesn't necessarily mean jquery doesn't work in an iframe
[13:54:36] <Krinkle> the fix is obvious and simply a result of code quality imho. window.top is not the parent, window.parent is...
[13:54:52] <Krinkle> simple mistake, easy to make.
[13:55:20] <Krinkle> if that would've been in jquery core it would fail there too.
[13:55:22] <jzaefferer> what does this mean "there was one change that required an explicit empty cache cause Chrome's caching is extreme for some of the subpages"?
[13:55:46] <Krinkle> I assume the /data/*.* thingies ?
[13:56:48] <jzaefferer> I don't know what the issue is, but certainly not a caching problem - just ran in an incognito window, fails at the same test
[13:57:14] <timmywil> jzaefferer: it was nothing major.  which test are you failing at?
[13:57:31] <jzaefferer> and I ran make...
[13:57:37] <jzaefferer> test 285 doesn't finish, Running ajax: .ajax() - retry with jQuery.ajax( this )
[13:57:47] <jzaefferer> there are also multiple test failures before that
[13:57:56] <jzaefferer> ajax: jQuery.ajax() - responseText on error (1, 0, 1)http://localhost/jquery/test/?filter=ajax%3A%20jQuery.ajax()%20-%20responseText%20on%20error
[13:57:59] <jzaefferer> Expected 1 assertions, but 0 were run
[13:58:16] <jzaefferer> http://bassistance.de/i/100bde.png
[13:58:28] <jzaefferer> looks like those are actually related
[14:00:09] <timmywil> jzaefferer: that looks like the error I get when my local server isn't running php
[14:00:26] <jzaefferer> that's likely the issue
[14:00:28] <timmywil> python simple server does not work
[14:00:39] <jzaefferer> recently switched apache to nginx
[14:00:50] <jzaefferer> meh, do you still need those php files?
[14:01:03] <jzaefferer> anyway, can you pull in Krinkle's pull request?
[14:01:21] <jzaefferer> would be nice to get testswarm results again, even if no core dev cares about them...
[14:01:39] <timmywil> i missed it, i'll take a look
[14:02:18] <timmywil> ok yea, that's what I thought.  It's just a change to the tests.
[14:02:23] <timmywil> thanks Krinkle !
[14:02:36] <Krinkle> you're welcome :)
[14:03:07] <Krinkle> jzaefferer: For mediawiki's PHP backend we use PHPUnit/CruiseControl with an irc-nag when a commit breaks something.
[14:03:54] <Krinkle> jzaefferer: it's a bug annoying though since cruise doesn't record in which commit something started faiing (it does svn up instead of svn checkout, ie. only latest version and re-runs every few minutes)
[14:04:03] <Krinkle> what I like about test swarm is that it has all past copies
[14:05:06] <gnarf> jzaefferer: i'd love to see $.Color in swarm ;)
[14:05:20] <Krinkle> so instead of "1 or more test suites are broken, revisions since last succesfull buid; r1/john, r2/foo" we could have, for test swarm: jquery.support broken in rX/john, jquery.sizzle broken as of rY/george
[14:06:07] <Krinkle> gnarf: where would it be used ? to animate the boxes as they appear on a /job/#id# page ?
[14:06:46] <Krinkle> we'd have to implement a JSON-format first, (right now it does a $.fn.load for itself and replaces the table html)
[14:06:48] <gnarf> Krinkle: no, i mean the results of the tests :)
[14:07:01] <gnarf> like I'd like to see a swarm of jquery-color ;)
[14:07:06] <Krinkle> ah, right.
[14:07:31] <Krinkle> there's /user/jquery.ui, so another auto-submit user for that plugin
[14:07:59] <gnarf> u mean /user/jqueryui ?
[14:08:01] <jzaefferer> so yeah, I'd like to add more projects to our swarm, but the perl-based cron jobs are so horrible, I'd much rather combine that with a Hudson instance, configure the jobs there, using the Hudson-TestSwarm plugin, and actually get notifications for broken commits
[14:08:04] <Krinkle> gnarf: same thing
[14:08:11] <gnarf> orly
[14:08:17] <jzaefferer> instead of devs just ignoring the results most of the time
[14:08:31] <Krinkle> jzaefferer: since there isn't a user (or project) list yet in test swarm, I'll ask you: which projects are currently runninng/submitting to swarm.jquery (other than j core and j ui)
[14:08:41] <jzaefferer> Krinkle, in case you want to consider switching from CruiseControl to Hudson: https://github.com/appendto/hudson-testswarm
[14:08:54] <jzaefferer> just those two, nothing else
[14:09:01] <jzaefferer> not even QUnit tests are running
[14:09:09] <jzaefferer> nor jQuery Mobile
[14:09:34] <Krinkle> oh? it is *the* place to be for mobile testing
[14:09:35] <jzaefferer> and I want to set up jobs to run all these projects that depend on jQuery to run for each commit of jQuery Core, against that commit
[14:09:49] <scott_gonzalez> rwaldron: yt?
[14:09:57] <jzaefferer> yep, I think they've got something else set up, but really should get it together
[14:10:22] <jzaefferer> having Hudson sent hatemail to a core dev commiting something to core that breaks jQuery UI or Mobile would be pretty sweet
[14:10:40] <jzaefferer> no more "jQuery 1.x.0 is out. it breaks UI/Mobile/Whatever"
[14:11:17] <jzaefferer> scott_gonzalez: yt?
[14:11:23] <scott_gonzalez> jzaefferer: nope
[14:11:29] <jzaefferer> damn
[14:12:47] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://bit.ly/o7TPCi
[14:12:47] <jqcommit> [jquery/master] Landing pull request 433. Fix testswarm test cases. Fixes #9555. - Krinkle
[14:12:51] <Krinkle> jzaefferer: interesting. but jquery-color (for example) would have to have it's own checkout of jquery, to avoid oddnesses if someone runs a $.Color test before and after jquery updated.
[14:13:25] <Krinkle> timmywil: awesome, thanks! My first jquery core pull
[14:13:31] <jzaefferer> sure, have every project run by default against whatever its tested against, e.g. jQuery UI is still on 1.5.1
[14:13:32] <jzaefferer> or .2
[14:13:42] <Krinkle> ow..
[14:13:56] <jzaefferer> but at the same time testing it against latest jQuery should help the core team detect regressions as early as possible
[14:13:57] <Krinkle> well, that makes sense, in a way
[14:14:01] <Krinkle> yeah
[14:14:02] <timmywil> Krinkle: thanks for the help
[14:14:08] <jzaefferer> would also want to add my validation plugin to the mix...
[14:14:51] <Krinkle> jzaefferer: btw, gonna sketch a little situation I need to solve next week, it appears to be similar to what you mention here, so perhaps you have some ideas
[14:14:53] * Krinkle types
[14:14:53] <jzaefferer> ah, timmy just used the pullr script or whatever
[14:15:07] <jzaefferer> cool, let me know
[14:15:13] <jzaefferer> feel free to use the jquerytesting wiki
[14:16:36] <timmywil> jzaefferer: yea, it's my modified version of pulley for upstream jquery merges
[14:16:53] <timmywil> all john's magic tho
[14:17:19] <Krinkle> RIght now our mediawiki swarm checks out the js-resources directory from subversion and runs isolated tests in an .html file. In the near future we want to drop that and run tests inside mediawiki (ie. /r12334/wiki/Special:RunUnitTests), because that way the framework around the wiki (header, footer, search, api.php ajax etc.) can be tested as well.
[14:17:28] <Krinkle> That's all good, but here's the thing
[14:18:00] <Krinkle> we have half a dozen different skins (url?useskin=foo) so we want to submit each revision-job also for each skin
[14:18:22] <Krinkle> so we'd have a jobname like r12345-skinFoo, r12345-skinBar
[14:18:39] <Krinkle> perhaps you have an idea on how to do sub-projects ?
[14:19:34] <Krinkle> because skinFoo is our main skin, if somethign breaks in skinBar that's good to know but shouldn't mark the entire job as failing.
[14:20:22] <Krinkle> seperate jobs (job: r1234-skinFoo, module: foo.js) or seperate modules (job: r1234; module: foo.js-skinFoo), what do you think is better ?
[14:21:14] <Krinkle> jzaefferer: colors !! http://swarm.jquery.org/user/jquery/
[14:22:36] <gnarf> could swarm add a comment via github to the actual commit with a link to the failed tests?
[14:22:51] <gnarf> that might alleviate your "emailing" issues
[14:23:23] <Krinkle> gnarf: awesome idea
[14:23:47] <Krinkle> it'd have to compare to the previous revision though, as to not leave comments innocent commits
[14:24:11] <gnarf> hrm
[14:24:42] <gnarf> if the failed tests list != last failed tests list
[14:24:55] <Krinkle> ie. commit B brakes unit test, commit C innocent, after commit C is tested, it will report a breakage ofcourse, since commit B wasn't fixed yet.
[14:25:04] <gnarf> Krinkle: yeah
[14:25:25] <gnarf> Krinkle: what about commit D that fixes that one failure in B but opens a new failure in the same module
[14:25:27] <Krinkle> another challange is timing, swarm is async.
[14:26:12] <gnarf> well - async, and exactly how many browsers do you wait for
[14:26:14] <gnarf> etc
[14:26:27] <gnarf> you could prolly just hourly cron the "report to github" script tho
[14:27:39] <Krinkle> Whenever 1 browser engine version has fully tested 1 job (ie. job 1234 (commit f00b4r) is fully ran on Firefox 3.6 ), send a comment if failing.
[14:27:59] <gnarf> Krinkle: no reason to use more than one comment though
[14:28:08] <gnarf> i suppose you can prolly "edit" comments on github api too tho
[14:28:13] <Krinkle> yeah
[14:28:33] <Krinkle> getcomments by author=me on revision=this
[14:28:42] <Krinkle> github coolness
[14:29:43] <gnarf> i just think the github comment on the commit might actually make more sense
[14:29:49] <gnarf> than an email does
[14:30:15] <Krinkle> who mentioned e-mailing?
[14:30:19] <gnarf> jzaefferer:
[14:30:22] <Krinkle> ah, okay
[14:31:42] <gnarf> i guess he didn't mention emailing
[14:31:47] <gnarf> I just inferred it
[14:31:48] <gnarf> i think
[14:32:31] <gnarf> is there like a farm of VM's pointed @ swarm. ??? :)
[14:32:39] <Krinkle> git blame reveals https://github.com/jquery/jquery/commit/38de389a8e675c0c2d1172dd23339325ae82539a btw, looks like it's been with window.tops since the start
[14:33:34] <Krinkle> gnarf: maybe, maybe not. mostly just people opening the /run/<nickname> in a tab and leaving it there
[14:33:49] <Krinkle> crowdsourcing the grid :)
[14:34:13] <Krinkle> anyone can join the swarm from anywhere for as long and when they want.
[14:34:29] <gnarf> well, one day when I build my VM machine I'll point all of them @ swarm
[14:34:31] <gnarf> :)
[14:34:45] <gnarf> i tried running swarm on my droid
[14:34:48] <gnarf> but it seems buggy
[14:35:10] <Krinkle> the mediawiki swarm runs fine on droid, jquery's doesn't.
[14:35:25] <Krinkle> it'll take some time to catch up with the breakages
[14:35:33] <gnarf> its kinda funky on the droid
[14:35:45] <Krinkle> (most if not all are issues in /unit though, not /src)
[14:35:56] <Krinkle> such as the one fixed today
[14:36:32] <gnarf> i did that one night tho - put my droid on run.swarm, turned off the screen timeout
[14:36:43] <gnarf> it ran one suite and stopped
[14:37:09] <Krinkle> same in IE7
[14:37:14] <Krinkle> runs 1 test then goes funk
[14:37:39] <Krinkle> "object doesn't support property" kind of error
[14:37:48] <gnarf> the "cooling down" timer never counts down
[14:37:56] <gnarf> jsut says "getting more in 14 seconds" and stops
[14:38:00] <Krinkle> perhaps some use of indexOf/isArray and stuff like that in the unit tests
[14:38:02] <gnarf> (just checked again on my droid)
[14:43:15] <gnarf> ooh, new status msg
[14:43:22] <gnarf> "Error connecting to server"
[14:43:41] <gnarf> seems to be working better now tho
[14:43:52] <gnarf> i forgot to login
[15:04:47] <jzaefferer> gnarf, I don't want to build any type of notifications into TestSwarm - that's much better left up to a continous integration server
[15:04:59] <jzaefferer> e.g. Hudson has endless plugins for endless types of notifications
[15:05:19] <jzaefferer> if it doesn't exist yet, building a Hudson plugin that posts a GitHub comment makes a lot more sense then building that into TestSwarm
[15:05:36] <jzaefferer> but Hudson already supports email, irc, jabber, whatever...
[15:09:45] <Krinkle> jzaefferer: So, what does Hudson do with test swarm (or testswarm with Hudson), summarized ? 'm a little confused
[21:06:38] <jqcommit> [jquery] timmywil force-pushed 1.7/enhancement_8685 from 3d646c5 to 19b949c: http://bit.ly/nr5Nt4
[21:06:38] <jqcommit> [jquery/1.7/enhancement_8685] Style edits, code reductions, and optimizations for the effects module - timmywil
[21:06:38] <jqcommit> [jquery/1.7/enhancement_8685] Animation state is tracked on toggled/stopped animations using the private data cache.  Tests added.  Fixes #8685. - timmywil
[21:06:38] <jqcommit> [jquery/1.7/enhancement_8685] Remove unnecessary var in queue.js - timmywil
[21:48:07] <addyosmani> ajpiano, yt?
[21:48:14] <ajpiano> sup dawg
[21:48:21] <addyosmani> heya
[21:48:25] <addyosmani> so on http://api.jquery.com/jQuery.map/
[21:48:52] <addyosmani> i noticed a ticket you commented on earlier where the resolution was that we're going to say array-like objs have to be converted into actual arrays before being used with $.map
[21:49:06] <ajpiano> i did indeed
[21:49:07] <ajpiano> :)
[21:49:24] <addyosmani> because that kinda contradicts a good chunk of what we have there atm, should I assume we're stripping that old stuff out of the docs?
[21:49:38] <addyosmani> just getting a clarification before i do anything on this one :)
[21:49:47] <ajpiano> hrmm
[21:50:26] <kswedberg> addyosmani, ajpiano: maybe get danheberden's input on that too?
[21:50:42] <ajpiano> yeah i am trying to figure it out mself
[21:50:44] <addyosmani> sure thing kswedberg!
[21:52:09] <kswedberg> k. I think he made many of the recent changes to that doc
[21:52:41] <addyosmani> awes.
[21:52:51] <addyosmani> I'll chase him down when he's back on
[21:54:03] <kswedberg> :)
[22:00:24] <ajpiano> yeah i'm not entirely sure what will change about how it works more, i think i was getting more at
[22:00:56] <ajpiano> the fact that some bounding values might not work right and we don't plan on fixing it
[22:01:44] <gnarf> like "arguments" ?
[22:04:04] <ajpiano> NodeLists, jQuery itself...
[22:09:20] <jqcommit> [jquery] timmywil pushed 1 new commit to 1.7/enhancement_8685: http://bit.ly/mYKXdG
[22:09:20] <jqcommit> [jquery/1.7/enhancement_8685] Check the completed timer has not been removed already so other timers do not get accidentally removed. Fixes #6641. - timmywil
[22:23:18] <gnarf> timmy
[22:23:37] <gnarf> eh nvm actually
[22:23:39] <gnarf> answered myself
[22:23:40] <gnarf> ;)
[22:24:25] <timmywil> gnarf: still there?
[22:24:28] <gnarf> yah
[22:24:32] <gnarf> thinking about that change
[22:24:39] <gnarf> what happens if it stops a different animation
[22:24:42] <gnarf> lolz
[22:24:58] <gnarf> not sure why you'd ever do that
[22:25:27] <timmywil> ?
[22:25:51] <gnarf> like if the timers list (before i) is manipulated instead of that particular one
[22:26:01] <gnarf> but that was error b4 anyway
[22:26:48] <timmywil> gnarf: oh right, I think that one's okay though because execution order will be maintainted
[22:26:53] <timmywil> tained*
[22:27:17] <timmywil> the stop was occuring in the callback before it's own removal
[22:27:32] <gnarf> if you e1.animate({ _: 0 }, 1000); e2.animate({ _:0 }, 500, function() { e1.stop(); console.log("I get called twice??"); });
[22:28:23] <timmywil> I don't think so, but I'll check
[22:30:16] <timmywil> gnarf: yea, it's all good
[22:30:48] <timmywil> but I got another question for ya https://gist.github.com/1079765
[22:31:14] <gnarf> http://jsfiddle.net/7nABg/
[22:32:12] <gnarf> i think if we implement any more setTimeout(0)'s we might want to wrap the postmessage api
[22:32:26] <gnarf> http://ajaxian.com/archives/settimeout-delay
[22:32:38] <addyosmani> kswedberg, on #9399, do you think we require a notice much more detailed than this? http://oksoclap.com/temp
[22:32:44] <addyosmani> its one of those smaller docs todos.
[22:33:21] <gnarf> because setTimeout(...,0) is actually 4 i think
[22:33:51] <gnarf> but yeah, it makes sense
[22:34:00] <timmywil> gnarf: as long as it gets to the bottom of the stack
[22:34:08] <timmywil> but I was wondering if you knew of a better way?
[22:34:16] <timmywil> other options
[22:34:42] <timmywil> it does fix the issue, but maybe the complete call should just go somewhere else
[22:34:55] <gnarf> thinking
[22:34:58] <gnarf> know where yer going
[22:35:53] <timmywil> gnarf: fixed in mine http://grab.by/ax87
[22:35:57] <gnarf> var test = $(".test").toggle(0, function() { console.log(test) // undefined }) is the issue right?
[22:37:15] <timmywil> hmm, that should be ok.  bumping it to the bottom just means even later so test should be defined either way.
[22:37:30] <timmywil> docs#7157
[22:37:31] <bot-t> [#7157]  ( function() {) - http://jqbug.com/7157
[22:38:03] <timmywil> the problem was it hadn't been removed from the timers yet when the callback was called
[22:38:13] <gnarf> oh
[22:38:14] <gnarf> hrm
[22:38:15] <timmywil> so :animated returned true
[22:38:17] <gnarf> jQuery.speed
[22:38:25] <gnarf> look there
[22:38:29] <gnarf> its the args optimizer
[22:38:37] <gnarf> it already wraps the complete callback
[22:38:44] <gnarf> with queue
[22:38:56] <gnarf> you could probably wrap that in a timeout
[22:40:56] <gnarf> but now there will be a "dead frame"
[22:40:57] <timmywil> yea, could be there
[22:41:07] <gnarf> when there wasn't in the past
[22:41:19] <gnarf> if you queue a new anim from the callback it will happen an event loop in the future
[22:42:17] <timmywil> hmm, good point
[22:42:28] <gnarf> postmessage could win it back where supported
[22:42:30] <gnarf> but
[22:42:34] <gnarf> ...
[22:42:38] <timmywil> well, I'm not convinced we can't do it without setTimeout
[22:43:11] <timmywil> it's just about having access to complete in the right place
[22:43:15] <gnarf> timer
[22:43:19] <gnarf> timer.resolve()
[22:43:32] <gnarf> timer.abort()
[22:44:47] <gnarf> in .animate: $.when.apply( $, timers ).always( next ).then( opt.complete )
[22:44:50] <timmywil> gnarf: oo, that might actually shorten some stop stuff
[22:46:35] <gnarf> timmywil: that was one of the ideas in that clap from me & jaubourg
[22:46:40] <gnarf> using callbacks
[22:46:48] <gnarf> to improve the timers / queues
[22:46:57] <timmywil> gnarf: yea, that could be hawt
[22:47:08] <gnarf> timer.stop() makes more sense
[22:47:30] <gnarf> but whatever you wanna call it, its just a $.Deferred factory
[22:47:47] <timmywil> most likely 1.8 tho
[22:47:50] <gnarf> right
[22:48:35] <timmywil> I think I'll work on this more tomorrow and try out putting the callback on the timer
[22:48:36] <gnarf> that whole if ( done ) thing tho
[22:48:51] <gnarf> in the timer
[22:48:54] <timmywil> hehe, yea
[22:49:00] <gnarf> could really be solved with a $.when
[22:49:18] <timmywil> there's a lot we could do
[22:49:37] <gnarf> :)
[22:49:49] <timmywil> aight gnarf, cya tomorrow
[23:00:08] <gnarf> timmywil: re that $.speed / complete thing, if you kept the duration 0 check it would probably work :)
