[01:00:23] <freddyb_> hey, I am trying to find someone who's working on the jquery hosting on code.jquery.com :-)
[01:00:56] <freddyb_> I want to advocate sending an access-control-allow-origin header, and I have written a long and thoughtful e-mail, that is not a waste of time.
[01:12:17] <doesallmagic2> Project jQuery Core Compat Periodic build #186: STILL UNSTABLE in 14 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat%20Periodic/186/
[01:12:17] <doesallmagic2> * markelog: Event: remove guard for falsy handler argument of jQuery#on method
[01:12:18] <doesallmagic2> * markelog: Event: add support comment
[01:12:18] <doesallmagic2> * markelog: Ajax: remove "onunload" event handler
[01:12:19] <doesallmagic2> * markelog: Core:CSS:Event: simplification of native method signatures
[01:12:19] <doesallmagic2> * Timmy Willison: Data: do not include digits when camelCasing
[01:12:20] <doesallmagic2> * Timmy Willison: CSS: fix dependency order for amd
[01:12:20] <doesallmagic2> * Timmy Willison: Data: always camelCase keys in .data()
[01:12:21] <doesallmagic2> * Timmy Willison: Data: camelCasing should not ignore case
[01:12:21] <doesallmagic2> * Timmy Willison: Core: allow init to accept an alternate rootjQuery for migrate's sake
[01:12:22] <doesallmagic2> * Timmy Willison: Selector: add jQuery.uniqueSort; deprecate jQuery.unique
[02:09:48] <jqcommit> [13jquery] 15Selektor opened issue #2263: $.html(htmlString) wrong parse 02http://git.io/vJXnA
[05:21:42] <jqcommit> [13jquery] 15mzgol closed issue #2263: $.html(htmlString) wrong parse 02http://git.io/vJXnA
[07:40:30] <jqcommit> [13jquery] 15gibson042 closed issue #2262: One ReferenceError or TypeError breaks $(document).ready and prevents it from ever firing again 02http://git.io/vJPZx
[07:59:40] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02http://git.io/vJMEH
[07:59:40] <jqcommit> 13jquery/06master 14add85af 15Timmy Willison: Selector: add test for jQuery.unique() alias
[08:03:26] <doesallmagic2> Project jQuery Core build #1334: STILL UNSTABLE in 4 min 0 sec: http://jenkins.jquery.com/job/jQuery%20Core/1334/
[08:03:26] <doesallmagic2> Timmy Willison: Selector: add test for jQuery.unique() alias
[08:14:12] <jqcommit> [13jquery.com] 15edwin-egalite opened issue #100: jQuery website doesn't showing the latest releases 02http://git.io/vJMwu
[08:19:31] <doesallmagic2> Project jQuery Core Compat build #592: UNSTABLE in 16 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/592/
[08:19:31] <doesallmagic2> Timmy Willison: Selector: add test for jQuery.unique() alias
[08:22:26] <timmywil> gibson042: ping
[08:22:35] <gibson042> hey timmywil
[08:22:40] <timmywil> hey man, quick thing
[08:22:41] <timmywil> https://github.com/jquery/jquery/pull/2043/files#r23981494
[08:23:05] <timmywil> you suspected that !doc can go, but I think it's guarding for more than doc presence
[08:23:22] <timmywil> also guards for jQuery().offset()
[08:23:57] <timmywil> I'm thinking the fix for https://github.com/jquery/jquery/issues/2115 is just the removal of that test
[08:24:19] <timmywil> possibly changing the logic a bit to just guard for element presence
[08:24:56] <gibson042> gh-2115 is definitely a logic change, not just a test
[08:25:08] <timmywil> kind of like https://github.com/jquery/jquery/blob/master/src/offset.js#L110 in position
[08:25:28] <gibson042> yes, exactly like that
[08:25:46] <timmywil> ok, I think we agree then
[08:26:09] <timmywil> so, we're okay that jQuery({}).offset() will throw? I mean, I think I am.
[08:26:15] <gibson042> return undefined if the context collection is empty, otherwise assume that this[0] is an element with getBoundingClientRect and proceed
[08:26:25] <timmywil> yea
[08:34:23] <timmywil> gibson042: also, do you think a throws test is called for in https://github.com/jquery/jquery/issues/2114?
[08:34:49] <timmywil> Always feels weird committing without a test, but I think we've been leaning towards not adding throws tests for stuff like this
[08:38:21] <gibson042> yeah, I'm against a throw test there
[08:38:49] <gibson042> we're allowed to throw, but will not guarantee exceptions for invalid input
[08:40:02] <m_gol> gibson042 timmywil: if we wanted to test for throwing we should throw explicitly and not just rely on a side-effect of one API not existing in some cases
[08:40:10] <m_gol> so yeah, I'd be against adding a throws test
[08:42:01] <gibson042> especially when the whole point of such changes is _simplifying_ our logic by assuming valid initial conditions
[08:42:49] <m_gol> right
[08:43:36] <timmywil> btw, this does cause our jQuery() quick setter offset test to fail https://www.dropbox.com/s/a4tiwc95oj1901h/Screenshot%202015-05-05%2008.43.11.png?dl=0
[08:43:46] <timmywil> disconnected element and all
[08:45:01] <timmywil> I'm thinking of just removing that test. How are you supposed to set offset accurately on a disconnected element?
[08:46:32] <timmywil> We were guilty ourselves!
[08:46:42] <timmywil> gibson042, m_gol ^
[08:48:04] <timmywil> But I think whoever wrote that test was just grasping for methods to throw in for testing.
[08:48:40] <gibson042> timmywil: that looks right to me; I think it can go
[08:48:58] <gibson042> but it's weird that it's failing
[08:49:08] <timmywil> is it?
[08:50:09] <gibson042> yeah; the offset setter substitutes zeroes for unknown offset
[08:50:46] <timmywil> but it retrieves the current offset first
[08:51:08] <gibson042> https://github.com/NekR/jquery/blob/1784-fix-offset-in-shadow-dom/src/offset.js#L35
[08:51:29] <timmywil> oh, I'm doing the ticket that removes that
[08:51:58] <gibson042> ah, ok then
[08:52:05] <gibson042> in that case, it's not weird at all
[08:52:32] <gibson042> and _definitely_ remove the core.js assertion
[08:52:58] <timmywil> rawk
[08:54:27] <jqcommit> [13jquery] 15timmywil closed issue #1784: Issues using ShadowDom and ShadowRoot elements 02http://git.io/3mTLaw
[08:57:52] <doesallmagic2> Yippee, build fixed!
[08:57:53] <doesallmagic2> Project jQuery Core build #1335: FIXED in 3 min 41 sec: http://jenkins.jquery.com/job/jQuery%20Core/1335/
[08:57:53] <doesallmagic2> * Timmy Willison: Offset: Fix .offset() to correctly work with ShadowDOM
[08:57:54] <doesallmagic2> * Timmy Willison: Offset: remove ownerDocument check in offset getter
[08:57:54] <doesallmagic2> * Timmy Willison: Offset: allow offset setter to throw for disconnected elements
[09:15:38] <jqcommit> [13jquery] 15timmywil pushed 3 new commits to 06compat: 02http://git.io/vJDtw
[09:15:38] <jqcommit> 13jquery/06compat 14d4dd548 15Arthur Stolyar: Offset: Fix .offset() to correctly work with ShadowDOM...
[09:15:38] <jqcommit> 13jquery/06compat 14a2386a8 15Timmy Willison: Offset: remove ownerDocument check in offset getter...
[09:15:38] <jqcommit> 13jquery/06compat 14dc49f62 15Timmy Willison: Offset: allow offset setter to throw for disconnected elements...
[09:19:19] <doesallmagic2> Yippee, build fixed!
[09:19:19] <doesallmagic2> Project jQuery Core Compat build #593: FIXED in 3 min 54 sec: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/593/
[09:19:20] <doesallmagic2> * Timmy Willison: Offset: Fix .offset() to correctly work with ShadowDOM
[09:19:20] <doesallmagic2> * Timmy Willison: Offset: remove ownerDocument check in offset getter
[09:19:21] <doesallmagic2> * Timmy Willison: Offset: allow offset setter to throw for disconnected elements
[09:57:08] <jqcommit> [13jquery.com] 15timmywil tagged 06v2.1.7 at 06master: 02http://git.io/vJDgn
[09:59:39] <jqcommit> [13jquery.com] 15timmywil closed issue #100: jQuery website doesn't showing the latest releases 02http://git.io/vJMwu
[10:17:08] <scott_gonzalez> markelog mikesherov: Does this look right to you? https://github.com/scottgonzalez/node-jscs/commit/a8ff69b8b78e9c075d90a556956fd054317b6664
[10:17:26] <scott_gonzalez> I haven't done any testing, but this is based on the list of rules I created for PEP.
[10:19:17] <mikesherov> scott_gonzalez: yes
[10:19:37] <scott_gonzalez> Ok, I'll run tests and make sure these are covered.
[10:20:08] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02http://git.io/vJDPD
[10:20:08] <jqcommit> 13jquery/06master 14b92acf7 15Calvin Metcalf: Build: Remove npm from dependencies...
[10:20:28] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06compat: 02http://git.io/vJDPF
[10:20:28] <jqcommit> 13jquery/06compat 14a16b77f 15Calvin Metcalf: Build: Remove npm from dependencies...
[10:22:23] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02http://git.io/vJDXA
[10:22:23] <jqcommit> 13jquery/06master 14436f0ae 15Mu Haibao: Core: remove isArraylike check for nodes...
[10:22:39] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06compat: 02http://git.io/vJD1v
[10:22:39] <jqcommit> 13jquery/06compat 14d693391 15Mu Haibao: Core: remove isArraylike check for nodes...
[10:23:51] <doesallmagic2> Project jQuery Core build #1336: UNSTABLE in 3 min 55 sec: http://jenkins.jquery.com/job/jQuery%20Core/1336/
[10:23:52] <doesallmagic2> Timmy Willison: Build: Remove npm from dependencies
[10:27:33] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06compat: 02http://git.io/vJDDQ
[10:27:33] <jqcommit> 13jquery/06compat 14b7f9e62 15Timmy Willison: Effects: set default easing using jQuery.easing._default...
[10:27:42] <jqcommit> [13jquery] 15timmywil closed pull request #2218: Effects: easing._default (06master...06jquery.easing._default) 02http://git.io/vv15P
[10:30:11] <markelog> scott_gonzalez: for requireDotNotation see https://github.com/jscs-dev/node-jscs/pull/935
[10:30:49] <markelog> also https://github.com/jscs-dev/node-jscs/pull/1331/files
[10:31:04] <markelog> which includes requireSemicolons rule
[10:32:06] <markelog> need to make we don't need any exceptions with requireSpaceAfterLineComment
[10:33:05] <gibson042> timmywil: I think your trigger finger is a little too itchy... https://github.com/jquery/jquery/commit/5f2ea402582c7b8f4773771e1529d60587f3435e is missing some tests that I wanted to see
[10:34:35] <markelog> *need to make sure
[10:34:47] <doesallmagic2> Project jQuery Core Compat build #594: UNSTABLE in 10 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/594/
[10:34:50] <doesallmagic2> * Timmy Willison: Build: Remove npm from dependencies
[10:34:50] <doesallmagic2> * Timmy Willison: Core: remove isArraylike check for nodes
[10:34:53] <timmywil> gibson042: I can do those tests now. 
[10:35:44] <timmywil> You're referring to this? "Tests for the former would assert that $collection.animate( props ) creates an animation with anim.opts.easing matching a custom jQuery.easing._default, and tests for the latter would do the same against anim.tweens[<N>].easing (and not matching for specialEasing tweens)."
[10:35:44] <markelog> also jquery preset is tricky seems other presets like wordpress extend it
[10:35:44] <gibson042> correct
[10:35:58] <timmywil> ok
[10:36:49] <markelog> scott_gonzalez: you sure about requireSpacesInFunction?
[10:37:12] <markelog> since it would includes cases like array.map(function () {});
[10:37:52] <markelog> we would need to change our guide in order to use it
[10:39:53] <scott_gonzalez> It doesn't have `"beforeOpeningRoundBrace": true`
[10:39:53] <doesallmagic2> Project jQuery Core build #1337: STILL UNSTABLE in 4 min 16 sec: http://jenkins.jquery.com/job/jQuery%20Core/1337/
[10:39:53] <doesallmagic2> * Timmy Willison: Core: remove isArraylike check for nodes
[10:39:53] <doesallmagic2> * Timmy Willison: Effects: set default easing using jQuery.easing._default
[10:39:53] <scott_gonzalez> The only real change there is that I'm using the generic rule instead of the specific rules (declaration, expression).
[10:43:16] <doesallmagic2> Project jQuery Core Compat build #595: STILL UNSTABLE in 4 min 13 sec: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/595/
[10:43:17] <doesallmagic2> Timmy Willison: Effects: set default easing using jQuery.easing._default
[11:22:53] <scott_gonzalez> Well, jQuery Core has lots of violations with the current jquery preset, so that makes it hard to check these changes.
[11:23:46] <timmywil> gibson042: how's this? https://github.com/timmywil/jquery/commit/6d7ef56ed3004a18f5139928455cdbdc169e1232#diff-c11dc311e64f99c637c0ef4fc61054a6R2239
[11:25:53] <gibson042> timmywil: works for me
[11:25:58] <timmywil> cool
[11:26:17] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02http://git.io/vJylP
[11:26:17] <jqcommit> 13jquery/06master 146d7ef56 15Timmy Willison: Effects: add tests for jQuery.easing._default in Animation and Tween...
[11:26:32] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06compat: 02http://git.io/vJylQ
[11:26:32] <jqcommit> 13jquery/06compat 14b9b5c23 15Timmy Willison: Effects: add tests for jQuery.easing._default in Animation and Tween...
[11:30:06] <doesallmagic2> Project jQuery Core build #1338: STILL UNSTABLE in 3 min 59 sec: http://jenkins.jquery.com/job/jQuery%20Core/1338/
[11:30:06] <doesallmagic2> Timmy Willison: Effects: add tests for jQuery.easing._default in Animation and Tween
[11:37:28] <doesallmagic2> Yippee, build fixed!
[11:37:29] <doesallmagic2> Project jQuery Core Compat build #596: FIXED in 7 min 22 sec: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/596/
[11:37:29] <doesallmagic2> Timmy Willison: Effects: add tests for jQuery.easing._default in Animation and Tween
[11:55:58] <jqcommit> [13jquery] 15timmywil pushed 2 new commits to 06master: 02http://git.io/vJyK9
[11:55:58] <jqcommit> 13jquery/06master 14a74320f 15Timmy Willison: Manipulation: privatize buildFragment() function...
[11:55:58] <jqcommit> 13jquery/06master 1462d5579 15Timmy Willison: Manipulation: privatize internal domManip() function...
[11:59:28] <doesallmagic2> Yippee, build fixed!
[11:59:28] <doesallmagic2> Project jQuery Core build #1339: FIXED in 3 min 43 sec: http://jenkins.jquery.com/job/jQuery%20Core/1339/
[11:59:29] <doesallmagic2> * Timmy Willison: Manipulation: privatize buildFragment() function
[11:59:29] <doesallmagic2> * Timmy Willison: Manipulation: privatize internal domManip() function
[12:17:20] <jqcommit> [13jquery] 15timmywil pushed 2 new commits to 06compat: 02http://git.io/vJySj
[12:17:20] <jqcommit> 13jquery/06compat 1463c1414 15Timmy Willison: Manipulation: privatize buildFragment() function...
[12:17:20] <jqcommit> 13jquery/06compat 14590eff6 15Timmy Willison: Manipulation: privatize internal domManip() function...
[12:18:58] <jqcommit> [13jquery] 15timmywil closed issue #2198: Compatibility problem:  “$.ajax” is supports is not very well for 360 chrome Browser  02http://git.io/vvJqG
[12:22:17] <doesallmagic2> Project jQuery Core Compat build #597: UNSTABLE in 5 min 11 sec: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/597/
[12:22:18] <doesallmagic2> * Timmy Willison: Manipulation: privatize buildFragment() function
[12:22:18] <doesallmagic2> * Timmy Willison: Manipulation: privatize internal domManip() function
[12:28:27] <jqcommit> [13jquery] 15timmywil closed issue #2178: No error or other indication that getScript didn't execute script sent with MIME text/plain 02http://git.io/j2vK
[12:42:27] <jqcommit> [13api.jquery.com] 15timmywil opened issue #732: Ajax: preventing xss on untrusted URLs 02http://git.io/vJyxD
[12:42:52] <jqcommit> [13jquery] 15timmywil closed issue #2175: Consider not eval-ing responses to cross-domain queries 02http://git.io/jCBq
[12:47:24] <jqcommit> [13jquery] 15timmywil closed issue #2205: edge case for self-closing tag detection 02http://git.io/vvZoB
[12:54:44] <scott_gonzalez> rwaldron wycats: Do ES6 classes not allow non-function properties in the class definition?
[13:33:27] <jqcommit> [13jquery] 15timmywil closed issue #2116: jQuery Ajax Basic Authentication `opts.username` `opts.password` not sending auth headers 02http://git.io/xigh
[13:36:45] <jqcommit> [13jquery] 15timmywil closed issue #2064: Double fired mouseenter in chrome 02http://git.io/b0y3
[13:44:03] <scott_gonzalez> timmywil: If you do an interactive rebase instead of a squash merge, you won't have the author issue.
[13:44:45] <timmywil> orly?
[13:44:48] <timmywil> good idea
[13:45:14] <scott_gonzalez> Yup, and it gives you the perfect opportunity to edit the commit message to add the PR reference too :-)
[14:00:19] <jqcommit> [13jquery] 15timmywil closed issue #1918: Create .css() tests using negative numbers 02http://git.io/HTRosQ
[14:20:13] <jqcommit> [13jquery] 15timmywil closed issue #1772: Chrome Sandboxed App: "Unload is not available in packaged apps" 02http://git.io/cjSWbQ
[14:22:00] <jqcommit> [13jquery] 15timmywil closed issue #1762: .outerWidth( val ) doesn't handle selects properly 02http://git.io/yGajQA
[14:39:09] <jqcommit> [13jquery] 15mzgol closed issue #1787: No way to globally clean up data 02http://git.io/jY3sQw
[16:20:03] <rwaldron> scott_gonzalez not ES6 classes, no
[16:20:14] <rwaldron> scott_gonzalez it will introduced in ES7
[16:20:31] <rwaldron> There was a desire to avoid rushing into it
[16:28:31] <scott_gonzalez> ok
