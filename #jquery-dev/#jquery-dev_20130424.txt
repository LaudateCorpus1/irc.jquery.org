[03:48:14] <jqcommit> 01[13qunit01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/LiggzA
[03:48:14] <jqcommit> 13qunit/06master 146c71dc2 15Timo Tijhof: License: Bump to 2013 and resolve redirect license url
[03:50:02] <doesallmagic> Project QUnit build #288: SUCCESS in 1 min 57 sec: http://swarm.jquery.org:8080/job/QUnit/288/
[03:50:03] <doesallmagic> Timo Tijhof: License: Bump to 2013 and resolve redirect license url
[04:50:23] <jqcommit> 01[13qunit-reporter-junit01] 15Krinkle pushed 2 new commits to 06master: 02http://git.io/jfQFjQ
[04:50:23] <jqcommit> 13qunit-reporter-junit/06master 14e3c5c0b 15Timo Tijhof: Bump version, add license header to main js file
[04:50:23] <jqcommit> 13qunit-reporter-junit/06master 1406d2d48 15Timo Tijhof: Release v1.0.1
[04:56:10] <jqcommit> 01[13qunit-reporter-junit01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/G5ec0g
[04:56:10] <jqcommit> 13qunit-reporter-junit/06master 14855b9c7 15Timo Tijhof: We're on NPM now
[04:57:13] <jqcommit> 01[13qunit-reporter-junit01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/QrnMxg
[04:57:13] <jqcommit> 13qunit-reporter-junit/06master 149ee5f55 15Timo Tijhof: Bump post-release version
[06:05:46] <sizcommit> 01[13sizzle01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/SdhwIQ
[06:05:46] <sizcommit> 13sizzle/06master 14b8789b8 15Richard Gibson: Ref jQuery #13809: Avoid collisions with words reserved by any version of ECMA-262
[06:07:33] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/z-F7-A
[06:07:33] <jqcommit> 13jquery/06master 14ad71f47 15Richard Gibson: Fix #13809: Avoid collisions with words reserved by any version of ECMA-262
[06:08:00] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 061.x-master: 02http://git.io/CcuLxg
[06:08:00] <jqcommit> 13jquery/061.x-master 147723012 15Richard Gibson: Fix #13809: Avoid collisions with words reserved by any version of ECMA-262...
[06:38:05] <doesallmagic> Project jQuery 1.x Core build #142: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/142/
[06:38:05] <doesallmagic> richard.gibson: Fix #13809: Avoid collisions with words reserved by any version of ECMA-262
[06:38:06] <doesallmagic> Project jQuery Core build #803: STILL FAILING in 0.32 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/803/
[06:43:04] <doesallmagic> Project jQuery Core build #804: STILL FAILING in 4 min 57 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/804/
[06:43:04] <doesallmagic> richard.gibson: Fix #13809: Avoid collisions with words reserved by any version of ECMA-262
[06:50:41] <noway421> In like-cgi node.js server there's problem. If a route will throw an error, it will drop the entire server. Try-catch would catch error only if it will be in module.exports. Route may trigger an error in third-party modules, and it will ruin everything. There also have a problem with the scalability and flexibility. Middleware can be used only with some hacks. So it's a dead frost.
[07:10:52] <Krinkle> DaveMethvin: Are you the person to CC when things get complicated with licenses?
[07:11:22] <DaveMethvin> if it's a legal issue Krinkle you can copy legal at jquery.com
[07:11:34] <Krinkle> no legal issue (not yet anyway)
[07:11:34] <DaveMethvin> what's the situation?
[07:11:38] <scott_gonzalez> Krinkle: What's complicated with a license?
[07:11:54] <Krinkle> someone from Samsung wants to use jquery/qunit-reporter-junit
[07:12:09] <Krinkle> I'm about to send  a short reply pointing out the MIT license
[07:17:23] <Krinkle> scott_gonzalez: DaveMethvin: Right?
[07:17:51] <DaveMethvin> right
[07:18:04] <DaveMethvin> samsung has lawyers, they should know how that license works
[07:18:27] <Krinkle> DaveMethvin: i've BCC'ed you (so they can't see)
[07:18:29] <Krinkle> just FYI :)
[07:18:30] <scott_gonzalez> Krinkle: Before you send that reply...
[07:18:44] <DaveMethvin> I get those kind of emails occasionally, "I'm from IBM and want to know if it's ok to use jQuery ... " :)
[07:18:49] <scott_gonzalez> There is a distinct lack of license info in that repo.
[07:19:01] <scott_gonzalez> There's no license file.
[07:19:10] <Krinkle> scott_gonzalez: neither does jquery/qunit
[07:19:14] <Krinkle> that's where it came from
[07:19:22] <Krinkle> it was split out a few weeks back
[07:19:25] <scott_gonzalez> That's bad too.
[07:19:27] <DaveMethvin> oh we should have a LICENSE.txt on all of htose
[07:19:28] <DaveMethvin> those
[07:19:37] <Krinkle> scott_gonzalez: but it has a license header
[07:19:39] <Krinkle> in the js file
[07:19:46] <scott_gonzalez> It's ambiguous.
[07:19:59] <scott_gonzalez> "MIT license" is vague.
[07:20:14] <Krinkle> scott_gonzalez: it has a link to jquery.com/license? that's enough for jquery.min.js
[07:20:21] <Krinkle> jquery.org*
[07:20:39] <scott_gonzalez> Krinkle: This isn't even worth arguing. Every repo needs the license file.
[07:21:08] <Krinkle> I'll add it noproblem, I just don't believe that the presence of that file can make a difference because in distribution that repo isn't anywhere associated with the js file
[07:22:14] <scott_gonzalez> It won't change the legal status of the code.
[07:22:37] <scott_gonzalez> But it makes discovery much easier and it's a policy we have for all jQuery projects.
[07:23:26] <scott_gonzalez> Actually, it may change the legal status.
[07:23:35] <scott_gonzalez> This is one of the gray areas where people argue to death.
[07:24:00] <scott_gonzalez> The potential problem comes in from the fact that we use a single license reference for all projects.
[07:24:13] <scott_gonzalez> And that license is clearly tied directly to one specific project.
[07:25:07] <jqcommit> 01[13testswarm01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/J9ey-g
[07:25:07] <jqcommit> 13testswarm/06master 142a2a020 15Timo Tijhof: LICENSE: Use same whitespace formatting as jquery/jquery.git
[07:26:39] <jqcommit> 01[13qunit01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/VUzZFw
[07:26:39] <jqcommit> 13qunit/06master 14c40c919 15Timo Tijhof: Add MIT-LICENSE.txt
[07:26:52] <scott_gonzalez> Thanks Krinkle
[07:27:19] <jqcommit> 01[13qunit-reporter-junit01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/Q2nhGg
[07:27:19] <jqcommit> 13qunit-reporter-junit/06master 14e1f8acd 15Timo Tijhof: Add MIT-LICENSE.txt
[07:28:03] <scott_gonzalez> Now I wish I had gone through all the repos and renamed the license files.
[07:28:25] <scott_gonzalez> I've come to hate MIT-LICENSE.txt, but it just never seemed worth it to change.
[07:28:38] <doesallmagic> Project QUnit build #289: SUCCESS in 2 min 11 sec: http://swarm.jquery.org:8080/job/QUnit/289/
[07:28:39] <doesallmagic> Timo Tijhof: Add MIT-LICENSE.txt
[07:28:57] <Krinkle> scott_gonzalez: I like it, it is unambiguous
[07:29:02] <Krinkle> (well, not MIT itself)
[07:29:09] <Krinkle> but I mean it makes it easier to recognize
[07:29:17] <Krinkle> and easier to extend with multiple licenses
[07:29:26] <Krinkle> which I guess is where it came from, right?
[07:29:28] <scott_gonzalez> Yes, but I prefer LICENSE-MIT.txt over MIT-LICENSE.txt
[07:29:34] <Krinkle> oh, I see
[07:29:35] <scott_gonzalez> It came from dual licensing.
[07:29:45] <scott_gonzalez> MIT-LICENSE.txt and GPL-LICENSE.txt
[07:30:04] <scott_gonzalez> Thankfully that crap is gone.
[07:30:07] <Krinkle> sort order over logic pronunciation of file name
[07:30:22] <Krinkle> everybody their own trade offs :)
[07:30:42] <scott_gonzalez> Yup. Like I said, it never seemed worth changing.
[07:32:30] <Krinkle> and I'm sure there are bikeshedders who would argue that the pronunciation of the file name is worth more than the sort order
[08:41:19] <doesallmagic> Project jQuery 1.x Core build #143: STILL FAILING in 11 sec: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/143/
[08:41:21] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/rNeo1w
[08:41:21] <jqcommit> 13jquery/06master 1478c803f 15Richard Gibson: Fix #13819: .parent sort direction...
[08:41:39] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 061.x-master: 02http://git.io/RyIpWw
[08:41:39] <jqcommit> 13jquery/061.x-master 146a816ec 15Richard Gibson: Fix #13819: .parent sort direction
[08:45:15] <doesallmagic> Project jQuery Core build #805: STILL FAILING in 3 min 53 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/805/
[08:45:15] <doesallmagic> richard.gibson: Fix #13819: .parent sort direction
[08:46:47] <doesallmagic> Project jQuery 1.x Core build #144: STILL FAILING in 1 min 31 sec: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/144/
[08:46:48] <doesallmagic> richard.gibson: Fix #13819: .parent sort direction
[10:30:28] <Gho5t> I think I may have found a bug in the implementation of isArrayLike
[10:30:48] <Gho5t> passing a string throws a TypeError
[10:30:59] <Gho5t> TypeError: invalid 'in' operand obj
[10:32:57] <Gho5t> anyone around to verify before I file the bug
[10:33:08] <DaveMethvin> go for it Gho5t, file a bug
[10:33:17] <DaveMethvin> if .isArrayLike("haha") breaks
[10:33:35] <DaveMethvin> wait, is that a public api?
[10:33:40] <DaveMethvin> how did you get it to fail?
[10:34:27] <Gho5t> a friend reported it to me
[10:34:33] <Gho5t> I'm not sure how he got to it
[10:34:47] <Gho5t> is it not public?
[10:35:03] <Gho5t> I guess not
[10:35:28] <Gho5t> should still be fixed though, correct?
[10:40:56] <Gho5t> DaveMethvin: ?
[10:41:31] <DaveMethvin> sorry phone
[10:41:47] <DaveMethvin> need a test case
[10:42:52] <Gho5t> isArrayLike("foo") = TypeError: invalid 'in' operand obj
[10:42:57] <Gho5t> is that what you mean?
[10:43:58] <dcherman> probably more something from the public API i'm guessing - so passing a string to one of "map", "each", or "makeArray" since those are the only places its used
[10:44:19] <Gho5t> ah
[10:46:08] <Gho5t> so should a string be arraylike or not?
[10:52:58] <gibson042> Gho5t: as far as I know, string is invalid input for all methods calling isArrayLike and therefore behavior is undefined
[10:58:42] <dcherman> it's actually just each/map, looks like there's already a special case in makeArray for strings - iterating over a string like that doesn't make a whole lotta sense
[10:59:44] <Gho5t> true
[11:04:57] <Gho5t> so let it be?
[11:08:01] <gibson042> yep
[11:29:59] <DaveMethvin> sorry, back
[11:30:27] <DaveMethvin> yes Gho5t i agree with gibson042, if there isn't a reasonable way to provoke it from a public api then it's not a bug
[11:30:51] <Gho5t> ok  very good
[11:36:01] <jqcommit> 01[13jquery01] 15orkel pushed 1 new commit to 06master: 02http://git.io/FzHS1A
[11:36:01] <jqcommit> 13jquery/06master 143a61940 15Oleg: Fix #13818: Add wrapMap entry for col element
[11:41:34] <doesallmagic> Project jQuery Core build #806: STILL FAILING in 5 min 42 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/806/
[11:41:34] <doesallmagic> markelog: Fix #13818: Add wrapMap entry for col element
[12:03:27] <jqcommit> [13jquery] 15shama opened pull request #1255: Use grunt option with grunt.util.spawn (06master...06spawn-grunt)  02http://git.io/Aq4aeQ
[13:18:13] <Krinkle> O_O
[13:18:13] <Krinkle> http://siliconforks.com/jscoverage/instrumented-jquery/test/index.html
[13:18:16] <Krinkle> Retro!
[13:18:40] <Krinkle> QUnit pre-1.0 2009
[13:18:59] <Krinkle> well, our tests didn't pass back then either :P
[14:10:48] <jqcommit> 01[13jquery01] 15gnarf37 pushed 1 new commit to 06master: 02http://git.io/IpVtxw
[14:10:48] <jqcommit> 13jquery/06master 1455e319a 15Corey Frang: Fixes #13815: Ensure each element has its own private data object - Tests by @rwldrn
[14:13:18] <gnarf> rwaldron: triaged http://bugs.jquery.com/ticket/13815 too to have all the right tags
[14:15:01] <doesallmagic> Project jQuery Core build #807: STILL FAILING in 4 min 26 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/807/
[14:15:02] <doesallmagic> Corey Frang: Fixes #13815: Ensure each element has its own private data object - Tests by @rwldrn
[19:37:43] <snover> DaveMethvin: do you enjoy deeply philosophical software arguments
[19:37:55] <snover> where people say things like
[19:38:31] <snover> Q. Does the machinery do a better job of unrolling loops than the JIT does? A. Yes.
[19:38:33] <snover> and
[19:39:21] <snover> Q. Could you cite some sources to confirm that the power of true macros is undisputed?
[21:05:10] <JamesMGreene> snover: I think that is a "no" :-P
[22:12:32] * JamesMGreene gives Visual Studio the stink eye
[22:13:06] <JamesMGreene> I delete 1 file from the Source Explorer about 2 minutes ago and it's still spinning... the file is about 10KB and isn't even under source control bindings
[22:13:11] <JamesMGreene> deleted*
[22:13:16] <JamesMGreene> W.T.F.
