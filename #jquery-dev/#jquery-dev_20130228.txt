[01:20:09] <gnarf> so, view.jquery.com should work again
[01:20:15] <gnarf> with build step even
[05:48:57] <jqcommit> [13jquery] 15dmitrygusev opened pull request #1186: Fix typos (06master...06spellcheck-20130228T004148)  02http://git.io/THtUsg
[05:56:31] <Krinkle> DaveMethvin: http://swarm.jquery.org/job/2713
[05:56:40] <Krinkle> There's your stable build.
[05:56:49] <Krinkle> one test from firefox keeps failing, could be for real
[05:56:55] <Krinkle> "event" module in "Firefox 17:
[05:57:06] <DaveMethvin> Well I have all day to break THAT
[05:57:22] <Krinkle> just 1 assertion
[05:57:29] <DaveMethvin> was it a focus one?
[05:57:56] <Krinkle> no
[05:58:06] <Krinkle> it'll come back in a second
[05:58:07] <DaveMethvin> ok, once it runs again i'll take a look
[06:01:36] <Krinkle> DaveMethvin: it's back
[06:01:44] <Krinkle> http://swarm.jquery.org/result/1185221
[06:02:01] <Krinkle> 68 event: focus-blur order (#12868) (1, 3, 4)Rerun177 ms
[06:02:02] <Krinkle> radio has focus
[06:02:02] <Krinkle> text has focus
[06:02:03] <Krinkle> radio focus
[06:02:05] <Krinkle> Expected 5 assertions, but 3 were run
[06:02:07] <Krinkle> focus indeed
[06:02:33] <DaveMethvin> yeah that's a focus bug related to firefox in an iframe i think
[06:02:44] <Krinkle> https://github.com/jquery/jquery/blob/8be9cd1ce71de8affa32a85b596c1bfed2e714a6/test/unit/event.js#L2308
[06:02:47] <DaveMethvin> usually it works if the outer iframe has focus
[06:02:54] <Krinkle> for some reason it stops after the first 3 assertions
[06:03:05] <DaveMethvin> they must have changed something in recent ff builds
[06:03:21] <Krinkle> its failing for firefox 17 only
[06:03:23] <Krinkle> 18 is fine
[06:03:33] <Krinkle> which reminds me, why don't have have cr25 and ff19 in there yet
[06:03:37] <Krinkle> lets see if browserstack has them yet
[06:03:43] <Krinkle> yep
[06:03:47] <Krinkle> will add them tonight
[06:03:53] <DaveMethvin> oh good, maybe we can fix it that way
[06:05:35] <Krinkle> I'm starting a firefox 17 vm from browserstack now
[06:06:19] <Krinkle> stupid firebug is gettings its shit in again
[06:06:19] <Krinkle> http://swarm.jquery.org/result/1185238
[06:07:24] <DaveMethvin> gtfo firebug
[06:07:47] <Krinkle> it does it in ff17 in winxp, win7 and win8
[06:07:53] <Krinkle> ugh
[06:08:13] <Krinkle> and it does it regardless of the iframe
[06:08:17] <Krinkle> direct hit on http://swarm.jquery.org/build/jquery/8be9cd1ce71de8affa32a85b596c1bfed2e714a6/test/index.html?module=event#2 fails too
[06:08:23] <Krinkle> which means I can poke browserstack people
[06:12:14] <Krinkle> DaveMethvin: If the last month was a pyramid build up of random unrelated shit causing things to go crazy, lets hope we're downhill from here, asap.
[06:12:23] <DaveMethvin> amen
[06:12:25] <Krinkle> gnarf started by fixing git-view and making it dramatically faster
[06:12:44] <Krinkle> https://github.com/jquery/infrastructure/issues/145#issuecomment-14226261
[06:13:54] <DaveMethvin> WHOA.
[06:15:35] <scott_gonzalez> It uses node-git-tools :-)
[06:16:09] <DaveMethvin> yeah but it STILL manages to work :P
[06:17:11] <gnarf> DaveMethvin: also, view now does a build
[06:17:11] <gnarf> so
[06:17:20] <gnarf> http://view.jquery.com/1.9/test/
[06:17:21] <gnarf> like works
[06:17:22] <gnarf> :)
[06:17:27] <gnarf> well
[06:17:32] <gnarf> http://view.jquery.com/1.9.0/test/
[06:17:39] <gnarf> because you actually used the .0 on that one
[06:17:40] <gnarf> :)
[06:18:18] <scott_gonzalez> For some definition of works :-P
[06:18:35] <gnarf> well maybe 1.9.1 is a better example
[06:18:38] <scott_gonzalez> I mean, the tests work, the code doesn't :-P
[06:18:45] <scott_gonzalez> But it's core, so what do you expect?
[06:18:45] <DaveMethvin> very handy! yeah i am trying 1.9.1
[06:19:21] <DaveMethvin> hey, be nice to me, we're not out of critical features we can cut to break UI
[06:19:26] <DaveMethvin> who needs .attr() anyway
[06:19:47] <scott_gonzalez> Not me! I'll just do s/attr/prop/
[06:20:07] <DaveMethvin> yeah they're exactly the same, that's what the stackoverflow guy said
[06:20:43] <scott_gonzalez> I like that learn PR which changed all .attr() calls to .prop() in the Attributes article.
[06:25:35] <gnarf> but yay for http://view.jquery.org/1.9-stable/dist/jquery.min.js
[06:26:26] <gnarf> http://view.jquery.org/1.9-stable/build.out.txt
[06:27:00] <DaveMethvin> man that's mighty handy
[06:27:36] <DaveMethvin> do we publicize this anywhere gnarf? 
[06:27:40] <scott_gonzalez> DaveMethvin: How does mouseenter work in jQuery?
[06:27:55] <DaveMethvin> really well, thanks
[06:27:59] <scott_gonzalez> heh
[06:28:02] <DaveMethvin> it uses mouseover
[06:28:19] <scott_gonzalez> So jQuery mouseenter is like tons more useful than anything any browser provides.
[06:28:21] <DaveMethvin> and determines whether the mouseentered element is a parent of the target
[06:28:30] <scott_gonzalez> Why are we not yelling loudly at browser vendors about this?
[06:28:34] <scott_gonzalez> Or spec writers?
[06:28:59] <DaveMethvin> yeah, the spec now has and some browsers implement mouseenter but as i recall it doesn't bubble
[06:29:03] <DaveMethvin> lemme check
[06:29:13] <DaveMethvin> originally done by ie
[06:29:38] <DaveMethvin> http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html#event-type-mouseenter
[06:29:41] <scott_gonzalez> Olli Pettay was actually telling me not to use mouseenter.
[06:29:41] <DaveMethvin> bubbles: no
[06:29:57] <scott_gonzalez> Becuase it makes Firefox slow.
[06:30:05] <DaveMethvin> well i agree its more useful than mouseover
[06:30:25] <DaveMethvin> if you use mouseover you would usually end up doing your own enter-like detection
[06:30:29] <scott_gonzalez> Well, you can't do event delgation with mouseenter.
[06:30:32] <scott_gonzalez> But you can in jQuery.
[06:30:35] <DaveMethvin> right
[06:30:48] <DaveMethvin> i dunno why they didn't make it bubble
[06:30:56] <DaveMethvin> BUBBLE ALL THE THINGS
[06:31:01] <jiko> lol
[06:31:03] <scott_gonzalez> Well, if it bubbled, it'd be mouseover, right?
[06:31:23] <DaveMethvin> it knows where the event is attached
[06:31:34] <DaveMethvin> so it can do the same calc we do
[06:31:53] <DaveMethvin> if it's moving from a descendant to a descendant then no evnet
[06:32:01] <scott_gonzalez> But that's not what jQuery does.
[06:32:19] <DaveMethvin> we listen for mouseover and look at relatedTarget
[06:32:27] <scott_gonzalez> list.on( "mouseenter", "li", fn )
[06:32:42] <DaveMethvin> oh you're adding delgated events
[06:32:58] <DaveMethvin> ok in that case we need more magic, agreed
[06:33:50] <scott_gonzalez> It's unfortuante that we don't match the spec with our special event.
[06:34:00] <scott_gonzalez> But our implementation is much more useful.
[06:34:06] <DaveMethvin> right
[06:34:21] <DaveMethvin> kind of like the way we do descendant matching in sizzle
[06:34:26] <scott_gonzalez> indeed
[06:34:31] <scott_gonzalez> That's fixed in .find(), right?
[06:34:31] <DaveMethvin> and the spec hasn't caught up to us  yet
[06:34:41] <DaveMethvin> right find/findAll
[06:34:41] <scott_gonzalez> DOM .find() I mean.
[06:34:46] <scott_gonzalez> yeah
[06:34:53] <scott_gonzalez> well qSA is just dumb.
[06:35:11] <DaveMethvin> BUT IT'S THE LAW
[06:35:22] <scott_gonzalez> Does .find() support leading child combinators?
[06:35:32] <DaveMethvin> probably not, i am not sure tho
[06:35:43] <scott_gonzalez> I felt like I didn't need to stay on top of this because Alex Russel was doing a good job yelling.
[06:36:00] <DaveMethvin> we're including a minimal qSA-based replacement for Sizzle in the next beta of 2.0
[06:36:02] <scott_gonzalez> I remember him arguing for it to work with an implied :root or something.
[06:36:10] <scott_gonzalez> I saw.
[06:36:24] <DaveMethvin> amazing how much stuff sizzle fixes
[06:36:34] <scott_gonzalez> indeed
[06:36:45] <DaveMethvin> which makes it even more annoying when ppl say "it's just qSA why does it have to be so big"
[06:36:57] <DaveMethvin> becase the spec is an ass, that's why
[06:36:59] <scott_gonzalez> Well, now we have an answer for them.
[06:37:20] <DaveMethvin> right, if you just use tag, class, id selectors it will work. most of the time. probably
[06:37:22] <scott_gonzalez> "Oh, well if it's just qSA, use this option ;-)"
[06:37:39] <DaveMethvin> OMG MY CODEZ ARE BORKED
[06:38:13] <scott_gonzalez> Pay the 6k toll and you may return to the world of working code.
[06:38:23] <DaveMethvin> i can hardly wait for the first feature request ... yeah i like the tiny little qsa but can you add...
[06:38:28] <DaveMethvin> NO
[06:38:29] <scott_gonzalez> haha
[06:39:00] <DaveMethvin> although it's pretty impressive you can build a jQuery under 20K gzip now
[06:39:40] <scott_gonzalez> I just want jQuery with sane deferreds + ajax.
[06:39:41] <DaveMethvin> "smaller than a Retina icon"
[07:09:20] <carldanley> DaveMethvin: you have a few minutes for PM?
[07:18:43] <scott_gonzalez> DaveMethvin kswedberg: http://api.jquery.com/hide/ last signature
[07:18:47] <scott_gonzalez> .hide( [duration ] [, easing ] [, complete ] )
[07:18:59] <scott_gonzalez> Where's the bug: docs or code?
[07:19:04] <scott_gonzalez> duration is not optional in that case.
[07:19:15] <scott_gonzalez> .hide( easing ) does not work.
[07:19:15] <kswedberg> in a mtg. bbl
[07:21:56] <scott_gonzalez> gnarf: ^
[07:26:00] <scott_gonzalez> HOW AM I SUPPOSED TO PUNCH DUCKS WHEN I DON'T EVEN KNOW WHAT THEY LOOK LIKE?!?
[07:26:26] <gnarf> complete alone works
[07:26:29] <gnarf> but yeah
[07:26:33] <gnarf> signature sucks
[07:27:48] <scott_gonzalez> complete alone is handled by the second siganture: .hide( [duration ] [, complete ] )
[07:28:07] <scott_gonzalez> But I don't know if the last signature is intended to work.
[07:28:33] <scott_gonzalez> I've never tried before today.
[07:41:53] <gnarf> i still like .hide({ easing: "bah" })
[07:41:57] <gnarf> that works
[07:43:23] <scott_gonzalez> Sure, that's also covered in the .hide( options ) signature.
[07:43:38] <scott_gonzalez> I'm just trying to figure out if there's a bug in core or docs.
[07:44:05] <scott_gonzalez> So I know how to properly implement .hide()/.show()/.toggle() in UI.
[07:45:32] <DaveMethvin> in toronto let's make a blood pact to avoid this crazy parameter hockey in the future ... but for this I'd say it's a docs bug, perhaps .hide( [duration [ [,easing] [,complete] ])
[07:47:51] <scott_gonzalez> .hide( duration [, easing ] [, complete ] ) would be correct
[07:48:03] <scott_gonzalez> The other cases are already covered by other signatures.
[07:48:19] <DaveMethvin> oh because this is just the animated one
[07:48:31] <scott_gonzalez> yup
[07:51:41] <scott_gonzalez> DaveMethvin: But this guy was SURE it was a bug in .prop()!
[07:51:58] <DaveMethvin> oh, better reopen then. :D
[07:52:08] <scott_gonzalez> I think it's funny that he says "Anyway 'name' isnt a valid DOM Property"
[07:52:14] <scott_gonzalez> wat?
[07:52:14] <b-ot> scott_gonzalez: Detect of current browser like server's method
[07:52:29] <DaveMethvin> when b-ot starts making sense, then we're all screwed
[07:52:37] <scott_gonzalez> :-)
[07:52:47] <gnarf> `k BOOM!
[07:52:48] <b-ot> gnarf: (╯°□°）╯︵¡ɯooq
[07:56:19] <scott_gonzalez> gnarf: Want to write some tests?
[07:56:37] <gnarf> is this a trick question?
[07:56:46] <scott_gonzalez> https://gist.github.com/scottgonzalez/82c5327cc7525d3b5fbf
[07:57:13] <scott_gonzalez> Or do you at least have a good idea for testing this?
[07:57:28] <scott_gonzalez> I want to make sure that we're delegating to core's methods where possible.
[07:57:39] <Krinkle> jzaefferer: I'll be at the meeting today (surprise!)
[07:57:57] <scott_gonzalez> Krinkle: HAHAHAHA jzaefferer wanted to cancel.
[07:58:17] <jzaefferer> Krinkle scott_gonzalez: holy cow, let's do it anyway!
[07:58:41] <scott_gonzalez> ok :-)
[08:08:50] <gnarf> scott_gonzalez: hrm
[08:09:13] <scott_gonzalez> Well, first of all, the code seems sane, right?
[08:09:21] <scott_gonzalez> So I can commit and we can ponder how to write tests.
[08:09:36] <scott_gonzalez> mikesherov: ^
[08:09:50] <scott_gonzalez> It fixes the known bug of .hide({ step: fn }) breaking.
[08:10:15] <scott_gonzalez> I can write a test for that specifically.
[08:10:23] <scott_gonzalez> Since the step callback gives me something to hook into.
[08:11:13] <gnarf> yeah, thats just hard to punch
[08:13:17] <scott_gonzalez> I can expose the original functions, but I hate designing code to accommodate tests.
[09:17:11] <doesallmagic> Project jQuery Core build #714: STILL FAILING in 6 min 29 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/714/
[09:23:57] <doesallmagic> Project jQuery Core build #715: STILL FAILING in 16 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/715/
[09:25:55] <orkel> gibson042 DaveMethvin ping
[09:26:03] <DaveMethvin> sup gibson042
[09:26:34] <orkel> Hey, i guess http://bugs.jquery.com/ticket/12040 could be closed, since test for it was commited – https://github.com/jquery/jquery/commit/363299ac ?
[09:27:11] <DaveMethvin> orkel did we figure out whether it was actually working? :D
[09:27:35] <DaveMethvin> i think we were getting a message but didn't have a way to capture that fact for the test?
[09:27:57] <DaveMethvin> oh sorry i pinged gibson and not you orkel
[09:28:05] <DaveMethvin> still getting used to this irc client
[09:28:24] <orkel> well, yeah, i didn't check gibson042 commit exactly, but we did catch that error, as far as i remember
[09:28:46] <DaveMethvin> ok, you want to close the ticket and reference the commit?
[09:29:24] <orkel> yeah, but i would wait gibson042 opinion about that, just to be sure
[09:30:03] <DaveMethvin> btw my current plan is to work on docs and land a few of the pull requests today, then put out 2.0 beta 2 tomorrow morning
[09:30:20] <DaveMethvin> i will be leaving for the toronto conf later in the day tomorrow
[09:31:12] <orkel> i currently working on insertAdjacentHTML implementation, but there a lot of edge cases to consider
[09:31:27] <DaveMethvin> wow i bet that is an understatement :)
[09:32:08] <orkel> :-), i had done a sizeable perf tests and results a very different
[09:32:21] <DaveMethvin> as long as we handle the most common cases reliably, i don't mind the others falling into the slow buildFragment path
[09:32:58] <orkel> right know, i'm not so sure we should implemented it at all
[09:33:40] <orkel> but when i file PR maybe someone would come up with some ideas
[09:34:05] <DaveMethvin> oh well, whatever the tests say ... funny how these things like element traversing api seem to have great promise and then some stupid browser comes along and screws it up
[09:34:46] <orkel> tell me about it, i'm very sad about it
[09:36:01] <gibson042> DaveMethvin orkel: it's probably ok to close the ticket
[09:36:16] <DaveMethvin> ok good ... one less ticket
[09:36:51] <orkel> good!
[09:36:58] <gibson042> we had that other one come in for inline style that made me suspect something's not 100% with it, but without more details I deem #12040 resolved
[10:56:38] <rwaldron> DaveMethvin despite my comments here: https://github.com/jquery/jquery/pull/1184#issuecomment-14249932
[10:56:38] <b-ot> rwaldron: Pull request #1184 by butt (1d 3h ago): IE9 bugfix
[10:57:16] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/3lP4vQ
[10:57:16] <jqcommit> 13jquery/06master 14054c694 15Dave Methvin: Update docs about custom builds, including unSizzled version.
[10:57:42] <rwaldron> so far no issues in IE
[10:57:48] <rwaldron> still playing/digging/poking...
[10:58:11] <DaveMethvin> rwaldron i see how it CAN happen but don't know WHY someone is happy when they asked data to be attached but get no data
[10:58:20] <DaveMethvin> we're just masking an error
[10:59:16] <DaveMethvin> "here jQuery remember this very important number: 87 ... what was that number jQuery?" "Sorry i had no place to put it but here's an `undefined`"
[11:01:18] <snover> On Error Resume Next, DaveMethvin
[11:01:41] <DaveMethvin> On Error "LALALAA I CAN'T HEAR YOU"
[11:01:49] <rwaldron> DaveMethvin  yeah i have no idea...
[11:03:22] <rwaldron> DaveMethvin so I'm breaking up the old acceptData tests into new tests where each of the objects that were expected to fail are now being tested against the same 25 assertions in dataTests(obj)
[11:03:45] <doesallmagic> Project jQuery Core build #716: STILL FAILING in 6 min 29 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/716/
[11:03:45] <rwaldron> DaveMethvin like so: http://gyazo.com/0a0e5016269a86f2e18e5bbfd79799b5
[11:03:45] <doesallmagic> Dave Methvin: Update docs about custom builds, including unSizzled version.
[11:04:26] <rwaldron> ok, now we have some failures
[11:04:47] <rwaldron> I need to restore noData/acceptData in 2.0
[11:04:51] <rwaldron> patch to follow...
[11:05:05] <rwaldron> waaaait a minute.
[11:05:10] <rwaldron> 0_0
[11:05:25] <rwaldron> the browser looked like it was hanging on the object/applet test
[11:05:45] <rwaldron> then all of a sudden it ran through and all passed
[11:06:05] <DaveMethvin> not surprising if it had to load the applet
[11:06:10] <rwaldron> right right
[11:06:46] <rwaldron> at first I read that as "stopped because of uncaught exception that hadn't displayed a prompt"
[11:07:19] <rwaldron> DaveMethvin http://gyazo.com/fb88f1b00d1a0c129b53f1018f0055e8
[11:07:57] <DaveMethvin> that's a good idea
[11:08:35] <rwaldron> Ok, so IE10 does the same, it stalls as it loads up that object/applet, but then runs through and passes all tests
[11:09:06] <rwaldron> I'd be worried that jenkins will think that's a failure
[11:09:36] <DaveMethvin> yer getting a head of yourself rwaldron, i'm worried that jenkins won't work at all
[11:09:44] <rwaldron> but here's the report: jQuery 2.0's data API is capable of storing and retrieving data for any types of objects
[11:10:05] <rwaldron> (as I had originally set out to do)
[11:10:28] <rwaldron> my temporary suspicion that we'd created a regression with the second data rewrite was incorrect
[11:10:43] <rwaldron> I'd like to actually land these tests now too
[11:10:57] <DaveMethvin> do it, i'm clear right now
[11:11:01] <rwaldron> radical
[11:14:58] <jqcommit> 01[13jquery01] 15rwldrn pushed 1 new commit to 06master: 02http://git.io/bm9NBA
[11:14:58] <jqcommit> 13jquery/06master 1438bc968 15Rick Waldron: Old acceptData tests refactored and adapted to support new data system
[11:15:25] <rwaldron> DaveMethvin that's the easy way to add 150 tests
[11:15:27] <rwaldron> ;)
[11:19:50] <doesallmagic> Project jQuery Core build #717: STILL FAILING in 4 min 54 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/717/
[11:19:51] <doesallmagic> Rick Waldron: Old acceptData tests refactored and adapted to support new data system
[11:22:24] <gnarf> sigh
[11:23:26] <gnarf> http://swarm.jquery.org/job/2723
[11:39:33] <rwaldron> gnarf: see my conversation with DaveMethvin above... I predicted that
[11:39:34] <rwaldron> :(
[11:39:54] <rwaldron> that test appears to take upwards of 60s to complete
[11:40:19] <rwaldron> I will gladly remove the test if this causes unnecessary issues.
[11:40:22] <DaveMethvin> it should only need to load the plugin once tho, right?
[11:41:06] <rwaldron> right
[11:41:20] <rwaldron> should we load it earlier?
[11:41:40] <DaveMethvin> can we do it on page load? I guess we don't want it in the markup tho
[11:41:45] <DaveMethvin> that just spreads the cancer
[11:41:51] <rwaldron> truth.
[11:51:33] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 061.9-stable: 02http://git.io/dQJqIQ
[11:51:33] <jqcommit> 13jquery/061.9-stable 1469b3d5c 15jaubourg:  Fixes #11151, #13388. Minor refactor of response conversion and when/where...
[12:01:36] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/QuaSlw
[12:01:36] <jqcommit> 13jquery/06master 14eebc778 15jaubourg:  Fixes #11151, #13388. Minor refactor of response conversion and when/where...
[12:14:55] <doesallmagic> Project jQuery 1.x Core build #79: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/79/
[12:14:56] <doesallmagic> Dave Methvin:  Fixes #11151, #13388. Minor refactor of response conversion and when/where
[12:21:42] <doesallmagic> Project jQuery Core build #718: STILL FAILING in 6 min 42 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/718/
[12:21:42] <doesallmagic> Dave Methvin:  Fixes #11151, #13388. Minor refactor of response conversion and when/where
[13:02:49] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 061.9-stable: 02http://git.io/S3cBaw
[13:02:49] <jqcommit> 13jquery/061.9-stable 14a13cada 15dmitrygusev: Fix typos. Close gh-1186.
[13:05:10] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/n0iLSw
[13:05:10] <jqcommit> 13jquery/06master 14eee2eaf 15dmitrygusev: Fix typos. Close gh-1186.
[13:34:11] <doesallmagic> Project jQuery 1.x Core build #80: STILL FAILING in 31 min: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/80/
[13:34:12] <doesallmagic> Dave Methvin: Fix typos. Close gh-1186.
[13:40:14] <doesallmagic> Project jQuery Core build #719: STILL FAILING in 5 min 51 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/719/
[13:40:14] <doesallmagic> Dave Methvin: Fix typos. Close gh-1186.
[13:51:08] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/EkYY6w
[13:51:08] <jqcommit> 13jquery/06master 1422a4e5b 15Oleg: Squeeze support module. Close gh-1165.
[13:56:52] <doesallmagic> Project jQuery Core build #720: STILL FAILING in 5 min 55 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/720/
[13:56:52] <doesallmagic> Dave Methvin: Squeeze support module. Close gh-1165.
[13:57:09] <DaveMethvin> STILL FAILING? NONPOSSIBLE!
[14:03:16] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/NjGleQ
[14:03:16] <jqcommit> 13jquery/06master 143f05afb 15Richard Gibson: Ref #13353, gh-1183: Capture onlyHandlers in jQuery.Event.isTrigger.
[14:04:23] <doesallmagic> Project jQuery Core build #721: STILL FAILING in 1 min 13 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/721/
[14:04:23] <doesallmagic> Dave Methvin: Ref #13353, gh-1183: Capture onlyHandlers in jQuery.Event.isTrigger.
[14:05:03] <DaveMethvin> cmon swarmy, you're not even trying anymore
[14:05:43] <DaveMethvin> well fortunately i don't need to manually test in ie6/7/8 to get this beta out
[14:07:05] * DaveMethvin slaps doesallmagic around a bit with a large trout
[14:26:41] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/ZLWrUw
[14:26:41] <jqcommit> 13jquery/06master 1434c4e12 15jrburke: Remove the define.amd.jQuery check, ref gh-1150.
[14:34:12] <doesallmagic> Project jQuery Core build #722: STILL FAILING in 7 min 39 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/722/
[14:34:12] <doesallmagic> Dave Methvin: Remove the define.amd.jQuery check, ref gh-1150.
[14:35:13] <DaveMethvin> Looks like imma have to fly this sucker on manual control ... where's that exhaust port?
[15:56:22] <rwaldron> DaveMethvin pin
[15:56:23] <rwaldron> ping
[15:56:31] <DaveMethvin> sup rwaldron
[15:56:44] <rwaldron> I'd add...
[15:56:51] <rwaldron> FirefoxOS apps
[15:56:57] <rwaldron> (because it's buzzy)
[15:56:58] <DaveMethvin> oh yeah, thanks!
[15:57:08] <rwaldron> ChromeOS apps
[15:57:12] * rwaldron shrugs
[15:57:13] <b-ot> rwaldron: ¯\_(ツ)_/¯
[15:57:40] <DaveMethvin> I have no idea what a ChromeOS app looks like, is it HTML?
[15:57:48] <rwaldron> yep
[15:57:54] <DaveMethvin> oh good
[15:58:02] <DaveMethvin> world domination, one platform at a time
[15:58:13] <rwaldron> DaveMethvin http://www.google.com/intl/en/chrome/devices/
[16:02:24] <rwaldron> DaveMethvin|away maybe mention that we are also the owners of npm "jquery" and "jQuery" now
[16:02:35] <rwaldron> and will soon be shipping releases
[16:02:46] <rwaldron> in some near-ish future
[16:13:48] <gibson042> Windows 8 Native Apps too, at least per one fixed ticket
[16:15:13] <gibson042> ah, I see it's already there :)
[17:28:51] <jqcommit> [13jquery] 15stonelee opened pull request #1187: Fix typos (06master...06my)  02http://git.io/AcBI3g
[19:00:30] <gnarf> hrm DaveMethvin https://github.com/jquery/learn.jquery.com/issues/276
[19:00:31] <b-ot> gnarf: Issue #276 by trystanclarke (11h 26m ago): article on index() - index() with no arg now implicitly calls first() not last from jQuery 1.91
[19:00:45] <gnarf> is that an intentional regression?
[19:02:58] <DaveMethvin> gnarf it would be good to get a test case, it's supposed to return the index of the first element in the set in relation to its siblings
[19:05:13] <gnarf> supposedly it used to return .last().index() instead of .first().index() ?
[19:07:53] <DaveMethvin> not that I know of, it's a confusing sig but seems to work as documented http://jsfiddle.net/dmethvin/dUdn7/
[19:07:57] <DaveMethvin> try changing the versions
[19:09:23] <DaveMethvin> oh i see on that docs page: "When .index() is called on a jQuery object that contains more than one element, it does not calculate the index of the first element as might be expected, but instead calculates the index of the last element. This is equivalent to always calling $jqObject.last().index();."
[19:09:25] <DaveMethvin> wtf
[19:09:43] <DaveMethvin> i did not know that :D
[19:10:00] <DaveMethvin> well why would it ever do that?
[19:10:13] <DaveMethvin> i hate that sig anyway
[19:11:08] <DaveMethvin> yep: http://jsfiddle.net/dmethvin/dUdn7/1/
[19:54:00] <gibson042> DaveMethvin gnarf: .index() was not equivalent to .last().index()
[19:56:41] <gibson042> before https://github.com/jquery/jquery/commit/4bb46f413a0e2f6933013b26d2aceddca6cf03f1, .index() was broken on an input collection of more than one element
[19:57:51] <gibson042> per http://api.jquery.com/index/, at least
[20:06:41] <gibson042> to wit: http://jsfiddle.net/dUdn7/2/
[20:07:54] <DaveMethvin> i remember that ticket now gibson042
[20:08:03] <DaveMethvin> so basically it was broken before
[20:08:09] <DaveMethvin> and now it's not!
[20:08:09] <gibson042> yes
[20:08:15] <DaveMethvin> and the docs made something up
[20:08:17] <gibson042> in all likelihood, it was broken forever
[20:08:24] <gibson042> now it's the docs that are broken
[20:08:39] <gibson042> and the concept behind that signature... also broken
[20:08:47] <DaveMethvin> good LORD yes
[20:09:09] <DaveMethvin> it's the old-style jQuery theory that all methods shoudl do something no matter how bizarre
[20:09:20] <DaveMethvin> or unrelated
[20:09:39] <DaveMethvin> I'll add a note to that ticket
[20:13:46] <gibson042> now that we've mostly cleaned up replaceWith, before, and after, we're hitting the second tier of WTF
[20:14:15] <DaveMethvin> "But my code used to work, you must have BROKEN something!"
[20:17:04] <gibson042> "I was *counting* on $el.on(".namespace", fn)!"
[20:17:24] <DaveMethvin> how else am i supposed to blow the stack?
[20:18:08] <gibson042> easy, just serialize a circular structure instead :)
[20:18:24] <DaveMethvin> good old $.extend
[20:40:34] <jqcommit> [13jquery] 15stonelee opened pull request #1188: descriptor[ this.expando ]  is assigned twice (06master...06data)  02http://git.io/KH4tfw
