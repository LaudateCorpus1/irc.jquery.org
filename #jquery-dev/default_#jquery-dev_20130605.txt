[06:33:33] <ajpiano> DaveMethvin: that guy posted in mobile, then in core, then got the reply from mobile saying they said they'd fix it :p
[06:33:40] <jzaefferer> DaveMethvin: I'll look at those jobs now
[06:33:52] <DaveMethvin> ajpiano yeah so i'm not sure why he can't read
[06:34:01] <ajpiano> right but the timing
[06:34:07] <ajpiano> he hadn't heard back from mobile before he posted in core
[06:34:22] <DaveMethvin> i posted an example in my reply days ago
[06:34:34] <ajpiano> whatev tho
[06:37:20] <ajpiano> ya
[06:37:20] <ajpiano> argh
[06:37:20] <ajpiano> jqlog
[06:37:20] <DaveMethvin> and who the hell names an id like that
[06:37:20] <DaveMethvin> ?13992
[06:37:20] <DaveMethvin> it's gonna big a long day
[07:01:54] <jqcommit> 01[13jquery01] 15jzaefferer pushed 1 new commit to 06master: 02http://git.io/Q0aY7g
[07:01:54] <jqcommit> 13jquery/06master 148643ac7 15JoÌˆrn Zaefferer: Build: Update testswarm task to node-testswarm 1.x API
[07:02:19] <doesallmagic2> Project jQuery 1.x Core build #165: ABORTED in 36 sec: http://jenkins.jquery.com/job/jQuery%201.x%20Core/165/
[07:03:36] <doesallmagic2> Project jQuery Core build #839: FAILURE in 1 min 16 sec: http://jenkins.jquery.com/job/jQuery%20Core/839/
[07:09:55] <jqcommit> 01[13jquery01] 15jzaefferer pushed 1 new commit to 061.x-master: 02http://git.io/fE-_hw
[07:09:55] <jqcommit> 13jquery/061.x-master 14f22b074 15JoÌˆrn Zaefferer: Build: Update testswarm task to node-testswarm 1.x API
[07:10:43] <jzaefferer> DaveMethvin: did you disable phantomjs test to run with grunt on purpose besides broken Jenkins?
[07:11:24] <DaveMethvin> jzaefferer i think it still runs on Migrate ... we've never run phantom on core
[07:16:10] <doesallmagic2> Project jQuery Core build #840: STILL FAILING in 7 min 21 sec: http://jenkins.jquery.com/job/jQuery%20Core/840/
[07:16:13] <doesallmagic2> Project jQuery Core 1.x build #166: FAILURE in 3.4 sec: http://jenkins.jquery.com/job/jQuery%20Core%201.x/166/
[07:16:14] <doesallmagic2> joern.zaefferer: Build: Update testswarm task to node-testswarm 1.x API
[07:17:33] <jzaefferer> DaveMethvin: ah, okay. Any reasons against that?
[07:17:48] <DaveMethvin> jzaefferer it takes too long to run and doesn't really tell us much
[07:17:50] <jzaefferer> DaveMethvin: also, jQuery master is running: http://swarm.jquery.org/job/596
[07:17:53] <jzaefferer> okay
[07:18:19] <DaveMethvin> phantom is a great sanity test for migrate and runs quickly so i use it there
[07:18:34] <DaveMethvin> ah that looks pretty good
[07:18:40] <DaveMethvin> and it's updating the -git now
[07:18:41] <DaveMethvin> ?
[07:18:59] <jzaefferer> yeah, should be
[07:19:03] <jzaefferer> can you check it?
[07:19:11] <DaveMethvin> doing that now
[07:19:19] <jzaefferer> 1.x isn't quite working yet. Trying to figure out where this error comes from: http://jenkins.jquery.com/job/jQuery%20Core%201.x/166/console
[07:20:14] <DaveMethvin> doesn't ring a bell with me ... seems to be a testswarm dep?
[07:23:57] <DaveMethvin> jzaefferer that seems to have done it on master 
[07:24:55] <jzaefferer> DaveMethvin: okay, well, once I got that figured out 1.x-master should be building, deploying to CDN and testswarming as well
[07:46:33] <scott_gonzalez> http://bugs.jquery.com/ticket/13992 is awesome
[07:52:31] <scott_gonzalez> DaveMethvin: Did you see the comment/thread about Polymer?
[07:57:43] <doesallmagic2> Project jQuery Core 1.x build #167: STILL FAILING in 42 sec: http://jenkins.jquery.com/job/jQuery%20Core%201.x/167/
[07:59:43] <jzaefferer> DaveMethvin: 1.x-master is now building, deployed CDN and submitted to TestSwarm: http://jenkins.jquery.com/job/jQuery%20Core%201.x/168/console
[08:13:21] <doesallmagic2> Project jQuery Core 1.x build #168: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/168/
[08:19:35] <DaveMethvin> scott_gonzalez i've seen Polymer, the stuff announced at google i/o ... not sure about the thread
[08:20:07] <scott_gonzalez> On yesterday's PE call, I mentioned that we were buliding our own polyfill since nobody else seems to care about oldIE.
[08:20:40] <scott_gonzalez> Rick Byers said that was a good point and that he'd talk to the Polymer team.
[08:20:47] <scott_gonzalez> And the result was: http://lists.w3.org/Archives/Public/public-pointer-events/2013AprJun/0182.html
[08:21:15] <DaveMethvin> it was ie 6-8 tho, right?
[08:21:35] <scott_gonzalez> So that worked out a lot better than when we talked to Daniel back in November.
[08:21:52] <doesallmagic2> Project jQuery Color build #105: SUCCESS in 1 min 55 sec: http://jenkins.jquery.com/job/jQuery%20Color/105/
[08:21:53] <scott_gonzalez> Yeah.
[08:22:08] <DaveMethvin> i understood why he wanted to leave it out, but it would be nice to at least have a second version that supported ie6-8
[08:22:43] <DaveMethvin> i really like the idea of polymer
[08:23:02] <scott_gonzalez> Well the goal now is to have the Pointer Events portion of Polymer support IE6+.
[08:23:03] <scott_gonzalez> Single code base.
[08:23:26] <scott_gonzalez> If we're willing to ditch our special events implementation and collaborate on Polymer.
[08:23:34] <scott_gonzalez> Which is what we wanted from the beginning.
[08:23:41] <DaveMethvin> sure as long as there are no big downsides
[08:23:42] <scott_gonzalez> Polymer is BSD and they have a CLA.
[08:23:58] <scott_gonzalez> Well, it's Google, so you know they care about perf.
[08:24:12] <DaveMethvin> we just need to see how this all performs, but even then it's only a couple of situations like pointermove that are critical
[08:24:34] <scott_gonzalez> yeah
[08:25:19] <scott_gonzalez> So I'd like to respond saying that we'll collaborate, and then have anyone that's going to work on this (like Kris and I) sign their CLA.
[08:25:42] <DaveMethvin> yeah that sounds good, i'd rather have the polyfill be generic 
[11:02:53] <scott_gonzalez> Oh boy http://bugs.jquery.com/ticket/13994
[11:03:15] <scott_gonzalez> Apparently space in a CSS selector means "and" not "descendant" :-P
[11:05:15] <snover> i think you are reading it backwards
[11:10:00] <scott_gonzalez> snover: He wrote $('div,p')
[11:10:00] <scott_gonzalez> selects all <p> and all <div>. So comma = or, space = and.
[11:10:45] <scott_gonzalez> timmywil's response is awesome.
[11:13:15] <DaveMethvin> maybe he'll make a fork of jQuery called eventsWithCommaQuery
[11:13:30] <snover> you guys are being kind of dumbly pedantic. The dude is saying that "a, b" to select elements of type a or type b but then using "a b" to listen for events of type a or type b is inconsistent
[11:14:09] <DaveMethvin> the rules are pretty clearly laid out in the docs
[11:14:12] <snover> obviously not understanding the ramifications of changing things in a huge library to be consistent
[11:14:24] <DaveMethvin> exactly
[11:14:32] <snover> but the complaint is a valid one
[11:14:41] <snover> itâ€™s just not realistically solvable
[11:14:45] <DaveMethvin> in a theoretical conistency sense
[11:15:00] <snover> in an API scope sense, how many special cases do *you* want to have to remember?
[11:15:05] <scott_gonzalez> His comparison to selectors doesn't really make sense though.
[11:15:10] <scott_gonzalez> Except for the use of a comma.
[11:15:12] <DaveMethvin> it's just a list of stuff
[11:15:18] <snover> the comma is the point though
[11:15:46] <snover> "a, b" select types a or b; "a b" select types b inside a; "a b" select events a or b
[11:16:19] <snover> that is how it works now. he wants "a, b" select types a or b; "a, b" select events a or b; "a b" events ?!?!?!?!?!
[11:17:19] <DaveMethvin> spaces would have to still be seps for backcompat, and even just for lexical sanity
[11:17:49] <DaveMethvin> "a, b" has to mean "a" and "b" events, not "a" and " b" with a leading space
[11:18:10] <snover> .split(/\s*,\s*/)
[11:18:31] <snover> anyway, the problem isnâ€™t that the guy is an idiot, the problem is that backwards compatibility trumps consistency and also CSS is dumb and everything is dumb and life is terrible and probably everyone should just go kill themselves
[11:18:32] <DaveMethvin> right, you got the comma part but not the backcompat
[11:19:30] <DaveMethvin> he may have a case if this was 2006 but it's not worth even considering in 2013
[11:19:39] <DaveMethvin> we just confuse things more
[11:19:39] <scott_gonzalez> .replace( [\s,]*, "," ) :-P
[11:19:43] <snover> (split(/\s*|\s*,\s*/))
[11:19:52] <snover> or not
[11:19:53] <snover> whatever
[11:20:02] <snover> poops on all things
[11:20:04] <DaveMethvin> .replace(/./g,"") screw you guys
[17:19:27] <blaine> Hi, I am debugging an issue that I can't tell if is a Jquery bug or expected behavior.
[17:19:45] <blaine> Essentially, jquery loading a html string containing &quot; converts it to tha string literal "
[17:19:58] <blaine> Since posting I have found that .html(), .text() and .get(0).innerHTML all have the &quot; converted to string literal.
[17:21:15] <blaine> I posted on SO, but everyone just says to use .text() which appears to have the same result.   http://stackoverflow.com/questions/16950126/jquery-converting-quot-to-literal-quotation
[17:29:11] <Eviltwin> blaine: I see this http://jsfiddle.net/ghAmx/ alerting " not q&uot;
[17:29:14] <Eviltwin> &quot;*
[17:32:49] <blaine> Why would it do it for quot; and not amp; 
[17:32:52] <blaine> Why would it do it for quot; and not amp; ?
[17:33:01] <blaine> Is that part of some spec?
[17:34:12] <snover> because " does not need to be escaped unless it is in an attribute, and innerHTML does not give you what you passed into it, it is an interface for setting/getting a serialization of the in-memory DOM structure
[17:34:30] <snover> also, this is not the jquery support channel
[17:34:40] <snover> ?channels
[17:34:40] <b-ot> snover: For support please go to #jquery | Development Channels: #jquery-dev - #jqueryui-dev - #jquerymobile-dev - #jquery-content | All Meetings held in #jquery-meeting http://jquery.org/meeting
[17:34:41] <bot-t> For support please go to #jquery | Development Channels: #jquery-dev - #jqueryui-dev - #jquerymobile-dev - #jquery-content | All Meetings held in#jquery-meeting http://jquery.org/meeting
[17:34:59] <blaine> Sorry, I thought it was a bug since it wasn't doing it through pure dom.
[17:40:18] <Eviltwin> The More You Know!
[17:43:28] <Krinkle> Hm.. https://ajax.googleapis.com/ajax/libs/jquery/2/jquery.js still does not exist
[17:43:31] <Krinkle> Known issue
[17:43:32] <Krinkle> ?
[17:43:44] <Krinkle> https://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.js does
[17:43:56] <DaveMethvin> Krinkle maybe paul_irish knows?
[17:44:16] <Krinkle> Neither does https://ajax.googleapis.com/ajax/libs/jquery/2.0/jquery.js btw
[20:15:27] <gibson042> .
[21:12:36] <JamesMGreene> jzaefferer Krinkle|detached: Well, down to just 4 failing QUnit tests on Node
