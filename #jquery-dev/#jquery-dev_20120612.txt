[04:13:29] <jqcommit> [jquery] jaubourg pushed 1 new commit to master: http://git.io/o53Pxg
[04:13:29] <jqcommit> [jquery/master] Adds ajax to the list of optional modules. - Julian Aubourg
[04:54:38] <jq-jenkins> Project jQuery Core build #132: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/132/
[04:54:38] <jq-jenkins> j: Adds ajax to the list of optional modules.
[05:29:18] <scott_gonzalez> DaveMethvin: Since you seem to be knee-deep in HTML parsing APIs for jQuery, would you mind providing some details about problems that we've solved or need to solve to the WHATWG?
[05:29:34] <scott_gonzalez> There's currently a discussion about <template> and document.parse().
[05:29:47] <DaveMethvin> sure, is there a place I can catch up?
[05:30:10] <scott_gonzalez> hmm...must not be WHATWG, probably web-apps.
[05:30:14] <scott_gonzalez> I'm trying to dig up the thread.
[05:30:37] <DaveMethvin> primarily the problems are of our own making
[05:31:01] <DaveMethvin> $(...) can be passed anything and is expected to eat it and barf out something useful
[05:31:09] <scott_gonzalez> http://lists.w3.org/Archives/Public/public-webapps/2012AprJun/1148.html
[05:31:44] <scott_gonzalez> This is the top of the thread: http://lists.w3.org/Archives/Public/public-webapps/2012AprJun/0690.html
[05:31:50] <DaveMethvin> ok, i'll read that
[05:32:15] <scott_gonzalez> There are some related threads as well.
[05:32:23] <scott_gonzalez> document.parse(): http://lists.w3.org/Archives/Public/public-webapps/2012AprJun/0883.html
[05:32:50] <DaveMethvin> scripts are a great example of the strangeness we do with $()
[05:32:50] <scott_gonzalez> <template> element: http://lists.w3.org/Archives/Public/public-webapps/2012JanMar/0595.html
[05:38:52] <scott_gonzalez> Why is the default build of jQuery minimal instead of full?
[05:42:34] <DaveMethvin> scott_gonzalez: it's not
[05:42:48] <DaveMethvin> you mean if you say      grunt      by itself?
[05:43:00] <scott_gonzalez> `grunt build` excludes everything.
[05:43:09] <scott_gonzalez> `grunt build:*:*` is required to get a full build.
[05:43:12] <DaveMethvin> that's not the default task
[05:43:12] <scott_gonzalez> Seems weird.
[05:43:25] <DaveMethvin> pushstack here...
[05:43:31] <DaveMethvin> what are you subscribed to at w3
[05:43:34] <DaveMethvin> seems like a firehose
[05:43:41] <scott_gonzalez> :-)
[05:43:56] <scott_gonzalez> Did you just subscribe and get a flood of emails?
[05:44:01] <DaveMethvin> yeah
[05:44:12] <DaveMethvin> and seemingly unrelated topics
[05:44:16] <scott_gonzalez> Yeah, you'll get a bit of backlog.
[05:44:27] <scott_gonzalez> Oh, yes, web-apps is like WHATWG, it's pretty much everything.
[05:44:40] <DaveMethvin> so is there a better subset?
[05:44:46] <DaveMethvin> do they have digest?
[05:44:54] <scott_gonzalez> Not sure.
[05:45:08] <scott_gonzalez> It seems worse than it is when you first subscribe, because you get old messages.
[05:45:19] <scott_gonzalez> But, the volume is pretty high.
[05:45:44] <DaveMethvin> i even get to see their bugzilla spam, oh joy
[05:45:47] <scott_gonzalez> You can filter based on subject prefix as messages come in that you don't care about.
[05:45:53] <scott_gonzalez> Oh yup :-)
[05:46:17] <DaveMethvin> if the subject has "footwear" i probably don't want it
[05:46:19] <scott_gonzalez> There is no good solution for "I want to participate in this one thread." :-/
[05:48:13] <DaveMethvin> so funny, this algo looks like it was ripped from jQuery.clean ... http://lists.w3.org/Archives/Public/public-webapps/2012AprJun/0883.html
[05:49:35] <scott_gonzalez> Basically the discussion is: jQuery does this, they want a standard API for it.
[05:49:54] <scott_gonzalez> But it's heavily tied to <template> and web components.
[05:50:52] <scott_gonzalez> Rafael is writing the spec and Yehuda has been providing jQuery context.
[06:03:13] <scott_gonzalez> ?tell mikesherov I finally go around to verifying all three bugs with animations. Thanks.
[06:03:13] <bot-t> scott_gonzalez, Okay.
[06:15:46] <gibson042> .
[06:17:32] <DaveMethvin> hey gibson042
[06:17:42] <gibson042> hey
[06:17:54] <DaveMethvin> that darned ie script error throwing test is still broken
[06:18:00] <DaveMethvin> dunno what's up with that
[06:18:17] <DaveMethvin> strange b/c the unit test for the feature works in QUnit
[06:18:26] <DaveMethvin> and the jQuery test works fine locally
[06:18:35] <DaveMethvin> and it works fine from a manual run in browserstack
[06:18:47] <DaveMethvin> but it doesn't work in swarm/jenkins
[06:18:49] <gibson042> this is ridiculous
[06:19:08] <DaveMethvin> you said it bro
[06:19:32] <DaveMethvin> http://swarm.jquery.org/job/252
[06:19:46] <DaveMethvin> notice it's causing the ajax fails too
[06:20:15] <DaveMethvin> so i started getting superstitious and used a separate test file for the manipulation test
[06:20:27] <DaveMethvin> that did the same thing as the inline, it calls undefined()
[06:20:31] <DaveMethvin> but no change
[06:20:54] <DaveMethvin> but you can see the failed ajax tests, "toTheBone" is undefined :D
[06:21:12] <gibson042> I'd say there's something special about that syntax, but it works even as far as browserstack
[06:21:43] <gibson042> (as opposed to "throw" or similar)
[06:21:50] <gibson042> yeah, I see it :\
[06:22:39] <DaveMethvin> that's a better error message than "Object expected" :)
[06:22:52] <DaveMethvin> at least we're sure where it dies
[06:26:16] <gibson042> I know basically nothing about swarm/jenkins
[06:26:28] <gibson042> could something there be setting up an onerror handler?
[06:26:40] <DaveMethvin> oh, beyond the one in qunit?
[06:26:45] <gibson042> yeah
[06:27:00] <DaveMethvin> i dunno
[06:27:34] <DaveMethvin> ?tell Krinkle Do you know if swarm/jenkins sets up any extra window.onerror handlers?
[06:27:34] <bot-t> DaveMethvin, Okay.
[06:27:42] <DaveMethvin> and dont' forget, bot-t!
[06:27:44] <gibson042> I mean; "ERROR: 'toTheBone' is undefined" doesn't look like it's coming from QUnit
[06:27:52] <DaveMethvin> yeah it's strange
[06:28:32] <jaubourg> :|
[06:28:32] <ircjsbot> jaubourg, you have one new message, from Krinkle (10 hours and 6 minutes ago). Tell me if you want to read it (“read”).
[06:28:46] <jaubourg> ircjsbot: read
[06:28:46] <ircjsbot> jaubourg, from Krinkle, 10 hours and 6 minutes ago: I've got a local set up with a modified version of my "CompletenessTest" module. Screenshot of result: http://cl.ly/3V1a052U1d473B1K190R - will publish soon if you like it.
[06:28:46] <DaveMethvin> oooh, read it jaubourg, read it!
[06:28:58] <jaubourg> not related :P
[06:29:06] <DaveMethvin> jaubourg: looked like some of those were covered but somehow missed
[06:29:11] <DaveMethvin> nonetheless, exciting
[06:29:24] <DaveMethvin> i read your message when krinkle sent it
[06:29:34] <DaveMethvin> then i licked the envelope and put it back :D
[06:29:59] <jaubourg> yes, mikesherov asked about code coverage and Krinkle said he had something
[06:30:34] <jaubourg> ircjsbot: tell Krinkle we definitely need this in our test suite (the coverage tool)
[06:30:34] <ircjsbot> jaubourg, OK, I will tell Krinkle if I see them.
[06:32:44] <DaveMethvin> gibson042: AHA!
[06:32:45] <DaveMethvin> https://github.com/jquery/testswarm/blob/master/js/inject.js#L173
[06:33:05] <gibson042> WOOOOOOOOO
[06:33:41] <jaubourg> jeez
[06:34:00] <DaveMethvin> good thing gibson042 mentioned that
[06:34:24] <DaveMethvin> the blame says it was added late march, we prolly didn't pick it up until recently
[06:34:49] <jaubourg> btw gibson042: https://github.com/jquery/jquery/tree/newInstance <= see unit tests in test/unit/core.js and test/data/core/newInstance.html
[06:34:58] <gibson042> it wouldn't matter anyway; we didn't have globalEval( strThrows )
[06:35:08] <jaubourg> not related but wanted you to see it
[06:35:46] <DaveMethvin> ?tell Krinkle this seems to be clobbering our onerror handler: https://github.com/jquery/testswarm/blob/master/js/inject.js#L173
[06:35:46] <bot-t> DaveMethvin, Okay.
[06:35:47] <gibson042> catch should prevent onerror from seeing anything; it just doesn't for that corner case in IE
[06:36:33] <DaveMethvin> yeah but you added the ignore option to qunit's processing
[06:36:39] <DaveMethvin> but this one isn't ignoring
[06:36:59] <gibson042> right, because the qunit onerror is overwritten
[06:37:18] <DaveMethvin> yep
[06:37:30] <DaveMethvin> okay well i feel better that we can blame someone else :D
[06:37:39] <gibson042> right on :)
[06:37:56] <jaubourg> +1 on blaming the world
[06:38:14] <DaveMethvin> hey, you, get offa my cloud
[06:38:26] <jaubourg> view is great
[06:42:02] <DaveMethvin> krinkle!
[06:42:07] <Krinkle> Hi
[06:42:07] <ircjsbot> Krinkle, you have one new message, from jaubourg (11 minutes and 33 seconds ago). Tell me if you want to read it (“read”).
[06:42:07] <bot-t> (14 mins 30 secs ago) <DaveMethvin> tell Krinkle Do you know if swarm/jenkins sets up any extra window.onerror handlers?
[06:42:07] <bot-t> (6 mins 20 secs ago) <DaveMethvin> tell Krinkle this seems to be clobbering our onerror handler: https://github.com/jquery/testswarm/blob/master/js/inject.js#L173
[06:42:10] <DaveMethvin> muuahaha
[06:42:11] <Krinkle> O_O
[06:42:20] <Krinkle> ircjsbot: read
[06:42:20] <ircjsbot> Krinkle, from jaubourg, 11 minutes and 47 seconds ago: we definitely need this in our test suite (the coverage tool)
[06:42:45] <DaveMethvin> yeah krinkle i love your coverage tool but i could do without the onerror handler :)
[06:42:47] <Krinkle> DaveMethvin: Ah, of course
[06:43:08] <DaveMethvin> it's always obvious in retrospect
[06:43:21] <Krinkle> Now.. for one, that's been there for ages. I think its been there since the very first commit that JohnResig committed
[06:43:39] <DaveMethvin> oh i thought it was new
[06:43:43] <kborchers> guys FYI, super important PR https://github.com/jquery/jquery/pull/824 :)
[06:43:44] <socialhapy> ★ Pull request on jquery by kborchers (30.902s ago): Fixed a typo in README.md
[06:43:54] <Krinkle> The primary reason is the same reason that QUnit spits out stack traces in HTML instead of console, because we need the information from remote clients
[06:43:57] <DaveMethvin> OH NO A BUG IN THE README!
[06:44:11] <kborchers> heh
[06:44:18] <Krinkle> But I find annoying that window.onerror fires even though it is catches.
[06:44:26] <Krinkle> catched*
[06:44:30] <Krinkle> DaveMethvin: right ?
[06:44:35] <DaveMethvin> yes, but only in  dun-dun-dun! Internet Explorer
[06:44:51] <Krinkle> ah, okay. So it isn't a bug in the general specification / implementation.
[06:45:14] <DaveMethvin> yeah seems like an IE quirk, perhaps only with globalExec
[06:45:37] <Krinkle> DaveMethvin: How about this, I'll keep the onerror handler to log it into the HTML, but I'll remove the immediate call to submit() that causes it so stop continuation of the test suite
[06:46:14] <Krinkle> If some exception really does cause the test suite to die, then the heartbeat loop will pick it up within a few seconds and abort anyway.
[06:46:16] <gibson042> I was thinking you'd run the old onerror and do nothing if it returns true
[06:46:21] <DaveMethvin> this is clobbering the qunit handler though
[06:46:27] <DaveMethvin> right you will need to chain it
[06:46:35] <Krinkle> Ah, right.
[06:46:39] <Krinkle> Does it support event listener?
[06:46:43] <Krinkle> (I guess not)
[06:46:43] <DaveMethvin> hahahah
[06:46:46] <gibson042> lol
[06:46:57] <Krinkle> I hate to use on* properties directly for this very reason
[06:47:05] <DaveMethvin> exactly but we're talking ie as well
[06:47:29] <Krinkle> window.attachEvent ? (insert cute kitten smile)
[06:47:41] <DaveMethvin> i wouldnt count on it
[06:47:49] <gibson042> onerror is special
[06:47:56] <DaveMethvin> as in special education
[06:47:59] <DaveMethvin> we got schooled
[06:48:01] <Krinkle> http://msdn.microsoft.com/en-us/library/ie/ms536930(v=vs.85).aspx
[06:48:19] <Krinkle> nvm, that's xhr
[06:48:48] <Krinkle> Does QUnit have a basic event chainer (like jQuery has) that keeps track of stuff and so on ?
[06:49:02] <Krinkle> oh, darn, we can't count on that even if it does
[06:49:08] <Krinkle> since this is in testwarm
[06:49:56] <DaveMethvin> yep, assume you are on a desert island with nothing but a soccer ball and three coconuts
[06:50:06] <Krinkle> I'd like that ;-)
[06:50:24] <DaveMethvin> wait, fix this first, THEN you can go!
[06:51:06] <gibson042> hahaha, check out example 2: https://developer.mozilla.org/en/DOM/window.onerror#Examples
[06:51:43] <Krinkle> window.onerror = TestSwarm.chainEvent( window.onerror, function () { /* ... */ }); TestSwarm.chainEvent = function (oldFn, newFn) { if (!oldFn) { return newFn; } return function () { oldFn(); newFn(); }; };
[06:51:45] <Krinkle> something like that?
[06:52:08] * Krinkle goes and implement
[06:52:54] <gibson042> Krinkle: not exactly
[06:53:03] <Krinkle> DaveMethvin: Do you mind filing a bug in jquery/testswarm for this?
[06:53:08] <gibson042> you need to skip newFn if oldFn returns true
[06:53:09] <Krinkle> gibson042: how so ?
[06:53:15] <gibson042> for *this* case
[06:53:15] <Krinkle> aha
[06:53:24] <Krinkle> So not a generic chainEvent, then
[06:53:28] <gibson042> probably not
[06:53:36] <DaveMethvin> i have to run, back in about 15 minutes
[06:53:36] <Krinkle> gibson042: wait, return true triggers skip?
[06:53:41] <Krinkle> not return false ?
[06:54:05] <Krinkle> ah, I'll snatch MDN
[06:56:13] <gibson042> yes, return true to suppress the error
[06:56:14] <gibson042> "To suppress the default Windows Internet Explorer error message for the window event, set the returnValue property of theevent object to true or simply return true in Microsoft JScript." http://msdn.microsoft.com/en-us/library/ie/cc197053(v=vs.85).aspx
[07:01:42] <Krinkle> gibson042: There is no event object
[07:01:52] <Krinkle> you're looking at the element onerror event
[07:02:11] <Krinkle> (I made the same mistake a few minutes ago)
[07:26:14] <gibson042> Krinkle: I think the "return true" part is still valid, though
[07:27:17] <Krinkle> Sure
[07:42:52] <Krinkle> DaveMethvin: gibson042 is either of you filing a bug on jquery/testswarm? If not, I'll do that myself
[07:43:05] <DaveMethvin> I can do it
[07:44:56] <Krinkle> np, already writin it
[07:50:02] <Krinkle> DaveMethvin:
[07:50:03] <Krinkle> https://github.com/jquery/testswarm/issues/191
[07:50:03] <socialhapy> ★ Issue #191 on testswarm (Krinkle; 3m, 55s ago): Preserve other window.onerror handlers (if there are any)
[07:50:03] <Krinkle> https://github.com/jquery/testswarm/issues/192
[07:50:04] <socialhapy> ★ Issue #192 on testswarm (Krinkle; 11.062s ago): inject.js onerror handler should not abort the test
[07:50:44] <DaveMethvin> i think that will fix all but one of the test fails we currently have
[07:51:33] <Krinkle> I added a pull-request in jquery/qunit that is also needed to make it work good
[07:51:38] <Krinkle> DaveMethvin: Can you check that out?
[07:52:03] <DaveMethvin> krinkle, you mean the qunit pull?
[07:52:06] <Krinkle> Yes
[07:52:19] <DaveMethvin> just a sec
[07:52:28] <Krinkle> #260 / #261
[07:52:41] <Krinkle> GH-260 / GH-261 if you will :)
[07:54:02] <DaveMethvin> oh browserstack, y u so borked
[07:56:09] <DaveMethvin> Krinkle: makes sense i think
[08:01:40] <jzaefferer> Krinkle: got the PR notification, will review soon!
[08:01:47] <Krinkle> k
[08:02:03] <jqcommit> [jquery] rwldrn pushed 1 new commit to master: http://git.io/mqNl2g
[08:02:03] <jqcommit> [jquery/master] Fix typo in README - kborchers
[08:02:19] <Krinkle> I sorta have another big one coming up (projects), that I have now made depending on 'results'. I don't feel like rebasing that giant one, so the sooner the better :)
[08:05:01] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/rMhe9A
[08:05:01] <jqcommit> [testswarm/master] Preserve other window.onerror handlers (if there are any). - Timo Tijhof
[08:11:00] <scott_gonzalez> DaveMethvin: I actually find this frustrating: http://bugs.jquery.com/ticket/11850
[08:11:07] <scott_gonzalez> The web seems entirely broken because of this.
[08:11:25] <scott_gonzalez> Every major service returns 200, even for failure cases, which seems bad.
[08:11:46] <DaveMethvin> so are you proposing we execute script on 403?
[08:11:54] <scott_gonzalez> I don't think we can do anything about that, but treating data type differently based on status code is what seems wrong.
[08:12:18] <rwaldron> DaveMethvin this is part of a post from the forum: "With custom builds, we only will have more different versions of jQuery running all over the internet and will discourage everyone to update their version of the core."
[08:12:19] <scott_gonzalez> If the data coming back is JSON, we should parse as JSON.
[08:12:23] <DaveMethvin> is tehre a better way?
[08:12:33] <rwaldron> Just to be clear, I'm not sure what our official support position is here?
[08:13:02] <DaveMethvin> rwaldron: it's totally optional and a big-kids feature
[08:13:05] <rwaldron> what happens when "unwhole" builds get out into the wild?
[08:13:08] <jq-jenkins> Project QUnit build #139: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/QUnit/139/
[08:13:17] <DaveMethvin> rwaldron: just like a fork
[08:13:21] <rwaldron> right
[08:13:24] <rwaldron> but it will be chais
[08:13:26] <rwaldron> chaos*
[08:13:29] <DaveMethvin> okay next topic
[08:13:32] <rwaldron> :(
[08:13:34] <DaveMethvin> scott_gonzalez:
[08:13:50] <DaveMethvin> if we look at content-type ONLY
[08:13:54] <DaveMethvin> i might buy that
[08:14:00] <DaveMethvin> but "intelligent guess" gets us in trouble
[08:14:03] <DaveMethvin> and the problelm is
[08:14:10] <DaveMethvin> that most web devs  have no control over the server
[08:14:19] <DaveMethvin> so they can't control headers
[08:14:28] <DaveMethvin> and intelligent guess was built for that
[08:14:33] <DaveMethvin> as i  understood it
[08:14:54] <DaveMethvin> perhaps jaubourg could shed more light
[08:15:19] <DaveMethvin> but to me, if the server replies 403 or 500 that is probably not something the requester expected
[08:15:19] <scott_gonzalez> Looking at the headers seems fine.
[08:15:26] <DaveMethvin> and if they did they should take manual control and get the text
[08:15:27] <scott_gonzalez> The headers are likely to be more correct.
[08:15:56] <DaveMethvin> the problem with ajax is that it already tries to do too much to save the caller a few lines of code
[08:15:59] <scott_gonzalez> Even if they're incorrect for non-2xx, they're more likely to be safe, like text/html instead which we'd basically ignore.
[08:16:01] <DaveMethvin> and each time it adds ambiguity
[08:16:31] <scott_gonzalez> I dont't hink we can fix the web in this regard.
[08:16:35] <DaveMethvin> scott_gonzalez: can you write out your proposal on that ticket? that is, what we should do for each case?
[08:17:52] <DaveMethvin> if dataType:"script" and content-type isn't "script" (or something compaible) we'd throw a parser error regardless of status for example
[08:18:11] <scott_gonzalez> seems fine
[08:21:01] <Krinkle> jzaefferer: btw, last few days we've seen a few ghost runs
[08:21:07] <Krinkle> not ghost re-runs but regular runs
[08:21:29] <Krinkle> these are cases where the entry in run_useragent has status=1 (in progress), but the accompanied run_client row was deleted.
[08:21:55] <Krinkle> this was previously "fixed" by "reset runs that race-condition deleted themselves" query in CleanupAction, which we disabled for performance reasons
[08:22:44] <Krinkle> this edge case (which is rare on a small setup locally, but rather common when going large scale with around the clock browserstack stuff coming in with 2 or more clients) is causing that
[08:23:14] <Krinkle> which, by the way, I believe is fixed/obsolete/gone in the results branch (because it doesn't depend on the assumption that there will always be entries in both)
[08:23:57] <jzaefferer> results branch?
[08:24:18] <Krinkle> the PR
[08:24:38] <jzaefferer> ah, more to review...
[08:24:40] <Krinkle> which factors out run_client and introduces a more stable runresults table
[08:24:48] <Krinkle> jzaefferer: which PR were you talking about?
[08:24:56] <jzaefferer> the QUnit PR...
[08:25:03] <Krinkle> Oh that 2 liner :P
[08:25:08] <jzaefferer> haven't looked yet :p
[08:27:22] <rwaldron> DaveMethvin: re: docs#11887
[08:27:23] <bot-t> DaveMethvin, [#11887] Add an entry for $.cssNumber to the API docs (pending enhancement) - http://jqbug.com/11887
[08:27:31] <rwaldron> cssNumber is already documented
[08:27:57] <rwaldron> I suspect they want more thorough documentation, with examples, etc
[08:27:57] <DaveMethvin> i wasn't sure what he was asking for
[08:28:13] <rwaldron> yeah, my thought is just a best guess
[08:33:46] <jzaefferer> Krinkle: just checked out results branch and ran the dbUpdate script
[08:33:59] <Krinkle> you'll have to reinstall with dbInstall
[08:34:00] <Krinkle> jzaefferer:
[08:34:07] <jzaefferer> does that kill users?
[08:34:11] <Krinkle> Yes
[08:34:19] <Krinkle> But we can preserve them manually on swarm01
[08:34:23] <jzaefferer> meh
[08:34:27] <Krinkle> this is within 1.0, thats the cost of running alpha :P
[08:35:38] <jzaefferer> wasn't there a script for adding users?
[08:35:49] <jzaefferer> I guess its still signup...
[08:37:33] <Krinkle> Yep
[08:37:50] <jzaefferer> {"error":{"code":"data-corrupt","info":"No user agents matched the generated browserset filter."}}
[08:37:51] <Krinkle> projects will have scripts/projectCreate.php  (already have it locallly)
[08:38:09] <jzaefferer> so much to catch up on /o\
[08:38:37] <jzaefferer> oh nice, it still create a job
[08:39:14] <Krinkle> yeah..
[08:39:39] <jzaefferer> useragents setup isn't really in the readme, is it?
[08:39:56] <jzaefferer> ah, no, but it links to the wiki
[08:40:11] <Krinkle> it is in -sample and in addjob/README
[08:40:31] <Krinkle> jzaefferer: wait.. are you sure that job was created from this request just now?
[08:40:43] <Krinkle> addjob has a return after the error for "No user agents matched the generated browserset filter"
[08:40:47] <Krinkle> I'm pretty sure I put it there
[08:41:25] <jzaefferer> Krinkle: yeah, its reproducible
[08:41:34] <jzaefferer> submitting job via node-testswarm/local-test.js
[08:41:47] <jzaefferer> with "browserSets[]": ["popular"]
[08:41:52] <Krinkle> Oh I see
[08:41:55] <Krinkle> There is 2 errors
[08:41:55] <jzaefferer> while that isn't in the defaults and wasn't yet in my config
[08:42:00] <Krinkle> you're only seeing 1
[08:42:27] <Krinkle> jzaefferer: https://github.com/jquery/testswarm/blob/master/inc/actions/AddjobAction.php#L133
[08:42:37] <Krinkle> "No user agents matched the genera.."  has a return
[08:42:51] <Krinkle> the error you are really hitting is 4 lines up "Unknown browser set: "
[08:42:54] <Krinkle> that one needs a return
[08:43:28] <jq-jenkins> Project jQuery Core build #133: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/133/
[08:43:28] <jq-jenkins> waldron.rick: Fix typo in README
[08:43:33] <jzaefferer> yeah, and that runs after the insert on line 120
[08:44:35] <jzaefferer> seeing the new results page now
[08:44:38] <jzaefferer> awesomesauce! :-)
[08:45:21] <jzaefferer> next we'll make that available via json api, with actual test/assertions, then node-testswarm can use that to output junit-xml and we'll get detailed stats in jenkins :-)
[08:45:49] <jzaefferer> so if you need a detailed code review, I'm afraid you need to find someone else with more php background
[08:45:49] <Krinkle> yep
[08:45:59] <jzaefferer> but otherwise its good to go :-)
[08:46:26] <Krinkle> I guess I'll just merge it later tonight. Just wanted to make sure it generally works on your end. Fixing that bug in addjob as well.
[08:46:41] <Krinkle> We can fix other bugs as we test it live on swarm01
[08:46:53] <Krinkle> probably the best test there is.
[08:48:13] <jzaefferer> yep
[08:48:55] <jzaefferer> good thing to have a current testswarm running locally again
[08:49:03] <jzaefferer> and that node-testswarm makes it really easy to test
[08:49:10] <Krinkle> Yeo
[08:49:12] <Krinkle> Yep
[08:49:14] <jzaefferer> my "popular" browserSet is now just Chrome|19 :-)
[08:50:00] <Krinkle> maybe change test.'s in node-testswarm to use "current" as default browserSet, so it works out of the box
[08:50:01] <Krinkle> test.js*
[08:55:05] <jzaefferer> its set to currentDesktop, but I had "popular" in my copy
[08:55:14] <jzaefferer> so already works by default
[08:55:22] <jzaefferer> https://github.com/jquery/testswarm/pull/190#discussion_r967784
[08:55:23] <socialhapy> ★ Pull request on testswarm by Krinkle (21h, 26m ago): Implement new results storage and pinging system
[08:55:24] <jzaefferer> ??
[08:57:51] <jzaefferer> Krinkle: above and https://github.com/jquery/qunit/pull/261#issuecomment-6274446
[08:57:52] <socialhapy> ★ Pull request on qunit by Krinkle (1h, 16m ago): (issue #260) config.current should be reset at the right time.
[09:00:47] <jaubourg> damned if you do, damned if you don't: http://forum.jquery.com/topic/why-custom-builds
[09:11:53] <jqcommit> [qunit] jzaefferer pushed 1 new commit to master: http://git.io/JVcYDA
[09:11:53] <jqcommit> [qunit/master] (issue #260) config.current should be reset at the right time. - Timo Tijhof
[09:12:22] <jq-jenkins> Project QUnit build #140: STILL FAILING in 16 sec: http://swarm.jquery.org:8080/job/QUnit/140/
[09:12:23] <jq-jenkins> krinklemail: (issue #260) config.current should be reset at the right time.
[09:12:32] <Krinkle> jzaefferer: I wrote a PHP script that fixes the race-condition / ghost runs in /srv/swarm.jquery.org/tools/; it does the same thing that super slow query in CleanupAction used to do. But done with separate (quick) queries in a loop in PHP. Will take over a minute to run, but won't timeout mysql. I've put it in crontab for */2 (not *)
[09:16:28] <rwaldron> DaveMethvin I just solved "build:*:*:-blah"
[09:16:30] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/u55VVA
[09:16:30] <jqcommit> [testswarm/master] AddjobAction: Fix bug for job with invalid browserSets. - Timo Tijhof
[09:16:40] <rwaldron> had a moment of inspiration.
[09:17:12] <DaveMethvin> ooh what was it rwaldron
[09:17:38] <Krinkle> jzaefferer: Oh, interesting
[09:18:14] <gibson042> TELL US
[09:18:33] <Krinkle> see jenkins
[09:18:42] <rwaldron> DaveMethvin gibson042 so, what I did was to create a "cover task"
[09:18:56] <rwaldron> grunt custom:+ajax,-dimensions,-effects,-offset is basically an alias
[09:19:03] <rwaldron> for what already exists
[09:19:10] <DaveMethvin> sounds nice
[09:19:22] <rwaldron> i have a regs task that parses that string into the format that gibson042's system likes
[09:19:42] <rwaldron> and uses grunt.util.spawn to call it as grunt build:*:*:-ajax:-dimensions:-effects:-offset
[09:20:00] <gibson042> hmm, neat
[09:20:03] <rwaldron> and just prints the results of that process as though it were this process
[09:20:05] <DaveMethvin> another nice feature would be to have it be quiet about including everything unless it was an explicit include
[09:20:19] <DaveMethvin> our build is getting to be longer than a screen full
[09:20:30] <rwaldron> then I decorated...
[09:20:31] <rwaldron> http://gyazo.com/39dd1be170c5c086d23de9ddcfbc9d85
[09:21:05] <DaveMethvin> lol just can't leave it alone canya rwaldron :)
[09:21:10] <DaveMethvin> so pretty
[09:21:48] <rwaldron> I like when I don't have to read terminal output, line by line, to figure out what is going on
[09:21:50] <rwaldron> :D
[09:22:17] <DaveMethvin> it would be nice to have the green lines only appear for explicit forced includes, not default builds
[09:23:08] <rwaldron> easy enough
[09:23:21] <rwaldron> I'll limit to when a + exists and verbose mode
[09:23:25] <gibson042> introducing the "custom" task might solve that and another issue
[09:24:00] <DaveMethvin> Krinkle: if i submodule update to grab your qunit change is there a chance we might get rid of this IE bug?
[09:24:26] <DaveMethvin> i feel we're close to SUCCESS here
[09:28:03] <Krinkle> DaveMethvin: don't
[09:28:17] <DaveMethvin> ok
[09:28:46] <Krinkle> had a phone call 5 minutes ago
[09:28:47] <Krinkle> finished now
[09:29:00] <rwaldron> gibson042 so.. uh... thanks for "optIn" :D
[09:29:05] <Krinkle> DaveMethvin: yes, that will likely fix it, but right now I managed to break QUnit without jzaefferer knowing, so not "right now"
[09:29:28] <Krinkle> jzaefferer: http://swarm.jquery.org:8080/job/QUnit/140/console
[09:29:41] <rwaldron> gibson042 it was exactly what I needed, at exactly the moment I needed it.
[09:30:01] <DaveMethvin> yeah that code is nice
[09:30:02] <gibson042> the wacky syntax I put in was to make sure that it would be fairly easy to get a minimal build and a full build within the constraints of a MultiTask
[09:30:02] <Krinkle> I forgot to ran the test suite for that 2 line change, didn't think it would break something
[09:30:03] <Krinkle> turns out I was wrong
[09:30:14] <Krinkle> jzaefferer: why do we support assertions outside test() ?
[09:30:20] <DaveMethvin> obtw rwaldron can  you s/it's/its/ in those comments?
[09:30:36] <Krinkle> better yet, why do they fail only now?
[09:30:55] <jzaefferer> Krinkle: no idea - oversight?
[09:31:15] <Krinkle> the commit you pulled in from me unsets current *after* the test is done, so any assertions done before the firs test() should fail either way
[09:31:20] <rwaldron> sure
[09:31:24] <rwaldron> what comments?
[09:31:38] <DaveMethvin> in the build task
[09:31:42] <rwaldron> oh sure
[09:32:48] <gibson042> but it would be really nice for "grunt build" to be opt-out and "grunt custom" to be opt-in
[09:33:09] <jzaefferer> Krinkle: sucks when phantomjs fails while it works fine in an actual browser :/
[09:33:48] <jzaefferer> also sucks to have no stack :/
[09:34:56] <Krinkle> jzaefferer: I think I found it
[09:34:58] <Krinkle> (counting the dots)
[09:34:58] <Krinkle> :D
[09:35:20] <jzaefferer> its about the reset test?
[09:35:23] <Krinkle> jzaefferer: https://github.com/jquery/qunit/blob/master/test/test.js#L30
[09:35:28] <Krinkle> the ok() inside module setup
[09:35:41] <Krinkle> inside test setup is fine, but module setup is outside Test
[09:36:01] <Krinkle> line 51
[09:36:03] <jzaefferer> how about https://github.com/jquery/qunit/blob/master/test/test.js#L494 ?
[09:36:57] <jzaefferer> running assertions inside module's setup should be just fine
[09:37:10] <jzaefferer> neither explains why it only fails in phantomjs
[09:37:43] <jzaefferer> but yeah, without the assertion in that reset test on line 494, it works
[09:38:18] <jzaefferer> actually it also fails in the browser?
[09:38:21] <jzaefferer> what the...
[09:38:36] <Krinkle> yes
[09:38:39] <jzaefferer> crap, I ran the testsuite after applying your patch
[09:38:44] <jzaefferer> stupid cache :/
[09:38:56] <Krinkle> jzaefferer: https://github.com/jquery/qunit/pull/262
[09:38:57] <socialhapy> ★ Github API: no pull request found
[09:38:59] <Krinkle> https://github.com/jquery/qunit/pull/262
[09:39:00] <socialhapy> ★ Github API: no pull request found
[09:39:07] <Krinkle> whatever
[09:39:42] <jzaefferer> stupid github api
[09:40:04] <jzaefferer> landed
[09:40:06] <jqcommit> [qunit] jzaefferer pushed 1 new commit to master: http://git.io/0y2c5A
[09:40:06] <jqcommit> [qunit/master] move config.current unset to after QUnit.reset() - Timo Tijhof
[09:49:25] <jq-jenkins> Yippie, build fixed!
[09:49:26] <jq-jenkins> Project QUnit build #141: FIXED in 9 min 23 sec: http://swarm.jquery.org:8080/job/QUnit/141/
[09:49:26] <jq-jenkins> krinklemail: move config.current unset to after QUnit.reset()
[09:52:49] <jqcommit> [jquery] rwldrn pushed 1 new commit to master: http://git.io/E_XKaA
[09:52:49] <jqcommit> [jquery/master] Simplify the terminal command args syntax for custom builds. Update README - Rick Waldron
[09:54:13] <jqcommit> [jquery] rwldrn pushed 1 new commit to master: http://git.io/rwnF8w
[09:54:13] <jqcommit> [jquery/master] Fix args translation example in gruntfile comments - Rick Waldron
[09:57:04] <Krinkle> SBoD: Spinning Beachbal of Death
[09:57:05] <Krinkle> Grmpf
[09:57:06] <Krinkle> what did I miss?
[10:04:57] <ajpiano> jaubourg: rwaldron i just got in there to try and brush aside most of that guy's critique
[10:06:03] <rwaldron> ?
[10:06:18] <ajpiano> in that forum threat
[10:06:21] <ajpiano> thread*
[10:06:21] <ajpiano> lol
[10:06:26] <rwaldron> Still not sure
[10:06:50] <ajpiano> https://forum.jquery.com/topic/why-custom-builds
[10:06:59] <rwaldron> oh, right
[10:07:13] <rwaldron> yeah I posted, but I've since deleted all follow up emails
[10:23:39] <jq-jenkins> Project jQuery Core build #134: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/134/
[10:23:39] <jq-jenkins> waldron.rick: Simplify the terminal command args syntax for custom builds. Update README
[10:30:14] <Krinkle> Woo, jquery core is almost passing
[10:30:17] <Krinkle> http://swarm.jquery.org/job/259
[10:30:24] <Krinkle> only green so far
[10:54:06] <jq-jenkins> Project jQuery Core build #135: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/135/
[10:54:07] <jq-jenkins> waldron.rick: Fix args translation example in gruntfile comments
[10:58:46] <Krinkle> jzaefferer: got one more for you if you have time: https://github.com/jquery/qunit/pull/263
[10:58:47] <socialhapy> ★ Github API: no pull request found
[10:59:02] <Krinkle> https://github.com/jquery/qunit/pull/263
[10:59:03] <socialhapy> ★ Github API: no pull request found
[10:59:20] <Krinkle> maybe the api is using a lagged replication db
[10:59:22] <Krinkle> https://github.com/jquery/qunit/pull/263
[10:59:23] <socialhapy> ★ Github API: no pull request found
[10:59:25] <Krinkle> whatever
[11:25:59] <DaveMethvin> Krinkle: looks like the opera fail is just one in effects, caught by the search "callbacks" for a dup in callbacks
[11:26:25] <DaveMethvin> BUT ... it seems suspiciously like it may be due to the recent change since it's about exceptions
[11:42:37] <Krinkle> DaveMethvin: I have no idea what you mean
[11:43:03] <DaveMethvin> the last jquery core run is failing in opera
[11:43:12] <DaveMethvin> but the failure is in one effects item
[11:43:20] <DaveMethvin> that happens to be duplicated in callbacks
[11:43:26] <DaveMethvin> due to the "callbacks" in the test name
[11:44:25] <Krinkle> Ah, I see
[11:44:34] <Krinkle> yeah, we should push out the new modules= filter soon
[11:44:47] <DaveMethvin> oh yeah that would help
[11:44:52] <DaveMethvin> but at least we know the cause
[11:44:52] <Krinkle> I created a PR in qunit that has landed in the mean time
[11:45:04] <Krinkle> that should also speed up the swarm by less duplication
[11:45:47] <Krinkle> there's quite a few with duplicate ones from unrelated modules actually
[11:45:48] <Krinkle> "ajax" for instance (irrc)
[11:45:49] <Krinkle> and some other
[11:47:47] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/k2cqcA
[11:47:47] <jqcommit> [testswarm/master] various code clean up - Timo Tijhof
[12:08:17] <Krinkle> .
[12:35:38] <jqcommit> [testswarm] Krinkle force-pushed results from 26ec83e to 79b3e5c: http://git.io/j0SFrw
[12:35:38] <jqcommit> [testswarm/results] Implement new results storage and pinging system - Timo Tijhof
[12:43:24] <jqcommit> [testswarm] Krinkle pushed 1 new commit to results: http://git.io/HUwhlg
[12:43:24] <jqcommit> [testswarm/results] Update dbUpdate.php: Use run_client as check for 1.0.0 - Timo Tijhof
[12:46:23] <jqcommit> [testswarm] Krinkle force-pushed results from 348652a to fae0277: http://git.io/j0SFrw
[12:46:23] <jqcommit> [testswarm/results] Implement new results storage and pinging system - Timo Tijhof
[12:51:34] <jqcommit> [testswarm] Krinkle force-pushed results from fae0277 to 156218c: http://git.io/j0SFrw
[12:51:34] <jqcommit> [testswarm/results] Implement new results storage and pinging system - Timo Tijhof
[13:12:46] <crivera> is this the right place for jquery swarm questions?
[13:19:45] <jqcommit> [testswarm] Krinkle force-pushed results from 156218c to 57b101b: http://git.io/j0SFrw
[13:19:45] <jqcommit> [testswarm/results] Implement new results storage and pinging system - Timo Tijhof
[13:20:34] <Krinkle> crivera: I suppose, yes
[13:23:01] <crivera> i got testswarm running on a local box with https enabled.  however, i'm having issues with the tests actually running now from the testswarm console.  All i see are the little clock icons under the browsers (http://grab.by/e7Wa), and I don't really know how to debug further
[13:23:25] <crivera> my guess is it doesn't like my ssl certificate, but i'd like to find a concrete answer somewhere
[13:24:59] <Krinkle> crivera: clock icon means the run has not been distributed to a client yet
[13:25:45] <Krinkle> so if you did indeed start those other browsers then they aren't getting anywhere near the run page
[13:25:47] <Krinkle> try opening the /run/username page in that browser and see what it does
[13:25:50] <Krinkle> crivera:
[13:25:59] <Krinkle> crivera: what version are you using btw?
[13:27:20] <crivera> Krinkle: hitting the /run/username page executes the test
[13:27:27] <crivera> Hrmm... let me look for version
[13:28:32] <Krinkle> crivera: and then the box for that browser on the  job page turns green?
[13:28:41] <crivera> Krinkle: correct
[13:28:48] <Krinkle> So.. what's the problem?
[13:34:19] <crivera> Krinkle: the problem is with the automated testing. Out jobs are not starting up in testswarm, even though it seems like we have the correct setup through browserStack
[13:34:59] <crivera> I'm not completely sure which version; would that be listed in HISTORY.md
[13:35:07] <Krinkle> crivera: just check /info
[13:35:13] <Krinkle> (browser)
[13:35:45] <Krinkle> crivera: Are you using node-testswarm node-browserstack and testswarm-browserstack for this?
[13:35:47] <crivera> Alright. It's 1.0.0-alpha
[13:35:47] <Krinkle> crivera: What url are you sending to browserstack ?
[13:35:58] <Krinkle> does it mention a hash on the Info page ?
[13:36:48] <crivera> It mentioned where HEAD is located, but says nothing explicitly about a hash
[13:36:58] <Krinkle> yes, what is the HEAD
[13:37:06] <Krinkle> (see also previous 2 questions)
[13:38:09] <crivera> HEAD: 1f1961064395853b857a23206ada76cc062c914a
[13:38:22] <Krinkle> ok
[13:39:16] <Krinkle> That was right before a minor bug was introduced (related to race conditions that happen if you have automated clients connected) - that was fixed earlier today
[13:39:18] <crivera> we are using all three of those with it, and we are sending server/testeswarm/run/dak to browserstack
[13:39:33] <Krinkle> I'd recommend you update to the latest upstream version - that is a breaking change (you'll need to reinstall)
[13:39:47] <crivera> alright, I'll give that a try
[13:39:50] <Krinkle> crivera: is 'server' a public hostname?
[13:40:05] <Krinkle> remember that using "localhost" or "crivera.local
[13:40:21] <Krinkle> remember that using "localhost" or "crivera.local" will not work from a browserstack VM because it is on the internet
[13:40:22] <crivera> nono. It was just a substitution for what we are actually using. It's not on localhost
[13:40:29] <Krinkle> just saying :)
[13:40:48] <Krinkle> crivera: If you go to browserstack.com and go through the manual interface, get a browser and paste the URL, does it run the tests then?
[13:41:03] <Krinkle> upgrade first :)
[13:41:36] <Krinkle> also, you can use testswarm/user/<username for run/..> to see which clients are online (independent from whether they are actually running a test at the moment)
[13:42:22] <crivera> Alright, so when I tryied to use BrowserStack, I had to manually continue through a certificate error
[13:42:45] <Krinkle> jzaefferer: Just merged results in master (fast-forward, jqcommit didn't report it apparently..) - going to upgrade swarm.jquery.org now (going to re-create users right after and put them in node-testswarm etc. and run token)
[13:42:56] <Krinkle> crivera: well, then there is your issue :)
[13:43:12] <Krinkle> the headless browsers through the browserstack-api need to work right away
[13:43:18] <crivera> Cool. Thanks a lot.
[13:44:11] <Krinkle> it gives you a lot of power (or rather it gives your testswarm install a lot of power) by allowing any url in the world with any number of query parameters, and then testswarm javascript can take over and distribute tests, but it does have to work right from entering the url into the browser no steps in between.
[13:44:22] <Krinkle> (e.g. no HTTP authentication, or security warnings)
[13:54:08] <DaveMethvin> Krinkle: seems like we are THAT CLOSE to success, just need to fix that one Opera bug which again seems to be due to the onerror handler
[13:54:17] <DaveMethvin> dunno why Opera is being a pita
[13:55:10] <jq-jenkins> Project QUnit build #142: SUCCESS in 3 min 55 sec: http://swarm.jquery.org:8080/job/QUnit/142/
[13:56:58] <DaveMethvin> damn, almost had a heart attack thinking that was core
[13:57:04] <Krinkle> hehe
[14:04:42] <crivera1> Krinkle: fixing our SSL certs solved the problem.  gracias
[14:04:46] <Krinkle> You're welcome
[14:04:53] <Krinkle> scott_gonzalez: jzaefferer FYI: https://github.com/jquery/infrastructure/wiki/TestSwarm:-Install-Upgrade
[14:05:04] <Krinkle> (just thought I'd document it, never did it before)
[14:05:11] <Krinkle> ... a live re-install
[14:07:24] <Krinkle> New result page: http://swarm.jquery.org/result/10
[14:12:24] <Krinkle> DaveMethvin: Re-enabling jQuery UI now, in the new testswarm.
[14:12:49] <Krinkle> Lets hope it'll make it too
[14:12:49] <Krinkle> http://swarm.jquery.org/job/2
[14:33:04] <Krinkle> Yes, jquery-ui passed
[14:33:22] <Krinkle> now for jQuery core..
[14:37:25] <libin> is there anyone familiar with knockout?
[14:42:31] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/BS7mCg
[14:42:31] <jqcommit> [testswarm/master] ProjectsAction: Fix job_latest_created field - Timo Tijhof
[14:44:55] <crivera1> Krinkle: it looks like launching an iframe in one of our tests is causing problems
[14:45:32] <crivera1> know anything about iframe support?  running the job by visiting /job/## works fine
[14:45:46] <Krinkle> crivera1: common causes: X-Frame-Options header being sent (needs to be disabled); or maybe javascript using window.top instead of window.parent
[14:46:11] <Krinkle> a common mistake is to use window.top to access the parent frame, which works if you only have 2 frames (your application and the iframe it creates)
[14:46:27] <Krinkle> but if you have an additional level, then you need to be more strict and use window.parent ; which one should be doing anyway
[14:46:39] <Krinkle> maybe that helps
[14:46:41] <crivera1> okay, i'll check it out
[14:53:35] <Krinkle> http://swarm.jquery.org/job/3
[14:55:04] <Krinkle> DaveMethvin:
[14:55:57] * DaveMethvin cries
[14:56:22] <Krinkle> Exception was thrown null/undefined
[14:56:23] <Krinkle> still
[14:57:00] <DaveMethvin> yeah i don't get it
[14:57:21] <DaveMethvin> btw i like some of the new stuff, the header on the top is good
[14:57:31] <DaveMethvin> the centered output i don't really like
[14:57:41] <DaveMethvin> but it's better overall
[14:58:01] <DaveMethvin> if it said SUCCESS i would say it's the best test swarm EVAR
[15:00:03] <DaveMethvin> oh interesting Krinkle it's now just opera 11.5 ... it was 11.6 before i thought
[15:00:46] <DaveMethvin> so maybe the solution is we not support opera 11.5 :D
[15:01:22] <DaveMethvin> honest, if i slip you $10 maybe you can make that 11.5 colum just go away?
[15:01:38] <DaveMethvin> even miketaylr woudn't notice i am sure
[15:01:51] <Krinkle> DaveMethvin: Actually, I think this may not be an opera bug
[15:01:59] <Krinkle> looks like maybe the test is borked
[15:02:12] <Krinkle> Expected: null
[15:02:20] <Krinkle> that sounds like a broken test
[15:02:27] <Krinkle> why would it expect null
[15:03:01] <DaveMethvin> wazzup with the tiny results window? http://swarm.jquery.org/result/264
[15:03:59] <Krinkle> DaveMethvin: uses javascript hack to figure out the child frame height. If you know a better way, let me know.
[15:04:03] <Krinkle> refresh usually fixes it
[15:04:15] <Krinkle> use Open in new window if you need it in full view
[15:04:27] <Krinkle> DaveMethvin: http://swarm.jquery.org/js/result.js
[15:04:30] <DaveMethvin> ah, much taller
[15:05:06] <DaveMethvin> well something went wrong because the timer is still running
[15:06:46] <DaveMethvin> sorry gtg
[15:07:11] <Dak> Krinkle: I have a question about your testswarm-browserstack.js. In the updateBrowsers function when the needed browsers are being switched to started browsers in that for loop, why do you fill the stack with workers, even if you only need one browser to run?
[15:07:48] <Krinkle> Dak: So that it starts multiple instances of the same browser so much as the limit allows
[15:08:33] <Krinkle> Dak: The loop is constructed in such a way that having 1 of each is the main priority and if there is quota left, it iterates again to start more
[15:10:02] <Dak> Does that add to the functionality? I guess I'm just curious as to why having a partially filled stack is a bad thing.
[15:10:48] <Krinkle> Dak: Well, if you have a test suite like jQuery does, having to IE6'es in your swarm means the test suite will run a lot faster because testswarm can run clients in parralel
[15:10:56] <Krinkle> that's the whole point of testswarm to distribute and automate
[15:11:03] <Krinkle> no point in limiting yourself to 1 client at a time
[15:11:33] <crivera1> Krinkle: our test that launches the iframe works fine when we hit the test file directly.  but it goes to shit when we go to /run/username
[15:12:07] <Krinkle> Dak: Currently jQuery core tests against 12 browsers. So with a limit of 10 that means we start 10 different browsers when the test suite starts.
[15:12:45] <Krinkle> Dak: Then after a while the first time are done and testswarm-browserstack runs again, usually the slower ones (old FF, IE, old Opera) are still running when the others are finished, so then it starts more of those when the quota is available
[15:12:59] <Krinkle> makes the difference between spending 30+ minutes on a commit or 12 minutes
[15:13:30] <Krinkle> If you require the test suite to run for each commit, taking 30+ minutes means you can only make 48 commits per day (if that were to be a problem)
[15:13:36] <Krinkle> (best case scenario)
[15:14:14] <Krinkle> If you are in a corporate situation and need deployments, even if you deploy less than 48 times a day  - it is still unproductive to have to wait 30 minutes
[15:14:36] <Krinkle> Dak: So why would you not want to parallelize it?
[15:15:26] <Dak> Krinkle: Well, I'm not exactly saying that I would. I was more just curious about what was under the hood.
[15:15:46] <Krinkle> okay :)
[15:16:05] <Krinkle> If you use your own virtual machines (instead of browserstack) you could also just have a few browsers of all running 24/7 on the /run/ page
[15:16:34] <Krinkle> the testswarm run page is especially optimized to be long-running and self-maintaining (e.g. pull in the latest configuration through ajax, ping signal to home, and listen for new runs)
[15:16:47] <Krinkle> all without page refresh so it also survives a short internet hiccup on either end
[15:17:07] <Krinkle> before we started using browserstack we did everything through crowd sourcing, also works great
[15:17:16] <Krinkle> just random people leaving their browser open all day
[15:17:31] <Krinkle> if you can rely on that, that works great too
[15:17:55] <Dak> Haha, if only we could.
[15:19:22] <Krinkle> Dak: At a company I worked, what we did was we told our tech department (most have laptops and desktop, using laptop only for irc and mail) to put their phones on the table and let them join our testswarm, and also have a idle browser on their laptop.
[15:20:00] <Krinkle> we didn't rely on time-bound testing (e.g. no jenkins job waiting for completion) so it wouldn't be a problem if for one day a browser wasn't on (you could just start it later and it'll catch up on past jobs)
[15:20:22] <Krinkle> but works pretty good. You'd be surprised at the different combinations you can get in a simple household or company
[15:20:54] <Krinkle> Linux people with firefox and chrome both open. Windows folks with and Safari and IE open. Mac user with another Firefox and Chrome.
[15:21:04] <Krinkle> etc.
[15:21:23] <jq-jenkins> Project jQuery Core build #136: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/136/
[15:28:09] <Dak> Well, realistically crowd sourcing would be effective for right now, but it won't be long before our number of tests start growing exponentially. In any case, testswarm is looking like a very promising solution.
[15:28:48] <Krinkle> Dak: You can also do both, which is what I'm doing at the Wikimedia Foundation
[15:29:15] <Krinkle> allow crowd to join while also keeping testswarm-browserstack online to keep at least 1 of each online at all times (when needed)
[15:30:03] <Krinkle> it keeps a bit of the social aspect (e.g. the /score page) alive while also making sure you don't have jobs with incomplete test results
[15:30:15] <Krinkle> the crowd will speed things up if they're online
[15:33:37] <Dak> Shifting gears, is it possible to get testswarm to co-operate with an iframe interface? We have tests which work fine in the browsers themselves, but when we add the job to testswarm, the browser aborts with an error.
[15:34:23] <Krinkle> Dak: Sure, like I said it works fine. You just need to make sure your application doesn't do things it shouldn't do (issues that may not have shown until now)
[15:34:29] <Krinkle> Dak: What kind error?
[15:34:51] <Krinkle> MediaWiki has a few tests that use frames. jQuery as well. Both work fine in TestSwarm.
[15:39:07] <Dak> Well, part of the problem is finding the error. All I'm able to determine so far is that as soon as the page fully loads, right when we have a command to click the button which opens the iframe, everything stops. Testswarm just says that the browser aborted by an error
[15:39:32] <Krinkle> Dak: What browser are you using?
[15:39:39] <Krinkle> Dak: Any chance I can get to see this on my screen?
[15:40:07] <Dak> I'm using chrome. I'll send you a link.
[15:40:09] <Krinkle> Dak: I'd recommend using Chrome and use the Web Inspector to inspect the HTTP headers being sent on the request for the iframe
[15:40:27] <Krinkle> Dak: I suspect your application may be sending a X-Frame-Options header that disallows running inside an iframe.
[15:41:37] <Krinkle> Some applications do this to avoid being embedded in other sites, which is a genuine reason. In MediaWiki I fixed this by making an exception for the TestSuite-page inside the application. and then I made the availability of the TestSuite-page disabled by default, so that customers of the software don't have to worry, but on our own install dedicated to testing this option is enabled.
[15:42:34] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/q3MIFw
[15:42:34] <jqcommit> [testswarm/master] SwarmstateAction: Expose activeRuns - Timo Tijhof
[15:44:02] <Krinkle> Okay, I won't spread the link in the public channel
[15:44:28] <Krinkle> Dak: I know you just got started setting it up, but just general: Are you going to to use a versioned submittance system ?
[15:44:43] <Krinkle> e.g. ./build/1234/test/index.html
[15:45:08] <Krinkle> Dak: I'm seeing a X-Frame-Options:SAMEORIGIN header
[15:47:02] <Krinkle> which should be fine
[15:47:13] <Krinkle> it appears to be passing now, I joined with my browser
[15:47:17] <Krinkle> did you change anything ?
[15:47:37] <Dak> I'm not sure whether we are going to use a versioned submittance system or not.
[15:47:39] <Krinkle> ah, no that was another one
[15:47:56] <Krinkle> Dak: I'd highly recommend you do because otherwise you will get conflicts with versions
[15:48:14] <Krinkle> e.g. if you upload a new version and submit new tests, if an old one is being re-ran the URL will no longer point to the right version
[15:51:05] <Dak> Alright, I'll make a note of that and be sure we don't run into that. Thanks. I reset the jobs, but they all still fail.
[15:52:26] <Krinkle> Dak: Ah, I'm checking the test suite itself now
[15:52:30] <Krinkle> You're using asynchronous testing
[15:52:32] <Krinkle> without using stop()
[15:52:42] <Krinkle> that means QUnit will reach the end of the test suite with 0 test being run
[15:52:50] <Krinkle> testswarm is notified and the test aborted
[15:53:08] <Krinkle> when using the page directly there is nothing to abort and it will remain visible
[15:53:15] <Krinkle> then after 3 seconds some test comes in and is displayed
[15:53:34] <Krinkle> You have to call QUnit.stop() before going asynchronous and call QUnit.start() after wards
[15:53:50] <Krinkle> Dak: Also, put the asynchronousity inside the test(), not the other way around
[15:54:33] <Krinkle> so call module() and test() from the global scope, and then inside first call QUnit.stop(), then do your timeouts and stuff and from inside the timeout handler, call QUnit.start() after you made the assertions (e.g. equal(), ok() etc. )
[16:05:13] <Dak> So, I'm not sure that the placement of the QUnit.stop() is so simple. We have an external function which calls the bulk of the code, written in its own function. That's where the times stops are made. Afterwards, the test function is run.
[16:06:32] <Krinkle> Dak: You're currently relying on it finishing in 6 seconds and then calling do tests()
[16:06:43] <Krinkle> Dak: That's not very reliable, but if that works for you then this should work too
[16:07:17] <Krinkle> Dak: You've currently put them around the ok(), that doesn't do anything
[16:07:23] <Dak> Yes. So you're saying to move the test to global and stuff the button pressing in the test function?
[16:07:53] <Dak> Right, I just moved the stop there. Before I put it ahead of the timeouts, which stopped the tests from being run.
[16:07:59] <Krinkle> Dak: Think this through from top to bottom. module called, tests() defined but not called, run() defined but not called, end of script, end of test suite, testswarm submits results
[16:12:06] <Dak> That does make sense, and outlines why we are having the problem. So then the results are being submitted before the tests are even being run.
[16:14:44] <Dak> Also, I'm aware that the timing issue isn't reliable, but I just wanted to get something up before moving on. That will definitely be changed in the future.
[16:14:54] <Dak> Thanks for the concern, though. :)
[16:37:00] <jq-jenkins> Project jQuery Core build #137: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Core/137/
[16:37:00] <jq-jenkins> waldron.rick: Fix args translation example in gruntfile comments
[16:37:21] <Krinkle> DaveMethvin: Alright, I made some fixes the the testswarm/jenkins config, now it is no longer timing out
[16:37:26] <Krinkle> still one failure in opera
[16:37:43] <Krinkle> http://swarm.jquery.org/job/4
[16:41:53] <Krinkle> ?tell clarkbox testswarm-browserstack had an issue that was causing testswarm to trip up. Fixed in https://github.com/clarkbox/testswarm-browserstack/pull/24 For now deployed on swarm01 through remote 'krinkle'. After you pulled, feel free to reset the remote to 'origin' on swarm01.
[16:41:54] <socialhapy> ★ Github API: no pull request found
[16:42:07] <Krinkle> ircjsbot: tell clarkbox testswarm-browserstack had an issue that was causing testswarm to trip up. Fixed in https://github.com/clarkbox/testswarm-browserstack/pull/24 For now deployed on swarm01 through remote 'krinkle'. After you pulled, feel free to reset the remote to 'origin' on swarm01.
[16:42:07] <ircjsbot> Krinkle, OK, I will tell clarkbox if I see them.
[16:42:08] <socialhapy> ★ Github API: no pull request found
[16:43:23] <clarkbox> 10-4. thanks krinkle
[16:43:24] <ircjsbot> clarkbox, you have one new message, from Krinkle (one minute and 17 seconds ago). Tell me if you want to read it (“read”).
[16:43:41] <Krinkle> ah, you're here
[16:45:09] * Krinkle learns another urban abbreviation "10-4"
[16:45:16] <Krinkle> http://www.urbandictionary.com/define.php?term=10-4 never heard that before
[17:43:14] <gibson042> .
[17:49:22] <jqcommit> [testswarm] Krinkle pushed 2 new commits to master: http://git.io/6fJ3vw
[17:49:22] <jqcommit> [testswarm/master] ResultAction: Fix case where job has been deleted. - Timo Tijhof
[17:49:22] <jqcommit> [testswarm/master] upstream: twitter/bootstrap v2.0.2 -> v2.0.4 - Timo Tijhof
[18:00:48] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/VJxGkQ
[18:00:48] <jqcommit> [testswarm/master] update html for bootstrap v2.0.4 incompatibility - Timo Tijhof
[20:06:45] <mikesherov> DaveMethvin: quick question
[20:06:54] <DaveMethvin> yup?
[20:07:40] <DaveMethvin> mikesherov:
[20:08:05] <mikesherov> So, I am fixing a bug in css that now requires the use of $.position
[20:09:08] <mikesherov> I'm wondering if I just create a dependency on offset for css or if I move the cssHook declaration to offset and the user just gets screwed if they exclude offset and they hit the case where the workaround matters
[20:09:31] <DaveMethvin> well you knew this day would come :)
[20:09:36] <mikesherov> I did
[20:09:41] <DaveMethvin> hmm
[20:09:44] <mikesherov> and the question is, what does the lead say!
[20:09:56] <DaveMethvin> oh yeah, make me decide!
[20:10:04] <mikesherov> throw the baby out with the bath water, and offset->css->dimensions->effects
[20:10:20] <mikesherov> or, just make the cssHook live in the dependent code
[20:10:21] <DaveMethvin> exactly, you hate to take a dep for some small edge case
[20:10:44] <mikesherov> right
[20:10:46] <DaveMethvin> i was thinking about this earlier and figured we might just document these
[20:10:59] <DaveMethvin> so try to minimize deps but explain when it's needed
[20:11:07] <DaveMethvin> if you don't have that case in your own code it's not a prob
[20:11:14] <DaveMethvin> but the question is how to fail in those cases
[20:11:18] <mikesherov> I see, so don't even do a dep, just do the dep check literally in css.js and throw out the edge case
[20:11:26] <mikesherov> like in effects with show/hide
[20:11:44] <DaveMethvin> yeah it's one way at least
[20:11:47] <mikesherov> well, I can fail to the unfixed behavior
[20:12:01] <DaveMethvin> i think that would be okay
[20:12:13] <mikesherov> OK, so that's what I'll do
[20:12:40] <DaveMethvin> sounds good
[20:14:42] <mikesherov> thanks
[20:15:00] <mikesherov> now, if I could only get rick to not break the dep. management system, that'd be great
[20:15:24] <mikesherov> https://github.com/jquery/jquery/commit/f13de6b3d6256f457da0a3c8274ba33656f8df4f#commitcomment-1450617
[20:15:26] <socialhapy> ★ Github API: no commit found
[20:15:59] <mikesherov> GREAT socialhapy
[20:58:16] <mikesherov> https://github.com/jquery/jquery/pull/825
[20:58:17] <socialhapy> ★ Github API: no pull request found
[20:58:50] <mikesherov> SOCIALHAPY, GREAT
