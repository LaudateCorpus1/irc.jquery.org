[11:52:07] <jqcommit> [13jquery-migrate] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/vmHWj
[11:52:07] <jqcommit> 13jquery-migrate/06master 140d5559d 15Dave Methvin: Build: Remove jQuery Plugin site support
[12:29:35] <jqcommit> [13jquery-migrate] 15dmethvin pushed 1 new commit to 06load-unload: 02http://git.io/vmH2D
[12:29:35] <jqcommit> 13jquery-migrate/06load-unload 145ffa0e4 15Dave Methvin: [squash] Fix docs, clarify comments, delegate to ajax load
[13:39:18] <treyhunner> gnarf: I'm looking into helping adding code coverage measurements to jQuery (per discussion here: https://github.com/jquery/jquery/issues/1965)
[13:39:52] <treyhunner> I'm unfamiliar with jQuery's test setup and the grunt file setup. How are the tests being invoked currently?
[13:40:22] <treyhunner> I'd usually reach for grunt-qunit-istanbul or a similar grunt plugin, but it looks like something a little more manual will be required
[13:54:55] <jqcommit> [13jquery-migrate] 15dmethvin created 06113-ajax-args (+1 new commit): 02http://git.io/vmHFg
[13:54:55] <jqcommit> 13jquery-migrate/06113-ajax-args 1426a9714 15Dave Methvin: Event: Non-document ajax events should never lose an argument...
[13:55:41] <jqcommit> [13jquery-migrate] 15dmethvin opened pull request #114: Event: Non-document ajax events should never lose an argument (06master...06113-ajax-args) 02http://git.io/vmHFD
[15:57:49] <jqcommit> [13jquery] 15mzgol opened pull request #2481: Build: Acknowledge Android 2.3 is not ES5-compatible (06master...06android-es3) 02http://git.io/vmQcJ
[16:03:09] <m_gol> treyhunner: tests are invoked via `grunt testswarm:COMMIT_HASH:/usr/local/bin/tools/node-testswarm-config.json:jquery:jquery` with a proper node-testswarm-config.json set up - definitely not easy to do locally. For local testing we usually just open the QUnit test page and check there
[16:42:24] <jqcommit> [13api.jquery.com] 15AurelioDeRosa closed pull request #744: val(): Updated description for the setter version (06master...06patch-3) 02http://git.io/vT7XP
[16:48:16] <jqcommit> [13api.jquery.com] 15AurelioDeRosa closed pull request #669: Update README.md (06master...06patch-1) 02http://git.io/xsxT
[16:50:53] <jqcommit> [13api.jquery.com] 15AurelioDeRosa tagged 06v1.11.107 at 14bd01339: 02http://git.io/vmQEP
[16:52:21] <jqcommit> [13api.jquery.com] 15AurelioDeRosa 04deleted 06v1.11.107 at 14bd01339: 02http://git.io/vmQE5
[16:54:02] <jqcommit> [13api.jquery.com] 15AurelioDeRosa pushed 1 new commit to 06master: 02http://git.io/vmQuY
[16:54:04] <jqcommit> 13api.jquery.com/06master 140392242 15Aurelio De Rosa: 1.11.107
[16:54:38] <jqcommit> [13api.jquery.com] 15AurelioDeRosa tagged 06v1.11.107 at 14a3f133f: 02http://git.io/vmQEP
[17:06:27] <jqcommit> [13api.jquery.com] 15AurelioDeRosa created 06AurelioDeRosa-deferred-always (+1 new commit): 02http://git.io/vmQgj
[17:06:28] <jqcommit> 13api.jquery.com/06AurelioDeRosa-deferred-always 14b5272bc 15Aurelio De Rosa: deferred.always: Added note for parameters changing order...
[17:06:37] <jqcommit> [13api.jquery.com] 15AurelioDeRosa opened pull request #779: deferred.always: Added note for parameters changing order (06master...06AurelioDeRosa-deferred-always) 02http://git.io/vmQ2e
[17:29:12] <jqcommit> [13api.jquery.com] 15AurelioDeRosa pushed 1 new commit to 06v3.0.0-docs: 02http://git.io/vmQVd
[17:29:12] <jqcommit> 13api.jquery.com/06v3.0.0-docs 14270b518 15Aurelio De Rosa: data: Document behavior changes...
[17:30:04] <jqcommit> [13api.jquery.com] 15AurelioDeRosa closed issue #730: Document .data changes 02http://git.io/vJK1U
[17:32:01] <jqcommit> [13api.jquery.com] 15AurelioDeRosa closed pull request #758: data: Document behavior changes (06v3.0.0-docs...06AurelioDeRosa-data) 02http://git.io/vLvDh
[17:32:15] <jqcommit> [13api.jquery.com] 15AurelioDeRosa 04deleted 06AurelioDeRosa-data at 142493bf4: 02http://git.io/vmQwl
[17:34:03] <gnarf> treyhunner: hey
[17:34:11] <gnarf> sorry i was at a conference
[17:35:23] <gnarf> treyhunner: for most local testing you just run grunt watch and spin it up in a local php server
[17:35:28] <gnarf> so it's kinda a pita atm
[17:35:41] <gnarf> I've been wanting for us to look at like karma or teste
[17:35:42] <gnarf> testem
[17:35:59] <gnarf> but we have issues with wanting to browserstack a bunch of browsers
[17:36:52] <gnarf> I think I can generate you a testswarm api key that you could test with
[17:37:20] <gnarf> if I can remember how....
[17:50:00] <treyhunner> hi m_gol, gnarf. Thanks for the responses.
[17:50:23] <treyhunner> I'm trying to tackle any form of coverage first
[17:51:20] <gnarf> treyhunner: grunt to build it, and spin up a php server hosting the build and goto /test/
[17:51:26] <treyhunner> having trouble figuring out how to hook in coverage in the test runner. I tried adding blanket to the page, but it seems to create test failures and it doesn't interact with qunit well for some reason
[17:52:04] <gnarf> treyhunner: thre is no "test runner"
[17:52:42] <gnarf> we don't have a karma/testem equivalent --- grunt testswarm task is the closest there is
[17:52:43] <treyhunner> ok I'll try setting up a PHP server for it tomorrow
[17:52:58] <gnarf> php is required for ajax tests
[17:54:19] <gnarf> the testswarm server (or rather a thing running there) itself takes care of spawning browsers and pointing at the individual modules, and grunt testswarm task polls api status from testswarm until it completes or times out all tests
[17:54:33] <gnarf> like: http://swarm.jquery.org/job/921
[17:54:53] <gnarf> http://jenkins.jquery.com/job/jQuery%20Core/1389/console
[17:55:56] <treyhunner> lost internet for a moment
[17:55:57] <treyhunner> gnarf: any reason why php instead of node? historical reasons?
[17:56:05] <gnarf> history yes
[17:56:36] <gnarf> I've been asking for someone to look at redoing a lot of this test infra to make it easier for contributors to test the full suite of browsers with their own browser stack local
[17:57:25] <treyhunner> got it
[17:58:52] <gnarf> there are some really important things about swarm (it stores the complete test suite result page per browser per commit)
[17:59:27] <gnarf> but I think we could actually generate a .travis.yml matrix to do the same thing
[17:59:42] <gnarf> also - per module, per browser, per commit
[18:00:16] <gnarf> anywho, got friends over, I'll be around tomorrow
[18:00:41] <gnarf> and m_gol Krinkle_ jzaefferer are pretty knowledgeable about all this stuff too if you need some people to ping
[18:01:21] <treyhunner> gnarf: great. Thanks!
