[08:47:17] <Jayflux> is there a reason jqXHR.success() is changing to jqXHR.done()
[12:42:17] <Krinkle> Hi, is there a way I can update my fork of, say, jquery.qunit to it's current HEAD ? I forked it a few months back to make a fix, which is been merged in the mean time into jquery.qunit@master. However now that I want to make another commit, to avoid it from not being mergable since qunit master has changed in the mean time, I need to update my fork.
[12:42:29] <Krinkle> Is there a way I can somehow merge anything since then back ?
[12:44:40] <Krinkle> I remember seeing a 'fast forward' button once but can no longer find it
[13:36:29] <kswedberg> DaveMethvin: you there?
[13:36:50] <DaveMethvin> kswedberg: yep
[13:37:26] <kswedberg> hey! so, DaveMethvin, I was wondering if we should be documenting jQuery.camelCase.
[13:38:16] <kswedberg> worth it?
[13:38:35] <DaveMethvin> i dunno ... i guess the functionality shouldnt change so it woudlnt hurt
[13:38:48] <DaveMethvin> on the jQuery.support stuff i have regrets
[13:39:05] <DaveMethvin> but i can't think of a case where we'd want to break camelCase
[13:39:26] <kswedberg> yeah. it's a shame about $.support.
[13:39:56] <DaveMethvin> i guess our guideline shoudl be if we think we might ever want to remove or change the function, don't document it
[13:40:02] <kswedberg> camelCase seems so innocuous and tangential to the rest of what jQuery does that it hardly seems worth the bother
[13:40:05] <DaveMethvin> so in that case, camelCase should be safe
[13:40:16] <kswedberg> k.
[13:40:45] <DaveMethvin> as long as we can avoid the bikeshedding that went on with jQuery.trim ... :)
[13:40:56] <kswedberg> ha
[13:41:16] <kswedberg> also, DaveMethvin, a couple people have asked why we don't document .wrapAll(fn), but that is something that I definitely don't want to document.
[13:41:22] <kswedberg> because … http://jsfiddle.net/kswedberg/ZZ5VD/
[13:42:28] <kswedberg> at least not until it does the right thing.
[13:43:01] <DaveMethvin> i haven't ever been a big fan of the (fn) ones anyway, you can always use .each()
[13:43:13] <DaveMethvin> there are a couple of things i'd love to change about the (fn) forms, we are wasting effort calling them for the value in many cases
[13:43:32] <DaveMethvin> like if you use .text(fn) we go ahead and get the current text value
[13:43:39] <DaveMethvin> whether you need it or not
[13:43:58] <DaveMethvin> but now it would be hard to change I guess
[13:44:00] <kswedberg> yeah, that does seem wasteful
[13:44:14] <DaveMethvin> so that's a good reason to only docuemnt the stuff we don't want to change in the future
[13:44:26] <DaveMethvin> so .wrapAll(fn) is right out
[13:44:51] <kswedberg> yeah. .wrapAll(fn) has totally unexpected behavior.
[13:45:43] <DaveMethvin> since we don't document it you can't say it's broken though :P
[13:46:00] <kswedberg> that's right! :D
[13:46:18] <kswedberg> DaveMethvin: do you have time for one more?
[13:46:29] <DaveMethvin> sure
[13:46:42] <kswedberg> k. from a user comment: "Apparently it is known that neither .position nor .offset work with hidden elements. I think this is worth noting in the API documentation as a caveat"
[13:47:44] <DaveMethvin> sure sounds like it's worth documenting
[13:48:14] <kswedberg> cool.
[13:48:29] <DaveMethvin> for the general case i don't see howyou could determine the "left" of an element which is float-right and hidden by its parent being hidden
[13:52:04] <kswedberg> yeah, it's a little like stating the obvious
[13:53:04] <DaveMethvin> I think you've found the tag line for api.jquery.com
[13:53:17] <kswedberg> ahahaha
[13:53:26] <DaveMethvin> "Stating the obvious since 2006"
[13:54:23] <kswedberg> ha. on the other hand, what's obvious to you is obviously not obvious to many others. ;)
[13:55:31] <kswedberg> if I may pat myself on the back … I was just thinking about how good our docs are when looking at some other docs yesterday as I was trying to learn another api
[13:55:58] <DaveMethvin> yep, they are much better than many api sites
[13:56:07] <DaveMethvin> the examples really help
[13:56:09] <kswedberg> for example, usage examples are huge. baffles me that so many leave them out
[13:56:14] <kswedberg> :)
[13:56:27] <DaveMethvin> and of course we've tweaked all the stuff from people reporting  bugs that aren't bugs
[13:56:36] <kswedberg> tru
[13:58:33] <Krinkle> I might add that the jQuery docs are an example for this summers project in documenting the MediaWIki javascript library (it's not online yet)
[13:58:53] <Krinkle> Many references in our notes regarding the 'jQuery approach'
[13:59:33] <kswedberg> Krinkle: interesting! I hope those are at least mostly positive references. :)
[13:59:41] <Krinkle> yes.
[14:00:02] <kswedberg> very nice to hear.
[16:36:17] <gnarf> Krinkle: did you mean git pull ?
[16:36:17] <bot-t> (29 hours 40 mins ago) <timmywil> tell gnarf I'm less worried about the pulls unless they are just huge, but basing off of 1.7/combined will avoid any conflicts
[16:36:39] <Krinkle> gnarf: you mean re: sync fork ?
[16:36:47] <gnarf> yeah
[16:36:59] <gnarf> you need to git remote add upstream giturl
[16:37:02] <Krinkle> Ill try next time. I just deleted the fork and re-forked for now.
[16:37:09] <gnarf> where giturl is the url of the original
[16:37:14] <gnarf> then you can git pull upstream master
[16:37:19] <gnarf> and pull changes from upstream
[16:37:49] <Krinkle> Is that also how ppl do branch merges that can't be done from the online interface ?
[16:37:57] <Krinkle> ie. back into the master
[16:38:02] <gnarf> i never use the online interface
[16:38:09] <Krinkle> locally picking the fork as upstream
[16:38:34] <gnarf> git is kinda funky at first, but once you learn the basic commands you can quickly become a master :)
[16:38:58] <gnarf> like, if I wanted to merge something onto jQuery UI that you wrote on a branch
[16:39:44] <gnarf> id git remote add Krinkle git://..... ; git checkout Krinkle/branchName ; (test the branch); git checkout master; git merge Krinkle/branchName
[16:41:15] <Krinkle> gnarf: And that will make git figure out which part of the history is the same and where the to-merge-branch has different commits and clone those into the local repo.
[16:41:16] <Krinkle> Nice
[16:42:01] <gnarf> of course somewhere in there i probably pulled "upstream master" and then push "upstream master" after
