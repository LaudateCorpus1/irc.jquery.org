[05:20:11] <gibson042> .
[07:10:52] <DaveMethvin> .
[07:50:49] <kswedberg> ?tell jaubourg: Please take a look at http://forum.jquery.com/topic/promise-on-multiple-elements-violates-documentated-behaviour#14737000003623076
[07:50:49] <bot-t> kswedberg, Okay.
[07:51:03] <kswedberg> I hope I did that right.
[09:19:54] <scott_gonzalez> Web Platform Docs need a ton of work before it'll be useful.
[09:20:09] <scott_gonzalez> I guess this means people are giving up on MDN?
[09:38:37] <ryanneufeld> .
[09:39:56] <snover> scott_gonzalez: what’s the context for that comment?
[09:41:44] <scott_gonzalez> The millions of tweets about Web Platform?
[09:41:50] <ryanneufeld> http://webplatform.org/\
[09:41:54] <scott_gonzalez> Or do you mean the comment about people giving up on MDN?
[09:41:57] <ryanneufeld> http://webplatform.org/
[09:42:01] <ryanneufeld> derp,
[09:42:19] <ryanneufeld> scott_gonzalez: mozilla is part of the webplatform stuff
[09:42:42] <scott_gonzalez> Yeah, hence my assumption that people are giving up on MDN.
[09:42:59] <ryanneufeld> scott_gonzalez: I lurk in the mdn dev channel
[09:43:10] <ryanneufeld> I'm pretty sure they aren't giving up on it
[09:43:28] <scott_gonzalez> Not giving up on MDN seems counter-productive.
[09:43:38] <ryanneufeld> it's an API
[09:44:22] <ryanneufeld> it's still fresh, but looking at this http://docs.webplatform.org/wiki/javascript#javascriptReference
[09:44:29] <scott_gonzalez> If Web Platform doens't aim to make MDN obsolete, it seems like a waste.
[09:44:31] <ryanneufeld> I don't see how that could replace the MDN, yet
[09:45:16] <scott_gonzalez> Which brings us back to my first comment :-P
[09:47:29] <ryanneufeld> I don't see it as giving up though.
[09:48:42] <scott_gonzalez> If people will continue to maintain MDN and MSDN, I don't see how Web Platform is going to help.
[09:48:55] <scott_gonzalez> We can't maintain half a dozen resources.
[09:49:16] <ryanneufeld> The data has to live somewhere
[09:49:35] <ryanneufeld> in the case of the MDN you can access it in a similar way that our docs can be
[09:49:53] <ryanneufeld> so mozilla can maintain them at the MDN, and the webplatform.org can pull from that
[09:50:01] <ryanneufeld> I'm speculating
[09:50:20] <scott_gonzalez> I'm skeptical that two wikis are going to stay in sync.
[09:50:32] <ryanneufeld> I honestly don't know anymore than you. (also I take devils advocate cause it's fun)
[09:50:43] <ryanneufeld> *-take +play
[09:51:44] <scott_gonzalez> :-)
[09:51:49] <ryanneufeld> scott_gonzalez: if you really wanna know, you can always ask in their irc channels too https://wiki.mozilla.org/IRC
[09:51:52] <ryanneufeld> I'm gonna
[09:53:57] <rwaldron> mikesherov +9001 on closing those tickets
[09:56:09] <snover> scott_gonzalez: ugh, this seems sucky.
[09:56:30] <scott_gonzalez> snover: Yeah, I'm skeptical of this.
[09:56:37] <snover> WebPlatform.org will have accurate, up-to-date, comprehensive references and tutorials for every part of client-side development and design, with quirks and bugs revealed and explained. -> MDN
[09:56:43] <snover> It will have in-depth indicators of browser support and interoperability, with links to tests for specific features. -> MDN/caniuse
[09:56:50] <snover> It will feature discussions and script libraries for cutting-edge features at various states of implementation or standardization, with the opportunity to give feedback into the process before the features are locked down. -> W3C MLs
[09:56:56] <snover> It will have features to let you experiment with and share code snippets, examples, and solutions. -> jsfiddle
[09:57:13] <snover> It will have information you just can’t get anywhere else -> stack overflow
[09:57:39] <scott_gonzalez> I thought we had near universal buy-in for MDN at this point.
[09:58:04] <scott_gonzalez> For some reason Web Platform kind of reminds me of Doctype.
[09:58:19] <DaveMethvin> it's only gonna work if all the browser makers abandon their own sites (MDN, MSDN, etc) and concentrate effort on making webplatform.org the canonical source
[09:58:27] <DaveMethvin> seems unlikely
[09:58:42] <DaveMethvin> desirable but unlikely
[09:58:53] <snover> well it’s not like it’s impossibly difficult to find information right now
[09:59:02] <snover> there was a need for MDN which is why it grew
[09:59:07] <DaveMethvin> but it's in 3 or 4 places
[09:59:09] <scott_gonzalez> It's odd that anything would remind me of Doctype since I had only looked at it once.
[09:59:18] <ryanneufeld> scott_gonzalez: http://cl.ly/image/2F3L2j1c1R09
[09:59:25] <ryanneufeld> I'm still waiting in mdn for a response
[10:00:10] <DaveMethvin> ryanneufeld: thanks for asking that ... now i'm even more skeptical it will work
[10:00:53] <DaveMethvin> so it sounds like webplatform.org is not an "official" source
[10:04:57] <ryanneufeld> DaveMethvin: nope... sounds like a another clusterFck
[10:06:16] <DaveMethvin> it's more likely to just die of neglect over time ... sounds like it's nobody's priority since they each have their own "official" place for the docs on the sites they control.
[10:06:32] <ryanneufeld> which is unfortunate
[10:10:46] <ryanneufeld> DaveMethvin: checkout #webplatform
[10:15:15] <ryanneufeld> DaveMethvin: I have no problem asking the hard questions :P
[10:20:18] <ryanneufeld> DaveMethvin, scott_gonzalez http://cl.ly/image/020d1H2O0I0W
[10:20:51] <scott_gonzalez> ugh
[10:21:20] <ryanneufeld> scott_gonzalez: at the very least MDN is not going away
[10:21:32] <ryanneufeld> so thats a positive thing
[10:21:56] <scott_gonzalez> yeah
[10:51:12] <rwaldron> snover that webplatform.org thing is already making my stomach turn
[10:59:34] <ryanneufeld> rwaldron: why's ithat?
[10:59:50] <rwaldron> ...because I read some of the content
[10:59:56] <ryanneufeld> :P
[12:50:42] <scott_gonzalez> http://twitter.com/jqueryui/status/255394657750634498
[12:50:43] <socialhapy> ★ Tweet from jqueryui: The long awaited jQuery UI 1.9.0 has been released! http://t.co/7WljfTVq We also have a new documentation site http://t.co/wF6JHbvj Enjoy! ★ http://bit.ly/Q8Q4Pr
[12:52:15] <sindresorhus> What's the state of the new jQuery plugins site?
[12:54:57] <scott_gonzalez> About 95% ready. It's supposed to launch at the summit.
[12:56:15] <sindresorhus> scott_gonzalez: k, looking forward to that :)
[13:14:34] <LakWork> @paul_irish you're famous: www.webplatform.org
[13:14:35] <b-ot> LakWork, no YOU'RE famous: www.webplatform.org
[13:14:47] <LakWork> :O
[14:37:38] <paul_irish> LakWork: hah
[15:08:20] <Danielss89> Hi
[15:08:33] <Danielss89> Anyone have QUnit setup with jenkins and Phing?
[15:08:43] <Danielss89> i'm kind a stuck
[15:08:50] <Krinkle> Phing?
[15:09:00] <Danielss89> or Ant
[15:09:12] <Danielss89> preferrebly Phing :D
[15:09:15] <Krinkle> How are you stuck exactly?
[15:09:52] <Danielss89> Well i need the output in JUnit xml format so that i can parse it with jenkins
[15:10:10] <Krinkle> How are you running the qunit tests?
[15:10:12] <Danielss89> so i found a JSunit logger which logs xml with console.log
[15:10:20] <Danielss89> I'm going to do it with phantom.js
[15:10:39] <Danielss89> Krinkle: or is there a better way?
[15:10:46] <Krinkle> Danielss89: I assume your tests are browser specific?
[15:10:54] <Danielss89> Krinkle: well not really :D
[15:10:56] <Krinkle> Or are they general purpose / logic based javascript
[15:11:01] <Danielss89> i haven't wrote any tests yet
[15:11:12] <Krinkle> Does the execution need "document", "window.location" (not the tests, but your library)
[15:11:15] <Danielss89> i just want to get it to work
[15:11:40] <Krinkle> phantomjs is basically a Chrome browser without a visual representation. Quite the overhead if you don't need it.
[15:11:40] <Danielss89> Krinkle: i'm just trying to set it up with the single example test that comes with QUnit
[15:11:53] <Krinkle> That's all fine, but please answer the question :) It must matter.
[15:11:59] <Danielss89> Uhm..
[15:12:07] <Danielss89> i guess not
[15:12:09] <Krinkle> Are you familiar with nodejs?
[15:12:13] <Danielss89> yes
[15:12:41] <Krinkle> So, can the to-be-tested library execute fine in a browserless environment such as nodejs?
[15:12:59] <Krinkle> Because in that case I'd recommend using node-qunit, or more specifically, the nodejs/testing build system: grunt
[15:13:26] <Danielss89> i guess that will work
[15:13:28] <Krinkle> but if you already have it working with phantomjs, that's fine too.
[15:13:34] <Danielss89> i'll have a look at it
[15:13:41] <Krinkle> So you mentioned a QUnit plugin that creates jUnit XML format.
[15:13:51] <Krinkle> and it outputs to console.log
[15:14:11] <Danielss89> yes
[15:14:16] <Krinkle> That sounds pretty amazing. Where are you stuck?
[15:15:17] <Danielss89> i need to get it into an xml file :D
[15:16:31] <Danielss89> Krinkle: https://github.com/jquery/qunit/tree/master/addons/junitlogger
[15:16:50] <Krinkle> Danielss89: Why does it need to be a file?
[15:17:17] <Danielss89> Krinkle: Jenkins needs to read it
[15:17:24] <Krinkle> I haven't yet looked into where Jenkins is expecting the XML, but I imagine from the jenkins build, can't it read it from stdout of the build process?
[15:17:26] <Danielss89> i need to point it to an xml file
[15:17:31] <Krinkle> okay
[15:17:37] <Krinkle> a temporary file?
[15:17:46] <Danielss89> guess thats fine
[15:17:58] <Krinkle> Or does jenkins provide the location where it is expecting it and then keeps reading it from there?
[15:18:31] <Krinkle> either way, from within the process that outputs the xml, it should be pretty straight forward to store that in a variable, write it to a file path, and give jenkins the path?
[15:18:55] <Krinkle> https://github.com/jquery/qunit/blob/master/addons/junitlogger/junitlogger.js
[15:18:59] <Krinkle> QUnit.jUnitReport
[15:19:05] <Krinkle> that seems to be the callback that gets the data
[15:19:24] <Krinkle> from within that callback, you'd write to a file with nodejs fs module (filesystem).
[15:19:28] <Krinkle> var fs = require('fs');
[15:19:42] <Krinkle> This is probably easiest with a grunt wrapper.
[15:19:59] <Danielss89> ok
[15:20:31] <Krinkle> create a grunt task in your grunt.js file for 'test' and that then executes the test as you want it, and reads the location from a shell argument or json file, and writes to it.
[15:20:44] <Krinkle> something like that
[15:21:18] <Krinkle> Yep, QUnit.jUnitReport gets called with an object
[15:21:18] <Krinkle> https://github.com/jquery/qunit/blob/master/addons/junitlogger/junitlogger.js#L154
[15:21:25] <Krinkle> data.xml = string of jUnit xml
[15:22:24] <Danielss89> Krinkle: thx, i'll look into it :)
[15:26:59] <mikesherov> jzaefferer: what's the deal with node-qunit? Is that a good port or what?
[15:27:11] <Krinkle> mikesherov: its not a port
[15:27:31] <Krinkle> its a wrapper to run qunit from the cli in nodejs
[15:27:47] <Krinkle> and out puts results in ASCII art
[15:27:53] <mikesherov> Krinkle: recommended, or should I be using a different unit testing framework for node?
[15:28:13] <Krinkle> Well, nodejs does have a build in assert module
[15:28:18] <mikesherov> sure
[15:28:23] <Krinkle> which implements the same spec basically
[15:28:27] <mikesherov> right
[15:28:46] <Krinkle> http://nodejs.org/docs/latest/api/assert.html
[15:29:14] <mikesherov> so….
[15:29:16] <mikesherov> vows?
[15:29:20] <mikesherov> qunit?
[15:29:23] <mikesherov> native assert?
[15:29:26] <Krinkle> difference though that assert throws exceptions instead of aggregating results
[15:29:37] <mikesherov> oh, that's fun
[15:29:44] <Krinkle> Its based on a different design
[15:29:58] <Krinkle> if you run it from cli, it will properly run as a failed process, which is nice
[15:30:06] <mikesherov> I see
[15:30:11] <Krinkle> because that's what stuff expects from running a test, to exit with status 1
[15:30:18] <mikesherov> right
[15:30:27] <Krinkle> note though that node-assert isn't all that native, its just a module.
[15:30:36] <mikesherov> So I want to use a higher level lib
[15:30:46] <Krinkle> it depends, if you need to quickly assert, use assert. If you need a solid foundation, lots of plugins, and portability, use qunit.
[15:30:58] <Krinkle> e.g. if you need a lib that is used both in node and browsers, qunit is ideal to run with both
[15:31:00] <mikesherov> yes, I need the latter
[15:31:07] <mikesherov> k
[15:31:13] <Krinkle> plugs there is wrappers for qunit for grunt, node, travis-ci etc.
[15:31:23] <mikesherov> that makes sense
[15:31:36] <Krinkle> a little shameless plug to close it off: https://github.com/Krinkle/travis-ci-node-and-browser-qunit
[15:31:43] <Krinkle> (my template, sort of)
[15:31:54] <Krinkle> forked, though rewritten from scratch
[15:31:58] <mikesherov> cool
[15:32:37] <mikesherov> I may fork it
[15:32:49] <mikesherov> you already forked it :-)
[15:33:07] <Krinkle> ah, and I see upstream took it
[15:33:08] <Krinkle> nice
[15:33:20] <Krinkle> I forgot about that pull request
