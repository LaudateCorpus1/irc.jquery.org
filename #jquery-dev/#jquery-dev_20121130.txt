[02:10:32] <scott_gonzalez> Anyone know which browser is behaving correctly? Chrome or Firefox? http://jsbin.com/izayex/1/edit
[03:33:33] <jqcommit> [13jquery.com] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/6jpygw
[03:33:33] <jqcommit> 13jquery.com/06master 141ca098e 15Scott GonzÃ¡lez: Upgrade to grunt-jquery-content 0.7.0 and grunt-wordpress 1.0.5.
[05:00:13] <jqcommit> [13jquery] 15tarruda opened pull request #1048: Fix bug caused with the 'xmldom' (06master...06master)  02http://git.io/f-bYNA
[07:31:50] <DaveMethvin> you tell 'em gibson042!
[07:32:14] <gibson042> I'm just glad we made the same points :)
[07:32:19] <DaveMethvin> whew!
[07:34:43] <DaveMethvin> so gibson042 where do you think we are on https://github.com/jquery/jquery/pull/1047 ?
[07:34:44] <socialhapy> â˜… Pull request on jquery by PaulBRamos (2d, 13h ago): #4087 - insertAfter, insertBefore, etc do not work when destination is original element
[07:35:13] <DaveMethvin> this whole mess will be a lot cleaner once we get rid of the frag cache
[07:35:21] <gibson042> exactly
[07:35:23] <DaveMethvin> but i think for 1.9 we should hold
[07:36:02] <DaveMethvin> i know it was put in mainly for perf considerations, so i'd love to have some real perf tests
[07:36:18] <DaveMethvin> all we have at the moment is the old slickspeed stuff
[07:36:24] <gibson042> I dunno, that fix is going to be a bitch if the cache is still around
[07:37:13] <DaveMethvin> mainly the impact on oldIE is what concerns me perf wise
[07:37:40] <DaveMethvin> hmmm... we could wait to fix this until 2.0
[07:38:00] <DaveMethvin> it introduces a difference, but this bug has been open forever
[07:39:11] <gibson042> hmmm
[07:40:28] <gibson042> were there any perf tests justifying the introduction of the fragment cache?
[07:40:47] <DaveMethvin> yeah, the old slickspeed tests from ~2008
[07:40:52] <DaveMethvin> they are really bogus
[07:41:08] <DaveMethvin> i think there are some up on an old web page, lemme look
[07:41:47] <gibson042> if we don't think they're representative of real-world use, I'm happy to ignore them
[07:42:03] <DaveMethvin> oh no, slickspeed was the selector test
[07:42:11] <DaveMethvin> it's the other one who's name i'm blanking on
[07:42:14] <gibson042> but that would still leave us uncertain about the value of this chunk of code that is present right now for historical reasons
[07:43:24] <DaveMethvin> http://ejohn.org/files/142/
[07:43:30] <DaveMethvin> taskspeed
[07:45:21] <DaveMethvin> here is the basic benchmark code: http://ejohn.org/files/142/tests/sample-tests.js
[07:46:03] <DaveMethvin> http://ejohn.org/files/142/tests/jq-tests.js
[07:46:35] <DaveMethvin> so the append test is this:   for(var i = 0; i<500; i++) $("body").append("<div rel='foo'>test</div>");
[07:46:54] <DaveMethvin> notice the constant markup in the append, works REALLY well with the frag cache
[07:47:11] <DaveMethvin> but of course, not representative of any real code
[07:47:13] <gibson042> yeah
[07:47:23] <gibson042> also in "make"
[07:47:39] <DaveMethvin> most of them are tight loops with constant markup
[07:48:13] <DaveMethvin> this is also why there was an optimization for $("body") in jQuery.fn.init, it made this faster
[07:48:28] <gibson042> I see
[07:48:56] <DaveMethvin> since when you call $("body") in a loop 500 times it is not soo good a thing :D
[07:49:05] <gibson042> lol
[07:49:18] <gibson042> so we know the cache speeds up this suite, but we don't know if it speeds up real-world use
[07:49:23] <DaveMethvin> right
[07:49:42] <DaveMethvin> and i think for modern browsers they're fast enough that this is all just a complex waste
[07:49:43] <gibson042> well... maybe we should look at our manipulation unit tests
[07:50:02] <DaveMethvin> but for ie 6/7/8 i am concerned about perf regressions
[07:50:24] <DaveMethvin> like, when some selectors got slower in 1.8 we started getting complaints about ie7
[07:50:33] <DaveMethvin> nobody else even noticed!
[07:50:57] <DaveMethvin> that's why i was thinking we could wait until 2.0 to rip it all out
[07:51:09] <DaveMethvin> when we know the browsers can handle it
[07:51:20] <DaveMethvin> and we don't risk oldIE perf regressions
[07:51:27] <gibson042> do you really want this bug to differ between 1.9 & 2.0, though?
[07:51:41] <DaveMethvin> yeah, that makes me  hesitate too
[07:52:22] <DaveMethvin> i need to walk the dog, i do my best thinking then so let me think about it
[07:53:03] <gibson042> I think we should remove all non-buildFragment calls from https://github.com/jquery/jquery/blob/master/test/unit/manipulation.js and make that our test case for oldIE performance
[07:53:48] <gibson042> if the cache provides no benefit there, we'll just yank it from 1.9
[11:41:23] <DaveMethvin> GITHUUUUUUB!
[12:16:20] <jqcommit> [13jquery] 15angryziber opened pull request #1049: Fix loading of appcached files on Android and JQuery Mobile (06master...06master)  02http://git.io/abTZXg
[13:12:25] <jqcommit> [13jquery] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/cwnJPA
[13:12:25] <jqcommit> 13jquery/06master 14b382af6 15Richard Gibson: keep manipulation.js assertions consistent
[13:29:20] <DaveMethvin> gibson042: thanks! i have to run to a meeting in a sec, but are you interested in stubbing out buildFragment then?
[13:29:53] <gibson042> I'm pretty sure pbramos can do it in his fix, but if not I'll make sure it gets in
[13:40:53] <doesallmagic> Project jQuery Core build #524: STILL FAILING in 28 min: http://swarm.jquery.org:8080/job/jQuery%20Core/524/
[13:40:53] <doesallmagic> richard.gibson: keep manipulation.js assertions consistent
