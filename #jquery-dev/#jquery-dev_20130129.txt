[04:55:20] <siovene> Funny, I ust found out that $('<div/>') is approximately 6 times slower than $('<div>hello</div>').
[04:55:22] <siovene> jusT*
[05:11:18] <siovene> s,slower,faster
[05:16:17] <scott_gonzalez> Well, they have different code paths (element creation vs. innerHTML creation), but you should at least compare equal outputs.
[05:36:34] <gibson042> .
[05:54:00] <jqcommit> 01[13jquery.com01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/Z7yU5g
[05:54:00] <jqcommit> 13jquery.com/06master 148779dfb 15Scott GonzÃ¡lez: Remove spam link that was copied over from old content.
[06:32:09] <siovene> DaveMethvin, gibson042: what do you think of this? It looks very easy to set up, and can generate reports that one could use to compare revisions of the code.
[06:32:11] <siovene> http://code.google.com/p/jslitmus/
[06:33:32] <siovene> And I suppose it should work with phantomjs, so it could be automated.
[06:35:49] <DaveMethvin> siovene: i like the sound of the general framework, very similar to QUnit in that way
[06:35:59] <DaveMethvin> gotta run
[07:17:07] <siovene> r ~.~.~.
[07:17:23] <gibson042> siovene: I also like the interface, but the project itself appears to be a one-off release followed by abandonment... still, it's âˆžx better than what we have now, so if you just went for it we could get data now even with a suboptimal framework (e.g., note the stylesheet embedded in http://broofa.com/Tools/JSLitmus/JSLitmus.js)
[07:17:29] <siovene> Sorry about that line, got my SSH session stuck :)
[07:18:46] <siovene> gibson042: I hadn't looked at the code, but I can look for alternative. It's good that you find the core idea good though.
[08:00:40] <ben_alman> DaveMethvin: http://twitter.com/cowboy/status/296286529062572032
[08:00:41] <b-ot> ben_alman: @cowboy: Wow, this @github PR thread is confusing on so many levels http://t.co/zM6k58Ip Look at the dates, the commits, and the comment text. WTF
[08:03:40] <DaveMethvin> ben_alman: looks like he forgot to rebase
[08:03:51] <ben_alman> so much confuse
[08:03:54] <ben_alman> but more than that
[08:03:57] <ben_alman> look at his comments
[08:04:10] <ben_alman> and the "imported" comments
[08:04:23] <DaveMethvin> yeah i dunno why gh does that
[08:04:36] <DaveMethvin> but i've seen it several times
[08:05:12] <DaveMethvin> ben_alman: look familiar? https://github.com/jquery/jquery/pull/1148
[08:05:13] <b-ot> DaveMethvin: Pull request #1148 by JanMiksovsky (15h 28m ago): Bug 13342
[08:05:18] <DaveMethvin> same kind of mess
[08:05:27] <DaveMethvin> and the comments are from the other commits
[08:05:40] <ben_alman> yeah that comment inclusion thing is not great
[08:06:04] <DaveMethvin> as long as they have a common parent i guess gh doens't mind, but including the comments seems over the top
[08:55:33] <scott_gonzalez> DaveMethvin: How dare you! Who do you think you are to dictate what jQuery supports! Your arguments are irrelevant to web developers using jQuery!
[08:57:43] <snover> fuckheads
[09:17:44] <ajpiano> lol scott_gonzalez what are you referencing this time
[09:18:14] <scott_gonzalez> The Sugar PR.
[09:18:38] <scott_gonzalez> https://github.com/jquery/jquery/pull/1140#issuecomment-12844409
[09:18:39] <b-ot> scott_gonzalez: Pull request #1140 by andrewplummer (1w 11h ago): 1.9 stable sugar fix 265
[09:20:49] <ajpiano> ohh
[09:21:35] <ajpiano> argumentum ad verecundiam
[09:31:30] <johnbender> scott_gonzalez: DaveMethvin: did you guys have any timeout issues with the upgrade to phantom 1.8 on the test swarm server?
[09:31:42] <johnbender> (I have to run in like 2 mins)
[09:31:59] <DaveMethvin> i didn't know swarmy was back from the dead johnbender
[09:32:01] <johnbender> it appears to be injecting the grunt qunit script before qunit can be loaded
[09:32:09] <johnbender> DaveMethvin: sorry
[09:32:17] <johnbender> the just the regular tests
[09:32:20] <johnbender> not test swarm
[09:32:28] <johnbender> I was thinking of swarm.jquery.org
[09:32:36] <DaveMethvin> lemme look
[09:32:56] <johnbender> DaveMethvin: the upgrade happened a while ago
[09:32:59] <johnbender> gnarf: ^
[09:33:46] <DaveMethvin> we don't use phantom on the swarm server for core
[09:33:55] <johnbender> DaveMethvin: argh!
[09:33:55] <johnbender> sorry
[09:33:59] <johnbender> I'm just being a pain in the ass then
[09:34:20] <johnbender> DaveMethvin: I was using it to automate my tests with wield
[09:34:25] * johnbender has things confused
[09:34:44] <johnbender> I'll wait to hear back from gnarf and scott_gonzalez 
[09:34:47] <johnbender> I also pinged jzaefferer 
[09:34:51] * johnbender steps out
[10:05:37] <siovene> DaveMethvin: so, again wrt perf tests, is it not okay to run certain functions thousands of times to see how many ops/sec we get, and then compare it with previous releases?
[10:06:10] <DaveMethvin> it MAY be okay
[10:06:35] <DaveMethvin> but for example, until we got rid of the fragment cache, doing something 1000 times was really doing it 1 time and using the cache
[10:06:40] <siovene> DaveMethvin: what other possibilities have we?
[10:06:47] <DaveMethvin> which may not be at all what we are trying to measure
[10:07:03] <gnarf> this sugar pull makes me want to respond
[10:07:20] <siovene> DaveMethvin: maybe we could make fragment caching, optional and opt out.
[10:07:23] <DaveMethvin> gnarf: i dunno, maybe i was too hard on them
[10:07:36] <DaveMethvin> it's kind of bad practice to mess with other protos
[10:07:49] <DaveMethvin> siovene: we got rid of the frag cache so that case is okay
[10:07:58] <gnarf> DaveMethvin: basically what I'm saying
[10:08:04] <gnarf> DaveMethvin: save for the poly-fill of new API
[10:08:13] <gnarf> prototype modification is dangerous
[10:08:27] <gnarf> and prone to messing with other libraries
[10:08:44] <scott_gonzalez> Didn't the guy say he was ripping that specific property out of Sugar anyway?
[10:08:45] <DaveMethvin> and then you have to make pull requests asking them to write defensive code
[10:09:03] <DaveMethvin> scott_gonzalez: that is what i gathered too
[10:09:05] <gnarf> it got removed
[10:09:10] <scott_gonzalez> I am probably going to remove this method from Sugar anyway, 1. as an emergency fix on the assumption that this pr will take a while to be released even if it is accepted and 2. because it never fit into the lib very well anyway.
[10:09:11] <DaveMethvin> problem solved
[10:10:06] <DaveMethvin> siovene: as far as benchmarks go, i'd prefer a series of operations that are significant enough that we don't need to loop them hundreds/thousands of times to get significant results
[10:10:58] <siovene> DaveMethvin: wouldn't it be preferrable, instead, if the benchmark were as atomic as possible?
[10:11:23] <DaveMethvin> if it's atomic then for sure you'll need a large loop count
[10:11:53] <siovene> DaveMethvin: for instance, I found out that on my hw, I get $('<div/>') = 100k ops/sec, while $('<div>hello</div>') = 17k ops/sec
[10:12:20] <DaveMethvin> is that a significant diff?
[10:12:24] <siovene> DaveMethvin: a larger loop count means more significant data, i.e. less dependent on randomness
[10:12:49] <gnarf> scott_gonzalez DaveMethvin: PM'ed you a draft so you can say "nah, don't post it" :)
[10:13:11] <siovene> I don't suppose it's significant in order to compare the two operations, but if in the future you get those ops/sec halved, then you know that something slow got introduced :)
[10:14:45] <scott_gonzalez> siovene: As I mentioned earlier, those aren't even equivalent.
[10:15:02] <scott_gonzalez> One creates an empty div element, the other creates an div element and a text node.
[10:15:13] <DaveMethvin> benchmarking is always a tarpit no matter what
[10:15:16] <siovene> The idea is that this thing would be automated, run in phantomjs and produce output that a tool can automatically compare the output, and run it with git-bisect.
[10:15:37] <siovene> scott_gonzalez: yeah, the goal is not to compare different ops, imho, but to catch regressions in performane.
[10:16:23] <DaveMethvin> so there are essentially two styles of benchmarking, one is the atomic types where you can tell if .removeClass("multiple classses") got slower and it's all isolatey and stuff
[10:16:55] <DaveMethvin> the other is where you have a series of representative actions (add content, manipulate it, have events) and measure the change there
[10:17:17] <siovene> DaveMethvin: so you think that sometimes the whole is not the sum of the parts?
[10:17:43] <DaveMethvin> oh it's still the sum, but it's a *weighted* sum
[10:17:54] <DaveMethvin> and the problem is that sometimes in our minds we use the unweighted sum
[10:18:09] <DaveMethvin> thinking for example that cutting the perf of some api in half will be horrible
[10:18:20] <DaveMethvin> when in reality it's only called a few times during the pages live
[10:18:31] <DaveMethvin> and we cut it in half from 1ms to 2ms
[10:18:34] <DaveMethvin> so it doesn't matter
[10:18:39] <DaveMethvin> in the *weighted* sum
[10:18:45] <siovene> DaveMethvin: but we can have both, can't we? Atomic ops where it makes sense (for instance object creation, some types of traverals, etc), and complex, articulated ops when we want them.
[10:19:07] <DaveMethvin> yes definitely
[10:19:35] <DaveMethvin> siovene: i definitely think it's about our interpretation of the data
[10:19:42] <gibson042> siovene: keeping in mind the risk with atomic benchmarking of encouraging non-useful optimizations
[10:20:02] <DaveMethvin> right the 1ms  to 2ms thing
[10:20:11] <siovene> gibson042: whether we act upon the results of the benchmark is another thing :)
[10:20:32] <DaveMethvin> if we  have to run 100,000 loops to get a good measurement then it's fast enough that an atomic measurement doesn't matter
[10:20:41] <gibson042> it is, but history is not favorable here
[10:21:03] <DaveMethvin> yeah we have requests all the time about adding code to make something faster
[10:21:09] <scott_gonzalez> It's also harder to find the tests that matter if there are many that don't matter.
[10:21:09] <DaveMethvin> when it's not the bottleneck in anyone's program
[10:21:20] <siovene> DaveMethvin: good point. Also, these benchmarks are not like an big-O notation: if the input is favorable, they'll be fast.
[10:22:16] <siovene> that's why I was of the idea that we're not measuring the performance of jquery in absolute term, but we should just aim at comparing new code with old code, and catch possible regressions
[10:22:46] <siovene> sometimes if you have a complicated patch that spans multiple objects in the core, all the unit tests might pass but you can't see if it made something significantly slower
[10:22:53] <DaveMethvin> right, more about version-to-version variations and making sure they don't get out of hand
[10:24:16] <siovene> alright, then I'll check some other frameworks to be sure to pick the right one, then do some atomic benchmarks because they are easy. Then somebody can take a look and perhaps think about some non-atomic benchmarks too.
[10:25:02] <DaveMethvin> sounds good, go ahead and put something together siovene. It's easier to shoot at :D
[10:25:16] <siovene> hehe okay :)
[10:31:07] <gnarf> While you're at it... We need a String.prototype.namespace ;)
[10:31:33] <gnarf> (kidding)
[10:33:08] * siovene gape at gnarf, trout-eyed.
[10:33:13] <siovene> gapes*
[10:33:21] <siovene> I don't know what you're talking about :)
[10:33:44] <gnarf> siovene: oh, don't worry about it ;)
[11:42:16] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/96ZlwA
[11:42:16] <jqcommit> 13jquery/06master 14aa3c929 15Dave Methvin: Revert "Fix #13291, no longer need the functionish-regex guard."...
[11:43:29] <scott_gonzalez> DaveMethvin: Can I close out that sugar PR with "This has absolutely nothing to do with Crockford, please stop mentioning him. It's pretty clear that this case has been solved for all parties involved. There is no reason to continue telling us how arrogant we are."
[11:43:50] <DaveMethvin> i think we should just leave it alone, they'll punch themselves out
[11:44:15] <scott_gonzalez> ok
[11:48:22] <doesallmagic> Project jQuery Core build #670: STILL FAILING in 5 min 59 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/670/
[11:48:22] <doesallmagic> dave.methvin: Revert "Fix #13291, no longer need the functionish-regex guard."
[11:49:05] <DaveMethvin> oh crap, what is THIS about? http://swarm.jquery.org:8080/job/jQuery%20Core/670/console
[11:49:21] <DaveMethvin> ain't nobody got time for this
[11:50:03] <scott_gonzalez> I have time for that like I have time for foot fungus.
[11:50:39] <DaveMethvin> yeah, looks like i have a fun night of fixing to do 
[11:52:28] <scott_gonzalez> If it makes you feel any better, I don't think anyone has been on top of UI tests since I've been swamped with site work.
[11:52:39] <scott_gonzalez> Oh, and thanks for getting that song stuck in my head again...
[11:52:51] <DaveMethvin> sorry :)
[12:07:21] <johnbender> scott_gonzalez: gnarf: did the upgrade to phantom 1.8 affect the UI tests at all?
[12:09:32] <scott_gonzalez> I don't think so. When did that happen?
[12:10:06] <johnbender> scott_gonzalez: they talked about it but a month or go
[12:10:11] <johnbender> *or so
[12:10:15] <johnbender> *ago
[12:10:18] * johnbender hates himself
[12:10:39] <johnbender> scott_gonzalez: it appears to be injecting the qunit grunt script before qunit
[12:10:43] <johnbender> which is a problem
[12:11:11] <johnbender> scott_gonzalez: how long ago did you guys switch to grunt 0.4?
[12:11:17] <scott_gonzalez> http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/
[12:11:20] <scott_gonzalez> We didn't.
[12:11:32] <johnbender> scott_gonzalez: yah it LOOKS green
[12:11:35] <johnbender> but the tests are timing out
[12:11:42] <johnbender> some of them are at least
[12:11:45] <scott_gonzalez> We're not switching until there's actually a stable release.
[12:11:57] <johnbender> scott_gonzalez: imagine that!
[12:11:58] <johnbender> :)
[12:12:24] <johnbender> scott_gonzalez: alright
[12:12:26] <johnbender> nothing obvious
[12:12:27] <scott_gonzalez> When they totally hosed RC4, we decided to hold out.
[12:12:36] <johnbender> sane
[12:12:51] <johnbender> I'm going to go back to futzing to see if I can sort this out
[13:56:57] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/E2JX4A
[13:56:57] <jqcommit> 13jquery/06master 14451d0c3 15Dave Methvin: Fix comment about Safari shortfalls.
[14:03:54] <doesallmagic> Project jQuery Core build #671: STILL FAILING in 6 min 58 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/671/
[14:03:55] <doesallmagic> dave.methvin: Fix comment about Safari shortfalls.
[14:43:47] <DaveMethvin> Krinkle: any idea what's going wrong with that build? http://swarm.jquery.org:8080/job/jQuery%20Core/671/
[14:55:11] <johnbender> DaveMethvin: scott_gonzalez: I sorted out my issue
[14:55:36] <DaveMethvin> wazzat johnbender
[14:55:43] <johnbender> the phantom.js script with the current grunt doesn't handle redirects properly with phantom 1.8
[14:56:33] <johnbender> I made the change to grunt-junit (since it replaces that default phantom.js script in that comes with grunt) and all is well
[14:56:56] <johnbender> DaveMethvin: we do redirects to add params and hashes to test urls so that our test file glob captures all our tests
[14:57:06] <johnbender> (debatable practice)
[14:57:11] <johnbender> (my idea)
[14:58:19] <DaveMethvin> phantomjs just isn't enough of a sanity test for core, i'm using it on jquery-migrate but we need real browsers
[15:07:13] <snover> hi
[16:17:54] <Krinkle> Okay, who brought down the swarm?
[16:18:06] <Krinkle> 502 Bad Gateway
[16:21:39] <DaveMethvin> Krinkle: it needs no help
[16:21:51] <Krinkle> browerstack replied
[16:21:54] <Krinkle> they're working on it
[16:22:00] <DaveMethvin> oh good that's quick
[16:22:02] <Krinkle> quite a few major improvements lately
[16:22:25] <Krinkle> I guess they're getting hit by a bit of competition.
[16:22:43] <DaveMethvin> yeah, have you looked at the saucelabs manual testing?
[16:22:47] <DaveMethvin> they have free accounts
[16:22:48] <Krinkle> If they wouldn't have fixed up the API, I imagine saucelabs might've taken that spot very quickly with their major ad campaign
[16:23:00] <Krinkle> I have
[16:23:08] <DaveMethvin> what's your take on them?
[16:23:16] <Krinkle> https://github.com/Krinkle/testswarm-saucelabs (like testswarm-browserstack)
[16:23:20] <Krinkle> just a stub for now
[16:23:31] <Krinkle> DaveMethvin: Well, they're legit, a good and solid API.
[16:23:32] <Krinkle> But...
[16:23:46] <Krinkle> they're very much pointed and optimised for selenium at this time.
[16:23:55] <Krinkle> Which isn't a problem, just something to take in mind when implementing the bridge
[16:24:02] <Krinkle> nothing QUnit or TestSwarm needs to be concerned with
[16:24:07] <Krinkle> It'd all be abstracted by testswarm-saucelabs
[16:24:16] <Krinkle> Actually, it is a big plus compared to browserstack
[16:24:30] <DaveMethvin> i liked some of the features like screen shots for functional tests
[16:24:35] <Krinkle> yeah
[16:24:51] <DaveMethvin> supposedly they built their own server farm for it
[16:25:05] <Krinkle> although selenium isn't relevant for running qunit tests, the advantage of having a web driver into the browser (as opposed to only being able to send a url and waiting for it) is that we can know exactly what the client is doing
[16:25:08] <Krinkle> e.g. real time updates
[16:25:25] <DaveMethvin> yeah that seems like it would be more reliable
[16:25:32] <Krinkle> and no need for a JSONP callback to testswarm, the web driver can actually read the DOM and execute javascript and send it straight into testswarm
[16:26:00] <DaveMethvin> wouldn't need the iframe for testing either,r ight?
[16:26:06] <Krinkle> before that would be possible would require all sorts of infrastrural changes in testswarm, but it's a nice thought that that is possible.
[16:26:25] <Krinkle> DaveMethvin: Well, the iframe is sort of separate.
[16:26:33] <Krinkle> That's more because of testswarm, not because of browserstack.
[16:26:47] <DaveMethvin> right but with webdriver we don't need that
[16:27:03] <Krinkle> well, need is a complicated term in this context.
[16:27:10] <Krinkle> webdriver can extract the qunit results directly
[16:27:20] <Krinkle> but it is running at saucelabs, not on jq03.jquery.com
[16:27:31] <DaveMethvin> right
[16:27:56] <Krinkle> if we're going to do it that way, we'd have to refactor testswarm to accept test results from an indirect source (e.g. the vm would be making the request directly, instead of the browser)
[16:28:04] <Krinkle> and we'd be depending on having web driver
[16:28:12] <Krinkle> which I'd rather not
[16:28:22] <Krinkle> the concept of testswarm right now is, set it up, point a browser to it and sit back.
[16:28:46] <DaveMethvin> yeah, there's definitely more lock-in to webdriver
[16:28:49] <Krinkle> not, set up a clusterfuck of VMs (or write a script for sauce labs) and maintain that 24/7
[16:29:25] <Krinkle> though I'm comparing ideal present scenario to that, not the real present scenario, which is that we rely on browserstack and have a deamon running on jq03 24/7 
[16:29:51] <DaveMethvin> right, and when it dies it's not always obvious
[16:29:55] <DaveMethvin> what exactly broke
[16:30:30] <DaveMethvin> altho i was surprised how many browsers they have with webdriver support now
[16:30:38] <Krinkle> depends where you look. With the latest adjustment clark and I made to splunk and testswarm-browserstack we pretty much know directly what is the cause
[16:30:55] <Krinkle> it is obvious imho.
[16:31:04] <DaveMethvin> well to YOU it is ?D
[16:31:06] <DaveMethvin> :D
[16:31:24] <Krinkle> if testswarm is responsive but gets no test results, it means the browsers aren't running
[16:31:47] <Krinkle> then one looks at splunk/browserstack and figure out whether the deamon stopped or that browerstack stopped.
[16:32:04] <DaveMethvin> so what's wrong with this one then? v
[16:32:05] <DaveMethvin> http://swarm.jquery.org:8080/job/jQuery%20Core/671/console
[16:32:09] <Krinkle> it doesn't get much simple than that
[16:32:55] <Krinkle> DaveMethvin: that's an unfortunate coincedence
[16:33:04] <Krinkle> DaveMethvin: at that time something or someone messed up the NGINX server on jq03, causing it to respond with an HTML error page (502 Gateway Timeout)
[16:33:21] <Krinkle> and since HTML is not valid JSON, JSON.parse throws unexpected <
[16:33:29] <DaveMethvin> ok that makes sense
[16:33:31] <Krinkle> so it isn't testswarm or browserstack related
[16:33:38] <Krinkle> all of swarm.jquery.org was unresponsive
[16:33:43] <Krinkle> I still don't know what caused that
[16:33:51] <Krinkle> gnarf: Any maintenance going on
[16:55:27] <Krinkle> Why don't we have an issue tracker on github? I don't feel like opening a trac ticket because of a unit tests being bad.
[16:55:51] <Krinkle> for example our event unit tests are hugely unreliable and subject to race conditions, they fail half the time in half browsers. and have for almost a year now
[16:56:13] <Krinkle> event: focus-blur order (#12868) (1, 3, 4)
[16:56:14] <Krinkle> Expected 5 assertions, but 3 were run
[16:56:14] <Krinkle> Source:	
[16:56:15] <Krinkle> @http://swarm.jquery.org/build/jquery/451d0c37d9297598743b1372bf623d4b7d38e951/test/unit/event.js:2344 
[17:06:27] <doesallmagic> Project jQuery Core build #672: STILL FAILING in 31 min: http://swarm.jquery.org:8080/job/jQuery%20Core/672/
[17:06:27] <doesallmagic> dave.methvin: Fix comment about Safari shortfalls.
[18:00:11] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 061.9-stable: 02http://git.io/6Du6xw
[18:00:11] <jqcommit> 13jquery/061.9-stable 141bbe2b1 15Dave Methvin: Fix #13349. No need to sort simple .find() cases.
[18:00:20] <jqcommit> 01[13jquery01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/bwzfGw
[18:00:20] <jqcommit> 13jquery/06master 14a5c33fe 15Dave Methvin: Fix #13349. No need to sort simple .find() cases.
[18:31:30] <doesallmagic> Project jQuery 1.x Core build #48: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/48/
[18:31:31] <doesallmagic> dave.methvin: Fix #13349. No need to sort simple .find() cases.
[18:36:41] <DaveMethvin> oh joy, an IE6 regression
[18:37:04] <DaveMethvin> "IE6 regression" ---> oxymoron
[18:37:18] <DaveMethvin> no that's redundant
[18:37:24] <doesallmagic> Project jQuery Core build #673: STILL FAILING in 5 min 53 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/673/
[18:37:24] <doesallmagic> dave.methvin: Fix #13349. No need to sort simple .find() cases.
[18:38:18] <DaveMethvin> aw cmon swarmy, don't go all BAD GATEWAY on me
[18:38:32] <DaveMethvin> i lived through the 90s, don't tell me gateway was bad
[18:38:42] <DaveMethvin> almost as bad as dell
[19:24:28] <DaveMethvin> wow i wish we were shipping 2.0 now http://swarm.jquery.org/job/2445
[23:17:14] <gnarf> okay
[23:17:48] <gnarf> scott_gonzalez / DaveMethvin: you guys are next up - if there happens to be another response on the sugar pull, I'll probably actually bite a head off
