[05:32:46] <_JamesMGreene> jzaefferer, Krinkle: Can `start`/`stop` be used in the `setup` and `teardown` methods?
[05:33:04] <Krinkle> _JamesMGreene: No
[05:33:33] <Krinkle> _JamesMGreene: It will start/stop assertions from continueing, but setup is called synchronously
[05:33:42] <Krinkle> what happens if you try
[05:34:04] <jzaefferer> Krinkle _JamesMGreene: Actually, yes, you can use them. Setup and teardown run as potentionally async tasks from the queue just as the regular test callback
[05:34:46] <jzaefferer> I'm pretty sure there are unit tests within the QUnit testsuite that cover this case
[05:35:57] <Krinkle> jzaefferer: if all goes to plan, I'm landing testswarm refactor today
[05:36:13] <Krinkle> it's gotten bigger than I thought. Should probably split some of it up in separate commits
[05:36:19] <jzaefferer> Krinkle: nice.
[05:36:23] <jzaefferer> I hope :-)
[05:36:29] <Krinkle> e.g. interesting ideas that sprung and then immediately done along
[05:36:37] <jzaefferer> oh well
[05:36:42] <Krinkle> I have a very good commit message for it though
[05:36:49] <Krinkle> should be reviewable
[05:36:51] <jzaefferer> heh
[05:36:52] <jzaefferer> okay
[06:01:28] <Krinkle> jzaefferer: book, thoughts?
[06:01:33] <Krinkle> jzaefferer: (we've both been approached)
[06:01:57] <Krinkle> PM if you prefer
[07:54:23] <JamesMGreene> jzaefferer Krinkle You two around for the meeting this time? :)
[07:54:30] <Krinkle> Yes
[07:55:25] <JamesMGreene> Excellent
[07:55:27] <JamesMGreene> jzaefferer?
[08:00:42] <Krinkle> JamesMGreene: The channel is locked
[08:00:46] <Krinkle> we can't speak
[08:00:52] <JamesMGreene> yup
[08:01:09] <JamesMGreene> I just pinged jzaefferer on Gmail chat but it looks like he might be mobile...?
[08:01:22] <Krinkle> DaveMethvin: scott_gonzalez: toddmparker: Can you unlock meeting
[08:01:24] <JamesMGreene> (only logged in on his mobile device ATM)
[08:01:43] <Krinkle> Thx
[09:05:51] <Krinkle> JamesMGreene: scott_gonzalez: gnarf: Drafted notes on google docs
[09:05:51] <Krinkle> https://docs.google.com/document/d/13FbWhiFQ9gWQvB1Tm4QM_OC4me-ha2ujDWH5sdF7ueo
[09:07:27] <Krinkle> gnarf: what about https://github.com/jquery/meetings.jquery.org ?
[09:07:45] <scott_gonzalez> Krinkle: That's where you should put the notes.
[09:07:54] <Krinkle> orly?
[09:08:16] <scott_gonzalez> Yeah, that's replacing jquery.org/updates (which is now busted)
[09:08:46] <Krinkle> oh oh, jquery.org/updates is broken (blocked stylesheets).
[09:09:11] <Krinkle> ah, anyway, probably remnant from old site
[09:09:14] <Krinkle> scott_gonzalez: OK
[09:09:27] <Krinkle> scott_gonzalez: though I don't remember writing anything for http://jquery.org/updates/, we used to keep it on a google doc
[09:09:36] <Krinkle> or did someone else copy the google doc to jquery.org?
[09:09:59] <scott_gonzalez> jzaefferer would post it
[09:10:01] <scott_gonzalez> see https://jquery.org/updates/2013/03/14/status-update-157/
[09:10:10] <Krinkle> Right
[09:10:15] <scott_gonzalez> Every team lead is resposible for making the notes public.
[09:10:23] <Krinkle> k
[09:10:27] <scott_gonzalez> So if you're so inclined, you can add this weeks notes.
[09:10:37] <Krinkle> Will http://meetings.jquery.org/ become a domain or something?
[09:10:52] <scott_gonzalez> Krinkle: yup
[09:10:55] <Krinkle> ok
[09:11:01] <scott_gonzalez> The stage site is already up.
[09:13:51] <Krinkle> scott_gonzalez: I can't submit to that repo though
[09:13:57] <Krinkle> Should I create a PR?
[09:14:15] <Krinkle> or wait for jzaefferer
[09:14:22] <scott_gonzalez> You can send a PR
[09:15:05] <Krinkle> ok
[09:32:57] <Krinkle> http://bugs.jquery.com/ticket/13821
[09:34:09] <DaveMethvin> Krinkle any html chars should be escaped
[09:34:54] <Krinkle> http://jsfiddle.net/FZs9P/2/
[09:35:22] <Krinkle> DaveMethvin: That depends on the browser
[09:35:28] <Krinkle> DaveMethvin: It is serialisation
[09:35:41] <Krinkle> Afaik escaping it in original html will not make a difference
[09:36:43] <Krinkle> DaveMethvin: indeed, http://jsfiddle.net/FZs9P/3/
[09:37:29] <DaveMethvin> yeah, firefox should escape them
[09:37:46] <DaveMethvin> right?
[09:37:58] <Krinkle> Perhaps
[09:38:06] <Krinkle> I don't think it is a bug in firefox though 
[09:38:11] <Krinkle> they are allowed in attributes like that
[09:38:21] <DaveMethvin> do you have a spec ref?
[09:38:31] <Krinkle> They're within string context. Only " has to be escaped in an attribute
[09:38:43] <Krinkle> For valid XML they probably need escaping
[09:38:49] <Krinkle> but I think HTML allows it
[09:38:59] <DaveMethvin> definitely for xhtml
[09:39:06] <DaveMethvin> i wonder if ff does it there
[09:40:06] <Krinkle> RoanKattouw: https://gist.github.com/anonymous/41a5dd9875a7f986c3c1
[09:40:43] <RoanKattouw> hah yeah I would hope that Firefox does escape <> in XML / XHTML
[09:40:47] <RoanKattouw> But I'm in an HTML5 document
[09:41:02] <DaveMethvin> still looking for the definitive spec
[09:42:25] <DaveMethvin> looks like it doesn't have to be escaped http://www.w3.org/TR/html-markup/syntax.html#syntax-attributes
[09:43:06] <DaveMethvin> well maybe
[09:43:14] <DaveMethvin> there is a rabbit hole
[09:43:15] <RoanKattouw> It only says must not contain any " characters
[09:43:20] <RoanKattouw> (or ' if single-quoted)
[09:43:28] <DaveMethvin> In addition to the general requirements for attribute values...
[09:43:31] <DaveMethvin> and a link
[09:43:39] <DaveMethvin> which may or may not be relevant
[09:44:12] <DaveMethvin> i think the html elements section is just restricting particular attribute values
[09:44:18] <DaveMethvin> and not saying it has to be escaped
[09:44:22] <DaveMethvin> in general
[09:44:23] <DaveMethvin> so yeah
[09:44:25] <RoanKattouw> Yeah
[09:45:30] <RoanKattouw> I'm pretty sure it's impossible to find and fix self-closing tags with a regex given that they can appear in quoted attribute values
[09:46:16] <DaveMethvin> agreed, but it seems to be pretty rare since that regex has been there several years
[09:46:47] <RoanKattouw> Yeah, I'll admit my case is kind of crazy :)
[09:47:03] <DaveMethvin> not as much crazy as just hard to fix
[09:47:03] <RoanKattouw> I have a data attribute that contains a JSON blob that contains HTML (or HTML-like stuff really)
[09:47:14] <RoanKattouw> But it looks like "/>" anywhere in your attribute value will do it
[09:47:28] <RoanKattouw> Because it's not trying to fix the <bar /> tag, it thinks the <span> is self-closing
[09:50:50] <gibson042> RoanKattouw: why are you using `.html` instead of `.clone` and DOM operations?
[09:51:59] <RoanKattouw> gibson042: In the real-life use case the HTML arrives over the wire
[09:53:06] <RoanKattouw> I'll probably end up working around this by using straight-up .innerHTML and using different workarounds for the issues that I originally started using .html() for (restricted nodes like <caption>)
[09:54:36] <gibson042> RoanKattouw: what produces the HTML string with unescaped "/>" in attributes?
[09:54:48] <RoanKattouw> It doesn't matter that it's unescaped
[09:54:56] <gibson042> it matters in jQuery
[09:55:04] <RoanKattouw> As Krinkle|detached pointed out, if you escape the > as &gt; , Firefox happily normalizes that back for you
[09:55:16] <gibson042> only if it's HTML
[09:55:20] <RoanKattouw> Yes
[09:55:24] <gibson042> you said it comes in as a string
[09:55:36] <gibson042> if you have HTML, you can use `.clone` and DOM operations
[09:55:49] <RoanKattouw> In my case there's some indirection involved where I consume a large document as a string, parse it, then store smaller bits of it as HTML
[09:55:56] <RoanKattouw> I suppose I could be storing it as DOM nodes rather than HTML strings
[09:56:00] <gibson042> so I'm asking what produces the string with unescaped ">"
[09:56:04] <RoanKattouw> Firefox
[09:56:14] <gibson042> ok; gotcha
[09:56:42] <RoanKattouw> So right now my backend does produce an unescaped > but escaping it doesn't matter, because it ends up passing through Firefox's DOM library at some point where it gets unescaped again
[09:56:50] <gibson042> right
[09:56:56] <RoanKattouw> I mean there are several ways I can work around this
[09:57:05] <RoanKattouw> I can use .innerHTML with my own handling for wrapNodes
[09:57:37] <RoanKattouw> Or I can store things as DOM nodes rather than HTML strings
[09:57:52] <RoanKattouw> But ideally it should Just Work :)
[09:58:28] <gibson042> I agree with you, but making that happen is sometimes not practical
[09:58:40] <RoanKattouw> Yeah, I realize that
[09:59:07] <gibson042> I haven't looked deep enough yet to see which side of that divide this case comes down on
[09:59:58] <RoanKattouw> It's probably fairly impractical to fix
[10:00:13] <RoanKattouw> One thing is that AFAICT the only reason that regex replacement happens is to avoid DOMExceptions in IE
[10:00:37] <RoanKattouw> So I suppose it could be wrapped in either browser sniffing or try-catch-retry or something
[10:00:47] <DaveMethvin> i was just double checking on the XHTML case and in fact both chrome and ff do seem to escape correctly there
[10:00:48] <RoanKattouw> But there's no documentation comment saying why it's there so I can't be sure
[10:01:12] <RoanKattouw> Right
[10:01:22] <gibson042> I have to go now, but I'll be thinking about this a bit too
[10:01:22] <DaveMethvin> although i'd never recommend you use xhtml :)
[10:01:33] <RoanKattouw> Yeah there's no way I'm using XHTML :)
[10:02:03] <RoanKattouw> My input is HTML5 so converting it to XHTML and back probably ends up changing it in other ways
[10:02:57] <DaveMethvin> i am pretty sure that regex is for fixing oldIE issues, we probably don't need it in 2.0 but that would need to be tested
[10:03:27] <RoanKattouw> Does jQ 2.0 drop support for some older IE versions?
[10:03:36] <DaveMethvin> yes ie6-8
[10:03:43] <DaveMethvin> the ones that can't parse right
[10:03:49] <RoanKattouw> Ooooh excellent
[10:04:10] <RoanKattouw> That would be really nice
[10:04:20] <RoanKattouw> I'm working on a product that only supports IE9+ anyways
[10:04:43] <RoanKattouw> It involves a lot of contentEditable-related stuff and you really really do not want to deal with that in IE8 or IE7
[13:37:27] <jqcommit> [13jquery] 15diofeher opened pull request #1256: Fix in .text method when setting a value (06master...06master)  02http://git.io/DluBFw
