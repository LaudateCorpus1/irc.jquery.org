[02:54:05] <Zamolxe> hello
[09:19:58] <mikesherov> DaveMethvin: https://docs.google.com/spreadsheet/ccc?key=0Aj5JJFjq9rZDdG5KU29qUGJ2VGp0ZDlGSUZieVJxV3c#gid=0
[09:20:03] <mikesherov> summary for top bug is wrong
[09:20:27] <mikesherov> 9945 is fixed in 1.7.2, but ?10782 is unfixable
[09:20:38] <mikesherov> ?10782 is unfixable
[09:20:41] <bot-t> mikesherov, Couldn't find "10782 is unfixable" in jQuery Docs.
[09:20:52] <mikesherov> come on bot-t, geez
[09:20:53] <DaveMethvin> docs#10782
[09:20:54] <bot-t> (17 hours 10 mins ago) <rwaldron> tell DaveMethvin node.js, windows azure: https://www.windowsazure.com/en-us/develop/nodejs/
[09:20:55] <bot-t> [#10782] Incorrect calculating width (assigned bug) - http://jqbug.com/10782
[09:21:04] <DaveMethvin> yeah i see what you mean
[09:21:08] <DaveMethvin> half-fixed
[09:21:15] <mikesherov> 9945 is fixed for sure
[09:21:18] <DaveMethvin> i think  you have edit on the doc
[09:21:46] <mikesherov> but there is no way in any browser or standard to get the pixel value of a disconnected (or hidden child) node that is specified in percent
[09:21:50] <mikesherov> I do not
[09:21:56] <mikesherov> or I would have done it :-)
[09:22:05] <DaveMethvin> yeah that one is a wontfix
[09:22:08] <DaveMethvin> cantfix
[09:22:24] <mikesherov> well, read the comment I posted
[09:22:40] <mikesherov> currently, we blindly translate 94% to 94px
[09:22:53] <DaveMethvin> which is clearly wrong
[09:22:59] <mikesherov> right
[09:23:17] <mikesherov> I was saying we should blank it out to undefined in that case
[09:23:33] <DaveMethvin> people are always asking for impossible things ... i mean, percentage of something that isn't there? i agree undefined seems right
[09:23:48] <DaveMethvin> but to me that's not a voting thing unless you think it's controversial
[09:23:52] <mikesherov> well, sure, they are asking for impossible things
[09:24:07] <mikesherov> I don't really know if it's a voting thing as much as it's a discussion thing
[09:24:24] <mikesherov> well, maybe it is controversial then
[09:24:33] <mikesherov> I mean, maybe we want to say "needsdocs"
[09:24:37] <mikesherov> or wontfix
[09:24:40] <DaveMethvin> for non-strategic things it's always an option to just discuss with a few people here
[09:24:45] <mikesherov> or do the undefined thing
[09:24:50] <mikesherov> OK, that's fine too
[09:24:57] <mikesherov> I'm still getting used to the process
[09:25:12] <DaveMethvin> i wouldn't want our strategic discussions about 1.8 to get too bogged down in specific bugs that are corner cases anyway
[09:25:37] <mikesherov> OK
[09:25:47] <DaveMethvin> i think everyone wanted most of those build changes you suggested so we didn't have to vote on those
[09:25:52] <mikesherov> so what about support for vendor prefixes, is that something worth discussing for a vote?
[09:26:02] <mikesherov> g2g
[09:26:16] <DaveMethvin> if it furthers other code or seems like a really good idea, sure
[09:26:38] <DaveMethvin> what depressed me about that list is that its like 85% bloat-creating suggestions
[09:26:56] <DaveMethvin> "add cookies, MVC, underscore methods, other crazy crap"
[09:28:14] <DaveMethvin> so mikesherov a lot of people are still suggesting a download builder but i don't see how that solves any problem
[09:28:25] <DaveMethvin> unless of course we added cookies, MVC, underscore methods, other crazy crap
[09:28:33] <DaveMethvin> in which case people would want to remove them
[09:29:33] <DaveMethvin> row 99 is doable today if you insert your own sizzle replacement and edit the linkages
[09:30:04] <DaveMethvin> perhaps we can just add some comments and/or docs describing how to do that
[10:24:32] <lark> dang julian isn't around
[10:24:40] <lark> has he been joining at all lately?
[10:29:44] <tombranton> well i guess its lazy sunday, can't expect peeps to be around ^_^
[14:18:39] -hubbard.freenode.net- [freenode-info] why register and identify? your IRC nick is how people know you. http://freenode.net/faq.shtml#nicksetup
[16:21:05] <tombranton> hey guys https://github.com/documentcloud/backbone/issues/779#issuecomment-3100068
[16:21:06] <socialhapy> ★ Issue #779 on backbone, reported by forresto (14h, 26m ago): specific bug with jqueryui resizestop not firing
[16:21:33] <tombranton> looks like an issue with delegate
[16:21:39] <tombranton> if he can be believed
[19:10:33] <mikesherov> github is back up
[19:13:09] <danheberden> quick, lemme start up LOIC
[19:20:39] <gnarf> :/ no davemethvin
[19:20:57] <mikesherov> davemethvin and timmywil are the holders of all the keys
[19:21:03] <mikesherov> I'm itching to edit that 1.8 doc
[19:21:23] <gnarf> which one?
[19:21:25] <gnarf> the votes one?
[19:21:59] <mikesherov> the votes one?
[19:22:05] <mikesherov> I didn't even see a votes one
[19:22:14] <mikesherov> I only have this: https://docs.google.com/spreadsheet/ccc?key=0Aj5JJFjq9rZDdG5KU29qUGJ2VGp0ZDlGSUZieVJxV3c#gid=0
[19:22:52] <gnarf> whats your gmail?
[19:23:05] <mikesherov> mike.sherov@gmail.com
[19:23:16] <gnarf> there
[19:23:32] <gnarf> not sure why you'd want to edit it
[19:23:35] <gnarf> but you've got edit now
[19:23:43] <gnarf> are you not on the bugs-team mailing list?
[19:23:49] <mikesherov> Um
[19:23:51] <gnarf> might wanna bug the admins for that ;)
[19:24:05] <gnarf> or make sure your google account is on the bugs-team
[19:24:21] <gnarf> or that your email that is on bugs-team is listed as an alternate email for your google acct
[19:24:37] <mikesherov> I'm on the ML for the one about closure compiler
[19:24:42] <mikesherov> is that bugs team?
[19:25:07] <gnarf> don't think so
[19:25:13] <gnarf> lemme check
[19:25:18] <mikesherov> [jquery-bugs-team]
[19:25:23] <mikesherov> yeah, I'm on it
[19:25:26] <gnarf> is your g-mail on it?
[19:25:31] <mikesherov> yes
[19:25:39] <gnarf> then you should of had edit for that document before i just now shared it to you
[19:25:59] <mikesherov> nope
[19:26:05] <mikesherov> and I still don't have edit
[19:26:21] <gnarf> http://cl.ly/3Z2E1y2a0A2f352n002I
[19:26:25] <mikesherov> oh wait
[19:26:26] <gnarf> then you aren't logged in on your goog account
[19:26:28] <mikesherov> there it goes
[19:26:41] <mikesherov> yeah, ::facepalm::
[19:26:42] <danheberden> twss
[19:26:51] <mikesherov> LOL
[19:27:54] <ajpiano> this 'summary' column is awesome
[19:28:04] <mikesherov> yes
[19:28:05] <mikesherov> amazing
[19:28:15] <mikesherov> make jquery smaller... somehow
[19:31:35] <mikesherov> gnarf: what do you think about row 2
[19:31:39] <mikesherov> that was my suggestion
[19:32:03] <mikesherov> docs?10782
[19:32:13] <mikesherov> ?10782
[19:32:15] <danheberden> mikesherov "jQuery - the honest library™"
[19:32:15] <bot-t> [#10782] Incorrect calculating width (assigned bug) - http://jqbug.com/10782
[19:32:53] <gnarf> mikesherov: i'd lean towards returning 0
[19:33:03] <mikesherov> well, 0 is a definitive answer
[19:33:07] <gnarf> but yeah
[19:33:08] <gnarf> that
[19:33:12] <mikesherov> something could have width 0
[19:33:57] <mikesherov> I mean, can return null, undefined, NaN, -1, whatever you want as long as it's not a non-negative number
[19:34:18] <mikesherov> anything but zero, or the wrong positive number
[19:34:30] <danheberden> how about the string "oh snap"
[19:34:45] <mikesherov> LOL
[19:34:55] <mikesherov> i'd be fine with that too as long as it's documented
[19:35:07] <mikesherov> how about the string "http://jqbug.com/10782"
[19:35:09] <mikesherov> LOL
[19:36:29] <gnarf> its a pretty huge BC break tho
[19:36:39] <gnarf> but i mean its a huge BC break in a buggy section of code
[19:36:57] <gnarf> its one of those things that would be REALLY nice to fix
[19:37:16] <danheberden> we just need a noOldShit() mode
[19:37:30] <mikesherov> it
[19:37:36] <mikesherov> it's not a breaking change
[19:37:38] <mikesherov> is it?
[19:37:50] <mikesherov> I mean, it was giving the wrong answer before
[19:37:51] <gnarf> mikesherov: width() returning anything other than a number is a breaking change imo
[19:37:57] <mikesherov> oh, fine
[19:38:11] <gnarf> -Infinity
[19:38:13] <gnarf> ;)
[19:38:34] <mikesherov> returning 94 for 94% is buggier, no?
[19:38:58] <gnarf> mikesherov: possibly, but at least someone doing .width() + 10 wont be like WTF NAN
[19:39:08] <gnarf> everything broke!
[19:39:21] <gnarf> but if they were doing that on a hidden elem anyway, they should prolly get shot
[19:39:36] <mikesherov> I mean, think of it this way
[19:39:46] <mikesherov> if width() was 94px
[19:39:52] <mikesherov> sorry
[19:40:20] <mikesherov> if it was 94%, and the user was grabbing that value, and then adding something to it, and setting the value back in
[19:40:36] <mikesherov> we want them to stop dead in their tracks, no?
[19:40:37] <gnarf> yeah, its buggy on hidden elems
[19:40:45] <gnarf> and we document that
[19:40:52] <gnarf> don't we?
[19:40:52] <mikesherov> sure
[19:40:56] <mikesherov> I don't know
[19:40:59] <gnarf> if we don't we should
[19:41:00] <mikesherov> I don't think so
[19:41:11] <mikesherov> think about this:
[19:41:11] <gnarf> like .offset() is pretty clear about not working on hidden elems
[19:41:16] <mikesherov> which looks more like a bug
[19:41:43] <mikesherov> $(elem).width() + 10 === 10
[19:41:56] <mikesherov> on $(elem).width() + 10 === NaN
[19:41:57] <paul_irish> related, but offtopic question... does jQuery break to fuck if you do * { box-sizing: border-box; }   ?
[19:41:59] <mikesherov> or*
[19:42:10] <mikesherov> paul_irish:
[19:42:16] <mikesherov> paul_irish: I have a fix for that
[19:42:38] <paul_irish> o rly
[19:42:43] <mikesherov> it only breaks to fuck on super corner cases: http://bugs.jquery.com/ticket/10413
[19:43:12] <gnarf> jquery.debug.js: (function( $, oldWidth ) { $.fn.width = function( setter ) { if (!setter && this.is(":hidden")) throw "You suck!"; return oldWidth.apply( this, arguments ); }; })( jQuery, jQuery.fn.width );
[19:43:53] <mikesherov> paul_irish: because as long as we can make the element visible somehow, we rely on offsetWidth
[19:44:47] <mikesherov> paul_irish: I also have an open PR for the buggy boxModel detection: https://github.com/jquery/jquery/pull/630
[19:44:47] <socialhapy> ★ Pull request on jquery by mikesherov (1d, 7h ago): fixes #7986, Bug in $.support.boxModel if page has DIV-element CSS
[19:45:44] <mikesherov> paul_irish: and here is the PR that I closed because I needed to rework some stuff, but the basic jist of the fix for border-box is there: https://github.com/jquery/jquery/pull/528
[19:45:44] <socialhapy> ★ Pull request on jquery by mikesherov (2m, 1w ago): make sure box-sizing:border-box children of a hidden div report inner/outer/Width()/Height() correctly, fixes #10413
[19:45:51] <paul_irish> yeah reading that one now
[19:46:20] <mikesherov> so yeah, it's my mission to make css suck as little as possible
[19:46:55] <mikesherov> paul_irish: now that you helped me get webkit fixed.. can you do the same magic on FF: https://bugzilla.mozilla.org/show_bug.cgi?id=381328
[19:47:09] <paul_irish> lets see
[19:47:54] <paul_irish> support.boxModel = document.compatMode === "CSS1Compat";
[19:47:55] <paul_irish> hmm
[19:48:16] <paul_irish> yeah i guess thats fine
[19:48:17] <paul_irish> :)
[19:48:28] <mikesherov> I mean, it's really a proxy anyway
[19:48:33] <mikesherov> if you look how it's used in jQUery
[19:48:53] <mikesherov> and it's my understanding that that's the intention
[19:49:16] <mikesherov> and all the unit tests still pass all the way back to IE6 with the change, unless I missed something
[19:49:34] <paul_irish> right its just assuming that standardsmode means the w3c box model
[19:49:39] <paul_irish> which.. is pretty  much true
[19:49:53] <paul_irish> i dont think its fair to say that quirks mode always means border-box
[19:50:02] <paul_irish> but i dont know that well enough
[19:50:13] <paul_irish> nobody is standardizing all the quirks mode state
[19:50:14] <mikesherov> border-box explicit?
[19:50:25] <mikesherov> border-box is element level
[19:50:43] <mikesherov> http://bugs.jquery.com/ticket/8443 is the inspiration for that mozilla bug, by the way
[19:51:10] <mikesherov> how does modernizr detect w3c box model?
[19:51:26] <paul_irish> we dont
[19:51:36] <paul_irish> i'd go with css1compat probably
[19:51:36] <mikesherov> I'd love a better suggestion than "support.boxModel = document.compatMode === "CSS1Compat";"
[19:51:56] <mikesherov> yeah, I mean, it was elsewhere sprinkled throughout the code
[19:52:00] <mikesherov> I just DRYed it
[19:52:20] <paul_irish> just make a div with 10px width and 10px padding and see if its 30px wide
[19:52:32] <mikesherov> right, which was the old way already
[19:52:34] <paul_irish> not the best choice in numbers.
[19:52:36] <paul_irish> k
[19:52:58] <mikesherov> and then some jackass does: DIV{ margin:800px; display: none;}
[19:53:45] <mikesherov> or: DIV{border:20px;}
[19:54:18] <mikesherov> you end having the set all the css styles explicitly for a DIV that make up the box, including overflow
[19:54:43] <mikesherov> or someone says, like your original question: * { box-sizing: border-box; }
[19:55:00] <mikesherov> so yeah
[19:55:09] <mikesherov> it's like 40-50 bytes
[19:55:52] <mikesherov> much easier to just do CSS1compat
[19:56:43] <mikesherov> that way jQuery never says "oh yeah, this is quirks mode" on chrome with * { box-sizing: border-box; }
[19:58:35] <mikesherov> so, anyway, gnarf
[19:58:54] <mikesherov> wondering what your thoughts are
[19:59:06] <mikesherov> see, I think returning NaN makes a dev stop in their tracks
[19:59:23] <mikesherov> returning 0 makes them go on their merry way
[19:59:32] <mikesherov> but I can do either
[19:59:39] <mikesherov> just trying to get a consensus
[20:00:41] <gnarf> i can see either
[20:00:56] <gnarf> undef might make more sense
[20:01:06] <mikesherov> because 0 is a legit value
[20:01:16] <mikesherov> undef is LITERALLY what it is
[20:01:29] <gnarf> yeah
[20:01:34] <gnarf> thats my thought too
[20:01:41] <gnarf> "i can't tell"
[20:01:44] <gnarf> undefined
[20:02:08] <mikesherov> but I get what you're saying about width always returning a number
[20:02:19] <mikesherov> what happens when you do undefined + 0
[20:02:27] <mikesherov> coerced to int?
[20:02:30] <mikesherov> NaN?
[20:02:46] <mikesherov> in the end, it may not practically matter
[20:05:23] <mikesherov> ?eval undefined + 0
[20:05:24] <bot-t> mikesherov: NaN
[20:05:42] <mikesherov> timmywil: what do you think:
[20:05:59] <mikesherov> ?10786
[20:06:01] <bot-t> [#10786] Width is inconsistant with node isn't in the document (closed bug: cantfix) - http://jqbug.com/10786
[20:06:05] <mikesherov> oops
[20:06:14] <mikesherov> ?10782
[20:06:16] <bot-t> [#10782] Incorrect calculating width (assigned bug) - http://jqbug.com/10782
[20:06:20] <mikesherov> that's better
[20:06:47] <mikesherov> when jQuery returns 94% on a disconnected node and it's returned as 94
[20:06:52] <mikesherov> which implies px
[20:06:57] <timmywil> i'll let you know in the morning :)
[20:07:02] <mikesherov> k
[20:07:38] <mikesherov> gnarf and I were discussing whether 0 or undefined was a better choice to return
[20:07:46] <mikesherov> sleep on it
[20:18:48] <mikesherov> .
[20:24:57] <mikesherov> rwaldron: I have a gist for prebuild JSHinting
[20:25:21] <mikesherov> I haven't modified the Makefile yet, but I do have the code for jshint-check.js
[20:25:41] <mikesherov> NVM
[20:50:03] <mikesherov> .
[20:51:11] <gnarf> !
[20:54:29] <mikesherov> ?
[21:12:33] <rwaldron> mikesherov: hey dude
[21:12:41] <rwaldron> so, i already have all that written
[21:12:41] <mikesherov> yo
[21:12:46] <mikesherov> ok, NP
[21:12:55] <rwaldron> but shoot me the link anyway
[21:13:05] <rwaldron> maybe theres good ideas that i can roll in
[21:13:50] <mikesherov> https://gist.github.com/1465088
[21:13:56] <mikesherov> good idea? I doubt I have them
[21:13:59] <mikesherov> :-P
[21:14:48] <mikesherov> mine has two new options enabled too
[21:14:59] <mikesherov> noarg:true, nonew: true
[21:15:15] <gnarf> mikesherov: yer in node, i believe [].forEach is totally save btws :)
[21:15:22] <gnarf> er safe
[21:15:23] <mikesherov> prevents arguments.caller and arguments.callee, and using new for side effects
[21:15:45] <mikesherov> it's based off of Rick's PR
[21:16:06] <mikesherov> also got rid of selector.js and checking sizzle
[21:16:15] <mikesherov> because you know, sizzle should do that itself?
[21:16:25] <mikesherov> can always add it back in
[21:16:30] <rwaldron> well, that i agree with
[21:17:00] <mikesherov> also, for the record, we'll never pass onevar unless we do prebuild checking
[21:17:18] <mikesherov> (if that's something we want)
[21:17:38] <mikesherov> post build, there are more than one var statements at the top level
[21:17:42] <mikesherov> from the build process
[21:17:55] <gnarf> if only there were some way to take the var statements and jam em all together
[21:18:05] <rwaldron> i'm being assaulted by a french bulldog
[21:18:07] <mikesherov> IF ONLY
[21:18:13] <rwaldron> he keeps trying to bite my hand
[21:18:17] <rwaldron> jerk.
[21:18:23] <gnarf> do you feed him?
[21:18:24] <mikesherov> my cat is trying to sit on my keyboard
[21:18:27] <gnarf> cuz like thats totally wrong
[21:18:36] <rwaldron> gnarf he's a puppy
[21:18:47] <rwaldron> he's only just now learning that he can't do tat
[21:18:51] <rwaldron> that*
[21:19:04] <rwaldron> he thinks we're playing
[21:19:08] <rwaldron> :\
[21:19:13] <rwaldron> anyway
[21:19:24] <rwaldron> mikesherov i want to do pre and post build
[21:19:29] <rwaldron> which is what i have
[21:19:33] <mikesherov> oh, interesting
[21:19:38] <mikesherov> onevar will never pass then
[21:19:41] <gnarf> you could like prebuild onevar
[21:19:46] <gnarf> but postbuild not care
[21:19:47] <mikesherov> and not on postbuild
[21:19:48] <rwaldron> i also put the list of files and config in a json file
[21:19:57] <mikesherov> rwaldron, good
[21:20:05] <rwaldron> exactly what gnarf said
[21:20:15] <rwaldron> not that i had thought of that
[21:20:19] <mikesherov> would love to have a central source of files for build
[21:20:23] <rwaldron> but this does allow for two different configs
[21:20:25] <rwaldron> so, win
[21:20:30] <rwaldron> nice one gnarf :)
[21:20:30] <mikesherov> I would love that json file for PHP unit testing
[21:20:53] <mikesherov> so that way I can generate a built version of jQuery off the same json file
[21:21:00] <rwaldron> well, you'll have all you can handle
[21:21:04] <mikesherov> by concatting them in PHP
[21:21:07] <rwaldron> or something...
[21:21:15] <gnarf> mikesherov: except sizzle will miss
[21:21:17] <gnarf> right?
[21:21:24] <mikesherov> sizzle will miss?
[21:21:31] <gnarf> well wont be in that json
[21:21:36] <mikesherov> well, we can make the config file as robust as we want
[21:22:07] <mikesherov> I was thinking there should be one place that is the authority on how to build jquery
[21:22:20] <mikesherov> including which files to check pre and post build
[21:22:31] <mikesherov> and I'm not sure how the Makefile could use it
[21:22:46] <rwaldron> not sure either
[21:22:55] <rwaldron> there are a few jam ups
[21:23:02] <rwaldron> 1. i want to colorize output
[21:23:08] <gnarf> `node filelist.js < whatever.json`
[21:23:08] <mikesherov> but potentially, have the Makefile, JSHint, and unit tests all use the same file for how to build a complete jQUery
[21:23:19] <rwaldron> which means you really need actual node with npm support
[21:23:34] <mikesherov> right, we could have the MakeFile execute a node.js concatter
[21:23:45] <rwaldron> unless we dont mind node_modules
[21:23:57] <mikesherov> I dunno, it seems like you need it anyway
[21:24:00] <rwaldron> which apparently has become the "best practice"
[21:24:10] <rwaldron> as of like... last week
[21:24:13] <mikesherov> if you really want to build jQuery, you need the sizer, and the hinter...
[21:24:19] <rwaldron> agreed
[21:24:23] <mikesherov> all of which are node anyway
[21:24:40] <rwaldron> if you want to build and actually land code
[21:24:45] <mikesherov> yeah
[21:24:49] <mikesherov> and for the minifier
[21:24:58] <mikesherov> fuck using stupid shell commands to concat
[21:24:59] <rwaldron> +9001 to gnarf raising the bar with sizer stuff
[21:25:00] <gnarf> now we just need a jQuery coding standards checker
[21:25:03] <mikesherov> single source of truth
[21:25:07] <rwaldron> that is incredibly useful
[21:25:14] <mikesherov> I'll say it again
[21:25:17] <gnarf> hey - sizer just made sense
[21:25:25] <mikesherov> I think our style guide is too complicated
[21:25:37] <mikesherov> we should honestly run a beautifier
[21:25:44] <rwaldron> mikesherov once you get used to it, it's not really
[21:25:59] <mikesherov> aren't you tired, Rick, of correcting people's commits with white space nits?
[21:26:05] <gnarf> i rarely make style faux paux anymore
[21:26:11] <rwaldron> but i'm not opposed to a modified beautifier
[21:26:12] <mikesherov> I'm getting better
[21:26:30] <rwaldron> mostly those pople have just neer read the style guide
[21:26:31] <mikesherov> but I'd say, if a tool can't do it, it's not optimal
[21:26:34] <rwaldron> never*
[21:26:54] <mikesherov> yeah, even still, wouldn't it be great if davemethvin just ran every landing through the styler
[21:27:00] <mikesherov> and that be the end of it
[21:27:06] <mikesherov> you waste so many cycles on that
[21:27:13] <gnarf> mikesherov: a tool could totally do our style guide - just none of them do
[21:27:19] <rwaldron> ^^^^
[21:27:22] * rwaldron nods
[21:27:24] <mikesherov> CHALLENGE ACCEPTED
[21:27:44] <mikesherov> point me to an open source one, and I'll mod it for us
[21:27:48] <rwaldron> start with whatever jsfiddle uses
[21:27:55] <gnarf> mikesherov: i believe uglify has a beautify
[21:27:59] <mikesherov> great
[21:28:04] <rwaldron> and modify some whitespace rules
[21:28:05] <mikesherov> it does
[21:28:09] <gnarf> so like the codes already in the repo
[21:28:10] <rwaldron> i'm sure it's not that hard
[21:28:17] <mikesherov> yeah, easy enough
[21:28:28] <mikesherov> I just don't want you wasting that precious brainpower on picking nits
[21:28:37] <rwaldron> i enjoy it
[21:28:44] <mikesherov> well, in that case, fine
[21:28:50] * rwaldron shrugs
[21:28:51] <mikesherov> I don't want to take your joy away
[21:28:56] <gnarf> i wish it were easier to like "review and edit" a commit on github
[21:28:56] <rwaldron> naw dude
[21:29:00] <rwaldron> make the tool
[21:29:07] <mikesherov> it just seems like a robot could do it
[21:29:15] <mikesherov> SHOULD
[21:29:20] <mikesherov> bot-t: what do you think?
[21:29:21] <bot-t> mikesherov, Don't count on it.
[21:29:21] <gnarf> like if rwaldrons "whitespace pass" could actually be automagically turned into a pull request on the pull request
[21:29:24] <gnarf> that would be the shit
[21:29:25] <rwaldron> I'll evangelize the shit out of it
[21:29:38] <mikesherov> gnarf, it can
[21:29:42] <mikesherov> where did I see it
[21:29:53] <rwaldron> ok dudes
[21:29:58] <mikesherov> there is this github bot that goes around submitting whitespace pull requests
[21:30:00] <rwaldron> i'm gonna head out
[21:30:04] <mikesherov> night rick
[21:30:25] <mikesherov> fuck using stupid shell commands to build
[21:30:28] <mikesherov> oops
[21:30:35] <mikesherov> https://github.com/Miserlou/WhitespaceBot
[21:31:09] <mikesherov> we could easily hack that
[21:31:33] <mikesherov> once a day, it'll run a scan of the jquery pull requests, and pull request them!
[21:31:43] <mikesherov> SO META
[21:32:13] <mikesherov> a github bot that scans github pull requests so it can submitt github pull requests on the pull requests
[21:47:11] <gnarf> a bot that scans PRs made by the bot and posts them on twitter so another bot can read them and put it in your irc channel
