[09:19:59] <infusi0n> Hi, I was hanging around on #jquery-dev for a while but mostly inactive. I've just published v1.8 of my xcolor plugin ( http://www.xarg.org/project/jquery-color-plugin-xcolor/ ) and v1.0 of my paging plugin ( http://www.xarg.org/2011/09/jquery-pagination-revised/ ). I now have 3 things I want to ask and clarify with you.
[09:21:19] <Krinkle> http://jqfundamentals.com/ is down
[09:21:26] <Krinkle> at least everything except for index.html
[09:21:32] <Krinkle> 404 error all over
[09:21:51] <infusi0n> 1. What do you think about changing the animate() function to support arrays for the embedded values. For my xcolor lib, i made it possible to animate over a list of colors, implemented as CSV atm. Having this as array would open some more syntacticly gimmickry. However, arrays are used for another feature atm. Or do you prefer the API for BC purposes?
[09:22:36] <infusi0n> 2. What do you think about adding an array syntax for slice(). At the moment two parameters are used to bind the slice. Additionally, I would be glad to see something like this: slice([a, b]), instead of slice(a, b). My Paging plugin passes an array of two elements in a callback, which can be used as slice. Using the array syntax would simplify such cases.
[09:23:34] <infusi0n> 3. jQuery is a really cool and robust piece of code, but there are many plugins around which don't have that quality. On the net you can find exactly this as jquery criticism, because everybody can create plugins for any purpose. What about adding verified plugins on jquery.com, which get promoted more aggressive than other plugins.
[09:26:55] <infusi0n> for 2: "special purpose" = specialEasing addition
[12:42:07] <Krinkle> infusi0n: 1: dunno, 2: slice is a native function that originates from Array, other scripts also have similar functions. The syntax should not be different, it's a standard, 3) There are in fact jquery plugins promoted on jquery.com and some are maintained in the jquery repository
[12:43:34] <Krinkle> infusi0n: 2: If you have [a,b] and want to call foo.slice(a,b) you can use .apply to map the array to function arguments. Example: foo.slice.apply([a,b])
[12:46:15] <infusi0n> Krinkle, i know. i added an example to my site using apply(), too...but i thought it would also be handy allowing arrays
[12:46:41] <Krinkle> infusi0n: prolly continue in #jquery :)
[12:47:38] <darkh> Krinkle: are you one of the jquery developers?
[12:49:02] <Krinkle> I'm not on the jquery-core team, no. But I'm very comfortable with it's source and am member of the jQuery testing team and developer in jquery-testswarm since a month.
[12:50:18] <darkh> hm ok. i found some workaround for a problem with khtml, maybe you can confirm that my workaround at least partly fixes a problem?
[12:51:45] <Krinkle> ok ?
[12:53:19] <darkh> with khtml it is not possible to drag the ui dialog, while normal dragging example works... i found out when using an csshook with setting position temporarily to fixed, draging works with dialog
[12:54:35] <darkh> but it seems to have some other side effects... i tested it with owncloud and ownclouds list of files does not work correctly anymore with my workaround while draging problem of ui dialog is fixed :/
[12:55:43] <darkh> i tested the workaround with jquery 1.6.2
[13:21:28] <dabear> khtml? is that something you really wanna support?
[13:22:07] <darkh> why not?
[13:24:29] <dabear> liek konq is the only browser using it?
[18:13:40] <atrigent> hey guys, would it be reasonable for jQuery.clean to recurse when it finds an array?
[18:14:12] <atrigent> it'd be nice to be able to pass an array of things to append, for example
[18:20:53] <atrigent> or maybe it should be done further up, like in buildFragment or domManip
[18:21:36] <atrigent> hmm no that would only work if it was a 2d array...
[18:21:43] <atrigent> well...
[18:22:00] <atrigent> I guess if we had a flatten method
[18:22:36] <atrigent> could probably be done with $.map as well
[19:09:50] * rwaldron #broQuery
[19:10:01] <rwaldron> pfft.
[19:10:05] <rwaldron> why do i bother
[19:12:18] <michaeldeol> <3
