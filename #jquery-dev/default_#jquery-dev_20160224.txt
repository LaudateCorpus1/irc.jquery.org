[04:10:33] <m_gol> gnarf: I don't think we decreased compatibility in 1.12.0 :)
[05:46:29] <doesallmagic2> Project jQuery Migrate 3.x build #12: STILL FAILING in 8 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%203.x/12/
[05:46:30] <doesallmagic2> m.goleb: Build: Update jQueries & jQuery Migrates
[05:46:35] <jqcommit> [13jquery-migrate] 15mgol pushed 1 new commit to 06master: 02https://git.io/v2CGN
[05:46:35] <jqcommit> 13jquery-migrate/06master 147bebbde 15MichaÅ‚ GoÅ‚Ä™biowski: Build: Update jQueries & jQuery Migrates
[05:48:40] <jqcommit> [13jquery-migrate] 15mgol pushed 1 new commit to 061.x-stable: 02https://git.io/v2CZ3
[05:48:40] <jqcommit> 13jquery-migrate/061.x-stable 14d542e5b 15MichaÅ‚ GoÅ‚Ä™biowski: Build: Update jQueries & jQuery Migrates
[05:52:25] <doesallmagic2> Yippee, build fixed!
[05:52:25] <doesallmagic2> Project jQuery Migrate 1.x Core 1.x build #433: FIXED in 3 min 57 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%201.x%20Core%201.x/433/
[05:52:26] <doesallmagic2> m.goleb: Build: Update jQueries & jQuery Migrates
[06:05:51] <doesallmagic2> Project jQuery Migrate 1.x Core 2.x build #236: SUCCESS in 13 min: http://jenkins.jquery.com/job/jQuery%20Migrate%201.x%20Core%202.x/236/
[06:05:51] <doesallmagic2> m.goleb: Build: Update jQueries & jQuery Migrates
[06:10:38] <doesallmagic2> Yippee, build fixed!
[06:10:38] <doesallmagic2> Project jQuery Migrate 3.x build #13: FIXED in 4 min 46 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%203.x/13/
[06:36:39] <jqcommit> [13jquery] 15wangwy opened issue #2944: init.prototye nested loop 02https://git.io/v2CRK
[06:56:28] <jqcommit> [13jquery] 15mgol closed issue #2944: init.prototye nested loop 02https://git.io/v2CRK
[07:09:56] <jqcommit> [13jquery] 15bertez opened issue #2945: jquery 2.2.1 breaks webpack builds when loading individual modules 02https://git.io/v2Czz
[07:23:06] <jqcommit> [13jquery] 15mgol reopened issue #2941: $.parseHTML() is broken in 1.12.0 and 1.12.1 for Chrome 02https://git.io/v2sLE
[08:28:57] <jqcommit> [13jquery] 15mgol closed pull request #2869: #2700 negative border and padding tests (06master...06num_2700) 02https://git.io/vzPh6
[08:30:41] <m_gol> I was afraid something like that would happen when I saw the Sizzle path commit was backported to 1.x/2.x: https://github.com/jquery/jquery/issues/2945
[08:34:51] <m_gol> DaveMethvin timmywil: it seems we might need to release 1.12.2/2.2.2
[08:35:00] <DaveMethvin> yeah
[08:35:12] <DaveMethvin> i'm as worried about that HTML serializing bug
[08:35:33] <m_gol> also, https://github.com/jquery/jquery/issues/2945
[08:35:35] <DaveMethvin> not even sure we can keep some of that in 3.0 if it stays broken
[08:35:47] <m_gol> the Chrome bug has an interesting discussion
[08:36:03] <DaveMethvin> yeah, glad you found that ticket
[08:36:19] <m_gol> basically, the href property resolves relatively to the current document location and document.implementation-created ones don't share it with the main document
[08:36:27] <DaveMethvin> it makes sense but that completely messes up our ability to use the trick
[08:36:32] <doesallmagic2> Project jQuery Core build #1548: STILL UNSTABLE in 7 min 50 sec: http://jenkins.jquery.com/job/jQuery%20Core/1548/
[08:36:33] <doesallmagic2> m.goleb: Dimensions: Add tests for negative borders & paddings
[08:37:06] <m_gol> it'd be simpler if we just needed it internally as we copy the nodes to an element in the current document but we also expose $.parseHTML
[08:38:22] <m_gol> I created the 1.12.2/2.2.2 milestone and assigned the Webpack ticket to it; we can always remove later but I don't think we'll avoid the next patch update
[08:38:33] <DaveMethvin> yeah, i think we'll need it
[08:39:58] <m_gol> I'd like some Chrome folks to voice an opinion on the jQuery use of this API before we patch it around (cc paul_irish)
[08:40:34] <doesallmagic2> Project jQuery Migrate 3.x build #14: FAILURE in 7.9 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%203.x/14/
[08:40:35] <doesallmagic2> Dave Methvin: Build: Fix release script
[08:40:37] <jqcommit> [13jquery-migrate] 15dmethvin pushed 1 new commit to 06master: 02https://git.io/v2Cy8
[08:40:37] <jqcommit> 13jquery-migrate/06master 141f53f8e 15Dave Methvin: Build: Fix release script...
[08:41:15] <DaveMethvin> well that was dumb
[08:44:32] <jqcommit> [13jquery-migrate] 15dmethvin pushed 1 new commit to 06master: 02https://git.io/v2Cyj
[08:44:32] <jqcommit> 13jquery-migrate/06master 14b645fb3 15Dave Methvin: Build: Make line shorter for JSCS
[08:45:38] <doesallmagic2> Yippee, build fixed!
[08:45:38] <doesallmagic2> Project jQuery Migrate 3.x build #15: FIXED in 1 min 22 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%203.x/15/
[08:45:39] <doesallmagic2> Dave Methvin: Build: Make line shorter for JSCS
[08:46:04] <m_gol> btw, DaveMethvin, the Migrate jenkins build was broken on master and wasn't even getting to swarm ;)
[08:46:07] <m_gol> I fixed it
[08:46:35] <DaveMethvin> Thanks! I hadn't pushed anything in a while so i hadn't noticed
[08:53:25] <m_gol> DaveMethvin: the task name on Jenkins wasn't updated after markelog's refactoring
[08:55:39] <DaveMethvin> i have to cherry pick a few things back to the migrate 1.x branch (including the build script!) so i can do a release tomorrow
[08:56:00] <m_gol> DaveMethvin: the markelog's build script or sth else?
[08:56:14] <DaveMethvin> no i don't think i'll back port all that
[08:56:21] <m_gol> ok, makes sense :)
[08:56:43] <DaveMethvin> it's good to have, but i am hoping we're almost done with 1.x changes
[08:56:45] <m_gol> I've temporarily disabled Periodic tasks for Core 1 & 2 but I've restored it now that we'll most likely need new releases
[08:57:18] <DaveMethvin> m_gol: what are your thoughts on having the console message in the 1.x branch? I hesitate to add it to a patch release and was thinking this upcoming one was 1.3.1
[08:57:41] <m_gol> I think console messages are fine but I wouldn't like them introduced in a patch release tbh
[08:58:06] <m_gol> but we can always release it as 1.4.0, can't we? semver means we shouldn't worry so much about bumping the minor
[08:58:35] <m_gol> even Node LTS with a security fix and one little change that added a flag (i.e. a new feature) bumped the version from 4.2.1 to 4.3.0
[08:58:40] <DaveMethvin> yeah, it could be 1.4.0
[08:59:04] <DaveMethvin> they really had to think hard on that though, it broke a bunch of stuff
[08:59:12] <DaveMethvin> it was security vs being true to semver
[08:59:23] <m_gol> right
[09:00:12] <m_gol> a "true" semver lives in an ideal world where spherical cows spinning at a constant speed give milk in regular intervals :)
[09:00:30] <DaveMethvin> it's a tiny change, just remove the first condition here and make the message a bit more specific https://github.com/jquery/jquery-migrate/blob/master/src/migrate.js#L11-L13
[09:00:34] <m_gol> as for the <a> href issue... I wonder if we should e.g. use an internal parseHTML that's different from the public one
[09:00:45] <m_gol> any such fix would be risky in a patch release, though...
[09:00:49] <DaveMethvin> defniitely
[09:01:06] <m_gol> fortunately it only seems to affect direct $.parseHTML uses
[09:01:17] <DaveMethvin> the reason that change was made was to avoid executing inline handlers 
[09:01:34] <DaveMethvin> but for most uses we end up appending to the doc and they run anyway
[09:01:49] <DaveMethvin> so it required the user to do more than most users will ever do
[09:03:15] <m_gol> right
[09:03:41] <m_gol> I wonder if that's not a breaking change then
[09:03:59] <DaveMethvin> it's certainly breaking Chrome :)
[09:04:05] <m_gol> I'd still like to do it but maybe it was a mistake to backport to 1.x/2.x
[09:04:12] <m_gol> well, it's already happened
[09:04:12] <DaveMethvin> in retrospect yeah
[09:04:24] <DaveMethvin> although would the current behavior be okay for 3.0 even?
[09:04:32] <DaveMethvin> seems inconsistent
[09:04:59] <DaveMethvin> i guess we could document it
[09:05:33] <m_gol> from the Chrome issue it seems the implementors are not even sure what the spec says :-)
[09:05:52] <m_gol> can we do sth to bump https://bugs.chromium.org/p/chromium/issues/detail?id=568886 importance considering it affects jQuery?
[09:06:07] <DaveMethvin> my preference would be for the property to be the same as the href attribute if they don't have a document base
[09:14:29] <m_gol> DaveMethvin: actually, we have 3 outcomes. Chrome returns an empty string, Firefox, Safari & Android Browser print test.html and IE/Edge print an absolute URL
[09:15:09] <DaveMethvin> yeah and it seems the spec wants a third thing that nobody does :)
[09:15:20] <DaveMethvin> i think Chrome and IE should change
[09:15:27] <m_gol> the thing is, once you go through a jQuery API, i.e. wrap it in a jQuery object and use .prop('href'), it works
[09:15:46] <DaveMethvin> yeah it's just parseHTML
[09:16:03] <m_gol> and if you use bare APIs your
[09:16:08] <m_gol> * you're on your own
[09:16:15] <m_gol> since we can't apply any hooks etc.
[09:16:26] <m_gol> so I'm not sure if we need to do anything about it
[09:16:28] <DaveMethvin> i suppose we could look at it that way
[09:16:46] <DaveMethvin> not sure who's using this directly
[09:17:49] <m_gol> no, sorry, it doesn't work
[09:18:01] <m_gol> $(jQuery.parseHTML('<a href="test.html"></a>')).prop('href'); // still an empty string in Chrome
[09:18:19] <DaveMethvin> if you attach to a document tho it works right?
[09:18:21] <m_gol> only $('<a href="test.html"></a>').prop('href') works
[09:18:35] <m_gol> let me see
[09:18:56] <m_gol> yeah
[09:19:00] <m_gol> as it adopts nodes then
[09:19:04] <DaveMethvin> right
[09:19:06] <m_gol> $(jQuery.parseHTML('<a href="test.html"></a>')).appendTo(document.body).prop('href'); // works everywhere!
[09:19:13] <DaveMethvin> that's the code i added in jsdom
[09:19:27] <DaveMethvin> as it didn't have adoptNode
[09:21:27] <m_gol> yeah
[09:21:33] <DaveMethvin> imma ask vmagic why they are using the href property on that ticket
[09:21:50] <m_gol> we still only test on jsdom version that doesn't work ;-D I need to fix that
[09:22:03] <DaveMethvin> the original example of stringifying the link seemed contrived
[09:22:09] <DaveMethvin> so i wonder what exactly they are doing
[09:22:24] <m_gol> their new test case uses the property, not the whole object
[09:22:37] <DaveMethvin> right
[09:22:54] <m_gol> I edited the original post (with a note) as it seemed their intention that the href attribute has a problem, not a stringification
[09:23:32] <DaveMethvin> oh wait a minute
[09:24:24] <DaveMethvin> parseHTML(string, document)
[09:24:34] <DaveMethvin> if you add a context to parseHTML it works
[09:24:39] <DaveMethvin> and that makese sense
[09:24:59] <DaveMethvin> if you want the href property which is relative to the document, it helps to give it a document
[09:25:26] <DaveMethvin> so maybe this is a docs issue
[09:31:53] <DaveMethvin> hmm, the docs say that the default is `document` but parseHTML behaves differerently if you give it explicitly so that isn't quite right.
[09:32:59] <DaveMethvin> oh since it only uses createHTMLDocument if context is falsy
[09:33:33] <DaveMethvin> yeah that's a pretty big difference potentially
[09:33:49] <DaveMethvin> anyway, gotta run
[09:53:53] <m_gol> yeah, so this might be considered a breaking change as we used to ensure the default is current document
[10:10:07] <jqcommit> [13api.jquery.com] 15RandallFlagg opened issue #894: The ':first' and 'first()' documantations are confusing 02https://git.io/v2WUW
[10:21:53] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 061.12-stable: 02https://git.io/v2WLc
[10:21:53] <jqcommit> 13jquery/061.12-stable 14ed94387 15Timmy Willison: Release: include external/sizzle in releases...
[10:22:13] <m_gol> timmywil: ping
[10:22:33] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02https://git.io/v2WL0
[10:22:33] <jqcommit> 13jquery/06master 148a91f84 15Timmy Willison: Release: include external/sizzle in releases...
[10:22:42] <timmywil> m_gol: pong
[10:23:02] <m_gol> timmywil: what do you mean by releasing the patch to npm for 1.12.1/2.2.1?
[10:23:17] <m_gol> it's not possible to re-publish the same version, it has to be a new one
[10:23:18] <timmywil> all that's needed is an addition to the package
[10:23:30] <timmywil> it's possible, just not traditional
[10:23:35] <m_gol> how so?
[10:23:44] <m_gol> --force has been forbidden by npm for a looong time
[10:24:06] <timmywil> unpublish && publish
[10:25:56] <m_gol> timmywil: nope, not going to work
[10:26:04] <timmywil> why not?
[10:26:07] <m_gol> this is physically not possible now
[10:26:13] <m_gol> it's been forbidden by npm
[10:26:27] <jqcommit> [13qunit] 15leobalter closed issue #926: Run tests in random order 02https://git.io/vgk9y
[10:26:27] <m_gol> specifically so that packages don't change for people
[10:26:27] <timmywil> unpublish is forbidden?
[10:26:35] <m_gol> unpublish is not forbidde
[10:26:36] <m_gol> n
[10:26:39] <timmywil> why would it still exist
[10:26:46] <m_gol> but it's not possible to publish it under the same version
[10:27:01] <m_gol> it's a security feature by npm
[10:27:21] <timmywil> what does unpublishing mean other than removing the version
[10:27:26] <m_gol> if you install package@1.2.3 you can be 100% sure future npm install doesn't introduce new files or changes that would introduce rogue code, change behavior etc.
[10:27:37] <m_gol> timmywil: npm records what versions were published
[10:27:50] <m_gol> if you unpublish 1.12.1, this version will never exist again
[10:28:05] <m_gol> unpublishing is generally a bad practice unless absolutely necessary
[10:28:21] <m_gol> which is not the case here as we didn't publish files containing security info, under copyright etc.
[10:28:23] <DaveMethvin> > Once a package is published with a given name and version, that specific name and version combination can never be used again, even if it is removed with npm-unpublish. https://docs.npmjs.com/cli/publish
[10:28:29] <m_gol> yup
[10:28:44] <timmywil> yea, just read that.
[10:28:47] <DaveMethvin> whoa good thing  you didn't try unpublishing :)
[10:28:59] <DaveMethvin> i think they made that change last year?
[10:29:02] <DaveMethvin> used to be you could
[10:29:03] <timmywil> well, I would have tested on my repo first
[10:29:19] <timmywil> I have a play package on npm
[10:29:24] <DaveMethvin> but i understand why they won't let a specific version be updated
[10:29:24] <timmywil> I know I've done it before
[10:29:28] <timmywil> but that was a long time ago
[10:29:59] <m_gol> yup, I think it's been forbidden for a year or more
[10:30:19] <m_gol> we may only publish 1.12.2 or 1.12.1+1 or sth like that
[10:30:38] <timmywil> that's a good idea
[10:30:39] <doesallmagic2> Project jQuery Core 1 build #37: STILL UNSTABLE in 8 min 59 sec: http://jenkins.jquery.com/job/jQuery%20Core%201/37/
[10:30:40] <doesallmagic2> Timmy Willison: Release: include external/sizzle in releases
[10:30:41] <timmywil> 1.12.1+1
[10:30:42] <m_gol> if this is the only change we need to make we can try with 1.12.1+1
[10:30:47] <m_gol> we did this once for bower
[10:30:50] <m_gol> 1.8.3+1 or sth
[10:30:52] <timmywil> unless there are actually code changes
[10:31:01] <timmywil> that we need
[10:31:07] <DaveMethvin> how does that match up with version specs?
[10:31:24] <DaveMethvin> will a "1.12.1" match "1.12.1+1" ?
[10:31:41] <timmywil> when installing 1.12.1, you get 1.12.1+1
[10:31:53] <DaveMethvin> ok then, sounds like it's a solution
[10:32:14] <timmywil> need to find the docs on that to make sure it's the right format
[10:33:09] <timmywil> I'll try it on my play package
[10:34:06] <timmywil> actually, even if we do a 1.12.2, 2.2.2, I'd prefer to fix the 1.12.1/2.2.1 package anyway
[10:35:58] <DaveMethvin> m_gol and i were talking about the parseHTML bug upstream, that may require a release but i agree fixing 1.12.1/2.2.1 to add the file is good
[10:37:39] <travis-ci> jquery/qunit#1346 (master - 8b34ee8 Trent Willis): The build passed. - https://travis-ci.org/jquery/qunit/builds/111505437
[10:38:32] <doesallmagic2> Project jQuery Core 2 build #41: NOW UNSTABLE in 7 min 53 sec: http://jenkins.jquery.com/job/jQuery%20Core%202/41/
[10:38:33] <doesallmagic2> Timmy Willison: Release: include external/sizzle in releases
[10:43:07] <timmywil> alright, that seems to work
[10:45:23] <doesallmagic2> Project jQuery Core build #1549: STILL UNSTABLE in 6 min 50 sec: http://jenkins.jquery.com/job/jQuery%20Core/1549/
[10:45:24] <doesallmagic2> Timmy Willison: Release: include external/sizzle in releases
[10:45:52] <doesallmagic2> Project QUnit build #593: SUCCESS in 28 sec: http://jenkins.jquery.com/job/QUnit/593/
[10:50:23] <jqcommit> [13jquery-dist] 15timmywil tagged 061.12.1+1 at 14e409311: 02https://git.io/v2WZZ
[10:50:23] <jqcommit> 13jquery-dist/061.12.1+1 14b910b2a 15Timmy Willison: Release: add external/sizzle to package
[10:50:23] <jqcommit> 13jquery-dist/061.12.1+1 14e409311 15Timmy Willison: Release 1.12.1+1: fixes lack of external folder
[10:52:27] <timmywil> checked bower before publishing. This doesn't seem to work for bower.
[10:52:34] <timmywil> I guess we should just do a 2nd verison.
[10:52:39] <timmywil> I mean another release.
[10:53:46] <timmywil> DaveMethvin, m_gol: alright let's go the release route
[10:54:01] <DaveMethvin> let's make sure we have all the bugs we want to fix tho
[10:54:06] <timmywil> yea
[10:54:07] <DaveMethvin> parseHTML may need changes, or may not
[10:54:29] <DaveMethvin> with the patch to use createHTMLDocument it's not matching the api docs anymore
[10:54:56] <DaveMethvin> safest thing to do might be to back out that change and regroup for 3.0 i guess
[10:55:11] <timmywil> that sux
[10:56:04] <DaveMethvin> anyway it seems we need to determine what does into the .2 releases but it shoudl be possible to do it within a couple of days
[10:56:15] <DaveMethvin> i guess the amd one had been reported a few times already
[10:56:22] <DaveMethvin> so that's fixed if they use npm
[10:56:58] <DaveMethvin> got to walk to dog, be back soon
[10:57:04] <timmywil> yea, I've already got the commit to include external/sizzle in future releases
[10:58:02] <jqcommit> [13jquery] 15timmywil closed issue #2945: jquery 2.2.1 breaks webpack builds when loading individual modules 02https://git.io/v2Czz
[11:16:49] <jqcommit> [13jquery] 15mgol opened issue #2946: Stop modifying the value provided for boolean attributes 02https://git.io/v2W8a
[11:21:09] <jqcommit> [13jquery] 15timmywil closed issue #2946: Stop modifying the value provided for boolean attributes 02https://git.io/v2W8a
[12:32:35] <jqcommit> [13jquery] 15yairEO opened issue #2947: mouseenter & mouseleave events after setTimeout in callbacks are wrong 02https://git.io/v2WDf
[12:33:06] <jqcommit> [13jquery-release] 15staabm opened issue #88: create tag triggers commit hooks 02https://git.io/v2WDL
[12:50:15] <jqcommit> [13jquery] 15timmywil closed issue #2946: Stop modifying the value provided for boolean attributes 02https://git.io/v2W8a
[12:51:20] <jqcommit> [13jquery] 15timmywil closed issue #2947: mouseenter & mouseleave events after setTimeout in callbacks are wrong 02https://git.io/v2WDf
[12:53:13] <jqcommit> [13jquery-release] 15staabm opened issue #89: current version not properly calculated on windows 02https://git.io/v2WHQ
[13:09:26] <jqcommit> [13jquery-release] 15staabm opened pull request #90: fixed prevVersion detection on windows (06master...06patch-1) 02https://git.io/v2WdT
[17:47:57] <jqcommit> [13jquery] 15mgol opened pull request #2948: Core: Deprecate jQuery.parseJSON (06master...06deprecate-parseJSON) 02https://git.io/v2lpv
[18:49:15] <jqcommit> [13api.jquery.com] 15AurelioDeRosa opened pull request #895: First selector: Clarified behavior (06master...06first) 02https://git.io/v28LO
[19:20:22] <jqcommit> [13jquery] 15mgol opened pull request #2949: Docs:Tests: Remove obsolete code from tests, update support comments (06master...06old-browsers-cleanup) 02https://git.io/v28Yh
[19:22:00] <jqcommit> [13qunit] 15trentmwillis opened pull request #935: Tests: Define setup and tests near each other (06master...06test-cleanup) 02https://git.io/v28On
[19:56:33] <jqcommit> [13jquery-migrate] 15mgol opened issue #150: Define & warn against using jQuery.parseJSON 02https://git.io/v28nT
