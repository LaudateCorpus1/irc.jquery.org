[05:56:39] <matjas> http://bugs.jquery.com/ticket/10531
[07:22:21] <DaveMethvin> .
[07:26:08] <timmywil> ,
[07:27:05] <jzaefferer> Âº
[07:27:08] <DaveMethvin> ;
[07:28:42] <jqcommit> [qunit] jzaefferer pushed 1 new commit to master: http://git.io/X8p-oQ
[07:28:42] <jqcommit> [qunit/master] Using node-qunit port, the start/stop function are not exposed so we need to prefix any call to them with 'QUnit'. Aka: start() -> QUnit.start() - Ashar Voultoiz
[07:39:18] <jq-jenkins> Project QUnit build #42: FAILURE in 10 min: http://swarm.jquery.org:8080/job/QUnit/42/
[07:39:19] <jq-jenkins> hashar: Using node-qunit port, the start/stop function are not exposed so we need to prefix any call to them with 'QUnit'. Aka: start() -> QUnit.start()
[07:43:29] <hashar> jzaefferer: thanks for merging my small change start() -> QUnit.start()
[07:58:56] <jzaefferer> hashar: you're welcome
[08:18:43] <timmywil> docs#10533
[08:18:45] <bot-t> [#10533] ajaxPrefilter functions not executing in expected order (new bug) - http://jqbug.com/10533
[08:18:56] <timmywil> does the universal prefilter still run for text?
[08:19:07] <timmywil> not sure order matters
[08:28:40] <DaveMethvin> timmywil: I thought the * filter was a catch-all that only applied if there was nothing more specific
[08:28:40] <bot-t> (109 hours ago) <addyosmani> tell DaveMethvin, do you know if the event API docs for .on/.off have been written yet? Can't seem to find them. If not and anyone needs help getting them out, let me know.
[08:29:05] <timmywil> DaveMethvin: that's my thought as well
[08:29:15] <timmywil> i don't think the universal filter will even run for text
[08:29:56] <DaveMethvin> well then his expectations are wrong :)
[09:14:13] <jaubourg> hey there
[09:17:42] <gnarf> hey sexy
[09:17:46] <jaubourg> :)
[09:17:52] <jaubourg> how are you beautiful?
[09:18:46] <jaubourg> I'm so under on my general jQuery presentation it's not even funny
[09:18:48] * gnarf rubs eyes
[09:18:50] <jaubourg> I have like 3 hours to do it
[09:29:52] <gnarf> jaubourg: still in boston?
[09:36:36] <jaubourg> yep, departing at 7pm
[09:36:48] <jaubourg> so I need to be at the airport at 5pm
[09:41:01] <gnarf> jaubourg: any harder for you to want to leave than it was for me? :)
[09:41:13] <gnarf> i was sitting at bocoup like "i don't wanna go!!!!"
[09:43:28] <jaubourg> I have cool stuff to look forward to so I'm half-half
[09:56:04] <timmywil> docs#517
[09:56:07] <bot-t> timmywil, bug-3733.patch on Ticket #3733 – Attachment – jQuery Core - Bug ... - Fix for this bug. http://bugs.jquery.com/attachment/ticket/3733/bug-3733.patch
[09:56:09] <timmywil> docs#10517
[09:56:11] <bot-t> [#10517] .before() and .after() give unexpected return type (new bug) - http://jqbug.com/10517
[09:56:19] <timmywil> is that bad?
[09:57:03] <gnarf> thats a horrible test case
[09:57:10] <timmywil> "the return value of before and after is affected when the object is created in a particular way"
[09:57:10] <gnarf> i sent one to rwaldron earlier
[09:57:26] <gnarf> but it even fails $("<input>").after("<div>") or something like that
[09:57:28] <timmywil> my thought is yea, so
[09:57:54] <gnarf> we document that .before() and .after() should work within the jQuery set on disconnected nodes
[09:58:17] <timmywil> what's the problem?
[09:58:19] <gnarf> check this out: http://jsfiddle.net/gnarf/72GfZ/
[09:59:54] <timmywil> yea, that's strange
[09:59:54] <timmywil> ok
[10:00:03] <timmywil> that i did not get from his test case
[10:01:41] <n8o-mba> jzaefferer: are you around?
[10:03:20] <jzaefferer> n8o-mba: sup?
[10:03:20] <rwaldron> gnarf sent me?
[10:03:40] <gnarf> timmywil: yeah there are all sorts of weirdness there
[10:03:51] <gnarf> timmywil: not 100% sure whats hapening either
[10:03:54] <gnarf> that test case sucks
[10:05:32] <gnarf> rwaldron: yeah, the bot-t tell message that i said "i didn't want to lose" http://jsfiddle.net/gnarf/72GfZ/ :)
[10:10:53] <n8o-mba> jzaefferer: i had been asking about qunit and jenkins in #jquery and was told to talk to you
[10:11:01] <n8o-mba> jzaefferer: have a few minutes?
[10:12:12] <jzaefferer> sure
[10:15:37] <n8o-mba> jzaefferer: We've already got jenkins running on a mac pro, doing CI for our iOS projects. We also have a nice amount of qunit tests, but they're not being run
[10:16:18] <n8o-mba> jzaefferer: due to some restrictions with xcode & the iphone simulator we're not running jenkins headless, so I'm hoping it would be relatively easy to have jenkins run all our qunit tests
[10:16:29] <jzaefferer> n8o-mba: your options are, in order of coverage: phantomjs, selenium, testswarm
[10:17:05] <n8o-mba> jzaefferer: what about order of ease of implementation?
[10:17:08] <jzaefferer> phantomjs integration should be pretty easy with this script: https://github.com/jquery/qunit/blob/cli-phantomjs/test.js
[10:17:25] <jzaefferer> selenium I'm hoping for johnbender to document, he's running jenkins for jquery-mobile
[10:17:55] <jzaefferer> testswarm is still a ton of work to get running, but here's a starting point for jenkins integration: http://jquerytesting.pbworks.com/Jenkins-Integration
[10:18:02] <jzaefferer> err, bad link
[10:18:24] <jzaefferer> there: http://jquerytesting.pbworks.com/w/page/43991777/Jenkins-Integration
[10:22:42] <n8o-mba> jzaefferer: awesome, great info
[10:22:56] <n8o-mba> headless webkit sounds very promising, tbh
[10:47:11] <gnarf> if its the only var, can i use for ( var key in options ) - or would it be prefered to var key; for ( key in options ) ?
[11:07:21] <timmywil> http://bugs.jquery.com/ticket/10503
[11:18:41] <gnarf> ouch
[11:52:46] <addyosmani> timmywil, yt?
[11:52:56] <timmywil> addyosmani: yo
[11:53:00] <addyosmani> yo yo
[11:53:07] <addyosmani> i'm being curious. what's /standards? :)
[11:54:18] <timmywil> i imagine it'll be a collection of suggestions for browser vendors from the standards team
[11:54:43] <addyosmani> ah, gotcha. makes sense.
[11:54:51] <addyosmani> so, a wiki of sorts?
[11:55:36] <timmywil> that'd be my guess. code could be test cases or implementations.
[11:56:08] <timmywil> im sure wycats will elaborate in the near future
[11:56:29] <addyosmani> that's cool
[11:56:30] <wycats> it's initially for us to have a place to collect "bugs"
[11:56:38] <addyosmani> I see.
[11:56:57] <addyosmani> I'm sure it'll all be more clear once it starts getting populated
[11:56:59] <addyosmani> :)
[11:57:07] <addyosmani> Was just wondering about the context
[11:57:10] <addyosmani> thanks for explaining guys
[11:57:11] <wycats> The standards team (currently Paul and I) have and will be working with browser vendors to advocate for the web developer community
[11:57:21] <paul_irish> ^
[11:58:09] <timmywil> wycats, paul_irish: are there any other w3c lists that you guys follow besides web apps?
[11:58:11] <addyosmani> so, essentially taking any walls we're running into with browser-specific issues and trying to get them to fix them on their end?
[11:58:24] <addyosmani> (i assume it'll probably go beyond that too)
[11:59:12] <wycats> es-discuss
[11:59:20] <wycats> addyosmani: exactly
[11:59:25] <wycats> addyosmani: three major goals:
[11:59:52] <wycats> 1) advocate for better standards (for instance a better DOM API, improvements in the existing specs where they're broken like querySelectorAll)
[12:00:07] <paul_irish> www-style public-web-perf public-webapps whatwg
[12:00:13] <wycats> 2) advocate for browsers to prioritize implementing specs that are most important to the web community
[12:00:29] <timmywil> thanks
[12:00:32] <wycats> 3) help identify areas where jQuery could benefit from new browser features
[12:01:31] <addyosmani> that's an excellent set of goals.
[12:02:01] <wycats> :)
[12:02:03] <wycats> it's a new subteam
[12:02:12] <wycats> I'm going to try and get more people involved once stuff is set up
[12:02:17] <wycats> meetings etc.
[12:02:23] <wycats> paul_irish and I had our first meeting last night
[12:02:59] <danzik171> wycats: you using jquery-meeting or just skype/im since it's only you two atm?
[12:03:06] <addyosmani> that's cool. I'm sure you and paul are more than vocal in these matters on the other lists between you, but I'm sure some of the rest of us might try to lend a hand if/where we can if that's desired at any point.
[12:03:14] <wycats> danzik171: it was in person last night
[12:03:29] <wycats> addyosmani: indeed
[12:03:47] <wycats> we'll be posting minutes as soon as I can get dan heberden to set up an jquery.org/updates team for us
[12:04:08] <addyosmani> sweet
[12:04:18] <addyosmani> :)
[12:04:39] <kswedberg1> timmywil: have you created the ticket for my qsa ":checked" bug yet?
[12:07:14] <wycats> kswedberg1: you wouldn't believe the public-webapps discussion about qSA
[12:07:30] <timmywil> kswedberg1: http://bugs.jquery.com/ticket/10526
[12:07:30] <kswedberg1> hey wycats! :-)
[12:08:31] <timmywil> also, i've reduced unreviewed tickets to 3 today
[12:08:37] <kswedberg1> wycats: I can believe it. there's some pretty whack stuff in there.
[12:08:45] <kswedberg1> timmywil: thanks!
[12:09:40] <wycats> http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0297.html
[12:12:48] <kswedberg1> wycats: huh. I'm firmly in the camp of "a number of practitioner friends," expecting qsa to be scoped to the node
[12:13:23] <timmywil> agreed
[12:13:48] <kswedberg1> oh, ha! that was you, wycats. didn't realize that. yeah, I agree with you.
[12:14:06] <wycats> kswedberg1: the responses were ridiculous
[12:16:06] <kswedberg1> yeah. just skimmed some, but agreed so far. every other DOM querying method â€” getElementsByTagName, getElementsByClassName, etc etc â€” work that way. I understand that there are other differences between qsa and the others, but this seems like a fundamental break from reasonable expectations
[12:16:24] <wycats> kswedberg1: it's because CSS guys wrote it
[12:16:40] <wycats> and to them "div p span" means "find all spans that descend from a p which descends from a div"
[12:17:02] <wycats> so element.qSA("div p span") means "find all spans that descend from a p which descends from a div that are enclosed inside the elemnt"
[12:21:16] <kswedberg1> timmywil, wycats: I have misgivings about FF's matching of qsa(":checked") for the first option in a select, even when it doesn't have the selected attr
[12:21:40] <timmywil> kswedberg1: why's that?
[12:22:58] <gnarf> wycats: hey, do you know if its intentional that matchesSelector(":focus") fails on elements that are "focused" but in tabs that aren't?
[12:22:59] <kswedberg1> actually, I just changed my mind. :) I guess it makes sense since its value will be sent on form submit.
[12:24:17] <timmywil> gnarf: did you say that qsa does not?
[12:24:25] <timmywil> or they both do
[12:24:49] <gnarf> ummm... unsure, but i assume that :focus doesn't match elements when the browser isn't focused
[12:24:59] <timmywil> yea, my thought as well
[12:25:13] <gnarf> but our jQuery implementation of it will
[12:25:23] <gnarf> or rather the Sizzle impl of :focus wil
[12:25:42] <timmywil> oh, because document.activeElement still works?
[12:25:47] <gnarf> yup
[12:26:06] <gnarf> also, another super strange thing
[12:26:33] <gnarf> DOMElement.focus() on FF will set document.activeElement, but not trigger focus handlers if the browser tab is not focused...
[12:26:52] <timmywil> grr
[12:27:21] <gnarf> yeah, so like this is really only a HUGE problem in our unit tests that (ab)use focus
[12:27:39] <gnarf> scott_gonzalez and I were doing some research on it yesterday
[12:29:08] <timmywil> at least $(elem).focus() will still fire jQuery handlers
[12:30:03] <scott_gonzalez> the other strange thing we found yesterday is that IE won't let you blur a field if the browser tab isn't focused
[12:31:54] <wycats> gnarf: it kind of makes sense tbh
[12:32:30] <gnarf> wycats: document.activeElement === element --- element.matchesSelector(":focus") === false
[12:32:37] <gnarf> that just feels weird
[12:32:56] <gnarf> i mean, i can see the rationality
[12:33:21] <scott_gonzalez> yeah, it doesn't make sense for :focus to not mean element === element.ownerDocument.activeElement
[12:33:52] <wycats> hm
[12:34:13] <gnarf> http://jsfiddle.net/gnarf/Q77Nf/
[12:34:13] <wycats> I think the idea is that if keyboard events won't cause things to appear in the box, it's not focused
[12:34:22] <wycats> but if it's causing problems in real-life it's a mistake
[12:34:24] <gnarf> put focus in there - then tab out of the browser
[12:34:30] <gnarf> note that the CSS selector stops matching
[12:34:31] <wycats> gnarf: can you file a bug with the standards repo :)
[12:34:36] <wycats> ideally with as much detail as you can
[12:34:39] <wycats> I'll look into it
[12:34:55] <scott_gonzalez> it's not actually causing problems for us
[12:35:02] <scott_gonzalez> it was just extremely confusing when we were looking into it
[12:35:29] <scott_gonzalez> the things that are causing problems for us are Firefox not triggering events and IE not allowing blur
[12:36:41] <gnarf> scott_gonzalez: think we should spend a little more time testing other browsers and documenting weirdness with "testing focus"
[12:37:35] <gnarf> at least write up some sort of guide for writing a unit test that is immune to the browser inconsistency
[12:42:42] <timmywil> wycats: I don't understand what alex is calling trolling here http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0304.html
[12:44:13] <timmywil> he doesn't have all his facts straight, but writing him off entirely seems a bit of a stretch
[12:44:19] <miketaylr> that's just his style
[12:44:59] <timmywil> heh, ok
[12:45:02] <paul_irish> addyosmani: a blog post about the standards team would be helpful if you wannahelp
[12:45:11] <addyosmani> I'll get on it ; )
[12:45:51] <paul_irish> timmywil: basically the guy is like purporting that the DOM is done
[12:45:54] <paul_irish> and has no bugs
[12:46:03] <paul_irish> and its not worthwhile to even think about fixing it
[12:46:04] <paul_irish> also
[12:46:40] <paul_irish> sean is basically saying "100% of developers are wrong about qSA behavior. someone should educate them."
[12:46:58] <timmywil> oh i certainly disagree with him
[12:47:02] <timmywil> wouldn't call him a troll tho
[12:47:10] <paul_irish> me neither :)
[12:48:10] <gnarf> hrm
[12:48:39] <gnarf> damn qSA
[12:48:59] <gnarf> seems its basically a find("*").filter( selector ) type thing
[12:49:44] <wycats> timmywil: he's basically trolling
[12:50:15] <wycats> timmywil: "If you want to use an alternative definition of selectors then you use a JS lib that supports them. If you want to use the DOM API then you learn how CSS selectors work"
[12:50:28] <wycats> he's basically saying that every single developer who wants to use the DOM API needs to use a library
[12:50:38] <wycats> which is actually a pretty common opinion of standards bodies folks
[12:50:43] <wycats> "that's what libraries are for"
[12:50:46] <wycats> and it's busted
[12:50:49] <gnarf> out of curiosity, if you .querySelectorAll(">div") that behaves as you'd expect right?
[12:50:51] <wycats> you should be able to use the raw DOM API
[12:50:54] <wycats> gnarf: nope
[12:50:57] <timmywil> gnarf: no
[12:51:16] <gnarf> yeah, then we need a new function it seems
[12:51:30] <wycats> Alex's original post: "Out come the knives! You can't start a selector with a combinator!"
[12:51:44] <rwaldron> I'm feeling so disillusioned by everything right now, I'd gladly offer to fight that dude in real life
[12:51:58] <wycats> the point of the standards group is to deal with this stuff
[12:52:05] <wycats> and not have Alex on his own trying to fight the good fight
[12:52:08] <gnarf> cuz like thats a shitload of work for a library to do to handle all these fucked up cases
[12:52:15] <wycats> I think we can make progress if we can represent real developers
[12:52:23] <rwaldron> +9001
[12:52:55] <wycats> "Alex: Most browsers try to optimize what is common. => Boris: Yes, but what is common for Yehuda may well not be globally common."
[12:52:57] <timmywil> wycats: it's not trolling to me if he actually believes the API's way is better than the lib way.
[12:53:00] <timmywil> it's just wrong
[12:53:08] <wycats> Alex: "Yehuda is representing jQuery. I'll take his opinion as the global view unless he choses to say he's representing a personal opinion."
[12:53:13] <rwaldron> Boris from Mozilla?
[12:53:16] <rwaldron> he's a peach
[12:53:16] <wycats> confirm
[12:53:32] <wycats> anyway, we can get more progress done by aggregating developer opinion and representing it
[12:53:41] <rwaldron> agreed
[12:54:08] <gnarf> This cow path deserves not just paving, but streetlights, wide shoulders, and a bike lane. ++
[12:54:40] <rwaldron> ahahahaha
[12:55:37] <rwaldron> I think there is a lot of power in _many_ devs standing up and saying "you did it wrong" followed by "here's how we can start to make it better"
[12:56:33] <timmywil> rwaldron: standards motto
[12:56:33] <gnarf> maybe we should start up an "occupyW3C" hashtag ;)
[12:57:07] <gnarf> I am the 99% of developers who think qSA is broken
[12:57:22] <timmywil> 99.99999
[12:57:27] <rwaldron> ahahaha
[12:58:29] <rwaldron> I am the 99.99999% of developers who want NodeLists to inherit from Array.prototype
[12:59:06] <ajpiano> haha that is brilliant
[12:59:09] <gnarf> so wait... :scope exists, and works?
[12:59:17] <miketaylr> not yet
[12:59:19] <timmywil> it's a proposal
[12:59:29] <gnarf> its a lame proposal, a small bandaid imo
[12:59:34] <timmywil> i don't think it will actually help
[12:59:46] <timmywil> but i haven't seen a reponse to my post yet
[12:59:49] <gnarf> still requires complex logic to rewrite arbitrary selectors to include it
[12:59:55] <rwaldron> is there any spec on it?
[12:59:59] <addyosmani> Alex has been saying the same thing a lot recently rwaldron (re: many devs saying they're doing it wrong). Not enough people are getting involved with the public web apps list.
[13:00:02] <rwaldron> i missed that part of the discussion
[13:00:26] <rwaldron> addyosmani i can spare another subscription i suppose
[13:00:33] <rwaldron> link?
[13:00:53] <addyosmani> uno momento
[13:00:57] <timmywil> you know what, my post may not have made it to the list
[13:01:15] <timmywil> maybe it's being moderated
[13:01:20] <addyosmani> archives are here http://lists.w3.org/Archives/Public/public-webapps/
[13:01:50] <timmywil> yup, i think it only went to the few people i cc'd
[13:02:29] <timmywil> rwaldron: working draft http://www.w3.org/TR/selectors-api2/#the-scope-pseudo-class
[13:03:39] <timmywil> alex has a good handle on why that won't help at all in selector engines
[13:04:36] <rwaldron> im reading his first post
[13:04:52] <rwaldron> i like reading stuff that Alex writes
[13:05:54] <rwaldron> i have to go to ANOTHER meeting
[13:05:57] <rwaldron> bye.
[13:06:03] <timmywil> laterz
[13:06:42] <kswedberg1> (posted this to wrong channel earlierâ€¦)
[13:06:51] <kswedberg1> "I should note that the larger and more complicated a web app the less
[13:06:51] <kswedberg1> likely it is to use jQuery from what I've seenâ€¦." from Boris.
[13:07:20] <kswedberg1> what the heck does that have to do with the qsa discussion? Makes no sense to me how that could possibly contribute to the discussion.
[13:08:14] <timmywil> I thought boris had gone off the track several times in the thread
[13:11:30] <kswedberg1> yeah. his responses seem oddly bureaucratic. like his goal is to maintain the status quo or something.
[16:20:10] <mikesherov> hello
[16:52:33] <mikesherov> this ticket was fun...
[16:52:45] <mikesherov> http://bugs.jquery.com/ticket/10227
[16:53:28] <mikesherov> so basically, in FF, getComputedValue inside an IFRAME inherits the display of the outer frame
[17:13:37] <mikesherov> anyone care to check a PR? https://github.com/jquery/jquery/pull/555
[17:13:38] <socialhapy> â˜… Pull request on jquery by mikesherov (3m, 27s ago): display:none on body tag causing .show() to not show, fixes #10227
[20:53:25] <danzik171> anyone around?  quick question on http://bugs.jquery.com/ticket/8908
[21:18:29] <gnarf> danzik171: what about it
[21:20:56] <danzik171> gnarf: i think i figured it out, but basically since this is only broken in certain browsers, was wondering if this is something you'd add a test for in $.support
[21:22:05] <gnarf> usually, whats the fix?
[21:22:46] <danzik171> pretty dumb, just do " clone.style.backgroundImage = clone.style.backgroundImage" in the clone fn
[21:23:13] <danzik171> its some bug in IE9's implementation of cloneNode
[21:23:22] <gnarf> is it unit testable?
[21:23:34] <gnarf> or rather feature detectable
[21:24:05] <danzik171> it should be - create an element, set the bg, clone a node, change the bg - if the original's bg changed, it's broken
[21:24:09] <gnarf> (sorry, been coding units for the past hour, wrong word on the tip of the tongue :) )
[21:24:48] <gnarf> danzik171: yeah, wrap that up in support, and then drop it in, write a unit test that covers it, submit a pull :)
[21:25:39] <gnarf> worst case scenario, they decide to give you feedback ;)
[21:26:20] <danzik171> that's fine with me =P  i'd be...surprised...if my first patch was accepted w/ no comments
[21:27:00] <danzik171> side node: noticed if backgroundImage isn't set, IE9 returns "none" instead of "", but i'll submit a ticket against that in a bit
