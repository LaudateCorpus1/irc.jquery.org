[01:34:25] <sneakyness> hey guys, I have a coworker here telling me jQuery 1.6.4 is not stable and we shouldn't use it on production
[01:34:33] <sneakyness> is there any truth to this
[05:44:31] <mikesherov> anyone have IE9 handy?
[05:44:50] <mikesherov> can you run this fiddle in IE9: http://jsfiddle.net/pyeNX/1/
[05:46:04] <mikesherov> i'm trying to see if http://bugs.jquery.com/ticket/8443 is still valid
[08:17:01] <scott_gonzalez> anyone around that can check on jquery-ui-git?
[08:17:08] <scott_gonzalez> it's 11 days old
[08:32:09] <mikesherov> hey guys, quick question...
[08:32:35] <mikesherov> got this when running a unit test in effects.js: "No unit tests leak memory in jQuery.cache", anyone know what it means?
[08:40:01] <timmywil> mikesherov: do you have the latest qunit?
[08:40:14] <timmywil> we were getting that
[08:40:28] <timmywil> git submodule update
[08:43:32] <mikesherov> k, thanks
[08:44:49] <mikesherov> timmywil: that's not it, apparently I have to manually set jQuery.cache back to {} when I use it in a unit test?
[08:45:11] <timmywil> you're using jQuery.cache in a unit test?
[08:45:39] <timmywil> yea, the teardown for each module is a check that jQuery.cache is empty
[08:45:56] <mikesherov> not explicitly, I'm trying to write a test that uses show() and hide(), which use jQuery._data for olddisplay
[08:45:56] <timmywil> so any data attached in tests needs removed at the end
[08:46:06] <timmywil> yea, that needs removed
[08:46:28] <mikesherov> so do I call remove data, or just set jQuery.cache to {}
[08:46:41] <timmywil> removeData(elem, 'olddisplay', true)
[08:46:47] <mikesherov> cool, yeah
[08:46:51] <mikesherov> I see other examples
[08:46:56] <timmywil> cool
[08:47:16] <mikesherov> on a side note, I'm running into a mental block on how to test this ticket...
[08:47:22] <mikesherov> http://bugs.jquery.com/ticket/10227
[08:47:49] <mikesherov> I have a simple fix of assuming that default display of BODY is "block"
[08:48:28] <mikesherov> but in order to test it, the stylesheet needs to have "BODY { display:none; }" which is kind of bad for the other tests ;-)
[08:49:06] <mikesherov> is there a way to operate on a completely separate html file for this one test?
[08:49:12] <timmywil> you could use an iframe
[08:49:39] <mikesherov> ah, so I basically attach an iframe with a new html file that I place in the "data" directory?
[08:49:46] <timmywil> exactly
[08:49:52] <timmywil> there are plenty of examples
[08:50:06] <mikesherov> ok, cool, thanks for pointing in the right directions
[08:50:15] <timmywil> np :) thx for your help
[08:50:45] <scott_gonzalez> was anyone aware that the data passed to beforeSend in jQuery.ajax() changed in 1.6.3?
[08:51:21] <timmywil> i was not
[08:51:42] <timmywil> now that I think about it, wasn't there a ticket for that?
[08:52:02] <scott_gonzalez> I'll check
[08:52:18] <scott_gonzalez> the data property is now removed, not sure why
[08:52:39] <timmywil> ah, is it a get request?
[08:53:17] <scott_gonzalez> yes
[08:53:26] <timmywil> there was an issue where data was removed from the object so it wasn't duplicated on repeated get requests
[08:53:38] <timmywil> duplicated in the url that is
[08:53:45] <timmywil> so yea that changed
[08:54:17] <scott_gonzalez> http://bugs.jquery.com/ticket/9682
[08:54:30] <timmywil> yup, there it is
[08:54:54] <scott_gonzalez> that seems like a bad fix
[08:55:47] <scott_gonzalez> I guess it's nice to be able to do a retry like that though
[08:56:41] <timmywil> we could check if it's already been appended to the url i suppose
[08:59:12] <scott_gonzalez> it just seems strange that internally we do all kinds of stuff to the settings object
[08:59:34] <scott_gonzalez> but then we're allowing that modified object to be passed again
[09:00:01] <timmywil> scott_gonzalez: yea, a little weird
[09:00:17] <scott_gonzalez> I don't know that it's worth changing back at this point, but it just seems like removing properties is bad
[09:01:10] <timmywil> i think we can fix both things. We have to update the url, but we never need to attach duplicate data
[09:01:26] <timmywil> so it seems to me data can stay there
[09:02:04] <timmywil> ok, bbl, lunch
[12:22:10] <rpflo> http://api.jquery.com/bind/ second signature makes no sense :\
[12:23:04] <rpflo> .bind( eventType [, eventData], preventBubble );
[12:23:07] <rpflo> Where's the handler?
[12:23:38] <tbranyen> .bind( eventType [, eventData] , handler(eventObject) )
[12:23:40] <tbranyen> it says right there
[12:23:59] <gnarf> preventBubbleSetting the third argument to false will attach a function that prevents the default action from occurring and stops the event from bubbling. The default is true
[12:24:12] <gnarf> so bind( "click", false )
[12:24:23] <gnarf> shortcut for .bind( "click", function(){ return false })
[12:24:33] <miketaylr> TIL
[12:24:39] <rpflo> ah, gotcha
[12:27:53] <rpflo> gnarf: what's the point in sending data?
[12:28:12] * gnarf shrugs, I've NEVER used the eventData
[12:28:26] <gnarf> on the bind that is
[12:28:33] <gnarf> passing like the UI hash via trigger i've done
[12:29:07] <rpflo> Weird, it's not like the baked in handler will ever care with that preventBubble argument.
[12:44:00] <jaubourg> plop
[12:44:38] <kswedberg_> hey jaubourg!
[12:45:35] <jaubourg> hey karl :)
[12:45:40] <jaubourg> sup?
[12:45:55] <kswedberg_> not much. haven't seen you around much lately.
[12:46:15] <kswedberg_> oh, and how is the documentation coming for $.Callbacks and whatnot?
[12:54:26] <jaubourg> karl: damnit, I need to do this doc, completely forgot ><
[12:54:59] <kswedberg> hehe. no problem. if you can just do a quick draft, I can apply the polish. :)
[12:55:23] <jaubourg> yep, dunno when I'll be able to though
[12:55:37] <kswedberg> jaubourg: now!
[12:55:39] <jaubourg> best thing may be to start with new Deferred stuff?
[12:55:40] <kswedberg> :)
[12:55:48] <kswedberg> sure!
[12:56:14] <jaubourg> yeah, now is not an option, I have to do this prez and I just can't concentrate or anything
[12:56:21] <jaubourg> ><
[12:56:40] <kswedberg> jaubourg:
[12:57:01] <kswedberg> oops. no prob. prioritize. get to this stuff when you can.
[12:57:29] <jaubourg> I should have gotten to this stuff earlier... things are stacking up and I need to depile at one point or another :/
[12:57:41] <jaubourg> <= disorganized fool inside
[12:57:52] <kswedberg> lol
[13:10:28] <sneakyness> aren't wel all
[13:18:35] <jaubourg> kriszyp: a tweet like this will always make people cry "hater", nice juxtaposition imo
[13:18:42] <jaubourg> :)
[13:20:06] <jaubourg> kriszyp: btw, did you have time to look into progress callbacks in jQuery's Deferreds? Curious about you opinion/feedback
[13:23:41] <mikesherov> hello
[13:23:56] <jaubourg> hey mike
[13:27:38] <mikesherov> When are nominations for priorities for 1.8 happening? Any idea?
[13:31:06] <jaubourg> none
[13:31:16] <jaubourg> but let's wait for 1.7 to be released first ;)
[13:41:02] <timmywil> kswedberg: yt?
[13:45:40] <ben_alman> wanna see an awesome "minimal" test case?
[13:45:41] <ben_alman> https://github.com/cowboy/jquery-dotimeout/issues/3
[13:45:42] <socialhapy> â˜… Issue #3 on jquery-dotimeout, reported by iangilman (34m, 12s ago): Problems when called from inside a handler
[13:45:47] <ben_alman> more like "maximal"
[13:46:49] <rpflo> ben_alman: looks like it works to me.
[13:47:26] <ben_alman> i can't find anything behaving out of the ordinary
[13:47:30] <ben_alman> but still, i'm so confused
[13:47:45] <rpflo> I see that it says in a lot, and out a lot.
[13:47:47] <ben_alman> his example is ridiculous
[13:47:51] <ben_alman> heh
[13:54:59] <timmywil> JohnResig: you around?
[13:55:20] <timmywil> sizzle question https://github.com/jquery/sizzle/blob/master/sizzle.js#L1202-1229
[13:55:37] <kswedberg> hey timmywil .
[13:55:47] <timmywil> that looks like it wouldn't work for comma selectors
[13:56:07] <timmywil> kswedberg: hey, what was that bug that you found concerning :checked?
[13:56:24] <kswedberg> ah. right. totally forgot about that.
[13:56:36] <kswedberg> timmywil: hang on. lemme dig it up.
[13:56:49] <timmywil> kswedberg: cool thanks!
[13:57:11] <timmywil> wycats should know about that for the standards team
[13:59:03] <kswedberg> right on.
[14:06:04] <gnarf> so scott and i are finding some REALLLY f'ed up shit in focus
[14:13:48] <kswedberg> timmywil: http://test.learningjquery.com/qsa-checked/
[14:15:15] <kswedberg> wycats: ^^  qsa( ':checked' ) seems whack
[14:16:43] <gnarf> found out why your :focus test is failing in chrome peoples
[14:16:47] <gnarf> its matchesSelector
[14:17:05] <timmywil> wycats found another issue http://jsfiddle.net/timmywil/tDgXy/
[14:17:32] <timmywil> qsa spec design flaw
[14:18:15] <timmywil> we knew about the design flaw (not the jQuery bug), but that's something good to push in the standards team
[14:18:35] <gnarf> so we have determined a few behaviors with focus that yall might be interested in
[14:18:55] <timmywil> gnarf: what about matchesSelector?
[14:18:59] <gnarf> matchesSelector(":focus") seems to fail everywhere when the tab doesn't have focus, but document.activeElement will be correct
[14:19:01] <timmywil> bug in native?
[14:19:15] <gnarf> timmywil: yes
[14:19:36] <gnarf> or perhaps "by design" in native
[14:21:15] <timmywil> gnarf: which browsers don't fail for matchesSelector when the tab doesn't have focus?
[14:21:36] <gnarf> timmywil: so far on ff/webkit they fail - haven't tried in ie really yet
[14:22:25] <timmywil> gnarf: im confused then, we knew it would fail when the tab didn't have focus
[14:22:45] <gnarf> also
[14:23:14] <gnarf> firefox seems to not dispatch focus events if you programatically call nativeElement.focus() and the tab doesn't have focus
[14:23:34] <gnarf> same with blur
[14:23:56] <gnarf> in IE calling .blur() is insuffecient, as it will not blur an anchor
[14:24:01] <gnarf> you have to document.body.focus()
[14:24:47] <timmywil> kswedberg: it seems slick already tests for it https://github.com/mootools/slick/blob/master/Source/Slick.Finder.js#L143-147
[14:25:20] <kswedberg> timmywil: interesting!
[14:25:43] <timmywil> yea, i'll be going through all of those in 1.8
[14:26:52] <kswedberg> timmywil: here's something fun from the html4 spec: "The initial state has the first option selected, unless a SELECTED attribute is present on any of the <OPTION> elements"
[14:27:40] <timmywil> right! forgot about that, doesn't it work right in firefox?
[14:27:48] <kswedberg> timmywil: so, all select elements will automatically have a ":checked" option, according to qsa in FF.
[14:27:55] <timmywil> right
[14:28:47] <kswedberg> which seems kind of bizarre to me, but oh well. also, "nce user agent behavior differs, authors should ensure that each menu includes a default pre-selected OPTION"
[14:28:49] <timmywil> kswedberg: can you update that test to match firefox? that sounds correct to me
[14:29:03] <kswedberg> timmywil: sure
[14:30:13] <timmywil> kswedberg: heh, nwmatcher has it too https://github.com/timmywil/nwmatcher/blob/master/src/nwmatcher.js#L327
[14:32:12] <kswedberg> timmywil: weird. why does it say it "wrongly" includes selected option elements and then say "HTML5 rules says selected options also match"?
[14:33:23] <timmywil> kswedberg: not sure, is the html5 spec different? maybe he's mistaken
[14:34:13] <kswedberg> timmywil: he's contradicting himself. and HTML4 and 5 both consider selected options ":checked"
[14:35:10] <timmywil> yea, that's kinda funny.  looks like he's implementing it the webkit way tho
[14:38:52] <kswedberg> timmywil: ok, http://test.learningjquery.com/qsa-checked/ is updated now. test descriptions a little more verbose now too
[14:39:17] <timmywil> kswedberg: nice, thanks! i'll make a ticket to add a qsa test for it
[14:39:46] <kswedberg> timmywil: cool. thx. :)
[14:40:49] <timmywil> kswedberg: do you have a link to the spec?  I only found this...http://www.w3.org/TR/selectors/#UIstates
[14:40:51] <timmywil> http://www.w3.org/TR/selectors/#UIstates
[14:40:53] <timmywil> linkable
[14:42:32] <kswedberg> timmywil: my test page has two links: html4 spec and selector level 3 spec. here is one: http://www.w3.org/TR/selectors/#checked
[14:42:51] <timmywil> yea, that's the one i see
[14:42:59] <timmywil> doesn't mention options tho
[14:43:07] <timmywil> doesn't really exclude them either
[14:43:25] <kswedberg> sure it does. "For example, the :checked pseudo-class initially applies to such elements that have the HTML4 selected and checked attributes"
[14:43:45] <kswedberg> not explicitly, but what other element has the selected attribute?
[14:44:33] <timmywil> good point
[14:45:15] <timmywil> maybe that's the confusion.  people only reading the first two lines
[14:45:18] <timmywil> :P
[14:45:21] <kswedberg> hehe
[14:46:34] <kswedberg> timmywil: also, according to http://www.w3.org/TR/REC-html40/interact/forms.html#h-17.6.1 : "Zero or more choices may be pre-selected for the user. User agents should determine which choices are pre-selected as follows"
[14:47:40] <kswedberg> so, the whole first-option-considered-selected-if-none-explicitly-selected thing is up to the user agent. in other words, glwt!
[14:48:17] <timmywil> hahaha
[14:48:19] <timmywil> "undefined"
[14:48:23] <timmywil> you're the spec!
[14:48:32] <timmywil> define it!
[14:49:03] <kswedberg> how the heck do they expect us to get any work done if they can't make a decision! :p
[14:49:10] <timmywil> srsly'
[14:49:37] <timmywil> maybe it's cause of mobile
[14:49:51] <timmywil> requiring user action and all that
[14:50:25] <kswedberg> but that was the html4, before anyone cared about mobile.
[14:51:02] <kswedberg> *html4 spec
[14:51:56] <kswedberg> gotta run. ttyl, timmywil
[14:52:35] <timmywil> later karl!
[16:57:18] <mikesherov> what's the best IRC client?
[16:59:46] <sneakyness> textual on osx imo
[16:59:55] <sneakyness> it's like linkinus only it doesn't suck
[17:01:08] <mikesherov> what about for windows?
[17:06:11] <erichynds> xchat2
[17:13:41] <mikesherov> thanks erichynds
