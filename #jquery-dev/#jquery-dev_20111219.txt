[07:05:06] <DaveMethvin> .
[07:05:06] <bot-t> (15 hours 10 mins ago) <rwaldron> tell DaveMethvin I think that https://github.com/jquery/jquery/commit/6c2a501de40a5f6b3ad382e2d309e5a10fce04d0 caused a regression in manipulation. a git bisect identified it as the first commit that jQuery("<div>").after("<span>").length === 1 in IE6,7,8
[07:05:07] <socialhapy> â˜… Commit on jquery by dmethvin (1w, 5d ago): Fix #5571. Setters should treat `undefined` as a no-op and be chainable.
[07:05:20] <DaveMethvin> yay.
[07:21:05] <rpflo> I have a faint recollection that jQuery stopped using requestAnimationFrame
[07:21:07] <rpflo> is that true?
[07:23:49] <Eviltwin> I don't believe so
[07:25:05] <Eviltwin> But I might be wrong about that
[07:25:55] <Eviltwin> Check the source
[07:26:54] <rpflo> Eviltwin: 2053d1c621e8ef65b79d6b339d7336c732ed1b82
[07:33:33] <Eviltwin> Ah, I see
[07:33:47] <Eviltwin> Well it's still everywhere in the docs unfortunately
[07:37:17] <kswedberg> Eviltwin: sorry about that. removing the note from the docs now.
[07:43:27] <kswedberg> Eviltwin: the rFA note should now be removed from all the effects docs. if you still see it somewhere, let me know.
[07:43:59] <Eviltwin> kswedberg: Awesome, thanks
[07:44:08] <kswedberg> np!
[08:23:45] <jaubourg> hi there
[08:23:45] <bot-t> (115 hours ago) <danheberden> tell jaubourg https://github.com/danheberden/jquery-whenSet
[08:25:28] <jaubourg> nice
[08:42:02] <kswedberg> hi jaubourg! long time, no see. :)
[08:59:43] <DaveMethvin> ajpiano: can you open #jquery-meeting?
[09:00:36] <DaveMethvin> or gnarf if you're around
[09:42:58] <rwaldron> timmywil re: " If applying similar principles to other libraries, the "key" argument, or whatever it is called, is not always the first argument in other implementations of each."
[09:43:22] <rwaldron> that I know of, jQuery is the only one that has it backwards hahaha
[09:43:36] <timmywil> yea, i couldn't think of another :P
[09:44:00] <rwaldron> dont think there is one!
[09:45:47] <timmywil> jQuery was unlucky on that one
[09:45:51] <rwaldron> damn... one of my votes got blitzed
[09:46:04] <rwaldron> pretty sure jQuery.each existed first
[09:46:53] <rwaldron> (not first of all "each" implementations )
[09:48:00] <timmywil> yea, but before .forEach
[09:48:05] <rwaldron> but Array.prototype.forEach was modeled after Prototype.js Enumerable.each
[09:48:26] <rwaldron> Mootools, YUI, Dojo etc follow same
[09:48:35] <rwaldron> jQuery is the oddball
[09:49:02] <rwaldron> despite being easier to follow...
[09:49:06] <rwaldron> key, value
[09:49:15] <rwaldron> or rather
[09:49:20] <rwaldron> index|key, value
[09:49:25] <rwaldron> vs. value, index|key
[09:49:31] * rwaldron shrugs
[09:52:15] <jaubourg> yeah, but you'd use value more often in theory so the reverse order seems to make more sense here
[09:52:35] <jaubourg> I can't count how often I just disregarded the first param
[11:24:16] <scott_gonzalez> danheberden: yt?
[11:27:16] <danheberden> scott_gonzalez yo
[11:27:45] <scott_gonzalez> got some time to talk about logging for the plugins site?
[11:30:40] <danheberden> scott_gonzalez: i might in an hour or two-ish
[11:30:44] <scott_gonzalez> ok
[11:30:51] <danheberden> or feel free to shoot me an email
[11:33:59] <rwaldron> timmywil hey dude
[11:34:09] <timmywil> hey there
[11:34:26] <rwaldron> just a heads up, I'm not trying to undermine you on that ticket
[11:34:47] <rwaldron> i just want homeboy to give us a reduced case instead of tit-for-tat explanation
[11:39:40] <timmywil> oh im with you
[11:45:28] <orkel> timmywil, DaveMethvin, are you online?
[11:45:41] <DaveMethvin> yep
[11:45:55] <orkel> Wanna ask about hasAttr, i now you shoot it down, but how about use it internally? It can be used to fix #10870 and #10463
[11:46:16] <DaveMethvin> ?10870
[11:46:17] <bot-t> [#10870]  (assigned bug) - http://jqbug.com/10870
[11:47:05] <DaveMethvin> ?10463
[11:47:06] <bot-t> [#10463] RemoveAttr should check if attribute exist (when it's possible) before remove it (open enhancement) - http://jqbug.com/10463
[11:48:08] <DaveMethvin> I'll defer to timmywil on those, I'd like to keep fixes small if possible
[11:49:18] <orkel> Do you have leads for 10870?
[11:49:20] <timmywil> orkel: there's another fix for 10870 that doesn't involve as much code and there's not much point to adding hasAttr internally and not expose it
[11:49:58] <orkel> oh, ok
[11:50:50] <timmywil> but I'd hang on to that code
[11:50:59] <orkel> Why?
[11:51:17] <timmywil> cause it's good and we might reconsider after 1.8
[11:51:35] <timmywil> when we work out some size issues
[11:53:42] <orkel> okey, it would be cool if you do :-)
[11:54:00] <rwaldron> timmywil weird... i actually never submitted the comment
[11:58:54] <orkel> btw, i was always interested why jsonp-functions register in global namespace?
[11:59:32] <Eviltwin> How else would they work?
[11:59:46] <Eviltwin> A function call is being made in global scope for the response
[12:00:33] <orkel> not in global namespace, maybe storage them in some jQuery property
[12:00:34] <orkel> ?
[12:01:08] <Eviltwin> No matter what they need to be accessable globally
[12:01:30] <Eviltwin> And some backends require that the callbacks be all alphanumeric
[12:01:33] <Eviltwin> IIRC
[12:05:00] <orkel> do have examples of those backends? Most of them, not even strip callback arguments. Here said http://www.json-p.org/ that this
[12:05:03] <orkel> obj.functionName({JSON});
[12:05:05] <orkel> can be used
[12:05:29] <rwaldron> orkel, no way to ensure that a 3rd party servce supports that
[12:06:09] <rwaldron> whoops, sorry Eviltwin, didn't mean to echo
[12:06:56] <orkel> yeah, but this link i shown is a "standart" is it not?
[12:08:17] <orkel> sorry for my language, english is not my navite
[12:08:18] <Eviltwin> If there's one standard of the web, it's that people don't obey standards
[12:08:26] <Eviltwin> They usually try
[12:12:05] <orkel> I never seen a public api, that stip dots in callback argument, if do store those functions inside jQuery it would not trash global namespace and #8744 would became easily fixable
[12:14:06] <Eviltwin> Replace it with a self-deleting function perhaps?
[12:14:55] <orkel> or you even might parametrize this behaivor by adding new param in $.ajax?
[12:15:34] <orkel> No, i have something else in mind
[12:16:26] <Eviltwin> I feel like with some browsers you may not actually be able to make it cancel the loading and executing of a script once its started
[12:16:30] <Eviltwin> But that's just a complete guess
[12:19:06] <orkel> i think you right, this is my complete guess :-), but you can not execute it after timeout, and dont matter that function callback is downloaded, of course it would trash global even more
[12:20:00] <orkel> But if functions stored in jQuery object, it would not be so bad
[12:23:12] <orkel> can i create ticket about this?
[12:32:25] <rwaldron> Eviltwin "Replace it with a self-deleting function perhaps?" functions created by jQuery are automattically removed after they execute
[12:32:38] <rwaldron> (unless you mean something else)
[12:39:04] <Eviltwin> rwaldron: I mean a no-op that is removed
[12:46:07] <orkel> are they removed? They became undefined, i'm wrong?
[12:49:32] <orkel> self-deleting functions might be a trouble, you have to wrap "delete" in try try-catch for ie6-7
[13:08:24] <danheberden> scott_gonzalez so whats up re: logging?
[13:10:35] <scott_gonzalez> danheberden: skype?
[13:10:46] <danheberden> scott_gonzalez loggin in
[13:21:18] <rwaldron> orkel, i was mistaken... that's how the old ajax module worked.
[13:21:21] * rwaldron shrugs
[13:21:33] <rwaldron> i recommend pinging jaubourg
[13:21:38] <rwaldron> he wrote the Ajax module
[13:21:41] <rwaldron> he knows the most about it
[13:36:04] <rwaldron> DaveMethvin yt?
[13:36:13] <DaveMethvin> yep, sup?
[13:38:51] <DaveMethvin> rwaldron:
[13:39:14] <ajpiano> scott_gonzalez: you still on with danheberden or got a few minutes?
[13:39:23] <scott_gonzalez> no and yes
[13:39:29] <ajpiano> excelelnt
[13:39:44] <ajpiano> i conveniently am ALREADY on skype
[13:40:26] <rwaldron> DaveMethvin https://forum.jquery.com/topic/ability-to-add-more-custom-tags-to-html5-tags-list-nodenames-variable-in-built-in-support-for-using-html5-tags-in-older-ies
[13:40:54] <DaveMethvin> damn i hardly have to click the link, it's all there
[13:40:59] <rwaldron> yeah
[13:41:08] <DaveMethvin> so this is the pr you have?
[13:41:14] <rwaldron> noooooo
[13:41:25] <rwaldron> this is something that just got posted
[13:41:57] <DaveMethvin> ok, this guy wants to use the ie8 tag soup parser for an xml schema, basically
[13:42:06] <rwaldron> yeah
[13:42:13] <DaveMethvin> as do all the folks who are asking for non-html5 tags i suspect
[13:42:33] <rwaldron> he wants to make his own elements
[13:42:41] <DaveMethvin> i want a pony
[13:42:44] <rwaldron> me too
[13:42:53] <DaveMethvin> is tehre some way to expose the list for 0 cost?
[13:42:59] <rwaldron> i think so
[13:43:09] <rwaldron> which is the only reason I'm asking
[13:43:18] <DaveMethvin> well that's the reason i'm asking too
[13:43:21] <rwaldron> i jsut wanted to see what you thought first
[13:43:48] <rwaldron> give me a min, I'll confirm
[13:43:51] <DaveMethvin> i thought there was some issue with that, like the list was processed before they could add to it?
[13:45:29] <rwaldron> yeah there is that too
[13:45:50] <rwaldron> forgot about that
[13:46:03] <rwaldron> we've have to expose createSafeFragment
[13:46:18] <DaveMethvin> we'd need some sorta global that we read to add to our list
[13:46:23] <DaveMethvin> ain't gonna happen
[13:46:27] <rwaldron> EFFF THAT
[13:47:27] <DaveMethvin> the only other solution i can think of is to have them call some api after jquery loads that adds the shims to those elements
[13:47:36] <DaveMethvin> and that is starting to sound like bytes
[13:48:55] <rwaldron> again... efff that
[13:50:12] <DaveMethvin> what does html5 have to say about randomly named tags? i guess they parse ok but have no semantics?
[13:50:26] <DaveMethvin> i just wonder if we're encouraging people to do stupid things
[13:50:28] <rwaldron> i don't think it says anything
[13:50:52] <DaveMethvin> well, i'll just see what google has to say about THAT
[13:51:45] <rwaldron> DaveMethvin "Thanks for taking the time to make your case. There is no way to expose that list as the `document` object gets "promoted" to create shim safe document fragments only once, when the code is first executed (which is on load), by the time you had a chance to add your items to list, the procedure would be complete."
[13:52:24] <rwaldron> my response to that post
[13:52:28] <rwaldron> good?
[13:52:28] <DaveMethvin> that handles the technically feasible,  i'm just looking at the  morally advisable a sec :P
[13:52:35] <rwaldron> ok
[13:54:46] <DaveMethvin> rwaldron: it looks like you can make up new tags as long as you don't redefine existing ones: http://www.w3.org/TR/html5/infrastructure.html#other-applicable-specifications
[13:55:58] <DaveMethvin> rwaldron: i forget what that shim code looks like, would it be feasible to expose the shim somehow and let people add their own tags if they do the lifting?
[13:56:27] <DaveMethvin> or is that just too much of a pita?
[13:56:49] <rwaldron> that's a lot of code to support a mentality that didnt exist 10  years ago
[13:57:12] <rwaldron> I'm not afraid of it being a pain in the ass
[13:57:54] <DaveMethvin> sounds like we should keep our shims to ourselves then
[13:57:54] <rwaldron> basically it's two lines in manipulation.js
[13:58:07] <rwaldron> yeah
[13:58:15] <rwaldron> we're not actually providing a shim either
[13:58:15] <DaveMethvin> i am not comfortable with the idea of people basically writing xml and then saying it's html5
[13:58:34] <rwaldron> we're just ensuring that new elements created with jQuery work correctly
[13:58:46] <DaveMethvin> true
[13:58:48] <rwaldron> "i am not comfortable with the idea of people basically writing xml and then saying it's html5" +9001
[13:59:28] <DaveMethvin> ok let's leave this as is
[13:59:38] <DaveMethvin> plus the pr you have already of course
[14:00:10] <rwaldron> oh right
[14:00:20] <rwaldron> yeah those are legitimate
[14:00:34] <rwaldron> "actual html5"
[14:00:55] <rwaldron> hm
[14:01:23] <rwaldron> i just had a really awful idea
[14:01:58] <rwaldron> nope, nevermind
[14:02:37] <DaveMethvin> a guy thinks about sex at least 20 times a day, but a developer thinks about hacks at least 30
[14:19:44] <eighty4> DaveMethvin: I strongly doubt I think about sex 20 times a day during a working day :/
[14:20:10] <DaveMethvin> you need sexier co-workers
[14:21:09] <eighty4> I guess
[14:22:17] <DaveMethvin> lol
[14:22:49] <DaveMethvin> eighty4: i notice that you didn't deny you think about hacks 30 times a day
[14:23:19] <eighty4> DaveMethvin: no idea to deny it
[15:02:04] <johnbender> DaveMethvin: did you get my message?
[15:02:11] <johnbender> last week I think
[15:05:10] <rwaldron> DaveMethvin sorry, dropped out
[15:05:17] <rwaldron> what was the last word on that?
[15:05:22] <rwaldron> html shimming non sense
[15:05:30] <rwaldron> should i post that response?
[16:23:54] <mikesherov> http://bugs.jquery.com/ticket/10993
[16:24:02] <mikesherov> docs#10993
[16:24:03] <bot-t> [#10993] Css borders width not working on IE9 (open bug) - http://jqbug.com/10993
[16:24:29] <mikesherov> this is crazy. input type=file doesn't take borders
[16:24:43] <mikesherov> Should I close as wontfix, or cantfix?
[16:25:45] <mikesherov> paul_irish: getting jQuery up to speed regarding box-sizing: docs#11004
[16:25:46] <bot-t> paul_irish, [#11004] getWH incorrectly removes padding and border width when box-sizing is border-box (assigned bug) - http://jqbug.com/11004
[16:26:26] <mikesherov> paul_irish: I decided that .width() and .css('width') are fundamentally different
[16:26:52] <mikesherov> .width() will always return content width, and .css('width') will return the appropriate box-sizing value
[17:58:38] <DaveMethvin> rwaldron: that response looked good, it doesn't seem like we could easily accomodate adding more tags
[18:03:04] <rwaldron> posted
