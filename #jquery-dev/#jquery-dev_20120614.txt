[02:19:45] <jzaefferer> Krinkle: but why the big difference to this? http://swarm.jquery.org/result/1936
[02:19:53] <jzaefferer> vs http://swarm.jquery.org/result/1942
[02:20:51] <Krinkle> jzaefferer: I don't know, I didn't write those tests
[02:21:05] <Krinkle> You mean the 4 vs. 34, right ?
[02:21:10] <jzaefferer> okay, need to bug some actual core contributor then :-)
[02:21:12] <jzaefferer> yeah
[02:21:34] <Krinkle> I guess "support: Verify that the support tests resolve as expected per browser " only has a select number of samples
[02:21:50] <Krinkle> because that test doesn't run at all in Cr 18, but does in Cr 19
[02:21:55] <Krinkle> which has 30 assertions
[02:22:46] <Krinkle> jzaefferer: Yep
[02:22:47] <Krinkle> http://swarm.jquery.org/build/jquery/1ea4fe705207476698e7768036343b2ebe3bb31f/test/unit/support.js
[02:22:51] <Krinkle> user agent matching
[02:22:57] <Krinkle> 	if ( /chrome\/19\.0/i.test(userAgent) ) {
[02:23:21] <Krinkle> I may not be a core contributor, but I do know jQuery :P
[02:23:52] <Krinkle> I remember that being implemented. It isn't to verify the jquery core (since support test naturally work), but more to check if browsers change our expectations.
[02:24:14] <Krinkle> if and when that one fails, the test should just be updated.
[02:27:20] <jzaefferer> mh, okay
[02:27:24] <jzaefferer> so safe to ignore?
[02:31:06] <Krinkle> sure
[02:31:29] <Krinkle> the comment says something about it going away after 1.8 is released
[06:45:29] <gibson042> .
[08:00:37] <scott_gonzalez> DaveMethvin: Does .unbind( "foo.bar" ) also remove delgated events?
[08:04:30] <scott_gonzalez> I'm only interested in 1.6+
[08:05:35] <DaveMethvin> yes scott_gonzalez if they have a .bar namespace
[08:05:49] <scott_gonzalez> :-)
[08:06:15] <scott_gonzalez> thanks
[08:09:56] <jaubourg> plop
[10:13:46] <Krinkle> rworth: thx for the invite
[10:58:13] <johnbender> gnarf: are you guys having the talks at jqcon recorded? I thought I heard Leah mention that at some point
[10:58:23] <gnarf> yes
[10:58:26] <johnbender> zomg
[10:58:28] <johnbender> amazing
[10:58:41] <gnarf> im 95% sure
[10:58:49] <johnbender> gnarf: my kingdom for the recording
[10:58:52] <johnbender> :D
[10:59:02] <gnarf> johnbender: you watching any of the txjs talks? :)
[10:59:08] <johnbender> gnarf: streaming?
[10:59:12] <gnarf> yeah
[10:59:17] <gnarf> look at twitter.com/txjs
[10:59:19] <socialhapy> ★ Tweet from txjs: If you can't catch all of the livestream, don't worry, we'll post videos after the conference, too. ★ http://bit.ly/MDgPXh
[10:59:49] <johnbender> brilliant
[12:27:16] <socialhapy> ★ Tweet from jquerymobile: jQuery Mobile team update, June 14 2012: http://t.co/xpYBYKAi ★ http://bit.ly/MtScjg
[14:05:22] <DaveMethvin> .
[14:05:34] <DaveMethvin> for all the good that does, bot-t
[14:46:34] <DaveMethvin> aaaaand i'm back
[15:36:30] <scott_gonzalez> DaveMethvin: This is the kind of important stuff we need $.browser for: https://github.com/jquery/jquery-ui/blob/03da6e41f651d6dd227430757ec4c0d197d01c0c/ui/jquery.ui.resizable.js#L449
[16:40:31] <gdoron_> Hi, may I ask a question?
[16:41:04] <scott_gonzalez> gdoron_: Don't ask to ask.
[16:41:13] <gdoron_> :)
[16:41:34] <scott_gonzalez> gdoron_: But if it's general jQuery support, ask in #jquery.
[16:41:35] <gdoron_> How is it that parents is a lot faster than closest ?
[16:41:52] <gdoron_> It's not, and I tried there twice... :)
[16:42:27] <gdoron_> I looked at the source code, those two functions work in two totally different ways. Why?
[16:43:47] <gdoron_> Scott, Any thoughts?
[16:45:22] <scott_gonzalez> Well, they do different things with differnet APIs.
[16:46:29] <scott_gonzalez> It's possible that .closest() can be refactored now, but that's a question for someone else.
[16:47:03] <gdoron_> Who is that someone else guy/
[16:47:05] <gdoron_> ?
[16:47:57] <scott_gonzalez> DaveMethvin or timmywil?
[16:48:20] <scott_gonzalez> Possibly rwaldron, mikesherov, gibson42
[16:48:34] <scott_gonzalez> Nobody that is around right now :-P
[16:48:59] <gdoron_> :) Are they here often?
[16:53:42] <gdoron_> ?
[16:55:30] <timmywil> gdoron_: it probably could be refactored, but closest is faster. It used to do do something special when passed an array, but we only used this internally.
[17:00:49] <gdoron_> Sorry, I wasn't here.
[17:01:29] <gdoron_> closest is couple of times slower... then you say it's just because it's an old code?
[17:04:45] <gdoron_> timmywil, still here?
[17:05:15] <timmywil> gdoron_: according to performance tests, closest is about 1.5 times faster
[17:05:55] <timmywil> gdoron_: this is the first I pulled http://jsperf.com/jquery-parents-vs-closest/9  as an example
[17:05:58] <gdoron_> Allow me to show you jsperf
[17:06:29] <gdoron_> I did that test, but look at this: http://jsperf.com/jquery-parents-vs-closest/2
[17:06:52] <gdoron_> In version 9 I had to  build the worst DOM structure to make closest faster... :(
[17:09:02] <gdoron_> I always suggested people to use closest as it doesn't have to traverse up to the body\document, but it seems like the tip was wrong...
[17:09:26] <snover> If you are traversing the dom 10,000 times per second, fix your code.
[17:10:33] <gdoron_> :), still, it just weird.
[17:10:45] <gdoron_> This is the whole point of closest
[17:10:54] <snover> if you actually look at the entire list
[17:10:59] <snover> you will see that closest is faster in safari and firefox
[17:11:00] <snover> consistently
[17:11:33] <gdoron_> It appears like $(this).parents('a').eq(0) is faster than $(this).closest('a')
[17:12:12] <timmywil> gdoron_: I'm not seeing that
[17:12:18] <paul_irish> gdoron_: are you using a profiler on your app?
[17:12:31] <gdoron_> Seeing what?
[17:12:57] <timmywil> this is what parents does: grabs all parents (all the way up to document), then filters them to see which match the given selector
[17:13:02] <gdoron_> what kind of profiler are you asking about?
[17:13:13] <timmywil> closest goes up the DOM tree one at a time and checks for a match and stops as soon as it gets one
[17:13:48] <timmywil> I'm sure you could find cases where parents is faster, but most of the time, closest will win simply because it is doing less
[17:13:57] <gdoron_> But the jsperf shows it slower, this is axactly my argument, it should be impossible, but this is how it is
[17:15:31] <gdoron_> It's not that I found a weird case where closest is slower, I had to use this http://jsperf.com/jquery-parents-vs-closest/9  DOM to make it faster!
[17:17:06] <snover> gdoron_: you are not listening.
[17:17:23] <gdoron_> Sorry, to what point?
[17:17:40] <snover> Firefox and Safari are significantly faster with closest *always*
[17:17:46] <snover> even in version 2 of that test
[17:17:54] <snover> Chrome is a little slower with closest sometimes
[17:18:15] <snover> probably because it can optimize loops better that do not escape
[17:18:23] <gdoron_> But doesn't it bother you that is only in Firefox and Safari? what about Chrome and IE?
[17:18:25] <snover> no
[17:18:27] <snover> it does not bother me
[17:18:29] <snover> not even a little bit
[17:18:50] <snover> why should it? store references to your elements.
[17:18:53] <snover> you do a traverse maybe once.
[17:18:58] <snover> it could be 100 times slower and I still would not care.
[17:19:35] <gdoron_> Then why won't you use ...parents(...)[0] and that's it? forget about closest...
[17:20:39] <snover> it’s easy to skew synthetic benchmarks
[17:21:15] <snover> the point timmywil *tried* to make is that unless you are profiling a *real world application* and find that this is causing a perf issue
[17:21:20] <snover> there is no reason to give a shit
[17:21:21] <snover> so stop
[17:21:22] <snover> :)
[17:21:28] <gdoron_> I'm sorry, I didn't understand the last sentence.
[17:22:28] <snover> what part of it did you not understand?
[17:22:56] <gdoron_> The smiley.
[17:24:25] <scott_gonzalez> gdoron_: Yes, they're here during the day and usually at night.
[17:25:05] <gdoron_> It's 03:24, here so, what time is it at your time zone...?
[17:25:31] <scott_gonzalez> We're mostly in ET, so 8:30p
[17:25:44] <gdoron_> ET?
[17:25:48] <scott_gonzalez> Easter Time
[17:25:52] <scott_gonzalez> *Eastern
[17:26:12] <gdoron_> ohhh, US I believe?
[17:26:26] <scott_gonzalez> yeah
[17:26:51] <gdoron_> Regarding to my question, do you agree with snover it shouldn't bother me?
[17:30:47] <scott_gonzalez> It looks like the perf diff is only bad in Opera.
[17:31:12] <scott_gonzalez> The Chrome benchmarks don't seem to be that bad.
[17:31:34] <gdoron_> Instead of being excellent in all browsers... :(
[17:31:34] <scott_gonzalez> Yes, I agree 100% with snover that you should not recommend .parents().eq(0) over .closest().
[17:31:50] <scott_gonzalez> They don't even have the same meaning.
[17:32:06] <scott_gonzalez> And you shouldn't optimize code like that.
[17:32:11] <gdoron_> Ohh, I just tried to say, that it's funny that that code is faster the closest
[17:32:24] <gdoron_> *than
[17:32:25] <scott_gonzalez> Yes, I think that's odd.
[17:32:42] <scott_gonzalez> But, as I said in the beginning of this discussion, they have differnet APIs and do different things.
[17:32:58] <scott_gonzalez> closest has more upfront overhead.
[17:33:54] <gdoron_> What do you mean by upfront?
[17:34:30] <scott_gonzalez> Stuff it has to do before traversing.
[17:34:51] <gdoron_> Why it has to do other things but traversing?
[17:35:15] <gdoron_> And why parents doesnt need to those?
[17:36:34] <scott_gonzalez> http://api.jquery.com/closest/
[17:36:37] <scott_gonzalez> http://api.jquery.com/parents/
[17:36:42] <scott_gonzalez> I can't continue this discussion.
[17:36:59] <gdoron_> O.k. Thanks
[17:37:05] <gdoron_> Have a good day sir!
[18:45:12] <jaubourgipad> hi there
[18:45:32] <jaubourgipad> trying an app on the ipad to see if I can irc from it properly
[18:46:34] <jaubourgipad> feel free to ping if you see this :P
[18:47:48] <jaubourgipad> DaveMethvin: do you read me?
[18:58:22] <scott_gonzalez> jaubourg: it worked
[23:10:01] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/tTkdCw
[23:10:01] <sizcommit> [sizzle/master] When multiple combinators are in a selector, generals nullify specifics. Fixes #11109. Improve performance of nth-child selectors. - timmywil
[23:10:37] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/Nc_R_g
[23:10:37] <jqcommit> [jquery/master] Add necessary test html from Sizzle tests; Add an easy way to turn off QSA in tests - timmywil
[23:34:13] <jq-jenkins> Project jQuery Core build #141: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%20Core/141/
[23:34:13] <jq-jenkins> timmywillisn: Add necessary test html from Sizzle tests; Add an easy way to turn off QSA in tests
