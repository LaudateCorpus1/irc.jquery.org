[05:07:26] <scott_gonzalez> Just install these 30 things and you can get WordPress running in no time! :-P
[06:10:45] <jqcommit> [13jquery] 15datag opened pull request #1398: Corrected typo in section "rebasing" (06master...06patch-1)  02http://git.io/01H-Ug
[07:32:14] <doesallmagic2> Project QUnit build #334: SUCCESS in 1 min 6 sec: http://jenkins.jquery.com/job/QUnit/334/
[08:09:39] <jqcommit> [13jquery] 15gibson042 closed pull request #1398: Corrected typo in section "rebasing" (06master...06patch-1)  02http://git.io/01H-Ug
[08:19:58] <doesallmagic2> Project jQuery Core build #963: STILL FAILING in 10 min: http://jenkins.jquery.com/job/jQuery%20Core/963/
[08:19:58] <doesallmagic2> richard.gibson: No ticket: Correct typo in README section "rebasing". Close gh-1398.
[08:35:40] <doesallmagic2> Project jQuery Core 1.x build #270: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/270/
[08:35:40] <doesallmagic2> richard.gibson: No ticket: Correct typo in README section "rebasing". Close gh-1398.
[08:37:27] <doesallmagic2> Project jQuery Migrate Core 1.x build #118: STILL FAILING in 1 min 46 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%20Core%201.x/118/
[09:13:08] <gibson042> tbranyen: regarding your questions from yesterday about an array-valued parentNode property (http://tbranyen.com/u/26859530.png), you were seeing data cached by Sizzle for optimizing combinators: https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L1519-L1530
[09:13:53] <gibson042> "parentNode" was a key indicating a direction for ancestry (as opposed to "previousSibling")
[09:15:14] <tbranyen> gibson042: ah interesting thanks!
[09:30:29] <jrajav> Where is the appropriate place to report a documentation issue for QUnit?
[09:31:08] <jrajav> Namely, api.qunitjs.com/notStrictEqual incorrectly says in the Description: "A non-strict comparison assertion, checking for inequality"
[09:31:20] <jrajav> It should read "A strict comparison assertion, checking for inequality"
[09:45:35] <Krinkle> jrajav: github.com/jquery/api.qunitjs.com/issues
[09:45:37] <Krinkle> all jquery websites are in open source :)
[09:45:39] <Krinkle> http://contribute.jquery.org/web-sites/
[09:45:41] <Krinkle> Thanks in advance
[09:45:55] <jrajav> Oh, so I can just make a pull request?
[09:46:01] <Krinkle> That would be even better, yeah.
[09:46:11] <jrajav> Should I make an issue AND a pull request and attach them?
[09:46:14] <jrajav> Or just a pull request?
[09:47:02] <jrajav> Oh, hey: https://github.com/jquery/api.qunitjs.com/commit/62bb22446444d0acaab56feb89743e4b1e9b5d65
[09:47:02] <b-ot> jrajav: Timo Tijhof (2mon 2w ago): notStrictEqual: Fix copy/paste mistake from notEqual, this one is strict  Fixes #26.
[09:47:04] <jrajav> Never mind :D
[09:47:32] <jrajav> It takes more than 2 months for changes to go out? o_O
[09:48:42] <Krinkle> jrajav: No, it just needs someone to deploy it
[09:49:21] <Krinkle> eh, me in this case.
[09:49:28] <Krinkle> Need to create a new tag to trigger the deploy hook
[09:49:30] <Krinkle> fixing :)
[09:50:05] <jrajav> Awesome :)
[09:52:59] <Krinkle> > jqcommit: [api.qunitjs.com] Krinkle tagged v1.11.0-7 at master: http://git.io/RPcfxA 
[10:44:33] <sizcommit> 01[13sizzle01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/edL9rA
[10:44:33] <sizcommit> 13sizzle/06master 140dc29d3 15Richard Gibson: No ticket: Fix bogus script error
[10:58:19] <sizcommit> 01[13sizzle01] 15gibson042 pushed 3 new commits to 06master: 02http://git.io/mjJ45A
[10:58:19] <sizcommit> 13sizzle/06master 14c3bbc09 15Richard Gibson: Fix jQuery #14381: Sorting cross-document nodes. Close gh-226.
[10:58:19] <sizcommit> 13sizzle/06master 14a0343fe 15Richard Gibson: Update version to 1.10.11
[10:58:19] <sizcommit> 13sizzle/06master 145efc23f 15Richard Gibson: Update version to 1.10.12-pre
[11:14:46] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/IOe8ng
[11:14:46] <jqcommit> 13jquery/06master 14c93743b 15Richard Gibson: Fix #14381: Update to Sizzle 1.10.11...
[11:14:59] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 061.x-master: 02http://git.io/lTv6vQ
[11:14:59] <jqcommit> 13jquery/061.x-master 1464bdf41 15Richard Gibson: Fix #14381: Update to Sizzle 1.10.11
[11:22:06] <doesallmagic2> Project jQuery Core build #964: STILL FAILING in 7 min 32 sec: http://jenkins.jquery.com/job/jQuery%20Core/964/
[11:22:07] <doesallmagic2> richard.gibson: Fix #14381: Update to Sizzle 1.10.11
[11:37:48] <doesallmagic2> Project jQuery Core 1.x build #271: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/271/
[11:37:48] <doesallmagic2> richard.gibson: Fix #14381: Update to Sizzle 1.10.11
[12:07:06] <mikesherov> mkwst: you there?
[12:07:58] <mikesherov> I was just idly daydreaming about getting a UseCounter into Chrome that counted which version of jQuery was on the pages people visited
[12:09:55] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/sqtsvA
[12:09:55] <jqcommit> 13jquery/06master 1413d58a9 15Richard Gibson: No ticket: Fix subproject iframe tests
[12:10:20] <mkwst> Hrm. File a bug, I'll talk with folks. That's not really what we envisioned as usage, but it's probably useful. 
[12:16:52] <doesallmagic2> Yippie, build fixed!
[12:16:52] <doesallmagic2> Project jQuery Core build #965: FIXED in 7 min 11 sec: http://jenkins.jquery.com/job/jQuery%20Core/965/
[12:16:53] <doesallmagic2> richard.gibson: No ticket: Fix subproject iframe tests
[12:32:33] <doesallmagic2> Project jQuery Core 1.x build #272: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/272/
[12:32:34] <doesallmagic2> richard.gibson: No ticket: Fix subproject iframe tests
[14:51:01] <tbranyen> timmywil: http://tbranyen.com/u/b722a150.png << also anyone else who may have an idea about the new modules in a build
[14:51:11] <tbranyen> i optimized and it seems like arr isn't defined within that specific module
[14:53:32] <timmywil> tbranyen: that looks like core. how are you optimizing?
[14:54:16] <tbranyen> timmywil: r.js
[14:54:20] <tbranyen> lemme check
[14:54:22] <timmywil> are you just including certain modules and running r.js over everything or did you do a custom build
[14:54:35] <tbranyen> including certain modules
[14:54:39] <tbranyen> and building with r.js
[14:54:47] <tbranyen> is there something special i should do to make that work?
[14:55:09] <timmywil> not really, is arr = require('./var/arr') not in your source?
[14:55:25] <timmywil> oh I know
[14:56:02] <timmywil> burke made it so that dependencies required within the source with require calls wasn't include in builds by default
[14:56:28] <timmywil> so ./var/arr is probably getting a 404 in your built file
[14:56:50] <tbranyen> http://tbranyen.com/u/8b166d20.png
[14:56:54] <tbranyen> yea cause it's def included
[14:56:59] <tbranyen> i'll manually include and see what happens
[14:57:27] <timmywil> that could be a reason to avoid internal require calls
[14:57:38] <timmywil> if people don't want to set that setting in their build config
[14:57:55] <timmywil> I just did it that way to make it more readable
[14:58:09] <tbranyen> yea
[14:58:23] <tbranyen> i'm also using a custom require/define implementation that allows optional deps
[14:58:28] <tbranyen> so i'm gonna investigate if that is doing it
[14:58:53] <tbranyen> define('jquery/var/arr',[],function() { return [];
[14:58:53] <tbranyen> });
[14:58:56] <tbranyen> yup def in there
[14:58:57] <timmywil> if you set findNestedDependencies: true in your build config, that should fix it, but I don't know if you have a lot of conditional dependencies
[14:59:07] <tbranyen> hrm might already have that set
[15:01:03] <timmywil> you know what, I should add some build tests for this
[15:02:08] <timmywil> because of the nature of var modules though, you can get slightly smaller file sizes by using custom builds. I'd recommend using that in production and my plan is to write a grunt plugin to that effect.
[15:02:55] <tbranyen> yeah
[15:02:59] <snover> get even smaller sizes by putting one less image on your website™
[15:03:21] <timmywil> yea yea
[15:03:54] <tbranyen> i think the issue is with how i'm using packages
[15:05:26] <timmywil> ?
[15:05:38] <tbranyen> timmywil: i just logged my require calls
[15:05:49] <tbranyen> and i'm seeing require("./var/support") which is how it's written
[15:05:55] <tbranyen> but the define is for jquery/var/support
[15:06:33] <tbranyen> r.js isn't rewriting the nested requries
[15:06:59] <timmywil> doesn't require normalize the require call path to the name and then check if it's cached though?
[15:07:36] <timmywil> oh, but if you've mapped jquery to the src folder, it would normalize to something like /Users/blah/jquery/src/var/support
[15:07:45] <timmywil> or whatever url
[15:08:58] <timmywil> ignore the file-format, it would be more like /js/jquery or /bower/jquery or something
[15:12:54] <timmywil> actually, what am I talking about? The relative path for the var folder wouldn't work because the built file's location is different. Hmm, that's an interesting problem.
[15:15:09] <snover> it’s not a problem
[15:17:09] <timmywil> tbranyen:  well, the custom build is probably going to be your best bet for building, which could be automated
[15:19:47] <timmywil> snover: It would be expected that one could include jQuery's AMD modules and build with r.js without changing anything
[15:22:26] <snover> timmywil: why do you think you cannot? tbranyen said he was using some custom thing
[15:23:34] <tbranyen> yeah its most likely my custom thing
[15:23:38] <snover> The choice to use the optional CommonJS compatibility module type in jQuery was a really bad idea
[15:23:42] <snover> and i never wrote the module like that
[15:23:47] <snover> and i am kind of pissed off that that was changed
[15:23:58] <snover> but whatever
[15:24:04] <tbranyen> the commonjs format is nicer looking, but less portable
[15:24:04] <snover> it’s not the problem
[15:24:18] <tbranyen> well maybe not even portable, since it works in dojo/curl
[15:24:25] <tbranyen> less predictable?
[15:24:30] <snover> spec-optional
[15:24:52] <snover> also relies on regular expressions and Function#toString
[15:25:38] <snover> https://github.com/amdjs/amdjs-api/wiki/AMD#simplified-commonjs-wrapping- this part
[15:27:11] <timmywil> I don't think the core team is that attached to it. It was put in as a way to mitigate having to read long dependency lists, with custom builds as the focus rather than consumable AMD modules.
[15:29:36] <timmywil> and it's not actually released yet, so if changing it back to dependency lists would help, then I'm all for it.
[15:29:40] <tbranyen> timmywil: any desire to migrating to per function amd modules?
[15:29:49] <tbranyen> i know it's more work, but i'd be willing to help on that front
[15:29:52] <timmywil> oh yea, that's the plan
[15:29:59] <tbranyen> perf
[15:31:47] <timmywil> we have plenty of method generation in loops, so I'm not sure if it's going to end up actually being per-method, but I'd like to keep splitting it up as much as possible.
[15:33:26] <timmywil> not to say that it's impossible
[15:34:50] <timmywil> gotta head home. feel free to make your concerns known snover. Any feedback is appreciated.
[15:35:05] <tbranyen> later dude
[15:35:12] <tbranyen> thanks for the leads
[15:35:22] <timmywil> np
[16:08:51] <Krinkle> !fiddle-qunit is https://bit.ly/fiddle-qunit
[16:08:51] <b-ot> Krinkle: memorised “fiddle-qunit”.
