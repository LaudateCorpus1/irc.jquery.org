[04:25:53] <jqcommit> [13jquery] 15iocosus opened pull request #1341: lolz (06master...06enc)  02http://git.io/khcxvA
[04:27:39] <jqcommit> [13jquery] 15iocosus closed pull request #1341: lolz (06master...06enc)  02http://git.io/khcxvA
[06:23:50] <gibson042> .
[06:52:05] <gibson042> ?tell m_gol I see the line-height animation failures on 1.x, and it looks to me like the most expedient fix would incorporate time measurement (i.e., assertion time minus animation start time) into the bound definitions. Did you have other thoughts?
[06:52:05] <b-ot> gibson042: Iâ€™ll tell m_gol about that.
[06:52:25] <m_gol> hi gibson042
[06:52:25] <b-ot> m_gol: You have 1 new message, use `read when you wish to read it.
[06:52:28] <m_gol> `read
[06:52:30] <b-ot> m_gol: From gibson042, 22s ago: I see the line-height animation failures on 1.x, and it looks to me like the most expedient fix would incorporate time measurement (i.e., assertion time minus animation start time) into the bound definitions. Did you have other thoughts?
[06:53:14] <gibson042> hey; I'm just back from vacation and saw your comments on https://github.com/jquery/jquery/pull/1339 
[06:53:14] <b-ot> gibson042: Pull request #1339 by mzgol (4d 13h ago): Fix #14084: attach the test div to documentElement, not body.
[06:55:02] <m_gol> gibson042: tbh I didn't look much into the 1.x failures so far, I was away for the weekend
[06:55:10] <m_gol> orkel should have more to say about that
[06:56:19] <gibson042> ah; right you are... apparently I'm not back to 100% yet ;)
[06:56:33] <m_gol> ;)
[08:37:33] <doesallmagic2> Project jQuery Migrate Core 1.x build #103: STILL FAILING in 2 min 36 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%20Core%201.x/103/
[09:01:48] <jqcommit> [13jquery] 15dmethvin closed pull request #1060: Ajax tests: Refactor tests and fix bugs. (06ajax-unit...06ajax-unit-fixup)  02http://git.io/anfrnA
[09:37:12] <Smaug_> Please tell me how to fecth data from database using jquery?
[09:38:30] <Smaug_> do we need to use ado.net for that? or we can do it with the help of jquery?
[09:38:45] <scott_gonzalez> Smaug_: Support is in #jquery.
[09:38:45] <m_gol> Smaug_: support is in #jquery
[10:00:44] <DaveMethvin> ok let me check ie11
[10:01:57] <m_gol> as for support tests: I guess we want to lazy-execute only those tests that would trigger layout?
[10:02:02] <DaveMethvin> m_gol There is a checkbox for [x] Enable native XMLHTTP support
[10:02:05] <m_gol> i.e. only those that now wait for doc ready?
[10:02:09] <DaveMethvin> checked by default
[10:02:12] <m_gol> wtf :(
[10:02:23] <DaveMethvin> but yeah, let's lazy-check anything that forces layout
[10:02:24] <m_gol> so you can disable native but the ActiveX one remains?
[10:02:40] <DaveMethvin> the activex one can be disabled with another option :)
[10:02:43] <m_gol> hahaha
[10:02:56] <DaveMethvin> there must be 50 ways to kill your ajax
[10:03:25] <m_gol> I wonder how many people do that
[10:03:43] <DaveMethvin> probably it's mostly IT departments of various companies
[10:03:45] <timmywil> I read the notes, I'll fix the broken tests related to AMD today
[10:03:47] <m_gol> most of current sites will break without AJAX anyway
[10:04:15] <DaveMethvin> it would only help if people were checking support.ajax, which they probably are not
[10:05:00] <timmywil> julian's cors plugin for IE9 doesn't check support.cors btw
[10:05:03] <m_gol> DaveMethvin: yeah, but we want to leave support being {} or {corse: sth} anyway
[10:05:05] <orkel> m_gol: apparently no one use it https://github.com/search?l=javascript&q=support.cors&ref=cmdform&type=Code
[10:05:13] <DaveMethvin> http://jquerybyexample.blogspot.com/2010/10/jquerysupportajax-property-in-jquery.html
[10:05:19] <m_gol> so this is mostly a question of using the xhrSupported variable
[10:05:48] <m_gol> I'd say if it occured only in IT departments then it's not much of a problem
[10:05:57] <DaveMethvin> agreed
[10:05:59] <m_gol> for their internal usage they can custom-compile jQuery without AJAX
[10:06:14] <DaveMethvin> or use jquery 1.7 for all i care, they screwed up their systems
[10:06:17] <DaveMethvin> :P
[10:06:19] <m_gol> ;)
[10:06:35] <orkel> timmywil: do need any help with amd tests?
[10:06:35] <m_gol> and I suppose you can break your IE in many other ways, right?
[10:06:47] <timmywil> orkel: no thanks, it should be simple enough
[10:06:48] <m_gol> for which we don't have support tests
[10:06:56] <orkel> cool, all right
[10:07:12] <m_gol> if (support.userBrokeTheBrowserInASpectacularWay) {...}
[10:07:25] <orkel> :-)
[10:07:44] <gibson042> where's that "fall on your own sword in sorrow" option...
[10:07:57] <timmywil> support.bra {}
[10:08:33] <m_gol> orkel: haha, I went to your search, "yquery"
[10:08:53] <m_gol> is it jQuery 1.0.2 with comments translated to Chinese?...
[10:09:13] <orkel> yeah, that is some weird stuff
[10:12:16] <m_gol> just to make it clear about lazy-executing support tests: is there any better way than to change all support.isSthSupported to isSthSupported() which will check an internal isSthSupportedValue and either return the value if defined or actually run the support test then?
[10:12:57] <DaveMethvin> seems like the way to go ... it adds a function call but those tend to be pretty fast
[10:13:19] <DaveMethvin> unless you want to expose the obj internally and check before the call, which seems like it will be bigger and uglier
[10:13:29] <m_gol> yeah
[10:13:43] <timmywil> m_gol: well, if it's a support test that's only used in one module you can check for the existence of the property or run support tests (like offset used to do)
[10:13:44] <m_gol> ES5 getters would be nice if they weren't so damn slow
[10:14:05] <DaveMethvin> watch, gibson042 will suggest rewriting the function once the initial check has been done :)
[10:14:07] <m_gol> timmywil: you mean if it's only run once?
[10:14:14] <timmywil> right
[10:14:18] <m_gol> because you might have many checks in one module
[10:14:37] <DaveMethvin> you could cluster them for sure if it saves time/effort
[10:14:53] <m_gol> k
[10:15:01] <timmywil> reuse test elements as much as you can
[10:15:27] <m_gol> but only within one module
[10:15:38] <DaveMethvin> yeah i'd say so
[10:15:40] <timmywil> right
[10:15:44] <m_gol> sure
[10:16:00] <DaveMethvin> seems like a waste to create a dep across modules just for a feature detect :)
[10:16:13] <timmywil> heh
[10:16:38] <m_gol> are we sure body will actually exist at the moment we really need the support test?
[10:16:55] <timmywil> as long as people execute their code when the doc is ready
[10:17:31] <DaveMethvin> if it's called before doc ready, then it could fail ... but then again in what scenarios would that be valid for each?
[10:17:36] <timmywil> which everybody should do
[10:17:58] <DaveMethvin> for example, offset of an element before document ready may not be something that can be calculated?
[10:18:03] <m_gol> I mean, imagine the scenario: sb attaches an element to documentElement to do their own support test, runs a jQuery method that does a support test which gives wrong result but still does, the result is then memoized and the support check is always wrong
[10:18:20] <m_gol> I just wonder if I should check for body presence before memoizing
[10:18:32] <timmywil> if it needs a body, sure
[10:18:36] <m_gol> k
[10:18:52] <m_gol> so I think I know what I need :)
[10:19:08] <m_gol> ah, one more
[10:19:13] <m_gol> about what orkel said before about documentElement
[10:19:21] <m_gol> I still think it might be worth it
[10:19:34] <m_gol> since if any support test can be run on docElem, we can save a body check when running it
[10:19:49] <DaveMethvin> we could do that for 2.x?
[10:20:06] <m_gol> yeah, I thought that maybe for 1.x it'd be safer to not rewrite in this way
[10:20:23] <m_gol> so I'll correct/break up my pr but will not do anything similar for 1.x
[10:20:30] <m_gol> and then rewrite support for both branches
[10:21:02] <DaveMethvin> it's all gonna come down to what code we break and how badly anyway ... you can bet there is code out there doing crazy stuff
[10:21:12] <m_gol> is it documented anywhere what should browsers do when dealing with non-head & non-body elements attached directly do documentElement?
[10:21:39] <DaveMethvin> you mean, "invalid documents?" :)
[10:21:43] <m_gol> yeah
[10:21:53] <DaveMethvin> html5 may have speced it i suppose
[10:21:57] <m_gol> bc I wonder if we're ok attaching directly to docElem
[10:21:59] <DaveMethvin> at least for parsing they did
[10:22:18] <m_gol> or would we punish one poor unknown browser that adheres to the spec but nothing else
[10:22:40] <orkel> m_gol: I had one idea with support module, btw scottgonzalez also proposed it independently
[10:22:45] <orkel> Say you have jQuery.fn.width
[10:23:04] <orkel> It depende on test, say, "supportWidth",
[10:23:17] <orkel> you assign *support test* on jQuery.fn.width, like so
[10:24:00] <orkel> width: function() {
[10:24:01] <orkel> testit( supportWidth );
[10:24:01] <orkel> 	jQuery.fn.width = width;
[10:24:01] <orkel> 	return width();
[10:24:01] <orkel> }
[10:24:46] <m_gol> nice idea :)
[10:24:56] <m_gol> though probably not for every test
[10:25:18] <m_gol> if sth deep inside a function does the check, it might be hard to implement in this way
[10:26:09] <DaveMethvin> orkel that's what i was talking about above, but let's save that for a second wave if needed
[10:26:20] <orkel> well, if you try to implement it, you can hack away the perfomance :-)
[10:26:34] <m_gol> I'll have it in my mind :)
[10:26:45] <orkel> DaveMethvin: sorry, i missed that comment
[10:26:48] <DaveMethvin> remember we probably get an order of magnitude perf increase by not doing all the forced layouts, so a function call isn't much of an extra
[10:26:54] <DaveMethvin> overhead
[10:27:28] <DaveMethvin> i figured gibson042 would propose it, but you did :)
[10:28:12] <DaveMethvin> if we need it, that trick should even survive Closure
[10:30:39] <gibson042> DaveMethvin we can get all kinds of wacky later on; think `width: defer("width", "supportWidth")` :D
[10:31:00] <DaveMethvin> i knew you'd come thru gibson042!
[10:31:17] <m_gol> ;)
[10:31:40] <m_gol> are we playing the "who will propose method compilation via jdalton first" game?
[10:32:02] <gibson042> if we are, I concede :)
[10:32:34] <DaveMethvin> i'm never playing code golf with jdaldon
[10:32:45] <m_gol> though even jdalton gave up on this idea for lodash modern build
[10:32:59] <DaveMethvin> yeah it makes for superbly unreadable code
[10:34:17] <m_gol> k, gotta go for now, I'll fix my pr today
[10:37:20] <doesallmagic2> Project jQuery Core build #895: STILL FAILING in 7 min 9 sec: http://jenkins.jquery.com/job/jQuery%20Core/895/
[10:39:26] <orkel> wow, it seems ajax tests start working
[10:39:28] <m_gol> did you see this? https://jeena.net/firefox-os-app-rejected
[10:39:53] <orkel> maybe i premature about it, but thank you gnarf!
[10:39:57] <m_gol> hah, story updated
[10:48:30] <orkel> gibson042: hey, maybe until we don't have mocks, we could comment a line-height test?
[11:33:21] <Krinkle> m_gol: DaveMethvin: Yes, different jobs can use different browserSets. They're set on a job level (e.g. commit #1234) not project level (jquery/jquery). We already do this in core for 1.x and master where master (2.x) does not get tested in IE6-8.
[11:33:37] <Krinkle> Config for it is in localSettings.json which is in our puppet repo (jquery/operations.git)
[11:34:24] <DaveMethvin> Krinkle yeah i vaguely remember that the sets need to be configged there
[11:35:29] <Krinkle> To set up a new one like this for another project (e.g. not jquery/jquery) or another branch, be sure to also update the Gruntfile and/or node-testswarm used in Jenkins to tell testswarm when to use that other browserset.
[11:35:56] <Krinkle> For which project is this? I can do it if you like.
[11:36:35] <DaveMethvin> we get to choose the browserset but not the individual browsers, right?
[11:37:14] <DaveMethvin> both 1.x-master and master on jquery, we want to add android 2.3 and ios 5.1
[11:37:23] <DaveMethvin> well we don't WANT to ... :)
[11:37:37] <DaveMethvin> but considering we say we support them and it's breaking
[11:37:56] <DaveMethvin> Krinkle we'd actually like a different browserset name for now tho so we can switch when we're ready
[11:50:13] <Krinkle> Yeah, you can't specify the browsers right from the job submission
[12:00:57] <granjero> hi, can anyone give me a hand with a jquery menu called superfish?? i can not make the dropdown menu to work
[12:01:50] <m_gol> granjero: support is in #jquery
[12:02:15] <granjero> ok m_gol!
[12:02:21] <granjero> iÂ´ll ask there!
[12:02:23] <granjero> tnx
[12:25:50] <jqcommit> [13jquery] 15mzgol synchronize pull request #1339: Fix #14084: attach the test div to documentElement, not body. (06master...06support)  02http://git.io/PfdRTw
[12:28:02] <jqcommit> [13jquery] 15mzgol synchronize pull request #1339: Fix #14084: attach the test div to documentElement, not body. (06master...06support)  02http://git.io/PfdRTw
[12:28:35] <m_gol> DaveMethvin, orkel: can you have a look? https://github.com/jquery/jquery/pull/1339
[12:28:35] <b-ot> m_gol: Pull request #1339 by mzgol (4d 19h ago): Fix #14084: attach the test div to documentElement, not body.
[12:28:57] <m_gol> I reverted all changes not related to moving tests out of body to documentElement
[12:29:17] <m_gol> I had to hardcode support.boxSizing to true for that for now, but it'll go away tomorrow anyway ;)
[12:40:09] <chuwiey> Hi, I'm running into a problem with 1.10.2 and the sourcemap, when using jquery from bower... 
[12:40:13] <chuwiey> Basically, the jquery.min.map that gets installed with bower is looking for jquery-1.10.2.js, however, bower installs a jquery.js file
[12:40:22] <chuwiey> So I wanted to create a pull request to fix that, however, when I checked out 1.x-master, I encountered three problems: 1) I'm not sure if that's the right branch to go off of. 2) I tried to build using grunt, but that's failing based on a missing src file from sizzle. 3) I saw that jquery 2.x says in the release.js file that the jquery.js file is defined, but is commented out due to backwards compatability with 1.x
[12:40:36] <chuwiey> can anyone point me in the right direction so i can branch this and fix?
[12:40:44] <chuwiey> or maybe i'm doing it wrong :-)
[12:47:48] <m_gol> chuwiey: we're aware of the problem, but the nature of it is much more complicated
[12:48:21] <m_gol> the problem is different CDNs use different names and sometimes they don't rename the source map definition
[12:49:50] <m_gol> as for the build process, everything is in README: https://github.com/jquery/jquery/#how-to-build-your-own-jquery
[12:51:16] <chuwiey> m_gol: Interesting, I thought this had to do with the compilation for the source map. Thanks, I'll take a look at the build instructions.
[12:51:43] <chuwiey> and for future reference, any 1.x pr should be submitted against 1.x-master? 
[12:53:01] <m_gol> yes
[12:53:39] <m_gol> if the fix makes sense for the 2.x branch as well, we'll cherry-pick it ourselves, you're free to publish pull requests to master or 1.x-master
[12:55:28] <chuwiey> thx
[13:27:43] <jqcommit> [13jquery.com] 15sth opened pull request #45: Remove duplicate "does not" (06master...06patch-1)  02http://git.io/Au1R-Q
[13:39:21] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 061.x-master: 02http://git.io/pPsANg
[13:39:21] <jqcommit> 13jquery/061.x-master 142b6a7b1 15Richard Gibson: No ticket: improve line-height animation test robustness
[13:55:33] <doesallmagic2> Project jQuery Core 1.x build #209: STILL FAILING in 16 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/209/
[13:55:34] <doesallmagic2> richard.gibson: No ticket: improve line-height animation test robustness
[18:11:33] <jqcommit> [13jquery] 15mzgol opened pull request #1342: Lazy support (06master...06lazy_support)  02http://git.io/gAh0Cg
[19:06:50] <jqcommit> [13jquery] 15mzgol synchronize pull request #1342: WIP: Make support tests lazy. (06master...06lazy_support)  02http://git.io/gAh0Cg
[20:08:48] <jqcommit> [13jquery.com] 15sth closed pull request #45: Remove duplicate "does not" (06master...06patch-1)  02http://git.io/Au1R-Q
[20:53:14] <jqcommit> [13jquery] 15EvandroZanatta opened pull request #1343: Update package.json (06master...06master)  02http://git.io/-kGxbg
[21:09:33] <sizcommit> 01[13sizzle01] 15timmywil pushed 2 new commits to 06master: 02http://git.io/e4t0tA
[21:09:33] <sizcommit> 13sizzle/06master 1496f16de 15Timmy Willison: Update version to 1.10.6
[21:09:33] <sizcommit> 13sizzle/06master 14971290e 15Timmy Willison: Update version to 1.10.7-pre
[21:10:23] <sizcommit> 01[13sizzle01] 15timmywil tagged 061.10.6 at 1496f16de: 02http://git.io/d_RdmA
[21:36:30] <timmywil> passing all but 2 ajax tests now in oldIE on 1.x-master. will finish up tomorrow
[21:40:12] <jqcommit> 01[13jquery01] 15timmywil pushed 4 new commits to 061.x-master: 02http://git.io/tc8e_A
[21:40:12] <jqcommit> 13jquery/061.x-master 14dc0d3b4 15Timmy Willison: Fix most of the broken tests in oldIE. Build order issue....
[21:40:12] <jqcommit> 13jquery/061.x-master 146e19d2a 15Timmy Willison: Make the attr handles a little more readable (+4 bytes)
[21:40:12] <jqcommit> 13jquery/061.x-master 14b718a16 15Timmy Willison: Update Sizzle: minor change to a test (oldIE must set defaultChecked on creation)
[21:51:44] <doesallmagic2> Project jQuery Core 1.x build #210: STILL FAILING in 11 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/210/
[21:51:44] <doesallmagic2> * timmywillisn: Fix most of the broken tests in oldIE. Build order issue.
[21:51:45] <doesallmagic2> * timmywillisn: Make the attr handles a little more readable (+4 bytes)
[21:51:45] <doesallmagic2> * timmywillisn: Update Sizzle: minor change to a test (oldIE must set defaultChecked on creation)
[21:51:46] <doesallmagic2> * timmywillisn: Use window.QUnit to detect the top window when loading with AMD
