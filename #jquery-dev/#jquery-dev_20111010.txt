[03:53:58] <jq-jenkins> Project QUnit build #23: STILL FAILING in 2 min 15 sec: http://swarm.jquery.org:8080/job/QUnit/23/
[03:53:59] <jq-jenkins> krinklemail: Redo of fixing issue #156 (Support Object.prototype extending environment).
[06:16:17] <jq-jenkins> Project QUnit build #24: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/QUnit/24/
[06:16:17] <jq-jenkins> * markus.messner-chaney: Handle expect(0) as expected, i.e. expect(0); ok(true, foo); will cause a test to fail
[06:16:18] <jq-jenkins> * markus.messner-chaney: Simplified check for assertion count and adjusted whitespace
[06:16:18] <jq-jenkins> * joern.zaefferer: Whitespace cleanup
[07:14:28] <Blobbington> Hey, I have a table of cickable event, when one is clicked it appends a div next to it. Why is it that clicking the same event appends the div to all the a tags in order?
[07:15:33] <Blobbington> for instance $('a').click(function(){ $(this).append("<div class='event_choice' ></div>"); });
[07:15:43] <aaronmcadam> ?wrong channel
[07:15:44] <bot-t> aaronmcadam, .position() - Get the current coordinates of the first element in the set of matched elements, relative to the offset parent. http://api.jquery.com/position/
[07:15:47] <aaronmcadam> ha
[07:15:53] <aaronmcadam> Blobbington: #jquery
[07:16:04] <aaronmcadam> ?channel
[07:16:04] <bot-t> aaronmcadam, Discussion - jQuery has many active mailing lists where you can feel free to discuss jQuery, ask questions, talk about JavaScript, or announce your plugins. http://jquery.com/discuss/
[07:16:24] <aaronmcadam> nopes, can't remember the right command heh
[07:19:42] <Blobbington> thanks anyways
[07:20:25] <gnarf> ?channels
[07:20:26] <bot-t> For support please go to #jquery or #jquerymobile. Development Channels: #jquery-dev - #jqueryui-dev - #jquerymobile-dev ; Meetings held in#jquery-meeting
[07:21:58] <aaronmcadam> ah cheers gnarf
[07:26:50] <jq-jenkins> Project QUnit build #25: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/QUnit/25/
[07:26:51] <jq-jenkins> joern.zaefferer: Default 'expected' to null in asyncTest(), same as in test() itself.
[07:54:23] <jq-jenkins> Project QUnit build #26: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/QUnit/26/
[07:54:23] <jq-jenkins> waw325: Fixes a bug where after an async test, assertions could move between test cases because of internal state (config.current) being incorrectly set
[07:54:46] <jq-jenkins> Project QUnit build #27: STILL FAILING in 16 sec: http://swarm.jquery.org:8080/job/QUnit/27/
[07:54:47] <jq-jenkins> * trevorparscal: Added more strict array type detection for dump output, and allowed NodeList objects to be output as arrays
[07:54:47] <jq-jenkins> * trevorparscal: Using === instead of ==
[07:54:48] <jq-jenkins> * joern.zaefferer: Use alias for Object.prototype.toString
[07:56:23] <rwaldron> hey jq-jenkins
[07:56:42] <rwaldron> timmywil yt?
[07:56:51] <timmywil> rwaldron: hi!
[07:56:56] <rwaldron> hey buddy
[07:57:04] <timmywil> so that has hasAttr thing is interesting
[07:57:07] <rwaldron> so, i saw your reply to orkel
[07:57:13] <timmywil> ha, yea
[07:57:47] <rwaldron> yeah, funny, you mentioned that we might add "hasAttr"... but didnt comment on his  hasAttr PR? https://github.com/jquery/jquery/pull/539
[07:57:48] <socialhapy> ★ Pull request on jquery by Orkel (9h, 55m ago): Introducing hasAttr()
[07:57:59] <rwaldron> well, until after
[07:58:00] <timmywil> i did
[07:58:03] <timmywil> oh, right
[07:58:05] <DaveMethvin> so how often is hasAttr used, and is it worth that much code?
[07:58:09] <DaveMethvin> obtw, HAI!
[07:58:15] <rwaldron> i was at the dog park reading from my phone
[07:58:17] <timmywil> that is a concern
[07:58:20] <timmywil> dave
[07:58:27] <rwaldron> and i got the first in email and i was like "huh?
[07:58:39] <DaveMethvin> don't look at the number of iterations, look at the time it takes to do each
[07:58:43] <rwaldron> Hai! DaveMethvin
[07:58:47] <DaveMethvin> and both are negligible
[07:58:49] <rwaldron> you're neon green today
[07:59:00] <timmywil> hey, for me too
[07:59:06] <mikesherov> hey guys
[07:59:07] <DaveMethvin> wonder why? wth do those colors mean anyway
[07:59:13] <rwaldron> timmywil you're pink
[07:59:15] <DaveMethvin> hey mikesherov
[07:59:19] <rwaldron> hey mikesherov
[07:59:22] <timmywil> i'm blue!
[07:59:27] <rwaldron> mikesherov is blue
[07:59:32] <rwaldron> i'm mustard
[07:59:34] <timmywil> mikesherov is pink!
[07:59:35] * rwaldron barfs
[07:59:40] <mikesherov> wait, what?
[07:59:40] <timmywil> lol
[07:59:51] <DaveMethvin> you gotta keep up mikesherov
[07:59:51] <rwaldron> mikesherov the colors in linkinus
[07:59:52] <mikesherov> I'm blue, abadee,abadie?
[07:59:58] <DaveMethvin> lol
[08:00:02] <rwaldron> ahahahahahaha
[08:00:41] <rwaldron> timmywil this is a silly question...
[08:00:46] <rwaldron> typeof div.hasAttribute !== "undefined"
[08:00:47] <rwaldron> vs
[08:00:49] <timmywil> DaveMethvin: hasAttr will have to wait until 1.8 and we can all vote on it
[08:00:53] <rwaldron> "hasAttribute" in div,
[08:01:03] <timmywil> yea, i had a perf lying around somewhere
[08:01:10] <rwaldron> timmywil also, +1 to waiting for 1.8 and voting
[08:01:16] <rwaldron> ok cool
[08:01:19] <DaveMethvin> oh definitely not something to be put in soon
[08:01:20] <rwaldron> i dont need to see it
[08:01:22] <rwaldron> i trust ya
[08:01:23] <mikesherov> so, about that waiting for 1.8+...
[08:01:28] <DaveMethvin> i wish ppl wouldn't throw pr's at us
[08:01:35] <rwaldron> :X
[08:01:39] <rwaldron> weird
[08:01:52] <DaveMethvin> oh mikesherov are you going to mention box-model
[08:01:55] <mikesherov> HAHAH
[08:01:58] <rwaldron> ": X" should not equal <3
[08:01:59] <mikesherov> bingo
[08:02:01] <DaveMethvin> WELL DON'T :P
[08:02:05] <DaveMethvin> yeah we need to talk
[08:02:09] <jq-jenkins> Project QUnit build #28: STILL FAILING in 16 sec: http://swarm.jquery.org:8080/job/QUnit/28/
[08:02:09] <jq-jenkins> * joern.zaefferer: Whitespace/formatting fix, remove unnecessary parens
[08:02:10] <jq-jenkins> * joern.zaefferer: Check if setTimeout is available before trying to delay running the next task. Fixes #160
[08:02:10] <jq-jenkins> * joern.zaefferer: More whitespace/parens cleanup
[08:02:11] <jq-jenkins> * joern.zaefferer: Update readme with basic notes on releases
[08:02:17] <rwaldron> mikesherov i'm glad you've joined us here btw
[08:02:24] <rwaldron> please do that more often
[08:02:30] <mikesherov> right, I was waiting to talk about it.
[08:02:31] <rwaldron> (ie. join us in -dev)
[08:02:36] <mikesherov> Well, I usually contrib on weekends and nights
[08:02:40] <DaveMethvin> yeah but don't bring any hard problems
[08:02:42] <timmywil> rwaldron: found it
[08:02:43] <timmywil> http://jsperf.com/in-vs-typeof
[08:02:46] <mikesherov> so I pop up here4 during those times
[08:03:04] <mikesherov> but I just happened to have this tab open today at work
[08:03:10] <rwaldron> i think DaveMethvin and I did most of the event.fixHooks at night...?
[08:03:15] <rwaldron> so, nights are cool
[08:03:22] <DaveMethvin> ok so mikesherov we've got two related tickets on box-model
[08:03:24] <matjas> timmywil: fyi you can use Markdown syntax for inline code spans, e.g. “Since `elem.functionName` calls the function”
[08:03:27] <mikesherov> yeah, I usually just tweet at you
[08:03:32] <rwaldron> timmywil that just crashed chrome...
[08:03:41] <timmywil> haha
[08:03:43] <rwaldron> nvm... it was jsperf itself
[08:03:50] <rwaldron> something it tries to load
[08:03:55] <matjas> :o
[08:03:58] <matjas> that shouldn’t happen
[08:04:06] <timmywil> matjas: oh nice feature!
[08:04:08] <rwaldron> matjas happens to me frequently
[08:04:13] <rwaldron> thanks for that!
[08:04:19] <gnarf> so....
[08:04:22] <mikesherov> right, there are techinically 3 box-model tickets, although mine is clearly a contrived example
[08:04:25] <gnarf> stopQueue ?
[08:04:30] <mikesherov> I just wanted to prove the docs wrong!
[08:05:16] <DaveMethvin> the jquery.support.boxModel gets the wrong answer because it expects only IE6/7 to have a box model where the width includes border and padding
[08:05:30] <mikesherov> right
[08:05:43] <rwaldron> i'm going to write jQuery in Dart
[08:05:44] <rwaldron> brb
[08:05:45] <DaveMethvin> so i wondered why we aren't looking at CSS1Compat instead
[08:05:48] <mikesherov> but also, it expects a never changing value for all elements
[08:05:58] <DaveMethvin> mikesherov: yeah and that makes me cry
[08:06:02] <mikesherov> me too
[08:06:03] <timmywil> rwaldron: lol
[08:06:08] <mikesherov> I get all sad panda about it
[08:06:12] <gnarf> q.q
[08:06:16] <DaveMethvin> b/c we'll need to get box-model every time we do dimensions
[08:06:23] <mikesherov> Right
[08:06:36] <mikesherov> But not every time
[08:06:44] <timmywil> sometimes I remember why we need to check box-model and then I forget again.
[08:06:45] * DaveMethvin listens
[08:06:51] <gnarf> only after a reflow?
[08:07:01] <mikesherov> so, basically, it only needs to look up box-model when offsetWidth/Height is 0
[08:07:22] <timmywil> which means it's hidden, but why check it there?
[08:07:22] <mikesherov> dimensions only uses the fallback if the element is inside a hidden element, or unattached from the dom
[08:07:33] <mikesherov> no, but it's not hidden
[08:07:43] <mikesherov> because we do the cssswap
[08:07:46] <timmywil> it is if it's inside a hidden elem
[08:07:57] <timmywil> oh, well, yes
[08:07:58] <mikesherov> the css swap takes care of the fact that it itself is hdiden
[08:08:07] <mikesherov> the fallback is for unattached nodes, and children of hidden elements
[08:08:24] <rwaldron> timmywil this perf has the suggestion i was going to make over both
[08:08:33] <rwaldron> property access
[08:08:40] <rwaldron> but that's weird in older IE
[08:08:43] <mikesherov> so in reality, it goes like this:
[08:08:50] <timmywil> what i mean is, do offset values normally take box-sizing into account?
[08:08:58] <timmywil> if so, then I understand the need
[08:09:12] <mikesherov> offsetWidth is the same as css width in box-sizing: border-box
[08:09:21] <mikesherov> https://github.com/jquery/jquery/pull/528
[08:09:22] <socialhapy> ★ Pull request on jquery by mikesherov (6d, 16h ago): make sure box-sizing:border-box children of a hidden div report inner/outer/Width()/Height() correctly, fixes #10413
[08:09:26] <timmywil> if not, why are we doing it because we have 3 functions that you can use to include padding/border/margin
[08:09:39] <mikesherov> right, that's exactly right
[08:09:46] <mikesherov> and so I combined code paths
[08:10:05] <mikesherov> so that it does the exact same thing if offsetWidth is used, or if box-sizing is border-box
[08:10:20] <mikesherov> but it only checks border box is offsetWidth failed, or the swap failed
[08:10:34] <mikesherov> so although it's an edge case, that's part of it's advantage
[08:10:40] <mikesherov> it only does it when it needs to
[08:10:48] <mikesherov> and it only does css3 when it needs to
[08:11:02] <mikesherov> and even caches the css3Prop name for additional lookups
[08:11:52] <DaveMethvin> looking at the code now ...
[08:11:57] <mikesherov> propName does: cssProps[name], then name in elem.style, then does css3Prop vendor prefix lookup
[08:12:12] <mikesherov> and it's about 13 lines of code
[08:12:27] <mikesherov> I'm admittedly green when it comes to perf
[08:12:50] <timmywil> mikesherov: no, you're pink
[08:12:54] <mikesherov> LOL
[08:12:58] <rwaldron> no, timmywil you're pink.
[08:13:03] <DaveMethvin> NOU
[08:13:06] <mikesherov> but I think the real impact is the propName lookup of name in elem.style
[08:13:13] <mikesherov> but I was mentioning in my last comment
[08:13:22] <rwaldron> oh man... did you see the question from Orkel?
[08:13:40] <DaveMethvin> the two code paths are tantalizingly similar, i was trying to think of a way to combine them
[08:13:47] <mikesherov> that if we're willing to use cssProps as a cache, we can even cache known property names so that cssProps almost always has the answer
[08:13:52] <mikesherov> I did
[08:13:56] <mikesherov> in following commits
[08:14:01] <mikesherov> I did three commits
[08:14:03] <DaveMethvin> oh missed that
[08:14:24] <mikesherov> Yeah, I went ahead and merged the code paths and wrote in generic css3 support ;-)
[08:14:30] <DaveMethvin> oh much better!
[08:14:33] <rwaldron> i was thinking that vendor prefix could be determined in the support module
[08:14:43] <mikesherov> it'll work for ALL css3 vendor prefixed property names
[08:14:46] <rwaldron> and then re-used elsewhere
[08:14:52] <mikesherov> right, I get that
[08:15:00] <mikesherov> I was also thinking though, that it truly belongs in css
[08:15:04] <rwaldron> like... when requestAnimationFrame returns...?
[08:15:14] <mikesherov> and that looking it up "just in time" saves on perf
[08:15:31] <mikesherov> but again, I didn't continue exploring before I talked to you
[08:16:01] <gnarf> doing jQuery.cssProps[ name ] || propName( elem, name ) instead of propName( elem, name ) everywhere
[08:16:08] <gnarf> you might gain some perf back
[08:16:19] <DaveMethvin> i really like where this is headed, but are we getting too ambitious fixing this in 1.7?
[08:16:24] <mikesherov> propName uses cssProps[ name ]
[08:16:28] <DaveMethvin> i have no problem with 1.7b2
[08:16:29] <gnarf> mikesherov: i know
[08:16:33] <mikesherov> save it till 1.8 if you want!
[08:16:34] <gnarf> but if you avoid the function call
[08:16:43] <gnarf> you gain the perf back
[08:16:43] <mikesherov> oh, OK
[08:16:50] <DaveMethvin> we can discuss at our meeting, 45 minutes
[08:16:59] <mikesherov> gnarf, ok, but then I'd argue that you cache every property lookup
[08:17:02] <gnarf> also, store the "name" in the cache if it doesn't need rewirite too
[08:17:08] <timmywil> yea, i'd feel more comfortable waiting until 1.8.  propName could be useful in the effects rewrite
[08:17:09] <mikesherov> even known <css3 values
[08:17:21] <gnarf> mikesherov: so? is that such a bad thing?
[08:17:25] <mikesherov> No
[08:17:27] <mikesherov> it isn't
[08:17:30] <mikesherov> I mentioned it in my comment
[08:17:36] <mikesherov> I just am not a perf expert
[08:17:39] <gnarf> i think it would be worth it
[08:17:48] <mikesherov> so I gave both options as a suggestion, and let you guys decide :-)
[08:17:52] <gnarf> tiny code impact
[08:18:03] <mikesherov> well, an ever growing cssProps array
[08:18:08] <mikesherov> which I think is fine
[08:18:12] <mikesherov> I gotta run for a few
[08:18:16] <mikesherov> but mull it over
[08:18:17] <mikesherov> brb
[08:18:19] <DaveMethvin> cya mikesherov thanks!
[08:18:24] <mikesherov> 1.7, 1.8, I don't care
[08:18:25] <timmywil> i like the cssProps idea.  one check and they shouldn't collide
[08:18:29] <mikesherov> no problem
[08:18:29] <rwaldron> later mikesherov
[08:18:32] <rwaldron> don't be a stranger
[08:18:38] <timmywil> mikesherov: peace
[08:18:38] <mikesherov> I'll be back shortly!
[08:19:20] <gnarf> then function propName( elem, name ) can probably also include the code for the css3
[08:19:39] <timmywil> gnarf: i was thinking the same
[08:19:40] <gnarf> just if ( name in elem.style ) { return name; } /* css3PropName....
[08:20:06] <gnarf> mikesherov: ^^^ whenever you read it
[08:20:32] <gnarf> actually
[08:20:45] <gnarf> just if ( name in elem.style ) { return jQuery.cssProps[ name ] = name; } /* css3PropName....
[08:21:13] <gnarf> also
[08:21:19] <gnarf> does that need to be public, the cssProps?
[08:21:23] <DaveMethvin> yeah i can't imagine that cache will grow without bound on normal pages
[08:21:58] <timmywil> gnarf: probably, but users can still extend it even if we use it as a cache
[08:22:11] <timmywil> precedence goes to user
[08:22:23] <gnarf> sure
[08:22:34] <timmywil> still, i mean
[08:22:57] <rwaldron> this is like...
[08:23:01] <rwaldron> https://code.google.com/p/dart/source/browse/branches/bleeding_edge/dart/client/samples/sunflower/Sunflower.dart
[08:23:08] <rwaldron> ...
[08:23:33] <rwaldron> I'm seeing all kinds of familiar stuff
[08:23:41] <timmywil> looks a whole lot like java
[08:23:44] <rwaldron> yeah
[08:23:59] <timmywil> which is probably intentional coming from google
[08:24:01] <rwaldron> but almost like regular javascript works inside dart
[08:24:05] <rwaldron> var doc = window.document;
[08:24:09] <rwaldron> doc.getElementById("canvas");
[08:24:29] <timmywil> hmm, true
[08:24:37] <DaveMethvin> why does everyone feel like they need to create a new language? we haven't figured out all the ways to fuck up in the ones we already have!
[08:24:46] <rwaldron> then look at the canvas stuff
[08:24:50] <timmywil> DaveMethvin: you have
[08:24:52] <timmywil> ;)
[08:24:59] <DaveMethvin> ok, yeah i'm ahead of you there
[08:25:28] <timmywil> jkjk
[08:25:39] <rwaldron> that file could easily be ported to JS in less code as well
[08:25:42] <rwaldron> i dont get it.
[08:25:43] <DaveMethvin> dart's interesting but why?
[08:25:54] <timmywil> oh, so I'm done http://www.timmywillison.com/2011/jqWery.html
[08:26:01] <DaveMethvin> i mean what's that broken about js?
[08:26:09] <DaveMethvin> yeah timmywil i saw that
[08:26:26] <rwaldron> main() { new Foo(); } class Foo { Foo() {} } === (function() { })();
[08:26:39] <rwaldron> i think even...
[08:26:46] <timmywil> cool
[08:26:52] <rwaldron> nvm, that's way more then nec
[08:26:57] <rwaldron> i think basically
[08:27:03] <DaveMethvin> it's such a shame that querySelectorAll isn't all we need
[08:27:09] <rwaldron> main() { } === (function(){})()
[08:27:46] <tbranyen> isn't main more of a single entry point invocation tho? opposed to having multiple IIFEs?
[08:27:58] <tbranyen> like you wouldn't have multiple mains would you?
[08:28:12] <DaveMethvin> what tbranyen said ...
[08:28:27] <DaveMethvin> i guess you can't have statements lying out in global scope?
[08:28:41] <rwaldron> tbranyen yes
[08:28:59] <rwaldron> so i guess not ===
[08:29:02] <rwaldron> but more like ==
[08:37:38] <gnarf> https://github.com/mikesherov/jquery/pull/1 :)
[08:37:39] <socialhapy> ★ Pull request on jquery by gnarf37 (7.721s ago): Minor rewrite
[08:38:12] <gnarf> i love making pulls against pulls :)
[08:42:00] <gnarf> its only +116 bytes gzip
[08:43:29] <gnarf> i think that really needs to be a 1.8 feature request tho, its too late to land in 1.7 isn't it?
[08:44:13] <gnarf> timmywil: can you take a look at http://bugs.jquery.com/query?status=%21closed&owner=gnarf -- do we really want to land either of these?
[08:44:21] <gnarf> lots of code for odd edge cases
[08:44:38] <gnarf> both are in effects, which can be punted to 1.8
[08:44:51] <gnarf> and perhaps solved there
[08:44:52] <timmywil> trac taking forever...
[08:45:08] <gnarf> docs#8627
[08:45:09] <bot-t> [#8627] .animate() fails on letterSpacing in IE (regression in 1.5.1) (assigned bug) - http://jqbug.com/8627
[08:45:14] <gnarf> docs#8498
[08:45:15] <bot-t> [#8498] Animate Hooks (assigned feature) - http://jqbug.com/8498
[08:45:47] <timmywil> gnarf: yea that was my thinking as well
[08:46:05] <gnarf> meeting material?
[08:46:10] <timmywil> sounds good
[08:46:12] <gnarf> :)
[08:49:43] <rwaldron> so... dart can't resolve `window` when called from main(){}
[08:49:55] <rwaldron> but ha no problem resolving it in a class
[08:50:01] <rwaldron> has*
[08:50:25] * rwaldron back to dQuery
[08:51:46] <rwaldron> this is nice...
[08:51:56] <rwaldron> guess what "document.query()" is?
[08:52:26] <timmywil> querySelectorAll?
[08:52:29] <rwaldron> yep
[08:52:33] <timmywil> cool
[08:52:43] <rwaldron> i have to admit, the dom stuff is not too shabby
[08:52:52] <rwaldron> and this syntax is too obvious
[08:53:00] <rwaldron> you'd have to be an idiot to not "get it"
[08:53:13] <rwaldron> it's just JavaScript, C and Java
[08:53:53] <rwaldron> Dom.ready( () { /* function body */ } )
[08:53:58] <rwaldron> i actually <3 that
[08:54:13] <rwaldron> the function expression as "(){}"
[08:54:20] <rwaldron> i had that idea for ES.next
[08:54:43] <rwaldron> I was told it's too ambiguous for JS parsers
[09:02:08] <DaveMethvin> rwaldron timmywil gnarf meeting?
[09:02:18] <timmywil> meeting meeting meeting
[09:02:26] <DaveMethvin> oh you're already there
[10:02:12] <kswedberg> timmywil: y u no haz rss feed for timmywillison.com? :/
[10:03:15] <rwaldron> it's next to his fax machine
[10:04:05] <kswedberg> ahahaha! zing
[10:04:18] <rwaldron> <3
[10:04:49] <kswedberg> timmywil: next time you post something to your blog, could you send me a page? I always keep my beeper handy.
[10:15:51] <timmywil> :P
[10:17:54] <jq-jenkins> Project jQuery Color build #6: STILL FAILING in 3.2 sec: http://swarm.jquery.org:8080/job/jQuery%20Color/6/
[10:22:59] <jq-jenkins> Project jQuery Color build #7: STILL FAILING in 3 min 17 sec: http://swarm.jquery.org:8080/job/jQuery%20Color/7/
[10:31:38] <jq-jenkins> Project jQuery Color build #8: STILL FAILING in 2 min 5 sec: http://swarm.jquery.org:8080/job/jQuery%20Color/8/
[10:31:38] <jq-jenkins> Corey Frang: Merging in qunit master
[10:35:01] <jq-jenkins> Project jQuery Color build #9: STILL FAILING in 3 min 23 sec: http://swarm.jquery.org:8080/job/jQuery%20Color/9/
[10:39:59] <gnarf> nice http://swarm.jquery.org/job/233/
[10:44:02] <jq-jenkins> Project jQuery Color build #10: STILL FAILING in 5 min 11 sec: http://swarm.jquery.org:8080/job/jQuery%20Color/10/
[10:44:02] <jq-jenkins> Corey Frang: Swarm injection for testing
[10:59:25] <mikesherov> hello?
[10:59:39] <mikesherov> Is Corey Frang here?
[11:00:01] <paul_irish> gnarf: ^
[11:02:05] <gnarf> sup mikesherov
[11:02:33] <gnarf> that pull was just the result of what we were talking about earlier
[11:11:12] <mikesherov> OH
[11:11:18] <mikesherov> gnarf, frang
[11:11:33] <mikesherov> able was I ere I saw elba
[11:12:04] <mikesherov> OK, so I just need to auto pull in your changes, gnarf?
[11:12:18] <mikesherov> and that'll autoupdate my PR to main jq?
[11:12:21] <gnarf> mikesherov: yeah, then don't forget to pull the branch from github to your local too :)
[11:12:34] <gnarf> mikesherov: yup - that pull is filed against your branch
[11:12:47] <gnarf> so just hit the merge button and it will do the work :)
[11:13:31] <mikesherov> done
[11:13:37] <mikesherov> OK, so there we go!
[11:13:47] <mikesherov> go teamwork
[11:13:53] <gnarf> yeah, github rocks
[11:13:54] <gnarf> :)
[11:14:09] <mikesherov> yeah, I had the code pretty much written that way
[11:14:18] <mikesherov> and was wavering for a bit
[11:14:42] <mikesherov> light bulb had initially gone from Louis Remi's comments about cssProps
[11:14:49] <mikesherov> "they're basically cheap cssHooks"
[11:15:49] <mikesherov> actually, I think I can do one more perf update
[11:16:26] <mikesherov> you're passing in elem to propName... we could just pass in elem.style...
[11:17:42] <gnarf> thats kinda indifferent
[11:17:55] <gnarf> prolly adds bytes - but doesn't really save much time
[11:18:03] <gnarf> unless we already had "style"
[11:18:09] <gnarf> in both cases
[11:19:29] <mikesherov> oh, not perf, size...
[11:20:07] <mikesherov> we're doing now, "var style = elem.style",
[11:21:55] <mikesherov> brb
[11:31:01] <rwaldron> DaveMethvin looks like i can remove both the obj != null and typeof obj === "object" conditions
[11:31:09] <DaveMethvin> yep
[11:31:21] <DaveMethvin> does that change the behavior of sending in a new Date() value?
[11:31:35] <rwaldron> looking at it now
[11:31:55] <DaveMethvin> that's the only object i could think of that might be commonly passed, it prolly returns the getTime
[11:32:03] <rwaldron> it works fine
[11:32:18] <DaveMethvin> or does it return the localized date string?
[11:32:21] <rwaldron> "test=Mon+Oct+10+2011+14%3A30%3A11+GMT-0400+(EDT)"
[11:32:26] <DaveMethvin> ugh
[11:32:35] <DaveMethvin> is that consistent before/after the patch?
[11:34:33] <rwaldron> thats like... always
[11:35:10] <rwaldron> i lied
[11:35:15] <rwaldron> it was nothing at all before
[11:35:24] <DaveMethvin> well that's ok then i guess
[11:35:35] <DaveMethvin> returning the localized date string isn't waht anyone would want
[11:35:41] <DaveMethvin> but returning an empty string isn't either :)
[11:36:14] <DaveMethvin> i have no idea why anyone would create Number(x) anyway
[11:36:20] <DaveMethvin> why wrap a primitive value?
[11:39:57] <rwaldron> ?
[11:40:00] <rwaldron> i dont know
[11:40:04] <rwaldron> to be a jerk
[11:41:32] <DaveMethvin> lol yeah that's prolly it :)
[11:41:53] <DaveMethvin> in the grand tradition of .bind("click", null)
[11:44:43] <rwaldron> DaveMethvin changed pushed
[11:53:53] <gnarf> DaveMethvin / timmywil: https://github.com/jquery/jquery/pull/541
[11:53:54] <socialhapy> ★ Pull request on jquery by gnarf37 (1m, 1s ago): .stop( [queue,] clearQueue, gotoEnd )
[11:59:25] <mikesherov> back
[11:59:35] <mikesherov> gnarf, I left the commit the way it was.
[12:04:10] <gnarf> mikesherov: cool
[12:04:24] <gnarf> mikesherov: have you thought about trying to jsperf that?
[12:04:37] <mikesherov> I'm not so great with jsperf
[12:04:44] <mikesherov> I'm willing to figure it out
[12:04:53] <mikesherov> but I'd rather have one of you guys do it ;)
[12:10:21] <rwaldron> i'd rather you just get good at it
[12:10:33] <DaveMethvin> lol
[12:10:41] <rwaldron> :)
[12:10:48] <rwaldron> tough love!
[12:10:52] <mikesherov> OK, sounds good to me
[12:10:59] <DaveMethvin> hey mikesherov i think you should learn, we need more people to spread the blame around
[12:11:08] <rwaldron> speaking of which, DaveMethvin i pushed changes, did you catch that?
[12:11:08] <mikesherov> You guys have a tutorial on that?
[12:11:13] <rwaldron> ahhahaha DaveMethvin +9001
[12:11:20] <rwaldron> tutorial on spreading blame?
[12:11:26] <rwaldron> that's easy!
[12:11:28] <mikesherov> I saw one once on twitter about jsperf's jquery
[12:11:28] <rwaldron> NO U
[12:11:29] <DaveMethvin> damn rwaldron beat me to it
[12:11:35] <mikesherov> ITS OVER 9000
[12:11:36] <rwaldron> ahahaha
[12:12:06] <scott_gonzalez> I'm filing a ticket for deferred to be forced to be async
[12:12:10] <scott_gonzalez> should I mark it as a bug or a feature?
[12:12:19] <scott_gonzalez> I personally view sync deferreds as a bug
[12:12:21] <gnarf> some strange stuff mikesherov http://jsperf.com/cssprops
[12:12:24] <DaveMethvin> scott_gonzalez: i'd mark it as an enhancement
[12:12:51] <DaveMethvin> scott_gonzalez: i think the fails in the ui unit tests are all due to focus/blur
[12:12:57] <DaveMethvin> i was trying to use the native method
[12:13:07] <DaveMethvin> but i don't think i can so i'm gonna fall back to the old way
[12:13:09] <mikesherov> gnarf, what was strange?
[12:14:07] <gnarf> not sure why notAProperty takes so much longer every time...
[12:14:28] <gnarf> but - considering its all cached, it seems like the perf hit is minimal
[12:14:45] <mikesherov> wait, so I'm not sure what I'm looking at?
[12:15:56] <gnarf> mikesherov: git is the version in master now
[12:16:03] <gnarf> patched is the version you have on your branch
[12:16:16] <gnarf> and the test is the speed of .css( "property" )
[12:16:20] <mikesherov> OK, got that part
[12:16:48] <mikesherov> so, you're saying it's 35Kops vs. 30Kops
[12:16:56] <mikesherov> and so that seems like a big perf hit
[12:17:16] <mikesherov> I know why it's worse
[12:17:23] <mikesherov> it has to do the css3 fallback
[12:17:31] <mikesherov> because it's not a style
[12:17:44] <gnarf> right
[12:17:49] <gnarf> but it should only do that on the first op
[12:17:50] <gnarf> right?
[12:17:53] <mikesherov> yes
[12:18:05] <mikesherov> if you query that same non-existent prop again, it's cached now
[12:18:17] <gnarf> and we just queried it 35k times a second
[12:18:18] <gnarf> or whatever
[12:18:23] <mikesherov> right
[12:18:23] <gnarf> so why the giant difference
[12:20:14] <mikesherov> well, because theoretically, jsperf is from scratch each time, right?
[12:20:56] <gnarf> no
[12:21:13] <mikesherov> oh
[12:22:16] <gnarf> like i said
[12:22:17] <DaveMethvin> well either way it's pretty damn fast, no?
[12:22:19] <gnarf> interesting results
[12:22:46] <gnarf> mikesherov: something else changed probably
[12:23:06] <mikesherov> should I rebase my PR?
[12:23:17] <rwaldron> iron it out!
[12:23:32] <mikesherov> iron it out?
[12:23:41] <rwaldron> i dont know
[12:23:47] <DaveMethvin> that rwaldron he talks funnny
[12:23:53] <DaveMethvin> oy oy mary poppins
[12:23:58] <rwaldron> ahahaha
[12:24:11] <rwaldron> thass roight guv'na
[12:24:18] <mikesherov> cockney british now?
[12:24:28] <mikesherov> Shine ya shoes for a nickel, guv'na?
[12:24:33] <gnarf> mikesherov: why rebase?
[12:24:36] <DaveMethvin> rwaldron: do you have a link for mikesherov?
[12:24:38] <gnarf> oh
[12:24:54] <jq-jenkins> Project QUnit build #29: STILL FAILING in 1 min 22 sec: http://swarm.jquery.org:8080/job/QUnit/29/
[12:24:55] <jq-jenkins> trevorparscal: Fixed IE compatibility issues with using toString on NodeList objects,
[12:25:00] <DaveMethvin> if we're not gonna land this for a while it will prolly go stale later
[12:25:44] <mikesherov> yeah, I was just talking about addressing the "some else changed probably" theory
[12:25:53] <DaveMethvin> oah the perf question
[12:26:11] <mikesherov> updating gnarf's version of my PR to reflect the rest of the changes since my PR
[12:28:40] <rwaldron> DaveMethvin mikesherov skip to about 5:09 http://soundcloud.com/bassistance/warnings
[12:31:42] <mikesherov> cool, thanks
[12:33:57] <mikesherov> HAHA
[12:34:54] <mikesherov> was expecting something else
[12:35:04] <rwaldron> DaveMethvin ^^
[12:35:06] <rwaldron> :D
[12:35:21] <rwaldron> mikesherov we did a bunch of "dramatic bug readings" at the lasy jQuery conference
[12:35:26] <DaveMethvin> i still laughed hard
[12:35:35] <rwaldron> it was an inspired idea by gnarf <3
[12:35:42] * gnarf takes a bow
[12:35:51] <mikesherov> yeah, heard about it on twitter
[12:35:56] <gnarf> i think DaveMethvin was there when we came up with it
[12:35:57] <gnarf> :)
[12:36:07] <gnarf> groupthought idea
[12:36:14] <gnarf> i wont take all the credit
[12:36:16] <rwaldron> i think we all were
[12:36:20] <rwaldron> but it was your idea
[12:36:25] <rwaldron> i blame you
[12:36:36] <gnarf> it was on the walk from south station to the MT party i think
[12:36:46] <rwaldron> ohhh ok
[12:36:57] <rwaldron> i thought it was at the testswarm meeting
[12:37:22] <mikesherov> so yeah, seems as if "NotAproperty" is slower
[12:37:25] <mikesherov> but not terrible
[12:37:39] <mikesherov> and is at that point not behavior we should optimize for anyway, right?
[12:38:02] <gnarf> rwaldron: it might of been
[12:38:04] <gnarf> i dunno
[12:38:10] <gnarf> that whole weekend bleeds together
[12:38:13] <gnarf> :)
[13:24:11] <jq-jenkins> Project jQuery Color build #11: STILL FAILING in 19 sec: http://swarm.jquery.org:8080/job/jQuery%20Color/11/
[13:26:54] <jq-jenkins> Project jQuery build #108: STILL FAILING in 3 min 3 sec: http://swarm.jquery.org:8080/job/jQuery/108/
[13:26:54] <jq-jenkins> * waldron.rick: Style sweep
[13:26:55] <jq-jenkins> * waldron.rick: Additional nits
[13:26:55] <jq-jenkins> * timmywillisn: Add a hook for removing contenteditable in IE6/7 and remove the unnecessary jQuery.attrFix. Fixes #10429.
[13:26:56] <jq-jenkins> * Corey Frang: Effects - Allow queue: true - Fixes #10445
[13:26:56] <jq-jenkins> * timmywillisn: Minor fix in events; undeclared var from last commit
[13:28:12] <jq-jenkins> Project QUnit build #30: STILL FAILING in 1 min 18 sec: http://swarm.jquery.org:8080/job/QUnit/30/
[13:33:35] <rwaldron> jzaefferer is something wrong with the Makefile?
[13:33:45] <rwaldron> i just read the console ouput from that failure
[13:34:22] <rwaldron> gnarf yt?
[13:35:30] <gnarf> sup
[13:35:31] <jzaefferer> rwaldron: nah, it'll continue failing for a while...
[13:35:41] <rwaldron> ok
[13:35:45] <rwaldron> nothing to worry about?
[13:35:55] <rwaldron> gnarf i was curious about the jenkins failure
[13:36:01] <rwaldron> rather, the jquery failure in jenkins
[13:36:09] <jzaefferer> not really, though you can check the results and click through the testswarm job
[13:36:39] <Krinkle> jzaefferer: Is there a public jenkins/testswarm set up for jquery somewhere ?
[13:36:40] <jzaefferer> need to get the results on the build summary page - currently its under Console, then somewhere is a testswarm link in the output there
[13:36:53] <jzaefferer> Krinkle: swarm.jquery.org:8080
[13:37:07] <jzaefferer> since jqcon its actually kind of working, already replaced our old cronjob
[13:37:32] <jzaefferer> and some custom code to clean up old checkouts.. turned out the git-serving script wasn't that clever
[13:38:43] <Krinkle> jzaefferer: Hm.. quick question: When is a build complete according to jenkins/testswarm ? When all browsers have run all jobs ?
[13:39:11] <jzaefferer> either all browsers ran and passed all jobs
[13:39:20] <jzaefferer> or when the first test time outs or fails
[13:39:44] <jzaefferer> if all tests pass but browser are missing, it'll timeout eventually
[13:56:25] <gnarf> basically
[13:56:26] <kborchers> .
[13:56:38] <gnarf> unless all the browsers are passing, the job fails
[13:56:47] <gnarf> and since there are browsers missing from the swarm right now
[13:56:50] <gnarf> its failing
[13:57:24] <gnarf> also
[13:57:31] <gnarf> this brings up issues with the :focus test
[13:57:46] <gnarf> http://swarm.jquery.org/job/2/
[13:58:30] <gnarf> also DaveMethvin - assertion count is wrong in events on FF?
[13:59:19] <DaveMethvin> sounds related to the ui problem i am chasing
[14:00:05] <DaveMethvin> gnarf i have a patch but there is one ui test in autocomplete still failing
[14:02:08] <gnarf> strangely
[14:02:10] <gnarf> ie6 passes
[14:02:17] <gnarf> ?hi5 @team
[14:02:18] <bot-t> team, ⁵
[14:02:20] <DaveMethvin> lol
[14:02:30] <gnarf> so
[14:02:32] <gnarf> this :focus thing
[14:02:38] <gnarf> should we wrap that test in a test
[14:02:49] <DaveMethvin> yo
[14:02:49] <gnarf> so it doesn't test when it will fail for reasons we know?
[14:02:57] <gnarf> yo dawg
[14:03:17] <gnarf> because im tired of that shit failing
[14:03:33] <DaveMethvin> i think the changes i just made should fix it, but like i said i still ahve one ui test that is failing
[14:03:45] <DaveMethvin> so i need to go through and compare 1.6.4 to git behavior
[15:03:28] <Jayflux> will .delegate() and .live() eventually be deprecated now we have .on .off, is that the foreseeable plan?
[15:04:33] <mikesherov> well, .delegate() and .live() are really just shortcuts now
[15:04:56] <mikesherov> with .on and .off being the underlying code that gets called
[15:05:22] <Jayflux> i see.
[15:05:35] <Jayflux> so they'll be around for a while then
[15:06:27] <mikesherov> Well, I don't personally now, but if you look at latest jquery-git, they are basically just wrapper functions now
[15:14:52] <Jayflux> ok thanks mikesherov
[15:15:16] <mikesherov> np
[15:30:44] <mikesherov> rwaldron, listened to that dramatic readings clip from before
[15:30:44] <mikesherov> hilarious
[15:30:51] <rwaldron> nice
[15:31:21] <mikesherov> was that the whole bit, or is there a longer version somewhere?
[16:35:48] <gnarf> in other words if we removed live and delegate functions, it would be very easy to implement in a plugin :)
[16:35:54] <gnarf> but i don't think thats the plan
[18:26:04] <DaveMethvin> well it turns out that a regexp is not that bad, in fact it's better for some browsers: http://jsperf.com/isnan-vs-isnumeric
[19:02:48] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/-6hwZg
[19:02:48] <jqcommit> [jquery/master] Fix #10468. Remove jQuery.event.proxy and jQuery.event.guid. - Dave Methvin
[19:05:17] <jq-jenkins> Project jQuery build #109: STILL FAILING in 2 min 21 sec: http://swarm.jquery.org:8080/job/jQuery/109/
[19:05:17] <jq-jenkins> dave.methvin: Fix #10468. Remove jQuery.event.proxy and jQuery.event.guid.
[20:14:56] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/TRt9bg
[20:14:56] <jqcommit> [jquery/master] Fix focus/blur unit test issues. Reopens #6705. - Dave Methvin
[20:17:28] <jq-jenkins> Project jQuery build #110: STILL FAILING in 2 min 24 sec: http://swarm.jquery.org:8080/job/jQuery/110/
[20:17:29] <jq-jenkins> dave.methvin: Fix focus/blur unit test issues. Reopens #6705.
[20:21:00] <DaveMethvin> gnarf: soooo... how do i find out what's failing there?
[20:23:12] <DaveMethvin> ?tell jq-jenkins yeah I KNOW
[20:23:13] <bot-t> DaveMethvin, Okay.
[20:23:20] <DaveMethvin> lol
