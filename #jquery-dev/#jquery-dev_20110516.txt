[05:36:21] <kswedberg> addyosmani: yt?
[05:38:34] <addyosmani> hey kswedberg
[05:38:44] <kswedberg> hey! :)
[05:38:49] <addyosmani> :)
[05:39:24] <kswedberg> I saw your additional demo for .clone(). was wondering if there is a way to simplify it a bit.
[05:39:52] <addyosmani> I think there probably is. One could remove the additional 'workaround' section. It's a little specific to that particular demo.
[05:40:40] <addyosmani> Also whats being demonstrated probably doesn't need to be as complex. Noticed there were quite a few lines used whereas the demo could probably be shorter.
[05:40:48] <kswedberg> seems you're talking about disconnected DOM nodes, but then you're actually cloning nodes that are part of the DOM
[05:41:06] <kswedberg> that's what I was thinking.
[05:41:28] <kswedberg> is it possible to start with something like var $toCopy = $('<b>1</b><b>2</b><b>3</b><b>4</b>'); ?
[05:41:34] <addyosmani> Oh, sure!.
[05:41:59] <addyosmani> I can take a look at making the whole example much simpler right after work.
[05:42:33] <kswedberg> cool! so, I'm not sure from the demo how the 2nd one is preserving order. is it because those elements are wrapped in a container div before being inserted? or no?
[05:43:20] <kswedberg> like, is this what you're getting at ? â€¦
[05:43:20] <kswedberg> var $toCopy = $('<b>1</b><b>2</b><b>3</b><b>4</b>');
[05:43:20] <kswedberg> $toCopy.clone().appendTo('#copy');
[05:43:20] <kswedberg> $toCopy.wrap('<div></div>').appendTo('#copy-correct');
[05:43:41] <addyosmani> I believe so. Let me check in a bit and get right back to you (currently on a call) :)
[05:44:10] <kswedberg> ok. np. when you're off call, let me know which browser doesn't preserve order so I can test too. :)
[05:47:11] <addyosmani> I believe I experienced it when testing with FF4. It was a little weird - 1.6 had the issue when testing with jsfiddle and so did edge, however the behaviour seemed a little more variable with 1.6.1. I'll see if I can find a specific set of steps to reproduce if you don't experience it
[05:47:39] <kswedberg> cool deal. thx!
[05:49:41] <jaubourg> hi there
[05:50:16] <kswedberg> hey jaubourg
[05:50:23] <jaubourg> hey karl :)
[05:50:30] <jaubourg> must be early where you area :)
[05:50:32] <jaubourg> are
[05:50:40] <kswedberg> 8:50am
[05:50:48] <jaubourg> hehe
[05:50:50] <kswedberg> but 5:50am on the west coast. :)
[05:50:57] <jaubourg> ><
[06:14:26] <jaubourg> damn, Games of Thrones is getting better and better at each episode
[06:14:43] <addyosmani> I haven't watched it yet. It's pretty good?
[06:15:09] <jaubourg> the first two episodes are so-so, mainly due to a lot of exposition
[06:15:20] <jaubourg> but as soon as #3 kicks in it's awesome
[06:15:26] <jaubourg> production value is top notch
[06:18:40] <addyosmani> I'll have to check it out then ; )
[06:45:42] <timmywil> .
[07:21:46] <jqcommit> jquery: master timmywil * a5cf257 (2 files in 2 dirs): Use getAttributeNode for ^on attributes in IE6/7 to avoid anonymous function wrapper. Fixes #9298. - http://bit.ly/kueHXS
[07:44:25] <jqcommit> jquery: master Rick Waldron * c17f589 (2 files in 2 dirs): Landing pull request 377. Check custom data != null(undefined), allows zero; Fixes #9285. ... - http://bit.ly/mu0D0W
[08:00:08] <kswedberg> gnarf: I fixed the problem with "=" in Reusables > Notemeta.
[08:00:19] <kswedberg> gnarf. see http://api.jquery.com/attribute-not-equal-selector/
[08:01:47] <kswedberg> I also updated http://api.jquery.com/reset-selector/ but now I need to get back to work, so the others (:text, etc) still need to be updated.
[08:57:18] <timmywil> meeting meeting meeting
[08:57:20] <JohnResig> hey everyone - meeting time!
[08:57:32] <timmywil> nice timing
[09:02:26] <necromancer> hah
[09:02:38] <necromancer> do you guys have meetings in IRC?
[09:05:22] <kswedberg> necromancer: yes. in #jquery-meeting
[09:05:31] <necromancer> oh cool
[09:37:10] <louisremi> Empathy annoys me, I can't join #jquery-meeting :-(
[09:37:17] <timmywil> JohnResig: will moving it over to the bug tracker allow anyone to vote on the proposals?
[09:37:24] <timmywil> louisremi: meeting's over
[09:37:33] <louisremi> timmywil: alright, too late then
[09:38:08] <timmywil> JohnResig: not that it's necessarily bad, but might be good to keep in mind.
[09:52:13] <JohnResig> timmywil: no, it's limited to bugs team members
[09:52:31] <timmywil> JohnResig: oh ok
[10:23:55] <ajpiano> paul_irish, why isn't 1.6.1 on google ajax libs yet :/
[10:24:13] <paul_irish> i committed it yesterday
[10:24:16] <paul_irish> waiting for a reviewer
[10:24:35] <ajpiano> ah ok
[10:24:41] <JohnResig> doesn't the UI team have like FTP access? or is that for the Microsoft CDN?
[10:24:43] <paul_irish> sweet approved 1 min ago
[10:24:50] <paul_irish> ui team doesnt no
[10:24:55] <paul_irish> brb
[10:28:59] <paul_irish> it'll be up by noontime:30
[10:29:01] <paul_irish> pst
[10:29:09] <ajpiano> PSST
[10:44:53] <ryanneufed> alo?
[12:50:58] <DaveMethvin> .
[13:00:14] <ajpiano> YAY IT WAS A SAFE LANDING
[13:04:24] <timmywil> .
[16:12:16] <jaubourg> https://github.com/jaubourg/ajaxHooks \o/
[16:15:07] <dabear> jaubourg: wohoo
[16:15:34] <dabear> so I can do $.ajax({type: "img", url: "foo"}) now?
[16:15:41] <dabear> what's the point? :p
[16:16:32] <jaubourg> :P
[16:17:03] <jaubourg> I'll add a getImage helper there :P
[16:17:23] <jaubourg> so that you can $.when( $.getImage( url1 ), $.getImage( url2 ) ).done( fn )
[16:17:39] <dabear> what's the point?
[16:17:49] <jaubourg> consistent API
[16:18:27] <dabear> is it consistent to have type: "img" and then .getImage ?
[16:18:37] <jaubourg> but it's mostly for people to get an idea of how to implement a transport with a very simple example as a start point
[16:18:38] <dabear> .getImg?
[16:18:42] <dabear> .getIMG?
[16:19:36] <jaubourg> I think getImage is simpler... do you suggest I make the datatype "img"?
[16:19:51] <jaubourg> sorry "image"?
[16:20:03] <dabear> I hope you'll implement .endWorldPoverty() too
[16:20:09] <jaubourg> haha
[16:20:16] <dabear> I wonder when the success callback of that promise would be called
[16:20:28] <jaubourg> I think it'll be pending forever
[16:20:32] <jaubourg> OR just plain fail
[16:21:19] <jaubourg> $.endWorldPoverty = function() { return $.Deferred().reject( "Kidding, right?" ).promise(); };
[16:22:34] <jaubourg> anyway, with ajaxHooks, people get their xdr transport so meh :P
[16:23:22] <dabear> yaok
[16:23:39] <dabear> I don't like that browser sniffing in the css example though :(
[16:24:52] <jaubourg> no choice sadly
[16:25:11] <jaubourg> main reason why css wasn't in core
[16:45:23] <ryanneufed> any word on when 1.6.1 will hit google cdn?
[16:45:52] <skamikaze> jaubourg: nice one :)
[16:46:03] <skamikaze> in germany we would call ya "kranke sau" :P
[16:46:28] <erichynds> ryanneufed pretty sure paul added it today and just has to go through a review first
[16:46:33] <erichynds> so, soon i'd guess
[16:46:38] <jaubourg> skamikaze: what does it mean?
[16:46:38] <ryanneufed> Thanks erichynds
[16:46:51] <skamikaze> it means you are a crazy man :)
[16:46:55] <skamikaze> love ur deferreds
[16:47:30] <jaubourg> thanks but they're not mine ;)
[16:47:32] <dabear> is your love being deferred?
[16:47:39] <skamikaze> yaya
[16:47:46] <jaubourg> I promise you I didn't invent them
[16:47:57] <jaubourg> :P
[16:48:19] <dabear> how to defer love? $.when($.love).done( function(){  $me.suicide();})
[16:48:49] <skamikaze> $.when($.love).done( function(){ $.searchForLove(); });
[16:49:12] <skamikaze> (depends on the point of view :> )
[16:49:22] <dabear> yeah
[16:49:25] <dabear> .success then
[16:49:40] <dabear> less ambigous
[16:49:56] <skamikaze> depends on mens' age :>
[16:50:23] * skamikaze goes back to work
[16:50:25] <skamikaze> see ya
[17:08:57] <paul_irish> ben_alman:
[17:09:05] <paul_irish> 1) you do want the bleeding edge dev tools
[17:09:17] <paul_irish> 1a) you should watch my video
[17:09:42] <paul_irish> 2) i'm going to campaign the team to expose an extension API to add styles easily to the devtools
[17:09:52] <ben_alman> you added new stuff to your preso?
[17:10:05] <paul_irish> since jqueryconf ? yeah lots more has landed
[17:10:30] <paul_irish> because a bunch of people want to skin the devtools
[17:10:31] <ben_alman> ok
[17:11:02] <paul_irish> ben_alman: also you dont' have to constantly downlaod an maintain a new version
[17:11:06] <ben_alman> i'm concerned that the latest dev tools will work reliably with my chrome beta version
[17:11:10] <paul_irish> just like you let chromium sit on v7 foreverrrrrrr
[17:11:19] <ben_alman> it's only because i didn't relaize
[17:11:24] <ben_alman> i don't want chromium to be old
[17:11:28] <paul_irish> now you can use m13 chromium with custom devtools styles for a while
[17:11:32] <ben_alman> but if it doesn't auto-update, what's the point?
[17:11:40] <paul_irish> agreed
[17:11:55] <paul_irish> but these edits are just for presentation purposes right?
[17:12:02] <ben_alman> do people really just like download a new chromium build daily?
[17:12:04] <ben_alman> yeah
[17:12:08] <paul_irish> and.. an autoupdating chrome means your edits will be wiped anyway
[17:12:15] <ben_alman> yeah
[17:12:30] <paul_irish> so you need a frozen build
[17:12:51] <ben_alman> is it strange that i feel more comfortable re-applying the changes when it auto-updates than dealing with a build that might just be broke-ass?
[17:12:52] <paul_irish> ben_alman: i use a little .app that matjas wrote that does it for me in 60sec
[17:13:02] <ben_alman> does wat
[17:13:08] <paul_irish> updates chromium
[17:13:13] <ben_alman> oh cool
[17:13:18] <paul_irish> but nowadays
[17:13:28] <paul_irish> i just point my mac canary build to a recent chromium devtools frontend
[17:13:40] <paul_irish> and cross my fingers
[17:13:43] <ben_alman> why would you use chromium with canary out?
[17:13:57] <paul_irish> canary is chromium every 60th commit.
[17:14:03] <ben_alman> oh
[17:14:10] <ben_alman> i thought canary was the most bleeding of the edgies
[17:14:15] <ben_alman> didn't know
[17:14:20] <paul_irish> every 60th edge
[17:14:30] <paul_irish> which is basically every 1.5 days
[17:14:33] <paul_irish> ithink
[17:14:37] <ben_alman> hmmn
[17:15:03] <ben_alman> this seems slightly more complicated than it ought to be
[17:15:38] <paul_irish> like i said. i'm trying to get an official API for style manip
[17:15:41] <ben_alman> is there any way to extract the current chrome dev tools that are packaged in the chrome.app ?
[17:15:58] <ben_alman> then i could automate it, and be sure to have the correct version
[17:16:08] <ben_alman> i value stability over bleeding edge
[17:16:11] <paul_irish> until then.. this is the best you're gonna get unless you get a freeze snapshot of dragonfly.. make your own edits.. host it on your server.. and use that.
[17:16:13] <ben_alman> i just need to tweak css
[17:16:35] <paul_irish> ben_alman: i dont know how to get that .pak file that temp mentioned. i was unable to find it myself.
[17:16:41] <paul_irish> but i'm also a noob
[17:17:02] <paul_irish> (sorry #jquery-dev)
[17:18:31] <ben_alman> http://gyazo.com/82d4ff3167b68b0f56301c386e24b975.png
[17:24:36] <ben_alman> well paul_irish i'm not sure i can deal with this now
[17:24:50] <ben_alman> it's a total buzzkill though
[17:24:56] <ben_alman> at least for my quite simple use-case
[17:34:18] <ben_alman> trying to write a bash script to automatify it
[17:58:42] <paul_irish> .
[17:58:43] <paul_irish> https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.js
[17:58:46] <paul_irish> up.
[17:58:51] <paul_irish> JohnResig: ^
[17:59:13] <ben_alman> sweet
[17:59:50] <ben_alman> paul_irish, is there any way for google to offer a JSONP list of all jquery versions currently on the CDN?
[18:00:03] <ben_alman> that would be so super hot i can't even get into the hotness right now
[18:00:22] <paul_irish> tbh i think maybe yes
[18:01:25] <paul_irish> nope
[18:01:34] <paul_irish> YQL it
[18:01:44] <ben_alman> hmmn
[18:01:52] <ben_alman> i didn't really want to have to rely on yet another resource for this
[18:02:04] <ben_alman> it's for production use
[18:20:59] <ben_alman> paul_irish, there? I'm having trouble with --debug-devtools-frontend=
[18:21:04] <ben_alman> have you got this working?
[18:21:17] <paul_irish> yup
[18:21:23] <paul_irish> only works in chrome 13
[18:21:40] <paul_irish> devchan or canary should be fine
[18:21:47] <ben_alman> can it use a relative path?
[18:21:57] <paul_irish> perhaps
[18:21:59] <ben_alman> i can only get it working with abs path
[18:22:13] <paul_irish> i've used it with relative befoe
[18:22:21] <ben_alman> hmmn
[18:23:19] <paul_irish> bbiab. shuttle.
[18:31:14] <Nogwater> Hi All.  I think I found a memory leak with repeatedly creating and destroying UI Tabs.  I have a test page up at http://www.apejet.org/aaron/code/tabs_test/ .  Should I open a ticket on this?
[18:43:12] <ralphholzmann> window merge; window merge; buffer 1
[18:44:38] <ralphholzmann> well, that didn't work out well.
[18:49:08] <ben_alman> paul_irish, look down near the end of this https://www.google.com/jsapi?key=
[18:49:24] <ben_alman> it would be so awesome if that data was available as a not-bigass-pile-of-crap
[18:49:36] <ben_alman> and more just the version data
[18:49:54] <ben_alman> trying to see if it exists
[18:57:59] <Nogwater> well, I've got to run.  here's the ticket: http://bugs.jqueryui.com/ticket/7383 hopefully that's enough info, if not I'll watch my email.
[20:35:36] <ben_alman> anyone here familiar with document.write'ing <script> elements in IE ?
