[01:41:42] <valtido> Hi guys
[01:44:10] <valtido> I would propose to add an alias for the "TYPE" option to be replaced with the word "method", I feel that type can still be left as it is, for graceful fallback, but eventually we should allow the method to be "method" not "type", since most of the other services e.g: HTML forms, and NodeJS, some browsers etc etc, use method to refer to the GET, POST, PUT... request methods. any thoughts?
[05:38:20] <doesallmagic2> Project jQuery Migrate Core 1.x build #181: SUCCESS in 2 min 50 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%20Core%201.x/181/
[06:37:44] <jqcommit> [13jquery.com] 15scottgonzalez closed issue #31: Issue with RSS feeds 02http://git.io/NyIorg
[06:38:49] <jqcommit> [13jquery.com] 15scottgonzalez closed issue #26: A few links will not work if it's https 02http://git.io/jV7oJA
[09:03:18] <cmcnulty> So, I don't anticipate making any more changes to #244.
[09:04:13] <cmcnulty> A solution which forces Sizzle to obey the option disabled inheritance rules specified by the html standard wouldn't be too onerous, but it would make a liar out of some browsers.
[09:05:02] <cmcnulty> I've basically done the work though, so I could submit it as a separate pull request.
[09:05:45] <m_gol> DaveMethvin|away timmywill gnarf rwaldron jaubourg gibson042 orkel: meeting?
[09:05:55] <cmcnulty> But the code in Sizzle PR# 244 explicitly avoids the option mess, and includes tests which explicitly confirm that native browser option inheritance is preserved.
[09:46:23] <gibson042> cmcnulty: thanks so much for your work; I'd welcome a separate pull and discussion on option:disabled. The "preserve native option inheritance" test won't make it in since we only care about broken native functionality when we're fixing it, but https://github.com/jquery/sizzle/pull/244 otherwise looks good (although large: +88 since diverging from master). I'll try my best to reduce it and get it landed.
[09:46:35] <gibson042> cmcnulty: One last request: can you "show your work" about how relevant browsers are broken? It will be useful for later steps.
[09:52:59] <cmcnulty> Sorry, was AFK. I have a few fiddles that I'll clean up that show the brokenness of various browsers.
[09:54:00] <cmcnulty> Part of that, however, gets to whether we're "really" supporting Safari 3 and Opera 9 in sizzle - 
[09:54:10] <cmcnulty> see Sizzle bug #255
[09:54:14] <gibson042> right
[09:54:16] <gibson042> we're not
[09:54:28] <cmcnulty> Good!
[09:54:39] <cmcnulty> so Safari 4 and Opera 10ish?
[09:54:50] <cmcnulty> or still to be decided?
[09:55:26] <gibson042> still to be decided for sure, but you're in the right ballpark
[09:56:04] <m_gol> gibson042: IMO Sizzle should adopt jQuery's stance that untested browsers are not supported
[09:56:08] <cmcnulty> OK, I'll completely abandon O9 and Saf3, which is good because they don't really work.
[09:56:10] <m_gol> or at least sth like that
[09:56:27] <m_gol> we could probably test in Fx 3.6 & both ESRs apart from last 2 Fx versions
[09:56:34] <m_gol> that should cover most potential Fx bugs
[09:56:47] <gibson042> m_gol: I agree with that general approach
[09:56:49] <m_gol> in the case of Chrome it doesn't seem to make any sense to support really old ones, no one uses them
[09:57:03] <m_gol> maybe 3-4 last
[09:57:10] <m_gol> to be broader than jQuery
[09:57:34] <m_gol> Travis would kill us if we tried to test in Fx3.6+ :P
[09:57:38] <gibson042> :)
[09:57:50] <m_gol> or BrowserStack rather
[09:58:03] <gibson042> no, picking a really old one and rotating recent releases to keep them fresh is good
[09:58:24] <m_gol> especially that 3.6 is the last one on not rolling-release
[09:58:29] <m_gol> * on not -> not on
[09:58:43] <m_gol> I'd add both ESRs as well
[09:59:06] <gibson042> yeah
[09:59:11] <m_gol> for 5 months there's only one suppprted, for 2 two versions
[09:59:22] <m_gol> k
[09:59:42] <m_gol> gibson042: can you look at https://github.com/jquery/sizzle/pull/236 when you have time? it'd be great to merge it
[09:59:48] <m_gol> as it's kinda huge ;)
[09:59:52] <gibson042> I'll sure try
[12:15:25] <jqcommit> [13jquery-migrate] 15atombender opened issue #61: Doesn't work as NPM module with Browserify 02http://git.io/qgHInw
[12:24:26] <markelog> gibson042: do it! or i'm gonna merge all these things, ba-ha-hahha
[22:51:22] <doesallmagic2> Project jQuery Core Weekly build #23: STILL FAILING in 27 min: http://jenkins.jquery.com/job/jQuery%20Core%20Weekly/23/
