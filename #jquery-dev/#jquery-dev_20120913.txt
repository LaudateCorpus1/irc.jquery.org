[05:53:34] <Dr4g> ben_alman: ping
[05:58:00] <gibson042> .
[06:32:23] <DaveMethvin> .
[06:32:49] <DaveMethvin> gnarf: heard back from Browserstack, they said they'll be looking at the problem with Chrome today
[06:44:24] <jqcommit> [jquery] jaubourg pushed 1 new commit to master: http://git.io/yAcN8w
[06:44:24] <jqcommit> [jquery/master] deferred.promise(obj) should work with non-objects. Fixes #12521. Much needed unit tests added! - jaubourg
[07:06:26] <scott_gonzalez> DaveMethvin: While I don't like the suggestion in #12515 of setting/deleting a property, I do like the idea of utilities like $.extend() handling more cases if they're sane.
[07:06:53] <scott_gonzalez> With that being said, I don't know if this user's specific case is sane or not, I haven't been paying too much attention.
[07:06:56] <DaveMethvin> he still hasn't explained his use case
[07:07:17] <doesallmagic> Project jQuery Core build #369: STILL FAILING in 22 min: http://swarm.jquery.org:8080/job/jQuery%20Core/369/
[07:07:18] <doesallmagic> j: deferred.promise(obj) should work with non-objects. Fixes #12521. Much needed unit tests added!
[07:07:28] <DaveMethvin> i am not sure what objects he is passing to get that
[07:07:28] <scott_gonzalez> Sure, I just don't like the thought of including lodash/underscore just to get a better $.extend().
[07:07:42] <jaubourg> hi guys
[07:07:47] <DaveMethvin> hi jaubourg
[07:07:48] <scott_gonzalez> I realize this is a slippery slope.
[07:07:59] <DaveMethvin> step 1 is to get him to explain his case
[07:08:12] <DaveMethvin> i'm not saying NO yet, but I am asking WHY
[07:08:27] <jaubourg> handling extend properly is a nightmare, especially regarding recursive structures
[07:08:41] <jaubourg> we'e better make do with something simple like we have now
[07:08:44] <DaveMethvin> and cycles and host objects and etc etc
[07:08:46] <jaubourg> at least, it's predictable
[07:08:59] <DaveMethvin> it's meant for extending options objects basically
[07:09:05] <jaubourg> exactly
[07:09:23] <jaubourg> we go the extra mile of handling duplication of objects within objects but that's about it
[07:09:23] <DaveMethvin> if people are using it for complex data structures with constructed objects, they're gonna have a bad time
[07:09:41] <jaubourg> we just have to tell them to use lodash or underscore
[07:09:58] <DaveMethvin> i's still like to know what this guy is doing
[07:10:00] <jaubourg> jdalton is doing a fantastic job there
[07:10:01] <DaveMethvin> and he hasn't said  yet
[07:10:44] <jaubourg> oh, btw, I can dev on the ipad now
[07:10:44] <DaveMethvin> obtw jaubourg those chrome fails are being looked at by the browserstack guys
[07:10:49] <jaubourg> local webserver and all
[07:10:53] <DaveMethvin> yeah i saw
[07:10:59] <DaveMethvin> how did you do that?
[07:11:12] <DaveMethvin> and more importantly, WHY? :D
[07:11:23] <jaubourg> jailbroke it and installed php + node + lighttp
[07:11:29] <DaveMethvin> ah, ok
[07:11:42] <jaubourg> and because I don't want to bring the big PC with me all the time
[07:11:46] <DaveMethvin> so the tests work with lighty?
[07:11:49] <jaubourg> I'd like to come to Washington with the ipad
[07:12:14] <jaubourg> ajax tests have issues... still haven't found a way to deal with concurrent requests being blocked
[07:12:21] <jaubourg> they work separately though
[07:12:32] <jaubourg> usual stuff ;)
[07:12:47] <jaubourg> nice about the browserstack guys
[07:13:00] <DaveMethvin> let's hope they fix it soon
[07:13:10] <jaubourg> ajax is such a nice area to work on... NOT
[07:13:12] <jaubourg> ;)
[07:14:44] <jaubourg> anyway, having the ipad as my main comp is cool. It's light, I have a bluetooth keyboard that works wonders... I am a happy mac user right now... of course I pretty much violated all of my licence agreements but heh
[07:15:41] <DaveMethvin> once the ms surface tablet comes out imma try setting that up as a dev "box"
[07:15:44] <DaveMethvin> "slab"?
[07:16:20] <jaubourg> err... yet another word I don't get... "slab"?
[07:16:46] <DaveMethvin> well what do you call a tiny little tablet? i guess tablet
[07:16:51] <jaubourg> will I ever get to a point I don't thumble on a word every two sentences in english?
[07:16:53] <DaveMethvin> first i have to find out if the keyboard/cover is friendly to vim users
[07:17:19] <jaubourg> yeah, text editor is the big issue... I use Textastic right now but I'm not convinced
[07:17:28] <jaubourg> I'd kill for Sublime 2 on the ipad
[07:17:36] <DaveMethvin> it's amazing how much slower a bad editor can make you
[07:17:41] <jaubourg> indeed
[07:17:54] <jaubourg> though having a flat-cover-kboard helps a lot
[07:18:26] <jaubourg> anyway, it's still miles faster than using Eclipse :P
[07:19:14] <DaveMethvin> eclipse, visual studio, all those massive envs are SOOO SLOOW
[07:19:54] <jaubourg> yeah, well, I was one of the fools buying into the Java will save the world crap back in the days
[07:20:01] <jaubourg> I have a soft spot for Eclipse
[07:20:19] <jaubourg> I dunno, seeing the logo makes me happy
[07:20:26] <jaubourg> then I start using the app...
[08:12:06] <gnarf> we used to call the NeXT machines "slab"s
[08:12:22] <gnarf> "The slab in Dan's office is acting up again"
[08:13:28] <gnarf> although apparently http://en.wikipedia.org/wiki/Bar_(form)#Bar explains the use of "Slab"
[10:00:42] <jqcommit> [api.qunitjs.com] scottgonzalez pushed 1 new commit to master: http://git.io/kVw_Fg
[10:00:42] <jqcommit> [api.qunitjs.com/master] Upgraded grunt-jquery-content to 0.5.x. - Scott Gonz√°lez
[11:02:53] <jaubourg> re
[11:27:52] <Danwe_WMDE> Can anyone explain why when calling $( obj ).trigger( 'event', arg1, arg2 ... ), jQuery will call obj.event() without the supplied arguments? Is there a good reason not to provide them for the native handler or is this a bug?
[11:27:57] <Danwe_WMDE> please see http://jsfiddle.net/g7DMg/
[11:33:56] <scott_gonzalez> Because native events don't accept arguments?
[11:34:43] <Danwe_WMDE> scott_gonzalez: it all depends on how you define "native"
[11:35:05] <scott_gonzalez> Not really, there aren't multiple definitions of native.
[11:35:17] <scott_gonzalez> What you have is not native.
[11:35:39] <Danwe_WMDE> native to what? DOM events, yes you are right, but in my example above, I also defined a "native" handler which actually has an argument
[11:36:05] <scott_gonzalez> No, you defined a method on the object.
[11:36:42] <scott_gonzalez> It happens to be called when triggering an event because of how jQuery implements its event system for DOM Events.
[11:40:24] <Danwe_WMDE> scott_gonzalez: I know, I looked into the code. But I see it as a feature of jQuery. It could allow you to very closely mimic the native DOM's event system and how it works with jQuery.
[11:41:05] <Danwe_WMDE> trigger( 'focus' ) works just like focus(). Why shouldn't this be the case for my custom prototype's enable/disable functions/events?
[11:46:51] <scott_gonzalez> It is.
[11:47:07] <scott_gonzalez> Why shouldn't your custom prototype's functions/events be implemented like DOM Events that don't accept arguments?
[11:47:46] <Danwe_WMDE> scott_gonzalez: now you have a good point actually and I thought about whether this is how such events are suppose to be implemented actually
[11:49:48] <Danwe_WMDE> The only problem now is that when you implement your obj.event() {...}, you still want it to $obj.triggerHandler( 'event' ) but if you do that, when  using trigger( 'event' ) you will end up in a loop...
[11:51:04] <ryanneufeld> .
[11:51:28] <Danwe_WMDE> $obj.trigger( 'event' ) handling custom handlers, then calling obj.trigger() which will then do $obj.triggerHandler()...
[11:51:29] <scott_gonzalez> Again, you should really follow the DOM Events model.
[11:51:46] <scott_gonzalez> Users shoudl call the function, the function should trigger the event.
[11:52:25] <Danwe_WMDE> you mean there is no point of having an outbound .trigger( 'enable' ) because you have a direct .enable() ?
[11:52:28] <scott_gonzalez> Users shouldn't really trigger the event themselves.
[11:52:54] <scott_gonzalez> correct.
[11:53:23] <Danwe_WMDE> I guess you are right, it seems like too much effort and complexity to actually make this work
[11:54:36] <Danwe_WMDE> Then why not make a check when trigger() is called, the native event handler should then only be called for DOM objects to avoid issues perhaps.
[11:54:42] <scott_gonzalez> FWIW, the jQuery event model is a bit screwy.
[11:54:57] <scott_gonzalez> No, this is a feature.
[11:55:04] <scott_gonzalez> It's actually useful.
[11:55:26] <scott_gonzalez> Choose one model, either users trigger events or they call methods.
[11:55:51] <Danwe_WMDE> Didn't we just come to the conclusion that it is a scary feature? I mean if the methods are there, publicly, it's hard to tell them not to use the methods
[11:55:54] <scott_gonzalez> I would suggest having users call the method.
[11:56:26] <scott_gonzalez> No, it's not at all scary. You're just trying to do something under an incorrect presumption.
[11:57:10] <scott_gonzalez> It's not hard to tell them not to use the methods. There is in fact a very well defined API: event.preventDefault().
[12:11:19] <Danwe_WMDE> scott_gonzalez: I know, if default is prevented, the event() method wouldn't be called by jQuery.trigger(). But how is this related? How do you tell them to not use obj.event() directly if you choose to only give them $obj.trigger( 'event' )?
[12:14:00] <scott_gonzalez> How you implement your own APIs, document them, and deal with users incorrectly using your API is outside the scope of jQuery.
[12:16:03] <Danwe_WMDE> scott_gonzalez: sure, I just don't really get where the feature of having .trigger() calling the event() (without any parameters) would be practically useful
[12:16:43] <Eviltwin> Danwe_WMDE: It's how .trigger("focus") and .trigger("blur") (or .focus() and .blur()) causes those actions to actually happen
[12:17:20] <Eviltwin> $(element).focus() needs to call element.focus() to make that element be focused
[12:18:20] <Danwe_WMDE> Eviltwin: I know, and as I said before, that's good. But why not restrict trigger() to calling these native handlers of DOM elements then.
[12:18:55] <Eviltwin> What do you mean?
[12:19:20] <Danwe_WMDE> why does $obj.trigger( 'foo' ) call obj.foo() ?
[12:19:29] <Danwe_WMDE> Not why, but what's the benefit
[12:19:48] <Eviltwin> Because we want $(element).focus() to call element.focus()
[12:19:57] <Eviltwin> It's not performing a test to see if element is actually an element or not
[12:20:19] <Danwe_WMDE> yes, so why not restrict it to DOM elements?
[12:20:19] <Eviltwin> jQuery really really wants to operate on DOM elements
[12:20:57] <Eviltwin> Consider $({}).append("<div>")
[12:22:19] <Eviltwin> It's tricky to distinguish a DOM element from a classic object in older browsers
[12:22:57] <Danwe_WMDE> ok
[12:24:07] <Eviltwin> It's an optimization to not perform an expensive test there
[12:24:25] <Eviltwin> The same way it's an optimization to not use hasOwnProperty with every for-in loop
[12:25:13] <Eviltwin> Really I would only recommend using jQuery on DOM elements or an empty object
[12:25:39] <Eviltwin> And realize that you can still break things
[12:25:48] <Eviltwin> $({}).append("<div>") for example
[12:25:50] <Danwe_WMDE> sure. Then another way would be to check the event name for whether it is a native event, but that would be only half way then so I guess there's no point.
[12:25:51] <Eviltwin> Will generate an exception
[12:26:14] <Danwe_WMDE> having jQuery event handling on other objects is a nice feature though
[12:26:44] <Eviltwin> What you should probably do instead is pub-sub or something similar
[12:27:24] <Eviltwin> You can have a per-element pubsub
[12:27:33] <Eviltwin> per-object*
[12:30:49] <Eviltwin> You could do something like this: http://jsfiddle.net/uJNHq/
[12:31:12] <Eviltwin> But I would strongly discourage doing $(fooInstance)
[12:35:01] <scott_gonzalez> Danwe_WMDE: Invoking the function on objects is a feature.
[12:35:13] <scott_gonzalez> Please stop asking for us to remove the feature just because it doesn't work the way you expected.
[12:35:24] <Danwe_WMDE> Eviltwin: I acdtually do something like that, $.fin.on.apply( $( {} ), arguments )
[12:35:43] <Eviltwin> But that's a brand new instance there
[12:36:11] <Danwe_WMDE> Eviltwin: right, I could optimize I guess ;)
[12:36:20] <Danwe_WMDE> scott_gonzalez: I didn't ask for it, I just don't get how it makes sense.
[12:36:48] <Danwe_WMDE> or where it is useful in any practical case.
[12:36:53] <scott_gonzalez> It's how you implement deafult actions.
[12:37:08] <danzik171> Danwe_WMDE: if you have event handlers bound to an element via onclick attributes or addEventListener, would you expect $( "#foo" ).click() to trigger them?
[12:37:32] <scott_gonzalez> danzik171: This is actually a bad example because the event system is whacky.
[12:37:49] <danzik171> yea i wouldn't recommend that, best i could come up with off the top of my head.
[12:37:51] <scott_gonzalez> jQuery adds a lot of custion about the meaning of methods like .click()
[12:38:00] <scott_gonzalez> *confusion
[12:38:51] <scott_gonzalez> The bottom line is that when working in a system with methods and events, you should only ever call the methods.
[12:39:50] <Danwe_WMDE> scott_gonzalez: But at the same time you are saying that triggering the event directly instead of using the function is a feature... this is the confusing part for me
[12:40:22] <scott_gonzalez> It's a different API design.
[12:40:23] <Danwe_WMDE> * triggering directly with trigger() calling the function
[12:40:25] <scott_gonzalez> Choose one or the other.
[12:40:30] <scott_gonzalez> In neither case is there a problem.
[12:40:35] <scott_gonzalez> The problem comes from using both at the same time.
[12:41:00] <Danwe_WMDE> there could be a problem when people don't read the documentation in all details and don't understand the difference between trigger() and triggerHandler(), but I guess I can live with that
[12:43:46] <Danwe_WMDE> Anyhow, amazing work you guys are doing and thanks for the clearificatios scott_gonzalez
[15:47:59] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/eN7BOw
[15:47:59] <jqcommit> [jquery/master] Fix #12534. Don't die on browsers lacking getBoundingClientRect. - Dave Methvin
[16:08:47] <doesallmagic> Project jQuery Core build #370: STILL FAILING in 20 min: http://swarm.jquery.org:8080/job/jQuery%20Core/370/
[16:08:47] <doesallmagic> dave.methvin: Fix #12534. Don't die on browsers lacking getBoundingClientRect.
[16:24:03] <ryanneufeld> way to go DaveMethvin you broke everything
[16:24:43] <DaveMethvin> no that's fake breakage ryanneufeld
[16:24:47] <DaveMethvin> it's browserstack
[16:24:55] <ryanneufeld> PSH
[16:25:51] <ryanneufeld> must be annoying
[16:26:41] <jaubourg> hi there
[16:26:51] <DaveMethvin> hi jaubourg
[16:27:15] <jaubourg> hi DaveSlaverin :P
[16:27:42] <ryanneufeld> hi jaubourg
[16:27:44] <jaubourg> just saw we got ourselves a blocker with offset?
[16:27:50] <DaveMethvin> yeah jaubourg, if you get tired just say the word and rest your weary head
[16:27:58] <DaveMethvin> yeah i'll tell ya bout it on the call
[16:28:02] <jaubourg> k
[16:28:04] <DaveMethvin> we're doing skype right?
[16:28:08] <jaubourg> yep
[16:28:10] <jaubourg> I'm on
[16:28:18] <jaubourg> not sure I'll talk much though
[16:28:23] <DaveMethvin> np
[16:28:30] <DaveMethvin> we just want your company!
[16:29:12] <jaubourg> note that skype is so awesome when you have smelly frenchs in the team ;)
[16:29:39] <DaveMethvin> smellly? non!
[17:08:33] <mikesherov> .
[17:08:55] <mikesherov> DaveMethvin: yt?
[17:09:00] <DaveMethvin> yah
[17:09:02] <mikesherov> my train wifi sucks
[17:09:05] <DaveMethvin> want me to add you?
[17:09:15] <mikesherov> I can listen in on skype, but I might cut in and out
[17:09:18] <DaveMethvin> ok
