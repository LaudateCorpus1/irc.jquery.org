[02:53:12] <jqcommit> [13jquery] 15ronny-springer closed pull request #1390: prevent parsing guid strings to json (06master...06guid-rbrace-json)  02http://git.io/Otncng
[07:44:48] <Krinkle> Wee, almost done splitting qunit core src!
[07:45:31] <Krinkle> (won't push yet)
[09:14:45] <Krinkle> jzaefferer: I found a problem in test "testEnvironment reset for next test"
[09:14:50] <JamesMGreene> danheberden et al: Can anyone comment on why you have to specify the package name when registering a new component in Bower rather than it just reading the package name from your "bower.json" manifest?
[09:15:17] <Krinkle> jzaefferer: it passes when run on a clean sessionStorage, but if one of the tests failed (and now fixed), it will fail because it relies on order
[09:15:28] <Krinkle> it depends on the test running after the previous one
[09:15:46] <Krinkle> I tried hacking around it with callbacks (e.g. deferred) but it doesn't work because if the 2nd one runs first, it will wait forever.
[09:15:58] <Krinkle> Looks like something we need to rethink
[09:35:05] <jzaefferer> Krinkle: could you put that into an issue, maybe with some sample code?
[09:35:12] <Krinkle> yeah
[09:49:28] <jqcommit> 01[13qunit01] 15Krinkle created 06src-split (+1 new commit): 02http://git.io/0NpSFQ
[09:49:28] <jqcommit> 13qunit/06src-split 1463adf8a 15Timo Tijhof: (WORK IN PROGRESS) The Grand QUnit Split of 2013...
[09:55:05] <Krinkle> jzaefferer: JamesMGreene: Here's some reading material ^
[09:57:29] <jqcommit> 01[13qunit01] 15Krinkle 04force-pushed 06src-split from 1463adf8a to 143dfe784: 02http://git.io/G61WlQ
[09:57:29] <jqcommit> 13qunit/06src-split 143dfe784 15Timo Tijhof: (WORK IN PROGRESS) The Grand QUnit Split of 2013...
[09:57:32] <Krinkle> added issue reference to commit msg
[09:57:42] <JamesMGreene> \o/
[09:58:23] <Krinkle> ?
[09:58:34] <jqcommit> 01[13qunit01] 15Krinkle 04force-pushed 06src-split from 143dfe784 to 148ee826e: 02http://git.io/G61WlQ
[09:58:34] <jqcommit> 13qunit/06src-split 148ee826e 15Timo Tijhof: The Grand QUnit Split of 2013...
[09:58:34] <Krinkle> hm.. git did a no op
[09:58:39] <Krinkle> there we go
[10:19:39] <danheberden> JamesMGreene: it's just a product of the registry atm; the newer version not only reads, but uses and stores the manifest data
[10:19:50] <danheberden> just gotta, you know, finish it
[13:07:52] <tbranyen> hey timmywil
[13:08:03] <timmywil> sup
[13:08:06] <tbranyen> i'm getting a retention leak with a detached dom node
[13:08:09] <tbranyen> http://tbranyen.com/u/26859530.png
[13:08:17] <tbranyen> inspected and found it was held by sizzle
[13:08:34] <tbranyen> do you have any idea what might cause what i'm seeing
[13:08:40] <timmywil> https://github.com/jquery/sizzle/pull/225
[13:08:41] <b-ot> timmywil: Pull request #225 by dongseok0 (1mon 1w ago): clear input for uniqueSort after sorting to prevent memory leak
[13:08:41] <tbranyen> like why is parentNode an array
[13:09:02] <timmywil> that related?
[13:09:15] <tbranyen> damn, could be
[13:09:17] <tbranyen> lemme try
[13:09:54] <timmywil> The memory was released on the start of each sort, but not also at the end
[13:10:10] <timmywil> so nodes would get retained in between sorts
[13:10:17] <tbranyen> do you know why parentNode is an array with numbers in it tho, is that the sort related stuff?
[13:11:03] <timmywil> that's a new one for me
[13:13:37] <timmywil> is that IE10?
[13:14:12] <tbranyen> chrome
[13:15:00] <tbranyen> i've detected a super small retention leak
[13:15:50] <timmywil> I suppose chrome could report parentNode as an Array if some array was the only thing holding a reference to that element
[13:16:20] <timmywil> best guess
[13:19:11] <tbranyen> yea, i dunno but that identifier it's showing is def the expando
[13:19:38] <timmywil> true enough, can you reproduce with master?
[13:22:44] <sizcommit> 01[13sizzle01] 15timmywil pushed 2 new commits to 06master: 02http://git.io/O8B-Dw
[13:22:44] <sizcommit> 13sizzle/06master 142e8a6ec 15Timmy Willison: Update version to 1.10.10
[13:22:44] <sizcommit> 13sizzle/06master 14848e175 15Timmy Willison: Update version to 1.10.11-pre
[13:23:33] <sizcommit> 01[13sizzle01] 15timmywil tagged 061.10.10 at 142e8a6ec: 02http://git.io/b0sLLQ
[13:25:03] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/Q03Ipw
[13:25:03] <jqcommit> 13jquery/06master 14a9f1cb8 15Timmy Willison: Update Sizzle to 1.10.10
[13:25:33] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 061.x-master: 02http://git.io/G6_3lA
[13:25:33] <jqcommit> 13jquery/061.x-master 14f669420 15Timmy Willison: Update Sizzle to 1.10.10
[13:26:17] <timmywil> tbranyen: you could try the master branch of jQuery now, if you're using jQuery
[13:39:18] <tbranyen> timmywil: ill run a new build sec
[13:40:34] <doesallmagic2> Project jQuery Core build #962: FAILURE in 15 min: http://jenkins.jquery.com/job/jQuery%20Core/962/
[13:40:35] <doesallmagic2> Timmy Willison: Update Sizzle to 1.10.10
[13:41:15] <tbranyen> welp
[13:44:59] <timmywil> stupid timeouts
[13:45:41] <timmywil> tbranyen: watchya got?
[13:46:05] <tbranyen> testing
[13:47:10] <tbranyen> looks good on a first pass
[13:47:11] <tbranyen> lemme try again
[13:47:12] <tbranyen> to be sure
[13:48:04] <tbranyen> nope back again
[13:48:53] <tbranyen> timmywil: i'm looking at hte retaining tree and i'm not seeing jquery
[13:48:55] <tbranyen> or sizzle
[13:49:03] <tbranyen> so... i think it might just be a weird thing chrome shows
[13:50:03] <timmywil> strange
[13:50:21] <tbranyen> plus i trust sizzle over AuraJS in this case
[13:50:27] <tbranyen> i'm seeing a sandbox leak
[13:50:57] <timmywil> well, as you know, if you track it down to Sizzle, please open an issue.
[13:56:14] <doesallmagic2> Project jQuery Core 1.x build #269: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/269/
[13:56:15] <doesallmagic2> Timmy Willison: Update Sizzle to 1.10.10
[14:25:48] <jqcommit> [13jquery] 15zackbloom opened pull request #1397: Handle .html calls with numbers via the more efficient .innerHTML method (06master...06master)  02http://git.io/bosXpA
[14:32:12] <tbranyen> timmywil: got it, it was def in aura
[14:32:28] <tbranyen> no sandbox cleanup after components are destroyed
[14:32:29] <tbranyen> classy
[14:33:53] <timmywil> ah, good :)
[14:34:07] <timmywil> i mean, bad
[18:36:30] <jqcommit> [13jquery] 15zackbloom closed pull request #1397: Handle .html calls with numbers via the more efficient .innerHTML method (06master...06master)  02http://git.io/bosXpA
[23:07:11] <johnbender> ajpiano: https://github.com/genesis/wordpress/
[23:07:44] <johnbender> might be worth looking into as a starting point for docs/website dev setup
[23:07:49] * johnbender waves
