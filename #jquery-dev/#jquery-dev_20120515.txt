[04:36:50] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/Xyq07Q
[04:36:50] <jqcommit> [testswarm/master] Update dbInstall.php: Fix the require_once to match other scripts
[06:21:15] <scott_gonzalez> ajpiano: How's the migration to WP for learn going?
[06:51:17] <rwaldron> .
[06:51:21] <rwaldron> DaveMethvin yt?
[06:51:29] <DaveMethvin> yep, hey rwaldron!
[06:51:53] <rwaldron> oh hai!
[06:53:15] <rwaldron> there we
[06:53:17] <rwaldron> ack
[06:53:20] <rwaldron> there we go
[06:53:31] <rwaldron> so jugglinmike from bocoup, meet DaveMethvin
[06:53:41] <DaveMethvin> hey jugglinmike
[06:53:45] <rwaldron> jugglinmike has a question, partly about jQuery.isReady
[06:53:56] <rwaldron> but I thought maybe you'd have good advice
[06:54:06] <DaveMethvin> fire when ready
[06:54:24] <jugglinmike> thanks guys
[06:54:38] <jugglinmike> I'm looking to poll for document ready
[06:54:52] <jugglinmike> and since $.isReady isn't documented, I'm not sure it's a good idea to use that
[06:55:22] <jugglinmike> That use case probably sets off red flags, but don't worry; it's not for production
[06:55:31] <DaveMethvin> so you mean a hard spin lock like while ( !$.isReady ) { /* nothing */ }
[06:55:32] <DaveMethvin> ?
[06:55:33] <jugglinmike> I'm writing a test harness for phantomjs
[06:56:15] <jugglinmike> I want to hold off on running these tests until the document I've loaded into phantomjs is ready
[06:57:00] <DaveMethvin> so can you use a flag set by a .ready() function?
[06:59:28] <jugglinmike> Yeah, that should work. This occurred to me as well, but I pulled Rick in because I was curious about the jQuery API
[07:00:00] <DaveMethvin> in 1.8 we're exposing a Promise you could listen for, but for your purposes a variable is probably fine
[07:00:12] <DaveMethvin> you'd just need to add the .ready() listener
[07:01:38] <DaveMethvin> actually i don't think we need to expose jQuery.isReady at all ... hmm we may want to take that private
[07:02:18] <jugglinmike> interesting
[07:03:12] <jugglinmike> well thanks for the advice and insight into 1.8 :)
[07:03:27] <DaveMethvin> we have a unit test for .isReady, fwiw, not sure why
[07:04:08] <DaveMethvin> jugglinmike i'm interested in how we could use phantomjs, jzaefferer has put together a grunt task for us but
[07:04:23] <DaveMethvin> it fails several tests related to positioning mostly
[07:05:12] <DaveMethvin> there's always that line between testing reality and testing the test environment
[07:10:15] <jugglinmike> DaveMethvin: for sure.. with phantom, I'm always weighing development convenience against test expressiveness
[09:16:20] <socialhapy> ★ Tweet from jquerymobile: Enhanced jQuery mobile support in Adobe Dreamweaver 6 (Video) - http://t.co/fH7VU5kd ★ http://bit.ly/JkUsZV
[09:30:52] <stevecrozz> people still use dreamweaver?
[09:36:39] <jzaefferer> people even use Windows!
[09:51:27] <socialhapy> ★ Tweet from jquery: And with that, consider the baton passed to @jqcon for all your incremental conference updates, if you're into that sort of thing! ★ http://bit.ly/JEUFoQ
[10:54:49] <jaubourg> plop
[10:55:11] <jaubourg> DaveMethvin: how much would you pay for unit tests running in node and not necessitating php?
[10:55:12] <jaubourg> :P
[10:55:31] <jaubourg> 'cause I have them running right now on my box :)
[10:56:11] <jaubourg> just have to publish the nodejs server lib I made to make it as painless as possible (a day's work more or less)
[10:56:18] <jaubourg> \o/
[10:56:22] * jaubourg is happy
[10:56:51] <jaubourg> now it's all fresh out of the oven and I have no clue how to make it configurable enough for testswarm to eat it properly
[10:56:54] <jaubourg> I'll make a branch
[10:57:40] <jzaefferer> jaubourg: What's php/node needed for anyway?
[10:58:45] <sindresorhus_> jaubourg: Awesome!!
[10:59:46] <jaubourg> jzaefferer: ajax stuff mainly (especially testing headers and stuff)
[11:00:09] <sindresorhus_> I hate the PHP dependency
[11:00:15] <jaubourg> hence why I decided to do it => ajax === my mess now
[11:00:29] <jaubourg> yeah, the PHP dep has to go, welcome JHP
[11:00:38] <jaubourg> just need to make a proper README for the lib
[11:01:33] <DaveMethvin> nodejs is really convenient for local testing, but not so much for testing where there is already a server available
[11:01:47] <DaveMethvin> b/c just about everyone can run php
[11:01:56] <DaveMethvin> (not that they always WANT to :)
[11:02:25] <DaveMethvin> gotta run for now but I'll be back
[11:02:26] <jaubourg> well, I'll push the branch later tonight anyway, then we can talk about it with the code in front of us
[11:02:32] <jaubourg> ^^
[11:02:34] <jzaefferer> jaubourg: just keep in mind that the php aspect of testswarm is running just fine, while getting node into that picture would be a lot of trouble at this point
[11:02:48] <jzaefferer> so if you're okay with keeping both solutions around?
[11:03:52] <jaubourg> well, I honestly dunno how much trouble it would be for testswarm, I just wanted to see if it was possible with the same kind of flexibility/rapid prototyping php offers
[11:04:00] <jaubourg> and it is
[12:58:22] <orkel> gnarf got a minute?
[16:04:16] <socialhapy> ★ Tweet from jquerymobile: Anyone have a @boot2gecko phone they'd be willing to donate to the jQuery Mobile project for testing? ★ http://bit.ly/JIyBu7
[16:52:18] <jqcommit> [jquery] jaubourg created test-jhp (+1 new commit): http://git.io/h2Zzxg
[16:52:18] <jqcommit> [jquery/test-jhp] Removes PHP dependency in favor of JHP: - jaubourg
[16:54:57] <jaubourg> ?tell DaveMethvin https://github.com/jquery/jquery/tree/test-jhp
[16:55:10] <jaubourg> hmmm, no bot
[16:56:29] <jaubourg> let me jump on rwaldron then
[16:56:43] <jaubourg> rwaldron: https://github.com/jquery/jquery/tree/test-jhp no PHP dependency for unit testing ^^
[18:18:53] <jaubourg> DaveMethvin: https://github.com/jquery/jquery/tree/test-jhp
[18:19:17] <DaveMethvin> nice
[18:19:21] <DaveMethvin> i'll take a look
[18:19:30] <DaveMethvin> yeah what's up with bot-t?
[18:19:36] <jaubourg> dunno
[18:19:41] <DaveMethvin> ircjsbot: what can you do for me?
[18:19:54] <DaveMethvin> the bots are revolting
[18:20:11] <mikesherov> .
[18:20:19] <mikesherov> shucks, no messages
[18:20:19] <jaubourg> hey mike
[18:20:25] <mikesherov> jaubourg!
[18:20:26] <mikesherov> amazing
[18:20:30] <mikesherov> jhp amazing
[18:20:34] <jaubourg> :)
[18:21:12] <jaubourg> and jhp is incredibly small in code size too: https://github.com/jaubourg/jhp/tree/master/lib
[18:21:18] <DaveMethvin> sooo jaubourg, since you're in a coding mood....
[18:21:37] <DaveMethvin> could you look at what it would take to make $.ajax pluginable?
[18:21:42] <DaveMethvin> like, a build without it?
[18:21:52] <DaveMethvin> basically just look at the dependencies for now
[18:22:02] <jaubourg> just need to protect domManip somehow
[18:22:06] <mikesherov> .html() depends on it :-\
[18:22:08] <DaveMethvin> yeah
[18:22:11] <jaubourg> and throw an exception
[18:22:21] <jaubourg> so that the message is clear
[18:22:42] <DaveMethvin> i forget, what else is in ajax.js
[18:22:45] * DaveMethvin looks
[18:22:49] <jaubourg> params
[18:22:52] <jaubourg> load
[18:23:11] <mikesherov> oh, jaubourg, you wrote jhp?
[18:23:16] <mikesherov> even more amazing
[18:23:28] <DaveMethvin> serialize
[18:24:22] <jaubourg> mikesherov: yes I did, mainly because I needed it to be able to port the unit tests in jQuery without too much troubles
[18:24:45] <jaubourg> jhp is crude but it gets the job done
[18:24:59] <jaubourg> Dave: where is serialize used?
[18:25:24] <DaveMethvin> oh i just meant it was in the ajax.js file
[18:25:41] <jaubourg> yeah, only used by ajax apparently
[18:26:05] <mikesherov> DaveMethvin: when you get a meeting, can you respond to my email.. not here obviously.
[18:26:10] <mikesherov> a minute*
[18:26:38] <DaveMethvin> o i gotta catch up on email .. responded to jaubourg s ping
[18:29:53] <jaubourg> :)
[18:36:25] <jaubourg> 28724 without ajax
[18:36:27] <jaubourg> woot
[19:00:50] <DaveMethvin> jaubourg: kinda surprised it isn't a bigger change ... i guess that's roughly 4.5k or so tho
[19:01:05] <DaveMethvin> how big is your jsonp plugin?
[19:01:17] <jaubourg> 1.8kb
[19:01:27] <jaubourg> just minified, not gzipped
[19:01:59] <DaveMethvin> well there you go
[19:02:19] <DaveMethvin> i've had situations where it would have been enough
[19:02:44] <jaubourg> except I need param :P
[19:02:49] <DaveMethvin> but of course i'm too lazy and not desperate enough to save the extra 2kb anyway
[19:03:41] <jaubourg> several unit tests rely on ajax (outside of ajax tests of course)
[19:04:23] <DaveMethvin> one of the deprecations i wanted to do for 1.8 was to get people to trigger ajax events only on document
[19:04:34] <DaveMethvin> so we could get rid of the "global" events
[19:04:37] <DaveMethvin> which are only used by ajax atm
[19:04:39] <jaubourg> \o/
[19:04:48] <jaubourg> I so hate those
[19:04:52] <DaveMethvin> yeah me too
[19:05:05] <jaubourg> people should use pub-sub insted
[19:05:14] <jaubourg> s/sted/stead
[19:05:30] <DaveMethvin> they are reaally strange
[19:05:44] <DaveMethvin> you can attach a global event to a detached element and it will still fire
[19:05:55] <DaveMethvin> it can be on a plan object
[19:06:28] <jaubourg> hmmm... making a buildable jquery will require some work, especially if we wanna test for the  builds
[19:06:38] <DaveMethvin> yeah, and possibly some refactoring
[19:06:53] <DaveMethvin> maybe we could move the param stuff to somewhere and leave it in for example
[19:07:27] <DaveMethvin> but ideally you'd be able to drop the ajax.js file and the ajax.js unit tests and still have a clean unit test just without ajax
[19:08:24] <jaubourg> problem is, our include_js script doesn't ensure we have the same jquery everywhere... so, for instance, when we compare support props, one doesn't have the ajax and cors props, while the iframe does
[19:08:40] <jaubourg> also, some tests load data using ajax, namely the browser sniffing one
[19:09:33] <DaveMethvin> well that's no problem, we throw out browser snifffing :)
[19:09:57] <jaubourg> I know, but it's not the only one
[19:10:06] <jaubourg> jeez, and it's 4am :P
[19:10:35] <DaveMethvin> well go to sleep, rewriting the whole back-end for the  unit tests is enough for one day
[19:10:42] <jaubourg> btw Dave, did you see Fence? https://github.com/jaubourg/fence
[19:11:05] <jaubourg> anyway, yes, I need to get some sleep
[19:11:37] <jaubourg> I just hope JHP will be usable within r-testswarm, that would own, really
[19:12:04] <DaveMethvin> looking at fence now
[19:12:43] <DaveMethvin> wow ineresting
[19:17:01] <jaubourg> yeah, I still need to document the API and blog about it
[19:17:06] <jaubourg> and blog about jhp
[19:17:11] <jaubourg> and blog about node-plus
[19:17:14] <jaubourg> and blog about..
[19:17:17] <jaubourg> jeez
[20:14:47] <jqcommit> [jquery] rwldrn pushed 1 new commit to 1.8pre: http://git.io/tyTrTQ
[20:14:47] <jqcommit> [jquery/1.8pre] Rename .andSelf to .addBack, deprecate .andSelf #9800 - Dave Methvin
[20:25:24] <DaveMethvin> hey rwaldron
[20:26:10] <DaveMethvin> i'm working on pull 778, mikesherov's boxModel removal
[20:26:22] <snover> is it working?
[20:27:30] <DaveMethvin> removing stuff always works
[20:27:38] <DaveMethvin> and if it doesn't you didn't remove enough
[20:30:25] <snover> I think that was the tagline for vapor.js
[20:30:51] <jq-jenkins> Project jQuery 1.8 build #61: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/61/
[20:30:51] <jq-jenkins> waldron.rick: Rename .andSelf to .addBack, deprecate .andSelf #9800
[20:31:25] <jqcommit> [jquery] dmethvin pushed 1 new commit to 1.8pre: http://git.io/NpRrfg
[20:31:25] <jqcommit> [jquery/1.8pre] Fix #11721. Remove jQuery.boxModel, deprecate jQuery.support.boxModel. - Mike Sherov
[20:31:29] <DaveMethvin> eat that jenkins
[20:32:10] <DaveMethvin> aw darn i forgot to mention gh-778 in the commit message
[20:32:17] <DaveMethvin> now i have to close it manually
[20:32:22] <DaveMethvin> first world problems
[20:49:44] <jq-jenkins> Project jQuery 1.8 build #62: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%201.8/62/
[20:49:45] <jq-jenkins> dave.methvin: Fix #11721. Remove jQuery.boxModel, deprecate jQuery.support.boxModel.
[20:55:18] <gf3> jaubourg: "What we intend to work on right now is the static file serving part."
[20:55:32] <gf3> jaubourg: Can you not simply use some connect middleware?
