[03:20:51] <m_gol> gnarf, bugs.jquery.com doesn't load again
[06:58:01] <sizcommit> 01[13sizzle01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/i9vxYQ
[06:58:01] <sizcommit> 13sizzle/06master 1484a24c9 15Richard Gibson: Fix jQuery #13807: attribute/Object.prototype name collisions
[06:59:45] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/KNhypQ
[06:59:45] <jqcommit> 13jquery/06master 1467a080b 15Richard Gibson: Fix #13807: attribute/Object.prototype name collisions
[07:00:00] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 061.x-master: 02http://git.io/Ym-oDA
[07:00:00] <jqcommit> 13jquery/061.x-master 1429b0e52 15Richard Gibson: Fix #13807: attribute/Object.prototype name collisions...
[07:29:59] <doesallmagic> Project jQuery 1.x Core build #140: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/140/
[07:29:59] <doesallmagic> richard.gibson: Fix #13807: attribute/Object.prototype name collisions
[07:36:00] <doesallmagic> Project jQuery Core build #801: STILL FAILING in 5 min 43 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/801/
[07:36:01] <doesallmagic> richard.gibson: Fix #13807: attribute/Object.prototype name collisions
[08:03:02] <doesallmagic> Project jQuery Migrate Core 1.x build #52: SUCCESS in 1 min 58 sec: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/52/
[08:26:13] <noway421> Hello, jquery plans to completely abandon the php (including tests) and go on node.js?
[08:30:28] <m_gol> possible, but not an easy task
[08:30:50] <m_gol> all of ajax & iframe tests would need to be rewritten
[08:30:56] <m_gol> and testswarm is on php
[08:31:10] <m_gol> so I wouldn't expect it soon unless sb dives into it more
[08:31:13] <m_gol> noway421
[08:31:57] <noway421> i rewrite all /test/ part just now
[08:33:08] <Krinkle> m_gol: Who is sb?
[08:33:19] <m_gol> sb = somebody
[08:33:24] <Krinkle> ic
[08:33:32] <m_gol> what is ic? :D
[08:33:34] <noway421> there are not so many files
[08:33:35] <DaveMethvin> ou!
[08:33:40] <Krinkle> m_gol: ic = I see
[08:33:49] <m_gol> ah, right
[08:34:01] <Krinkle> noway421: Before you knock yourself out, be sure this is discussed first.
[08:34:11] <Krinkle> They've been ported to javascript before and it was rejected
[08:34:18] <Krinkle> And I tend to agree.
[08:34:24] <m_gol> Krinkle: on what basis?
[08:34:29] <noway421> I here somewhere that jquery want to do it
[08:34:31] <Krinkle> At least a little bit.
[08:34:41] <noway421> And i cant wait for it
[08:35:01] <DaveMethvin> i think the hard part is testswarm isn't it?
[08:35:05] <Krinkle> No
[08:35:09] <noway421> *heard
[08:35:12] <Krinkle> m_gol: Well, right now it very normal for everybody to have a *AMP stack locally (Apache, MySQL, PHp)
[08:35:25] <Krinkle> So to run the tests in your browser, you just stick or clone jquery.git somewhere in your docroot and your'e done
[08:35:37] <Krinkle> If the tests require a nodejs server to run, it complicates things slightly
[08:36:23] <noway421> Requiring *amp stuck complicates that, isnt it?
[08:36:47] <Krinkle> noway421: I'm not sure I understand what you just said.
[08:37:32] <noway421> I think that installed node.js is more lightweight and simple that installed XAMP
[08:37:37] <Krinkle> And for continuous integration (Jenkins) we'll need a way to make it work with concurrency. Right now this is a given by unique directory (jenkins.jquery.org/build/jquery/{..git-hash..}/test/index.html) 
[08:38:09] <Krinkle> If we set it up on nodejs server (localhost:8000/test/index.html) we'll need a way to find a free port when Jenkins is testing multiple things concurrently
[08:38:16] <Krinkle> noway421: Not really
[08:38:43] <Krinkle> noway421: AMP is harder to set up, yes, but anyone not on their first day of web development already has it set up.
[08:39:04] <Krinkle> Using nodejs for web dev locally is unmanageable in my opinion.
[08:39:05] <noway421> Hm, that true.
[08:39:09] <Krinkle> At least no decent solution for it exists
[08:39:14] <Krinkle> I have dozens of projects set up
[08:39:25] <m_gol> not everyone uses PHP for backend (I usually work on projects on Python (Django)) but I guess I'm in the minority ;)
[08:39:52] <Krinkle> Manged by a simple apache configuration for different local domain names and document root (VirtualHost *.krinkle.dev., DocumentRoot: ~/Development/... etc.)
[08:40:06] <Krinkle> Even if you don't use PHP but HTML/JS/CSS
[08:43:59] <Krinkle> nodejs as a server is nice to set up something temporarily during dev, but for long-term use in the background of a dev machine seems like a mess. It'd become this thing you have to enable whenever you run it. And it doesn't seem important enough to write a deamon for (like for apache)
[08:44:14] <Krinkle> Not to mention when you have multiple checkouts of jquery.
[08:44:32] <Krinkle> noway421: I think it'll happen but not anytime soon.
[08:45:22] <Krinkle> noway421: Though if you feel like cracking it, I can only encourage you and I'll be more than happy to guide/help you.
[08:48:32] <noway421> At least i want try remove it from jquery/test/
[08:49:07] <noway421> How jenkins execute tests?
[09:14:52] <Krinkle> noway421: Explain "remove from test/" you mean replace with nodejs? Or phase out?
[09:15:51] <noway421> Replace, of course
[09:16:50] <Krinkle> noway421: I already explain roughly how they run in Jenkins. It is documented on the testswarm wiki.
[09:17:04] <Krinkle> Its a lot to explain, please check there first.
[09:17:29] <Krinkle> Also, all jenkins builds have a run history so you can see exactly what commands they execute
[09:17:42] <Krinkle> most of it is grunt, which is in jquery/jquery.git:/grunt.js
[09:17:45] <Krinkle> Gruntfile.js
[09:18:46] <noway421> ok
[09:50:05] <orkel> ping timmywil
[09:50:14] <timmywil> orkel: pong
[09:50:20] <orkel> hey! about your comment there â€“ http://bugs.jquery.com/ticket/13609#comment:4
[09:51:35] <orkel> i know what's happening â€“ by html5 spec, some event idl attributes should be initialized right of the bat â€“ http://www.w3.org/TR/html5/webappapis.html#event-handlers-on-elements,-document-objects,-and-window-objects
[09:52:03] <orkel> But in older FF and Opera (but not in very old Opera) they don't, which leads to, say, "onclick" in window === false, we use that check here â€“ https://github.com/jquery/jquery/blob/1.x-master/src/support.js#L134
[09:52:18] <orkel> which gives us jQuery.support.changeBubbles === false in old FF
[09:53:33] <orkel> I'm inclined to close this ticket as wontfix, thoughts?
[09:53:52] <timmywil> that's fine, just wanted to know why before we closed it. Can you put that in a comment?
[09:53:59] <orkel> sure thing!
[09:54:07] <timmywil> thanks orkel 
[09:54:35] <m_gol> what's our policy on Firefox ESR support?
[09:54:52] <DaveMethvin> i don't think we ever made one
[09:55:00] <DaveMethvin> what's the ESR version now, 17?
[09:55:03] <m_gol> yup
[09:55:09] <m_gol> each 7 versions
[09:55:13] <DaveMethvin> right
[09:55:27] <m_gol> the next one will be in August or September
[09:55:41] <DaveMethvin> it doesn't seem that 17 is very prevalent tho if you look at the market share numbers
[09:55:47] <DaveMethvin> and we don't unit test with it
[09:56:05] <DaveMethvin> our level of seriousness about support is correlated to whether we unit test :D
[09:56:18] <m_gol> ;)
[09:56:25] <DaveMethvin> i dunno
[09:56:46] <m_gol> yeah, I just though about it bc one guy in  http://bugs.jquery.com/ticket/13609 mentioned Fx 3.6 used in some corporations
[09:57:04] <m_gol> I mean, not that I care about 3.6 but we should at least decide if we support ESR or not
[09:57:05] <DaveMethvin> which is totally unsupported at this point by both Mozilla and us
[09:57:34] <DaveMethvin> if we really wanted to support it we'd need to add it to swarmy
[09:57:36] <m_gol> it was just a slightly related issue I though about ;)
[09:57:49] <m_gol> poor swarmy, even more load on him!
[09:58:01] <DaveMethvin> i think we should just address as they come in, probably won't be many
[09:58:16] <m_gol> another thing is, once a new ESR version comes out the older one is still supported for 2-3 months
[09:58:22] <m_gol> yeah, maybe it's sensible
[09:58:37] <m_gol> especially that I don't see Firefox ESR to be especially popular...
[09:58:50] <DaveMethvin> right, if it was like 5-10% it would be different
[09:58:54] <m_gol> (too much especially...)
[09:59:47] <DaveMethvin> really i think ESR is a PR play for mozilla to say they support the enterprise, and it's likely that any company that clingy to old Firefox will also be using jQuery 1.2.6 or something
[10:00:44] <m_gol> yep
[12:33:33] <jdalton> DaveMethvin the transition to 2.0 and its modern support go off w/o issues (mass panic?)
[12:33:52] <DaveMethvin> jdalton as far as i can tell
[12:33:57] <jdalton> great
[12:34:11] <jdalton> you should spread the word on download numbers or uptake of it
[12:34:20] <jdalton> some libs, like underscore, arent doing the modern thing
[12:34:43] <DaveMethvin> underscore? isn't that the old name for lodash? :P
[12:34:47] <jdalton> ya
[12:34:57] <jdalton> but i figure like, if you've had a good response to modern
[12:35:03] <jdalton> and share it, other libs might follow
[12:35:20] <DaveMethvin> i'll have to see if we can get some numbers for downloads
[12:35:31] <DaveMethvin> i know we have em
[12:35:33] <jdalton> (I did) and it's been great, no issues, better perf, better modern compat (like working in Chrome extensions w/ CSP w/o another build)
[12:35:45] <DaveMethvin> yep that's where it's best
[12:35:58] <jdalton> (i meant from my own libs modern build) but ya
[12:36:10] <jdalton> at first i was like meh, not gonna gain a lot
[12:36:19] <jdalton> but then suddenly wam, found lots of things to tweak
[12:36:28] <DaveMethvin> being able to avoid all the oldIE stuff is just a nice reduction of cognitive load at least!
[12:36:41] <jdalton> ya
[12:36:45] <DaveMethvin> i keep thinking, "i could use ... oh damn oldIE"
[12:36:52] <DaveMethvin> now we can do some of that in 2.0
[12:37:07] <jdalton> right
[12:37:11] <jdalton> i pinged IE about the IE10 bug
[12:37:19] <jdalton> text nodes not having .parentElement
[12:37:36] <DaveMethvin> hmm maybe it can be fixed in ie11
[12:37:40] <jdalton> if ya find any other IE wtf (in modern versions) let me know
[12:37:41] <DaveMethvin> seems like an easy fix
[12:37:51] <DaveMethvin> will do
[12:38:31] <jdalton> do you all test in the various IE compat modes?
[12:38:49] <m_gol> IE compat modes are a bad thing :(
[12:38:51] <jdalton> IE 9 (compat, and as 8,7) or IE 10 (compat, and as 9, 8)
[12:38:53] <DaveMethvin> jdalton no, just the native modes, and of course for 2.0 we wouldn't test in most of them
[12:39:08] <DaveMethvin> and ie10 has some strange stuff going on
[12:39:12] <jdalton> m_gol yah totally 
[12:39:14] <DaveMethvin> when it's in compat modes
[12:39:16] <m_gol> IMHO using anything other than IE=edge is a mistake
[12:39:19] <jdalton> true 
[12:39:25] <DaveMethvin> <input type=email>
[12:39:29] <m_gol> since IE in compat modes doesn't exactly work like it should
[12:39:31] <jdalton> i test cuz it can have bugs in them
[12:39:35] <DaveMethvin> .attr("type")==="text"
[12:39:43] <jdalton> when in compat mode, its not switching engines, its faking the old enviro and old bugs/support
[12:39:49] <jdalton> so things slip through or are introduced
[12:39:55] <m_gol> yep
[12:40:07] <jdalton> for example backbone 1.0
[12:40:14] <jdalton> added `patch` support for thier xhr
[12:40:18] <m_gol> just imagine how many more "browsers" we would need to test!
[12:40:21] <jdalton> but their unit test fails in IE compat modes
[12:40:21] <m_gol> for 1.x
[12:40:50] <DaveMethvin> jdalton and that's one reason why i didn't want to just throw that one in, because they can be subtle
[12:41:39] <jdalton> true
[13:09:32] <scott_gonzalez> DaveMethvin: We're still good with creating a jquery-orphans org, right?
[13:09:52] <DaveMethvin> yeah, i don't think anyone objected
[13:10:05] <DaveMethvin> at least that's the way i remember it scott_gonzalez
[13:10:12] <scott_gonzalez> I don't recall any objections.
[13:10:29] <scott_gonzalez> And we have it logged in an exec board meeting minutes.
[13:10:40] <DaveMethvin> well if someone doesn't like it we'll blame them for not yelling loud enough
[13:10:45] <scott_gonzalez> :-)
[13:10:52] <scott_gonzalez> I'm going to create the org now.
[13:10:55] <DaveMethvin> cool
[13:14:44] <scott_gonzalez> DaveMethvin: I'm moving jquery-compat-*, right?
[13:14:53] <DaveMethvin> scott_gonzalez yep
[13:15:26] <scott_gonzalez> oh  man
[13:15:30] <scott_gonzalez> stupid typos
[13:17:33] <scott_gonzalez> Heh, I guess I'll just delete this one: https://github.com/jquery/jquery-compat-1.9
[13:17:48] <DaveMethvin> yeah, an evolutionary dead end
[14:04:51] <jdalton> http://twitter.com/JavaScriptDaily/statuses/326432927732875265
[14:04:51] <b-ot> jdalton: @JavaScriptDaily: jQuery Builder: http://t.co/pgZo0JyFkf (Online tool that builds a custom version of jQuery that just includes the modules you need.)
[17:19:01] <noway421> So here my derpy work https://github.com/noway421/jquery/compare/node-tests-server
[18:11:22] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/Iwj7Xw
[18:11:22] <jqcommit> 13jquery/06master 14d8f7e83 15Richard Gibson: Fix #13810: .replaceWith(nextSibling)
[18:11:32] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 061.x-master: 02http://git.io/fMxzMg
[18:11:32] <jqcommit> 13jquery/061.x-master 14d605322 15Richard Gibson: Fix #13810: .replaceWith(nextSibling)...
[18:41:20] <jqcommit> [13jquery] 15gibson042 opened pull request #1251: Fix #13809: Quote names reserved by any version of ECMA-262 (061.x-master...0613809)  02http://git.io/rSkpRQ
[18:42:04] <doesallmagic> Project jQuery 1.x Core build #141: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/141/
[18:42:04] <doesallmagic> richard.gibson: Fix #13810: .replaceWith(nextSibling)
[18:48:44] <doesallmagic> Project jQuery Core build #802: STILL FAILING in 6 min 34 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/802/
[18:48:45] <doesallmagic> richard.gibson: Fix #13810: .replaceWith(nextSibling)
