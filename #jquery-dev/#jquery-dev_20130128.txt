[03:47:13] <siovene> Hi. Is there a public roadmap for 2.0?
[03:48:40] <siovene> (or later)
[04:06:08] <siovene> ,jhg~.~.
[04:06:40] <siovene> (sorry for the last line, the network is shaky)
[07:37:23] <DaveMethvin> Krinkle|detached jzaefferer scott_gonzalez still no joy from swarm despite manually kicking off these jobs ... any idea what's wrong? http://swarm.jquery.org/job/2432
[07:39:16] <scott_gonzalez> I'm not sure how to debug that. I don't even know where the script lives on the server.
[07:56:28] <doesallmagic> Project jQuery 1.x Core build #47: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/47/
[08:26:55] <doesallmagic> Project jQuery Core build #669: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/669/
[08:38:19] <DaveMethvin> scott_gonzalez: are you seeing no clients as well?
[08:38:49] <scott_gonzalez> Yeah, and the homepage shows hundreds of tests queued for each browser.
[08:38:59] <DaveMethvin> oh great..
[08:39:02] <scott_gonzalez> Maybe the script just died.
[08:39:14] <scott_gonzalez> But like I said, I don't know where the scripts are, so I can't even check.
[08:40:04] <DaveMethvin> well browserstack itself is alive, so something is broken between the two ends
[08:42:47] <scott_gonzalez> yup
[08:42:59] <scott_gonzalez> It's probably the testswarm-browserstack script.
[08:43:12] <scott_gonzalez> jzaefferer has said that it's had problems before and he was able to restart it.
[08:50:43] <rwaldron> DaveMethvin I have a client deadline this afternoon, so I need to skip the meeting today
[08:50:56] <DaveMethvin> ok rwaldron
[08:51:06] <rwaldron> The only update that I have is that I'm still working through the IE 9 & 10 issues with data
[08:51:14] <rwaldron> ttyl
[08:54:31] <bartmax> question: why isnÂ´t jquery 2 libraries but organized different. Something like: jQuery 2.0 (non barnacle-encrusted code) and jQueryOld (barnacle-encrusted code) that adds up to jQuery 2.0 filling the gaps to work with ie ? i guess you passed for that and decided as a no-go, im just curios why. Specially since js is a rich language in which you can fill up with prototypes and stuff just anything.
[09:02:53] <DaveMethvin> oh sorry, need to start the meeting
[09:23:12] <bartmax> congrats on new sites brands etc... i didnÂ´t have time to check out till now. Pretty awesome work. congrats!
[10:05:19] <DaveMethvin> siovene: hi
[10:05:23] <siovene> DaveMethvin: hey
[10:06:43] <siovene> DaveMethvin: so basically I'm trying to ramp up and get a feel of what I could do. I set up my test env, went through the code and the bug tracker. The thing looks really stable, obviously, given the popularity of the project, and the bugs are few; and the roadmap page on the website is outdated :) Can I get some direction or some easier tasks to get started? I would like to contribute significantly 
[10:06:44] <siovene> in the future.
[10:07:41] <DaveMethvin> yeah, i agree the roadmap page is VERY outdated, typically we've used the tracker for that but we need another round to start thinking about future changes
[10:08:03] <DaveMethvin> at this point I think we are intentionally trying to avoid major api changes or additions
[10:08:21] <DaveMethvin> but there are always more things to do
[10:08:33] <siovene> You understand that since my motivation to contribute is not to fix some specific issue we have with jquery, but only the generally idea to contribute, it's hard to figure out something to do on my own :)
[10:09:19] <gibson042> how about setting up perf tests? we never seem to get around to that speed/ directory
[10:09:20] <DaveMethvin> one thing we are way behind on is updating the docs to reflect the new code, would you be interested in helping with that?
[10:09:28] <DaveMethvin> or perf tests too, good idea
[10:09:50] <DaveMethvin> some of the other build-related things are pretty independent as well
[10:09:55] <siovene> perf tests sound great, as performance would be something that my empoloyer is intereted to :)
[10:10:10] <siovene> yeah, build related things, docs, tests, and smaller bugs seem like good way to start
[10:10:33] <siovene> basically trying to minimize wasting my time and yours with PRs full of blunders :)
[10:10:42] <DaveMethvin> oh awesome gibson042 we found a sucker, er, volunteer!
[10:10:57] <siovene> haha
[10:11:00] <gibson042> :D
[10:11:26] <siovene> now let's find a sucker to be my mentor :P
[10:11:55] <DaveMethvin> so we should figure out some general outline of what we want these perf tests to do
[10:12:24] <DaveMethvin> i can tell you what we DON'T want them to do
[10:12:41] <DaveMethvin> the old tests did stuff like $("body").append("hello there") in a loop
[10:12:46] <DaveMethvin> don't do that :D
[10:13:05] <DaveMethvin> from those tests we decided that $("body") had to be optimized
[10:13:22] <DaveMethvin> and that .append(constant html string) needed to be cached
[10:13:41] <DaveMethvin> neither holds true for real code
[10:14:18] <gibson042> selectors in general should probably be off the table, since those are not specific to jQuery
[10:15:12] <DaveMethvin> it would be good to know the perf characteristics of each api on some typical inputs
[10:15:38] <DaveMethvin> like, .append("text") .append("html string") .append(dom element)  etc
[10:15:43] <siovene> like comparing different ways to do things to each other?
[10:15:47] <gibson042> events are most likely our biggest pain point
[10:15:56] <DaveMethvin> esp delegated events
[10:16:06] <gibson042> we had some regressions on delegation in particular with the 1.8 line
[10:16:23] <DaveMethvin> i don't see the goal of this as being comparing different approaches
[10:16:41] <DaveMethvin> mainly it would be used for determining whether we'd introduced significant perf regressions
[10:16:54] <siovene> oh that makes sense
[10:16:56] <gibson042> ops/second for common patterns
[10:17:14] <DaveMethvin> right, and sometimes cutting ops/sec in half isn't really a regression
[10:17:31] <DaveMethvin> if i can append at 1 million/sec and it gets cut to 500k/sec that's still hella fast
[10:17:46] <siovene> yeah obviously the results will be interpreted by a human
[10:18:06] <gibson042> maybe it would be nice if the patterns are complex enough to make ops/sec meaningful
[10:18:11] <DaveMethvin> although it would be  awesome to have some sort of visualization showing perf differences
[10:18:29] <gibson042> yes to that
[10:18:38] <DaveMethvin> but for now let's get the tests going
[10:18:57] <DaveMethvin> there's a ticket for this already, did i point you to that siovene?
[10:19:16] <siovene> DaveMethvin: noy yet
[10:19:23] <siovene> not*
[10:19:38] <DaveMethvin> well i have now http://bugs.jquery.com/ticket/12778 :D
[10:20:01] <DaveMethvin> but i don't know that basing them off sizzle is the right starting point
[10:20:09] <DaveMethvin> there was some discussion of dromaeo 
[10:20:33] <DaveMethvin> see timmywil's comment in the ticket
[10:20:35] <siovene> are there some other semi-popular js projects that do them? I could look at them.
[10:20:45] <DaveMethvin> i don't know of any
[10:21:07] <gibson042> I'd like to see this approached from a clean slate, not tied into past decisions (including Sizzle's use of benchmark.js)
[10:21:13] <DaveMethvin> http://dromaeo.com/ might help
[10:21:26] <DaveMethvin> but i agree with gibson042 it's a clean slate
[10:21:31] <siovene> ciik
[10:21:34] <siovene> cool*
[10:21:39] <siovene> (sorry, new laptop)
[10:22:20] <DaveMethvin> so look around and see if you come up with any interesting ideas
[10:22:29] <siovene> that sounds great
[10:22:39] <siovene> I'll try to put something together and then start one module at the time
[10:23:29] <DaveMethvin> siovene: what is your "real" name? you work at Intel right?
[10:23:45] <siovene> DaveMethvin: Salvatore Iovene. Yeah, at Intel.
[10:24:10] <DaveMethvin> great, thanks for your help! i'll make a note that youre working on this in the meeting notes
[10:24:30] <siovene> cool, I'm glad to help :)
[10:27:38] <jqcommit> [13jquery] 15gibson042 opened pull request #1147: Ref #13316: Sync all documents on full vs. minified source (06master...0613316_2.0)  02http://git.io/5UZIAg
[12:02:25] <sizcommit> 01[13sizzle01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/72ROHQ
[12:02:25] <sizcommit> 13sizzle/06master 147f5ac7a 15Richard Gibson: No ticket: allow for empty rbuggyMatches
[13:00:50] <DaveMethvin> rwaldron: so does that look ready? What about the (this) reference?
[13:02:12] <rwaldron> the this ref is cool
[13:02:32] <rwaldron> TBH, it's better that way
[13:02:47] <rwaldron> unless jQuery gets re-wrapped by someone
[13:02:54] <rwaldron> then it's in trouble
[13:04:13] <DaveMethvin> well it seemed like that particular (this) was intended to be the global object which requires "use strict"
[13:04:21] <DaveMethvin> and the global object is not the same as window
[13:05:22] <DaveMethvin> if  you were simulating a browser env on node, would you want to create a global `window` instead of using global?
[13:08:10] <rwaldron> I was only considering the browser case
[13:08:30] <DaveMethvin> let me ask on that thread
[13:08:53] <rwaldron> As in, they have to provide a browser environment context for jQuery
[13:09:39] <DaveMethvin> yeah, i haven't used jquery under node so i have no idea what plumbing is being done to make it happen
[13:10:00] <rwaldron> I have, you need to create your own global.window and global.document
[13:10:11] <rwaldron> if you want to use it in your actual node program
[13:10:18] <rwaldron> but I dont think that's the use case here
[13:10:25] <DaveMethvin> yeah i would think so
[13:10:48] <rwaldron> I believe the primary desire is to just ahve jQuery available for browserify while developing browser based stuff
[13:11:40] <rwaldron> DaveMethvin my approach was: if it doesn't break jQuery-in-the-browser, then node can have it anyway it want to
[13:11:44] <Krinkle> DaveMethvin: jzaefferer: scott_gonzalez: gnarf: https://splunk.jquery.com:8000/en-US/app/search/browserstack
[13:11:49] <Krinkle> The error is quite obvious actually
[13:11:56] <Krinkle> Error: You have run out of API time
[13:11:57] <Krinkle> Error: You have run out of API time
[13:11:57] <Krinkle> Error: You have run out of API time
[13:11:58] <Krinkle> Error: You have run out of API time
[13:12:01] <Krinkle> Error: You have run out of API time
[13:12:02] <Krinkle> Error: You have run out of API time
[13:12:04] <Krinkle> Error: You have run out of API time
[13:12:16] <DaveMethvin> so Krinkle what are you trying to say?
[13:12:30] <Krinkle> Browserstack starting replying with this error since Jan 28, 1 PM
[13:12:50] <DaveMethvin> well somebody better find us some API time!
[13:13:43] <Krinkle> Last I checked it was in beta and unlimited for corporate accounts (like ours)
[13:13:45] <Krinkle> http://www.browserstack.com/automated-browser-testing-api
[13:13:52] <DaveMethvin> it's obvious when you know where to look ... i am sure i have a splunk login but even with the link i can't see the log so i would have never found it
[13:14:02] <Krinkle> DaveMethvin: Looks like the kind of thing I as a developer can't address.
[13:14:15] <Krinkle> DaveMethvin: sure, I'm not saying you shouldn't known.
[13:14:18] <DaveMethvin> alright so it's a browserstack thing
[13:14:28] <Krinkle> DaveMethvin: sure, I'm not saying you should've known *
[13:14:31] <Krinkle> DaveMethvin: Yep
[13:14:34] <DaveMethvin> who do we talk to abotu getting ti fixed?
[13:14:54] <scott_gonzalez> I can email BrowserStack.
[13:14:59] <Krinkle> Who deals with the administrative things around here (e.g. the person that got us the account)
[13:15:07] <scott_gonzalez> me
[13:15:21] <DaveMethvin> rwaldron: okay, having not used browserify i don't know exactlly what it does ... i mean i see the README
[13:15:32] <Krinkle> scott_gonzalez: wait a minute before mailing
[13:15:48] <scott_gonzalez> ok
[13:22:43] <DaveMethvin> gibson042: synchronicity http://forum.jquery.com/topic/replacewith-bug
[13:23:16] <gibson042> ?tell timmywil see ?13331 ... I'm seeing compareDocumentPosition fail for detached nodes (a follows b AND b follows a): http://jsfiddle.net/JUDGk/
[13:23:16] <b-ot> gibson042: Iâll tell timmywil about that.
[13:23:17] <bot-t> [#13331] jQuery.fn.add returns incorrect order in Chrome and Safari (new bug) - http://jqbug.com/13331
[13:23:36] <DaveMethvin> oh that's a good one
[13:23:41] <gibson042> hahaha
[13:23:58] <DaveMethvin> detached nodes are in a quantum state
[13:24:15] <gibson042> compareDocumentSuperposition, amirite?
[13:24:21] <DaveMethvin> lol
[13:27:26] <Krinkle> scott_gonzalez: I finished a draft I had about starting a feedback loop and the splunk credentials gnarf set up for them.
[13:27:34] <Krinkle> scott_gonzalez: cc'ed you on it, and added the current matter at hend
[13:27:35] <Krinkle> hand*
[13:35:17] <Krinkle> >> Error: Access to API denied. Email to support@browserstack.com for access. at IncomingMessage.extend.request (/usr/local/bin/tools/testswarm-browserstack/node_module
[14:53:28] <jqcommit> 01[13jquery.com01] 15ajpiano pushed 1 new commit to 06master: 02http://git.io/1EXjOw
[14:53:28] <jqcommit> 13jquery.com/06master 14ef07670 15adam j. sontag: Remove minified file size from download button on home page, remove hyphen from "unminified"
[15:02:44] <jqcommit> 01[13jquery.com01] 15ajpiano pushed 1 new commit to 06master: 02http://git.io/E7ZEeA
[15:02:44] <jqcommit> 13jquery.com/06master 147fcb0dc 15adam j. sontag: Make main download button on homepage go to /download, instead of a *.js file
[15:10:07] <jqcommit> 01[13jquery.com01] 15ajpiano pushed 1 new commit to 06master: 02http://git.io/i9DOMw
[15:10:07] <jqcommit> 13jquery.com/06master 14aa40fab 15adam j. sontag: Remove link to unminified source from download box, since download button links to DL page now
[15:32:04] <jqcommit> 01[13jquery.com01] 15ajpiano pushed 1 new commit to 06master: 02http://git.io/oytxBA
[15:32:04] <jqcommit> 13jquery.com/06master 14289faf4 15adam j. sontag: v1.9.0-5
[15:32:17] <jqcommit> 01[13jquery.com01] 15ajpiano tagged 06v1.9.0-5 at 06master: 02http://git.io/veCvjw
[16:37:01] <jqcommit> [13jquery] 15JanMiksovsky opened pull request #1148: Bug 13342 (06master...06bug_13342)  02http://git.io/9WjRmA
[17:57:40] <jqcommit> [13jquery] 15JanMiksovsky opened pull request #1149: Allow html() to operate on shadow roots. Fixes #13342. (06master...06bug_13342)  02http://git.io/_bFFHQ
