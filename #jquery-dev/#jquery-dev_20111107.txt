[06:40:07] <rwaldron> DaveMethvin would it bust data() if we added some coercion to L328 in data.js?
[06:40:07] <bot-t> (21 hours 10 mins ago) <DaveMethvin> tell rwaldron did this happen at the wedding? http://www.youtube.com/watch?v=ahFARm2j38c#t=1m35s
[06:40:08] <rwaldron> jQuery.isNumeric( data )
[06:40:43] <rwaldron> ahahahahahahaha
[06:40:52] <rwaldron> no, but that would've been hilarious
[06:40:59] <DaveMethvin> i'm puzzled as to why that data isn't converting
[06:41:44] <DaveMethvin> it does for parseFloat, +, isNaN
[06:42:03] <DaveMethvin> i made a fiddle but lost it
[06:42:18] <rwaldron> http://jsfiddle.net/rwaldron/uaNWj/
[06:42:19] <DaveMethvin> and that data crap bothers me so much i decided to move on
[06:42:43] <DaveMethvin> damn jsfiddle you slow
[06:42:56] <rwaldron> I feel sort of tied to it lately
[06:43:02] <DaveMethvin> ut oh it's broked
[06:43:06] <DaveMethvin> 502 bad gateway
[06:43:42] <rwaldron> dude, serrrriously
[06:43:44] <rwaldron> jsfiddle is having an offday
[06:44:03] <rwaldron> pfft, dont worry, that fiddle still hasnt saved
[06:44:28] <rwaldron> if it loaded before, you probably got the wrong version
[06:45:32] <rwaldron> DaveMethvin is updated now http://jsfiddle.net/rwaldron/uaNWj/
[06:45:38] <rwaldron> but i might throw that on jsbin
[06:46:28] <DaveMethvin> well if parseFloat thinks it's not float then who am i to argue?
[06:46:34] <DaveMethvin> although + thinks it's a number
[06:47:42] <rwaldron> ugh
[06:47:55] <rwaldron> jsbin seems to steal console.log
[06:48:02] <rwaldron> :\
[06:48:18] <rwaldron> anyway, yeah the point is that parseFloat is the screwball
[06:48:20] <rwaldron> BUT
[06:48:26] <rwaldron> changing that now?
[06:48:28] <rwaldron> yarite
[06:50:10] <DaveMethvin> must return to jsfiddle
[06:50:17] <DaveMethvin> jsbin sapping gumption
[06:57:56] <rwaldron> seriously
[07:21:53] <timmywil> DaveMethvin: I don't know what this means docs#10704
[07:21:54] <bot-t> DaveMethvin, [#10704] special.handle method should fire under origType name (assigned bug) - http://jqbug.com/10704
[07:22:08] <DaveMethvin> well i do! :P
[07:22:28] <timmywil> well ok then
[07:22:31] <DaveMethvin> right now if you have a special event handler for, say mouseenter, it needs to  hook mouseover
[07:22:43] <DaveMethvin> it really shoud hook mouseenter
[07:23:01] <DaveMethvin> i was gonna do that before 1.7 but forgot to make a ticket to remind me
[07:24:37] <rwaldron> "which is just rong"
[07:24:39] <rwaldron> hehehehehe
[07:25:22] <timmywil> that sort of makes sense to me now
[07:25:46] <DaveMethvin> when you see the diffs it will make more sense
[07:26:33] <DaveMethvin> it simplifies a lot of special event situations like mouseenter and building a *real* hover event
[07:47:27] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/BEq7pQ
[07:47:27] <jqcommit> [jquery/master] Add back unit in the width/height step function. Fixes #10669. - timmywil
[07:47:43] <timmywil> oops
[07:50:48] <jq-jenkins> Project jQuery build #168: STILL FAILING in 3 min 6 sec: http://swarm.jquery.org:8080/job/jQuery/168/
[07:50:48] <jq-jenkins> timmywillisn: Add back unit in the width/height step function. Fixes #10669.
[08:08:58] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/VrPbcQ
[08:08:58] <jqcommit> [jquery/master] Fix #10701, .preventDefault if an inline handler returns false. - Dave Methvin
[08:12:06] <jq-jenkins> Project jQuery build #169: STILL FAILING in 3 min 1 sec: http://swarm.jquery.org:8080/job/jQuery/169/
[08:12:07] <jq-jenkins> dave.methvin: Fix #10701, .preventDefault if an inline handler returns false.
[08:15:26] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/RfNJyg
[08:15:26] <jqcommit> [jquery/master] Fix #10676. Remove `wheelDelta` from the event props list. - Dave Methvin
[08:18:17] <jq-jenkins> Project jQuery build #170: STILL FAILING in 2 min 44 sec: http://swarm.jquery.org:8080/job/jQuery/170/
[08:18:18] <jq-jenkins> dave.methvin: Fix #10676. Remove `wheelDelta` from the event props list.
[08:26:20] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/QHW_PQ
[08:26:20] <jqcommit> [jquery/master] Fix #10690. Make sure `.isNumeric()` can't get a `Date`. - Dave Methvin
[08:29:08] <jq-jenkins> Project jQuery build #171: STILL FAILING in 2 min 39 sec: http://swarm.jquery.org:8080/job/jQuery/171/
[08:29:09] <jq-jenkins> dave.methvin: Fix #10690. Make sure `.isNumeric()` can't get a `Date`.
[08:40:50] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/ayzWyA
[08:40:50] <jqcommit> [jquery/master] Fix #10646. Throw an Error object from `.error()` for IE's sake. - Dave Methvin
[08:42:59] <jq-jenkins> Project jQuery build #172: STILL FAILING in 2 min 1 sec: http://swarm.jquery.org:8080/job/jQuery/172/
[08:42:59] <jq-jenkins> dave.methvin: Fix #10646. Throw an Error object from `.error()` for IE's sake.
[08:44:45] <sizcommit> [sizzle] timmywil pushed 2 new commits to master: http://git.io/ZGef5w
[08:44:45] <sizcommit> [sizzle/master] remove deprecated same() and equals() QUnit calls - Mike Sherov
[08:44:45] <sizcommit> [sizzle/master] Merge pull request #80 from mikesherov/equal - timmywil
[08:45:05] <CodyPChristian> Hey guys, any idea why .on wouldn't load in Chrome or FF when using jQuery 1.7? Needing to replace my .live instances with .on
[08:45:28] <DaveMethvin> > why .on wouldn't load   huh?
[08:45:55] <DaveMethvin> try #jquery or the forum first, thanks
[08:46:22] <CodyPChristian> Tried #jquery with no luck. I'll check the forums then, thanks anyways
[08:50:23] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/ZLLIEw
[08:50:23] <sizcommit> [sizzle/master] Throw an error object from .error() for IE's sake in Sizzle - timmywil
[08:50:54] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/_tRx9Q
[08:50:54] <jqcommit> [jquery/master] Update Sizzle - timmywil
[08:55:41] <jq-jenkins> Project jQuery build #173: STILL FAILING in 4 min 40 sec: http://swarm.jquery.org:8080/job/jQuery/173/
[08:55:41] <jq-jenkins> timmywillisn: Update Sizzle
[08:59:39] <rwaldron> DaveMethvin timmywil gnarf ajpiano, meeting?
[08:59:51] <DaveMethvin> sure why not
[08:59:54] <ajpiano> yeah
[08:59:59] <rwaldron> Geez
[09:00:06] <ajpiano> it's not like i had a weird dream last night that ther was a real life jquery meeting
[09:00:15] <ajpiano> and gnarf called me out for not responding to e-mail quickly enough
[09:00:21] <ajpiano> that is definitely NOT what happened
[09:48:04] <timmywil> so rwaldron
[09:48:35] <rwaldron> so timmywil
[09:48:45] <timmywil> $.sub returns an instance of jQuerySub right?
[09:48:48] <timmywil> does it need to?
[09:49:05] <rwaldron> It currently does
[09:49:11] <rwaldron> but I'm not sure it needs to
[09:49:24] <rwaldron> aside from needing to have a real name for your sub-class
[09:49:24] <danheberden> if we're going that route, what about $.sub returning a new instance of jquery instead?
[09:49:27] <rwaldron> which seems, unnec.
[09:49:34] <danheberden> as in, the work julian did
[09:49:45] <rwaldron> exactly.
[09:50:07] <danheberden> the need or wycats was for it to have the currently loaded plugins i think tho?
[09:50:15] <danheberden> but it sounds lke that doesn't require any internals
[09:50:42] <rwaldron> jQuery.rootjQuery = rootjQuery = jQuery(document);
[09:51:35] <rwaldron> ugh
[09:51:45] <timmywil> i think i missed something
[09:51:52] <rwaldron> yeah
[09:51:56] <timmywil> jQuerySub.fn = jQuerySub.prototype = this();
[09:52:01] <rwaldron> I think i just walked into that as well
[09:52:21] <timmywil> ok, w/e
[09:52:24] <timmywil> this is still a plugin
[09:52:29] <rwaldron> can be done!
[09:53:18] <rwaldron> jQuery Size - compared to last make
[09:53:18] <rwaldron>   247896  (-1273) jquery.js
[09:53:19] <rwaldron>    93561   (-469) jquery.min.js
[09:53:19] <rwaldron>    33103   (-187) jquery.min.js.gz
[09:53:28] <timmywil> heh, hawt
[09:53:34] <rwaldron> DaveMethvin ^^^
[09:53:38] <rwaldron> sans-sub
[09:53:59] <DaveMethvin> i got -114 who knows why
[09:54:10] <DaveMethvin> but whatever, it's a lot
[09:54:23] <timmywil> interesting
[09:54:24] <DaveMethvin> oh prolly b/c i had already chopped out other stuff
[09:54:29] <timmywil> ah
[09:54:36] <DaveMethvin> you know that gzip
[09:54:49] <timmywil> he's my friend
[09:54:59] <rwaldron> i think gzip is an idiot
[09:55:04] <timmywil> lol
[09:55:08] <DaveMethvin> it's like one of those tummy-control underwears
[09:55:11] <rwaldron> rewards shitty code
[09:55:31] <timmywil> can't live with em...
[09:55:37] <rwaldron> hahahaa
[09:55:38] <rwaldron> :P
[09:56:00] <rwaldron> do we have a ticket for that yet?
[09:56:11] <DaveMethvin> which?
[09:56:17] <rwaldron> sub
[09:56:21] <timmywil> probably good to have a separate ticket for that yea
[09:56:26] <rwaldron> right
[09:56:38] <DaveMethvin> maybe we could just have a meeting and go down the whole list?
[09:56:48] <rwaldron> sure
[09:56:54] <timmywil> link?
[09:57:00] <DaveMethvin> in the agenda
[09:57:04] <rwaldron> If no one cares ether way, I'll take this ticket
[09:57:07] <timmywil> course
[09:57:08] <DaveMethvin> http://goo.gl/Vzaxa
[09:57:10] <rwaldron> whenever it gets assigned
[09:57:34] <rwaldron> DaveMethvin made this locked
[09:57:36] <rwaldron> :\
[09:57:46] <DaveMethvin> well it's a public link atm
[09:57:54] <DaveMethvin> lemme see what I can do
[09:57:55] <rwaldron> oh good call
[09:58:06] <rwaldron> you can add jquery-bugs-team as editors
[09:58:14] <rwaldron> and anyone on that list is allowed
[09:58:48] <DaveMethvin> just did
[09:58:52] <DaveMethvin> you should get an email
[09:59:37] <timmywil> DaveMethvin: were you including the value and tabindex attrHooks in that size reduction?
[09:59:48] <timmywil> value should definitely go
[09:59:53] <DaveMethvin> timmywil: no just the boolean ones
[10:00:04] <DaveMethvin> i am good with that, esp by 2.0
[10:00:06] <timmywil> tabindex is an eh cause it's one line copying over the propHook
[10:00:31] <danheberden> DaveMethvin is there anyone working on execution time for the lib?
[10:00:31] <DaveMethvin> we need to figure out when we deprecate vs. remove vs. pluginify
[10:00:45] <danheberden> i think that, while size is important, that's something of larger impact for mobile devices
[10:00:48] <danheberden> as that's hit even in cached copies
[10:00:49] <DaveMethvin> danheberden: is it too slow? :)
[10:00:53] <DaveMethvin> or do you mean load time?
[10:00:54] <timmywil> and CAN we do boolHook?  I'd love to but it seems like that will have to be there for a long while yet.
[10:00:55] <danheberden> yeah
[10:00:56] <DaveMethvin> we are working on that
[10:00:59] <rwaldron> DaveMethvin timmywil danheberden i added a new column "Volunteer"
[10:01:11] <DaveMethvin> rwaldron: "Sucker" is shorter
[10:01:16] <rwaldron> Sure, that too
[10:01:18] <rwaldron> :P
[10:01:22] <danheberden> DaveMethvin are there any metrics or docs or anything related to that?
[10:01:25] <rwaldron> I've volunteered for 2
[10:01:46] <DaveMethvin> i know we got some reports about the support.js code taking too long danheberden
[10:01:52] <DaveMethvin> haven't looked at the details  yet
[10:02:02] <rwaldron> DaveMethvin I've updated the gzip savings value
[10:02:18] <rwaldron> (for sub)
[10:02:26] <DaveMethvin> yeah all those numbers are estimates anyway, use the high one :P
[10:02:41] <rwaldron> "187"
[10:02:46] <rwaldron> seems appropriate
[10:02:50] <DaveMethvin> so danheberden  have you heard or know specific problems?
[10:03:08] <danheberden> just heard about it from others
[10:03:09] <DaveMethvin> other than load time i don't think we've heard much about perf issues
[10:03:14] <danheberden> was wondering if other people had looked into it
[10:03:15] <danheberden> heavily
[10:03:19] <danheberden> not perf, just load
[10:03:22] <DaveMethvin> they'd  need to give us some test cases
[10:03:25] <danheberden> sry - just the initial load of the lib
[10:03:31] <DaveMethvin> yeah initial load i agree
[10:03:32] <danheberden> as yehuda mentioned about support in our call
[10:03:34] <rwaldron> danheberden one thing we def want to work on... support
[10:03:37] <DaveMethvin> and we need to tackle that
[10:03:42] <rwaldron> needs to be re-written to fly
[10:03:53] <rwaldron> whoops
[10:03:58] <rwaldron> i was typing, not looking
[10:04:07] <danheberden> i like fly
[10:07:13] <rwaldron> i like food
[10:08:28] <timmywil> me too, brb
[12:54:57] <DaveMethvin> gotta go to a dentist appt ... tonight i'll be around tho
[12:58:22] <miketaylr> ?tell jaubourg that opera bug you reported is all fixed in CORE now--dunno if you got my email
[12:58:22] <bot-t> miketaylr, Okay.
[13:24:55] <sneakyness> hey miketaylr, where can I read more abou testing for opera specific bugs, current frontend bs I'm working on has some weird opera flaws that I have to fix I guess
[13:25:02] <miketaylr> woot
[13:26:00] <miketaylr> sneakyness: hmm, not sure about the best place to read up on opera bugs is... but i can pass them along to our site compat team
[13:26:17] <miketaylr> sneakyness: if you wanna email me more deets -> miket@opera.com
[13:27:08] <sneakyness> awesome, noted. I'll probably get at you in a few weeks, convinced them we need to rewrite a lot of stuff so we're doing that instead :)
[13:27:23] <sneakyness> I can't speak for the stability of the js we have currently so it's probably our fault
[13:27:37] <sneakyness> if it was public i'd give you a link
[13:33:15] <paul_irish> DaveMethvin: does jquery bugs team need to be invite-only to view?  we can have readonly for public. write for members.
[13:36:38] <miketaylr> no worries sneakyness
[14:11:04] <ajpiano> $("#foo").on("click", fn) emulates $("#foo").bind("click", fn), not $("#foo").live("click", fn), right?
[14:12:03] <ajpiano> in other words, $(document).on("click", "#foo", fn) is how you emulate live with .on, correct?
[14:17:54] <DaveMethvin> ajpiano: righty
[14:18:21] <ajpiano> we might want to document that a bit more
[14:18:24] <DaveMethvin> the docs should be pretty clear on that, if not we can clarify
[14:18:46] <ajpiano> hmm, it's on .live()
[14:18:49] <ajpiano> the docs for that
[14:18:56] <ajpiano> i suppose that's adequate
[14:19:08] <ajpiano> i haven't had to explain that one to people before just now
[14:19:11] <DaveMethvin> the live page has both a template and concrete examples in the first few paras
[14:19:29] <ajpiano> yeah, i was looking on .on
[14:23:09] <DaveMethvin> ajpiano: i reworded the first para slightly for .on, see if that helps
[14:23:52] <DaveMethvin> "if  you don't know what the hell you're doing, click here"
[14:24:46] <ajpiano> ah
[14:26:15] <paul_irish> DaveMethvin: thxxx
[14:26:22] <DaveMethvin> sure
[14:32:55] <gnarf> Hey guys
[14:32:57] <gnarf> sorry i missed the meeting
[14:33:03] <gnarf> I'm in austin @ bioware
[14:33:11] <gnarf> they had a bunch of meetings lined up for us
[14:34:09] <DaveMethvin> gnarf we will never forgive you
[14:34:23] <DaveMethvin> but you are in austin so that part is awesome
[14:35:02] <DaveMethvin> i think we are in good shape, see the meeting notes and the links to the 1.8 discussion
[14:36:20] <gnarf> cool
[14:36:22] <gnarf> will do
[14:37:57] <mikesherov> 1.8???
[14:38:12] <mikesherov> So, where can I find info about the IRC meeting?
[14:38:19] <mikesherov> for 1.8?
[14:39:13] <ajpiano> once its scheduled
[14:43:40] <mikesherov> ok, so once it's scheduled, it gets posted on the blog or something?
[14:43:50] <mikesherov> I just want to make sure I don't miss it
[14:46:54] <mikesherov> so, anyone have any bright ideas on how to get jQuery to load as one file in the test suite?
[14:47:35] <mikesherov> best i could come up with was concatenating them all using a php script in the same manner as the makefile
[14:55:23] <ajpiano> mikesherov: DaveMethvin will prob mention it there, yes
[14:55:28] <ajpiano> i'm sure we won't let you miss it :p
[14:55:35] <mikesherov> ok
[14:55:38] <mikesherov> lol
[14:55:43] <mikesherov> i'm eager
[15:00:17] <DaveMethvin> shh nobody tell mikesherov where the meeting is ajpiano
[15:00:31] <DaveMethvin> i am putting up the blog post tomorrow as a kickoff
[15:00:41] <mikesherov> haha
[15:00:42] <DaveMethvin> then we'll do the call for suggestions
[15:01:16] <mikesherov> does it matter that the suggestions are mostly build side?
[15:01:42] <mikesherov> like unit tests and jshint?
[15:04:59] <DaveMethvin> mikesherov: for those we can just do em
[15:05:06] <mikesherov> Oh, OK
[15:05:09] <mikesherov> shucks
[15:05:17] <mikesherov> OK then, I will
[15:05:20] <DaveMethvin> yeah get to work you slacker! :P
[15:05:44] <DaveMethvin> i thought they were all really good ideas, just nobody was doin em
[15:06:10] <mikesherov> I definitely want to be a part of the move to JSHint... I would think that though involves a bigger discussion than just programming as to which options we want
[15:06:41] <mikesherov> And perhaps we should have a separate milestone in Trac for non-dist related tixx
[15:07:11] <mikesherov> just to create a bucket where all those ideas can go without unnaturally tying it to a release
[15:19:57] <Krinkle> What's the url to jenkins at swarm.jq.o again ?
[15:19:58] <bot-t> (334 hours ago) <jzaefferer> tell krinkle the whole theme and site is very much a draft - if you spot issues in the theme, this is the right place to report them: https://github.com/jquery/web-base-template/issues
[15:20:17] <Krinkle> :)
[15:22:40] <Krinkle> Ah, good ol ol' log search
[15:22:40] <Krinkle> http://swarm.jquery.org:8080/
[17:10:07] <jrburke> timmywil: yt? wanted to talk about the amd patch
[17:10:40] <timmywil> jrburke: yup
[17:11:40] <jrburke> timmywil: from the conversation this morning, you suggested creating another js file to hold the exporting of jquery to window and the amd work. i can do that patch if you like, but if you had specific plans for it then i defer to you.
[17:12:13] <jrburke> we can work out the naming that is preferred for example before i do the patch
[17:12:30] <jrburke> but happy to do the work if it helps
[17:14:37] <timmywil> im free right now if you're busy.  we can always change the name, but maybe export.js or expose.js?
[17:14:58] <jrburke> ha, i was thinking of exports.js
[17:15:06] <jrburke> sure what do you like?
[17:15:15] <timmywil> perfect
[17:15:38] <jrburke> ok, so a src/exports.js and a test/exports.js where the exports.js has the amddefine test from before
[17:15:53] <jrburke> that was in core.js
[17:16:14] <timmywil> sounds great.  would be a good place to add more amd tests in the future if we need it
[17:16:32] <jrburke> oops i should have said test/unit/exports.js
[17:16:47] <timmywil> i figured :)
[17:17:10] <jrburke> ok, i'll do a fresh patch and close out the pull request i did and start a new one.
[17:17:54] <timmywil> cool, thanks james!
[17:37:47] <DaveMethvin> timmywil gnarf: so, can we eliminate the test failures? I think one or both of you had looked into the details
[17:39:32] <timmywil> ah yes.  Well I recommend commenting the test that fails in opera.  The one with focus could either check for swarm or check for focus
[17:40:13] <timmywil> The test that fails in opera is the same one we use $.browser for safari btw
[17:41:06] <jqcommit> [jquery] dmethvin pushed 2 new commits to master: http://git.io/CNj-yQ
[17:41:06] <jqcommit> [jquery/master] Replace .bind with .on when building event aliases - Daniel Herman
[17:41:06] <jqcommit> [jquery/master] Merge pull request #585 from dcherman/master - Dave Methvin
[17:41:56] <DaveMethvin> timmywil: yeah a problematic test indeed
[17:42:09] <DaveMethvin> do we have a good test for swarm?
[17:44:04] <jq-jenkins> Project jQuery build #174: STILL FAILING in 2 min 44 sec: http://swarm.jquery.org:8080/job/jQuery/174/
[17:44:04] <jq-jenkins> daniel.c.herman: Replace .bind with .on when building event aliases
[17:44:21] <timmywil> we can set a var in testrunner
[17:44:47] <timmywil> lemme look at checking for focus
[17:45:26] <DaveMethvin> imma land rwaldon's ie shim patches
[17:45:53] <timmywil> ie shim?
[17:46:18] <DaveMethvin> 10667 and 10682
[17:46:37] <DaveMethvin> aw, conflict
[17:46:53] <timmywil> ah right
[17:48:28] <timmywil> actually, there's one thing I wanted to look at concerning 577
[17:48:42] <timmywil> it can be landed tho
[18:00:30] <timmywil> oh no wait
[18:00:48] <timmywil> seems there's a little more here than we need
[18:02:01] <DaveMethvin> timmywil: on those two commits?
[18:02:16] <DaveMethvin> i just got them resolved and squashed but not committed, so now's a good time to tweak
[18:02:27] <timmywil> yea
[18:02:45] <timmywil> I think I can shorten this
[18:11:01] <timmywil> it's unfortunate that the elem.cloneNode( true ) is pointless on this path
[18:11:56] <DaveMethvin> well tbh it's unfortunate this path has to exist :D
[18:15:19] <timmywil> man, manip could use some work
[18:16:47] <DaveMethvin> yeah, anything not touched for a while gets that bit rot feeling
[18:25:21] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/on45cg
[18:25:21] <jqcommit> [jquery/master] Fix busted rnoshimcache. Correctly clone detached unknown elems. Fixes #10667, #10670. - Rick Waldron
[18:25:58] <timmywil> I made a few edits and left him as author
[18:26:06] <timmywil> hope he doesn't mind
[18:26:25] <DaveMethvin> only if you broked it!
[18:26:35] <timmywil> we'll see :)
[18:26:49] <timmywil> it was just an oversight
[18:26:58] <timmywil> he was still overwriting clone.cloneNode
[18:27:41] <DaveMethvin> which we don't need b/c if we go back thru clone() with that node we special case it anyway i guess
[18:27:49] <jq-jenkins> Project jQuery build #175: STILL FAILING in 2 min 21 sec: http://swarm.jquery.org:8080/job/jQuery/175/
[18:27:49] <jq-jenkins> timmywillisn: Fix busted rnoshimcache. Correctly clone detached unknown elems. Fixes #10667, #10670.
[18:28:44] <timmywil> and we never mess with native prototypes
[18:29:27] <DaveMethvin> yeah never a happy thing, that must cause a memory leak in ie
[18:30:20] <DaveMethvin> i think manip would be a lot smaller if we hadn't put all those function-arg signatures in
[18:30:42] <DaveMethvin> and for some reason they're defined to grab the current value and pass it to the function
[18:30:56] <DaveMethvin> but the function could do that itself, and often may not need the value!
[18:33:19] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/6fCqJQ
[18:33:19] <jqcommit> [jquery/master] Comment out an ajax test that exposed a bug in Opera, to appease testswarm. - timmywil
[18:35:46] <jq-jenkins> Project jQuery build #176: STILL FAILING in 2 min 19 sec: http://swarm.jquery.org:8080/job/jQuery/176/
[18:35:46] <jq-jenkins> timmywillisn: Comment out an ajax test that exposed a bug in Opera, to appease testswarm.
[18:46:18] <timmywil> hmmm
[18:46:45] <timmywil> it seems our fix for detached html5 clones may interfere with attached ones
[18:48:36] <DaveMethvin> lemme start an ie vm
[18:51:12] <timmywil> ah, no, it was just the patch for fragment caches
[18:55:02] <DaveMethvin> ok so the only thing left are the focusy problems timmywil
[18:55:30] <timmywil> well, I gotta figure out how to fix what this pull was trying to fix before
[18:55:39] <timmywil> but other than that yea
[18:55:58] <timmywil> this one https://github.com/jquery/jquery/pull/579
[18:55:59] <socialhapy> ★ Pull request on jquery by rwldrn (1d, 23h ago): Fixes jQuery.fragments cache and adds tests. Fixes #10682
[18:56:25] <timmywil> something about that logic is wrong
[18:57:11] <timmywil> oh
[18:57:11] <DaveMethvin> ho, it's not the way i expected
[18:57:20] <timmywil> our support test is borked
[18:57:31] <DaveMethvin> when should unknownElems be true?
[18:57:38] <timmywil> not in ie
[18:57:43] <DaveMethvin> yeah
[18:57:54] <timmywil> but it is cause we shim the whole test page
[18:58:21] <DaveMethvin> leme look at support
[18:59:38] <DaveMethvin> well that looks ok in support
[19:00:02] <timmywil> you think? that won't work
[19:00:44] <DaveMethvin> !!div.getElementsByTagName( "nav" ).length
[19:01:02] <timmywil> which works fine when there's an html5 shiv/shim
[19:01:06] <timmywil> and that's bad
[19:01:14] <DaveMethvin> i thought we required one
[19:01:23] <DaveMethvin> thats what i said in the release notes
[19:01:34] <timmywil> we do
[19:01:43] <timmywil> but i don't think this test ever worked
[19:02:07] <DaveMethvin> oh in our test setup?
[19:02:19] <timmywil> yea
[19:02:37] <timmywil> wait
[19:02:38] <DaveMethvin> oh yeah waitaminit
[19:02:54] <timmywil> so is this just to make sure the shim is on the page?
[19:03:10] <DaveMethvin> that's not the way we're using it i don't think
[19:03:14] <timmywil> or is it trying to check for html5 element support
[19:03:19] <timmywil> exactly
[19:03:28] <DaveMethvin> i think that's the probelm, it's ambiguous
[19:03:41] <DaveMethvin> if the shim is there this will tell you unknown elements are okay
[19:03:50] <timmywil> that's what I'm thinking
[19:03:57] <DaveMethvin> but that would mean ie would bork innerHTML
[19:04:14] <DaveMethvin> wow
[19:04:18] <timmywil> that's why it only worked when we never ever used fragment cache
[19:04:33] <DaveMethvin> sad trombone
[19:05:09] <timmywil> so
[19:05:16] <DaveMethvin> oh wait, we ARE using innerHTML there
[19:05:19] <DaveMethvin> right?
[19:05:25] <timmywil> where?
[19:05:38] <DaveMethvin> 	div.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/><nav></nav>";
[19:05:49] <timmywil> sure
[19:05:52] <DaveMethvin> if the <nav> survives then it worked
[19:06:09] <timmywil> yea, I think someone just got confused as to the purpose of that test
[19:06:47] <DaveMethvin> i think we shoudl be doing a test specifically against what we plan to do with it in manip though
[19:06:49] <timmywil> the problem is, we can't use fragment cache at all for html5 elements in IE
[19:06:57] <timmywil> not just when there isn't a shim on the page
[19:07:16] <timmywil> make sense?
[19:07:38] <DaveMethvin> yeah which means we need a different feature detect i think
[19:08:23] <DaveMethvin> we should see if clone works for a nav or whatever if it turns out that navs aren't destroyed when you innerHTML them
[19:08:24] <timmywil> and we should change the name of unknownElems
[19:10:03] <DaveMethvin> uh ... i don't suppose this can be done in fewer bytes? :)
[19:10:16] <DaveMethvin> what a pain for such a stupid browser
[19:10:36] <timmywil> we could just not use fragment caches for html5 elements in any browser
[19:10:42] <timmywil> that would be shorter
[19:11:12] <timmywil> but probably not ideal :P
[19:11:23] <DaveMethvin> do we have any stats for how much faster the frag cache makes things?
[19:11:34] <DaveMethvin> it's a memory hog
[19:12:03] <timmywil> probably a lot actually
[19:12:10] <DaveMethvin> it doesn't cache the DOM elements until the second use but it defines the fragment on the first use
[19:12:40] <timmywil> it skips clean
[19:13:17] <DaveMethvin> we check for the frag being really big but not being really small, i wonder how much we really save by caching "<p>hello</p>"
[19:13:50] <timmywil> it's worth exploring
[19:13:55] <timmywil> what should we do for now?
[19:13:59] <DaveMethvin> right
[19:14:47] <timmywil> I could include rnoshimcache in the rnocache regex and we skip fragment caching for those elements
[19:15:08] <timmywil> and remove the extra regex test
[19:15:18] <DaveMethvin> for now 1.7.1 that might be the simplest thing
[19:15:19] <timmywil> or we need another support test
[19:15:26] <DaveMethvin> lets be right before we're fast
[19:15:40] <timmywil> ok
[19:17:26] <timmywil> DaveMethvin: what should we call unknownElems?
[19:17:56] <DaveMethvin> html5Removed ?
[19:17:56] <timmywil> jQuery.support.docShim?
[19:18:14] <timmywil> well, it's testing for the positive
[19:18:36] <timmywil> so something about having the shim
[19:18:39] <DaveMethvin> as long as there's a comment above it we can probalby name it anything :D
[19:18:53] <DaveMethvin> docShim is ok with me
[19:21:27] <timmywil> eh, I'll just leave it and update the comment
[19:22:23] <timmywil> DaveMethvin: you know what, it isn't used anywhere
[19:22:29] <timmywil> i just grep'd
[19:22:46] <timmywil> this was the propsed test for fragment cache
[19:23:18] <DaveMethvin> whoa
[19:23:43] <timmywil> yea
[19:24:16] <DaveMethvin> wait, which isn't used?
[19:24:30] <timmywil> $.support.unknownElems
[19:24:38] <timmywil> was not used anywhere else
[19:25:00] <DaveMethvin> it was used in that check
[19:25:07] <timmywil> right
[19:25:13] <timmywil> but will not work for that check
[19:25:17] <DaveMethvin> oh but nowhere else, right
[19:25:37] <timmywil> so we can remove, or replace it with something that does work
[19:25:49] <DaveMethvin> and give it any name we want!
[19:25:51] <timmywil> but i fear writing something that does work might be, dare i say, too much work
[19:26:00] <DaveMethvin> or too many bytes
[19:26:05] <timmywil> ^^
[19:26:19] <timmywil> that's more what i was getting at
[19:26:28] <DaveMethvin> well i guess we said we support this now, so we can't back out
[19:26:47] <timmywil> support which exactly?
[19:26:54] <DaveMethvin> html5 innershiv
[19:27:02] <timmywil> it works without it
[19:27:11] <DaveMethvin> oh if we don't go thru cache
[19:27:16] <timmywil> right
[19:27:24] <timmywil> the only problem here is reusing the fragment
[19:27:36] <DaveMethvin> yeah screw ie
[19:27:39] <timmywil> which collapses html5 clones
[19:27:48] <timmywil> into single elements
[19:27:52] <timmywil> and loses shit
[19:27:59] <DaveMethvin> although we  have some collateral damage i guess if we can't tell that it's not ie
[19:28:28] <timmywil> that's just it tho, we never could tell
[19:28:38] <timmywil> instead we killed fragment cache for everything
[19:29:15] <DaveMethvin> and nobody complained ... although there was some discussion of startup being slow but i think
[19:29:21] <DaveMethvin> that is support.js most likely
[19:30:16] <timmywil> it's a good thing you stumbled into it checking out that append ticket tho
[19:30:28] <timmywil> or we'd have stale code for a long time
[19:30:35] <DaveMethvin> the legit way to test it woudl be to see if html5 elems are preserved and then see if cloning them lost stuff
[19:31:03] <timmywil> we could clone the nav element and check it's nodeValue (I think)
[19:31:33] <DaveMethvin> lemme get on my vm
[19:37:43] <timmywil> nvm about nodeValue
[19:53:02] <timmywil> DaveMethvin: well I'm not coming up with anything short. how about you?
[19:53:51] <DaveMethvin> not really, i was thinking about a few other extreme things but
[19:54:06] <DaveMethvin> i dunno
[19:55:04] <DaveMethvin> if we disabled the cache for ie 6/7/8 all these special cases would go away <evil grin>
[19:55:26] <DaveMethvin> and like
[19:55:37] <DaveMethvin> everyone would just say, that's ie being slow
[19:56:12] <DaveMethvin> i guess there is one webkit special case there too
[19:56:29] <timmywil> an it's still a new feature to be able to use html5 elements in manip
[19:56:32] <timmywil> and*
[19:56:44] <timmywil> oh
[19:56:46] <timmywil> yea
[20:05:40] <timmywil> DaveMethvin: maybe this...
[20:05:51] <timmywil> html5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>"
[20:06:36] <timmywil> too long?
[20:06:46] <DaveMethvin> not bad
[20:07:09] <DaveMethvin> oh but outerHTML can only be used if it's ie
[20:07:26] <timmywil> where's it's null it'll still work
[20:07:32] <timmywil> or undefined
[20:07:38] <timmywil> still not equal to that
[20:07:40] <DaveMethvin> sweet
[20:08:00] <timmywil> outerHTML actually works in webkit too
[20:08:22] <timmywil> but still not equal
[20:08:26] <timmywil> so boosh
[20:08:29] <DaveMethvin> mainly i was worred that it would break where it wasn't supported, so undefined works fine
[20:27:55] <DaveMethvin> oh boy, i've got some event stuff to do tomorow
[20:28:15] <DaveMethvin> gotta go to sleep now, that fall back stuff sucks at night
[20:28:41] <gnarf> hrm
[20:28:42] <timmywil> DaveMethvin: night :)
[20:28:44] <gnarf> whats up?
[20:28:52] <timmywil> gnarf: just the man i wanted to see
[20:28:57] <DaveMethvin> oh yeah show up just as i'm leaving
[20:29:02] <DaveMethvin> you two have fun!
[20:29:17] <timmywil> sleep well dave
[20:29:58] <timmywil> gnarf: show me that code you wrote for focus in ie
[20:30:17] <timmywil> gnarf: i know you called document.body.focus(), but what was it that you checked?
[20:33:11] <gnarf> document.activeElement === input
[20:33:23] <gnarf> if ^^^ doc body focus
[20:33:32] <timmywil> ah, after calling blur
[20:33:43] <timmywil> right
[20:33:54] <gnarf> right
[20:34:01] <gnarf> timmywil: check simulate in ui core
[20:34:42] <gnarf> https://github.com/jquery/jquery-ui/blob/master/tests/jquery.simulate.js#L164-213
[20:35:03] <gnarf> that will fix events focus stuff too
[20:35:26] <gnarf> i wanted to make that blur function take a callback too
[20:35:27] <gnarf> :)
[20:35:47] <gnarf> but thats the result of a whole lot of research
[20:36:28] <timmywil> that looks like it may still have the same problem in this case
[20:36:52] <timmywil> that makes sure all handlers are fired, but we need activeElement to actually be something else
[20:47:41] <timmywil> gnarf: did you use qsa where available to check for focus on the other fail?
[20:50:24] <gnarf> timmywil: the :focus matches?
[20:50:35] <timmywil> yea
[20:50:37] <gnarf> my thought was ensuring the "matchesSelector" impl was actually matching
[20:50:52] <gnarf> if not, just ok(true, "skipped this test") type thing
[20:51:24] <timmywil> ah, so you checked matchesSelector
[20:51:50] <timmywil> that's right, i remember now
[20:52:18] <timmywil> i think i'll stick with qsa tho so we don't have to have all the prefixes
[20:52:31] <gnarf> sure
[20:52:46] <timmywil> im using document.hasFocus where available
[20:52:50] <timmywil> first
[21:02:10] <gnarf> cool
[21:02:20] <gnarf> so when are we gonna start ramping up 1.8 timelines
[21:02:36] <gnarf> and can we petition someone to let me have write access to push a branch for my rewrite stuff?
[21:03:04] <gnarf> i can always push to my local, but i want something that will notify you guys :)
[21:03:15] <gnarf> er my github
[21:06:19] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/AfrEKA
[21:06:19] <sizcommit> [sizzle/master] Adjust the focus input tests so they won't fail when the browser is out of focus - timmywil
[21:08:31] <jqcommit> [jquery] timmywil pushed 2 new commits to master: http://git.io/qCnitQ
[21:08:31] <jqcommit> [jquery/master] Remove test of the invalid object for IE9's sake; Rewrite the appropriate support test for html5 clone caching. Fixes #10682 - timmywil
[21:08:31] <jqcommit> [jquery/master] Update Sizzle - timmywil
[21:11:13] <jq-jenkins> Project jQuery build #177: STILL FAILING in 2 min 32 sec: http://swarm.jquery.org:8080/job/jQuery/177/
[21:11:14] <jq-jenkins> * waldron.rick: Fixes jQuery.fragments cache and adds tests. Fixes #10682
[21:11:15] <jq-jenkins> * timmywillisn: Update Sizzle
[21:51:09] <timmywil> gnarf: we'll be discussing 1.8 some in the next meeting, hopefully.
[21:51:19] <gnarf> cool
[21:51:20] <timmywil> night man, need me some sleep
