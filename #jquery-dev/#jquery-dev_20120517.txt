[00:02:36] <Krinkle-away> ?on
[04:47:47] <gibson042> .
[07:46:49] <socialhapy> ★ Tweet from jqueryui: jQuery UI 1.9m8 is out, featuring Position API redesign and accessibility improvements for Autocomplete and Tooltip http://t.co/a8sMEk4o ★ http://bit.ly/KvYKPc
[07:48:39] <scott_gonzalez> yay
[09:58:05] <scott_gonzalez> snover: Where is this code in a tag? http://bugs.dojotoolkit.org/browser/dojo/trunk/src/a11y.js#L28
[09:58:23] <scott_gonzalez> I want the equivalent of that URL but in a form that will never change.
[09:59:15] <snover> scott_gonzalez: that url will never change because dojo/trunk is dojo 0.4
[09:59:43] <scott_gonzalez> O_o
[09:59:55] <scott_gonzalez> Where should I be looking for newer code?
[10:02:12] <scott_gonzalez> Looks like this is the new code: http://bugs.dojotoolkit.org/browser/dojo/tags/release-1.7.2/dijit/hccss.js
[10:02:19] <scott_gonzalez> That's the most recent stable release?
[10:20:39] <snover> scott_gonzalez: ytes
[10:20:40] <snover> yes*
[10:21:56] <snover> scott_gonzalez: http://bugs.dojotoolkit.org/browser/dojo/dojo/trunk is real trunk, and https://github.com/dojo is where 2.0 is going to live
[10:23:03] <scott_gonzalez> You guys should petition GitHub to make CLAs easy :-)
[10:23:23] <scott_gonzalez> They probably won't care since 99.9% of projects on GitHub don't care about CLAs.
[10:23:40] <scott_gonzalez> But it'd be pretty slick if they had it built in. Like, you can't send a PR without having signed.
[10:23:49] <snover> scott_gonzalez: i already asked them to add badges
[10:24:05] <snover> so people from the dojo foundation could give badges to user accounts with a cla
[10:24:10] <snover> or you could give a badge to someone for being awesome
[10:24:12] <snover> or whatever
[10:24:45] <scott_gonzalez> How'd that go?
[10:25:06] <snover> it’s on a list somewhere but I don’t know anything other than that
[10:25:19] <snover> scott_gonzalez: not sure why jquery isn’t more concerned about CLAs given how dm threatened to sue over some tests he contributed…
[10:25:47] <scott_gonzalez> umm....what?
[10:25:55] <scott_gonzalez> I did not hear about this.
[10:26:10] <snover> https://groups.google.com/group/jquery-dev/msg/b8079000b547df15
[10:27:23] <snover> google requires a cla for anyone contributing code to any of their oss projects too…
[10:27:53] <scott_gonzalez> DaveMethvin: Where do we stand on this?
[10:28:12] <scott_gonzalez> Getting a CLA together has been on the list for years.
[10:28:36] <DaveMethvin> true, and i think we haven't made any progress
[10:28:39] <snover> Dojo Foundation is getting an online CLA form online finally after I rattled some cages
[10:28:43] <DaveMethvin> it would be great if github had something
[10:28:50] <snover> I dunno if you would be interested in going that route at all
[10:29:05] <DaveMethvin> online cla sounds good to me
[10:29:13] <DaveMethvin> something that is easy
[10:29:20] <snover> sizzle is already a DF project
[10:31:00] <snover> anyway, I’d be happy to discuss a bit more at some point
[10:34:04] <snover> for the first time in months I’ve been given OSS time and I’m trying to use it to get this documentation parser whipped into shape :)
[10:39:06] <jqcommit> [qunit] scottgonzalez pushed 1 new commit to master: http://git.io/oYkE7w
[10:39:06] <jqcommit> [qunit/master] Track tests by the order in which they were run and create rerun links based on that number. Fixes #241 - Make Rerun link run only a single test. - Scott González
[10:54:21] <jq-jenkins> Project QUnit build #127: FAILURE in 15 min: http://swarm.jquery.org:8080/job/QUnit/127/
[10:54:21] <jq-jenkins> Scott González: Track tests by the order in which they were run and create rerun links based on that number. Fixes #241 - Make Rerun link run only a single test.
[11:16:23] <jquizzle> is it necessary to wrap this in a document.ready $(document).keyup(function(){... ?
[11:21:17] <scott_gonzalez> ?topic @jquizzle
[11:21:17] <bot-t> jquizzle, Topic: jQuery development chat. Support chat (using jQuery, writing plugins, or other inquiries) is at #jquery. Triage team: Unreviewed tickets at http://bugs.jquery.com/report/400 - Tickets Needing Review: http://bugs.jquery.com/report/405 - 1.8 Suggestion Box http://gul.ly/d72 | This channel is publicly logged to http://irc.jquery.com
[11:45:26] <cadecairos> Is there a hook in testswarm that will let me know when a job has completed?
[13:27:48] <paul_irish> jquery and ccao: http://cache.gyazo.com/49739e804f1e3df3504394b8f34c0058.png
[13:28:15] <paul_irish> admittedly not a lot of context, but suffice it to say there's a lot of folks interested in jQuery compat with CC AO
[13:28:36] <paul_irish> i tried to make a build of it, based on instructions from gnarf but i think i failed.
[13:33:12] <David_Souther> paul_irish: ccao makes a lot of java-esque assuptions and requirements. Especially with variable renaming and object compression, code really needs to be written with AO in mind up front. Exports are expressly forbidden from within a functional scope; working around that in a project is non-trivial.
[13:39:49] <paul_irish> definitely agree.
[13:40:09] <paul_irish> AO does two distinct things
[13:40:43] <paul_irish> 1) crazy sweet compression including DCE
[13:41:02] <paul_irish> 2) strict mode on steroids via type checking and so on
[13:41:19] <paul_irish> so i like to look at it as not just (oh its smaller)
[13:41:31] <paul_irish> but.. this saved me a bunch of headaches before i even hit F5
[13:41:50] <David_Souther> 1) is great, but uglify etc do pretty darned well.
[13:43:10] <David_Souther> 2) IMO is a nightmare- jQuery is ground-up prototype and duck typing. Working jsdocs annotations and typing, etc in at this point would break the current API.
[13:43:50] <David_Souther> And that benefit is not passed on to users, without requiring them to recompile their apps with closure.
[13:44:37] <David_Souther> I'm not on the core team, but I don't think those are options for them. Of course, they can speak for themselves, but I see that as a tremendous change from what's happened so far
[13:44:58] <David_Souther> As a consumer of the library, I would stop using jquery if I had to use closure on my own app to get type safety, etc.
[13:45:29] <paul_irish> there's already a build with the jquery API still working with all the cc ao annotations in place...
[13:45:43] <David_Souther> Link?
[13:48:06] <David_Souther> http://bugs.jquery.com/ticket/11015
[13:48:06] <paul_irish> http://dl.dropbox.com/u/39519/temp/jquery-1.7.3pre-ccao.js
[13:48:14] <paul_irish> you wouldnt have to use CC in your code
[13:48:17] <paul_irish> it's opt-in
[13:48:21] <paul_irish> there for the people that want it
[13:48:24] <David_Souther> Interesting...
[13:48:36] <paul_irish> most folks will go on and use uglify and nothing changes
[13:49:10] <David_Souther> Then, as a consumer that works for me.
[13:52:16] <ajpiano> it requires substantial changes to core though https://github.com/jquery/jquery/pull/740
[13:52:18] <socialhapy> ★ Pull request on jquery by dmethvin (4w, 1d ago): Google Closure Compiler CCAO changes
[13:52:47] <ajpiano> and introduces a potentially never ending series of edge cases
[13:53:04] <snover> so um
[13:53:10] <ajpiano> which i think is DaveMethvin's main concerns
[13:53:29] <ajpiano> in any case i need to gtfo :|
[13:53:46] <snover> I would just like to point out that you cannot use DCE on jQuery unless users are closure compiling their own copies of jQuery and all their own code is annotated & etc. too
[13:53:59] <paul_irish> yes
[13:54:05] <David_Souther> Thus, the @expose annotations
[13:54:19] <David_Souther> Which I didn't know about until I clicked that link
[13:54:53] <DaveMethvin> if we can get someone willing to mentor a CC branch I'll be glad to host it
[13:55:52] <DaveMethvin> but like snover says, the developer has to take control and compile the whole lump o' annotated and CCAO-safe code to get the benefit
[13:56:05] <snover> I don’t know a lot of dev teams that have the time to annotate and such
[13:56:13] <DaveMethvin> so if you're using jQuery UI or Mobile they'd need the same treatment
[13:56:22] <snover> you have limited dev time. which of these do you do? 1. annotate your code for CC; 2. write documentation; 3. write tests
[13:57:04] <scott_gonzalez> snover: That's a trick question. You know the answer is none of the above.
[13:57:08] <snover> scott_gonzalez: :)
[13:57:09] <DaveMethvin> yeah
[13:57:26] <DaveMethvin> i thought snover was writing code to write docs ... the ultimate cheat :P
[13:57:35] <snover> yes :)
[13:57:36] <snover> In my experience the answer is usually 2, occasionally 3, never 1
[13:57:41] <DaveMethvin> CCAO is a huge amount of work, which I'm willing to help someone to do, but not obligate the jQuery team to do it
[13:58:29] <snover> Depends if 10kB of savings per load is worth 100 dev-hours or however long it takes to annotate & troubleshoot & test CCAO code
[13:58:30] <paul_irish> Yup. makes sense.
[13:58:51] <DaveMethvin> plus, it's incremental butt pain
[13:59:03] <DaveMethvin> once you become CCAO safe there is no guarantee you'll stay that way
[13:59:06] <paul_irish> i think my larger point is the in-development benefits are significant enough
[13:59:29] <paul_irish> having type checking during development being very valuable to your iteration speed, etc
[13:59:31] <scott_gonzalez> According to people who think it's worthwhile to build a new language? :-P
[13:59:39] <snover> but here’s the thing
[13:59:39] <DaveMethvin> ooooh burn
[13:59:45] <snover> you cannot 99% your annotations
[13:59:51] <paul_irish> different people, obviously.
[13:59:57] <snover> either you do 100% or you can’t use CCAO
[14:00:09] <snover> so there’s no incremental benefit
[14:00:11] <snover> it is either all or nothing
[14:00:24] <paul_irish> yeah
[14:00:28] <snover> compare to has.js which allows DCE incrementally
[14:01:01] <scott_gonzalez> DCE = ?
[14:01:04] <snover> dead code elimination
[14:01:25] <DaveMethvin> for my consulting work i am doing some outreach to major sites and if you think that any of them are candidates for CCAO you are mistaken
[14:01:50] <DaveMethvin> cnbc.com has 23 separate script tags in the head of their home page
[14:01:55] <scott_gonzalez> We can just move every function into an AMD module :-)
[14:01:59] <David_Souther> XD
[14:02:08] <snover> and most intranet apps are written by cut-rate outsource groups that can barely write functional code *without* the extra stuff
[14:02:27] <David_Souther> @scott_gonzalez didn't you expressly state you'd _never_ do that at bowling last month?
[14:02:35] <DaveMethvin> and the AMD sites i've seen just declare everything whether they use it or not in the module
[14:02:55] <snover> DaveMethvin: look at better AMD sites. one written using dojo 1.7 perhaps :)
[14:03:13] <scott_gonzalez> Yes, I did. It was a joke. I meant a separate module for every single function. It would allow incremental DCE :-P
[14:03:17] <DaveMethvin> well unless the code downright breaks theres no incentive to clean it up
[14:03:19] <David_Souther> :)
[14:03:40] <DaveMethvin> perhaps some tools like jslint could come in handy here
[14:03:54] <DaveMethvin> i can see one that looked for declared but unused dependencies
[14:04:11] <paul_irish> is jslint like a new version of jshint or something?
[14:04:19] <DaveMethvin> haha
[14:04:20] <snover> jslint actually will do that for you kinda
[14:04:24] <David_Souther> jslint's like the grandaddy of jshint...
[14:04:33] <scott_gonzalez> Yeah, it'll report unused vars.
[14:04:58] <paul_irish> David_Souther: i helped launch jshint ;)
[14:05:03] <scott_gonzalez> But...that assumes these devs are using jshint in the first place.
[14:05:10] <snover> scott_gonzalez: well, you can’t help the helpless :)
[14:05:11] <DaveMethvin> and we are so glad you did paul_irish
[14:05:12] <David_Souther> :P
[14:05:26] * David_Souther is new here
[14:05:46] * DaveMethvin is old everyhwere
[14:05:56] <paul_irish> :)
[14:06:05] <paul_irish> well
[14:06:15] <scott_gonzalez> To put things in perspective, I'm less willing to support CC AO than AMD :-)
[14:06:41] <scott_gonzalez> It sounds like DaveMethvin is more willing.
[14:06:45] <DaveMethvin> paul_irish: i am still intending to have a branch that will appeal to CCAO users, but will need the CC community to step up big time or it will wither and die
[14:06:59] <paul_irish> DaveMethvin: that sounds good
[14:07:07] <paul_irish> more than good.
[14:07:26] <scott_gonzalez> Sounds a bit painful actually.
[14:07:34] <scott_gonzalez> You'll have 1.8 and 1.8cc
[14:07:48] <scott_gonzalez> What happens when a merge goes bad and you have bugs in 1.8cc but not 1.8?
[14:08:12] <ajpiano> i think it have to be more of a fork than a branch :|
[14:08:16] <DaveMethvin> hey there buzzkillington
[14:08:32] <snover> i thought that was me
[14:08:35] <DaveMethvin> yes it will be work, which is why i said "big time"
[14:08:46] <DaveMethvin> we can't do that ourselves
[14:09:03] <scott_gonzalez> Also, what would the release schedule look like?
[14:09:06] <scott_gonzalez> Would they be in sync?
[14:09:26] <scott_gonzalez> If so, how much time would you give the CC team to update the branch before you give up and just do the release of the normal code?
[14:09:32] <DaveMethvin> I don't know.
[14:09:54] <DaveMethvin> i think the cc guys would have to expect that we aren't waiting for them at all
[14:10:03] * mikesherov brain explodes
[14:10:21] <DaveMethvin> if they can wait 3 weeks for google to put up new cdn copies, they're used to waiting :P
[14:10:32] <scott_gonzalez> haha
[14:10:56] <David_Souther> It seems like it would be more a fork... jquery_cc would pull from jquery, add annotations, retest and release?
[14:11:11] <scott_gonzalez> They're too busy adding CCAO docs to update the CDN.
[14:11:17] <DaveMethvin> you may be right David_Souther
[14:11:36] <DaveMethvin> in which case there is a LOT of work for someone who is not me
[14:11:40] <David_Souther> Could they add docs for @expose?
[14:12:01] <scott_gonzalez> I guess we wouldn't be too worried about people reporting bugs against the CC version.
[14:12:08] <scott_gonzalez> Since only like 10 people would be using it.
[14:12:21] <DaveMethvin> it's SO DAMN HARD to track down bugs in that stuff
[14:12:37] <scott_gonzalez> sourcemap?
[14:12:38] <DaveMethvin> again, this would have to be for people who understand they are taking on a bunch of responsibility
[14:12:54] <DaveMethvin> sure if it is repro in chrome
[14:13:11] <DaveMethvin> let me check ...
[14:13:27] <DaveMethvin> nope ie7 does not have sourcemap support yet
[14:13:33] <DaveMethvin> :P
[14:16:17] <scott_gonzalez> DaveMethvin: http://bugs.jqueryui.com/ticket/8331
[14:16:27] <scott_gonzalez> Close as "Sounds like a bug in a UA that we don't support." ?
[14:17:27] <DaveMethvin> yeah, i saw that jzaefferer did add phantomjs support for our qunit but i am not sure it represents a reality we need to live in
[14:17:33] <DaveMethvin> and focus is hard enough on real browsers
[14:18:16] <DaveMethvin> so i'd say close it as an unsupported browser scott_gonzalez, something that phantomjs should fix
[14:19:45] <scott_gonzalez> He also filed a ticket saying that we should listen to blur events instead of mouse and key events for when to close datepicker.
[14:19:57] <scott_gonzalez> He was like "it creates symmetry and simplifies the code"
[14:20:00] <scott_gonzalez> umm...no.
[14:20:07] <scott_gonzalez> It actually makes it more complicated.
[14:20:09] <scott_gonzalez> Thanks IE.
[14:20:55] <DaveMethvin> if someone has a great vision for that stuff, just ask them to file a pull request with a working/tested implementation
[14:21:14] <DaveMethvin> that'll keep em busy
[14:21:33] <paul_irish> scott_gonzalez: somewhat related https://github.com/scottjehl/Device-Bugs/issues/25 sorta kinda not really
[14:21:34] <socialhapy> ★ Issue #25 on Device-Bugs (paulirish; 6d, 18h ago): iOS5 datepickers don't fire onchange
[14:21:34] <scott_gonzalez> Heh, that's what I need, having to explain why a PR against datepicker is broken.
[14:22:04] <scott_gonzalez> <input type=anything-new> = :-(
[14:22:20] <scott_gonzalez> What's going on with CSS appearance?
[14:22:25] <scott_gonzalez> Didn't it get dropped?
[14:22:47] * scott_gonzalez does not follow www-style
[14:26:06] <snover> scott_gonzalez: yes :\
[14:26:12] <snover> worst decision ever
[14:26:36] <snover> It may or may not be in a CSS4 draft
[14:33:52] <paul_irish> scott_gonzalez: tantek punted it from css3 because its hard and they are far from consensus
[14:34:02] <paul_irish> and he wanted to ship css3's ui module
[14:34:37] <paul_irish> so yeah its hyptheticaly in css4 but it is basically reliant on someone caring enough about appearance to do some standards legwork
[14:37:38] <scott_gonzalez> Do modern browsers support changing input type dynamically?
[14:37:58] <scott_gonzalez> That doesn't *really* solve the problem, but I'm just curious.
[14:38:25] <scott_gonzalez> I want the semantics, validation, and APIs, but not the UI.
[14:38:32] <paul_irish> yeah they all do
[14:38:59] <DaveMethvin> scott_gonzalez: say it, brother
[14:39:13] <DaveMethvin> having the browser define the ui seems like a bad idea
[14:39:34] <DaveMethvin> i understand why they do, but that's a lot of baggage for them to deal with
[14:39:35] <paul_irish> having everyone ship 50k worth of ui is better?
[14:39:52] <scott_gonzalez> UAs should definitely ship a customized UI.
[14:39:56] <scott_gonzalez> It should just be easy to turn off.
[14:39:59] <DaveMethvin> well datepicker isn't 50k
[14:40:13] <DaveMethvin> maybe 49k
[14:40:14] <scott_gonzalez> DaveMethvin: Are you sure? Have you seen it?
[14:40:16] <scott_gonzalez> :-)
[14:40:46] <scott_gonzalez> But it's also more than datepicker
[14:41:00] <scott_gonzalez> What about a time picker, a spinner, file upload, etc.
[14:41:07] <scott_gonzalez> That all adds up.
[14:41:23] <scott_gonzalez> And falling back to text fields (minus file) isn't that nice.
[14:41:40] <scott_gonzalez> Also, UAs know their devices better than we do.
[14:42:02] <DaveMethvin> yeah and they won't tell us a lot of that
[14:42:24] <scott_gonzalez> And they can access native code, so a phone's date input could open the user's calendar if it wanted to.
[14:44:16] <scott_gonzalez> It'd just be really nice if we could use the existing elements when enhancing them.
[14:44:29] <scott_gonzalez> $( "<input type=date>" ).datepicker() will not be good
[14:45:20] <scott_gonzalez> Can we do it with shadow DOM?
[14:45:36] <rpflo> I always think of shadow lord
[14:45:42] * rpflo goes back to what he was doing
[14:46:03] <scott_gonzalez> That should at least handle $( "<input type=number>" ).spinner()
[16:21:48] <jqcommit> [jquery] jaubourg pushed 1 new commit to test-jhp: http://git.io/fFFnCg
[16:21:48] <jqcommit> [jquery/test-jhp] Makes tests usable from a server that is started from outside the jquery directory. - jaubourg
[16:41:28] <scott_gonzalez> DaveMethvin: For jshint, boss: true?
[16:41:44] <scott_gonzalez> Core doesn't have that turned on, but there's code that uses it.
[16:41:57] <scott_gonzalez> while ( (className = classNames[ i++ ]) ) {
[16:44:43] <scott_gonzalez> Oh, is that what the double parens are for?
[16:45:01] <jaubourg> yep
[16:45:19] <scott_gonzalez> That is very interesting.
[16:45:24] <scott_gonzalez> I had no idea that jshint allowed that.
[16:45:24] <jaubourg> I find it preferable to have the double parens... that way we now it's intended
[16:45:33] <jaubourg> it's inherited from jslint
[16:45:37] <scott_gonzalez> Cool.
[16:48:48] <scott_gonzalez> Just because I can't believe I'm seeing this...
[16:48:57] <scott_gonzalez> !(document.documentMode >= 9)
[16:49:00] <scott_gonzalez> is equivalent to:
[16:49:07] <scott_gonzalez> (document.documentMode < 9)
[16:49:14] <scott_gonzalez> I'm not crazy right?
[16:49:23] <scott_gonzalez> That first line should never have been written.
[16:50:15] <scott_gonzalez> Oh, I bet this is for old IE that doesn't have documentMode.
[16:50:28] <scott_gonzalez> !(undefined >= 9)
[16:51:26] <scott_gonzalez> (!document.documentMode || document.documentMode < 9)
[16:51:34] <snover> why be clear when you can be small
[16:51:51] <DaveMethvin> twss?
[16:52:16] <scott_gonzalez> It's a good thing we don't have tests for this confusing code ;-)
[16:52:42] <scott_gonzalez> snover: How sane is the DOH Robot?
[16:53:11] <DaveMethvin> alright, we're gonna crush some bugs tonight
[16:53:18] <scott_gonzalez> Is it reasonable to work with?
[16:54:08] <snover> scott_gonzalez: working with it is ok, getting it to work is less ok
[16:54:14] <snover> it works great on windows
[16:54:20] <snover> mac os, not so much
[16:54:24] <scott_gonzalez> :-/
[16:54:53] <snover> I think there are some tentative plans to start using some of the webdriver stuff
[16:55:59] <snover> the doh robot code itself is not very complicated
[16:56:25] <snover> It’s just that the quality of the teams at IBM varies wildly
[16:56:31] <snover> and they are responsible for that component
[16:58:38] <mikesherov> here!
[17:00:00] <DaveMethvin> hey mikesherov
[17:00:03] <mikesherov> DaveMethvin: you guys start the skype call yet?
[17:00:29] <DaveMethvin> nope
[17:00:41] <DaveMethvin> lemme git it going
[17:01:15] <mikesherov> ok, brb in 3 minutes. Just need to put some food in the microwave. I'm starving
[17:01:43] <jaubourg> DaveMethvin: I can attend, but I won't be able to talk (2am here)
[17:02:58] <DaveMethvin> k let me set up a call
[17:03:05] <mikesherov> jaubourg: you can be a cyborg like I was last time
[17:03:08] <DaveMethvin> sorry got a phone call just as i started
[17:03:21] <DaveMethvin> mikesherov: i don't have your skype
[17:04:10] <mikesherov> it's mikesherov
[17:04:17] <DaveMethvin> or mike.sherov
[17:04:32] <mikesherov> it's mikesherov I believe
[17:05:59] <DaveMethvin> i see a mike.sherov mikesherov but you'll need to accept my request
[17:06:21] <mikesherov> I just requested you
[17:07:10] <mikesherov> hmmm, search for "Michael Sherov" then maybe
[17:10:12] <snover> this sounds exciting
[17:10:42] * d9n turns off Safe Search
[17:16:29] <gibson042_> am I fashionably late?
[17:22:25] <DaveMethvin> what's your skype name gibson042_???
[17:22:36] <DaveMethvin> we're on skype
[17:23:00] <gibson042_> gibson042
[17:23:06] <gibson042_> I'm signed in now
[17:24:16] <DaveMethvin> just sent an invite
[18:17:25] <scott_gonzalez> DaveMethvin, mikesherov: I don't know about using TestSwarm for support tests, but you could easily write a script that just shows you the values of $.support and cycle through the browsers on BrowserStack.
[18:20:17] <scott_gonzalez> http://jsbin.com/axenup/
[18:28:19] <Krinkle> I think I may be going crazy
[18:28:20] <Krinkle> HELP!
[18:28:25] * Krinkle uploads scrn
[18:28:36] <Krinkle> http://cl.ly/0R2e2m343W3Z3s2u1d0d
[18:28:56] <Krinkle> it is alternating
[18:29:25] <Krinkle> consistently
[18:29:26] <Krinkle> 1 pass, 2 fail, 3 pass, 3 fail
[18:29:27] <Krinkle> I made sure it is no copy/paste failure, turned it into a for loop
[18:30:09] <Krinkle> how can the same regex tested against the same string pass/fail like that?
[18:31:10] <Krinkle> I walked through with the debugger and the step method. one iteration it matches 2 updates with .test() (like it should), and the next iteration, it matches none of them etc.
[18:37:24] <Krinkle> more context: http://cl.ly/1d0i1D1Q2y2I320K2t2H
[18:37:30] <Krinkle> (and less clutter)
[18:41:17] <scott_gonzalez> Krinkle: google lastIndex :-)
[18:41:47] <Krinkle> If I remove part of the array, the pattern changes: http://cl.ly/3N1B150e3R0F2V0h2e0v
[18:41:55] <scott_gonzalez> https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp/lastIndex
[18:42:06] <Krinkle> http://cl.ly/230y3b3j2r2r1p052Y3N
[18:42:14] <Krinkle> now 1 in 4 passes
[18:42:15] <Krinkle> wtf
[18:43:47] <Krinkle> i fucking hate javascript, who created that!!!
[18:43:56] <Krinkle> that. but.. this..
[18:45:59] <Krinkle> scott_gonzalez: I read that, but I'm not sure how it applies
[18:46:01] <Krinkle> look http://cl.ly/071H0d0Q0l3O083p3B0T
[18:46:04] <Krinkle> true all the way
[18:47:40] <Krinkle> but this one: http://cl.ly/0F1N3u0a0b1N1t331m3P
[18:47:46] <Krinkle> I *am* going crazy
[19:25:55] <DaveMethvin> Krinkle:
[19:26:08] <Krinkle> DaveMethvin: I found my holy grail in # javascript
[19:26:10] <DaveMethvin> you're using a /g there, it makes the regex funny
[19:26:15] <DaveMethvin> advances lastIndex
[19:26:21] <Krinkle> https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp/test
[19:26:23] <Krinkle> indeed
[19:26:32] <Krinkle> it works like an iterator when called again
[19:26:35] <DaveMethvin> right
[19:26:49] <Krinkle> which is a horrible way of implementing an iterator
[19:26:51] <DaveMethvin> not exactly intutive when used with .test() though :)
[19:26:58] <DaveMethvin> it's fine with .exec()
[19:27:04] <Krinkle> even with exec it's terrible
[19:27:07] <Krinkle> call until it returns null
[19:27:12] <Krinkle> right ?
[19:27:23] <DaveMethvin> think of it in a while loop
[19:27:33] <Krinkle> this is was I originally had: http://cl.ly/2C3w0f2F3V2y2e3l2L3l
[19:27:53] <Krinkle> Abstracted to this joke: http://cl.ly/0F1N3u0a0b1N1t331m3P
[19:28:49] <DaveMethvin> yeah that is not at all expected is it?
[19:29:06] <DaveMethvin> as i recall they borrowed it from perl, where the semantics work better
[19:30:15] <DaveMethvin> i am really laughing at that "joke" on, i can just imagine you screaming at the screen :D
[19:37:38] <Krinkle> yes, for real
[19:38:08] <Krinkle> stomping my feet on the ground. grr
[19:38:56] <Krinkle> So now I have a choice. Either I duplicate my regex>replacement map an call it the "regex-test" map where I leave off the /g (I need the /g for the replacement).
[19:39:25] <Krinkle> Or I reset lastIndex
[19:39:26] <Krinkle> I suppose the problem is the regex literal. it is still the same instance
[19:39:48] <Krinkle> in PHP for instance, there is no RegExp object. only functions to deal with them. So when you call it again, it will be a new instance (internally)
[19:39:56] <Krinkle> (passed a string)
[19:40:35] <Krinkle> ..or door number #3: Don't re-use the RegExp object, and store strings instead. instantiate RegExp in the analyzer itself
[19:40:50] <Krinkle> DaveMethvin: what do you suggest? Perhaps other evil properties?
[21:16:52] <snover> how was your skype?
