[02:18:56] <E_mE> why is it that the map and each methods are inconsistent with each other on the callback parameter order? E.g:- $.map(â€¦, function(val, index){}); and $.each(â€¦, function(index, val) {});  -- Comes across as quite UX on the expectation of the parameter order?   If there is a genuine reason for it, it'd be interested in knowing.
[02:19:04] <E_mE> i'd*
[06:00:22] <kswedberg> hey gnarf 
[06:01:18] <DaveMethvin> mkwst: Here's a good bug for ya: https://github.com/jquery/jquery-mobile/issues/5733#issuecomment-14500355
[06:01:18] <b-ot> DaveMethvin: Issue #5733 by mrextreme (1d 4h ago): Closing a popup does back twice on WebKit-based browsers
[06:06:10] <mkwst> DaveMethvin: Could you summarize that thread in a bug report? I've skimmed it, and it's not clear to me what the expected behavior is, and where we're failing to meet it. Are the last two pastebin entries the reduced bug?
[06:07:26] <DaveMethvin> mkwst it was reported by _|Nix|_ who's on the jquery mobile team, he can probably explain it better than me
[06:07:53] <mkwst> DaveMethvin: Sure. I said "you", but meant "someone". :)
[06:08:05] <DaveMethvin> :D
[06:08:27] <DaveMethvin> i've put out the _|Nix|_ shaped grail light
[06:10:23] * _|Nix|_ waves
[06:11:49] <mkwst> _|Nix|_: hi!
[06:12:21] <_|Nix|_> mkwst: Basically, if you do a window.location.hash = "anything" before Chrome emits its initial popstate /and/ unwinds the stack, no new history entry will be created.
[06:12:34] <_|Nix|_> mkwst: i.e., the initial history entry will be overwritten.
[06:13:28] <_|Nix|_> mkwst: Steps: 1. Open a new tab. 2. Load http://jsbin.com/ulapiq/1/ 3. Click "Back".
[06:14:15] <_|Nix|_> mkwst: At this point you will be at the new tab, rather than http://jsbin.com/ulapiq/1/, even though http://jsbin.com/ulapiq/1/ called window.location.hash = "#hashMe"; during a DOMContentLoaded handler.
[06:15:52] <mkwst> hrm. ok.
[06:16:21] <mkwst> would you mind filing a bug at http://new.wkbug.com/ ?
[06:16:35] <mkwst> or http://new.crbug.com/, whichever you like.
[06:16:58] <mkwst> i assume the same thing happens in safari/webkit nightlies?
[06:18:30] <_|Nix|_> mkwst: No idea. However, the guy experiencing https://github.com/jquery/jquery-mobile/issues/5733 has had it happen in a wide range of Webkit-based browsers.
[06:18:30] <b-ot> _|Nix|_: Issue #5733 by mrextreme (1d 4h ago): Closing a popup does back twice on WebKit-based browsers
[06:18:49] <_|Nix|_> mkwst: I'll get back on this in a while. I have to drive home from the office.
[06:19:07] <DaveMethvin> that makes sense, the blog post by paul irish says pushState is part of the webkit core everyone uses
[06:19:08] <_|Nix|_> mkwst: ... and of course I'll file that bug.
[06:19:28] <_|Nix|_> DaveMethvin: There we go.
[06:19:36] <mkwst> _|Nix|_: no worries. when you have a bug ID, ping me. i'll link it up to the jquery meta bug and try to figure out how/why/who.
[06:20:07] <_|Nix|_> mkwst: You don't need jQuery to experience the bug. http://jsbin.com/ulapiq/1/ does not use jQuery. Neither does http://jsbin.com/ulapiq/2/
[06:20:23] <mkwst> mkwst: right. that's clear.
[06:20:49] <mkwst> actually: https://bugs.webkit.org/show_bug.cgi?id=42861
[06:21:00] <mkwst> and https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/WebCore/loader/NavigationScheduler.cpp&q=location%20changes%20onload%20file:source/webcore&sq=package:chromium&type=cs&l=322
[06:21:19] <_|Nix|_> mkwst: So, it's already known?
[06:21:27] <mkwst> it's apparently intentional.
[06:21:56] <_|Nix|_> *clunk* ... that's the sound of my jaw hitting the floor ...
[06:22:53] <_|Nix|_> Anyway ... BBL ...
[08:18:38] <rwaldron> Is there some way we can search the CLA entries?
[08:18:41] <rwaldron> where is that stored?
[08:19:23] <DaveMethvin> rwaldron it should be shared with you, lemme find alink
[08:19:47] <rwaldron> DaveMethvin google docs? I'll find it.
[08:48:18] <scott_gonzalez> rwaldron, I always just search for "contributor lice" because I think it's funny :-P
[08:49:21] <DaveMethvin> scott_gonzalez i've always thought of you as a nit picker :D
[08:49:31] <scott_gonzalez> heh
[09:13:47] <JamesMGreene> Does Julian ever come here? I can't recall if I've ever seen him here
[09:14:03] <JamesMGreene> i.e. jaubourg
[09:14:47] <rwaldron> JamesMGreene yes, he does
[09:14:56] <rwaldron> which is now hell for my autocomplete
[09:15:01] <rwaldron> "ja"-TAB
[09:15:23] <rwaldron> gets me "JamesMGreene" when it used to get me "jaubourg"
[09:15:39] <rwaldron> now I know how everyone else feels when talking to rworth and I on IRC
[09:15:56] <JamesMGreene> lol, sorry Rick :)
[09:16:18] <JamesMGreene> JasonDScott___ would beat out Julian with your "ja"-TAB, too, though
[09:17:41] <rwaldron> linkinus favors "frecent activity"
[09:17:51] <rwaldron> "frequent" and "recent"
[09:18:20] <JamesMGreene> Well there you go, Julian just needs to get in here more ;)
[09:20:11] <JamesMGreene> For both our sakes
[09:24:38] <gnarf> rwaldron: yer rwa 
[09:25:30] <JamesMGreene> Yup, jaubourg must now be promoted to jau
[09:40:12] <JamesMGreene> In jaubourg's absense, does anyone know why he continues to maintain the jquery-jsonp plugin rather than integrating its "bonus features" into jQuery core's jsonp?
[09:40:21] <JamesMGreene> absence*
[09:40:29] <JamesMGreene> Just curious
[09:41:21] <rwaldron> JamesMGreene: because we don't want the additional code in jQuery core
[09:42:46] <JamesMGreene> Hmm
[09:44:18] <JamesMGreene> I guess I'm a little surprised by that. I know keeping the codebase lean and mean is a priority but it seems like the plugin's features are very smart and make it act more consistently with standard $.ajax functionality than the core jsonp does
[09:44:57] <JamesMGreene> Of course, adding 1 more script isn't a big deal if you need that extended functionality but the consistency with $.ajax would seem desirable for core
[09:46:43] <gnarf> JamesMGreene: jquery is extendable, why does everyone want plugins in core?
[09:46:54] <gnarf> it makes more sense to pull parts of ajax into plugins
[09:47:02] <gnarf> same with effects
[09:47:03] <gnarf> etc
[09:47:07] <JamesMGreene> Well why put JSONP in core at all, then? :)
[09:47:42] <JamesMGreene> I didn't used to be there at all, IIRC
[09:48:40] <gnarf> it's been supported for a long while
[09:48:50] <gnarf> people assume it works out of the box
[09:48:55] <gnarf> and it generally will
[09:49:50] * JamesMGreene shrugs
[09:49:50] <b-ot> JamesMGreene: Â¯\_(ãƒ„)_/Â¯
[11:42:52] <jqcommit> 01[13jquery01] 15rwldrn pushed 1 new commit to 06master: 02http://git.io/uguglA
[11:42:52] <jqcommit> 13jquery/06master 148d1c422 15Rick Waldron: Fixes #13571. jQuery.isPlainObject 1.9.x compatibility...
[11:44:42] <rwaldron> probably the most scathing commit I've ever written
[11:44:51] <rwaldron> I'm a little furious
[11:47:33] <gnarf> rwaldron: fun... 
[11:47:43] <rwaldron> gnarf do you follow that shit?
[11:47:49] <rwaldron> we've been doing it wrong forever
[11:48:10] <rwaldron> isPlainObject has _never_ _ever_ worked and we had no idea
[11:48:22] <gibson042> this is such an edge case; do we *really* need to maintain backcompat here?
[11:48:32] <rwaldron> gibson042 that's what I'm saying
[11:48:42] <rwaldron> but for the sake of the regression, we do
[11:48:57] <gibson042> we know there's going to be a 1.10 now
[11:49:01] <rwaldron> it breaks the promise that conditional comments will _just_ work
[11:49:14] <gibson042> I think this falls into the class of bugs that get fixed in that & 2.0
[11:49:31] <doesallmagic> Project jQuery Core build #733: STILL FAILING in 6 min 40 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/733/
[11:49:31] <doesallmagic> Rick Waldron: Fixes #13571. jQuery.isPlainObject 1.9.x compatibility
[11:49:35] <rwaldron> it just pisses me off that we found out about this because some twit doesn't understand JavaScript
[11:49:46] <rwaldron> of course it doesn't work
[11:50:00] <rwaldron> the prototype got PAVED OVER
[11:50:10] * rwaldron smashes everything
[11:50:23] <rwaldron> gibson042 yes please.
[11:50:44] <gibson042> we're already incompatible in a few other edge cases
[11:50:47] <rwaldron> it's going break code though
[11:50:58] <gibson042> like trigger arguments for click/focus/etc.
[11:51:01] <rwaldron> let's sleep on this
[11:51:21] <rwaldron> I want to know what DaveMethvin thinks
[11:51:27] <gibson042> allright
[11:51:37] <rwaldron> not that I dont trust and appreciate your input
[11:51:42] <rwaldron> but you're outright agreeing with me
[11:51:46] <rwaldron> when I'm mad
[11:51:48] <rwaldron> so...
[11:51:57] <DaveMethvin> catching up...
[11:52:21] <DaveMethvin> if something clobbers the proto aren't all bets off?
[11:52:41] <DaveMethvin> if a duck dresses like a swan, what should we say it looks like?
[11:53:06] <DaveMethvin> maybe we need isMangledObject
[11:53:08] <rwaldron> DaveMethvin YES
[11:53:09] <rwaldron> UES
[11:53:11] <rwaldron> kzdsfvijsdz;fkvnxd ;fkgbjvnxf;kdjgbnflxgmbxf
[11:53:14] <rwaldron> that's what I say
[11:53:21] <rwaldron> but it _is_ a regression
[11:53:27] <DaveMethvin> so what code breaks b/c of this?
[11:53:36] <DaveMethvin> extending a plain object with a plain object is still okay
[11:53:47] <rwaldron> look at the tests
[11:54:17] <rwaldron> I have a constructor C, with/ C.prototype = { plain object now!!! }
[11:54:21] <rwaldron> then...
[11:54:57] <rwaldron> deep extend wants to look at all the properties here: jQuery.extend( true, {}, { foo: c } );
[11:55:06] <rwaldron> pretend i did: var c = new C()
[11:55:24] <rwaldron> So, previously...
[11:55:30] <rwaldron> C.prototype = { x: function() {} }
[11:55:36] <DaveMethvin> yeah..the behavior of extend on `new`ed objects has never been right
[11:55:42] <DaveMethvin> so now it's also not right
[11:55:44] <rwaldron> (note it has a property, which can be seen by the for in loop)
[11:55:45] <DaveMethvin> we're good?
[11:56:20] <rwaldron> but when there is no properties to inherit
[11:56:26] <rwaldron> it's just a PLAIN OBJECT
[11:56:28] <rwaldron> grrr
[11:56:36] <DaveMethvin> i dunno, if some popular and common piece of code broke b/c of this i would be worried
[11:56:37] <rwaldron> so, do we revert this?
[11:57:02] <DaveMethvin> is the reported case in some popular plugin or something?
[11:57:20] <rwaldron> not that I know of
[11:57:35] <DaveMethvin> i would prefer to add docs to emphasize that we can't clone `new`ed objects in $.extend
[11:57:48] <gnarf> but with the deepExtend
[11:57:52] <gnarf> what would you expect
[11:57:55] <DaveMethvin> if the damned tc39 group thought it was hard enough to punt, who are we to argue?
[11:57:59] <rwaldron> we can make references in a regs extend
[11:58:02] <gnarf> that the "c" is just referenced?
[11:58:04] <rwaldron> but not deep extend
[11:58:22] <gnarf> instead of deep cloned?
[11:58:44] <DaveMethvin> under what circumstances are people passing in constructed objects to $.extend and why?
[11:58:46] <rwaldron> gnarf I'm not sure
[11:59:05] <rwaldron> 1. it's an edge case
[11:59:10] <gnarf> DaveMethvin: i could see it with deep extend
[11:59:12] <rwaldron> 2. rtfm
[11:59:15] <gnarf> but more of a by accident
[11:59:19] <DaveMethvin> we should understand the use case b/c i don't think this patch alone addresses all the misery they may encounter
[11:59:25] <rwaldron> gnarf but that are expecting a _reference_
[11:59:35] <rwaldron> not "copy the properties one at a time"
[11:59:51] <rwaldron> with deep extend, I expect the latter
[11:59:59] <rwaldron> with regs extend I expect the former
[12:00:34] <rwaldron> DaveMethvin the patch I wrote simply restores the 1.9.x behaviour
[12:00:49] <rwaldron> purely to avoid an incompatibility
[12:01:13] <DaveMethvin> right, i just wonder if this is a case we should ever say we support
[12:01:39] <DaveMethvin> lots of stuff breaks between versions because of misuse, e.g., .bind("click",null)
[12:01:46] <rwaldron> 	// Again, instantiated objects shouldn't be matched
[12:01:46] <rwaldron> 	ok( !jQuery.isPlainObject(new fn()), "new fn" );
[12:01:58] <rwaldron> but we made a mistake
[12:02:19] <rwaldron> we define the prototype in a way that doesn't pave over the constructor
[12:02:29] <rwaldron> 	// Makes the function a little more realistic
[12:02:29] <rwaldron> 	// (and harder to detect, incidentally)
[12:02:29] <rwaldron> 	fn.prototype["someMethod"] = function(){};
[12:03:03] <rwaldron> (I'm not sure I understand the string accessor notation, but whatever)
[12:03:08] <rwaldron> that's different from...
[12:03:27] <rwaldron> fn.prototype = { someMethod: function() {} }
[12:03:34] <rwaldron> now, the constructor is no longer "fn"
[12:03:36] <rwaldron> it's Object
[12:03:52] <rwaldron> but we never bothered to look at that.
[12:04:00] <gibson042> my bottom line is that there's just *no reason* why `isPlainObject` should differentiate between instantiations of a function with prototype `{}` and one with prototype `{ nonempty: true }`
[12:04:19] <rwaldron> gibson042: it shouldnt
[12:04:26] <rwaldron> please read the whole thing
[12:04:34] <gibson042> I know
[12:04:47] <gibson042> that it does in 1.x is the bug, not that it doesn't in 2.x
[12:05:20] <rwaldron> the old method, which looked at properties... if there are no properties, that mechanism doesnt work
[12:05:26] <rwaldron> right
[12:05:29] <rwaldron> correct
[12:05:49] <rwaldron> I misunderstood what you were trying to communicate
[12:05:52] <rwaldron> apologies
[12:05:59] <gibson042> np
[12:06:17] <gibson042> more clearly, this is a 1.x false positive that was misidentified as a 2.x false negative
[12:06:20] <DaveMethvin> so, again i want to know in which cases people are doing this and how it breaks things
[12:07:08] <DaveMethvin> If some majorly deployed plugin needs this it's one thing
[12:07:24] <rwaldron> So.
[12:07:25] <DaveMethvin> but if it's something we can document our way out of I'd prefer to do that
[12:07:35] <rwaldron> let's revert and I'll hold onto the branch
[12:07:46] <rwaldron> if push comes to shove, we can address it
[12:07:51] <rwaldron> gibson042 ^^ ?
[12:07:55] <rwaldron> gnarf ^^
[12:07:55] <gibson042> yea
[12:08:08] <DaveMethvin> yeah lets do that for now
[12:08:15] <rwaldron> revert coming
[12:08:51] <DaveMethvin> my psychic powers tell me that it will be STILL FAILING though... :D
[12:10:16] <gseguin> mikesherov: ping
[12:12:05] <rwaldron> DaveMethvin obviously.
[12:12:10] <jqcommit> 01[13jquery01] 15rwldrn pushed 1 new commit to 06master: 02http://git.io/ueKtHg
[12:12:10] <jqcommit> 13jquery/06master 145c82d36 15Rick Waldron: Revert 8d1c42296fefc4e79189b6c2d78a8a78fdd9576d
[12:17:11] <gseguin> ?tell mikesherov: looks like there is an interest in using TravisCI for core and other jQuery project. Not that it's a complex task but I've done it for mobile so ping me when you want to get started on that. 
[12:17:11] <bot-t> gseguin, Okay.
[12:17:11] <b-ot> gseguin: Iâ€™ll tell mikesherov: about that.
[12:17:38] <doesallmagic> Project jQuery Core build #734: STILL FAILING in 5 min 36 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/734/
[12:17:38] <doesallmagic> Rick Waldron: Revert 8d1c42296fefc4e79189b6c2d78a8a78fdd9576d
[12:23:32] <nacin> "$(html) HTML strings must start with '<' character" â€” would it be unreasonable for this to ignore preceeding whitespace?
[12:24:00] <DaveMethvin> nacin, the thinking there was that if you have whitespace it's coming from an untrusted source
[12:24:04] <DaveMethvin> like a template or the url
[12:24:11] <DaveMethvin> and in that case $.parseHTML is good
[12:24:28] <DaveMethvin> because few people would do $("    <p>xxxx</p>")
[12:24:54] <nacin> we had some HTML returned from PHP land via XHR with some preceding tabs/line breaks. Ostensibly for readability.
[12:25:06] <nacin> Not objecting to the change, just tossing it out there.
[12:25:16] <DaveMethvin> sure, just giving you the reasoning
[12:25:22] <nacin> appreciate it.
[12:25:30] <nacin> there is also https://github.com/jquery/jquery-migrate/issues/27
[12:25:30] <b-ot> nacin: Issue #27 by daveross (3d 22h ago): jquery-migrate handling stray text different than jQuery
[12:25:42] <DaveMethvin> i saw that
[12:43:25] <JamesMGreene> hey jzaefferer Krinkle scott_gonzalez
[12:43:31] <Krinkle> Hi
[12:43:32] <JamesMGreene> Question for yall
[12:44:23] <JamesMGreene> If I need to set some globally available variable for a QUnit addon, should I set it on the `QUnit.config` object, `QUnit` object, elsewhere...?
[12:44:36] <JamesMGreene> Assuming `QUnit.config` at the moment
[12:44:37] <Krinkle> what kind of data?
[12:44:50] <JamesMGreene> in this case, just a boolean flag
[12:45:01] <Krinkle> runtime configuration for the addon?
[12:45:40] <JamesMGreene> not really config, no, just a state tracker
[12:45:57] <JamesMGreene> i.e. set to true when a Composite test run begins, set to false when it ends
[12:46:29] <JamesMGreene> (because the `testStart` handlers need to know that it is a suite rather than a test)
[12:47:58] <JamesMGreene> I currently have it contained within a closure for Composite (in my big PR) but it needs to be globally available in order to correct the JUnitReporter (and other reporters)
[12:48:16] <JamesMGreene> "correct" = "make it compatible with"
[12:49:07] <JamesMGreene> Actually, I have another idea that would take care of this w/o the global... but it involves changing QUnit core's logging callback model
[12:49:17] <JamesMGreene> Expect an issue in a minute here :-P
[12:49:58] <Krinkle> hm... awaiting details
[13:02:04] <JamesMGreene> https://github.com/jquery/qunit/issues/422
[13:02:04] <b-ot> JamesMGreene: Issue #422 by JamesMGreene (8s ago): Change core logging callbacks to utilize [theoretical] `on`, `off`, and `trigger`/`emit` methods
[13:02:30] <JamesMGreene> Whoops
[13:02:43] * JamesMGreene chops the "`trigger`/" out of the title
[13:13:49] <JamesMGreene> Krinkle jzaefferer scott_gonzalez (et al) Please check it out and share your thoughts
[14:08:11] <JamesMGreene> whoa wtf that issue lost a bunch of my text
[14:11:59] <JamesMGreene> Thank god for the Lazarus Chrome extension
[14:12:04] <JamesMGreene> saves my bacon yet again
[14:12:54] <JamesMGreene> Oh actually
[14:13:02] <JamesMGreene> Krinkle did you edit my message intentionally?
[14:13:25] <paul_irish> ?g lazarus chrome extension
[14:13:25] <b-ot> paul_irish: Chrome Web Store - Lazarus: Form Recovery â†’ https://chrome.google.com/webstore/detail/lazarus-form-recovery/loljledaigphbcpfhfmgopdkppkifgno?hl=en
[14:13:28] <Krinkle> JamesMGreene: the title
[14:13:51] <Krinkle> JamesMGreene: I didn't mean to remove the sample code. Thx for restoring
[14:14:48] <JamesMGreene> P.S. For you Chrome users, that extension is sooooo amazingly helpful
[14:14:57] <JamesMGreene> thanks for linking it, paul_irish
[14:15:21] <JamesMGreene> Now if only it works on the GitHub.com online editor :)
[14:17:00] <JamesMGreene> worked*
[14:17:23] <Krinkle> paul_irish: Hm.. the screenshots suggest it is linked to a specific field, so it only works if it can link them to the old one.
[14:17:29] <Krinkle> in those cases afaik chrome will take care of it
[14:17:42] <Krinkle> I'm more interested in recovering text in forms that don't exist on the page on dom-ready
[14:18:01] <Krinkle> I get that all the time on sites where a "reply" button inserts a textarea on demand
[14:19:00] <Krinkle> I've never lost anything in "reliable" forms since I switched to Chrome. I can go back in history 20 pages and it'll have it all
[14:26:47] <shoky> speaking of chrome.. what's up with the menus becoming big, white, and ugly?
[14:26:59] <shoky> since 26
[14:28:33] <paul_irish> and beautiful
[14:30:32] <shoky> gotta drag my mouse forever :(
[14:31:57] <shoky> seriously, what's all that spacing needed for
[14:32:51] <DaveMethvin> isn't there a #chrome-whiners channel for this? :D
[14:32:53] <shoky> k done ranting, sry ;p
[14:33:06] <shoky> :)
[14:37:10] <jqcommit> [13jquery] 15bretterer opened pull request #1197: Added .hasAnyClass() method (061.9-stable...06hasAnyClass)  02http://git.io/O2rzJg
[14:38:28] <DaveMethvin> oh darn, that PR can't be automatically merged. I was gonna just push the button on t
[14:38:30] <DaveMethvin> it
[14:55:17] <rwaldron> DaveMethvin: 0_0
[14:55:23] <rwaldron> I don't even...
[16:07:58] <jzaefferer> hey DaveMethvin|away, is installing QUnit via npm an option for core? See https://github.com/jquery/qunitjs.com/issues/40
[16:07:59] <b-ot> jzaefferer: Issue #40 by jzaefferer (1mon 3d ago): Demo using qunit when installed from npm
[17:04:57] <DaveMethvin> jzaefferer i would actually like to get away from using submodules for QUnit
[17:05:02] <DaveMethvin> so yeah
[17:08:07] <snover> DaveMethvin: you monster.
[17:09:38] <DaveMethvin> okay, instead we will keep the official copy of QUnit on one of these: http://diskonkey.blogspot.com/2007/11/freshly-baked-usb-flash-drives.html
[17:23:02] <gf3> DaveMethvin: +1
[17:23:20] <gf3> DaveMethvin: If you get the pizza one then the source will be "modular"
[17:26:11] <ryanneufeld> am I crazy or is there a post-com
[17:26:21] <ryanneufeld> commit hook on jquery/jquery.git?
[17:26:53] <DaveMethvin> ryanneufeld imma go with both
[17:27:10] <ryanneufeld> DaveMethvin: where does that live?
[17:27:19] <DaveMethvin> in the setup for the repo
[17:27:30] <DaveMethvin> do you have admin on the repo?
[17:27:34] <ryanneufeld> I do not
[17:27:38] <ryanneufeld> (should not)
[17:27:42] <ryanneufeld> :P
[17:28:00] <DaveMethvin> yeah i hear  you're crazy
[17:28:38] <DaveMethvin> which hook did you care about ryanneufeld
[17:29:00] <ryanneufeld> there seems to be one that is uglifying a file and adding that to the commit
[17:29:20] <DaveMethvin> there's a job step in jenkins to build the jquery-git file?
[17:30:46] <ryanneufeld> well, I made a change to a js file, and then when I commited it, it added a minified version
[17:31:09] <ryanneufeld> along with the rest of the commit
[17:31:58] <Krinkle> added it where?
[17:32:09] <Krinkle> to git?
[17:32:28] <Krinkle> grunt creates a minified file in ./dist but that's in gitignore
[17:32:45] <DaveMethvin> yeah not sure what got added and where
[17:32:55] <Krinkle> grunt on jenkins also creates a minified jquery and pushes it to the cdn (if the build passed)
[17:33:23] <DaveMethvin> nothing was pushed to the repo afaict
[17:33:59] <ryanneufeld>  rewrite test/data/jquery-1.8.2.ajax_xhr.min.js (93%)
[17:34:02] <ryanneufeld> is what I'm seeing
[17:34:04] <ryanneufeld> and I didn't run grunt
[17:34:11] <ryanneufeld> so maybe I don't know how to git
[17:34:24] <Krinkle> what repo is that
[17:34:36] <ryanneufeld> in fact, yes, I'm sure of it now
[17:34:50] <Krinkle> maybe you ammended the head commit, which modified that file
[17:34:59] <ryanneufeld> Krinkle: no, I modified the file
[17:35:02] <ryanneufeld> but since it was one line
[17:35:05] <ryanneufeld> minified
[17:35:10] <Krinkle> :D
[17:35:11] <ryanneufeld> it just rewrote the file
[17:35:19] <DaveMethvin> how come you edited that file?
[17:35:23] <ryanneufeld> how do I git
[17:35:29] <ryanneufeld> DaveMethvin: I have my reasons!
[17:35:30] <Krinkle> git what?
[17:36:16] <ryanneufeld> Krinkle: it's okay, don't worry about it. I got it figured :)
[17:38:07] <Krinkle> You gittured it out?
[17:38:23] <ryanneufeld> No.
[17:38:32] <Krinkle> you git it figured.
[17:38:36] <Krinkle> anyway, bad joke.
[17:39:22] <ryanneufeld> Krinkle: yeah, lol
[17:39:41] <Krinkle> DaveMethvin: btw, how do we (if at all) ensure 2.0 is compatible with 1.9 api.
[17:39:46] <Krinkle> Do we share tests or something?
[17:39:51] <Krinkle> Or just keep 'em in sync?
[17:39:55] <DaveMethvin> yep, the units are almost identical
[17:40:03] <DaveMethvin> but they are on diff branches
[17:40:34] <Krinkle> well, we could "git checkout master -- test/" from the 1.9 branch in grunt before running
[17:40:51] <Krinkle> and remove the directory in 1.9 branch
[17:41:11] <DaveMethvin> they are not identical
[17:41:25] <Krinkle> DaveMethvin: any example of a difference?
[17:41:32] <DaveMethvin> i am sure there are more complex way to do it 
[17:41:37] <DaveMethvin> this way works tho
[17:41:51] <DaveMethvin> you can diff from the branch point
[17:42:02] <Krinkle> will do later
[17:42:03] <Krinkle> thx
[17:42:17] <Krinkle> brbl
[17:55:29] <JamesMGreene> "The PHP dependency will soon be shed in favor of an all-node solution." <-- Anyone have an ETA or related bug on this?
[17:56:05] <DaveMethvin> JamesMGreene johnbender said the mobile guys are working on it
[17:56:27] <JamesMGreene> k thx
[18:13:23] <JamesMGreene> lmao
[18:13:30] <JamesMGreene> totally blew my first merge for QUnit
[18:13:47] <JamesMGreene> forgot I was in my fork instead of the upstream
[18:14:40] <Krinkle> so it didn't go wrong yet, then?
[18:15:28] <jqcommit> 01[13qunit01] 15JamesMGreene pushed 1 new commit to 06master: 02http://git.io/ZAM6kg
[18:15:28] <jqcommit> 13qunit/06master 14bb3fdb6 15dmitrygusev: Docs: Fixing various typos. Closes #421.
[18:15:28] <JamesMGreene> Well no, just looking stupid :)
[18:15:34] <doesallmagic> Project QUnit build #258: SUCCESS in 16 sec: http://swarm.jquery.org:8080/job/QUnit/258/
[18:15:34] <doesallmagic> james.m.greene: Docs: Fixing various typos. Closes #421.
[18:16:29] <Krinkle> that's impossibly fast
[18:16:38] <Krinkle> the fuck
[18:16:43] <Krinkle> >> API returned error, can't continue. Response was: {"error":{"code":"unauthorized","info":"This action requires authorization. The token or username may be missing or invalid."}} 
[18:16:47] <Krinkle> Huge success.
[18:16:52] <snover> looks successful to me
[18:16:53] <Krinkle> Tell me about it
[18:17:03] <Krinkle> xD
[18:17:38] <Krinkle> JamesMGreene: don't worry this is an error in the jenkins/grunt config
[18:18:32] <Krinkle> so the exit code is being ignored
[18:18:33] <Krinkle> interesting
[18:18:46] <JamesMGreene> Well yeah, I don't think merging a bunch of comment/Markdown typo fixes is going to fail the build :)
[18:19:08] <JamesMGreene> Pretty low risk PR for my first merge ;)
[18:19:58] <DaveMethvin> hey you debbie downers, it said SUCCESS so just stop looking for failures
[18:20:13] <DaveMethvin> there will be time enough for failing later
[18:20:30] <JamesMGreene> Sorry, it's in our Testing team nature :)
[18:22:39] <JamesMGreeneAway> bb in a bit
[18:32:14] <JamesMGreeneAway> Does QUnit not using TravisCI for builds?  I see we don't have a .travis.yml
[18:32:30] <Krinkle> We use Jenkins.
[18:37:29] <JamesMGreeneAway> k
[18:37:51] <Krinkle> We can't use Travis because it has no way to pass private data (it has some methods for it, but not enough for us)
[18:38:04] <Krinkle> and we have testswarm authentication atm
[18:38:17] <Krinkle> we may be able to use travis in the future, but we have our own server for it, no problem.
[18:39:22] <Krinkle> JamesMGreeneAway: What country / timezone are you in?
[18:39:52] <JamesMGreeneAway> USA, CST ("Chicago" time)
[18:39:59] <JamesMGreeneAway> So ~8:30pm for me
[18:40:16] <JamesMGreeneAway> btw, I'm working on this tonight: https://github.com/jquery/qunit/issues/377
[18:40:16] <b-ot> JamesMGreeneAway: Issue #377 by jzaefferer (2mon 2w ago): Update to grunt 0.4
[18:40:33] <JamesMGreeneAway> should be pretty straightforward
[18:40:37] <Krinkle> yeah
[18:40:54] <JamesMGreeneAway> I already updated all the deps, just need to clean up the Gruntfile.ks
[18:40:55] <JamesMGreeneAway> .js
[18:41:21] <JamesMGreeneAway> anyway, I should _actually_ go away for a while now... household chores to do first =(
[18:42:49] <Krinkle> Guess what, I just installed a plugin in our jenkins for build status images
[18:42:50] <Krinkle> http://swarm.jquery.org:8080/job/QUnit/badge/icon
[18:42:57] <Krinkle> I was like.. travis has that, nothing's stopping us
[18:43:03] <Krinkle> point, click, install, restart
[18:43:24] <Krinkle> I'll go and spam it in our markdown readmes later today
[18:43:39] <Krinkle> got a few things to update to go along with it
[19:18:47] <Krinkle> JamesMGreeneAway: To fix your fork (e.g. reset to upstream history), assuming your git-remote origin is your fork and git-remote upstream is jquery/qunit, use `git push origin upstream/master:master -f`
[19:18:58] <Krinkle> this is another reason not to work in master
[19:19:14] <Krinkle> it looks like the initial attempt in your fork is an empty commit
[19:24:39] <JamesMGreeneAway> Nah, that was an attempt to erase it :-P
[19:33:51] <JamesMGreene> Hey Krinkle
[19:34:03] <Krinkle> Hi
[19:34:40] <JamesMGreene> Do I need to add anything to the package.json file in order to allow grunt 0.4.0 to work? i.e. the server needs to have grunt-cli installed globally, so I might need to add an `npm install` script hook to do so...?
[19:35:24] <JamesMGreene> Does jQuery UI utilize these same servers? I think they already updated to grunt 0.4.0, so I could peek at their package.json in that case
[19:35:39] <DaveMethvin> JamesMGreene yeah i think grunt-cli should be installed already, no need to add that dep
[19:37:13] <JamesMGreene> ok cool
[19:37:34] <JamesMGreene> I know that was the one thing I had to change for my Travis-CI configuration when I upgraded my repos to Grunt 0.4.0
[19:37:48] <JamesMGreene> (though I did in via the .travis.yml file instead of an npm install hook
[19:38:01] <JamesMGreene> )
[19:38:19] <DaveMethvin> the QUnit job is using a plain "grunt" on the command so i think it should be found with grunt-cli
[19:38:58] <Krinkle> JamesMGreene: `npm install` and `grunt` are a given on our test server
[19:39:08] <Krinkle> we already do them, we need it for grunt 0.3 as well
[19:39:26] <DaveMethvin> ah grunt 0.3, those were the days
[19:39:36] <Krinkle> JamesMGreene: grunt-cli is merely a wrapper to execute it from the command line
[19:39:39] <Krinkle> it doesn't contain grunt itself
[19:39:43] <JamesMGreene> right
[19:39:46] <Krinkle> that needs to be installed in the repository
[19:39:54] <JamesMGreene> but it must be install globally on the box or grunt won't work :-P
[19:39:57] <Krinkle> that way different projects can run different versions of grunt, jshint etc.
[19:40:06] <Krinkle> don't rely on enything other than it executing "npm install" and "grunt"
[19:40:15] <Krinkle> JamesMGreene: Nope, not even that
[19:40:19] <JamesMGreene> Uhh
[19:40:26] <JamesMGreene> Pretty sure ben_alman said that was required
[19:40:39] <Krinkle> ben_alman says many things
[19:40:40] <Krinkle> :P
[19:40:50] <Krinkle> https://github.com/Krinkle/node-testswarm/blob/master/package.json#L35
[19:40:55] <Krinkle> ./node_modules/.bin/grunt
[19:40:57] <Krinkle> that works fine too
[19:41:11] <JamesMGreene> well sure but much uglier :)
[19:41:17] <Krinkle> That way it works regardless of the environment
[19:41:47] <Krinkle> Depends, I'd rather update package.json then have to log in to Jenkins to orchestrate an update properly
[19:42:00] <Krinkle> e.g. if we change the arguments pass to it or whatever
[19:42:06] <Krinkle> should be rare, but whatever.
[19:42:24] <JamesMGreene> yeah
[19:42:36] <Krinkle> JamesMGreene: in package.json: grunt: 0.4, grunt-cli 0.1.6, grunt-contrib-jshint 0.2.0 and whatever else we need.
[19:43:01] <Krinkle> I just upgraded node-testswarm to use grunt 0.4
[19:43:02] <Krinkle> https://github.com/Krinkle/node-testswarm/commit/93ac8a9684b5ffedb8e073ff6b973cb5ab9f4620
[19:43:03] <b-ot> Krinkle: Timo Tijhof (26m ago): Grunt 0.4 and various clean up.
[19:43:24] <Krinkle> a nice small example
[19:43:30] <Krinkle> no migration cruft
[19:45:05] <JamesMGreene> Looks like jquery-ui are renegades then :)
[19:45:05] <JamesMGreene> https://github.com/jquery/jquery-ui/blob/grunt-0-4/package.json
[19:45:58] <JamesMGreene> oh, so you actually listed grunt-cli as a dep, too
[19:46:00] <JamesMGreene> hmm
[19:46:09] <JamesMGreeneAway> bb in a while
[20:07:16] <doesallmagic> Project QUnit build #259: SUCCESS in 12 sec: http://swarm.jquery.org:8080/job/QUnit/259/
[20:07:16] <doesallmagic> Timo Tijhof: Test: Temporary fix for jzaefferer/node-testswarm#9.
[20:07:20] <jqcommit> 01[13qunit01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/oax0Mw
[20:07:20] <jqcommit> 13qunit/06master 14f56bdf4 15Timo Tijhof: Test: Temporary fix for jzaefferer/node-testswarm#9.
[20:08:05] <jqcommit> 01[13qunit01] 15Krinkle 04force-pushed 06master from 14f56bdf4 to 1400dea8e: 02http://git.io/C3z23Q
[20:08:05] <jqcommit> 13qunit/06master 1400dea8e 15Timo Tijhof: Test: Temporary fix for jzaefferer/node-testswarm#9.
[20:08:06] <doesallmagic> Project QUnit build #260: FAILURE in 11 sec: http://swarm.jquery.org:8080/job/QUnit/260/
[20:08:06] <doesallmagic> Timo Tijhof: Test: Temporary fix for jzaefferer/node-testswarm#9.
[20:08:10] <Krinkle> yes
[20:08:11] <Krinkle> YES
[20:08:14] <Krinkle> Fail!
[20:08:21] <Krinkle> never been so happy to see a failure
[20:13:57] <doesallmagic> Yippie, build fixed!
[20:13:58] <doesallmagic> Project QUnit build #261: FIXED in 1 min 26 sec: http://swarm.jquery.org:8080/job/QUnit/261/
[20:14:09] <Krinkle> And that's even better.
[20:14:25] <DaveMethvin> now do it for core! :D
[20:14:36] <Krinkle> http://swarm.jquery.org/job/39
[20:14:41] <Krinkle> this was actually quite impressive
[20:14:49] <Krinkle> browserstack booting all browsers in under 2 minutes
[20:15:14] <Krinkle> chrome 23,24, firefox 17,18, ie 6,7,8,9,10, opera 12, safari 5,6
[20:15:29] <DaveMethvin> now you're just showin of
[20:15:31] <DaveMethvin> f
[20:15:32] <Krinkle> hehe
[20:15:43] <Krinkle> maybe we have a higher concurrency quota
[20:16:11] <Krinkle> I mean unpausing a vm and starting browser in 2 minutes isn't all that impressive (the test itself only takes a few seconds).
[20:16:18] <Krinkle> but it all happening simultaniously is nice
[20:16:26] <Krinkle> simultaneously*
[20:18:51] <Krinkle> DaveMethvin: I fixed all I can fix in core that isn't changing core or the tests
[20:18:57] <Krinkle> I think those tests are just unreliable
[20:19:07] <Krinkle> two in particular
[20:19:16] <Krinkle> 2 focus-related tests in firefox
[20:19:26] <Krinkle> and an attribtue test in safari
[20:36:18] <snover> aww, opera 12
[20:36:19] <snover> how cute
[20:37:07] <DaveMethvin> So waitaminit, is Opera 14 really Opera 13 and they skipped a number?
[20:37:13] <DaveMethvin> jinx
[21:02:00] <snover> DaveMethvin|away: noooooo
[21:29:22] <JamesMGreene> So Krinkle, you want me to actually include grunt-cli as a devDep, right? Like https://github.com/Krinkle/node-testswarm/blob/master/package.json#L35
[21:29:57] <Krinkle> DaveMethvin|away: yeah, to not celebrate webkit on the 13th
[21:30:03] <Krinkle> JamesMGreene: Yep
[21:30:16] <JamesMGreene> k
[21:30:26] <Krinkle> I'd also recommend adding scripts.test
[21:30:39] <Krinkle> it wasn't there before, but I was going to add that at some point, might as well include it at the same time
[21:30:46] <Krinkle> that way "npm test" works by triggering grunt
[21:30:46] <JamesMGreene> Yeah I do that with my repos too
[21:30:52] <Krinkle> great :)
[21:31:10] <Krinkle> I'd like to then change jenkins to just execute npm install && npm test
[21:31:31] <Krinkle> instead of duplicating the logic in jenkins, no matter how simple.
[21:45:44] <JamesMGreene> Krinkle OK if I update the 'qunit/qunit.js' file path to be wildcarded like all the other folders?
[21:45:51] <JamesMGreene> (in the Gruntfile)
[21:46:16] <Krinkle> JamesMGreene: Can you push to a branch in your fork for me to see?
[21:46:34] <Krinkle> btw, you haven't reset your master yet I see.
[21:47:30] <jqcommit> 01[13qunit01] 15Krinkle 04deleted 06cli at 14f6e2339: 02http://git.io/8rDRHQ
[21:52:01] <Krinkle> JamesMGreene: sure, wildcard should be fine
[22:15:08] <snover> `ud mouth harp
[22:15:09] <b-ot> snover: mouth harp: when a man giving oral licks the womans vagina like a harp, friskly licking the loose outter lips; giving the woman exotic orgasam one after another. â€” ' man tonight im gunna eat my girlfriend out tonight, give her the good old mouth harp'
[22:16:28] <snover> `ud oboe
[22:16:28] <b-ot> snover: oboe: Beautiful when played by a good player; duck-like when played by a not-so-good player. A usually wooden woodwind instrument, part of the double reed family (which includes the [bassoon], [english horn], etc). Played in treble clef; pitched in C. Insanely hard to play in tune. â€” That beginner oboe player sounds like she's killing a duck...
[22:19:06] <JamesMGreene> argh, bad lint
[22:23:10] <snover> oh iâ€™m sorry, i got my tabs confused
[22:23:14] <snover> thank you for pointing that out JamesMGreene
[22:26:04] <JamesMGreene> For pointing what out, snover?
[22:26:31] <snover> my inappropriate use of the bot in the wrong channel
[22:31:41] <JamesMGreene> if you mean my comment of "bad lint" then it had nothing to do with you :-P
[22:32:03] <JamesMGreene> I was always fairly certain that our JSHint config for QUnit wasn't right with Grunt 0.3
[22:32:18] <JamesMGreene> Definitely confirmed now that I'm updating to Grunt 0.4 and it is actually working
[22:34:17] <Krinkle> JamesMGreene: hmm..?
[22:34:54] <JamesMGreene> well, I guess it's possible the version upgrade of JSHint made a difference too but I doubt it
[22:35:16] <JamesMGreene> Krinkle basically there are pre-existing lint issues in the code
[22:39:41] <JamesMGreene> hey Krinkle
[22:39:55] <JamesMGreene> the tests aren't timing out with the latest Grunt and QUnit!
[22:40:31] <Krinkle> why would they time out? they never timed out here
[22:40:46] <Krinkle> JamesMGreene: Why did you think our jshint config was wrong in 0.3?
[22:40:57] <Krinkle> you're not making a lot of sense, but I'm glad it seems to be resolving.
[22:41:42] <JamesMGreene> Because when I would run grunt it wouldn't flag things that I could clearly see where lint issues
[22:42:26] <JamesMGreene> the addons were chock full of lint issues
[22:43:09] <JamesMGreene> So can I get adventurous and uncomment the two test suites that are/were failing on Jenkins?
[22:43:56] <JamesMGreene> This is probably why the addons had so many lint errors going undetected:  `addons: 'addons/**.js',`
[22:44:12] <JamesMGreene> (That glob path isn't right)
[22:54:12] <JamesMGreene> Krinkle ^
[22:54:58] <Krinkle> Hm..
[22:55:05] <Krinkle> addons/**/*.js, right?
[22:55:18] <Krinkle> JamesMGreene: 
[22:57:54] <JamesMGreene> That's the ideal one
[22:58:10] <JamesMGreene> Though if you have any node_modules folders underneath you can't really utilize that
[23:01:20] <JamesMGreene> So there are 2 types of lint errors remaining and I'm not sure I can suppress them o_O
[23:02:46] <JamesMGreene> Linting test/suite.js...ERROR
[23:02:47] <JamesMGreene> [L4:C5] Read only.
[23:02:47] <JamesMGreene>   print = console.log;
[23:03:09] <JamesMGreene> Linting test/test.js...ERROR
[23:03:09] <JamesMGreene> [L481:C5] Expected an identifier and instead saw 'throws' (a reserved word).
[23:03:09] <JamesMGreene>   throws(
