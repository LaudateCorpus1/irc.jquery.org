[08:31:46] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/RZJwYA
[08:31:46] <jqcommit> 13jquery/06master 140c18520 15Richard Gibson: No ticket: Hide the testing-support jQuery from tests
[08:47:06] <doesallmagic2> Project jQuery Core build #903: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core/903/
[08:47:07] <doesallmagic2> richard.gibson: No ticket: Hide the testing-support jQuery from tests
[09:02:49] <doesallmagic2> Project jQuery Core 1.x build #216: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%201.x/216/
[09:02:49] <doesallmagic2> richard.gibson: No ticket: Hide the testing-support jQuery from tests
[09:35:50] <jqcommit> [13jquery] 15mzgol synchronize pull request #1342: Fix #10814. Make support tests lazy and broken out to components. Fix #14084: attach the test div to documentElement, not body. (06master...06lazy_support)  02http://git.io/gAh0Cg
[12:36:07] <scott_gonzalez> gibson042 m_gol: Are we actually concerned about objects with length properties with a value of NaN?
[12:36:27] <scott_gonzalez> Or is typeof len === "number" actually sufficient and we don't care about NaN checks here?
[12:37:25] <scott_gonzalez> Looking at this code, it actually looks like all we care about is isNaN( len ).
[12:37:32] <scott_gonzalez> So it's alredy forced to a number.
[12:37:45] <gibson042> scott_gonzalez: the length properties won't be `NaN`, they'll be Nodes _cast_ to NaN by the unary `+`
[12:38:09] <scott_gonzalez> So isn't isNaN() sufficient here?
[12:38:39] <gibson042> NodeList.length == "[object HTMLElement]" in oldIE if it contains an element with id "length"
[12:38:51] <gibson042> isNaN would be sufficient at https://github.com/jquery/jquery/commit/ceb5b4c9a30f47bcec2380f972ce09cfea532f8b#L0R642
[12:38:52] <b-ot> gibson042: Amey Sakhadeo (6d 2h ago): Ref #14313: Optimize 1.x jQuery.merge for size. (cherry picked from commits c75c9a8ebb5d2483daa68bec799e0d770083a811 f66d53c85643e703a8e37d9ca9375dd386a60cda)
[12:39:06] <gibson042> because typeof len is already "number"
[12:41:32] <scott_gonzalez> To me, this byte shaving is the same as compressing `if ( a ) { b(); }` into `a && b();`
[12:45:10] <gibson042> I disagree; I think `a !== a` vs. `typeof a === "number" && isNaN( a )` is more akin to `i++` vs. `i = i + 1`
[12:57:31] <snover> the fact that NaN is not equal to itself is weird. It looks like a code bug to write that.
[12:57:37] <snover> you have to know that NaN is not NaN for that line to make any sense.
[12:57:38] <snover> it is a stupid line.
[12:57:39] <snover> the end.
[12:59:08] <snover> it is like when people use bitwise not to invert the value of indexOf so they can use it as a boolean expression instead of just fucking checking if > -1, except worse, because at least bitwise not doesnâ€™t look like a bug, itâ€™s just confusing
[13:06:59] <scott_gonzalez> Yeah, the bitwise not is actually a better comparison.
[13:07:19] <scott_gonzalez> For most users, even those who write JS all day long, the code is just confusing.
[13:29:21] <tbranyen> hey scott_gonzalez kswedberg or ajpiano, i'm unsure how to get this commented on: https://github.com/jquery/api.jquery.com/pull/350
[13:29:22] <b-ot> tbranyen: Pull request #350 by jugglinmike (1mon 3d ago): Document array-accepting manipulation methods
[13:29:42] <tbranyen> its not hugely pressing, but we have a layer of blockers, and thats at the very top :-p
[13:30:51] <scott_gonzalez> tbranyen: Well, I believe you that those are all correct, so I can land it right now.
[13:30:59] <tbranyen> haha awesome thanks man
[13:31:36] <kswedberg> yeah, Thanks, scott_gonzalez 
[13:32:04] <kswedberg> tbranyen: fwiw, I would have done it if scott_gonzalez hadn't jumped in first. ;-) 
[13:33:00] <tbranyen> btw kswedberg i saw your teaser vid on the masters class site, great teaching skills :D
[13:33:12] <tbranyen> my training abilities are still in infant stages
[13:33:59] <kswedberg> oh wow. thx, tbranyen! I'm too scared to look at those vids. 
[13:34:01] <tbranyen> well probably not that bad, but i need to get better at explaining simple concepts, i tend to trip up and make them sound more complicated
[13:35:17] <scott_gonzalez> tbranyen: Changes are live.
[13:35:25] <tbranyen> awesome man!
[13:35:33] <tbranyen> damn jquery has it's shit together for this kind of stuff
[13:35:41] <kswedberg> tbranyen: yeah, that's tricky. the more you know, the harder it is
[14:00:34] <Jemt> Any plans on supporting multiple versions of UI? Multiple jQuery instances with UI loaded is not the problem - the required CSS file is since loading one for different versions of UI would cause CSS overriding
[14:06:15] <snover> youâ€™re doing it wrong
[14:06:17] <snover> :)
[14:07:32] <Jemt> That's what most people say - but that's because the need to be enlightened :)
[14:07:37] <Jemt> they*
[14:09:05] <Jemt> Supporting multiple versions of jQuery makes perfect sense. Various application platforms and CMSes out there support only one version of jQuery. Once they upgrade, all extensions break. Allowing developers to target a specific version makes great sense - something like: runJquery("1.10.2", function($) { alert("jQuery 1.10.2 loaded"); });
[14:13:32] <Jemt> noConflict allows for isolation and having plugins loaded into a specific jQuery instance, rather than allowing all sorts of poorly written plugins to pollute a global jQuery instance. So everything works with jQuery - UI is what's missing
[15:26:26] <miketaylr> `tell gnarf any comments here? https://bugzilla.mozilla.org/show_bug.cgi?id=911499#c11
[15:26:27] <b-ot> miketaylr: Iâ€™ll tell gnarf about that.
[15:26:47] <miketaylr> (or anyone else, if they want to chime in on animation perf)
[16:18:42] <gnarf> miketaylr: DaveMethvin|away summed it up well
[16:18:43] <b-ot> gnarf: You have 1 new message, use `read when you wish to read it.
[16:42:52] <yui_ezequiel> `read
[16:42:53] <b-ot> yui_ezequiel: No unread messages.
[17:26:14] <scott_gonzalez> snover has been enlightented. He now knows he should be loading not just multiple copies of jQuery, but multiple copies of jQuery UI. Preferably the entire suite, not just the widgets he's actually using.
[17:28:34] <snover> i love extra code
[18:10:20] <tbranyen> one iframe per jquery please
[18:17:27] <snover> only one?
[19:22:25] <miketaylr> thanks gnarf DaveMethvin
