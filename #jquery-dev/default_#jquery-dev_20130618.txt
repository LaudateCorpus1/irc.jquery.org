[09:50:04] <nacin> hi, I was wondering if there is a timeline for 10.0.2.
[09:50:25] <nacin> the minutes document from June 3 indicated there would be an attempt to wait after Portland.
[09:51:31] <nacin> The cross-frame IE stuff caused a lot of hurt on WordPress.com (they reverted to 10.0.0), and we're prepping for the next major release of WP this month, so we're checking in upstream.
[09:52:54] <ajpiano> nacin: dave is out until the 24th
[09:53:17] <ajpiano> but he has phone and comp and says he can push out a release if needed
[09:54:32] <nacin> it seems like this is a really bad bug. if there's a reason to hold for a while longer, that's fine; but if it's a matter of dave being out, it would be nice if someone can kick it out the door.
[09:54:56] <nacin> (I'm only hearing of the 10.0.1 issues just now, as I've been working on things and not paying attention.)
[10:02:39] <nacin> ajpiano: should 10.0.2-pre be considered safe for now? we're not releasing until after 2 final (if that happens within the next week), we can just update to final when it happens.
[10:03:05] <nacin> 1.10.2 - sorry, I got the version numbers wrong this whole time.
[10:04:48] <snover> i’m less confused now
[10:05:00] <ajpiano> i couldn't say for certain, as i'm not sure which particular issue you're referencing
[10:06:13] <nacin> #13980
[10:06:43] <nacin> sorry, used to our bot providing a link.
[10:06:51] <ajpiano> ?13980
[10:06:53] <nacin> http://bugs.jquery.com/ticket/13980
[10:06:53] <bot-t> [#13980] JQuery library does not load in Opera 12.15 and IE 10 in IFrame which content is loaded from external domain ( function() {) - http://jqbug.com/13980
[10:09:03] <ajpiano> i would assume by now that it's in 1.10.2-pre
[10:09:48] <ajpiano> the timestamp on that file is 2013-06-12T17:09Z and this commit is older than that
[10:11:16] <nacin> yeah, it was more of a question whether 1.10.2-pre could be considered stable enough for production use.
[10:14:01] <ajpiano> yeah, i'm not 110% sure, i would want to hear from timmywil or gnarf or gibson042
[10:14:43] <gnarf> nacin: cc DaveMethvin
[10:15:35] <gnarf> mikesherov: ?
[10:16:01] <gnarf> ajpiano: i'm too out of touch with core to want to do a release, or say that the -pre should be stable
[10:16:08] <ajpiano> ditto
[10:16:21] <timmywil> -pre isn't as stable as it should be right now
[10:17:22] <ryanneufeld> jquerymobile-dev has gone +i?
[10:18:11] <ajpiano> i think #jquerymobile-dev and #jqueryui-dev merged into one channel
[10:20:05] <nacin> timmywil: any thoughts on a 1.10.2 final? We're worried upstream (WordPress) about ticket 13980 - IE cross-domain frame issues. what makes it not as stable?
[10:22:59] <timmywil> there are currently some failing tests that should be fixed before release, and we'd like to customize exports for npm, but I haven't had a chance to get to it yet
[12:00:45] <maxmoore14> not having any luck in the jquery channel - just wondering if it is possible to abort an ajax request from within a datafilter
[12:01:21] <snover> the solution to not having any luck in the correct channel is not to ask in the wrong channel. exercise patience.
[12:05:04] <maxmoore14> snover: that is fair. I'm just finding that no one in the regular channel even knows what a datafilter is...
[12:05:24] <maxmoore14> obviously more expertise here than there, that's all
[12:06:17] <dcherman> maxmoore14: aborting in a datafilter makes absolutely no sense for what the documentation says it does, which is why i asked what i did in #jquery.
[12:31:34] <ralphholzmann> rwaldron: I once prototyped a with-less templating engine
[12:31:43] <ralphholzmann> its not too difficult, tho I can't remember if the perf was worth it
[12:38:21] <rwaldron> ralphholzmann me too
[12:39:20] <rwaldron> ralphholzmann https://github.com/mozilla-b2g/gaia/blob/master/apps/sms/js/utils.js#L364-L475
[12:39:44] <ralphholzmann> ooooh
[12:39:45] <rwaldron> ralphholzmann: https://github.com/mozilla-b2g/gaia/blob/master/apps/sms/index.html#L198-L288
[12:39:46] * ralphholzmann looks
[12:40:03] <rwaldron> it's just safely escaped interpolation
[12:40:07] <rwaldron> no logic
[12:40:27] <rwaldron> and since inline script elements are banned via FFOS's CSP...
[12:40:35] <rwaldron> <!-- this is a template -->
[12:40:38] * rwaldron shrugs
[12:40:38] <b-ot> rwaldron: ¯\_(ツ)_/¯
[12:40:47] <rwaldron> before that, there was no templating at all
[12:40:58] <ralphholzmann> ah, nice
[12:41:00] <rwaldron> foo.innerHTML += "all the things";
[12:41:04] <ralphholzmann> lol
[12:42:13] <ralphholzmann> I did some hacky pseudo `with` at compile time
[12:42:29] <ralphholzmann> where I'd look for the vars being referenced in the template
[12:42:42] <rwaldron> lexical?
[12:42:46] <ralphholzmann> yah
[12:42:47] <rwaldron> no
[12:42:50] <rwaldron> oh?
[12:42:59] <ralphholzmann> like
[12:43:01] <rwaldron> i was thinking you'd have to have them in object?
[12:43:06] <rwaldron> but that's radica
[12:43:09] <rwaldron> radical*
[12:43:10] <ralphholzmann> `<div>{{foo}}</div>`
[12:43:17] <ralphholzmann> i would do something like
[12:43:24] <rwaldron> data.foo?
[12:43:32] <rwaldron> data.foo = "hi!";
[12:43:43] <rwaldron> <div>hi!</div>
[12:43:44] <rwaldron> ?
[12:43:46] <rwaldron> like this?
[12:44:13] <ralphholzmann> fn = new Function("(function(foo) {" + template source + "})");
[12:44:27] <ralphholzmann> then fn(obj["foo"])
[12:44:34] <rwaldron> ah-ha!
[12:44:37] <ralphholzmann> it would pass in each prop at call time
[12:44:38] <rwaldron> that's clever
[12:44:43] <rwaldron> I like it
[12:45:13] <rwaldron> you've made it "lexical" via param name binding
[12:45:17] <rwaldron> thats rad
[12:45:18] <ralphholzmann> yeah
[12:45:29] <rwaldron> very cool :)
[12:45:41] <ralphholzmann> so it was essentially `with`
[12:45:49] <ralphholzmann> damn i wish i could find the example
[12:45:52] <ralphholzmann> oh well
[12:45:55] <ralphholzmann> javascript is fun
[12:45:59] <rwaldron> but not nearly as destructive
[12:46:06] <rwaldron> potentially*
[12:46:15] <ralphholzmann> yeah
[12:46:16] <rwaldron> and strict-mode safe, right?
[12:46:34] <rwaldron> Function(...) is ok, right?
[12:46:37] <rwaldron> i cant remember
[12:46:49] <ralphholzmann> yea
[12:46:51] <rwaldron> am i think jslint or actual strict mode
[12:46:54] <ralphholzmann> I believe so
[12:46:57] <rwaldron> thinking*
[12:47:03] <rwaldron> word
[12:47:04] <ralphholzmann> jslint throws
[12:47:05] <rwaldron> thats awesome
[12:47:09] <rwaldron> fuck jslint
[12:48:50] <snover> lo-dash does this …
[12:49:00] <ralphholzmann> oh really?
[12:49:02] <ralphholzmann> sweet
[12:49:04] <rwaldron> that's right
[12:49:08] <rwaldron> i forgot about that
[12:49:30] <rwaldron> the compiled-from-actual-strings sources
[14:20:26] <Zinc> Hi all. I've been trough the getting started info but it's not clear how to assign a ticket to myself. It says to talk with the team, but I don't know how to do that. Could you help?
[15:19:07] <nschonni> any reason #jquerymobile-dev went invite only?
[15:29:39] <m_gol> nschonni: the jQuery Mobile team moved to #jqueryui-dev
[15:30:07] <nschonni> ah, so the old room just looked out when the turned off the lights :)
[15:30:29] <m_gol> ;)
[15:31:45] <gnarf> it has a forward to #jqueryui-dev
[15:50:33] <nschonni> grarf: I got "Joining #jquerymobile-dev requires an invitation.", but that may be a Pidgen bug
[16:38:00] <gnarf> but you should have joined #jqueryui-dev and gotten that message :)
[16:42:30] <nschonni> lol, I am in there to I've just been ignoring IRC for a bit
[16:43:16] <nschonni> *"too, I've"
[17:59:43] <Krinkle> Being aware that I might say something that is absurd and has already been solved....
[18:00:12] <Krinkle> So you know how jQuery.ajax currently has pretty horrible behaviour when trying to abort a (what will become a) JSON-P request? 
[18:00:41] <Krinkle> (because abort will deference the callback, but abort doesn't exist on a script tag so the request continues and will throw an uncaught reference error for window.jQuery1231310231 not being a function)
[18:00:52] <Krinkle> This has been reported on stack overflow a gazillion times
[18:01:21] <Krinkle> Solution: Don't deference the callback that resolves the promise. instead replace it with a closure that, when called, will deference itself *then*
[18:02:03] <snover> can’t you just set the script’s src property
[18:02:07] * Krinkle is frustrated with the 100s of Uncaught TypeError jQueyr12105923052 he sees in a beta version of a search suggestions thing on Wikipedia that aborts redundnat requests as you type.
[18:02:17] <snover> to about:blank
[18:02:23] <snover> or data:
[18:03:10] <Krinkle> snover: I'm not sure how reliable that is. Something solid and secure with closures in js-land sounds better imho.
[18:03:18] <Krinkle> Plus, when do we remove the script tag then?
[18:03:24] <Krinkle> currently it removes that when aborted
[18:03:46] <Krinkle> if removing it doesn't abort the request, why would changing .src do? I can imagine why, but I'm not very optimistic
[18:03:56] <Krinkle> Anyway, for the remote change the callback does get called...
[18:04:15] <Krinkle> but I see why you might want to deference to avoid memory leaks of a lot of small closures hanging around
[18:04:17] <snover> well let’s just go with your gut instead of testing anything then :)
[18:05:23] <Krinkle> I'm not writing any code yet, just wondering why jQuery core is left in a state with an obvious uncaught type error. There's at least 3 solutions we've come up with here in the last few minutes.
[18:05:44] <Krinkle> My gut feeling is that it probably has down sides neither of us know at this point.
[18:05:51] <Krinkle> Or nobody has bothered to try
[18:08:20] <snover> well i can tell you that dojo does what you said
[18:08:51] <snover> sets the callback to a method that deletes itself when it is called
[18:12:09] <orkel> Krinkle: Hey, just connect to IRC, but i probably know about what issue you are talking about
[18:12:16] <orkel> check this out – http://bugs.jquery.com/ticket/8744
[18:12:24] <orkel> unfortunately, there is not good way to fix this.
[18:12:49] <Krinkle> I know the issue. I've seen like a dozen stack overflow reports about it. Some of them point to that ticket indeed.
[18:13:38] <Krinkle> Just wondering whether there's a clean fix from the dev point of view (whether the request is actually aborted I don't care, I just want to make sure that 1) the done callback will not be invoked if the request successed after calling abort, 2) no errors like "jQuery123124 not found"
[18:13:57] <Krinkle> jQuery is correctly removing the callback to make sure #1 doesn't break.
[18:13:58] <orkel> i submitted two pr for that and closed one from another user, but apparently, they are not good enough
[18:15:04] <orkel> you can define your own function name, that always exist
[18:27:29] <Krinkle> yeah
[23:45:35] <Eviltwin> http://api.jquery.com/after/ says "As of jQuery 1.4, .before() and .after() will also work on disconnected DOM nodes." which is no longer true
[23:51:10] <Eviltwin> Is the right call to say something like "From jQuery 1.4 until 1.9" or should it be dropped or what?
