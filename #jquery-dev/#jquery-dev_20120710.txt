[01:37:26] <gnarf> Krinkle: is it possible to get an admin account that can delete any job?
[01:38:01] <gnarf> Krinkle: rather than having to research the password from a file hiding on swarm somewhere? :)
[05:10:33] <gibson042> .
[05:13:07] <gf3> Rude
[06:52:36] <timmywil> rwaldron: sry for being cranky last night
[07:17:51] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/xgsFAw
[07:17:51] <jqcommit> [jquery/master] Fix #10517. before() and after() on disconnected node should return multiple nodes. Closes gh-851. - Uri Gilad
[07:58:23] <jq-jenkins> Project jQuery Core build #238: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%20Core/238/
[07:58:24] <jq-jenkins> dave.methvin: Fix #10517. before() and after() on disconnected node should return multiple nodes. Closes gh-851.
[08:17:29] <rwaldron> timmywil haha I didn't think you were being cranky
[08:17:36] <rwaldron> so no worries :)
[08:18:00] <timmywil> cool :)
[08:18:25] <timmywil> I had jQuery, work stuff, and packing to do and was all stressed out.
[08:18:41] <scott_gonzalez> OH NOES. Juniata students looking bad in the bug tracker :-(
[08:18:41] <rwaldron> So, I'm basically going to create the world's first Sizzle plugin :P
[08:18:52] <rwaldron> packing?
[08:19:11] <timmywil> Going to Azerbaijan tomorrow morning for 11 days
[08:19:13] <ajpiano> scott_gonzalez: lofl
[08:19:48] <scott_gonzalez> I should drive up to PA, find his dorm room and explain the problem in person :-P
[08:20:19] <rwaldron> timmywil so... haaaaaave you thought about this? https://github.com/jquery/sizzle/pull/124/files
[08:20:20] <socialhapy> â˜… Pull request on sizzle by ChadKillingsworth (37m, 26s ago): Make Sizzle and unit tests compatible with Closure-compiler
[08:20:42] <scott_gonzalez> Then go tell his professors that he doesn't understand operator precendence.
[08:21:01] <scott_gonzalez> Maybe I should tell them that I still can't type too...
[08:21:07] <timmywil> rwaldron: I thought about it. Then I grunted.
[08:21:16] <timmywil> should I land it?
[08:21:25] <rwaldron> I guess
[08:21:34] <rwaldron> we landed the test changes in core
[08:21:38] <rwaldron> but not the code changes
[08:21:48] <rwaldron> (not on master anyway)
[08:24:27] <timmywil> rwaldron: well, I won't be making any big changes to Sizzle for about a week and half at least so maybe if you or DaveMethvin decides to land it on jQuery, feel free to land on Sizzle as well.
[08:24:54] <rwaldron> timmywil, it's going to stay in a branch for a long time
[08:24:55] <timmywil> both or neither I say
[08:25:05] <rwaldron> but the Sizzle changes actually look minimal
[08:25:41] <timmywil> yea, but they're ugly.
[08:28:24] <rwaldron> agreed
[08:28:50] <rwaldron> but the problem is that if you put them in a CCAO branch, how will that branch ever get built into jQuery?
[08:29:03] <scott_gonzalez> aww timmywil, you could've told the :lt guy his problem
[08:29:42] <rwaldron> I'm sure there is a way... can a branch have a submodule that points to a hash that is effectively a branch of some other thing?
[08:29:44] <rwaldron> like...
[08:30:10] <rwaldron> can we set our CCAO branch to only include the CCAO branch of Sizzle? (if you make one)
[08:30:28] <timmywil> sure, it could even include Chad's branch
[08:31:05] <timmywil> ok, not without changing submodule
[08:31:08] <timmywil> nvm
[08:31:16] <timmywil> so you'd like a branch
[08:31:19] <timmywil> I can do that
[08:31:39] <rwaldron> I'm not recommending anything!
[08:31:46] <rwaldron> just a brainstorm
[08:31:51] <rwaldron> what do you think is best?
[08:31:59] <rwaldron> do we go with branch?
[08:32:15] <timmywil> sure, having a branch doesn't hurt
[08:40:09] <DaveMethvin> timmywil rwaldron those sizzle changes from chad don't look complicated at all
[08:40:14] <DaveMethvin> it's just using quotes
[08:40:21] <DaveMethvin> so why not land them?
[08:41:32] <timmywil> because if jQuery isn't going to land them, Sizzle shouldn't either. It's not useful enough to warrant having them in only a selector engine.
[08:43:00] <timmywil> right?
[08:43:28] <timmywil> DaveMethvin: ^
[08:43:32] <DaveMethvin> the changes i didn't like were the comments and the rewritten code, but there aren't any of those here timmywil
[08:43:53] <DaveMethvin> i anticipate that chad will give a pr soon with some of the less drastic ones for jquery
[08:44:08] <DaveMethvin> we already landed the ones for the unit tests
[08:44:30] <DaveMethvin> supposedly they're working on a way to avoid the need for in-file annotations
[08:45:05] <DaveMethvin> which leaves a much smaller change set in dispute and would make the branch a lot easier to keep in sync
[08:51:35] <timmywil> DaveMethvin: sry, disconnected. not sure how much you saw
[08:52:02] <DaveMethvin> "right?" was the last thing ... i replied with a bunch o stuff :)
[08:52:13] <timmywil> well shoot
[08:52:16] <timmywil> so did I
[08:52:26] <DaveMethvin> well now we both have to type it all AGAIN!
[08:52:34] <DaveMethvin> you first?
[08:52:35] <DaveMethvin>  
[08:53:23] <DaveMethvin> (11:43:32 AM) DaveMethvin: the changes i didn't like were the comments and the rewritten code, but there aren't any of those here timmywil
[08:53:24] <DaveMethvin> (11:43:53 AM) DaveMethvin: i anticipate that chad will give a pr soon with some of the less drastic ones for jquery
[08:53:24] <DaveMethvin> (11:44:08 AM) DaveMethvin: we already landed the ones for the unit tests
[08:53:24] <DaveMethvin> (11:44:30 AM) DaveMethvin: supposedly they're working on a way to avoid the need for in-file annotations
[08:54:10] <timmywil> DaveMethvin: I agree the Sizzle changes aren't bad. However, if we're treating Sizzle as a separate thing, CCAO in Sizzle alone is not useful unless it's for a greater purpose. If jQuery ends up not adding the code changes, it would have been better not to have landed it in Sizzle.
[08:54:35] <DaveMethvin> i expect we'll land some of the same changes
[08:54:44] <DaveMethvin> quoted properties for example
[08:54:58] <DaveMethvin> the code changes, i don't think we'll land them now
[08:55:10] <DaveMethvin> but if we land these changes it will cause a lot fewer probs for the branch
[08:55:18] <DaveMethvin> otherwise rebasing will be a pain
[08:56:38] <timmywil> that's a concern, but I'm going to be gone for 11 days, so I suspect that won't be many commits for a little while.
[08:57:03] <scott_gonzalez> timmywil: I'm going to rewrite Sizzle while you're gone.
[08:57:18] <DaveMethvin> no, I'M going to rewrite sizzle
[08:57:19] <timmywil> scott_gonzalez: do it!
[08:58:00] <DaveMethvin> imma create a new sizzle-compatible selector engine that only works on Android, i'll call it zizzle
[08:58:08] <timmywil> lol
[08:58:30] <ryanneufeld> I'll make one that only works on iOS and call it iizzle
[08:59:06] <DaveMethvin> i'll write one in bash and call it shizzle
[08:59:20] <ryanneufeld> All mods will need to be fo-shizzle
[09:00:04] <DaveMethvin> so timmywil when are you coming back?
[09:00:16] <timmywil> July 23
[09:00:18] <DaveMethvin> just tryna figure out a release schedule
[09:00:34] <DaveMethvin> seems like maybe july 30
[09:00:37] <timmywil> should be at the meeting that day
[09:01:03] <DaveMethvin> that would mean we need an rc out the previous week
[09:01:09] <scott_gonzalez> DaveMethvin: If you can write a CSS selector engine that works on a file system, that'd actually be pretty cool.
[09:01:23] <DaveMethvin> but if there aren't any serious sizzle bugs that seems doable
[09:02:30] <DaveMethvin> you know what's interesting about that scott_gonzalez? the Multics system actually used > as its path separator
[09:02:40] <DaveMethvin> so it would be like usr>bin>mail
[09:02:43] <scott_gonzalez> :-)
[09:02:45] <timmywil> I think it's pretty much edge cases at this point
[09:03:18] <timmywil> DaveMethvin: so I've made my argument. you decide. land or no land?
[09:04:13] <DaveMethvin> i want to land something similar in jquery so yeah, let's land this
[09:04:22] <timmywil> ok then
[09:04:23] <DaveMethvin> if it all blows up we can remove it later
[09:05:01] <DaveMethvin> a few double quotes never hurt anyone :)
[09:05:09] <scott_gonzalez> You guys are killing me.
[09:05:14] <scott_gonzalez> First AMD, now CCAO...
[09:06:05] <DaveMethvin> honestly, i don't use either but it's not like it really hurts anything to support it
[09:06:07] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/PKGlNQ
[09:06:07] <sizcommit> [sizzle/master] Make Sizzle and unit tests compatible with Closure-compiler. Closes gh-124. - Chad Killingsworth
[09:06:13] <DaveMethvin> the AMD changes were small
[09:06:22] <DaveMethvin> and I didn't push timmywil on THAT one
[09:06:55] <timmywil> I support AMD
[09:07:06] <DaveMethvin> yeah, see?
[09:07:20] <timmywil> also being small
[09:07:23] <DaveMethvin> it's a lot like jQuery.noConflict
[09:07:26] <timmywil> if you're small
[09:08:44] <DaveMethvin> funny, tho, i was getting some flack from james padolsey because noConflict enables people to do crazy things like include prototype and two versions of jquery
[09:09:02] <DaveMethvin> hey, i can't stop people from doing crazy things
[09:09:20] <DaveMethvin> and there are specific cases where crazy is the right way to go
[09:09:26] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/R453pQ
[09:09:26] <jqcommit> [jquery/master] Sizzle: necessary changes for Advanced Closure compiler support - Timmy Willison
[09:13:29] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/Fb96-Q
[09:13:29] <jqcommit> [jquery/master] Adjust jshint options to pass with closure 'sub' changes - Timmy Willison
[09:17:37] <DaveMethvin> timmywil: the nice thing about those changes are that they don't add any bytes, since it's all optimized away
[09:17:50] <DaveMethvin> i think the original CCAO branch was something like +120
[09:18:06] <timmywil> yea, that's nice
[09:41:09] <jq-jenkins> Project jQuery Core build #239: STILL FAILING in 19 min: http://swarm.jquery.org:8080/job/jQuery%20Core/239/
[09:41:10] <jq-jenkins> * timmywillisn: Sizzle: necessary changes for Advanced Closure compiler support
[09:41:10] <jq-jenkins> * timmywillisn: Adjust jshint options to pass with closure 'sub' changes
[09:44:59] <DaveMethvin> These all look like random fails plus our IE8 nemesis http://swarm.jquery.org/job/224
[09:45:15] <DaveMethvin> i just retried the ie9 fail here, works fine
[09:53:05] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/QoOSBg
[09:53:05] <jqcommit> [jquery/master] You can't hurry tests, no, you just have to wait. - Dave Methvin
[09:53:08] <scott_gonzalez> That's a lot of random fails :-/
[09:53:22] <DaveMethvin> well i'm hoping for one less fail
[09:53:44] <DaveMethvin> the ie8 ones we have been able to repro but not figure how to detect and fix
[09:53:50] <DaveMethvin> it's only in the swarm
[09:53:56] <DaveMethvin> and due to the iframe
[09:55:10] <rwaldron> DaveMethvin scott_gonzalez gnarf ajpiano jzaefferer mikesherov ...
[09:55:12] <rwaldron> https://twitter.com/rwaldron/status/222735290631065602
[09:55:13] <socialhapy> â˜… Tweet from rwaldron: Survey: ES6/JavaScript Classes: sealed instances by default?  https://t.co/CwW0WCmV #javascript #es6 (please RT) â˜… http://bit.ly/NlUqOD
[09:55:20] <ajpiano> already done
[09:55:22] <rwaldron> https://twitter.com/rwaldron/status/222735135638953985
[09:55:23] <socialhapy> â˜… Tweet from rwaldron: Survey: ES6/JavaScript Classes: const by default? https://t.co/BbclruYC #javascript #es6 (please RT) â˜… http://bit.ly/NnfJ5O
[09:55:26] <rwaldron> thanks bro
[09:56:45] <DaveMethvin> btw rwaldron i like the polling, it helps give an idea of what the avg developer might expect
[09:57:06] <rwaldron> yeah deg
[09:57:07] <rwaldron> def*
[09:57:22] <rwaldron> this is how I won the Array extras :)
[09:57:49] <scott_gonzalez> I can't imagine why anyone would ever want the default behavior to be sealed.
[09:58:04] <rwaldron> also, this time around, I have alex russell, erik arvidsson (googlers) and dave herman (mozilla) conspiring with me :D
[09:58:11] <rwaldron> scott_gonzalez EXACTLY
[09:58:22] <rwaldron> we're trying to kill this shit dead
[09:59:03] <scott_gonzalez> Let's create a class, which is useful for managing state changes and then prevent the state from changing!
[09:59:45] <scott_gonzalez> It seems like maybe functional programming influence?
[09:59:54] <scott_gonzalez> But if that was the case, why would there be a class?
[10:00:04] <rwaldron> um
[10:00:09] <rwaldron> you can change the values
[10:00:15] <rwaldron> you just can't change the "shape"
[10:00:52] <scott_gonzalez> Well, that's better. I still think they shouldn't be sealed.
[10:00:59] <rwaldron> yes
[10:01:05] <rwaldron> its better, but like.. WTF
[10:01:11] <rwaldron> no thanks
[10:01:15] <DaveMethvin> "I know what I'm doing, seal this shit"
[10:01:24] <rwaldron> so yeah, this is my "big agenda" for the next meeting
[10:01:27] <rwaldron> this needs to die
[10:01:34] <rwaldron> and only one person stands in the way
[10:01:40] <rwaldron> (literally)
[10:01:47] <rwaldron> so I need to bring the pain
[10:02:01] <rwaldron> aka the community has to say "no fucking way"
[10:02:03] <scott_gonzalez> What does class do besides syntax chnage if it doesn't seal?
[10:02:20] <DaveMethvin> this is about the class name, isn't it?
[10:02:25] <rwaldron> extend/inherit
[10:02:36] <rwaldron> class NodeList extends Array {}
[10:02:47] <rwaldron> class jQuery extends Array {}
[10:03:54] <scott_gonzalez> Equivalent to NodeList.prototype = new Array() or different?
[10:04:18] <rwaldron> that breaks the length property
[10:04:32] <rwaldron> class NodeList extends Array {} fixes those woes
[10:04:35] <rwaldron> i need to grab food
[10:04:40] <rwaldron> back in a few
[10:05:13] <DaveMethvin> yeah it never made sense to me that the length property was broken ... it's funny b/c it almost works to extend Array
[10:05:33] <scott_gonzalez> Sounds like Array is broken :-P
[10:06:01] <DaveMethvin> yeah, i dunno if we need new syntax, just fixing protos would help since nobody can be depending on the broken semantics
[10:06:18] <DaveMethvin> but i haven't been keeping up with ES6
[10:06:29] <rwaldron> ok, so the discussion isn't "new syntax or not"
[10:06:37] <rwaldron> :P
[10:06:42] <rwaldron> ack
[10:06:43] <rwaldron> food
[10:10:19] <scott_gonzalez> JohnResig: ping
[10:25:23] <jq-jenkins> Project jQuery Core build #240: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%20Core/240/
[10:25:23] <jq-jenkins> dave.methvin: You can't hurry tests, no, you just have to wait.
[10:26:12] <DaveMethvin> SUCCESS don't come easy, it's a game of give and take
[10:27:50] <rwaldron> DaveMethvin git log --all --format='%aN <%cE>' | sort -u
[10:28:12] <DaveMethvin> yeah i got that far no problem
[10:28:21] <rwaldron> gotcha
[10:28:24] <DaveMethvin> we have several commits with bogus names and emails
[10:28:35] <rwaldron> ugh
[10:28:46] <DaveMethvin> scott_gonzalez already did ui so i'm catching up to him
[10:29:08] <DaveMethvin> plus  he did the list in chron order
[10:29:42] <scott_gonzalez> Indeed. DaveMethvin, did you look at the SVN history yet?
[10:29:50] <DaveMethvin> yeah, didn't find any new names
[10:29:54] <scott_gonzalez> cool
[10:29:59] <scott_gonzalez> It might change the order though.
[10:30:02] <DaveMethvin> although it's a pain to look thru svn, it has private repos there
[10:30:37] <scott_gonzalez> Oh yeah, that sucks.
[10:30:41] <scott_gonzalez> I didn't have to worry about that with UI SVN.
[10:30:54] <scott_gonzalez> Although I did have to deal with the fact that UI moved around a few times in SVN :-/
[10:31:06] <DaveMethvin> there were very few core commits beyond the usual suspects who are already high up on the list
[10:31:23] <DaveMethvin> so although they may be a little out of order, john will still be on top
[10:31:48] <DaveMethvin> mainly i'm tryna get teh last half dozen without contact info or full names
[10:32:13] <scott_gonzalez> I'm down to 1 person with missing info for QUnit.
[10:32:21] <scott_gonzalez> Out of 55
[10:32:43] <scott_gonzalez> And 1 out of 30 for TestSwarm.
[10:33:53] <DaveMethvin> not bad
[10:34:14] <scott_gonzalez> I'm not sure I'll be able to track down this guy: https://github.com/Dev24/
[10:36:44] <DaveMethvin> yeah but look at the contribution! :P
[10:37:10] <DaveMethvin> you'll never be able to rewrite that!
[10:38:30] <scott_gonzalez> :-P
[10:39:28] <scott_gonzalez> Assuming we can't track down his info, should we just leave him out of the authors file?
[10:39:35] <scott_gonzalez> For a 1 character change.
[10:39:49] <DaveMethvin> i would say so
[10:41:53] <scott_gonzalez> Ok, I'll just drop him now and land the authors file.
[10:42:00] <scott_gonzalez> It's been 4 days since I asked for his name.
[10:42:08] <scott_gonzalez> If he replies, I'll add him in.
[10:43:57] <scott_gonzalez> Is JohnResig still alive or did he fall into the ocean after we left SF?
[10:44:27] <scott_gonzalez> I've been trying to confirm that Mozilla doens't have any rights to TestSwarm.
[10:44:50] <DaveMethvin> complete mystery to me
[10:45:02] <jqcommit> [testswarm] scottgonzalez pushed 1 new commit to copyright: http://git.io/ZaTUvA
[10:45:02] <jqcommit> [testswarm/copyright] Added list of authors. - Scott GonzÃ¡lez
[11:05:08] <Krinkle> gnarf: they all have the same password
[11:05:19] <Krinkle> gnarf: just different usernames.
[11:53:28] <gibson042> .
[14:02:08] <rwaldron> DaveMethvin I don't even...
[14:02:17] <DaveMethvin> wat
[14:02:18] <david_mark> i usar an androod device
[14:02:24] <DaveMethvin> lol
[14:02:58] <DaveMethvin> rwaldron: sup?
[14:03:18] <rwaldron> oh, i was just like... baffled by the filing 12052
[14:03:51] <DaveMethvin> yeah like yet another .data() bug
[14:04:19] <DaveMethvin> at some point we should count the dups on tickets, i think that one would win
[14:04:32] <DaveMethvin> and then we should rip out that shit and go back to it just returning strings
[14:04:47] <DaveMethvin> and then it would break mobile and a bunch of other code
[14:05:00] <DaveMethvin> but people who want to get numbers would be happy
[14:05:04] <DaveMethvin> and we'd stop getting dups
[14:05:04] <rwaldron> The dup search _does_ list it
[14:05:22] <DaveMethvin> yeah i don't know why that doesn't prevent them from seeing it
[14:05:34] <rwaldron> they're idiots?
[14:05:40] <DaveMethvin> umm,  yeah
[14:05:49] <DaveMethvin> btw, on the verge of releasing 1.8b2
[14:06:06] <rwaldron> radical
[14:06:25] <DaveMethvin> just need to figure out why the script didn't do the copy
[14:06:34] <DaveMethvin> i really need to get this set up as a grunt task
[14:38:43] <DaveMethvin> ajpiano: can you tweet http://blog.jquery.com/2012/07/10/jquery-1-8-beta-2-released/ ?
[14:38:52] <ajpiano> yessir
[14:38:55] <DaveMethvin> thanks!
[14:41:54] <socialhapy> â˜… Tweet from jquery: jQuery 1.8 Beta 2 is now available, featuring improvements to Sizzle! http://t.co/kM4zsP6K â˜… http://bit.ly/NmlVb0
[17:33:53] <gibson042> .
[18:35:54] <jqcommit> [jquery] dmethvin pushed 2 new commits to master: http://git.io/Jy7bwA
[18:35:54] <jqcommit> [jquery/master] Tagging the 1.8b2 release. - Dave Methvin
[18:35:54] <jqcommit> [jquery/master] Updating the source version to 1.8pre - Dave Methvin
[18:46:27] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/5Vug3A
[18:46:27] <jqcommit> [jquery/master] Remove a few stray spaces in unit tests. - Dave Methvin
[18:56:31] <jq-jenkins> Project jQuery Core build #241: STILL FAILING in 20 min: http://swarm.jquery.org:8080/job/jQuery%20Core/241/
[18:56:32] <jq-jenkins> * dave.methvin: Tagging the 1.8b2 release.
[18:56:32] <jq-jenkins> * dave.methvin: Updating the source version to 1.8pre
[19:22:50] <jq-jenkins> Project jQuery Core build #242: STILL FAILING in 26 min: http://swarm.jquery.org:8080/job/jQuery%20Core/242/
[19:22:50] <jq-jenkins> dave.methvin: Remove a few stray spaces in unit tests.
[20:51:54] <mikesherov_> gnarf: you here?
[20:53:36] <mikesherov_> bot-t: Tell DaveMethvin I figured out the IE8 test fail. Font-size CSS declaration on body in bootstrap.min.css
[20:53:36] <bot-t> mikesherov_, Okay.
[21:12:46] <mikesherov> .
