[03:16:08] <jqcommit> [13jquery] 15delijah opened issue #2035: .css("min-height") fails when css-display-property is set to table on IE9 02http://git.io/sAGYRA
[06:18:15] <gabriel_schulhof> Hey, all! Can someone please help me figure out why input[type='checkbox']:not([data-nstest-role='flipswitch']),input[type='radio'] throws a syntax error with core 1.8.3?
[06:18:50] <gabriel_schulhof> We need to support 1.8.3 from jQM 1.5.0, and it seems like a perfectly valid selector.
[06:20:12] <gabriel_schulhof> Well, I'll be darned! input[type='radio'],input[type='checkbox']:not([data-nstest-role='flipswitch']) works fine.
[06:20:23] <gabriel_schulhof> I just hope the scope for the :not() is correct.
[08:12:28] <jqcommit> [13jquery] 15dmethvin closed issue #2034: $.ajax with type as the first parameter 02http://git.io/x6k3YQ
[08:37:32] <gnarf> gabriel_schulhof: can you just write it as two selectors?
[08:38:30] <gnarf> gabriel_schulhof: $("input[type='checkbox']").not("[data-nstest-role='flipswitch']").add("input[type='radio']") ?
[08:38:47] <gnarf> ^^^ seems saner than that long ass selector
[09:02:46] <jqcommit> [13jquery] 15meetselva opened pull request #2036: Data: Fix to update if key was added as-is when using dash (06master...06master) 02https://github.com/jquery/jquery/pull/2036
[09:03:51] <jqcommit> [13api.jquery.com] 15rasca opened issue #636: In index html escape the descriptions  02https://github.com/jquery/api.jquery.com/issues/636
[09:09:26] <jqcommit> [13api.jquery.com] 15AurelioDeRosa opened pull request #637: Update jQuery.param.xml (06master...06patch-5) 02https://github.com/jquery/api.jquery.com/pull/637
[09:10:10] <arschmitz> gnarf: that wont work in this case
[09:10:25] <jqcommit> [13jquery] 15rasca opened issue #2037: Feature request: parse url querystring 02https://github.com/jquery/jquery/issues/2037
[09:10:35] <arschmitz> gnarf: its being use as essentialy an option value
[09:10:41] <arschmitz> it needs to be a single string
[09:14:09] <dcherman> _evalUrl was supposed to be used for having a weak dependency on $.ajax, wasn't it?
[09:14:20] <dcherman> that way you could redefine it if you wanted to exclude $.ajax from your build
[09:24:59] <gnarf> arschmitz: sure - was just a thought - when selectors get that complex, its problematic
[09:26:10] <arschmitz> gnarf: yeah for sure. its an annoying case makes me want to consider dropping enhancment of inputs by default and force there to always be an attribute. ( this is for autoinit )
[09:26:47] <arschmitz> gnarf: actually with the direction chassis is heading maybe ill consider doing exactly that...
[10:02:57] <m_gol> DaveMethvin mikesherov: so, the issue is caused by the div with display: inline at https://github.com/jquery/jquery/blob/master/test/data/support/bodyBackground.html
[10:04:36] <m_gol> DaveMethvin makesherov: :facepalm: Since the style is applied to all divs, it also catches the one we use for this feature test... bad test, bad!
[10:05:00] <DaveMethvin> oh HAHAHA
[10:05:07] <m_gol> DaveMethvin makesherov: but the good news is I can fix the tests ;)
[10:05:27] <DaveMethvin> nice detective work there m_gol 
[10:05:27] <m_gol> Why is this div styled in this way anyway?
[10:05:40] <DaveMethvin> not sure
[10:06:08] <m_gol> the conclusion is that jQuery doesn't support sites with "div { display: inline }" in their CSS ]:->
[10:07:20] <m_gol> mikesherov: this was added by you at https://github.com/jquery/jquery/commit/a52391aa1dcf3f28306e274e1b2d7f0affc4e725; do you remember why did you do it? :P
[10:08:06] <m_gol> ah, it's in the commit message; so it's all not needed anymore anyway with us dropping $.support.boxModel long time ago :)
[10:08:31] <m_gol> DaveMethvin: or maybe we should add "display:block" to the css of the tested div...
[10:14:50] <m_gol> ok, PR updated, all should be fine now
[10:19:02] <jqcommit> [13jquery] 15dmethvin closed issue #2037: Feature request: parse url querystring 02http://git.io/FmVC
[10:21:05] <sizcommit> [13sizzle] 15timmywil closed issue #312: Consider renaming shadowed document variable 02http://git.io/GegMgw
[10:26:38] <timmywil> gibson042: where was that issue where you commented on modifying where we call setDocument when there's a seed?
[10:26:49] <timmywil> or am I misremembering
[10:27:00] <jqcommit> [13jquery] 15jzaefferer opened pull request #2038: Build: Update QUnit to latest (1.17.1) (06master...06qunit-update) 02http://git.io/Fm6f
[10:27:46] <jzaefferer> arschmitz: you can wait for the next core dependency update and send a PR like that ;-)
[10:28:17] <arschmitz> jzaefferer: lol 
[10:28:34] <arschmitz> jzaefferer: thats cheating
[10:29:11] <jzaefferer> Sure
[10:29:18] <jzaefferer> I already have 325 commits in there :p
[10:30:40] <arschmitz> well your like #9 in AUTHORS.txt :-)
[10:30:55] <arschmitz> jzaefferer: so you might have been around a while ha ha ha
[10:31:33] <arschmitz> jzaefferer: looks like your the oldest still active committer by that list.
[10:32:33] <timmywil> ah, it was that email from paul
[10:32:36] <timmywil> found it
[10:51:30] <gibson042> timmywil: in the email, right? "skipÂ setDocumentwhen provided a seed collection"
[10:52:40] <timmywil> yup, although I don't we should skip setDocument
[10:52:55] <timmywil> we should check the document per seed element
[10:53:05] <gibson042> that already happens in the deeper code
[10:53:30] <timmywil> ah, I see, so you mean just skip it in the constructor
[10:54:15] <gibson042> right; yet another thing that is dependent upon `!seed`
[10:54:26] <timmywil> well, that's okay
[11:00:20] <timmywil> So, I don't see where it happens in the deeper code
[11:00:52] <gibson042> I was just looking at that too, and it's inconsistent
[11:00:56] <timmywil> since it just goes on to create matchers and matchers assume cached document vars
[11:00:57] <gibson042> Sizzle.attr does it
[11:01:14] <timmywil> sure
[11:01:17] <gibson042> and contains
[11:02:05] <gibson042> but there's no call widespread call
[11:02:49] <timmywil> remind me why we don't defer to matchesSelector in matches?
[11:03:01] <timmywil> oh, because it's not scoped to the element
[11:05:31] <timmywil> I think we might need to adjust how we set context?
[11:05:51] <gibson042> could be
[11:06:23] <timmywil> the problem is we've been assuming the same document and context for a whole seed
[11:06:34] <gibson042> right
[11:06:35] <timmywil> but a seed can contain elements from any owner
[11:06:43] <timmywil> ugh
[11:07:14] <gibson042> as mentioned in the email, I want to memoize by document.documentElement.nodeName
[11:07:36] <gibson042> if we do that, we might as well check for every element, knowing that a switch is cheap instead of expensive
[11:08:16] <gibson042> i.e., support tests never need to re-run against the same kind of document
[11:08:51] <timmywil> yea, but where would you put that check? in the supermatcher?
[11:09:14] <timmywil> it's also using the global document to check outermost
[11:09:17] <timmywil> btw
[11:09:58] <gibson042> probably matcherFromTokens
[11:10:53] <timmywil> except elements can change documents between matcher creations, right?
[11:11:07] <gibson042> I mean in the return value from it
[11:11:12] <timmywil> ah
[11:11:24] <gibson042> or even in superMatcher, for that matter
[11:11:36] <gibson042> the point would be to do it on every element, and preferably once
[11:12:02] <timmywil> right, I think supermatcher
[11:12:15] <timmywil> does this affect caching matchers?
[11:12:29] <gibson042> I don't think so
[11:12:45] <gibson042> they should all be looking at parameters or calling setDocument theirselves
[11:13:08] <timmywil> right, that makes sense
[11:13:30] <timmywil> ok, so first step is memoize
[11:13:38] <timmywil> then move setDocument calls to the supermatcher
[11:13:57] <timmywil> we'll have to leave it in attr/contains too for isolated calls to those
[11:14:02] <gibson042> yes
[11:14:59] <timmywil> rather, maybe we're just adding a call
[11:15:10] <timmywil> and moving the one in Sizzle to the !seed if statement
[11:15:25] <timmywil> to set qsa vars
[11:16:08] <timmywil> well, I've got all this build stuff. It might be a while before I can get to it. Can you take it or is your plate full too?
[11:16:16] <gibson042> yeah, that sounds right
[11:16:27] <gibson042> I'm not sure where to prioritize it
[11:16:37] <gibson042> let's keep it open for now and first one to free up takes it
[11:16:45] <timmywil> okay, sounds good
[11:17:07] <timmywil> I'm going to a link to this discussion in the ticket
[11:17:12] <timmywil> add*
[11:17:12] <gibson042> ok
[16:02:58] <jqcommit> [13api.jquery.com] 15EarthCitizen opened issue #638: Deferred.then() documentation needs more emphasis on chaining of Deferreds/Promises 02http://git.io/F3Bd
[16:23:15] <jqcommit> [13jquery] 15ntwb opened pull request #2039: JSCS code-style updates (06master...06patch-2) 02http://git.io/F3a3
[19:50:51] <jqcommit> [13jquery] 15markelog closed pull request #2039: JSCS code-style updates (06master...06patch-2) 02http://git.io/F3a3
[20:51:08] <jqcommit> [13jquery-migrate] 15hitsthings opened issue #83: "json" 204 response causes migrate warning 02http://git.io/Fs1i
