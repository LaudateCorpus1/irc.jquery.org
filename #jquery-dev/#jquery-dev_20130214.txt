[02:02:09] <JamesMGreene> Well, there you go....
[02:02:25] <JamesMGreene> I published 4 plugins this week =)
[02:04:14] <JamesMGreene|zzz> stupid 4am
[04:39:24] <JamesMGreene> 2.5 hours of sleep becomes less and less entertaining as you get older
[05:44:19] <scott_gonzalez> JamesMGreene: I see you saw my message.
[05:44:19] <b-ot> scott_gonzalez: You have 1 new message, use `read when you wish to read it.
[05:44:26] <scott_gonzalez> `read
[05:44:27] <b-ot> scott_gonzalez: From JamesMGreene, 8h 31m 30s: Can you tell me which devices trigger touch events in some cases and mouse events in others?  Also, any related documentation, e.g. conditions under which each type of event is triggered, device market share, etc.
[05:45:14] <scott_gonzalez> I'm not sure how many devices, but I know there are BlackBerry devices that will do it.
[05:45:31] <scott_gonzalez> I think it's trackball = mouse, screen = touch.
[05:45:55] <scott_gonzalez> But you can imagine lots of potential devices that will do this.
[05:46:39] <scott_gonzalez> You should never assume exclusivity on event type.
[05:46:55] <scott_gonzalez> What Mobile is doing is wrong, and I've told them that before.
[05:47:48] <scott_gonzalez> I remember because I was saying that $.support.touch should never be used to determine which event to bind to.
[05:47:54] <scott_gonzalez> And they changed some code that did that.
[06:51:25] <carldanley> are there meetings for feature requests or ideas?
[06:51:51] <DaveMethvin> carldanley hey! if you have an idea, fire away
[06:52:16] <carldanley> whats up DaveMethvin? been awhile since dev summit =P
[06:52:33] <carldanley> idea: default jQuery animations to CSS3 whenever possible, otherwise tween
[06:52:33] <DaveMethvin> yeah you lazy bum we missed you :)
[06:52:50] <carldanley> i know, im trying to find time to get in here and get some work done
[06:52:53] <DaveMethvin> we've talked about that before, it's not a perfect match
[06:52:59] <scott_gonzalez> DaveMethvin: I think you should write a page about why we don't do this.
[06:53:00] <carldanley> any specific reason?
[06:53:09] <DaveMethvin> the semantics of css3 animations aren't the same as our animations
[06:53:45] <DaveMethvin> for example you can track or hook every step of a jq animation
[06:53:57] <DaveMethvin> or stop it dead in its tracks
[06:54:08] <carldanley> you can do this with CSS3 transitions no?
[06:54:22] <DaveMethvin> not that i know of, they have a complete event but not a "progress"
[06:55:06] <DaveMethvin> scott_gonzalez has a good point, it would be good to put up some discussion somewhere of why this is harder than it seems
[06:55:22] <DaveMethvin> it could be done but at the expense of making some jq animation features breka
[06:55:23] <DaveMethvin> beak
[06:55:26] <DaveMethvin> break
[06:55:28] <DaveMethvin> damn keyboard
[06:56:08] <DaveMethvin> but gnarf is probably the best guy to write up the technical details
[06:57:05] <gnarf> sometime - make me an issue somewhere about it :)
[06:58:00] <gnarf> carldanley: i tried to make 1.8 effects extendable enough that you could do this in a plugin
[06:58:10] <DaveMethvin> oh carldanley you were prob talking about the animationiteration event
[06:58:16] <gnarf> because i don't think the amount of code would be sane enough that we wanted to bundle it global
[06:58:20] <carldanley> yes DaveMethvin
[06:58:26] <gnarf> animationiteration is only for looping anims
[06:58:35] <gnarf> which like, jQuery doesn't even think about
[06:59:11] <carldanley> gnarf, great job with the 1.8 effects - i've seen multiple plugins that support css3 animations because of it
[07:01:15] <carldanley> gotta start somewhere so this idea may be total crap
[07:01:47] <carldanley> but, couldn't you create a unique animation for the object being animated
[07:01:51] <carldanley> and use that for callbacks
[07:02:00] <carldanley> loop once
[07:02:15] <DaveMethvin> like, in parallel to the css animation?
[07:02:31] <carldanley> i think in parallel would be too difficult
[07:02:38] <carldanley> but maybe register the unique animation
[07:02:41] <carldanley> set it in motion
[07:02:46] <carldanley> unregister the unique animation
[07:03:07] <carldanley> that way you're utilizing css3 events/callbacks
[07:03:43] <DaveMethvin> i think the performance and power savings is one of the big reasons to use css3 anims
[07:03:58] <DaveMethvin> so creating something that kind of layerd jq animations on top would defeat that
[07:04:52] <DaveMethvin> i wonder if it would make sense to define a new methods with different semantics
[07:04:53] <gnarf> jaubourg and i drafted up an api spec
[07:04:56] <DaveMethvin> and much simpler options
[07:04:59] <gnarf> that looked a LOT like css3 animations
[07:05:04] <DaveMethvin> yeah
[07:05:18] <gnarf> that had looping, keyframes, etc
[07:05:25] <carldanley> ooooh id love to see this
[07:05:30] <carldanley> what was the downside?
[07:05:47] <DaveMethvin> there's no code  yet :D
[07:06:16] <gnarf> https://gist.github.com/gnarf37/984039
[07:06:25] <gnarf> https://gist.github.com/gnarf37/984042
[07:06:39] <gnarf> more chat in here: http://oksoclap.com/effects-proposal
[07:07:09] <DaveMethvin> there ya go carldanley, that looks like a project for you! 
[07:07:32] <carldanley> it does indeed :)
[07:08:35] <DaveMethvin> well .animate() is in its own module so it could be dropped and replaced with this in a custom build
[07:08:47] <DaveMethvin> and of course it can start life as a plugin
[07:09:19] <carldanley> this is an awesome idea
[07:09:39] <carldanley> gnarf: thnx for the links, will review
[07:13:47] <gnarf> carldanley: glad to talk more about it whenever too
[07:14:05] <carldanley> ok, awesome
[07:22:51] <gnarf> though these next three weeks or so are very busy for me
[07:22:55] <gnarf> lots of travel
[07:22:59] <gnarf> i lurk here forever tho
[07:23:13] <DaveMethvin> yeah my schedule is crazy the next 3 weeks
[07:23:16] <gnarf> just ping me on irc, or leave a message with b-ot if you miss me
[07:23:22] <gnarf> DaveMethvin: vienna and canada?
[07:23:41] <DaveMethvin> seattle next week, then sf, then toronto
[07:24:06] <DaveMethvin> bring me back some of those little sausage inthe can
[07:24:30] <gnarf> heh
[07:24:37] <gnarf> seattle?
[07:24:46] <DaveMethvin> microsoft consulting
[07:25:00] <DaveMethvin> gotta make money every once in a while
[07:37:29] <jqcommit> 01[13jquery-migrate01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/n7ch4g
[07:37:29] <jqcommit> 13jquery-migrate/06master 145e23e5b 15Dave Methvin: Swarmy should test 1.9.1 now.
[07:47:26] <carldanley> DaveMethvin: available for PM quickly?
[08:02:00] <JamesMGreene> test
[08:03:19] <JamesMGreene> Weird
[08:03:30] <JamesMGreene> I can't send any messages to the channel in #jquery-meeting. Any ideas why?
[08:04:01] <gnarf> JamesMGreene: because its moderated
[08:04:13] <gnarf> we un-mute it when there is a meeting
[08:05:11] <JamesMGreene> oic
[08:05:18] <JamesMGreene> Guess I've never hung out in there during non-meeting time
[08:05:39] <JamesMGreene> Speaking of which
[08:06:01] <JamesMGreene> jzaefferer Meeting still on today?
[08:07:48] <doesallmagic> Project jQuery Migrate Core 1.x build #28: FAILURE in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/28/
[08:07:48] <doesallmagic> dave.methvin: Swarmy should test 1.9.1 now.
[08:09:58] <JamesMGreene> Looking like a negatory on the testing meeting today, eh?
[08:12:07] <gnarf> JamesMGreene: i can unmute it, but doesn't seem there's anyone to meet with / cc jzaefferer
[08:25:19] <JamesMGreene> gnarf scott_gonzalez gibson042 jzaefferer --> #jquery-meeting
[08:28:14] <JamesMGreene> scott_gonzalez On a separate note: can you tell me more about those devices that may fire touch events for some actions but mouse events for others?
[08:29:28] <scott_gonzalez> I don't have first hand experience with any of them.
[08:29:48] <JamesMGreene> Any references?
[08:29:59] <scott_gonzalez> I know some BlackBerry devices do it.
[08:30:02] <JamesMGreene> If not, I am just going to deny they exist or are very rare :)
[08:31:27] <scott_gonzalez> Even if it were the case that none existed today (which they do), it would still be wrong to do that detection.
[08:32:18] <scott_gonzalez> You only pasted one line of code, but I can assure you that it is not what you want to do.
[08:32:21] <JamesMGreene> So what is a valid alternative that will still avoid duplicate handling?
[08:32:42] <scott_gonzalez> You need a layer of abstraction.
[08:32:47] <scott_gonzalez> Which is why Mobile has vmouse.
[08:32:49] <JamesMGreene> (preferably without preventing default on the touch event
[08:33:03] <JamesMGreene> )
[08:33:12] <scott_gonzalez> And why UI has the interaction base for 2.0.
[08:33:53] <scott_gonzalez> But what you *should* do is just listen to everything and pipe them all to the same logic.
[08:34:23] <scott_gonzalez> Because Touch Events are a stupid piece of shit, you may want to track which event type you're currently handling.
[08:34:42] <scott_gonzalez> So on mousedown, setup your mousemove, mouseup handlers.
[08:35:30] <scott_gonzalez> On touchstart, setup your touchmove, touchend handlers.
[08:35:48] <scott_gonzalez> On pointerdown, setup your pointermove, pointerup, pointercancel handlers.
[08:36:10] <scott_gonzalez> On stop/up/cancel tear down your handlers.
[08:36:32] <scott_gonzalez> Or you can just bind all of them all the time and track which one you handled first for the down/start action.
[08:36:48] <scott_gonzalez> And ignore events of other types until up/stop/cancel.
[08:37:17] <scott_gonzalez> OR, ideally stop using Touch, and write a shim for Pointer Events :-)
[08:37:58] <scott_gonzalez> Which is something we plan on doing in jQuery.
[08:38:11] <JamesMGreene> That would be nice
[08:38:19] <JamesMGreene> I'm basically making a shim for selection events
[08:38:31] <JamesMGreene> selectstart, select, selectchange
[08:44:14] <JamesMGreene> There isn't any way to directly correlate a mouse event as being triggered by a touch event, is there?
[08:44:28] <JamesMGreene> ^ scott_gonzalez
[08:44:39] <JamesMGreene> Like a shared ID or anything
[08:45:02] <JamesMGreene> I believe Touch events have an ID but I don't think the corresponding (default) Mouse events get it thereafter, do they?
[08:45:22] <DaveMethvin> JamesMGreene try scott's suggestion of listening for either pointer or touch and carry out the action with the corresponding evnets
[08:45:32] <DaveMethvin> then you don't care about the other
[08:47:23] <scott_gonzalez> Right, there's no way to correlate them. You need to track it on your own.
[08:47:38] <scott_gonzalez> So on touchstart, you need to set a flag that says to ignore the upcoming mousedown.
[08:48:24] <DaveMethvin> or just don't listen to mouse events perhaps during that sequence, only touch events
[08:48:39] <DaveMethvin> unless there's some reason you have to mix and match, which would suck
[08:48:43] <scott_gonzalez> DaveMethvin: The problem is that you need to listen to all potentional start events.
[08:48:54] <scott_gonzalez> Becuase you don't know which one will trigger first.
[08:49:42] <DaveMethvin> i was thinking you'd unbind it, but a flag with "i'm in the middle of a select" is probably easier
[08:50:14] <scott_gonzalez> Yup, for UI we use a flag that says "I'm in the middle of an interaction".
[08:50:19] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/interactions/ui/jquery.ui.interaction.js
[08:50:31] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/interactions/ui/jquery.ui.interaction.js#L68
[08:56:09] <JamesMGreene> Hmm
[08:58:33] <JamesMGreene> So would you just mark an interaction as started on both touchstart and mousedown?
[08:58:52] <JamesMGreene> i.e. touchstart -> on, touchend -> off, mousedown -> on, mouseup -> off?
[08:59:04] <DaveMethvin> you'll need to know which one started it
[08:59:07] <DaveMethvin> so you can ignore the other
[08:59:24] <JamesMGreene> Right, but how to correlate them...?
[08:59:49] <DaveMethvin> you dont need to do you?
[08:59:57] <JamesMGreene> How else can I ignore the other?
[09:00:20] <DaveMethvin> touchstart --> "touching"
[09:00:29] <DaveMethvin> on mousedown, if touching then ignore
[09:00:57] <JamesMGreene> Sure but I have to mark the touch as ended at some point, when would that hook in?
[09:01:06] <DaveMethvin> in your touchend handler
[09:01:10] <DaveMethvin> which sees you are touching
[09:01:15] <DaveMethvin> and sets it to "off"
[09:01:24] <JamesMGreene> But that fires before the mousedown
[09:01:30] <JamesMGreene> Therefore mousedown will look like a new event
[09:01:38] <DaveMethvin> not if you're touching
[09:01:51] <JamesMGreene> Depends on the type of touch
[09:02:11] <JamesMGreene> a tap/click goes touchstart, touchmove, touchend, mousedown, mousemove, mouseup, click
[09:02:37] <DaveMethvin> in that case you'll need a timer
[09:03:27] <DaveMethvin> so you can ignore the mousedown
[09:03:57] <DaveMethvin> i have the feeling this type of interaction has been done many times before
[09:04:11] <DaveMethvin> but i don't have a link :D
[09:07:03] <JamesMGreene> Yeah, I've looked... they're all questionable
[09:07:07] <JamesMGreene> even with the timer
[09:07:18] <JamesMGreene> since you don't know what other handlers are going to be firing and taking up time
[09:07:38] <JamesMGreene> This is why the Touch event API _sucks_
[09:08:32] <JamesMGreene> Well, moreover, I'd blame Blackberries or whatever for not choosing to send uniform Touch or Mouse events rather than opting to send one or the other in different scenarios (wtf)
[09:10:15] <JamesMGreene> Without that monkeywrench, the whole bind-to-one-or-the-other technique would work out just fine
[09:11:58] <JamesMGreene> scott_gonzalez: why no XHTML?
[09:12:26] <scott_gonzalez> Because XHTML is dumb.
[09:12:27] <JamesMGreene> I hate the non-self-closing singletons =(
[09:12:42] <scott_gonzalez> I hate XHTML more than you hate non-self-closing singletons.
[09:12:54] <scott_gonzalez> And my opinion wins because it's written in our style guide :-)
[09:12:55] <scott_gonzalez> :-P
[09:12:56] <JamesMGreene> Well, I also hate attributes with implicit values
[09:13:11] <JamesMGreene> So those combined get me closer to your hatred levels
[09:14:08] <JamesMGreene> My only real beef with XHTML is probably the URL escaping (i.e. &amp;) in hrefs
[09:14:16] <JamesMGreene> What's yours?
[09:15:12] <scott_gonzalez> The fact that it's retarted because nobody serves XHTML as XML.
[09:15:24] <scott_gonzalez> s/retarted/retarded/
[09:15:46] <DaveMethvin> well, not "nobody", just pedants who will let you know when you don't do it right
[09:16:04] <DaveMethvin> but 99% of all XHTML docs are not XHTML and don't validate
[09:25:18] <JamesMGreene> true
[09:25:34] <JamesMGreene> So you prefer HTML to lower the standards? :)
[09:25:49] <DaveMethvin> i prefer that people use honest doctypes
[09:25:50] <JamesMGreene> scott_gonzalez: Responded to all of your PR comments
[09:26:04] <scott_gonzalez> HTML doesn't have lower standards.
[09:26:22] <scott_gonzalez> Some people choose to not follow the rules.
[09:26:33] <scott_gonzalez> That slash doesn't help you write valid HTML.
[09:26:57] <scott_gonzalez> What HTML has is error handling.
[09:27:09] <scott_gonzalez> You should avoid the error handling parts of HTML.
[09:27:56] <DaveMethvin> in some ways i wish html5 had just defined their errror handling to be, "show a blank page" :D
[09:28:07] <JamesMGreene> lol
[09:28:10] <JamesMGreene> that'd be awesome
[09:28:15] <DaveMethvin> dump contents of console onto screen
[09:28:51] <JamesMGreene> I can't imagine how non-self-closing singletons don't incur the error handling behaviors
[09:29:13] <DaveMethvin> because html5 knows which elements can have children
[09:29:24] <JamesMGreene> the always-singletons like <br>, sure, but what about <div/>?
[09:29:39] <JamesMGreene> (and random shit like that)
[09:29:41] <DaveMethvin> that isn't valid in xhtml you know
[09:30:01] <DaveMethvin> any element that can potentially have children can't be quick-closed
[09:30:28] <JamesMGreene> O_o
[09:30:33] <DaveMethvin> that was a big part of html5, consistent handling of invalid docs, so that the same people who claim javascript doesn't need semicolons can leave crap out
[09:30:43] <JamesMGreene> That's news to me
[09:31:02] <JamesMGreene> Not very XML-like, is it, then?
[09:31:24] <DaveMethvin> it's trying to convey whether the element can have children with the syntax
[09:31:53] <DaveMethvin> whereas with html we have the semantics of html to tell us all that juicy info
[09:32:24] <JamesMGreene> hrm
[09:32:46] <JamesMGreene> Yeah, I guess it's the error handling scenarios that make it nasty then, as scott_gonzalez was saying
[09:33:27] <DaveMethvin> less nasty than they used to be since they're sancitified in the spec, but really it's very similar to the semicolon insertion issue
[09:33:49] <scott_gonzalez> Indeed.
[09:33:54] <scott_gonzalez> Semicolons are not optional in JS.
[09:34:06] <scott_gonzalez> If they were, the JS engine wouldn't insert them :-)
[09:34:43] <scott_gonzalez> It's just built-in error handling. Best not to hit that part of the interpreter.
[09:35:27] <JamesMGreene> Indeed
[09:35:37] <JamesMGreene> I'll never understand the anti-semi-colonists
[09:40:24] <JamesMGreene> Also: why do we do `window.location = src;` instead of `window.location.href = src;`?
[09:40:45] <JamesMGreene> (In QUnit core and Composite, at least)
[09:40:47] <scott_gonzalez> Because MAGIC
[09:41:09] <DaveMethvin> yeah as long as you don't GET it that way since it won't be a string
[09:41:09] <scott_gonzalez> Probably 90% of devs use window.location directly.
[09:41:33] <JamesMGreene> Popularity doesn't make it a best practice :-P
[09:42:03] <DaveMethvin> i think he's got you there scott_gonzalez :P
[09:42:22] <DaveMethvin> although i approve of eithre approach above since they both end in semicolon
[09:42:28] <JamesMGreene> lol
[09:43:27] <scott_gonzalez> Yeah, I usually pull out the 90% stat for bad things.
[09:45:50] <scott_gonzalez> DaveMethvin: https://twitter.com/scott_gonzalez/status/302111333061627904 :-P
[09:45:55] <b-ot> scott_gonzalez: @scott_gonzalez: @unscriptable @juandopazo @jrburke /me rolls eyes
[09:46:32] <DaveMethvin> "I'm too lazy to fish, can you serve me a fish?"
[09:47:04] <DaveMethvin> Don't the ASP.NET guys have a package manager for this?
[09:47:23] <scott_gonzalez> nuget?
[09:47:33] <DaveMethvin> yeah http://docs.nuget.org/docs/start-here/using-the-package-manager-console
[09:47:35] <scott_gonzalez> I assume it doesn't handle individual widget dependencies.
[09:47:45] <DaveMethvin> oh just file chunks
[09:47:59] <scott_gonzalez> I mean, I don't think anyone is posting individual widgets as nuget packages.
[09:48:07] <scott_gonzalez> Just all of UI as a single package.
[09:48:39] <DaveMethvin> can you tell me again what's good about breaking  your project into 20-30 files and pulling them down individually?
[09:49:51] <DaveMethvin> if you do a custom build of UI what's wrong with keeping that in one file?
[09:50:24] <leobalter> maybe window.location is faster than window.location.href - in a ridiculous fraction of seconds.
[09:50:44] <scott_gonzalez> DaveMethvin: Because then you're not part of the cool kids club.
[09:50:53] * DaveMethvin sniff
[09:50:56] <scott_gonzalez> You need to go through a 3 year cycle of changing everything just to find out that it was a bad idea.
[09:51:24] <scott_gonzalez> It's like all the awesome blog posts that say "GUYS WE MADE OUR SITE SO MUCH FASTER! ALL WE HAD TO DO WAS MOVE THE RENDERING BACK TO THE SERVER!!!!11!!!"
[09:51:35] <DaveMethvin> lol
[09:52:00] <scott_gonzalez> I want to punch people when I read those.
[09:52:13] <scott_gonzalez> Yes, thanks for giving me a shitty experience for years Twitter.
[09:52:16] <Krinkle> JamesMGreene: https://github.com/blog/967-github-secrets
[09:52:47] <DaveMethvin> i just don't think we've gotten this js modularity thing right so far
[09:52:56] <JamesMGreene> Thanks Krinkle
[09:52:58] <DaveMethvin> i've worked on a couple of amd projects doing consulting
[09:53:19] <DaveMethvin> they all were declaring deps for things they didn't even use in the module
[09:53:41] <DaveMethvin> perhaps some better lint settings would have helped, i dunno
[09:53:52] <scott_gonzalez> When I was working on Aloha, they were missing deps and stuff just happened to work because everything got shoved on to a global anyway.
[09:54:12] <DaveMethvin> oh yeah, saw that with some jquery deps in that project
[09:54:21] <scott_gonzalez> So I told them I wasn't going to attach any of my code to their existing aloha global.
[09:54:22] <Krinkle> jzaefferer: I finished the projects refactoring, got 2 branches (that I pushed to Krinkle/testswarm). Still need to merge those into eachother and do one more rebase but looking good so far.
[09:54:29] <scott_gonzalez> And if they wanted to use it, they had to use AMD properly.
[09:54:44] <Krinkle> jzaefferer: Couple interesting points: Much easier to get info from the db now due to less inter-table complexities
[09:54:44] <scott_gonzalez> I think after that, they cleaned up a lot of their deps.
[09:54:46] <DaveMethvin> you MONSTER!
[09:55:00] <scott_gonzalez> But I haven't followed any of the development after I rewrote their UI :-P
[09:55:07] <Krinkle> jzaefferer: and (as a result likely) mysql perf seems to be measurably better, even on the small swarm I have locally
[09:55:31] <scott_gonzalez> I changed it from Ext to jQuery UI.
[09:55:42] <scott_gonzalez> I think that code is in their main branch now.
[09:58:07] <scott_gonzalez> I thought airlines were claiming that they weren't making any money and that's why ticket prices were going up so much?
[09:58:33] <scott_gonzalez> So why is American Airlines touting the fact that they expect to make $40B in revenue this year?
[09:58:39] <Krinkle> jzaefferer: I've split off a few unrelated changes in the branch and pushed them ahead yesterday to jquery/testswarm.
[09:59:42] <JamesMGreene> So what's the deal with using `.src` (or other property) vs. `.getAttribute("src")`? Does jQuery prefer it a particular way? Does it ever matter to any [old] browsers?
[10:00:16] <DaveMethvin> DOM0 doesn't generally care about props vs attrs
[10:00:56] <JamesMGreene> I expect for `src` that it may vary between relative vs. absolute URLs but that shouldn't matter
[10:01:02] <DaveMethvin> class, id, src, those props are usually always string properties even when the attr is not there
[10:01:04] <scott_gonzalez> oh boy https://twitter.com/unscriptable/status/302114543058956288
[10:01:05] <b-ot> scott_gonzalez: @unscriptable: @scott_gonzalez please pick something (AMD, CJS, whatevs) and stop making the rest of us do your job. it’s not hard to add support
[10:01:28] <DaveMethvin> whoa
[10:01:57] <JamesMGreene> It's not hard to add support for a single file but when jQuery's whole ecosystem relies on the jQuery global you're kinda screwed
[10:02:08] <JamesMGreene> (IMHO)
[10:02:27] <DaveMethvin> that's the point, the *ecosystem* depends on it
[10:02:33] <DaveMethvin> we can make a quick commit to change things
[10:02:36] <DaveMethvin> and break the world
[10:02:42] <DaveMethvin> who would that benefit
[10:02:49] <DaveMethvin> the small number of people using AMD
[10:03:30] <DaveMethvin> lol! "We picked one, it's called <script>"
[10:03:40] <scott_gonzalez> :-)
[10:05:53] <rwaldron> scott_gonzalez my my...
[10:05:58] <rwaldron> that's hostile.
[10:06:35] <scott_gonzalez> rworth: People saying that UI *must* have AMD is hostile.
[10:06:40] <scott_gonzalez> I hate this viral BS.
[10:06:48] <rwaldron> that's what I mean
[10:06:52] <rwaldron> scott_gonzalez: &
[10:06:53] <scott_gonzalez> jrburke even solved this problem.
[10:06:55] <rwaldron> dammit
[10:06:57] <rwaldron> ack
[10:07:04] <scott_gonzalez> Oh you mean his tweet was hostile.
[10:07:05] <scott_gonzalez> Yeah
[10:07:07] <rwaldron> scott_gonzalez 1. that's what I meant. 2. I'm rwaldron ;)
[10:07:13] <rwaldron> <3
[10:07:17] <scott_gonzalez> stupid autocomplete
[10:07:21] <rwaldron> yeah, his tweet was insanely hostile
[10:07:33] <scott_gonzalez> indeed
[10:08:13] <DaveMethvin> how did we get in the business of supporting all the existing module schemes (purposefully not using the word "standards" here) ??
[10:11:05] <scott_gonzalez> I partly blame you for adding AMD to core :-P
[10:11:37] <DaveMethvin> i really didn't mind it at all, but we're in a different situation than UI
[10:12:04] <DaveMethvin> it's just a few lines of code and a big-ass comment to us
[10:12:06] <scott_gonzalez> Yeah, very different.
[10:12:17] <scott_gonzalez> You have no module and no deps
[10:12:24] <scott_gonzalez> We have ~40 modules and lots of deps.
[10:13:19] <DaveMethvin> altho there are ppl asking that we break core into a dozen or more twisty little amd modules, just so we can avoid downloading 2-3k
[10:15:02] <JamesMGreene> Plus jrburke sent the PR for core ;)
[10:15:34] <DaveMethvin> well that's not even half the battle, several people were opposed to it
[10:15:44] <scott_gonzalez> Yeah, but he also subsequently built-in the require.js shim functionality.
[10:15:57] <JamesMGreene> Yeah, shim is nice
[10:16:11] <scott_gonzalez> Which, in my mind, is the correct answer to everyone asking for AMD in UI.
[10:16:19] <JamesMGreene> yup, agreed
[10:16:33] <DaveMethvin> as i've said before, using amd as a dependency tracker isn't such a bad idea, i just don't get why you'd want to deploy production code that way ... i guess that's why there's r.js
[10:17:05] <JamesMGreene> jdalton has a nice make-it-work-for-every-module-system wrapper for LoDash. Have you guys looked at that?
[10:17:17] <JamesMGreene> Again, having zero deps itself
[10:17:24] <JamesMGreene> jQuery UI is trickier
[10:17:27] <DaveMethvin> yes, always makes things easier
[10:18:26] <JamesMGreene> So going back to my piddly issue: does jQuery prefer that I use `.src` the DOM property over `.getAttribute("src")`?
[10:18:40] <scott_gonzalez> JamesMGreene: The question isn't whether we CAN support all of the module systems.
[10:19:00] <scott_gonzalez> It's whether we want the bytes.
[10:19:05] <DaveMethvin> JamesMGreene i'd say use the .src property there
[10:19:13] <scott_gonzalez> On top of that, it's extra work for us.
[10:19:19] <gnarf> man, when rwaldron calls a tweet hostile, look out ;)
[10:19:20] <scott_gonzalez> We'd need to rip out all that info for our custom builds.
[10:19:20] <JamesMGreene> I dunno, I feel like module systems have hit critical mass and that ES6 is the only new one left
[10:19:28] <JamesMGreene> Agreed with gnarf, lol
[10:19:33] <DaveMethvin> scott_gonzalez: but it's your JOB man!
[10:19:43] <scott_gonzalez> My job is to wait for a standard :-)
[10:20:13] <DaveMethvin> that does it, i'm tired of waiting and we're going back to Quirks Mode. Everyone supports it
[10:20:28] <DaveMethvin> brb
[10:20:36] <scott_gonzalez> FINALLY! I've been waiting to save those docytpe bytes.
[10:20:51] <scott_gonzalez> You know I have to pay that cost on EVERY SINGLE PAGE?!?
[10:21:17] <scott_gonzalez> This is the true draw to SPAs, you don't have to send "<!doctype html>" down the wire for each new page :-P
[10:21:30] <leobalter> AMD virality make JS looking like "the new Perl"
[10:22:06] <scott_gonzalez> If you think about it, AMD and GPL seem similar.
[10:22:23] <leobalter> huge pack of new functionalities. Hard to adopt them all so fast.
[10:23:38] <JamesMGreene> Speaking of standards, DaveMethvin I don't suppose you ever talked to the IE folks (or HTML spec editors) about that `change` event bug, did you? http://bugs.jquery.com/ticket/11556
[10:23:59] <JamesMGreene> where all non-IE browsers will fire `change` on Enter key pressed despite it not being it the spec
[10:24:16] <JamesMGreene> I never got around to it
[10:25:08] <JamesMGreene> leobalter: How do you figure? Perl is a write-only language
[10:26:11] <JamesMGreene> brb
[10:26:51] <DaveMethvin> don't you be talkin bad bout Perl
[10:27:30] <leobalter> JamesMGreene: I've just talked about this with a Perl dev here. I was saying how hard is being to adapt myself to use AMD and what are comming with the "new" JS. He remembered the changes from Perl 4 to 5
[10:27:44] <leobalter> DaveMethvin: I love Perl (and JS)
[10:30:08] <leobalter> scott_gonzalez++ on "My job is to wait for a standard". One liner win.
[10:35:11] * JamesMGreene shrugs
[10:35:11] <b-ot> JamesMGreene: ¯\_(ツ)_/¯
[10:35:15] <JamesMGreene> AMD makes total sense to me
[10:35:32] <scott_gonzalez> It makes sense to me to.
[10:35:38] <scott_gonzalez> So do other module systems.
[10:36:05] <JamesMGreene> Perhaps John's problem is that he is not using RequireJS AMD ;)
[10:36:14] <JamesMGreene> The clearly superior form of AMD
[10:39:16] <JamesMGreene> DaveMethvin: Any update on that bug?
[10:39:22] <JamesMGreene> Guessing not
[10:39:43] <DaveMethvin> i passed it on and asked their spec guys to talk to the other spec guys
[10:40:07] <DaveMethvin> b/c even though i like Chrome's behavior it seems that IE is doing it right according to current spec
[10:40:18] <JamesMGreene> agreed
[10:40:47] <DaveMethvin> so my suspicion is that it has entered a black hole and nothing more will happen
[10:40:56] <DaveMethvin> i think i even filed a chrome bug
[10:40:57] <JamesMGreene> agreed
[10:41:13] <JamesMGreene> It was every browser _but_ IE, though, not just Chrome
[10:41:42] <JamesMGreene> iirc
[10:49:33] <JamesMGreene> scott_gonzalez: Can you answer my question regarding your decrementing loop comment here? https://github.com/jquery/qunit/pull/408/files#L3R103
[10:49:34] <b-ot> JamesMGreene: Pull request #408 by JamesMGreene (1w 5d 20h 15m 20s): QUnit Composite - First round of major cleanup
[10:51:26] <scott_gonzalez> The order definitely doesn't matter for the DOM.
[10:51:34] <scott_gonzalez> So it should follow other loops and increment.
[10:51:55] <scott_gonzalez> In fact, gibson042 would even give you a specific format to use for all loops.
[10:52:30] <JamesMGreene> I'm open to that
[10:52:45] <JamesMGreene> It was more of a miscalculated micro-perf-optimization
[10:52:57] <JamesMGreene> (as I explained in my comment)
[10:53:52] <gnarf> var i = 0, length = ....; for (;i<length;i++) i think is the "standard" iterator in jQuery code that gets gzipified
[11:09:38] <JamesMGreene> Do you guys put spaces around your semi-colons in the for loop conditions?
[11:09:44] <JamesMGreene> jQuery is space-crazy, IMHO :)
[11:10:58] <JamesMGreene> Looks like a "no"
[11:12:40] <JamesMGreene> So I was just thinking about the `window.location = src;` vs. `window.location.href = src;` and I'm curious if someone did it to save bytes
[11:13:09] <JamesMGreene> (though it is QUnit, not jQuery)
[11:13:26] * JamesMGreene shrugs
[11:13:26] <b-ot> JamesMGreene: ¯\_(ツ)_/¯
[11:13:29] <DaveMethvin> it doesn't matter to me either way
[11:13:32] <JamesMGreene> I'm changing the one in composite to .href
[11:19:32] <snover> DaveMethvin: i guess it is dangerous to have an opinion these days
[11:20:45] <JamesMGreene> argh, frackin' merge commits
[11:28:36] <JamesMGreene> OK, scott_gonzalez, all cleaned up: https://github.com/jquery/qunit/pull/408/files?w=1
[11:28:37] <b-ot> JamesMGreene: Pull request #408 by JamesMGreene (1w 5d 20h 54m 22s): QUnit Composite - First round of major cleanup
[11:32:59] <dcherman> Krinkle: you around for a sec?  messing around with testswarm locally and having some problems submitting a job
[11:37:49] <JamesMGreene> There isn't any magic string that's antithetic to "use strict", is there? /cc dcherman rwaldron
[11:38:20] <JamesMGreene> like "omg i changed my mind"?
[11:38:30] <rwaldron> huh?
[11:38:34] <dcherman> JamesMGreene: i dont think i'm the dherman you think i am.....but....i dont think so
[11:38:35] <rwaldron> no...
[11:38:43] <rwaldron> dcherman I was about to say the same
[11:38:57] <rwaldron> but then didnt want to dismiss you as a possible candidate for this discussion
[11:39:23] <JamesMGreene> lol oops :)
[11:39:34] <rwaldron> funny story though...
[11:39:46] <JamesMGreene> Just thought it was an added middle initial
[11:40:08] <JamesMGreene> And yeah, I didn't think so... darn
[11:40:29] <rwaldron> dcherman's github commit and PR comments arrive in my mailbox with "dherman" as the github user that sent them
[11:40:55] <JamesMGreene> So if there is a block of tests that I want to test in non-strict mode, I'll just need to keep them in a separate closure than my "use strict" one
[11:41:02] <rwaldron> but github's message sending is messed up anyway. all messages always look like they came from the person who sent the first messafe
[11:41:31] <JamesMGreene> Yeah, I've noticed that too
[11:43:21] <rwaldron> JamesMGreene yes. strict mode is function scoped
[11:43:31] <rwaldron> so just make a non-strict function scope
[11:43:37] <rwaldron> also this might be interesting
[11:43:38] <rwaldron> https://mail.mozilla.org/pipermail/es-discuss/2012-November/026368.html
[11:58:34] <scott_gonzalez> HAHAHAHAHAHAAHA http://twitamore.com/scott_gonzalez
[11:59:02] <DaveMethvin> WHY DON'T YOU MARRY HIM
[11:59:18] <scott_gonzalez> Might as well, we're already fighting like a married couple. :-P
[11:59:29] <DaveMethvin> hah
[13:28:39] <carldanley> ajpiano: have a sec for PM in regards to Portland, OR conf?
[13:29:15] <ajpiano> sure
[13:34:20] <sizcommit> 01[13sizzle01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/H-HeDg
[13:34:20] <sizcommit> 13sizzle/06master 14b576034 15Jonathan Sampson: Avoid use of dynamic attributes with innerHTML. Close gh-190....
[21:29:17] <JamesMGreene> Very quiet day in #jquery-dev
[21:29:33] <JamesMGreene> Minus the AMD dramarama
[21:45:33] <JamesMGreene> rwaldron How does one reply to the es-discuss list without already being a send-me-every-single-email subscriber?
[21:46:30] <JamesMGreene> Seems like a broken system if you can't reply to an arhvieeeeeeeeeeeee(999999999999999e------------------------W
[21:46:43] <JamesMGreene> whoops, sorry about that
[21:46:44] <JamesMGreene> cat
[21:47:00] <JamesMGreene> ...if you can't reply to an archived email*
