[11:17:21] <scott_gonzalez> DaveMethvin: Do you know what kind of logic you want for checking Sizzle versions?
[11:17:52] <scott_gonzalez> We can check for latest tag if we're confident Sizzle is constantly being released.
[12:08:12] <DaveMethvin> scott_gonzalez: sorry, still in meetings ... I *think* we would always like to get the latest off master but would like input from the team esp timmywil and gibson042 
[12:09:11] <DaveMethvin> the problem is deeper than that, since we seem to have gone several weeks without updating the Sizzle dep in jquery
[12:09:15] <timmywil> I think it'd be fine to automate a check, but not enforce it.
[12:09:42] <scott_gonzalez> The check can always look at a command line flag to disable it.
[12:09:44] <gibson042> I don't want to say anything definitive until we decide what going from Sizzle 1.x to Sizzle 2.x means
[12:09:48] <DaveMethvin> if it doesn't enforce, the release would go ahead which would have been wrong for this case
[12:10:05] <gibson042> but within a given major, we should always use the latest tag
[12:10:24] <timmywil> DaveMethvin: it would still be right, because it warned you and went ahead anyway
[12:10:36] <DaveMethvin> i just wouldn't want the first run of unit tests to be the one that happens when we do a build for release
[12:10:47] <timmywil> gibson042: not necessarily true
[12:11:39] <timmywil> Sometimes Sizzle is ahead of jQuery.
[12:11:54] <gibson042> when would it be false? semver prohibits backwards incompatibility between 1.x and 1.y
[12:12:53] <timmywil> It's not about back-compat.
[12:13:47] <timmywil> It happened last release. Someone updated Sizzle when they shouldn't have.
[12:14:06] <DaveMethvin> my main concern is that we let jquery's sizzle dep get stale for quite a while and didn't catch it before release ... we need to fix that
[12:14:31] <timmywil> yea, and I think a warning would be enough
[12:14:36] <gibson042> +1
[12:14:50] <DaveMethvin> i'd prefer an overridable error
[12:15:22] <DaveMethvin> otherwise m_gol  would have shipped and some one-line message would have been easily missed?
[12:16:30] <timmywil> "The latest version of Sizzle is 1.16.0. Would you like to update Sizzle to the latest version?"
[12:16:39] <timmywil> I don't think you'd miss that.
[12:16:41] <gibson042> if I understand correctly, the root cause is not an out-of-date dependency but that http://bugs.jquery.com/ticket/14901 was closed without updating it
[12:17:07] <DaveMethvin> but you're releasing at that point, so if you update you're running unit tests for the first time on that combo ... right?
[12:17:30] <DaveMethvin> we would want to wait for the result of the unit tests before doing the releas
[12:17:45] <timmywil> so then it would stop releasing
[12:18:15] <timmywil> I mean, not checking the tests is a problem either way
[12:18:57] <DaveMethvin> "Fatal error: You're not using the HEAD of sizzle/master. If you meant to do this, use --whatev to override."
[12:19:17] <timmywil> well, it should not be the HEAD
[12:19:22] <gibson042> bah
[12:19:24] <timmywil> ever
[12:19:39] <gibson042> I'm taking off for a bit, but will check back later on what color the shed gets painted ;)
[12:20:56] <timmywil> So, there's two things here. 1. Sizzle has its own versions now and has its own releases that are considered stable. jQuery has been including Sizzle with tags (not shas) for a while now.
[12:21:49] <DaveMethvin> that's why i asked, didn't know the right color! I think usually we want the latest on master but could override, and as gibson said we may need to change this for 1.12/2.2 if we end up with two sizzles
[12:22:39] <timmywil> like I said, not the latest on master. the latest tag. This way, development can continue on Sizzle's master branch without worrying about infecting jQuery.
[12:22:57] <timmywil> Tags are checkmarks saying that all tests pass.
[12:23:02] <DaveMethvin> worksforme
[12:23:38] <DaveMethvin> now, this is just the "oh shit" test for jquery-release telling us that sizzle didn't get updated in jquery
[12:23:56] <DaveMethvin> how do we avoid having this happen during development?
[12:24:25] <timmywil> Tickets have historically served that purpose.
[12:25:12] <DaveMethvin> sorry have to return to a meeting
[12:27:34] <timmywil> We should have had an open ticket for WWA security that closed with a Sizzle update.
