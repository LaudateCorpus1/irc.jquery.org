[01:35:19] <snover> wrote a rudimentary qunit interface for intern today. doesn‚Äôt quite work the same because of qunit‚Äôs assertions model but should be api-compatible according to the api docs. just wrap your existing qunit tests with define([ 'intern!qunit' ], function (QUnit) {}) and you‚Äôre good to go. in a branch until i can write some unit tests. https://github.com/theintern/intern/blob/qunit/lib/interfaces/qunit.js üëç 
[06:03:08] <jqcommit> [13qunit] 15agcolom opened issue #695: Add first year to copyright note in addition to the current year 02http://git.io/N8SXvQ
[10:16:04] <scott_gonzalez> ajpiano: If you go clean up the battery spam on Bower, we can probably solve this package manager problem pretty easily :-P
[10:16:34] <snover> #NFL!
[10:16:47] <arschmitz> ajpiano: DO IT!
[10:17:27] <snover> Buy more turkey #Thanksgiving
[10:17:28] <ajpiano> scott_gonzalez wowow
[12:25:22] <scott_gonzalez> DaveMethvin: AHHH!!!!!!! https://github.com/jquery/jquery-mobile/issues/7296#issuecomment-64705414
[12:25:47] <arschmitz> scott_gonzalez: thats the issue i was talking about on skype!
[12:26:03] <DaveMethvin> ok i have a solutoin
[12:26:25] <DaveMethvin> commit dependencies and /dist files on every build .... donezo
[12:26:34] * DaveMethvin runs away
[12:26:41] <scott_gonzalez> That's the Ben Alman solution!
[12:49:26] <snover> DaveMethvin: no no, the solution is to hold everyone‚Äôs hands forever
[12:50:42] <snover> like a mama bird digesting all the food for her babies
[12:51:37] <DaveMethvin> oh no problem with that, i've already been honing my vomiting skills with all these tickets
[12:51:56] <scott_gonzalez> There's the comment I was waiting for :-)
[12:52:49] <DaveMethvin> and it's not just us
[12:53:08] <DaveMethvin> every repo i monitor seems to have one of these per week: https://github.com/petkaantonov/bluebird/issues/380
[13:01:03] <snover> people complain about how Dojo makes you use AMD for everything, but you know what we never ever have? problems like these
[13:01:22] <snover> i will be so happy when ES6 modules are a thing that work everywhere
[13:03:02] <DaveMethvin> do you think you'll live that long?
[13:03:08] <snover> haha. ummm
[13:03:13] <snover> 50/50 at best
[13:03:24] <snover> i‚Äôm pretty ready to go kill myself
[13:03:34] <DaveMethvin> i want to use it in my pants, do you support trowserify? I thought not.
[13:03:54] <snover> can‚Äôt get good stuff added to typescript because they‚Äôre too busy having to work to update their parser and typing systems to support all the syntactic crap that was added
[13:04:10] <DaveMethvin> i understand all the confusion, because it's a mess out here
[13:04:29] <DaveMethvin> it just seems like we're spending all our focus on plumbing rather than design
[13:04:29] <snover> object destructuring definitely doesn‚Äôt turn your code into spaghetti /s
[13:05:07] <DaveMethvin> destructuring is one of the syntax breaks i'm happy about, i think it will make code a lot more readable
[13:05:11] <DaveMethvin> especially for arguments
[13:05:21] <DaveMethvin> but it will be a decade
[13:05:36] <snover> let { a: x, b: { c: y } } = { a: 1, b: { c: 2 } };
[13:05:48] <snover> what part of that is readable?
[13:06:12] <DaveMethvin> well that would be unusual to do that with a literal on the right side
[13:06:22] <DaveMethvin> at least I *think* it would
[13:06:29] <snover> let x = obj.a; let y = obj.b.c;
[13:06:51] <snover> object destructuring, like fat arrow, buries the important information in noise
[13:07:15] <DaveMethvin> oh yeah? well you're a poo-poo head
[13:07:17] <snover> what variables are actually being set? well, now you have to read an entire object structure to figure out the answer
[13:07:32] <DaveMethvin> pulling stuff out of a complex object has never been easy
[13:07:49] <snover> a ?. operator would be much better
[13:08:22] <snover> or whatever they were proposing for ignoring undefined objects
[13:09:45] <snover> like, seriously, how often are you setting variables from complex deeply nested objects to the point where the core language should have extra syntax to help you do that
[13:09:45] <DaveMethvin> well as someone pointed out, maybe scott_gonzalez, my favorite ?? operator isn't needed now that we have destructuring of formal params and default value assignment 
[13:09:55] <snover> that is the part that boggles my mind
[13:10:38] <snover> how often do you have runtime errors? ALL THE TIME. does ES6 include a standard way for getting stack traces? NOPE
[13:10:50] <DaveMethvin> i used  `my ( $a, $b ) = @array_thing` a lot in perl years ago
[13:11:04] <snover> ah, perl, the bastion of readable code!
[13:11:07] <DaveMethvin> now that I'd like to see standardized i agree
[13:11:56] <snover> Perl6 is probably the only spec that will take longer than ES6
[13:12:24] <DaveMethvin> but if you're saying that language designers gotta design languages, regardless of whether said design is actually needed or not ... well you're right imo
[13:12:43] <snover> i don‚Äôt mind, but i wish they would do it like coffeescript
[13:12:46] <snover> compile down
[13:13:13] <snover> so if you want to have your haskell runs in browsers ultra pure monadic programming language, you can do it
[13:14:15] <DaveMethvin> it is interesting how js features are taking two very different turns ... asm.js to the low end and lots of high end features to the high
[13:14:47] <DaveMethvin> but given how slowly things change on the browser side, it seems we're gonna be relegated to transpilers forever more
[13:15:11] <snover> well so i saw an article about how microsoft changed windows so that apps need to have manifests that opt into the newer APIs otherwise the OS lies and tells them they‚Äôre on an older OS
[13:15:17] <snover> and i am like
[13:15:18] <jqcommit> [13api.jquery.com] 15AurelioDeRosa opened pull request #599: Update jQuery.getJSON.xml (06master...06patch-5) 02http://git.io/f4MomA
[13:15:19] <snover> WHY CAN WE NOT DO THAT
[13:15:57] <DaveMethvin> that's basically the old <x-ua-compatible> tho?
[13:15:57] <snover> i mean i realise the answer is because there was no thought given to how to safely isolate code from different sources, so we have impossible mash-ups that wouldn‚Äôt actually even work if someone were designing the web from scratch today
[13:16:19] <DaveMethvin> which didn't work and they are dropping
[13:16:33] <DaveMethvin> and by "work" i mean it just confused things further
[13:16:35] <snover> no, x-ua-compatible was ‚Äúi want you to use this old broken version‚Äù
[13:17:02] <snover> opt-in is like how you had to use <script type="text/javascript;version=1.7"> to get the array destructuring, etc. in firefox
[13:17:51] <DaveMethvin> over time though, you end up needing to parse many different versions of js, which doesn't seem fun
[13:18:01] <snover> yes and no
[13:18:05] <snover> it‚Äôs true, of course
[13:18:05] <DaveMethvin> and all the js in that tag needs to be compat with that version
[13:18:11] <DaveMethvin> so combine and compress, ugh
[13:18:38] <DaveMethvin> i guess HTTP2 and smarter servers solves some of the multi file request stuff
[13:18:50] <snover> but the thing to me is, when you get to the point where you are going ‚Äúoh, we can‚Äôt ever extend native objects in an appropriate manner ever again because libraries have trounced all over them‚Äù, either now your language is just hacks on top of hacks, or you freeze it and start over
[13:19:14] <snover> or not even ‚Äústart over‚Äù but like
[13:19:24] <DaveMethvin> well that extensibility has allowed progress as well
[13:19:32] <snover> you opt into this newer version and the newer version is incompatibly different
[13:19:35] <snover> like 'use strict'
[13:19:43] <snover> except less haphazard
[13:20:10] <snover> anyway i guess my point is there is precedent for this problem
[13:20:18] <snover> and microsoft seems to have solved it very, very well in windows
[13:20:34] <DaveMethvin> the average person building a web site ends up being an integrator for a bunch of pieces-parts they don't understand
[13:20:44] <DaveMethvin> it's easier in windows because the boundary is the exe file
[13:20:56] <DaveMethvin> what is the boundary in a web page?
[13:21:02] <snover> native apps pull in all sorts of random third-party DLLs
[13:21:18] <DaveMethvin> even then they recognize the dlls
[13:21:41] <DaveMethvin> what would you do to recognize an old dojo that's been squished in with a bunch of other js?
[13:21:50] <snover> dojo.version? :D
[13:22:04] <snover> when you say squished in do you mean builds?
[13:22:38] <DaveMethvin> i'm just saying that it's not as easy to tell the right thing to do when the code can come from anywhere and not clearly identify itself
[13:22:50] <DaveMethvin> think of people who copy/pasta browser sniffs for example
[13:23:17] <snover> people copy/paste all sorts of code in other languages and platforms that don‚Äôt have this ‚Äúwe can‚Äôt ever clean it up‚Äù mentality
[13:23:32] <snover> copy some code for win16s and it isn‚Äôt going to work
[13:23:39] <DaveMethvin> yeah but they don't deliver it from millions of different places
[13:23:56] <DaveMethvin> in millions of different forms
[13:24:13] <snover> android?
[13:24:28] <snover> i mean, i guess i would need to understand what ‚Äúmillions of different forms‚Äù means
[13:24:49] <DaveMethvin> like, each web site gets to determine what they do to dump in the js they run
[13:25:02] <DaveMethvin> maybe it's from a cdn, maybe a combined/compressed file
[13:25:10] <DaveMethvin> or a custom build with just some of the code
[13:26:00] <snover> i don‚Äôt see that as an insurmountable issue, you just need to set some guidelines around interoperability and where the barrier is
[13:26:11] <snover> so, for example, use strict
[13:26:22] <snover> each function opts into that different set of guarantees
[13:26:33] <snover> functions with use strict get the new behaviour, functions without use strict get the old behaviour
[13:27:26] <DaveMethvin> good example, actually, of where it falls apart right now
[13:27:28] <DaveMethvin> https://github.com/jquery/jquery/blob/master/src/intro.js#L40
[13:27:29] <snover> having a workable module system is the first step to really addressing this, since then you can introduce semantics related to how dependencies are imported
[13:27:44] <snover> yeah, i know about the old asp.net code
[13:27:48] <DaveMethvin> it's where old code mixes with new code
[13:28:06] <snover> but the way to solve this isn‚Äôt to just never move forward
[13:28:19] <snover> you say, hey bros, you want to use ancient asp.net? that‚Äôs cool, but you can‚Äôt upgrade any more
[13:28:36] <DaveMethvin> right, it can all be solved but only with a much better set of strict rules
[13:28:46] <DaveMethvin> which we don't have a handle on at the moment
[13:29:02] <snover> it‚Äôs just silly though, because es6 introduces incompatible syntax anyway
[13:29:08] <snover> so you‚Äôre already halfway there
[13:29:29] <snover> you‚Äôve broken the old operating environments, now you just need to define how to interact with legacy code
[13:30:42] <snover> but the committee seems more concerned about reducing how many letters people need to type because their fingers are too tired or i don‚Äôt even
[13:31:21] <snover> i mean i have not heard anyone really talking about how to solve the problem, they just try to introduce things like Array.prototype.contains and it conflicts with mootools and they go ‚ÄúWELL GUESS WE CAN‚ÄôT EVER UPDATE NATIVE OBJECTS‚Äù and then rename it to includes
[13:31:31] <snover> over and over and over
[13:31:38] <DaveMethvin> well it seems like with many of these technologies the specs are saying the real problems (dep management etc) lie outside that spec
[13:31:58] <DaveMethvin> well incrementally it's MUCH easier to rename than completely rethink the problem, right?
[13:32:06] <snover> yeah, exactly. it‚Äôs easier.
[13:32:26] <DaveMethvin> it's hard enough to get people to agree on anything, much less hard anything
[13:32:46] <DaveMethvin> gotta run
[13:45:50] <jqcommit> [13jquery] 15dmethvin closed issue #1698: IE doesn't fire `change` event on `indeterminate` input elements 02http://git.io/yc9P9A
[13:49:15] <jqcommit> [13jquery] 15dmethvin closed issue #1703: Broken link 02http://git.io/DTECbg
[21:47:54] <shobha> hi  it is possibile to count or get the length of li in ol
[21:47:56] <shobha> $("#cart ol:first").find("li").length;
[21:48:22] <shobha> cart is id 
[23:10:38] <doesallmagic2> Project jQuery Core Periodic build #132: STILL UNSTABLE in 14 min: http://jenkins.jquery.com/job/jQuery%20Core%20Periodic/132/
[23:32:41] <jqcommit> [13jquery] 15rhyzx opened issue #1887: data-URI scripts insertion not supported 02http://git.io/ZVh9WQ
