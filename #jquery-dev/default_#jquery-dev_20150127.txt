[05:29:51] <jqcommit> [13jquery] 15brunobatista opened issue #2040: Issue with return of Sizzle.attr 02http://git.io/FZ59
[09:33:20] <jqcommit> [13jquery] 15peyerluk opened pull request #2041: Evaluate scripts in Iframes (06master...06iframe-script-eval) 02http://git.io/FcpA
[09:36:09] <jqcommit> [13jquery] 15peyerluk closed pull request #2041: Evaluate scripts in Iframes (06master...06iframe-script-eval) 02http://git.io/FcpA
[10:19:30] <m_gol> DaveMethvin: ping
[10:21:01] <m_gol> `tell DaveMethvin link to PEP at http://blog.jquery.com/2015/01/26/jquery-foundation-adopts-esprima/ is broken
[10:21:01] <b-ot> m_gol: Iâ€™ll tell DaveMethvin about that.
[10:22:43] <jzaefferer> leobalter scott_gonzalez: you should talk to each other about ES6. For context: Leo was asking if there's something he can look at already
[10:23:15] <jzaefferer> I think this is kind of a starting point: https://github.com/jquery/PEP/issues/154
[10:24:12] <scott_gonzalez> leobalter: Yeah, that's the issue I'm working on. But I'd rather go with ES6 modules if the infrastructure required isn't much more complex.
[10:25:45] <leobalter> the problem on QUnit was the crossdependency between files, maybe it's not the same problem on PEP, it might be way easier to se ES6 Modules there using the 6to5 and browserify (or anything similar)
[10:26:41] <leobalter> scott_gonzalez: I agree 100% with you on using only ES6 Modules (or should we call it ES2015 Modules) :)
[10:27:11] <scott_gonzalez> silly name change
[10:27:55] <leobalter> RequireJS and CommonJS might work for now, but prevents advance. I still hope it doesn't turn to be the same problem with Python 2 to 3
[10:27:56] <scott_gonzalez> I'm pretty sure I didn't see any circular dependencies in PEP when I was doing my initial work.
[10:28:13] <scott_gonzalez> The dependencies seemed pretty straight-forward and fairly simple.
[10:28:19] <leobalter> nice
[10:28:24] <scott_gonzalez> Most modules have 0 or 1 dependency.
[10:29:12] <leobalter> I can try something today and tomorrow, if you want.
[10:30:05] <leobalter> It would be interesting as a step level to keep the work on QUnit. 
[10:33:33] <jzaefferer> step level?
[10:34:20] <jzaefferer> leobalter: would be great if you could give the ES6 treatment a try on PEP. Scott has sooo many things to work on anyway :-)
[10:34:34] <jzaefferer> Hopefully its less messy than QUnit and it can land quickly
[10:35:04] <leobalter> bad translation, maybe. By step level I mean a experience step (working on PEP) before QUnit.
[10:35:07] <scott_gonzalez> Well, I'm changing how PEP works at the same time.
[10:35:57] <scott_gonzalez> What's the deal with browserify in QUnit?
[10:35:58] <leobalter> scott_gonzalez: I can try it, just as a proof of concept, and I can redo it if necessary.
[10:36:38] <leobalter> browserify is not a problem, yet. The root problem is at the circular dependencies.
[10:37:48] <scott_gonzalez> It looks like the QUnit PR incorporates both ES6 transpilation and browserify, though. Is that correct?
[10:37:53] <scott_gonzalez> Is there a reason they were done together?
[10:37:58] <leobalter> the browserify problem is more like how to make it bundle the files.
[10:38:05] <leobalter> yes, there is
[10:38:32] <leobalter> 6to5 only converts the ES6 Modules to CommonJS modules
[10:38:48] <leobalter> Browserify turns CommonJS Modules to a Browser bundle.
[10:41:12] <scott_gonzalez> hmm...
[10:58:00] <jzaefferer> leobalter: I forgot that there's also #pep
[11:14:56] <snover> jzaefferer: not sure why you are talking about qunit with pep since pep is using intern?
[11:35:30] <leobalter> snover they're all JS projects, I don't see why it matters which tool is used to test PEP, if you just catch the conversation up.
[11:48:47] <jzaefferer> snover: what conversation are you referring to?
[11:49:09] <jzaefferer> I think the last time I referred to pep/qunit was before I knew about the plan to use Intern
[12:27:50] <arschmitz> snover: it was just about both things using es6 modules potentially
[12:27:54] <arschmitz> not actually testing with it
[15:12:52] <markelog_____>  ping gibson042, timmywil
[15:13:01] <gibson042> what's up, markelog_____?
[15:13:22] <timmywil> that's a lot of underscores
[15:13:27] <markelog_____> ))
[15:13:34] <markelog_____> yeah, my client is weird like that
[15:13:46] <timmywil> markelog_________________________________________________________________________________
[15:13:51] <markelog_____> gonna make a PR to sizzle updating browsers launchers
[15:14:08] <markelog_____> which will include support for yandex.browser
[15:14:25] <markelog_____> we discuss this couple times on the meeting
[15:14:35] <markelog_____> jquery 3.0 will have support for it too
[15:14:50] <markelog_____> just want to let you know so you wouldn't be suprised
[15:15:25] <gibson042> I've got no problem with yandex.browser
[15:15:59] <markelog_____> okay, good :-)
[15:17:45] <timmywil> thanks markelog_______________________________________________________
[15:41:52] <sizcommit> [13sizzle] 15markelog opened pull request #313: Build: update browser launchers (06master...06launchers-update) 02http://git.io/F8kI
[15:52:16] <sizcommit> [13sizzle] 15mzgol closed pull request #289: Build: Test on iOS 8 & Safari 8; update Chrome 37/38 to 38/39 (06master...06ios8) 02http://git.io/4jUhEw
[16:23:09] <snover> jzaefferer: the conversation from right then, i guess they were just tangential projects
[16:23:14] <snover> project references
[16:23:54] <snover> arschmitz: till vendors all agree to a loader standard there isnâ€™t really a lot of purpose to using es6 modules over amd
[16:24:09] <snover> since tc39 punted on how to actually load in their new module format 
[16:42:59] <arschmitz> snover: yeah the whole es6 module situation is pretty frustrating 
[16:43:46] <snover> suuuuuper frustrating
[16:44:00] <snover> i would love nothing more than to dump everything else for the es6 modules today
[16:44:59] <arschmitz> snover: yeah i was pretty resistant previously to AMD because there was a standard in the works but i think things have gone backwards since then 
[16:45:20] <arschmitz> with the standard
[17:01:16] <sizcommit> [13sizzle] 15markelog opened issue #314: Browserstack and android devices 02http://git.io/F8Vm
[19:41:18] <jqcommit> [13qunit] 15leobalter opened issue #740: return QUnit.url on QUnit < 2.0.0 02http://git.io/F43T
