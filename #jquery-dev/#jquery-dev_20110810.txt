[00:39:02] <aaronmcadam> mornin guys
[06:28:01] <Robbington> Hi can anyone give me some advice on Kwicks accordion Slider, or familiar with it?
[06:28:53] <ajpiano> Robbington: this channel is for discussion of development on jquery, please go to #jquery for actual support
[06:48:48] <aaronmcadam> hiya maqr any more progress today?
[07:47:28] <timmywil> ?tell jrburke If you get a chance, an issue popped up that may have been from the change yesterday.
[07:47:28] <bot-t> timmywil, Okay.
[10:26:01] <necromancer> is it a common practice to define a regular JS object as the "meat & potatoes" of a plugin?
[10:26:17] <ajpiano> yep
[10:33:40] <timmywil> jrburke: you around?
[10:33:57] <jrburke> timmywil: hi
[10:33:58] <bot-t> (2 hours 46 mins ago) <timmywil> tell jrburke If you get a chance, an issue popped up that may have been from the change yesterday.
[10:34:30] <timmywil> jrburke: this may or may not be related.  everything works great except after optimization
[10:35:20] <jrburke> timmywil: ah right. you include modules that expect your dynamically created one to already be availble?
[10:35:21] <timmywil> I'm optimizing the module that I showed you in the gist yesterday (inlining everything except jquery)
[10:36:57] <timmywil> actually, the modules that were dynamically created are fine, but when that main module calls require on another, it's dependencies (again, not the dynamic ones) are not yet defined
[10:37:34] <timmywil> well, they're not undefined. one is just an empty object and the other is ok
[10:37:45] <timmywil> but it only happens after I build
[10:38:59] <timmywil> "Error evaluating module 'undefined' at location 'undefined'" TypeError: Object has no method 'off'  --> trying to call the off method on an empty object
[10:39:06] <timmywil> pretty strange
[10:44:11] <timmywil> jrburke: any ideas off the top of your head?
[10:44:37] <jrburke> timmywil: i'll message you off-channel, but believe the optimization includes a stub for the modules you create dynamically, there is a way to avoid that...
[10:46:57] <jaubourg> hey jrburke, cool headed as always :)
[10:47:33] <jrburke> jaubourg: not always, i think i had some bad days on the commonjs list
[10:48:49] <jaubourg> hehe
[10:49:18] <jaubourg> ?tell jrburke nice to see you around anyway ;)
[10:49:18] <bot-t> jaubourg, Okay.
[10:49:45] <timmywil> lost him
[10:59:32] <timmywil> jrburke is the man, everyone should know that if they don't already
[13:14:37] <Corey> paul_irish: Ping!
[13:15:22] <paul_irish> sup Corey
[13:15:31] <paul_irish> good to see ya again
[13:16:15] <Corey> Indeed. I've been around, just quiet.
[19:03:43] <paul_irish> interesting jq bug http://jsfiddle.net/deadlyicon/TJrv7/2/
[20:29:43] <gf3> paul_irish: I guess, I always hate seeing code like that
[20:29:46] <paul_irish> like
[20:29:48] <paul_irish> oh that
[20:29:49] <paul_irish> me too
[20:29:54] <paul_irish> but it seems legit as well
[20:29:58] <gf3> yeah'
[20:30:03] <gf3> hard to ignore
[20:30:04] <paul_irish> but jq is hating on people using non qsa selector
[20:30:05] <paul_irish> s
[20:30:07] <paul_irish> so...
[20:30:15] <paul_irish> ?shrug
[20:30:19] <bot-t> paul_irish, #9393 (Unify and DRY out event system) – jQuery Core - Bug Tracker - Opened 3 months ago http://bugs.jquery.com/ticket/9393
[20:30:21] <paul_irish> REALLY
[20:30:29] <paul_irish> davidmark has that doesnt he
[20:32:02] <gf3> paul_irish: surprisingly that code sample PASSES in jQ 1.2.6
[20:35:36] <paul_irish> 1.2.6 how i miss u
[20:39:57] <gf3> paul_irish: re $.fn.on I think it's a Prototype thing originally: http://prototypejs.org/2010/4/5/prototype-1-7-rc1-sizzle-layout-dimensions-api-event-delegation-and-more
[20:42:03] <gf3> MyLibrary is much more verbose: http://www.cinsoft.net/mylib-doc.asp#attachlistener
[20:44:26] <jtaby> jQuery doesn't let you add a negative number using the relative-value syntax in css() and animate(). Should it? http://jsfiddle.net/F7Ybw/2/
[20:44:38] <jtaby> I'm willing to fix it, just wondering if there's a reason it doesn't
[20:48:18] <gf3> jtaby: when would this ever happen?
[20:48:41] <jtaby> well in my case:
[20:48:43] <gf3> curious why you'd every have "+=-1" over "-=1
[20:48:44] <gf3> "
[20:48:52] <jtaby> this.$().css('scale','+=%@'.fmt(rec.get('scale')));
[20:49:02] <jtaby> scale could be negative
[20:49:17] <gf3> jtaby: in that case you'd be better off passing css a function
[20:49:19] <jtaby> and I'd rather not require people to write the same (if it's negative, use '-', otherwise use '+'
[20:49:45] <jtaby> gf3: why's that? What I'm saying is mathematically correct
[20:49:52] <jtaby> this is much more succinct
[20:51:00] <gf3> perhaps if it were a literal string, programming with strings is brittle and hard to debug
[20:51:41] <gf3> jtaby: you're right, it SHOULD mathematically work, but I also happen to think this instance could be considered bad practice
[20:52:14] <jtaby> what's the bad practice? building strings and setting them as CSS properties?
[20:53:14] <gf3> jtaby: in this case, relying on a very dynamic functionality by manipulating a static string
[20:53:21] <gf3> hard to debug, brittle, &c...
[20:53:43] <gf3> jtaby: however, I do agree, this bug should probably be fixed
[20:54:16] <jtaby> gf3: what I don't see is how +=-1 is any different than +=1 ,they're exactly the same when it comes to static vs dynamic
[20:54:26] <jtaby> I'll submit a pull request
[20:54:36] <gf3> jtaby: no no
[20:54:41] <gf3> jtaby: that's not what I am referring to
[20:54:49] <jtaby> oh?
[20:54:50] <gf3> jtaby: I am referring to this `'+=%@'.fmt(rec.get('scale'))`
[20:55:03] <jtaby> oh
[20:55:21] <gf3> I'd say the more explicit route of passing a function would be a better practice
[20:57:22] <gf3> jtaby: things get iffy once you start throwing your logic in strings, esp dynamically (.fmt(xxx))
[20:57:39] <gf3> just like those fancy custom selectors jQuery made so popular
[20:58:14] <jtaby> i mean, '+=1' and '+='+numberHoldingValueOfOne are equivalent
[20:58:34] <jtaby> all i'm doing is getting that value from another object
[20:58:55] <gf3> jtaby: right, but it's not as explicit as the string literal: "+=1"
[20:59:00] <jtaby> are you saying that the string can't guarantee that the value will be correct?
[20:59:22] <gf3> no I am saying that packing your logic into a string like that is brittle and hard to debug
[21:00:20] <jtaby> I agree with your sentiment
[21:00:43] <jtaby> Just not seeing how what I pasted is considered "logic", it's just simple string concatenation
[21:01:17] <gf3> jtaby: well the logic is that "I need this set of elements to scale by X, where X is known only at runtime"
[21:01:25] <gf3> vs
[21:01:39] <gf3> "I need this set of elements to scale by 10 and only ever 10"
[21:02:00] <gf3> so something like this:
[21:02:00] <gf3> $lol.css( 'scale', function ( idx, val ) { return parseFloat( val ) + rec.get( 'scale' ) } )
[21:02:39] <gf3> ends up being a bit more wordy, but much more sound
[21:02:46] <gf3> and easier to debug :)
[21:04:17] <jtaby> you're saying that because at runtime you can debug that statement and inspect the values?
[21:04:39] <jtaby> excuse my thickness, this concern is new to me
[21:07:06] <gf3> jtaby: exactly, you're also not depending your logic on string formatting, etc...
[21:07:32] <gf3> jtaby: also going forward, when a new developer looks at the code, it is much more apparent what is supposed to be happening
[21:07:38] <gf3> because it is a bit more explicit
[21:08:00] <gf3> jtaby: you can still keep it relatively terse: http://pastebin.com/yj1d4rHm
[21:08:36] <jtaby> well do you at least agree that not being able to add negative numbers is a bug that should be fixed?
[21:08:43] <gf3> oh for sure
[21:08:48] <jtaby> ok
[21:08:50] <gf3> you should totally file a bug
[21:08:56] <jtaby> I'm not building an app, I'm building a framework
[21:09:04] <jtaby> I'll let the app developers decide what they use
[21:09:08] <gf3> jtaby: didn't meant to criticize your code, just wanted to help :)
[21:09:12] <jtaby> haha
[21:09:13] <jtaby> no worries
[21:09:36] <jtaby> not gonna lie, I still don't really grok your argument, but you seem to have thought about it a lot more than I have
[21:13:59] <jtaby> http://bugs.jquery.com/ticket/10021
[21:13:59] <jtaby> thanks
