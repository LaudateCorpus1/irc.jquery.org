[04:22:24] <jqcommit> [testswarm] jzaefferer pushed 2 new commits to master: http://git.io/DXKISg
[04:22:24] <jqcommit> [testswarm/master] Readme: Drop useragents.sql include, update the cache dir instructions - Jörn Zaefferer
[04:22:24] <jqcommit> [testswarm/master] DB: Drop email and request columns from users table (already gone in UI, were never used) - Jörn Zaefferer
[05:29:08] <jqcommit> [testswarm] jzaefferer pushed 1 new commit to master: http://git.io/FWQt5Q
[05:29:08] <jqcommit> [testswarm/master] Readme: Add link to testing forum, related to #78 - Jörn Zaefferer
[08:20:41] <jaubourg> hi there
[08:28:02] <rwaldron> oh hai!
[08:28:07] <jaubourg> hey rick
[08:28:16] <jaubourg> sup?
[08:29:06] <rwaldron> not too much
[08:29:35] <rwaldron> first day back after jsconf, followed by mini-vacation in arizona
[08:31:38] <jaubourg> shitty interweb is shitty
[08:36:59] <jaubourg> ...
[08:38:56] <gnarf> sorry to hear jaubourg
[08:39:02] <gnarf> i could use your eyes on that code
[08:43:21] <jaubourg> man, I'm so in pain right now I cannot think straight
[08:43:35] <jaubourg> burned on the 2nd degree at least in places
[08:43:55] <jaubourg> crazy how my skin got that pale over years
[09:02:37] <jzaefferer> hey rwaldron! I'd like to go through the grunt sizer task with you, to pluginize it. Mostly you to review our UI version of it, to see if that still works for Core
[09:03:28] <jaubourg> now to guess how long the connection will hold
[09:04:02] <DaveMethvin> jaubourg: ouch!
[09:04:14] <DaveMethvin> meeeting time jaubourg rwaldron gnarf timmywil
[10:45:59] <gnarf> back
[10:46:15] <gnarf> who wants to bash closure compiler more? :)
[10:46:43] <gnarf> or who wants to bash my effects pull
[10:46:49] <gnarf> im actually more intersted in that :)
[10:47:58] <gibson042> heh, it's certainly more productive :)
[10:51:10] <gibson042> I'm looking forward to examining it detail, but from a high level it looks like huge steps forward and there's definitely room to compress the code
[10:53:10] <gnarf> theres one more "hook" i want to try to sneak in too
[10:53:25] <gnarf> but its to override the default setInterval loop with your own method (hint: requestAnimationFrame)
[10:53:56] <gnarf> my first draft of that was +30 bytes
[10:56:10] <gibson042> +30 bytes to make the override possible with documented APIs, or to make it easy?
[10:57:20] <gnarf> +30 was "dirty hook"
[10:57:27] <gnarf> prolly another +30 for a function
[10:57:29] <gnarf> to override it
[10:58:17] <mikesherov> hi
[10:58:30] <gibson042> I'd really like to have the hook available
[10:58:38] <gnarf> but it was just jQuery.fx.tick.start =  return setInterval();
[10:58:53] <mikesherov> Sort of off topic, but I figured I'd ask here anyway: any of you guys seeing Chrome 18 freezing on sites you work on?
[10:59:01] <gnarf> jQuery.fx.tick.stop = fn( id ) { clearInterval( id ); }
[10:59:17] <gnarf> mikesherov: chrome has been behaving strangely in a lot of ways for me lately
[10:59:51] <gnarf> the tick.start is called whenever a new timer is added and there isn't already an "id"
[11:00:04] <gibson042> me too, but no freezing yet
[11:00:09] <gnarf> the tick.stop gets called with the "id" whenever tick() empties the timers array
[11:00:23] <mikesherov> well, shit, thanks for confirmation
[11:00:35] <gibson042> I've got a meeting now; talk to you later
[11:00:38] <gnarf> i just noticed recently that CSS names for ID/Class selectors suddenly became case sensitive in <!doctype html>
[11:05:35] <mikesherov> gnarf: btw, the I haven't reviewed your code yet
[11:06:03] <mikesherov> but if you'd like to take a look at mine, pretty all of the CSS3 vendor-prefix stuff / border-box stuff is there
[11:10:04] <Krinkle> .
[11:18:55] <gnarf> mikesherov: yeah - i want to hook into it where possible myself
[11:31:25] <Krinkle> jzaefferer: Hi
[11:36:54] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/tXXAcg
[11:36:54] <jqcommit> [testswarm/master] uses context in swarmGetVersion() and handle cache dir error in init.php - Timo Tijhof
[11:47:54] <gnarf> and mikesherov - I'll be sure to take a look later
[11:51:44] <mikesherov> cool
[11:51:54] <mikesherov> Chrome 18 seems pretty buggy
[11:52:04] <mikesherov> anyone else observing this?
[11:55:46] <scott_gonzalez> gnarf: https://github.com/jquery/jquery/pull/731/files#L0R32
[11:55:47] <socialhapy> ★ Pull request on jquery by gnarf37 (19h, 52m ago): 1.8 effects
[11:56:01] <scott_gonzalez> tween.cur() === start at that point, right?
[11:57:51] <gnarf> scott_gonzalez: yes - you would be correct
[11:58:06] <gnarf> mind leaving a comment so i don't forget it? :)
[11:58:19] <scott_gonzalez> Yup, I was about to, but I wanted to make sure I wasn't overlooking something.
[11:58:23] <gnarf> actually nope
[11:58:24] <gnarf> it isn't
[11:58:31] <gnarf> the line above changes the style
[11:58:32] <scott_gonzalez> because of jQuery.style()?
[11:58:37] <gnarf> so .cur() is now the new current
[11:59:02] <gnarf> thats calculating what "1%" is
[11:59:10] <gnarf> or like "1em"
[11:59:30] <gnarf> bigger if "end" is bigger
[11:59:48] <gnarf> i really just want to make that always calculate 100 of whatever if it wont cause any problems
[11:59:58] <gnarf> it will give us much more accuracy on those pesky % animations
[12:00:34] <scott_gonzalez> ok
[12:00:50] <gnarf> that toggle red bookmarklet is so nice... aside from it being dog slow
[12:04:31] <gnarf> anyway, time to integrate autocomplete into this app...
[12:51:52] <ajpiano> timmywil: ping me when you get a minute
[13:03:34] <timmywil> ajpiano: hi
[13:04:14] <ajpiano> timmywil: is this still correct
[13:04:15] <ajpiano> https://github.com/jquery/learn.jquery.com/pull/54/files#L0R34
[13:04:16] <socialhapy> ★ Pull request on learn.jquery.com by CrowChick (1m, 3w ago): In depth with selectors
[13:05:34] <ajpiano> i have such heebie jeebies about getting into selector perf crap
[13:07:13] <timmywil> ajpiano: For non-qsa, that is probably still true. However, with QSA, limiting to an ID probably doesn't help performance because unlike jQuery, browsers must check every element for a given id, according to the spec.
[13:08:08] <ajpiano> yeah, i think i may not land this  in favour of just an actual in depth, once-and-for-all-piece on selector performance
[13:09:11] <timmywil> I will be doing a more comprehensive performance write-up once I can get to the 1.8 changes for Sizzle.
[13:09:39] <ajpiano> awesome
[13:09:50] <ajpiano> i would like there to be one end-all and be-all article on selector perf
[13:09:58] <ajpiano> so we can just publish it and let the internet move on with its life
[13:10:27] <ajpiano> i suspect paul_irish agrees
[13:12:14] <timmywil> Unfortunately, browsers change things.
[13:12:28] <ajpiano> well yeah
[13:12:31] <ajpiano> but we can update the article
[13:12:43] <ajpiano> the problem with the existing eco system is that there's chock full of shit of like
[13:12:47] <ajpiano> best selector practises from 2008
[13:12:57] <timmywil> ah i see now
[13:43:01] <ajpiano> rwaldron: DaveMethvin when are we planning on yanking $.browser?
[13:43:03] <ajpiano> 1.9 ?
[13:43:41] <DaveMethvin> yeah
[13:44:00] <DaveMethvin> separate plugin starting with the release of 1.8 though ... that is, you can start to include the plugin immediately
[13:44:30] <ajpiano> thx
[13:44:31] <DaveMethvin> i think it's within our rights to yank it at 1.8 though
[13:44:33] <DaveMethvin> apjp
[13:44:35] <DaveMethvin> ajpiano:
[13:44:46] <DaveMethvin> and if we get desperate for bytes, we may...
[13:45:07] <DaveMethvin> but i think ui still has some $.browser around and maybe mobile too
[13:45:15] <DaveMethvin> so we need to see what the impacts are first
[13:45:15] <ajpiano> ya
[13:48:58] <rwaldron> jQuery.browser The Plugin ™ is ready to go
[13:57:30] <Krinkle> to go away, that is?
[13:57:47] * Krinkle reads back
[13:59:12] <jzaefferer> Hey Krinkle
[14:04:46] <Krinkle> jzaefferer: Hi
[14:04:51] <Krinkle> I'm working on a number of fixes
[14:26:07] <Krinkle> results table colors and a bug with 'updated' columns
[14:34:12] <Krinkle> jzaefferer: the cleanup of timed out clients is currently broken in master (has been for a while)
[14:34:20] <Krinkle> because the 'updated' columns aren't  updated
[14:34:31] <Krinkle> previously the mysql date time columns did that mostly automatic
[14:34:41] <Krinkle> it relied on it too much
[14:34:49] <Krinkle> now that I'm fixing that I come across other potential bugs
[14:35:14] <Krinkle> like updating nonexistent columns, but since we almost never evaluate the return value of ->query those errors are hidden
[14:35:22] <Krinkle> I'm adding a db query debug option now :)
[14:36:04] <socialhapy> ★ Tweet from jquerymobile: Anyone want to help us alpha test ThemeRoller for 1.1.0? Give me an email and have a 1.0 theme ready for testing. ★ http://bit.ly/HY6Cp2
[14:36:33] <jzaefferer> Sounds good
[14:36:38] <Krinkle> jzaefferer: sorry for the hurry merge. I got your message about waiting for review and when I saw the 5 unread messages in that PR I thought it was finished. I acknowledge your concerns and I agree with them, and I will fix those issues
[14:36:46] <Krinkle> but I wanted to merge first before it becomes unmergeable
[14:36:52] <jzaefferer> The cronjob is one of the things I never ran locally :/
[14:36:58] <Krinkle> the history would be same either way
[14:37:03] <Krinkle> jzaefferer: yeah, me neither
[14:37:16] <Krinkle> I run it manually with api?action=cleanup&from=debug
[14:37:18] <Krinkle> format*
[14:37:32] <Krinkle> that way I can at least time it when I'm paying attention
[14:37:45] <jzaefferer> Ah, good. Let's put that into the readme
[14:37:54] <Krinkle> but also often forget it and spend 2 minutes debugging before I realize… Oh, right, the clean up wasn't ran
[14:38:01] <Krinkle> it already is in the readme
[14:38:06] <Krinkle> but who read that ;P
[14:38:25] <Krinkle> the cronjob is in the readme
[14:38:47] <Krinkle> or did you mean something else?
[14:41:05] <jzaefferer> I meant using that manually with the debug flag
[14:41:14] <jzaefferer> for testing/while developing
[14:42:20] <Krinkle> oh, okay
[14:42:39] <Krinkle> kind of developer-only though, debugging in general, not so much for installing users
[14:42:48] <Krinkle> but we could definitely use a debug section all together
[14:43:00] <jzaefferer> Yeah, like the testswarm.ini lines
[14:43:06] <Krinkle> maybe on wiki page in "Code documentation"
[14:43:08] <jzaefferer> There's a lot going on by now
[14:43:16] <Krinkle> yeah
[14:43:48] <Krinkle> although there's not much more going on than in 0.2.0, except that it is now explicit and organized/documented
[14:44:17] <Krinkle> most logic is still the same, for the end user little  has changed, including the abstract logic of how everything works
[14:44:20] <Krinkle> (minus the bugs)
[14:44:23] <jzaefferer> A brief debug section in the readme would be good. If there's a need for more, we can link to the wiki page
[14:44:29] <Krinkle> ok
[14:45:37] <Krinkle> I'm currently refreshing http://localhost/github/jquery/testswarm/api.php?format=debug&action=cleanup until I see it doing something in the db query log
[14:45:43] <Krinkle> works pretty good
[14:47:44] <Krinkle> http://cl.ly/3b2O1z3r0x2o2U2R1I08
[14:48:19] <Krinkle> yep, there is the flush: http://cl.ly/1R1l013e3S2i442i0B2m
[14:51:26] <jzaefferer> Is that log available only on the API page?
[14:51:32] <jzaefferer> The query log
[14:51:33] <Krinkle> no, every page
[14:51:53] <Krinkle> the only way to use it on an api response is via format=debug because that uses the Page class
[14:51:57] <Krinkle> its in Page::output
[14:52:00] <Krinkle> below the footer
[14:52:03] <Krinkle> (working copy)
[14:52:24] <jzaefferer> ha, so not in mine, eh?
[14:52:31] <Krinkle> not yet :P
[14:52:35] <jzaefferer> I see :-)
[14:52:37] <Krinkle> format=debug is in master though I think
[14:52:47] <jzaefferer> Yeah
[14:53:00] <jzaefferer> That will be useful when updating the Jenkins plugin
[14:58:01] <Krinkle> I'm using it right now to easily see what queries are being executed and, especially for insert/update/delete what they do (the selects are very visible since they result in content being shown, but the other background ones are harder to detect)
[14:58:25] <Krinkle> right now the cleanup action is removing the run_client row and reseting the run_useragent row after 5 minutes
[14:58:49] <Krinkle> but it stays on "timedout"  on the JobPage
[14:58:50] <Krinkle> and it is not given to another client either
[14:58:51] <Krinkle> so something is wrong
[15:19:07] * ajpiano applauds for DaveMethvin
[15:19:21] * DaveMethvin bows
[15:20:11] <ajpiano> you forgot to tag it "jqueries"
[15:20:12] <ajpiano> xD
[15:20:36] <DaveMethvin> don't tempt me
[16:04:31] <socialhapy> ★ Tweet from jquerymobile: My social photo evolution: Flickr &gt;&gt; Instagram &gt;&gt; MS Paint + floppies   Guys, I need your addresses. Ok? ★ http://bit.ly/Ic3iu3
[17:06:01] <Krinkle> eww.. and now to commit those 3 things. I have to separate them into commits. I should've done them in sequence :-/
[17:34:14] <jqcommit> [testswarm] Krinkle pushed 3 new commits to master: http://git.io/0pMXrQ
[17:34:14] <jqcommit> [testswarm/master] Implement DB query log, disabled by default via a [debug] setting. - Timo Tijhof
[17:34:14] <jqcommit> [testswarm/master] Fix problems with CleanupAction and the 'updated' columns - Timo Tijhof
[17:34:14] <jqcommit> [testswarm/master] table.results styling + bug fix in UserAction logic - Timo Tijhof
[18:01:02] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/L08F1g
[18:01:02] <jqcommit> [testswarm/master] Update documentation - Timo Tijhof
[18:27:36] <mikesherov> DaveMethvin: https://github.com/jquery/jquery/pull/734
[18:27:37] <socialhapy> ★ Pull request on jquery by mikesherov (3m, 8s ago): fixes #11004: getWH incorrectly removes padding and border width when box-sizing is border-box
[18:27:50] <mikesherov> that's the last bits of the border-box stuff
[18:28:02] <mikesherov> gnarf: you here?
[18:29:14] <mikesherov> bot-t: tell gnarf to check out this perf, .css('width') is waaaaay faster in border-box because it maps to offsetWidth http://jsperf.com/cssprops/4
[18:29:14] <bot-t> mikesherov, Okay.
[18:29:27] <mikesherov> bot-t: tell DaveMethvin to check out this perf, .css('width') is waaaaay faster in border-box because it maps to offsetWidth http://jsperf.com/cssprops/4
[18:29:27] <bot-t> mikesherov, Okay.
[18:29:29] <gnarf> thanks :)
[18:29:29] <bot-t> (15 secs ago) <mikesherov> tell gnarf to check out this perf, .css('width') is waaaaay faster in border-box because it maps to offsetWidth http://jsperf.com/cssprops/4
[18:29:35] <mikesherov> oh, hey gnarf
[18:30:08] <mikesherov> yeah, so, I don't know what our policy is about reccomendations to the user base
[18:30:36] <mikesherov> but with these changes, using box-sizing:border-box is best for performance
[18:31:11] <mikesherov> it's about 4X faster than our previous .css('width')
[18:31:32] <mikesherov> put another way, it's as fast as .outerWidth()
[18:31:40] <mikesherov> because it's essentially the same thing
[18:31:59] <mikesherov> but animation uses .css because it has to
[18:32:01] <gnarf> i like border-box
[18:32:17] <mikesherov> animations will be 4X faster in theory with border-box
[18:32:41] <gnarf> mikesherov: can you look over my default tween propHooks ?
[18:32:45] <gnarf> the get and set
[18:32:53] <mikesherov> paul_irish: part 2/2 of the jQuery border-box changes: https://github.com/jquery/jquery/pull/734
[18:32:54] <socialhapy> ★ Pull request on jquery by mikesherov (8m, 25s ago): fixes #11004: getWH incorrectly removes padding and border width when box-sizing is border-box
[18:33:16] <mikesherov> sure... it's in that big ol' honking PR, right gnarf?
[18:33:22] <gnarf> yeah
[18:33:25] <gnarf> check the comments
[18:33:33] <gnarf> i posted a blog on gnarf.net about a way to hide all the red lines
[18:33:49] <gnarf> so its easier to read the file "as is" but still have commenting :)
[18:34:02] <gnarf> the red lines are just noise at this point
[18:34:06] <gnarf> so much has changed
[18:34:48] <gnarf> it takes a while to run - but whatever :)
[18:35:35] <mikesherov> k
[18:37:47] <mikesherov> my eyes, they bleed
[18:39:27] <mikesherov> so, gnarf, I'm not sure if this is supposed to incorporate prefixing or not
[18:39:53] <gnarf> mikesherov: well - idealy it could
[18:40:10] <mikesherov> it should automatically as long as you're using .css
[18:40:13] <mikesherov> which you are
[18:40:23] <gnarf> if there is a cssHook it forces using .style
[18:41:08] <gnarf> for set
[18:41:11] <gnarf> but not get
[18:41:15] <mikesherov> right, so line 396
[18:41:23] <gnarf> that old code for get has been around forever
[18:41:55] <mikesherov> 396, at this point, can that be a not yet "unprefixed" property?
[18:42:29] <mikesherov> for example, using "boxSizing" when it's really "MozBoxSizing"?
[18:42:34] <gnarf> yes
[18:42:58] <gnarf> there will always be one get before a set however
[18:43:05] <mikesherov> so, in .css, I have cssProps transforming prefixed into unprefixed
[18:43:27] <mikesherov> and then cssHooks looks for a prefixed hook before an unprefixed one
[18:43:50] <mikesherov> so that way you can specify a prefixed cssHook which would take precedence over an unprefixed one
[18:44:02] <gnarf> right
[18:44:13] <mikesherov> there's no concept there in what you've done
[18:44:32] <gnarf> but line 382 should create either hook right?
[18:44:45] <gnarf> it doesn't know anything about prefixing at this point
[18:45:13] <mikesherov> right, the getter, which uses .css would go through the whole unprefixing process
[18:45:14] <gnarf> it just got the value from a) direct property on the object if it exists and there isn't a style for it... b) jQuery.css()
[18:45:25] <mikesherov> I see
[18:45:41] <mikesherov> so set always after at least one get
[18:45:48] <gnarf> correct
[18:45:50] <mikesherov> and that getted value is set back in
[18:45:52] <Krinkle> paul_irish: Do you know if it is a bug that JSON.parse(, translate function argument is also called at the end with key="" (empty string), and value=the value as a whole?
[18:46:09] <gnarf> jQuery.Tween() actually calls get as it is created to get the initial "start value"
[18:46:22] <Krinkle> paul_irish: JSON.parse('[{"name":"John","last":"Resig"},"string"]', function(key, val){ console.log([key + " (" + typeof key + ")", val]); return val });
[18:46:29] <mikesherov> right, but tween.prop could be boxSizing
[18:46:43] <mikesherov> it's not the value that matters, it's the actual property name that matters
[18:46:44] <Krinkle> logs 5 times
[18:46:47] <gnarf> correct
[18:47:04] <mikesherov> right, maybe I'm being dense
[18:47:09] <gnarf> not that you can tween boxSizing
[18:47:20] <Krinkle> the empty string key is odd, since it isn't part of anything
[18:47:24] <mikesherov> sure, but let's tween some other prefixed property
[18:47:31] <gnarf> borderRadius
[18:47:37] <mikesherov> good example
[18:47:57] <mikesherov> in the setter, tween.prop would be "borderRadius"
[18:48:06] <gnarf> if i jQuery.css( elem, "borderRadius" ) - does the new stuff give me MozBorderRadius ?
[18:48:15] <mikesherov> yes
[18:48:24] <mikesherov> it does
[18:48:41] <gnarf> if i jQuery.style( elem, "borderRadius", "2px" ) - does it set MozBorderRadius ?
[18:48:47] <mikesherov> yes
[18:49:01] <gnarf> is there a jQuery.cssHooks[ "borderRadius" ] created?
[18:49:05] <mikesherov> NO
[18:49:13] <gnarf> is there a property i can check
[18:49:26] <gnarf> jQuery.prefixed[ "borderRadius" ]
[18:49:34] <mikesherov> jQuery.cssProps [ "borderRadius" ] = "MozBorderRadius";
[18:49:38] <gnarf> or some other hint i can have to make sure I use jQuery.style
[18:49:44] <mikesherov> that's how the magic is done
[18:49:45] <gnarf> okay
[18:49:48] <gnarf> that works
[18:49:59] <gnarf> so if i add && jQuery.cssProps[ tween.prop ]
[18:50:02] <gnarf> to 396
[18:50:09] <gnarf> it supports prefixes?
[18:50:20] <mikesherov> https://github.com/jquery/jquery/blob/1.8pre/src/css.js#L154
[18:50:41] <mikesherov> so you have to do the same thing I do in .css
[18:51:01] <mikesherov> name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );
[18:51:11] <mikesherov> hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
[18:51:57] <gnarf> mikesherov: i argue that i need the jQuery.style path whenever I'm dealing with a prefixed value
[18:52:27] <mikesherov> sure
[18:52:30] <gnarf> what does vendorPropName return if it isn't prefixed?
[18:52:40] <gnarf> i.e. what is jQuery.cssProps[ "width" ]
[18:52:41] <mikesherov> it returns the unprefixed one
[18:52:46] <mikesherov> width
[18:52:57] <mikesherov> but only when it's first looked up
[18:53:08] <mikesherov> cssProps starts out almost empty
[18:53:15] <gnarf> so i need || jQuery.cssProp[ tween.prop ] != tween.prop
[18:53:20] <gnarf> !==
[18:53:25] <mikesherov> sort of
[18:53:41] <gnarf> when a cssHook exists, OR it is a prefixed value
[18:53:46] <mikesherov> jQuery.cssProp might not have the property you need
[18:54:00] <gnarf> mikesherov: im guarnteed to have called jQuery.css( elem, prop )
[18:54:03] <gnarf> in the getter
[18:54:04] <mikesherov> oh wait, if you're calling .css() getter first, that makes the cssProp exist
[18:54:05] <gnarf> so it exists
[18:54:10] <mikesherov> yeah
[18:54:10] <mikesherov> sorry
[18:54:13] <mikesherov> I'm being dense
[18:54:16] <mikesherov> right
[18:54:32] <gnarf> there is one strange edge case where someone animates { MozBorderRadius: 2 } but has a cssHook for borderRadius
[18:54:49] <gnarf> but that exists in your code too it seems
[18:54:50] <mikesherov> yeah
[18:54:55] <gnarf> so im not worried
[18:55:02] <mikesherov> jQuery.cssHooks[ tween.prop ] should be
[18:55:28] <mikesherov> jQuery.cssHooks[ jQuery.cssProp[tween.prop] ] || jQuery.cssHooks[ tween.prop ]
[18:55:33] <mikesherov> something like that
[18:55:45] <gnarf> mikesherov: is there really any reason you can think of that i should even have line 399 instead of just jQuery.style?
[18:56:08] <mikesherov> you should just always use .style()
[18:56:19] <mikesherov> I mean, call stack and all
[18:56:38] <mikesherov> but besides minor overhead from the call stack, no reason
[18:56:44] <gnarf> its in a tight loop - every animated property for every animated object on screen
[18:57:09] <mikesherov> right
[18:57:24] <mikesherov> right
[18:57:40] <mikesherov> again, call stack is really the consideration here
[18:57:46] <gnarf> hrm
[18:58:01] <gnarf> cssProps will always exist
[18:58:03] <gnarf> so i can use it
[18:58:06] <gnarf> instead of cssHooks
[18:58:22] <gnarf> although i should probably check for tween.elem.style ?
[18:58:30] <gnarf> im not sure
[18:58:47] <mikesherov> I don't know why you have to separate cases
[18:58:52] <mikesherov> two*
[18:59:01] <gnarf> one case: "scrollLeft"
[18:59:21] <gnarf> its not a .css thing
[18:59:22] <gnarf> or also
[18:59:49] <gnarf> jQuery.Animate( { width: 1 }, { width: 200 }, { duration: 2000 } ); should theoretically work
[19:00:10] <gnarf> and never call a cssHook
[19:00:17] <gnarf> because its not using css
[19:00:38] <mikesherov> how is width not a css thing?
[19:00:54] <gnarf> ^^^^ its being animated on a plain object - not an element
[19:01:12] <mikesherov> Oh, I see
[19:01:18] <mikesherov> but it has a .style?
[19:01:26] <gnarf> no... it doesn't
[19:01:35] <mikesherov> sorry again for not following
[19:01:57] <gnarf> which is why I'm wondering if I can: tween.elem.style && tween.elem.style[ jQuery.cssHooks[ tween.prop ] ] != null
[19:02:09] <gnarf> to detect the need to use .style()
[19:02:15] <gnarf> er not hooks
[19:02:18] <gnarf> cssProps
[19:02:37] <gnarf> tween.elem.style && tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null
[19:02:40] <mikesherov> right, so why not just check for tween.elem.style and be done with it?
[19:02:51] <mikesherov> oh, nvm
[19:02:53] <gnarf> mikesherov: ducks?
[19:02:58] <gnarf> scrollLeft
[19:03:10] <mikesherov> because you can animate non css properties
[19:03:11] <mikesherov> ok
[19:03:29] <mikesherov> so here's my question:
[19:03:35] <mikesherov> why would I need: tween.elem.style[ tween.prop ] = tween.now + tween.unit;
[19:03:44] <mikesherov> if I have: jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
[19:03:48] <gnarf> tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] )
[19:04:07] <gnarf> mikesherov: I don't know - i just added jQuery.style a few commits ago, and wanted to know if i still needed the second case
[19:04:11] <mikesherov> if the answer is, I don't know, we should figure out one check to use .style() and be done with it
[19:04:12] <gnarf> or if i could roll those two up
[19:04:20] <mikesherov> oh, let's roll the two up
[19:04:23] <gnarf> yeah
[19:04:30] <gnarf> im just trying to find the if now
[19:04:39] <mikesherov> K, I get it
[19:04:44] <gnarf> tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) seems right
[19:05:10] <gnarf> it either has that style property, or has a cssHook that fakes said style property
[19:05:15] <gnarf> so we use jQuery.style
[19:05:22] <mikesherov> right right
[19:05:37] <gnarf> the tween.elem.style part is to stop it from hitting the animation on that plain object { width: 1 }
[19:05:47] <mikesherov> right
[19:06:10] <gnarf> mikesherov: actually
[19:06:13] <gnarf> one quick question
[19:06:23] <gnarf> tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null
[19:06:41] <gnarf> what would jQuery.cssProps[ "notAProperty" ] be?
[19:06:50] <mikesherov> notAProperty
[19:06:53] <gnarf> :(
[19:07:12] <mikesherov> why frowny?
[19:07:36] <gnarf> if it were falsy it would be a really useful test to see if that property even exists
[19:07:37] <gnarf> :)
[19:07:46] <gnarf> but it prolly mucks things
[19:07:52] <mikesherov> not really
[19:08:06] <mikesherov> I'm pretty sure it's not too late to change that
[19:08:19] <mikesherov> I just have to modify my checks to not use ||
[19:08:41] <mikesherov> and check for a specific falsey value
[19:09:15] <gnarf> cuz then its tween.elem.style && jQuery.cssProps[ tween.prop ]
[19:09:33] <mikesherov> in fact, Rick has a PR for that
[19:11:57] <gnarf> https://gist.github.com/36bbc3ddecd4696b37ce
[19:12:00] <gnarf> that make sense?
[19:12:41] <mikesherov> sure
[19:13:35] <mikesherov> except again, I think there are some edge cases that'll never happen that I'm worried about unnecessarily
[19:13:48] <mikesherov> like the MozBorderRadius BorderRadius hook nonsense
[19:14:00] <mikesherov> what you have should work for 99.99999% of cases
[19:14:08] <mikesherov> https://github.com/jquery/jquery/pull/733
[19:14:10] <socialhapy> ★ Pull request on jquery by rwldrn (11h, 41m ago): Remove unnec reassignment and return of name/origName;
[19:17:55] <mikesherov> gnarf, your gist doesn't require my cssProps to return something falsey
[19:18:26] <gnarf> no i was writing for now code
[19:18:29] <gnarf> not might be code
[19:18:32] <mikesherov> I see
[19:18:41] <mikesherov> cool
[19:18:48] <mikesherov> then we're good :-)
[19:19:12] <gnarf> but it could be if ( style && ( jQuery.cssProps[ tween.prop ] || jQuery.cssHooks[ tween.prop ] ) )
[19:19:28] <gnarf> unless you could make your vendor prefix magic set jQuery.cssProps for the hooks case too
[19:21:01] <mikesherov> right, I suppose I could do that...
[19:21:44] <mikesherov> but you write your for now code, and I'll see what I can do :-)
[19:21:47] <gnarf> somehow i think my use of the || is less bytes than you adding a case
[19:22:32] <mikesherov> I mean, what you have covers almost everything
[19:23:04] <mikesherov> it just doesn't cover that case where you have an unprefixed hook and you're animating using the prefix
[19:23:07] <mikesherov> which is silly
[19:23:25] <mikesherov> I'll wait on a bug report for that one!
[19:26:23] <gnarf> fuckin gzip
[19:26:42] <gnarf> https://gist.github.com/da12b3d7d71997c5a9d7
[19:26:44] <gnarf> mikesherov: ^^^^
[19:26:58] <mikesherov> hahahah
[19:27:07] <mikesherov> I know the feeling
[19:27:26] <gnarf> 22 bytes minified
[19:27:57] <mikesherov> There is like this 1 ungodly string of text in support.js that is duplicated 3 times instead of in a variable because the the min+gz is smaller
[19:28:05] <mikesherov> even though the min is larger
[19:28:58] <gnarf> i managed to remove all the vars from the function and get it back to -2 for removing that else
[19:29:00] <gnarf> sigh
[19:30:32] <gnarf> mikesherov: https://github.com/gnarf37/jquery/commit/6f4bd6720fc8eff9eb844bd9a2d353f0a3571d15
[19:30:33] <socialhapy> ★ Commit on jquery by gnarf37 (34.061s ago): Removing a silly code path, and reorganizing for gzip. (-2)
[19:32:27] <gnarf> now
[19:32:37] <gnarf> mikesherov: if you still have some time to riddle yer brain
[19:32:45] <gnarf> er
[19:32:51] <gnarf> nevermind, i already riddled it myself
[19:32:58] <mikesherov> oh shucks
[19:33:07] <mikesherov> I was just about to get my thinking cap on
[19:33:19] <gnarf> i was gonna ask you if you could think of a case where you would need a tween hook for get/set instead of a cssHook
[19:34:06] <mikesherov> glad you figured it out :-P
[19:34:29] <gnarf> then the case staring me in the face https://github.com/jquery/jquery/pull/731/files#L0R685
[19:34:30] <socialhapy> ★ Pull request on jquery by gnarf37 (1d, 3h ago): 1.8 effects
[19:34:46] <gnarf> that stops you from setting padding < 0
[19:34:48] <gnarf> for instance
[19:35:20] <gnarf> but also - tween hooks have info about the options in the animation, etc
[19:35:24] <gnarf> that cssHooks wouldn't
[19:41:58] <mikesherov> I always wondered why those were animation hooks and not css hooks
[19:42:16] <mikesherov> I mean, it's equally bad to set padding to a negative number in css
[19:42:54] <gnarf> mikesherov: can we roll them into css.js ?
[19:43:02] <mikesherov> Why not
[19:44:16] <gnarf> affected props are height, width, padding*
[19:44:56] <mikesherov> um, whatever is already in animation
[19:45:23] <mikesherov> [ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
[19:45:26] <gnarf> mikesherov: hrm... so cssHooks opacity doesn't stop things from going under
[19:45:26] <mikesherov> minus margin
[19:45:47] <mikesherov> and yet, no one has complained :-)
[19:51:07] <mikesherov> gnarf: we can definitely move those tween hooks to css.js, all the set up code is there
[19:54:58] <gnarf> mikesherov: thanks for the tips there on the set
[19:55:10] <gnarf> mikesherov: any questions about wtf is going on in the rest of that code? :)
[19:55:23] <gnarf> I realize there aren't many comments right now
[19:55:49] <mikesherov> I'll have more soon
[19:55:59] <mikesherov> I think what we discussed tonight was good
[19:56:14] <mikesherov> if we can remove tweenhooks completely, that'll be a big win
[19:56:27] <mikesherov> or at least the ones that relate to css, that'll be a huge win
[19:57:18] <gnarf> im not sure we can
[19:57:23] <SineSwiper> oh, hey guys
[19:57:33] <gnarf> i mean, jQuery.fx.step has been around forever
[19:57:38] <gnarf> its effectively a "tweenHook"
[19:57:55] <gnarf> SineSwiper: hey
[19:58:05] <SineSwiper> was going to drop off for the night, but it looks like you're talking about the step stuff
[19:58:16] <gnarf> SineSwiper: sorry i still haven't gotten around to reviewing the clip animation stuff
[19:58:23] <SineSwiper> np
[19:58:30] <gnarf> its been a busy busy week
[19:58:35] <SineSwiper> was actually going to ask about the new code you have
[19:58:43] <mikesherov> ok, I'm out for the night. SineSwiper, thanks for the comments on my vendor prefix stuff
[19:58:45] <gnarf> please - thats why its a pull now :)
[19:58:50] <mikesherov> let me know if you have any other suggestions
[19:59:34] <SineSwiper> does it take into account the vendor prefixes, cssHooks, and other names (camelCase) for fx.step?
[20:00:08] <gnarf> SineSwiper: camelCase is the first thing done to the animated properties as well as cssHooks expand
[20:00:17] <gnarf> before any bit of anything gets a chance to mess with it
[20:00:25] <gnarf> re vendor prefix: https://github.com/gnarf37/jquery/commit/6f4bd6720fc8eff9eb844bd9a2d353f0a3571d15
[20:00:26] <socialhapy> ★ Commit on jquery by gnarf37 (30m, 27s ago): Removing a silly code path, and reorganizing for gzip. (-2)
[20:00:38] <gnarf> it now checks for vendor prefixes in that if
[20:00:48] <gnarf> tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] )
[20:01:17] <SineSwiper> okay
[20:01:20] <gnarf> so, element has style object, and the style property for the vendor prefixed (cssProps) is not null, or there is a cssHook
[20:01:31] <gnarf> thats actually what mike and I were just hashing out
[20:01:32] <SineSwiper> still need to run through that patch to get used to all of the tween stuff
[20:02:05] <gnarf> SineSwiper: read my blog post i reference in the comments, hiding the red lines will make it a little easier to review it :)
[20:02:29] <SineSwiper> also, I'm building a test platform for all possible CSS properties that can be animated numerically, including the harder ones like clip
[20:03:00] <SineSwiper> basically, I started from jquery-ui's effects.scale.html thing and rebuilt it for CSS tests
[20:03:48] <gnarf> SineSwiper: nice - i liked that test suite i wrote :)
[20:03:54] <gnarf> if thats the one i wrote
[20:04:02] <gnarf> did it let you pick positions and origins and stuff?
[20:04:09] <SineSwiper> yeah
[20:04:38] <SineSwiper> neat idea with the modulo and multiplication of the selects
[20:05:24] <SineSwiper> I got it to run in auto-mode with a checkbox and it has a log in the background for failed tests
[20:06:00] <gnarf> nice
[20:06:03] <SineSwiper> I'll probably put it on a branch for jquery-ui
[20:06:44] <SineSwiper> not sure where all of this will go, but my goal is to ultimately get animate to work for every CSS property that it's possible to animate
[20:06:54] <gnarf> SineSwiper: lofty goal
[20:07:08] <SineSwiper> whether that ends up in core, UI, or Animate Enchanted, I'm not sure
[20:07:35] <SineSwiper> gnarf: it shouldn't be too bad, it works for a lot of them already
[20:08:03] <SineSwiper> even weirder ones like letter-spacing
[20:08:05] <gnarf> SineSwiper: yeah - the new preFilter stuff in 1.8 might be kinda nice
[20:08:14] <gnarf> also the cssHooks.expand support is probably very useful
[20:08:45] <SineSwiper> sounds like a lot of "from the ground up" work
[20:11:06] <SineSwiper> anyway, I gotta hit the sack for work tomorrow
[20:11:11] <SineSwiper> nice meeting you on IRC
[20:12:08] <gnarf> aye
[20:12:14] <gnarf> bed for me as well
[21:56:01] <paul_irish> bot-t: tell krinkle .. no idea about that json.parse bug. no ideaaa
[21:56:02] <bot-t> paul_irish, Okay.
