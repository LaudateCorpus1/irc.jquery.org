[07:05:16] <DaveMethvin> it's quiet ... too quiet
[07:13:19] <scott_gonzalez> I've got enough rage in me right now to make this channel very loud :-P
[07:16:04] <DaveMethvin> well at least i have the upgrade guide up on the server, thanks to help by rworth: http://stage.jquery.com/upgrade-guide/1.9/
[07:16:19] <DaveMethvin> ain't that pretty but it'll do
[07:17:10] <scott_gonzalez> yay
[07:17:28] <DaveMethvin> just a couple of blockers, the ones gibson042 is working on ... kinda worried they might break stuff and I think he is too 
[07:17:59] <DaveMethvin> plus i still need to figure out how to shim jQuery.fn.init to add back the $(html) old rules
[07:18:10] <DaveMethvin> it breaks jQuery.sub when i shim it :/
[07:18:47] <DaveMethvin> there's no such thing as a simple duck punch on $()
[07:19:16] <DaveMethvin> you can't punch the jQuery object, everything in the world is hooked to it
[07:19:23] <scott_gonzalez> What's gibson042 working on?
[07:19:42] <DaveMethvin> the boolhook stuff
[07:22:06] <scott_gonzalez> I've come to peace with it.
[07:22:13] <scott_gonzalez> It's form properties that convinced me.
[07:22:50] <DaveMethvin> i really wish the browsers had addressed this but i understand why they aren't ... good old backcompat
[07:23:05] <DaveMethvin> where's my time machine
[07:24:22] <gibson042> hey DaveMethvin scott_gonzalez
[07:24:26] <scott_gonzalez> Hey gibson042
[07:24:28] <DaveMethvin> hey gibson042
[07:24:49] <gibson042> I think the PR for ?see 12600 is ready, but I don't know what's up with the integrations process
[07:25:08] <gibson042> yesterday we had nothing at all going to TestSwarm; now we have commits to master but not PRs
[07:25:34] <DaveMethvin> ugh
[07:25:49] <DaveMethvin> i can test most of it here
[07:25:51] <scott_gonzalez> Maybe mergeatron got stuck when TestSwarm halted?
[07:25:53] <gibson042> this one's ok, but the boolHook is basically guaranteed to break even on our test suite in some IEnvironment or other
[07:26:38] <DaveMethvin> so you're  looking for breakage at this point?
[07:28:07] <DaveMethvin> that is, are you saying that you don't expect this pull to work somewhere, or just that it's such a big change that something is bound to break in ui, mobile, elsehwere
[07:28:25] <DaveMethvin> s/somewhere/in our unit tests/
[07:28:31] <gibson042> well, both really
[07:28:39] <DaveMethvin> lol
[07:28:46] <gibson042> but primarily the former
[07:28:50] <gibson042> for now
[07:28:58] <DaveMethvin> hmmm
[07:29:09] <gibson042> it just takes too long for me to run on all environments
[07:29:21] <gibson042> we just got mergeatron and already I feel entitled to it
[07:29:25] <DaveMethvin> yeah, oldie takes an eternity
[07:29:47] <DaveMethvin> and tryna run the whole test (vs each module) often makes those old ones die
[07:29:53] <gibson042> yeah
[07:29:57] <DaveMethvin> or timeout in bs
[07:30:12] <DaveMethvin> such a pain to sit there and move the mouse
[07:31:04] <DaveMethvin> well maybe you can push out your branch and we can take a look? timmywil are you avail?
[07:31:07] <scott_gonzalez> We can look into integrating with sauce too.
[07:31:36] <gibson042> well, I think I'm good to send up https://github.com/jquery/jquery/pull/1063 at any rate
[07:31:37] <socialhapy> ‚òÖ Pull request on jquery by gibson042 (5d, 18h ago): Fix #12600: don't use value property in place of value attribute
[07:31:37] <DaveMethvin> i mean, if we're committed to landing this we could fix it in master
[07:31:49] <gibson042> there's still a bit more to do on the boolHook
[07:31:57] <DaveMethvin> ok
[07:32:16] <timmywil> DaveMethvin: I will be in about 15
[07:32:24] <timmywil> bbs
[07:33:40] <DaveMethvin> i don't think #1063 will be that much of an impact on most code so let's land that when you're ready
[07:36:04] <DaveMethvin> imma send out a message to jquery-devs-team with the draft docs and blog post, plus a heads-up about the final boolHook change that will be landing.
[07:37:53] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/dlpvXg
[07:37:53] <jqcommit> 13jquery/06master 142c40fdd 15Richard Gibson: Fix #12600: don't use value property in place of value attribute. Close gh-1063.
[07:52:27] <scott_gonzalez> Inside addBak(), there's `this.prevObject : this.prevObject.filter(selector)`
[07:52:34] <scott_gonzalez> 2 questions
[07:52:54] <scott_gonzalez> 1) Is it okay to have both expressions on the same line, but separate from the conditional?
[07:53:01] <scott_gonzalez> Normally it's either:
[07:53:03] <scott_gonzalez> a ? b : c;
[07:53:05] <scott_gonzalez> or:
[07:53:06] <scott_gonzalez> a ?
[07:53:07] <scott_gonzalez> b :
[07:53:08] <scott_gonzalez> c
[07:53:30] <scott_gonzalez> 2) Should there be a space inside the parens, or is this the nested function case because of add()?
[07:53:39] <DaveMethvin> normally i will put them on the same line if they're short
[07:53:43] <scott_gonzalez> Also, I hate our style guide :-P
[07:53:48] <DaveMethvin> yeah
[07:53:58] <DaveMethvin> but we could change it if we think it sucks
[07:54:14] <DaveMethvin> the nested parens/brackets thing is ambiguous
[07:54:17] <scott_gonzalez> Except that there's push back because of useless blames.
[07:54:21] <scott_gonzalez> and busy work
[07:54:40] <DaveMethvin> oh i mean we can change the style guide and fix as we go
[07:54:51] <DaveMethvin> i don't like global despacification commits
[07:55:08] <DaveMethvin> git bisect spacy
[07:55:09] <scott_gonzalez> But mixed styles isn't good. It confuses contributors.
[07:55:15] <DaveMethvin> yeah i know
[07:55:34] <DaveMethvin> we just need to be forgiving of contribs if we can't even figure it out ourselves
[07:55:42] <DaveMethvin> and not make a big deal of it
[07:55:53] <scott_gonzalez> So, in summary: I hate our style guide, but not enough to argue about what it should be.
[07:55:59] <DaveMethvin> lol yeah
[07:56:02] <scott_gonzalez> I'd happy give feedback if the team is willing to change.
[07:56:32] <DaveMethvin> maybe we can start a list somewhere and everyone vote on it
[07:57:37] <scott_gonzalez> Also, do we have a rule about the closing paren for these cases?
[07:58:04] <DaveMethvin> if we do i don't know it :D
[07:58:18] <scott_gonzalez> If it wasn't for the closing paren, I would think the rule being followed was "break on long lines, indent after first"
[07:58:28] <DaveMethvin> tbh i generally just add more spaces than i'm comfortable with and commit
[07:58:40] <scott_gonzalez> But the closing paren on its own line implies we're using some other rules.
[07:59:41] <scott_gonzalez> Whatever, I added spaces inside the parens and left the rest as is.
[07:59:45] <scott_gonzalez> I had to copy this to UI.
[08:02:43] <DaveMethvin> email sent ... gotta walk the dog
[08:04:23] <scott_gonzalez> I feel bad about not replying to the ajax thread, but I just feel like it's gonna be one of those takes an hour to read all the replies things.
[08:06:12] <timmywil> DaveMethvin: what did you need before?
[08:06:28] <timmywil> scott_gonzalez: ditto
[08:14:22] <scott_gonzalez> .andSelf() is gone from UI now.
[08:14:22] <b-ot> scott_gonzalez, memorised ‚ÄúandSelf()‚Äù.
[08:15:00] <scott_gonzalez> wonderful b-ot
[08:15:08] <scott_gonzalez> ?.andSelf()
[08:15:19] <scott_gonzalez> worthless
[08:37:49] <gibson042> WTF is up with our (lack of) builds and test runs? http://swarm.jquery.org:8080/job/jQuery%20Core/
[08:38:05] <gibson042> 19 hr ago
[08:39:24] <timmywil> it has learned that our code is so good it doesn't need testing
[08:39:32] <DaveMethvin> hey timmywil just pinging you at the time in case gibson042 needed a code review ... sounds like he doesn't at the moment, and yeah these bots are reall failing lately
[08:40:23] <timmywil> DaveMethvin, gibson042: I'm working on Sizzle.setDocument today. should improve overall performance and make the last 4 unsupported css selectors one-liners
[08:40:24] <gnarf> b-ot: forget andSelf()
[08:41:02] <DaveMethvin> yea bot-t forget you!
[08:41:20] <timmywil> they probably already are, but I'm specifically thinking of :root
[08:42:08] <DaveMethvin> oh good, that is prob the only missing one i might use :D
[08:42:17] <DaveMethvin> brb
[08:46:44] <scott_gonzalez> DaveMethvin gibson042: I don't want to reply to that ajax PR thread, because honestly GitHub comments on changed diffs confuse the hell out of me.
[08:46:59] <scott_gonzalez> But this method definitely belongs in ajax.js.
[09:42:59] <doesallmagic> Project jQuery Core build #567: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/567/
[09:42:59] <doesallmagic> richard.gibson: Fix #12600: don't use value property in place of value attribute. Close gh-1063.
[09:57:23] <timmywil> gibson042: got a sec?
[09:57:56] <timmywil> in the qsa path, in the new select function, `old` starts as true. do you know why?
[09:58:17] <timmywil> seems like it should only need to remove the id attribute if we set one
[10:17:49] <gibson042> timmywil that's the reason
[10:18:34] <timmywil> oh right
[10:18:36] <timmywil> :)
[12:19:45] <scott_gonzalez> Ok, before I go changing all this code, how strict is this no space for strings rule?
[12:19:55] <scott_gonzalez> $( "<div>" ) vs. $("<div>")
[12:20:31] <timmywil> I like the latter, but we have both
[12:21:04] <snover> if you guys normalise on jshint white: true then we can be style bffs
[12:21:10] <snover> (^ impossible thing that will never happen)
[12:28:02] <scott_gonzalez> So that's basically "no spaces ever, unless you're calling a function" ?
[12:28:14] <scott_gonzalez> no, um..
[12:28:26] <scott_gonzalez> what the crap is the rule for spaces with function?
[12:28:29] <scott_gonzalez> only anonymous?
[13:19:06] <Krinkle> ben_alman: Can you explain why return document.querySelectorAll.call(document, selector);  ?
[13:19:09] <Krinkle> https://github.com/cowboy/javascript-library-boilerplate/blob/master/qsa.js
[13:19:21] <Krinkle> there is a quote of ajpiano above it, but it doesn't make sense
[13:19:23] <ben_alman> because this library is a joke
[13:19:35] <ben_alman> when everyone was making tiny microlibs and boilerplates
[13:19:40] <ben_alman> i made one that is both
[13:20:07] <Krinkle> I mean the particular thing of .call() for a single known number of arguments 1 and no special contet
[13:20:10] <Krinkle> okay :D
[13:20:16] <ben_alman> i have no idea why i didn't do document.querySelectorAll(selector)
[13:20:20] <ben_alman> no idea whatsoever
[13:20:25] <Krinkle> alrighty :)
[13:20:25] <ben_alman> this was like 2 years ago
[13:20:35] <ben_alman> now that i ook at it, it seems insane
[13:20:35] <Krinkle> yeah, someone linked it just now however
[13:20:49] <Krinkle> #1 hit on google
[13:20:50] <Krinkle> !g javascript framework boilerplate github @ timeturner
[13:20:51] <b-ot> timeturner
[13:20:57] <ben_alman> i mist likely was trying to do something else, and didn't remove all the wackiness before committing it
[13:21:02] <Krinkle> (cited from ##javascript)
[13:21:06] <ben_alman> lol
[13:21:18] <Krinkle> so, congrats
[13:27:28] <timmywil> gibson042: check it out yo https://github.com/timmywil/sizzle/compare/setDocument
[13:28:15] <timmywil> I've got it in a good place, but maybe you have some ideas on how to get it smaller
[13:29:06] <timmywil> it's a boost in perf (unless someone were to have a different document for every selector‚Ä¶ha)
[13:38:17] <timmywil> and I'm sure there are places in the code we can now take advantage of this that I've overlooked
[13:43:17] <sizcommit> 01[13sizzle01] 15timmywil pushed 3 new commits to 06master: 02http://git.io/byNg0g
[13:43:17] <sizcommit> 13sizzle/06master 149751a47 15Timmy Willison: Add setDocument to set document-related variables once per document
[13:43:17] <sizcommit> 13sizzle/06master 1445982ce 15Timmy Willison: Add :target and :root selector support. Supplements gh-44.
[13:43:17] <sizcommit> 13sizzle/06master 14a217d7b 15Timmy Willison: Size optimization
[13:53:54] <sizcommit> 01[13sizzle01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/M044DA
[13:53:54] <sizcommit> 13sizzle/06master 14cabba17 15Timmy Willison: Remove :active support until we have a comprehensive solution. Supplements gh-163.
[14:25:25] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/f0fJ0Q
[14:25:25] <jqcommit> 13jquery/06master 1404bcb17 15Timmy Willison: Sizzle: :target and :root selector support. adds Sizzle.setDocument. Remove :active support.
[14:25:41] <timmywil> DaveMethvin: my assigned stuff for the beta is done
[14:26:07] <DaveMethvin> thanks timmywil! if you get a chance can you look at the draft upgrade guide and release notes?
[14:26:16] <DaveMethvin> i can guarantee you something is wrong or missing
[14:26:17] <timmywil>  will do, headed home first
[14:26:35] <DaveMethvin> oh we'll need to note that these selectors are available now too
[14:28:59] <timmywil> grr, looks like I messed up something. will fix when I get home.
[14:47:21] <doesallmagic> Project jQuery Core build #568: STILL FAILING in 21 min: http://swarm.jquery.org:8080/job/jQuery%20Core/568/
[14:47:21] <doesallmagic> timmywillisn: Sizzle: :target and :root selector support. adds Sizzle.setDocument. Remove :active support.
[14:48:42] <timmywil> DaveMethvin: did we decide that Sizzle.contains( container, container ) === false?
[14:48:56] <timmywil> cause apparently the spec says it is true
[14:49:08] <timmywil> for documentElement.contains that is
[14:49:57] <DaveMethvin> wat? you mean an element contains itself timmywil?
[14:50:06] <timmywil> apparently
[14:50:11] <DaveMethvin> whoa
[14:50:21] <DaveMethvin> i can hardly contain myself
[14:50:38] <timmywil> lol
[14:50:42] <DaveMethvin> i wonder what will break if we implement the spec
[14:52:15] <timmywil> it's called inclusive descendent http://www.w3.org/TR/domcore/#concept-tree-inclusive-descendant
[14:52:17] <timmywil> :P
[14:53:02] <DaveMethvin> i guess it's something like .closest() returning the element, but contains doesn't seem like the same situation
[14:53:17] <timmywil> when I started using native contains for everything we got all these errors
[14:53:32] <timmywil> except in selector tests for whatever reason
[14:53:51] <DaveMethvin> i guess we'd need to add a check for !=self, assuming that all browsers implement it that way
[15:02:40] <rwaldron> check yourself before you wreck yourself?
[16:00:31] <sizcommit> 01[13sizzle01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/bBvEmA
[16:00:31] <sizcommit> 13sizzle/06master 147d195c7 15Timmy Willison: Revert contains changes. Other minor edits.
[16:00:42] <gibson042> .
[16:01:09] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/DgkiZQ
[16:01:09] <jqcommit> 13jquery/06master 148b4cdbb 15Timmy Willison: Sizzle: fix test failures related to Sizzle.contains
[16:01:48] <timmywil> gibson042: sry, you probably worked so hard on contains
[16:02:14] <gibson042> huh? I haven't been following the Sizzle work today; I'll probably check it in a bit
[16:02:16] <gibson042> what's up?
[16:02:33] <timmywil> oh just changing everything again
[16:02:38] <gibson042> heh
[16:02:44] <gibson042> awesome :)
[16:02:45] <timmywil> added setDocument
[16:02:56] <timmywil> and :target, :root support
[16:03:00] <timmywil> removed :active support
[16:03:25] <timmywil> and borked Sizzle.contains :)
[16:04:34] <gibson042> that's what tests are for, right?
[16:06:16] <sizcommit> 01[13sizzle01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/yJfzXQ
[16:06:16] <sizcommit> 13sizzle/06master 143bc4139 15Timmy Willison: Prefer window.document when sorting disconnected nodes in IE
[16:06:47] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06master: 02http://git.io/7SSxSA
[16:06:47] <jqcommit> 13jquery/06master 147368906 15Timmy Willison: Update Sizzle: IE6-8 traversing test fix
[16:08:04] <timmywil> DaveMethvin: now green except for that lingering offset fail in IE I've been seeing all day
[16:08:08] <timmywil> IE8
[16:09:14] <timmywil> gibson042: noticed some fun stuff when switching all the document variables over correctly. For instance, let's say I just selected something from an iframe.
[16:09:36] <gibson042> k
[16:09:44] <timmywil> then I do this: $("<div/>").add("#test")
[16:09:54] <timmywil> what's the preferred document?
[16:10:20] <gibson042> should be window.document, I think
[16:10:27] <gibson042> that's the implied context for .add
[16:11:07] <timmywil> yea, which is what I ended up doing, but it tried to sort with the iframe document. setDocument won't allow a document fragment so...
[16:12:52] <timmywil> the point of all this is we can save all this stuff, like isXML in Sizzle.attr as long as the document is the same
[16:13:14] <timmywil> there are more, but I'm sure I've missed some places we can take advantage of this
[16:14:26] <gibson042> it's a smart way to go
[16:14:30] <gibson042> how's the approach on size?
[16:15:50] <timmywil> not sure exactly, added some selectors, but I think it all ended up being like +200. 
[16:16:23] <timmywil> gibson042: I was hoping you could work your magic :)
[16:16:43] <gibson042> we'll whittle it down where we can
[16:17:27] <timmywil> I just think it's the right direction
[16:17:33] <timmywil> glad to have it before the beta
[16:18:03] <gibson042> yeah, I've been so deep in the jQuery overrides that I was worried we'd miss the other selectors
[16:18:20] <gibson042> thanks for picking them up
[16:18:32] <timmywil> I looked into :link and :visited and I think we'd have to add DOM events for those as well
[16:18:58] <timmywil> I assumed there was some way to tell if a link had been visited programmatically
[16:19:42] <timmywil> so we've got all but those two, :hover and :active
[16:20:28] <timmywil> fortunately, no selector engine has those by default
[16:20:43] <timmywil> nwmatcher has optional events to add
[16:20:47] <timmywil> slick doesn't do it
[16:21:12] <timmywil> not sure about dojo actually
[16:22:18] <timmywil> dojo doesn't either
[16:22:32] <snover> acme does not support visual state selectors
[16:23:21] <snover> i hope setdocument isn‚Äôt what i think it is
[16:23:54] <snover> are you trying to do cross-frame scripting?
[16:24:05] <snover> timmywil: ^
[16:24:11] <gibson042> timmywil: why wouldn't :link work?
[16:24:26] <doesallmagic> Project jQuery Core build #569: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%20Core/569/
[16:24:26] <doesallmagic> timmywillisn: Sizzle: fix test failures related to Sizzle.contains
[16:24:30] <timmywil> gibson042: because you need an event to tell if a link has not been visited
[16:24:40] <timmywil> snover: no, this just for state-tracking on selectors
[16:24:46] <timmywil> like isXML and stuff
[16:24:51] <gibson042> oh, :link is specifically unvisited, huh?
[16:24:57] <gibson042> (you can tell I never use it)
[16:24:57] <timmywil> gibson042: yea
[16:25:02] <snover> ok good :)
[16:28:26] <timmywil> gibson042: i forgot about :lang
[16:28:44] <timmywil> I think I'm done for now tho
[16:34:57] <gibson042> that's not much of a loss
[16:35:15] <gibson042> but we probably should have it in the release for the sake of completeness
[16:46:34] <doesallmagic> Project jQuery Core build #570: STILL FAILING in 22 min: http://swarm.jquery.org:8080/job/jQuery%20Core/570/
[16:46:34] <doesallmagic> timmywillisn: Update Sizzle: IE6-8 traversing test fix
[18:57:25] <gibson042> ?tell timmywil lol @ contains https://github.com/jquery/sizzle/commit/7d195c771898eb9711b2fa52083da2613856dacc... those utility functions give us so much grief
[18:57:25] <bot-t> gibson042, Okay.
[18:57:26] <socialhapy> ‚òÖ Github API: no commit found
[22:25:49] <sizcommit> 01[13sizzle01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/YrnHKA
[22:25:49] <sizcommit> 13sizzle/06master 147dbf116 15Richard Gibson: minor bug fixes and size reductions
[22:26:43] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/ayE05A
[22:26:43] <jqcommit> 13jquery/06master 1460fdc12 15Richard Gibson: Update Sizzle
[22:56:53] <doesallmagic> Project jQuery Core build #571: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/571/
[22:56:54] <doesallmagic> richard.gibson: Update Sizzle
