[05:59:18] <jqcommit> [13jquery.com] 15scottgonzalez closed issue #52: Problem access jquery.com 02http://git.io/S_f-CQ
[06:28:12] <scott_gonzalez> Huh, remember that PR that lisanesbitt204 kept spamming?
[06:28:28] <scott_gonzalez> I reported her account as spam, and GitHub removed it.
[06:28:32] <scott_gonzalez> But apparently she signed the CLA.
[06:28:40] <scott_gonzalez> Not properly, but she did. I wonder why?
[15:34:33] <Krinkle> Hm.. could someone help me double check something before I file a bug (which I can't because trac isn't sending me password resets)
[15:34:57] <Krinkle> I ran into http://bugs.jquery.com/ticket/14180 on Wikipedia, looks like it is fixed in the latest beta, but I'm still puzzled about why I ran into it in Chrome.
[15:35:06] <Krinkle> The checks it is using to detect focusin support seem flawed
[15:35:14] <Krinkle> (they were already there in 1.8 and earlier)
[16:12:53] <DaveMethvin> Krinkle trac is down but i think i know which ticket you're talking about
[16:13:10] <DaveMethvin> you mean the checks it's using in 1.x-master?
[16:14:27] <DaveMethvin> here's what's in master (2.x) now, 1.x should be logically the same https://github.com/jquery/jquery/blob/f9ad13c9ec8967916427642db2883a1bf3bccd86/src/event.js#L729
[16:16:38] <Krinkle> DaveMethvin: I mean this one https://github.com/jquery/jquery/blob/1.x-master/src/event/support.js
[16:16:52] <Krinkle> that is always false for focusin
[16:16:55] <Krinkle> both in Firefox and in Chrome
[16:17:02] <Krinkle> Chrome supports it afaik
[16:17:15] <Krinkle> so our simulation for Firefox is always running, even in Chrome.
[16:17:38] <Krinkle> Unless, of course, the check is right and Chrome actually doesnt' support it either.
[16:18:42] <Krinkle> I'm not sure I understand the .expando false thing. That always yields undefined
[16:19:57] <DaveMethvin> it won't be false if it's a supported property, if i'm remembering right
[16:20:21] <DaveMethvin> but there's also something funny with some browsers that they support an XXX event but not onXXX
[16:20:28] <Krinkle> where would .expando come from?
[16:20:41] <DaveMethvin> the attributeNode
[16:21:33] <Krinkle> unknown properties yield undefined
[16:21:40] <Krinkle>    div = document.createElement( "div" );
[16:21:45] <Krinkle> div.setAttribute( 'onclick', "t" ); 
[16:21:51] <Krinkle> dir(div.attributes['onclick'])
[16:22:00] <Krinkle> Attr
[16:22:06] <Krinkle> div.attributes['onclick'].expando
[16:22:07] <Krinkle> undefined
[16:22:13] <Krinkle> There is no such property afaik.
[16:23:24] <DaveMethvin> i was looking for a ref
[16:23:29] <DaveMethvin> but the important thing is
[16:23:37] <DaveMethvin> since we implement focusin via focus
[16:23:44] <Krinkle> trying an unsupported one now: div.setAttribute( 'onbazinga', "t" ); dir(div.attributes['onbazinga'])
[16:23:46] <DaveMethvin> it works whether the browser supports focusin or not
[16:24:18] <Krinkle> those two attribute nodes look identical
[16:24:22] <Krinkle> Yeah, that's true.
[16:24:37] <Krinkle> but not in any released version, certainly not 1.8.3, in iframes.
[16:24:55] <DaveMethvin> what do you mean?
[16:25:17] <Krinkle> http://jsfiddle.net/sw3hr/
[16:25:19] <DaveMethvin> focusin support was broken unti recently, is that what you mean?
[16:25:33] <Krinkle> yeah
[16:25:49] <DaveMethvin> ok but that's a different problem
[16:25:57] <Krinkle> and because this support check seems broken (or Chrome really doens't support the "standards" way) it isn't just affecting Firefox. 
[16:26:13] <DaveMethvin> anyway as i recall there is an issue where we can't reliabily feature detect some of these
[16:26:29] <DaveMethvin> but since we (should) implement the shim it shoudl work
[16:26:35] <DaveMethvin> except for the iframe case which we fixed
[16:26:51] <DaveMethvin> i was looking for the discussion about the problem
[16:27:12] <DaveMethvin> i can never find anything in prs
[16:28:13] <Krinkle> It looks like Chrome supports focusin natively, but it doesn't have a 'onfocusin' property, only via addEventListener. Hence the 'onfocusin' in window is false.
[16:28:37] <DaveMethvin> yeah that's what i was saying
[16:28:38] <DaveMethvin> https://github.com/jquery/jquery/commit/1cecf64e5aa415367a7dae0b55c2dd17b591442d
[16:28:47] <DaveMethvin> that's the fix for the frame issue
[16:29:03] <Krinkle> Yeah (I linked that one in the description on jsfiddle already) 
[16:29:11] <Krinkle> I'll be using a similar construction in our ui lib for now.
[16:29:32] <Krinkle> oh, sorry, I didn't.
[16:29:57] <DaveMethvin> afaik there is no simple reliable way to detect whether some events are implmeneted
[16:30:15] <DaveMethvin> and there is NO WAY we are going to try and fire a focus event to detect it
[16:30:22] <DaveMethvin> they are flaky enough as it is
[16:30:33] <Krinkle> yeah, especially focus
[16:31:20] <DaveMethvin> i dunno maybe my search-foo on github is bad
[16:31:33] <DaveMethvin> but i can never seem to find anything other than crawling back through blames
[16:32:39] <Krinkle> It's been there since at least 1.8.3, /me gives it a shot
[16:32:39] <Krinkle> https://github.com/jquery/jquery/tree/1.8.3
[16:33:00] <jqcommit> [13jquery-release] 15gseguin opened issue #9: `complete` function should be a method of the Release singleton so projects can override it 02http://git.io/nFTwsw
[16:33:09] <DaveMethvin> i was looking for the pr discussion
[16:33:13] <DaveMethvin> i know we talked about it
[16:33:20] <DaveMethvin> i think markelog did the code
[16:33:45] <Krinkle> https://github.com/jquery/jquery/commit/c1dcad69427b78f3e70628ab1444f42033ee593a
[16:34:06] <Krinkle> Looks like that first introduces support.focusinBubbles
[16:34:24] <Krinkle> Weird, it doesn't seem to be used though at that revision. Why would we introduce a support prop and not use it?
[16:34:26] <jqcommit> 01[13jquery-release01] 15gseguin created 06issue-9 (+1 new commit): 02http://git.io/YV-jGA
[16:34:26] <jqcommit> 13jquery-release/06issue-9 14f24e053 15Ghislain Seguin: `complete` function should be a method of the Release singleton so projects can override it...
[16:34:54] <DaveMethvin> the string "focusin" "Bubbles" is prob built dynamically
[16:35:16] <jqcommit> [13jquery-release] 15gseguin opened pull request #10: `complete` function should be a method of the Release singleton  (06master...06issue-9) 02http://git.io/ZlLfzw
[16:35:24] <Krinkle> I searched for parts as well
[16:35:41] <DaveMethvin> "search closed pull requests by this person for this string"
[16:35:49] <DaveMethvin> nope, can't do that
[16:35:52] <DaveMethvin> search the whole repo
[16:35:55] <DaveMethvin> i don't want to do that
[16:36:46] <DaveMethvin> god this search is so bad
[16:37:21] <DaveMethvin> i have got to be missing something obvious about how to search prs
[16:37:26] <Krinkle> isSupported = ( typeof div[ eventName ] === "function" );
[16:37:48] <Krinkle> that makes a lot more sense. typeof div[onevent] is null/object by default, and a function if set/detected.
[16:37:50] <DaveMethvin> i'm pretty aware of the history but the pr discussion would really help here
[16:38:03] <DaveMethvin> because it informs the logic behind the code
[16:38:19] <Krinkle> yeah
[16:38:37] <DaveMethvin> we changed the way things were detected because it trips up chrome's security model 
[16:38:46] <DaveMethvin> you can't set onXXX props
[16:38:47] <Krinkle> https://github.com/jquery/jquery/commit/c8c6ab6924b48832bfc2b94d40887b2f1b6c891e
[16:39:02] <Krinkle> yeah, I just ran into that i the console on github.com
[16:39:14] <Krinkle> Refused to execute inline event handler because it violates the following Content Security Policy directive: "script-src 'self' https://github.global.ssl.fastly.net https://ssl.google-analytics.com https://collector-cdn.github.com https://analytics.githubapp.com https://embed.github.com https://raw.github.com". 
[16:39:16] <Krinkle> >>
[16:39:24] <DaveMethvin> right
[16:39:39] <Krinkle> not by default, but some sites like github enabled that restriction.
[16:39:51] <DaveMethvin> any attempt to set inline handlers or css does that
[16:40:10] <snover> DaveMethvin: mehhhhhhhhhhhh. i implemented a focusin detection for dojo, it only occasionally possibly causes chrome to scroll to the bottom of the window for no reasonâ€¦
[16:40:24] <Krinkle> https://github.com/jquery/jquery/pull/1076
[16:40:38] <DaveMethvin> i just hate the whole focus thing
[16:41:11] <DaveMethvin> okay, so Krinkle what was the question?
[16:41:19] <DaveMethvin> were you worried about us not using the  native focusin?
[16:41:21] <Krinkle> that doesn't explain the .expando === false thing. There is no property 'expando' on Attr objects, it should (and does) evaluate to undefined for both known and madeup onsomething attributes.
[16:41:44] <Krinkle> (that would be the question, how is "div.attributes[ eventName ].expando === false;" supposed to feature detect anything)
[16:42:06] <DaveMethvin> yeah and i think there's a pull request comment about it 
[16:42:11] <DaveMethvin> somewhere in this repo
[16:42:22] <Krinkle> https://github.com/jquery/jquery/pull/1076 doesnt' mention it though
[16:42:31] <Krinkle> links to https://github.com/jquery/jquery/pull/1054
[16:43:09] <Krinkle> that one still uses typeof div[ eventName ] === "function"; though
[16:43:38] <DaveMethvin> which won't work with chrome either
[16:43:42] <Krinkle> (and, for the record, when that Security restriction is activated, typeof div[ eventName ] gives undefined)
[16:43:56] <Krinkle> yeah, it doesn't let you know whether it is null or function, just gives undefined.
[16:45:03] <Krinkle> Ah, https://github.com/jquery/jquery/pull/1054 does explain something else
[16:45:09] <Krinkle> "CSP error is not triggered here, div element has onsubmit and onchange properties, but does not have onfocusin, but it's fine, because you can't bind focusin/focusout events by defining onfocusin/onfocusout prop. "
[16:45:23] <Krinkle> So onfocusin isn't supposed to be supported, it only works via addEventListener?
[16:45:23] <DaveMethvin> right
[16:45:35] <DaveMethvin> that seems to be what chrome demands
[16:45:41] <Krinkle> Hm.. then our current check in master is quite odd, cause that's the only line that remained from that code.
[16:45:43] <DaveMethvin> i think there are similar with other browsers now too
[16:46:10] <Krinkle> https://github.com/jquery/jquery/blob/master/src/event/support.js#L5
[16:46:47] <DaveMethvin> right, and we just ignore chrome's support for now
[16:47:06] <m_gol> yes, the thing is to always get false if a browser doesn't support it
[16:47:13] <Krinkle> so that pr (https://github.com/jquery/jquery/pull/1054) proposed to attach the evnet handler and trigger it, that's bad so then the next pr ( https://github.com/jquery/jquery/pull/1076) uses this .expando == false thing, which doesn't seem to be explained anywhere.
[16:48:39] <Krinkle> var div = document.createElement('div'); div.setAttribute('onclick', 'return;'); div.attributes['onclick'].expando
[16:48:42] <Krinkle> var div = document.createElement('div'); div.setAttribute('onsomething', 'return;'); div.attributes['onsomething'].expando 
[16:48:50] <Krinkle> both return undefined (as I would expect), not false.
[16:49:30] <snover> sometimes people do wrong things and sometimes people are on drugs and commit wrong things
[16:49:31] <Krinkle> it might as well be .randomNameHere, either way it doesn't seem to indicate support.
[16:50:02] <snover> itâ€™s not daveâ€™s fault that he is was enjoying the crack cocaine a year ago
[16:50:17] <DaveMethvin> was?
[16:50:28] <snover> i donâ€™t mean to imply you are not still enjoying it sir
[16:50:56] <snover> i just wish that a mistake like this was the biggest i ever get to deal with
[16:51:01] <snover> fixing them would be so easy
[16:51:31] <DaveMethvin> well mainly i want to recall how we got here, it's been fiddled with several times
[16:51:40] <snover> fwiw, expando *was* a property, in ie6
[16:51:53] <m_gol> I really wish browsers would let you check if they support a particular event
[16:52:10] <DaveMethvin> document.implementation.hasFeature was supposed to do that
[16:52:12] <m_gol> snover: in IE7 as well :-)
[16:52:17] <snover> but i doubt it has anything at all to do with whatever this is
[16:52:21] <m_gol> hasFeature is stupid, it's too wide
[16:52:25] <snover> http://msdn.microsoft.com/en-us/library/ie/ms533747%28v=vs.85%29.aspx this is a terrifying msdn page
[16:52:33] <DaveMethvin> snover actually it does, b/c submit/change are looked at here too
[16:52:40] <m_gol> ovbviously browsers will claim they support a particular spec
[16:52:56] <m_gol> I doubt they'd be so inclined to lie about one particular event
[16:53:21] <DaveMethvin> but i'm not sure we're dealing with the focusin case correctly on any browser
[16:53:27] <DaveMethvin> we may not be looking at native anywhere
[16:53:28] <snover> DaveMethvin: remember, versions to allow backwards-incompatible changes are dumb, and APIs for feature detection are dumb, so letâ€™s never use them because they never solve any problems
[16:54:31] <DaveMethvin> well the problem we ended up with focusin is that there is basically no way to feature test it without severe disruption
[16:54:46] <m_gol> I don't think an API for testing *one event* would be stupud
[16:54:48] <m_gol> * stupid
[16:55:01] <m_gol> APIs for checking a lot of things in one command are stupid
[16:55:12] <DaveMethvin> well there's always the problem of whether the event is really suppoted on that event
[16:55:24] <DaveMethvin> it could be supported on AN element but not THIS element
[16:55:27] <m_gol> snover: how would you feature detect support for a particular event?
[16:55:36] <snover> https://github.com/dojo/dojo/blob/master/on.js#L9-L30
[16:55:42] <DaveMethvin> fire the event and see if it happened
[16:56:11] <DaveMethvin> snover does that work on oldie?
[16:56:20] <snover> yes, oldie is 'onfocusin' in element -> true
[16:56:40] <DaveMethvin> oic
[16:56:48] <DaveMethvin> easy way and hard way
[16:57:06] <snover> yes, the second path is only needed for webblink
[16:57:07] <DaveMethvin> firing a focus event makes me sared
[16:57:09] <DaveMethvin> scared
[16:57:18] <m_gol> me too
[16:57:40] <DaveMethvin> i'd prefer to just fake it tbh, which works fine
[16:57:42] <snover> like i said this code may or may not cause the viewport to scroll. it shouldnâ€™t since it is using an element that is viewport-fixed.
[16:57:49] <snover> but someone claimed it was making their page scroll
[16:57:54] <snover> and then never gave any more information, like a test case
[16:58:01] <m_gol> ;)
[16:58:18] <DaveMethvin> you and your obsessive need for test cases snover
[16:58:20] <snover> the solution is to irritate some chromium developers to expose onfocusin
[16:58:33] <DaveMethvin> you'll never thrash about wildly if you keep up that attitude
[16:58:42] <m_gol> I've tried to irritate IE devs to add onwheel
[16:58:45] <m_gol> no success for now
[16:58:48] <snover> I almost didnâ€™t even bother adding the stupid second branch since some people also said that webblink doesnâ€™t follow the spec
[16:58:54] <DaveMethvin> yeah, onwheel is similar
[16:58:59] <snover> and the event order is wrong
[16:59:03] <snover> or something
[16:59:05] <snover> Â¯\(Â°_o)/Â¯ 
[16:59:09] <snover> web platform, lol
[16:59:21] <m_gol> so now I have this: https://github.com/mzgol/jquery-wheel/blob/master/jquery.wheel.js#L20
[16:59:35] <snover> in conclusion, document.addEventListener("focus", omgItIsFocusIn, true)
[16:59:41] <Krinkle> https://github.com/jquery/jquery/pull/1076/files#r8321491
[17:00:09] <DaveMethvin> anyway krinkle i think the reason it looks that way with expando is to handle the submit/change case where it doesn't bubble in oldIE
[17:00:19] <snover> at least focusin can be detected by synthetically focusing somethingâ€¦ onwheel youâ€™re just fucked
[17:00:41] <DaveMethvin> "page loading, please scroll the wheeel"
[17:01:03] * Krinkle grabs hamster wheel. I don't have any wheels.
[17:01:17] <Krinkle> or a car for that matter (also referred to as wheels).
[17:01:23] <Krinkle> or a mouse
[17:01:23] <m_gol> DaveMethvin: hahaha, that's a true feature detection ;)
[17:01:50] <Krinkle> hehe, funny how some tech talk can mean something very differnet using 100 year old langnuage interpretatino
[17:02:11] <DaveMethvin> root users were called wheels in PDP-10
[17:02:13] <Krinkle> I imagine 100+ years  ago people might say "scroll that wheel" to mean to write down on a piece of scroll a fine for a parking violation?
[17:02:45] <DaveMethvin> such is the power of English, that a word can mean everything and nothing at once
[17:02:56] <Krinkle> yeah, Darwin (Mac Unix) still used that until very recently as a hidden user group "wheel"
[17:03:17] <Krinkle> oops, still does on Mavericks!
[17:03:30] <Krinkle> usr=root, grp=wheel
[17:03:42] <Krinkle> amazing
[17:03:55] <DaveMethvin> m_gol did you file a ticket with IE about onwheel? I seem to recall posting on a ticket about it
[17:04:04] <m_gol> yes, I did a while ago
[17:04:06] <m_gol> lemme check
[17:04:22] <Krinkle> So, mobile Windows Internet Explorer, is that IE on wheels?
[17:04:25] <DaveMethvin> because it's basically this same problem
[17:04:35] <m_gol> I love MS Connect
[17:04:40] <DaveMethvin> liar!
[17:04:53] <m_gol> notification mails about bugs are sent in HTML
[17:04:56] <m_gol> but in plain text
[17:05:01] <m_gol> with no excessive white spaces
[17:05:47] <m_gol> a web developer doesn't need a browser, a web developer parses HTML by themself
[17:05:57] <m_gol> DaveMethvin: http://connect.microsoft.com/IE/feedback/details/782835/missing-onwheel-attribute-for-the-wheel-event-although-its-supported-via-addeventlistener
[17:06:32] <m_gol> oh, great, it seems it will be in IE12
[17:07:15] <snover> and documentMode will be gone
[17:07:22] <snover> everything works out so nicely
[17:07:39] <DaveMethvin> i dunno about docMode being gone, not sure they have the guts to do that
[17:07:55] <DaveMethvin> SOOO much code broke when ie11 said it wasnt' MSIE
[17:07:56] <m_gol> at least IE11 doesn't have it's own mode, just edge
[17:08:09] <m_gol> * its
[17:08:12] <m_gol> grammar is hard
[17:08:12] <DaveMethvin> well once there's an ie12 there will prob be an 11 mode
[17:08:29] <m_gol> I hope not
[17:08:55] <snover> DaveMethvin: well they said it is deprecated
[17:08:58] <m_gol> how are they even doing that? keeping so many modes in one browser?
[17:09:08] <DaveMethvin> there's way too much bad code out there that tries to detect all the browsers they expect and then give an obnoxious warning when it's not on the list
[17:09:29] <snover> i was happy with the ua break, frankly
[17:10:35] <DaveMethvin> me too, but if you go to stackoverflow the helpful folks there are just telling people to look for other unique strings
[17:10:42] <snover> great!
[17:10:48] <snover> thanks SO.
[17:10:57] <snover> ibm has been having a bloody fit about it so i bet at least one of the people asking are from there
[17:11:22] <DaveMethvin> microsoft's own asp.net code has some of the worst of it
[17:11:50] <DaveMethvin> back in about 2001 they thought the way to solve the problem was to have the server sniff for the browser and send out different markup
[17:12:01] <DaveMethvin> so even up to this day they had really complex browser sniffing
[17:12:05] <snover> sounds good when you are making your own standards
[17:12:12] <DaveMethvin> and if it fails they treat the client as a really dumb thing
[17:12:23] <DaveMethvin> like they assume it doesn't even have session cookies
[17:12:50] <m_gol> that's funny
[17:13:00] <DaveMethvin> http://www.hanselman.com/blog/IE10AndIE11AndWindows81AndDoPostBack.aspx
[17:13:13] <m_gol> OTH, there is one case when UA sniffing makes sense - analytics
[17:13:20] <DaveMethvin> yeah
[17:13:22] <m_gol> and Google to this day didn't notice IE11 is out
[17:13:37] <DaveMethvin> altho it's really annoying how much stuff it sniffs out and sends back
[17:13:46] <m_gol> so I have a significant amount of "Mozilla 11.0" visits on my site
[17:13:58] <DaveMethvin> so on Windows it's kind of expensive to create a Flash instance and then throw it away
[17:14:04] <DaveMethvin> but thats how it's detected
[17:14:13] <m_gol> lol
