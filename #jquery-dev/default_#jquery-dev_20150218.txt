[07:41:05] <jqcommit> [13api.jquery.com] 15arthurvr opened pull request #657: css: add note about `px` being the default unit (06master...06autoPxCSS) 02http://git.io/AJwR
[08:16:34] <jqcommit> [13api.jquery.com] 15arthurvr closed pull request #657: css: add note about `px` being the default unit (06master...06autoPxCSS) 02http://git.io/AJwR
[08:17:14] <jqcommit> [13api.jquery.com] 15arthurvr pushed 1 new commit to 06master: 02http://git.io/AJFP
[08:17:14] <jqcommit> 13api.jquery.com/06master 14f896bf4 15Arthur Verschaeve: 1.11.61
[08:23:02] <jqcommit> [13api.jquery.com] 15gnarf opened issue #658: Can we remove our silly JSON.stringify polyfill from examples? 02http://git.io/AJA9
[10:15:26] <snover> npm?
[10:18:30] <snover> DaveMethvin: yt?
[10:47:49] <DaveMethvin> snover: here now
[10:53:23] <snover> npm are publicising that jquery announced that everyone should use npm for jquery plugins, and i feel a little confused, given that npm barely even works on windows let alone for browser-based code
[10:54:02] <DaveMethvin> i dunno why they picked up on this today, we haven't had the plugins site up for a while
[10:54:03] <DaveMethvin> https://github.com/jquery/jquery-wp-content/commits/master/themes/plugins.jquery.com/index.php
[10:54:12] <snover> yeah i know, itâ€™s been down since forever
[10:54:25] <snover> npm lies pretty aggressively in their marketing of npm
[10:54:51] <DaveMethvin> well the main problem is that there are no really good package managers for front end i guess
[10:54:55] <DaveMethvin> so what you gonna do?
[10:54:59] <snover> quite right sir
[10:56:02] <snover> bower at least lets you put your packages in one place in a way that is suitable for front-end
[10:56:22] <snover> without needing to process your node.js dependencies through something in advance like browserify
[10:56:47] <DaveMethvin> it's just an ungodly mess
[10:57:03] <snover> it is. iâ€™ve wanted to work on solving this problem for a while but i donâ€™t know how to approach it in a rational way
[10:57:18] <DaveMethvin> EVERYONE is running into this
[10:57:32] <DaveMethvin> just saw an Angular hangout today where the devs were puzzling over how to do it
[10:58:13] <arthurvr> using both bower and npm is a mess (for front-end) :-(
[10:58:16] <snover> node.js refuses to support directories.lib in the way it is specified by the commonjs modules/1.1 spec
[10:58:33] <DaveMethvin> it just seems we're fragmenting into more and more different ways to package and distribute things, and then depending on various adapters
[10:58:49] <snover> if they did it would be an easier problem
[10:59:25] <snover> people conflate module formats with package management too
[10:59:25] <DaveMethvin> npm HAS to break bc at some point, the current design is pretty bad, especially on Windows
[10:59:59] <snover> if you want to sit down and get serious about solving this sometime i know paul_irish has expressed interest in the past, but itâ€™s going to be super hard with npm being so aggressive with their marketing
[11:00:17] <snover> and refusing to actually work with the rest of the community to have a rational solution that works for more than just node.js/cjs users
[11:01:01] <DaveMethvin> it just seems like we're SO far away from a resolution on this, it does seem hard to find a starting point
[11:01:25] <snover> did you see the article by james burke i posted on twitter a couple days ago?
[11:01:33] <DaveMethvin> yeah. now we know why ES6 punted on the details of module implementation :)
[11:02:50] <snover> but itâ€™s likeâ€¦ guyssss,
[11:03:03] <snover> commonjs already tried to do this community-driven approach to solving this problem
[11:03:25] <snover> and it failed because stakeholders refused to play ball and listen to the problems of browser deployment
[11:04:03] <DaveMethvin> well if there is going to be any resolution perhaps our only hope is through ES implementations
[11:04:09] <DaveMethvin> but there are a lot of unanswered questions
[11:04:10] <DaveMethvin> still
[11:07:37] <snover> iâ€™m luckily insulated for the most part since we just use AMD all the way down
[11:07:52] <snover> AMD loader in Node.js, AMD loader in browsers, same directory structures, same semantics, no problem
[11:08:36] <snover> but itâ€™s getting harder to adopt other code because people think now because ES modules are a thing that they can just transpile to CJS or <script>s only and somehow thatâ€™s alright
[11:12:08] <DaveMethvin> It's so tempting to see it as "just JS" but the two envs are very different, that makes it harder to find a single best solution
[11:12:16] <DaveMethvin> Maybe it's fine for node/npm to have 22 levels of dependencies deep but that's a non-starter for front end
[11:12:48] <DaveMethvin> they've completely ignored the deps problem with HTML Imports
[11:12:53] <DaveMethvin> and i understand why
[11:13:05] <DaveMethvin> but it kind of makes the feature useless without a bunch of stuff built in tooling
[11:13:20] <snover> they just repeat ad nauseam that the solution is to use browserify. which is funny, because when you do that, and then you want to split your app into layers, you getâ€¦an interface that is exactly the AMD API, except incompatible
[11:26:39] <paul_irish> the most attractive solution i've seen so far is the jspm workflow that glen maddern displayed
[11:27:23] <paul_irish> although he didnt really display the bower&npm integration too heavily
[11:27:27] <paul_irish> but it works
[11:28:03] <paul_irish> the bower registry isn't going to get better
[11:28:22] <paul_irish> and without improvements to npm-core we're limited on what a tool on top of npm could do
[11:33:53] <snover> iâ€™d like to read about it but the jspm web site hasâ€¦problems
[11:35:13] <snover> actually i donâ€™t understand. firefox refuses to accept certain godaddy certs
[11:35:25] <JamesMGreene> firefox lol
[11:35:39] <snover> supposedly there was some bad chain that godaddy used to publish, but as far as i can tell these sites have the correct intermediate certs and it still doesnâ€™t work
[11:38:52] <snover> i wish i understood why they decided to invert the order of the plugin resources IDs
[11:39:21] <snover> i guess because they try to guess the plugin based on the extension-partâ€¦
[11:39:40] <snover> i know the cujojs guys were trying to do something sort of similar
[11:39:59] <snover> a system that searched for package.json/bower.json/etc. to stitch all sorts of different things together into one thing
[11:56:23] <Hispoonet> Hi
[11:57:34] <Hispoonet> are there any team members over here?
[12:05:07] <Hispoonet> i wanted to ask a question. Ping me when you've got the time (no support question)
[12:50:17] <jqcommit> [13jquery] 15timmywil closed pull request #2016: support css value !important (06master...06master) 02http://git.io/6krwnA
[13:15:56] <jqcommit> [13jquery] 15dmethvin closed issue #2082: empty() and remove() clear jquery data before focusout 02http://git.io/NLTX
[14:01:59] <jqcommit> [13jquery] 15dmethvin closed issue #2035: .css("min-height") fails when css-display-property is set to table on IE9 02http://git.io/sAGYRA
[18:20:24] <snover> scott_gonzalez: yt?
[18:50:22] <jqcommit> [13jquery] 15dmethvin opened issue #2101: Restore `rootjQuery` to init()  02http://git.io/ALOL
[23:10:16] <doesallmagic2> Project jQuery Core Periodic build #168: STILL UNSTABLE in 14 min: http://jenkins.jquery.com/job/jQuery%20Core%20Periodic/168/
[23:10:16] <doesallmagic2> markelog: Ajax: remove deprecated extensions from ajax promise
