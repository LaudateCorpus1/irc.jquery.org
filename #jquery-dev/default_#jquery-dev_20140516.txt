[01:57:34] <jqcommit> [13qunit] 15jzaefferer closed pull request #575: [WIP] JSHint: Use global .jshintrc in test files (06master...06574-jshint-es3-part2) 02http://git.io/7XzmZQ
[04:26:54] <jzaefferer> leobalter: look, its leobalter_
[05:16:41] <scott_gonzalez> Is there a non-JSHint tool that any project is using which checks for onevar?
[05:16:53] <scott_gonzalez> By any project, I mean any jQuery project.
[05:31:33] <Krinkle> scott_gonzalez: jscs
[05:31:46] <Krinkle> Well, I suppose jQuery isn't using that for onevar yet
[05:31:52] <Krinkle> I started using it at Wikimedia though
[05:32:02] <Krinkle> Works fine after they fixed it in a recent release
[05:32:22] <Krinkle> using grunt-jscs-checker 0.4.2 or higher
[05:32:48] <scott_gonzalez> Thanks Krinkle. I'll check which projects are using jscs righ tnow.
[05:33:10] <Krinkle> https://github.com/wikimedia/oojs-ui/blob/master/.jscsrc#L32
[05:33:52] <scott_gonzalez> jQuery UI, jQuery, Sizzle: https://gist.github.com/scottgonzalez/bd781a95ceaa6ea97d60#file-gistfile1-txt-L361
[05:34:47] <Krinkle> https://github.com/mdevils/node-jscs/pull/279
[05:34:55] <Krinkle> https://github.com/mdevils/node-jscs/issues/278
[05:35:58] <scott_gonzalez> Krinkle DaveMethvin jzaefferer rwaldron markelog: Should we get all projects on latest JSHint and start relying on JSCS for onevar?
[05:36:16] <markelog> i think so
[05:36:16] <scott_gonzalez> Or should we get all projects on almost latest JSHint and keep using onevar from there?
[05:36:32] <markelog> i was planning to do so
[05:36:43] <Krinkle> I waited with upgrading grunt-contrib-jshint  to > 0.9 because of jshint 2.5 because of lacking options in jscs.
[05:36:44] <markelog> need to update jquery preset in jscs
[05:36:45] <Krinkle> but that's resolved now
[05:37:29] <scott_gonzalez> I'd like to hear from jzaefferer on this as UI is using JSCS and esformatter right now.
[05:37:50] <Krinkle> I've been making commits like these all week
[05:37:51] <Krinkle> https://github.com/wikimedia/oojs-ui/commit/d6849d512b80eac54feb21726902d70ab4889364
[05:38:22] <Krinkle> keep dropping jshint options and adding jscs stuff, now on latest jshint and jscs. Finally, at last.
[05:38:38] <scott_gonzalez> Yikes, that's a pretty big file.
[05:38:56] <Krinkle> yeah ,it shrunk a bit after that commit though. I added too many options
[05:39:01] <Krinkle> some were duplicative and buggy
[05:39:18] <Krinkle> the one in master is what we kept it at for now.
[05:39:21] <Krinkle> https://github.com/wikimedia/oojs-ui/blob/master/.jscsrc
[05:39:34] <Krinkle> (a similar file is in other wikimedia projects, updates are still propagating)
[05:39:36] <scott_gonzalez> markelog: Will we be able to just do { "jquery": true } ?
[05:39:41] <markelog> yep
[05:39:45] <scott_gonzalez> :-)
[05:40:00] <markelog> )
[05:40:27] <markelog> all we would need to do is to update the jscs package
[05:40:37] <Krinkle> markelog: Does your offer still stand to include wikimedia coding style in node-jscs?
[05:40:45] <markelog> yep
[05:41:35] <Krinkle> more and more projects are starting to adopt ours now that jshint and jscs are diverging and both becoming good things in their own right. And with Sublime 3 and Atom editor both having jscs plugins, this is all getting very awesome very quickly.
[05:42:06] <Krinkle> markelog: Cool, I'll submit a patch. I"d like to try myself so that I can learn how jscs codebase works as well.
[05:42:35] <markelog> sure )
[05:42:40] <Krinkle> People can still extend/override, right?
[05:42:49] <markelog> atom has a jscs plugin?
[05:42:51] <markelog> yep
[05:43:22] <Krinkle> I think so 
[05:43:23] <Krinkle> https://atom.io/packages/linter-jscs
[05:43:24] <Krinkle> https://atom.io/packages/linter-jshint
[05:43:31] <Krinkle> https://sublime.wbond.net/packages/SublimeLinter-jscs
[05:43:33] <Krinkle> https://sublime.wbond.net/packages/SublimeLinter-jshint
[05:43:52] <Krinkle> and it now uses global node_modules instead of bundling
[05:44:02] <Krinkle> so you decide what version by just using npm install -g jscs jshint
[05:44:05] <markelog> awesome
[05:49:36] <jzaefferer> scott_gonzalez markelog: updating to jscs with a jquery preset that includes onevar rules sounds sane
[05:50:00] <scott_gonzalez> jzaefferer: So would we drop esformatter at this point?
[05:50:17] <jzaefferer> No, that's completely unrelated
[05:50:35] <jzaefferer> Well, not 100%, but jscs is doing validation, esformatter formats
[05:50:36] <scott_gonzalez> So JSCS is just a checker and esformatter is just a formatter?
[05:50:40] <jzaefferer> yes
[05:51:08] <scott_gonzalez> Ok, so we're about to reach the point where JSCS becomes a requirement for all projects (as soon as the preset is updated)
[05:51:16] <jzaefferer> And while progress on esformatter is still slow, there still is progress...
[05:51:17] <scott_gonzalez> And we're still in the experimental phase for esformatter?
[05:51:28] <jzaefferer> yeah
[05:51:44] <scott_gonzalez> Thanks. I'll send an email about this.
[05:55:05] <scott_gonzalez> We need to stop being so scattered about versions of dependencies across projects...
[05:55:18] <scott_gonzalez> https://gist.github.com/scottgonzalez/bd781a95ceaa6ea97d60
[07:09:49] <leobalter> jzaefferer using the znc, thanks! :)
[07:10:20] <jzaefferer> leobalter: cool :-)
[07:11:14] <Krinkle> Hm.. Looks like upgrading from jQuery 1.8.3  to 1.11.1 caused something weird
[07:11:21] <Krinkle> We don't need the migrate plugin from what I can see
[07:11:30] <Krinkle> but I'm getting an exception in Firefox that's most puzzling
[07:11:35] <Krinkle> NS_ERROR_NOT_AVAILABLE
[07:11:39] <Krinkle> no information otherwise
[07:11:59] <Krinkle> coming from curCSS
[07:12:00] <Krinkle> 		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined; 
[07:12:08] <Krinkle> -> $( HTMLBodyElement obj ).css( 'direction' ) 
[07:12:15] <Krinkle> the <body> in question is in an iframe
[07:13:27] <Krinkle> I suppose the main difference is that it is now using the correct "window" to get the styles
[07:13:39] <Krinkle> 1.8 used window. it now uses defaultView etc.
[07:14:20] <scott_gonzalez> Krinkle: same domain?
[07:14:25] <Krinkle> Yep
[07:14:38] <scott_gonzalez> all browsers?
[07:14:48] <Krinkle> Only Firefox
[07:14:51] <Krinkle> latest stable and Aurora
[07:14:56] <Krinkle> Chrome is fine
[07:15:08] <Krinkle> It's hard to reproduce though. I've been trying to abstract it
[07:18:16] <Krinkle> https://bugzilla.wikimedia.org/show_bug.cgi?id=65373
[07:21:53] <Krinkle> k, managed to reproduce it somewhat
[07:21:54] <Krinkle> http://jsfiddle.net/v8Syf/
[07:22:09] <Krinkle> the bug happens in the confirmation dialog, last "Open" button
[07:22:14] <Krinkle> the fiddle is in 1.8.3 which works
[07:22:19] <Krinkle> switching to 1.11.1 makes it fail in FIrefox
[07:23:49] <Krinkle> oh, such a donkey, localhost:80 :P
[07:23:49] <Krinkle> sorry
[07:23:50] <Krinkle> http://jsfiddle.net/v8Syf/2/
[07:24:59] <Krinkle> Can you reproduce it? Just making sure Im not going insane. Clicking "open" on the confirmation dialog in Firefox with http://jsfiddle.net/v8Syf/2/ throws NS_ERROR_NOT_AVAILABLE from curCSS
[07:25:34] <DaveMethvin> Krinkle: i can repro it on windows FF 29.0.1
[07:26:36] <Krinkle> :-)
[07:29:38] <DaveMethvin> man, these new dev tools are nice but maybe a bit squirelly
[07:30:17] <Krinkle> I notice the hover tooltip for inspecting a variable is a bit dodgy as well
[07:30:21] <Krinkle> it is too sticky
[07:30:30] <DaveMethvin> i can't set a bp on the line that fails, only the one before it and then step
[07:30:44] <DaveMethvin> but if you run the lines in the console they don't have a problem
[07:31:01] <Krinkle> Yeah, i noticed that too. It seems to be a very low level error I think
[07:31:34] <Krinkle> I was unable to try/catch it
[07:31:37] <DaveMethvin> which is prob why you're having trouble isolating it
[07:31:48] <Krinkle> e.g. when using a local jquery
[07:32:05] <DaveMethvin> i think our current code is doing the best right thing tho, using the correct window
[07:32:18] <Krinkle> yeah, absolutelt
[07:32:37] <Krinkle> I can only imagine that the old version returned a bogus value (e.g. css default for 'direction') and that just happened to be okay for that case.
[07:32:48] <Krinkle> or maybe it 'just worked'
[07:33:05] <Krinkle> window tends to be less problematic with foreign nodes that document methods
[07:33:09] <Krinkle> than*
[07:33:22] <DaveMethvin> i think IE can be an exception to that :)
[07:34:01] <Krinkle> having a better understanding of why it is failing would help, I'd be happy to work around it
[07:34:33] <DaveMethvin> or at least have enough info to get firefox devs to try and fix it
[07:34:40] <leobalter> Krinkle: reproduced the error on FF 29 ~ 32 (Nightly) on Mac (Mavericks)
[07:35:41] <Krinkle> Myself on Mac Mavericks FF 29 stable and Aurora 30.a
[07:36:01] <Krinkle> I should let Aurora update 
[07:36:37] <Krinkle> Looks like it was in flu
[07:36:38] <Krinkle> Looks like it was in flux
[07:36:39] <Krinkle> https://github.com/jquery/jquery/pull/1311
[07:36:42] <Krinkle> twoce
[07:36:43] <Krinkle> twice
[07:38:06] <DaveMethvin> oh great so we get to choose ... break IE or break Firefox 
[07:41:47] <Krinkle> well, to break IE when using window.open  / opener, or break Firefox when using iframes.
[07:42:15] <Krinkle> That seems two bad habits vs. two good/more common habits
[07:42:28] <Krinkle> But ideally we won't break either
[07:42:33] <DaveMethvin> dreamer.
[07:45:57] <Krinkle> https://bugzilla.mozilla.org/show_bug.cgi?id=358415
[07:46:03] <Krinkle> "And yes, I'm cool with getComputedStyle throwing something like NS_ERROR_NOT_AVAILABLE if there's nothing in the window. "
[07:46:06] <Krinkle> AAAAA
[07:46:53] <Krinkle> I guess their null pointer prevention is a bit too good and throws when it shoulndn't
[07:51:01] <DaveMethvin> Krinkle: i don't understand why it's null tho, since it's not null in the console
[07:51:11] <Krinkle> Yeah, it's null internally
[07:51:16] <Krinkle> or at least they think so
[07:51:30] <Krinkle> it's not a TypeError for property of null/undefined
[07:52:50] <DaveMethvin> that does look like the source of it tho ... not sure of how simple it is to fix for them
[07:57:29] <Krinkle> DaveMethvin: Or for us?
[07:57:47] <DaveMethvin> well, try/catch comes to mind
[07:58:00] <DaveMethvin> which i hate
[07:58:16] <Krinkle> yeah, especially at this low a level
[07:58:23] <Krinkle> though I suppose we could cache it
[07:58:49] <Krinkle> I've been unable to make a reduced test case though
[07:59:03] <Krinkle> I think it's not just plain iframes that makes Firefox lose its reference from the frame window 
[07:59:16] <Krinkle> It's like it somehow loses track of it
[07:59:25] <Krinkle> its deterministic though
[07:59:27] <Krinkle> so thats good
[08:00:23] <Krinkle> I think for me the option I have left is to bypass jQuery for that call and call window.getComputedStyle directly
[08:00:42] <Krinkle> since this won't run in a popup
[08:00:57] <Krinkle> and if it does, well, majority use case wins
[08:06:46] <Krinkle> DaveMethvin: weird. If I try/catch it, the catch never runs
[08:06:59] <Krinkle> like that magically makes it behave
[08:07:55] <DaveMethvin> sounds like a problem with their optimization
[08:08:25] <Krinkle> Ah no, it does run
[08:08:27] <Krinkle> cache, sorry.
[08:08:31] <Krinkle> Ugh, 
[08:08:36] <Krinkle> Well, at least I can catch it
[10:12:34] <DaveMethvin> Krinkle: you might want to file that bug at webcompat.com, miketaylr watches that pretty frequently and might be able to get a Firefox fix in quickly
[10:13:01] <DaveMethvin> i was really hoping to avoid a .2 release and focus on 1.12/2.2 which won't be out for several months
[10:13:20] <DaveMethvin> if we do one i'd want to wait a month or so to see what else crops up
[10:15:03] <Krinkle> Well, at this point I just want a patch or workaround. Its creeping up in various other places as well now.
[10:15:16] <Krinkle> Though still haven't found a simple reproduction step in jsfiddle
[10:15:26] <DaveMethvin> hmm, i wonder what aggravates it
[10:15:38] <DaveMethvin> there must be some additional condition 
[10:16:36] <Krinkle> Here's a much reduced case of just getting the directionality and building the iframe, no extrenal files being loaded
[10:16:36] <Krinkle> http://jsfiddle.net/Vs6ch/
[10:16:39] <Krinkle> doesn't happen there
[11:00:31] <Krinkle> Ha!
[11:00:38] <Krinkle> DaveMethvin: Finally, got a test case
[11:00:43] <Krinkle> the iframe is display none
[11:00:48] <DaveMethvin> oooh
[11:00:53] <Krinkle> with visibility hidden first, and then visible
[11:01:16] <Krinkle> so the iframe is visibility hidden first without cstom dusplay (so block as default), this is because stuff needs to compute styles during setup
[11:01:35] <Krinkle> then we remove visiblity hidden and actually display none it until we need it
[11:01:47] <Krinkle> kind of like the style checks jquery did/does
[11:01:52] <DaveMethvin> ok yeah
[11:11:43] <Krinkle> DaveMethvin: http://jsfiddle.net/LLeLa/
[11:12:34] <DaveMethvin> Krinkle: does it happen without jquery now?
[11:12:51] <Krinkle> Well, we both know jQuery is just javascript :P
[11:12:57] <Krinkle> I've removed as much in between as possible
[11:13:06] <Krinkle> leaving only a call to .css() so that it can be a test case
[11:13:52] <Krinkle> I imagine if I change that to {window,ownerdocument.defaultView}.getComputedStyle respectively, it will still fail/work
[11:13:55] <Krinkle> but i'll do that actually
[11:27:45] <Krinkle> DaveMethvin: Interesting
[11:27:47] <Krinkle> DaveMethvin: http://jsfiddle.net/b7egv/
[11:27:51] <Krinkle> Looks like jQuery is at fault after all
[11:28:23] <Krinkle> If you comment out step 2 (Hide) you get return "ltr" 5 times
[11:28:30] <DaveMethvin> about to go into a meeting ... the test cases will help
[11:28:35] <DaveMethvin> not sure what we've done to cause it
[11:29:53] <jqcommit> [13qunit] 15leobalter opened issue #576: Output results to console 02http://git.io/lRtsAQ
[13:47:06] <jqcommit> [13api.jquery.com] 15tjvantoll closed pull request #419: Added structured types for higer order function parameters (06master...06complex-types-documented) 02http://git.io/zuS2Sg
[13:50:24] <jqcommit> [13api.jquery.com] 15tjvantoll opened issue #496: prop() should use the Anything type 02http://git.io/UOfzkQ
[14:55:00] <jqcommit> [13qunit] 15leobalter opened pull request #577: Assertion methods clean-up from Global and QUnit.constructor scopes (06master...06563-no-global-assertions) 02http://git.io/yeuweQ
