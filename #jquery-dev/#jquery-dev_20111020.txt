[02:31:46] <padolsey> Is this intended behaviour? - http://jsfiddle.net/vyGbf/
[04:00:52] <Darsain> hi. I'm trying to deremine whether I should file a bug report, or if it is a feature intended from devs for some reason, in which case I'd want to know why, because it's pissing me off right now :)
[04:00:56] <Darsain> Problem: .data() doesn't behave the same way how $.data() does when using key namespacing. Example: if you have a data key "name.key" and it doesn't exist, the .data() will return the "name" key instead, while $.data() returns undefined, which is what I'd expect to get
[04:01:03] <Darsain> test: http://jsfiddle.net/pNCP8/2/
[04:01:15] <Darsain> it is line 1705 in jQuery 1.6.4 source - simple line change to "return data;" would solve it
[05:07:41] <jqcommit> [qunit] jzaefferer pushed 1 new commit to master: http://git.io/AI_3MA
[05:07:41] <jqcommit> [qunit/master] Fix IE8 "Member not found" error - Jimmy Mabey
[05:18:10] <jq-jenkins> Project QUnit build #43: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/QUnit/43/
[05:18:11] <jq-jenkins> jimmy: Fix IE8 "Member not found" error
[06:22:59] <mikesherov> hello
[06:23:34] <mikesherov> anyone to check my updated PR: https://github.com/jquery/jquery/pull/555
[06:23:36] <socialhapy> ★ Pull request on jquery by mikesherov (13h, 13m ago): display:none on body tag causing .show() to not show, fixes #10227
[08:20:26] <ravic> m a beginner for JQuery. was looking for somehelp to use on  my personal website. am i on right channel?
[08:21:01] <aaronmcadam> ?channels @ ravic
[08:21:01] <bot-t> ravic, For support please go to #jquery or #jquerymobile. Development Channels: #jquery-dev - #jqueryui-dev - #jquerymobile-dev ; Meetings held in#jquery-meeting
[08:30:16] <rpflo> Thoughts? No global with AMD: https://github.com/jquery/jquery/pull/557
[08:30:17] <socialhapy> ★ Pull request on jquery by rpflorence (1m, 1s ago): Don't expose jQuery to `window` with AMD
[08:33:02] <rpflo> rwaldron: When is jQuery moving to github issues?
[08:33:15] <rwaldron> rpflo never
[08:33:15] <bot-t> (13 hours 20 mins ago) <ralphholzmann> tell rwaldron you get a shout out in the uncle section cc SlexAxton - http://vimeo.com/30829391
[08:33:23] <rpflo> rwaldron: lame.
[08:33:29] <rwaldron> ?
[08:33:48] <rwaldron> there are >10k historic tickets in the trac
[08:34:20] <rwaldron> the whole thing is customized
[08:34:24] <rwaldron> why the shit would we change to issues?
[08:35:06] <rwaldron> (don't get me wrong, github issues is rad)
[08:35:16] <rpflo> yeah, that's my only reason.
[08:35:17] <rpflo> anyway: http://bugs.jquery.com/ticket/10545
[08:35:29] <rwaldron> hot shit
[08:35:41] <rwaldron> can you post that to the PR?
[08:35:42] <rwaldron> thanks
[08:36:02] <rpflo> PR?
[08:37:25] <rpflo> oh, sorry, yes, done.
[09:16:26] <addyosmani> rwaldron, yt?
[09:19:01] <rwaldron> addyosmani sorto
[09:19:05] <rwaldron> sort of *
[09:19:13] <addyosmani> cool.
[09:19:39] <addyosmani> I was just wondering if you knew whether we've ever officially supported namespaced keys with .data() or .fn.data(), ie. .data('foo.bar');
[09:19:57] <addyosmani> ticket came in for it today and I haven't seen anything in the docs that say we do
[09:20:07] <addyosmani> though, thats not to say we don't want to.
[09:20:49] <kswedberg> addyosmani: definitely check with DaveMethvin before add to docs.
[09:21:12] <kswedberg> addyosmani: because he's been neck-deep in events and data
[09:21:29] <addyosmani> I'll ask him when he's around kswedberg. From the test cases it's supported in very limited contexts, but I'll check with him for sure.
[09:22:47] <kswedberg> cool deal. in general, if something is only supported in very limited contexts, it's probably better to leave it undocumented
[09:23:14] <kswedberg> …imo
[09:24:17] <gnarf> addyosmani: we do not
[09:24:25] <gnarf> addyosmani: with data....
[09:24:35] <gnarf> data("foo.bar") returns data["foo.bar"]
[09:27:59] <addyosmani> gnarf some weird inconsistencies between .data() and .fn.data() with that stuff http://jsfiddle.net/pNCP8/3/
[09:28:51] <addyosmani> kswedberg, this is probably a silly question, but do you think it's worth us having a way of internally documenting something we don't wish to document/make available to the public? eg. with this stuff it would give us a reference in case someone brought it up again in the future.
[09:29:17] <addyosmani> I'm probably just suggesting something unnecessary, but it's just an idea.. :p
[09:30:00] <addyosmani> I'll confirm all of the data() stuff with Dave later, but appreciate the input gnarf and kswedberg
[09:30:02] <kswedberg> addyosmani: not silly at all. got to http://test.learningjquery.com/jquery-methods.html and click the "Make a note" link.
[09:30:23] <addyosmani> yay.
[09:30:27] <addyosmani> thanks kswedberg
[09:30:32] <kswedberg> :)
[09:30:34] <kswedberg> no prob
[09:30:56] <kswedberg> I'll make sure that the form results are available to the api team
[09:31:08] <addyosmani> that's rad
[09:31:59] <kswedberg> you can click an item in the Legend to filter,
[09:33:55] <Darsain> gnarf: data("foo.bar") returns data["foo"] (instead of undefined) when data["foo.bar"] doesn't exist. that was my problem when submitting the ticket
[09:34:02] <gnarf> addyosmani: thats a bug
[09:34:13] <addyosmani> sure?
[09:34:21] <gnarf> pretty sure
[09:34:29] <gnarf> i did a log of digging in data in 1.7
[09:34:35] <addyosmani> mmk
[09:34:36] <gnarf> feel free to assign the ticket to me
[09:34:46] <addyosmani> I'll mark as valid and assign then
[09:34:52] <gnarf> i'll look at it after i get back from the store
[09:35:03] <gnarf> at least - if not a bug, i'll be able to find the reason its happening
[09:35:10] <jrburke> process question: where is the best place to provide feedback for a ticket w/pull request? in the pull request or in the ticket? Or does not really matter? i did not see the ticket until after commenting in the pull request, was wondering if i should post in the ticket too or pull request is sufficient.
[09:36:27] <kswedberg> jrburke: good question. rwaldron ^^ waddayathink?
[09:36:55] <rwaldron> jrburke either is fine
[09:37:14] <jrburke> ok i'll leave it in the pull request thanks rwaldron
[09:37:16] <rwaldron> but i think in this case, I would appreciate that being copied to the ticket as well
[09:37:20] <jrburke> lol
[09:37:21] <jrburke> ok will do
[09:37:50] <rwaldron> it will be easier to re-reference in the future
[09:37:56] <rwaldron> and that is super valuable information
[09:38:07] <rwaldron> that i dont want to loose track of
[09:38:18] <rwaldron> if you could also link to the original ticket(s)
[09:40:54] <jrburke> rwaldron: done, copied my feedback and included link to original ticket.
[09:41:09] <rwaldron> jrburke thank you sir :)
[10:05:19] <johnbender> hey guys
[10:05:37] <johnbender> does Core monkeypatch history.back ?
[10:05:49] <johnbender> I did a quick ack but I didn't see anything
[10:08:26] <rwaldron> def not
[10:08:45] <rwaldron> jquery doesn't modify _any_ native or host objects
[10:10:52] <johnbender> rwaldron: thank you, I thought not
[10:10:58] <johnbender> https://github.com/phonegap/phonegap-android/commit/fe3e7041b7b0c19ae258818fb8ff17f17bf760f6
[10:10:58] <socialhapy> ★ Commit on phonegap-android by brycecurtis (1w, 6d ago): Don't override history.back since jQuery also does it.
[10:11:01] <johnbender> in which case
[10:11:12] <johnbender> time to correct some folks
[10:12:35] <rwaldron> hahahaha
[10:12:39] <rwaldron> johnbender go get em!
[10:27:40] <jzaefferer> what's the simplest way to create a memory cache for all ajax requests? basically, before sending, check if a url is cached, if so, use that results; otherwise, on success, cache the result
[10:27:58] <jzaefferer> memory cache, as in just a simple javascript object, with urls as the key
[10:28:12] <jzaefferer> browser caches aren't good enough
[10:30:21] <jzaefferer> gnarf rwaldron: ^^^ any idea?
[10:30:35] <jzaefferer> or kswedberg?
[10:32:27] <kswedberg> jzaefferer: var caches = {}; if (!caches[url]) { caches[url] = $.ajax(url); } caches[url].done(fn);
[10:33:55] <kswedberg> jzaefferer: something like that?
[10:35:32] <jzaefferer> kswedberg: looks good, but how do I use that when Backbone.sync is calling $.ajax?
[10:37:03] <kswedberg> jzaefferer: hmm. lost me on that one. haven't played enough with Backbone yet.
[10:37:40] <jzaefferer> put another way: how do you apply that so that any third-party code that's using jQuery.ajax (or any wrappers) also gets cached?
[10:38:17] <kswedberg> hey, YOU WANTED SIMPLE! :p
[10:38:28] <scott_gonzalez> does anyone know how to give someone edit access on MediaWiki?
[10:39:27] <kswedberg> scott_gonzalez: you talking about docs.jquery.com?
[10:39:38] <scott_gonzalez> yeah
[10:39:57] <kswedberg> it's pretty locked down now. who wants the access?
[10:40:21] <scott_gonzalez> Duncan Kenzie, he's going to help with UI docs
[10:42:12] <kswedberg> are you a sysop? if so, you can do it. but every time I have to do it, it takes me an hour to hunt down the process.
[10:42:27] <scott_gonzalez> I don't think I am
[10:43:10] <jzaefferer> kswedberg: it would be so simple if the jqXHR would be the actual deferred, not just the promise
[10:43:18] <jzaefferer> can't do anything with the promise
[10:44:38] <kswedberg> addy and jaubourg wrote an article for scriptjunkie that might help. talks about wrapping stuff in a $.Deferred.
[10:45:40] <scott_gonzalez> jzaefferer: proxy $.ajax?
[10:45:56] <scott_gonzalez> jzaefferer: also, go answer my question in jqueryui-dev
[10:49:41] <jzaefferer> scott_gonzalez: tried it earlier, but missed adding options.success to the deferred as a callback, nececcesary to make it work with backbone...
[10:49:48] <jzaefferer> so yeah, that seems to work
[10:58:07] <gnarf> jzaefferer: prefilter
[10:58:25] <gnarf> you can check your cache of objects and return the cached one
[11:00:36] <jzaefferer> how do you resolve the request in a prefilter?
[11:00:41] <jzaefferer> jqXHR is just a promise gnarf
[11:01:02] <gnarf> what do you mean?
[11:01:14] <gnarf> in the prefilter you can return a promise
[11:01:22] <gnarf> and it becomes the jqXHR returned
[11:01:54] <gnarf> im pretty sure i saw something about that in jaubours talk in SF
[11:02:54] <gnarf> about 8 minutes in in http://vimeo.com/22685321
[11:03:56] <gnarf> http://vimeo.com/22685321 around 13:30 for the part you're interested in
[11:08:42] <gnarf> jzaefferer: actually it seems he is overwriting the jqXHR's promise
[11:12:43] <gnarf> okay
[11:12:43] <gnarf> so
[11:12:48] <gnarf> .data
[11:13:13] <jzaefferer> .data?
[11:13:34] <gnarf> seems that it DOES try to support "namespacing"
[11:13:52] <gnarf> with test.foo === test if test.foo is undef
[11:16:07] <gnarf> we are in fact unit testing this
[11:16:11] <gnarf> but the feature is undocumented
[11:16:15] <gnarf> and the need for it seems questionable
[11:24:47] <gnarf> kswedberg: do you know anything about this feature? :)
[11:26:15] <gnarf> docs#10544
[11:26:16] <bot-t> [#10544] Different behavior between $.fn.data() and $.data() with namespaced key names (assigned bug) - http://jqbug.com/10544
[11:26:17] <kswedberg> I don't. but I'm sure davemethvin, wherever he is, knows something about it
[11:26:36] <gnarf> i found the unit tests covering it
[11:26:48] <gnarf> but like - no real documentation on the usage
[11:26:54] <gnarf> trying to find a trac ticket for it
[11:26:58] <gnarf> but i don't think its there
[11:28:30] <gnarf> also kswedberg - can you add gnarf37@gmail to api team so i can get on that doc you sent us? :)
[11:30:29] <kswedberg> gnarf: sure.
[11:39:10] <gnarf> timmywil: have you ever seen/known about this namespaced data thing? i feel like an idiot
[11:39:32] <gnarf> just went through and rewrote a good chunk of this function and had no recollection of it doing this :)
[11:40:52] <gnarf> oh - and p.s. --- fuck yeah space heater
[11:42:11] <timmywil> gnarf: perhaps it's a side-effect of using namespaced events
[11:42:22] <gnarf> seems so
[11:42:40] <gnarf> but it breaks other "expected" behavior
[11:42:45] <gnarf> and is undocumented
[11:42:55] <timmywil> i'm ok with keeping it undocumented
[11:43:08] <gnarf> i kinda want to kill it
[11:43:19] <gnarf> in the form of deprecation / removal in 1.next
[11:44:10] <timmywil> well, i didn't even know that was public
[11:45:07] <gnarf> what you mean?
[11:45:20] <timmywil> meaning, i thought it was only used privately
[11:45:41] <gnarf> i don't even think we use it privately
[11:45:52] <gnarf> i think its just a overcomplication tacked on
[11:46:42] <timmywil> ok, but i'm guessing this is here because we use it to namespace events
[11:46:47] <timmywil> privately
[11:47:16] <timmywil> which makes a little sense as to why it can be accessed with $.fn.data and not $.data
[11:47:32] <timmywil> because fn.data calls triggerHandler('getData...
[11:47:42] <gnarf> we don't even care about the namespace of that handler
[11:47:45] <gnarf> nor do we use that handler
[11:48:02] <gnarf> http://jsfiddle.net/gnarf/pNCP8/4/ -- this behavior extends all they way back to 1.2.6 - before that event even existed
[11:48:42] <gnarf> oh, and is anyone prepared for the layerX layerY warning tickets for chrome? :)
[11:48:52] <gnarf> rwaldron might have to do a reading of it
[11:49:25] <timmywil> prepared for?
[11:49:34] <timmywil> there's a pull for it
[11:49:53] <gnarf> oh
[11:50:11] <timmywil> matjas put one in
[11:50:12] <gnarf> i was making a link between that warning and the firefox warning
[11:50:31] <gnarf> so i was wrong
[11:50:35] <gnarf> the getData event was in 1.2.6
[11:51:03] <timmywil> yea, i was about to investigate.  that's the only thing different between fn.data and .data
[11:51:09] <gnarf> but either way - this just seems like an unnecessary complication to the .fn.data()
[11:51:23] <gnarf> timmywil: not entirely
[11:51:26] <kswedberg> timmywil, gnarf: http://james.padolsey.com/javascript/things-you-may-not-know-about-jquery/
[11:51:26] <kswedberg> // Note, you can also namespace data:
[11:51:27] <kswedberg> // E.g. $(elem).data('whatever.myPlugin',value);
[11:51:39] <timmywil> haha
[11:51:54] <gnarf> its lame tho
[11:52:01] <gnarf> :)
[11:52:07] <gnarf> but nice reference
[11:52:13] <gnarf> still doesn't say why we want people to do it ;)
[11:52:39] <gnarf> timmywil: it also does the data-* attr stuff
[11:52:39] <timmywil> gnarf: what else is there? i see a check for parsedAttrs, the triggerHandler, the call to $.data, html5 attrs, and the rest is setting
[11:52:55] <gnarf> html5 attrs are only on .fn.data()
[11:52:59] <timmywil> this can't be data-*
[11:53:25] <gnarf> right, html5 attrs, namespaced data/events are the difference between .fn.data and .data
[11:53:41] <kswedberg> http://addyosmani.com/blog/31-jquery-snippets/
[11:53:41] <kswedberg> jQuery supports namespacing and this includes namespacing data. You can scope your namespaces to a specific name or plugin and this can help you avoid conflicts with other code that might use the same data name
[11:53:51] <kswedberg> :(
[11:54:04] <gnarf> kswedberg: actually it helps you create conflicts it seems ;)
[11:54:13] <gnarf> if we were to remove this code i'm talking about
[11:54:22] <gnarf> the 'namespaced' data would actually work better
[11:54:40] <gnarf> because .data("foo", "bar").data("foo.bar") === undefined
[11:54:48] <gnarf> but currently that would be "bar"
[11:54:59] <gnarf> since if the namespace isn't set - it returns the "non-namespaced" data var
[11:55:42] <timmywil> gnarf: i thought you wanted to remove namespacing data altogether
[11:55:56] <gnarf> timmywil: if we remove the special meaning for the "."
[11:56:03] <gnarf> then "foo.bar" is a valid data key
[11:56:05] <gnarf> and unique
[11:56:07] <gnarf> from "foo"
[11:56:14] <timmywil> ah, but what about .data('.bar')
[11:56:25] <gnarf> does nothing
[11:56:33] <timmywil> that might be a problem
[11:56:36] <gnarf> returns .data()[".bar"]
[11:56:44] <gnarf> currently
[11:57:13] <gnarf> so that feature you're thinking about doesn't currently exist anyway
[11:57:25] <gnarf> but if it did, the point of having "foo.bar" makes a little more sense
[11:57:40] <timmywil> wait, so what does it actually do?
[11:57:42] <timmywil> lol
[11:57:48] <gnarf> you don't want to know
[11:57:49] <gnarf> so like
[11:57:53] <gnarf> all the setters are "normal"
[11:58:08] <timmywil> ok
[11:58:13] <gnarf> setting "foo.bar" sets .data()["foo.bar"]
[11:58:40] <gnarf> but it calls the setData.bar( event, "foo" )
[11:58:48] <gnarf> er rather "setData.bar" event
[11:58:53] <gnarf> with "foo" as a param
[11:59:31] <gnarf> getting "foo.bar" calls getData.bar event with "foo" param
[11:59:37] <gnarf> but if the original data is undefined
[11:59:50] <gnarf> so .data("foo.bar") === undefined, it returns .data("foo")
[12:00:17] <gnarf> that part seems broken
[12:02:03] <rwaldron> jzaefferer sorry, i was away at lunch
[12:02:14] <timmywil> i see so setting ".bar" calls getData.bar but the value is undefined?
[12:02:30] <timmywil> getting*
[12:02:43] <gnarf> if foo.bar isn't set - it returns foo
[12:02:46] <timmywil> setting would actually try to set undefined as the value
[12:02:52] <gnarf> correct
[12:02:57] <gnarf> but you cant set undefined
[12:03:00] <timmywil> right
[12:03:02] <timmywil> ugh
[12:03:18] <gnarf> i think if you were using "foo.bar" as a data key
[12:03:18] <timmywil> well that sounds like it hasn't actually namespaced anything since it was released
[12:03:21] <gnarf> you'd want "foo.bar"
[12:03:44] <gnarf> and if it was undefined, you wouldn't ever want "foo"
[12:05:51] <gnarf> hey DaveMethvin
[12:05:58] <gnarf> i hope you're in a .data() mood ;)
[12:07:54] <DaveMethvin> hey gnarf
[12:08:15] <gnarf> DaveMethvin: docs#10544 is the topic ;)
[12:08:17] <bot-t> DaveMethvin, [#10544] Different behavior between $.fn.data() and $.data() with namespaced key names (assigned bug) - http://jqbug.com/10544
[12:09:14] <DaveMethvin> ya know, i am really starting to hate that api
[12:09:41] <DaveMethvin> ERROR: EXCESSIVE ATTEMPTS AT MAGIC DETECTED
[12:10:14] <gnarf> i want to kill it
[12:10:18] <gnarf> :)
[12:10:42] * gnarf mimics a Dalek - Deprecate!
[12:10:46] <DaveMethvin> i think that is part of the (stupid) data events stuff isn't it?
[12:10:55] <gnarf> DaveMethvin: not entirely
[12:10:56] <DaveMethvin> i would like to kill those
[12:11:03] <gnarf> but partially
[12:11:05] <gnarf> i mean
[12:11:29] <gnarf> the behavior of .data("foo.bar") returning data("foo") surely is a mistake/bug
[12:12:08] <DaveMethvin> lemme find the pseudo-docs on data events
[12:12:20] <DaveMethvin> it was so bizarre i refused to document it :)
[12:15:15] <gnarf> .data("foo.bar") calls the events in the foo.bar namespace
[12:15:27] <gnarf> er rather "getData.bar" event
[12:15:43] <DaveMethvin> yeah, did you find the doc on that? it was in some release notes
[12:15:54] <DaveMethvin> or did you just look at the code you cheater
[12:18:49] <gnarf> just went and found the unit tests
[12:18:54] <gnarf> and read the code
[12:19:12] <gnarf> this whole block is really just wacky imo
[12:19:19] <gnarf> like why are we firing this event "exclusive"
[12:19:38] <gnarf> and is this the only thing that uses this "!" calling convention in events?
[12:19:43] <DaveMethvin> yes afaik
[12:19:50] <DaveMethvin> so it is double-double bizarrre
[12:20:36] <DaveMethvin> we alluded to this (but never clearly explained it, since clear explanation would be difficult) in some of the release notes, maybe 1.3, 1.4 time frame
[12:21:08] <timmywil> gnarf, DaveMethvin: walked through the stack.  the only thing special that namespacing events does as far as i can tell is also check foo if foo.bar doesn't exist
[12:21:30] <timmywil> that doesn't seem like a feature
[12:21:50] <gnarf> timmywil: agreed
[12:21:57] <DaveMethvin> yeah there are two things namespaces do, mainly we document that it's a way to avoid detaching the wrong handler
[12:22:08] <DaveMethvin> but you can also trigger events only for a specific namespace
[12:22:13] <gnarf> timmywil: switcing that to just "return data"
[12:22:22] <timmywil> DaveMethvin: but internally it's just a data key
[12:22:35] <DaveMethvin> yeah for data i can't understand the current situation at all
[12:22:37] <timmywil> it's like recommending manual namespacing using a '.'
[12:22:41] <kswedberg> scott_gonzalez: your user name on docs.jquery is Scott.gonzalez . you have Bureaucrat and Sysop privs. Same as me. …which means, anything I can do there, you can do better. :)
[12:22:46] <gnarf> but the issue is then, currently .data("foo.bar") with data undefined triggers getData.foo, then getData
[12:23:23] <timmywil> ah, yes it does.  ok that could be the feature
[12:23:28] <timmywil> but still
[12:24:06] <scott_gonzalez> kswedberg: heh, ok, so I just need to figure out how to do stuff :-P
[12:24:23] <kswedberg> exactly. :)
[12:24:33] <timmywil> docs#10544 accentuates the point I'm making because this has nothing to do with the data implementation
[12:24:34] <bot-t> [#10544] Different behavior between $.fn.data() and $.data() with namespaced key names (assigned bug) - http://jqbug.com/10544
[12:24:37] <kswedberg> oh, wait. Log in. then go here: http://docs.jquery.com/index.php?title=Special:Userlogin&type=signup
[12:24:48] <kswedberg> that should do it
[12:25:38] <timmywil> so, if people depend on this, it is only because they also bind to a namespaced data event
[12:26:13] <DaveMethvin> and i have no idea what code depends on this
[12:26:44] <DaveMethvin> we don't deal with this nonsense internally so it's a q of what external code may need it
[12:27:19] * gnarf gets scared
[12:28:55] <gnarf> so like
[12:29:13] <gnarf> what do we do?
[12:29:28] <gnarf> get stuck with this pile of bad behavior?
[12:30:00] <DaveMethvin> lets work at it from the bottom up
[12:30:02] <gnarf> i think the "foo.bar" ever returning "foo" is just plain wrong
[12:30:30] <DaveMethvin> $.data("ha.ha") should not care about dots for sure
[12:30:39] <gnarf> it doesn't
[12:30:47] <DaveMethvin> $.fn.data() is ALWAYS the troublemaker
[12:30:49] <gnarf> $.data at the root doesn't care
[12:30:50] <timmywil> gnarf: that's not a hard change, but then there really is absolutely nothing in the data implentation that does anything with namespaces
[12:30:59] <DaveMethvin> and there are lots of things $.data doesn't do that $.fn.data does
[12:31:06] <gnarf> DaveMethvin: only 3
[12:31:16] <gnarf> events, html5 attrs, and this namespace fallback
[12:31:16] <DaveMethvin> more than 3 is LOTS
[12:31:17] <DaveMethvin> :)
[12:31:33] <gnarf> we can remove the namespace fallback code
[12:31:42] <gnarf> and potentially remove the exclusive flag on the event
[12:32:00] <timmywil> what's the exclusive flag do?
[12:32:02] <gnarf> DaveMethvin: is that ! BS documented?
[12:32:07] <DaveMethvin> only in the code
[12:32:16] <DaveMethvin> fires an event ONLY for bare event names and not the namespaces
[12:32:17] <gnarf> timmywil: makes it so that if you fire a "getData" event it wont fire "getData.namespaced"
[12:32:33] <DaveMethvin> yeah
[12:32:39] <timmywil> k
[12:32:42] <gnarf> DaveMethvin: I would propose we change the meaning of that, so it would still fire a "getData" event but with a key of "foo.bar"
[12:32:50] <gnarf> instead of a "getData.bar" event with a key of foo
[12:32:53] <timmywil> well, in that case, data is still changing right?
[12:33:06] <DaveMethvin> if we're going to change the semantics in a breaking way i'd  prefer to remove the event entirely
[12:33:17] <gnarf> I can see someone depending on the event
[12:33:35] <DaveMethvin> but at  minimum the event is used by the jquery data binding plugin
[12:33:49] <DaveMethvin> we aren't supporting that anymore but no doubt ppl are using it
[12:34:38] <timmywil> i don't think we can remove data events, but maybe I'm confused.  wouldn't I want to know when any data is changed, even "namespaced" data, in my getData handler?
[12:34:45] <timmywil> so the exclusive part seems right
[12:35:16] <gnarf> also, if we remove this exclusive flag
[12:35:33] <gnarf> that might remove some cruft in events
[12:35:41] <timmywil> or is it just about what key is passed to the handler?
[12:35:51] <gnarf> timmywil: they key will change
[12:36:10] <timmywil> ah ok, nvm
[12:36:12] <gnarf> currently, .data("foo.bar") triggers a "getData.bar!" with "foo"
[12:36:17] <DaveMethvin> removing exclusive events would simplify stuff a little but not too much
[12:36:30] <gnarf> and .data("foo") triggers a "getData!" with "foo
[12:36:37] <timmywil> ok yea, that's what I thought was not intuitive
[12:36:40] <DaveMethvin> right, i think the idea was that bar would be the name of the "app" that cared about the data
[12:36:50] <DaveMethvin> it's a bizarro pubsub built into $.fn.data
[12:37:37] <gnarf> also, the fact that returning a value from getData event actually returns a value that OVERRIDES the one on the data cache
[12:37:45] <gnarf> it doesn't even set the data in the cache either....
[12:37:57] <timmywil> gnarf: you mean "getData" right? looks like the "!" is removed
[12:38:08] <gnarf> timmywil: no, i mean "getData!"
[12:38:21] <DaveMethvin> stop yelling!
[12:38:22] <gnarf> which is an "exclusive" "getData" event
[12:38:31] <DaveMethvin> but honestly the right way to do this in a program imo is to use a pubsub at the app level, not from the bowels of $.fn.data
[12:38:34] <timmywil> yes, which gets removed and triggers "getData"
[12:38:34] <gnarf> so it doesn't trigger "getData.mynamespace"
[12:38:52] <gnarf> but it doesn't trigger "getData.someNamespace"
[12:38:59] <timmywil> "getData.bar!" triggers the event "getData.bar" is what I'm saying
[12:39:00] <gnarf> like a standard trigger("getData") would
[12:39:34] <timmywil> anyway, yes, I'm ok with not making it exclusive
[12:40:08] <timmywil> and as far as falling back to "foo" in "foo.bar", that just seems like a bug.
[12:40:54] <timmywil> although I know it's not
[12:41:00] <DaveMethvin> timmywil: but not if there is some namespace "bar" that wanted to know when "foo" was set ..
[12:41:13] <timmywil> yes i know, but ugh
[12:41:16] <DaveMethvin> lol
[12:41:25] <DaveMethvin> yes i agree AND ugh
[12:41:26] <gnarf> currently .bind("getData.bar", function( e, key ) { if ( key === "foo" ) .... })
[12:42:13] <gnarf> would need to become .bind("getData.whateverNamespaceyouwant", function( e, key ) { if ( key === "foo.bar" ) .... })
[12:42:52] <gnarf> this would basically remove the "data namespace" concept
[12:42:59] <gnarf> which should be done
[12:43:15] <gnarf> .data("mynamespace").bar = whatever makes way more sense anyway
[12:43:21] <gnarf> and also lets you .removeData("mynamespace")
[12:43:21] <timmywil> but it's not even a real namespace!
[12:43:25] <timmywil> :P
[12:43:56] <timmywil> it's like some jumbled disguise of a namespace
[12:44:11] <gnarf> across two components - behaving differently
[12:44:30] <DaveMethvin> and now you know why i didn't want to document this
[12:44:39] <DaveMethvin> it's been around since at least 1.4 tho
[12:44:46] <gnarf> DaveMethvin: 1.2.6 has it
[12:44:54] <DaveMethvin> sshuuddder
[12:45:11] <gnarf> http://jsfiddle.net/gnarf/pNCP8/4/
[12:45:22] <gnarf> so
[12:45:30] <timmywil> that testcase is a little off tho
[12:45:56] <gnarf> Strategy: Remove any special meaning for "foo.bar" as a data key - make getData events no longer "exclusive"
[12:46:00] <timmywil> div.data('name.removeme') returns 'removeme' correctly the first time and undefined correclty the second time (cause it gets removed)
[12:46:12] <timmywil> but the weird one is name.whatevs
[12:46:25] <gnarf> timmywil: it doesn't return undefined tho
[12:46:29] <gnarf> it returns "name data"
[12:46:50] <gnarf> data has been removed before the first log
[12:46:50] <timmywil> ah, missed the first remove there
[12:47:03] <timmywil> ok, whatevs
[12:47:05] <timmywil> ^^
[12:47:07] <timmywil> ;)
[12:47:21] <gnarf> returning to.... Strategy: Remove any special meaning for "foo.bar" as a data key - make getData events no longer "exclusive"
[12:47:49] <gnarf> Schedule?
[12:47:53] <timmywil> agreed.  if it's going to have special meaning, it should be a real namespace and I don't think anyone wants to add that.
[12:48:18] <gnarf> especially since you could easily make your own data "namespace" using a datakey (like ui does with widget instances)
[12:48:29] <DaveMethvin> so many better ways to do this, agreeed
[12:48:37] <timmywil> I'd say update the ticket and we'll use that one
[12:48:43] <DaveMethvin> $.fn.data should not be in this business
[12:48:50] <DaveMethvin> but is this too late for 1.7?
[12:49:06] <DaveMethvin> i mean if it was just a bug no problem, but this is a breaking change somewhere
[12:49:18] <timmywil> add it to the deprecated list
[12:49:22] <DaveMethvin> we just haven't figured out who is using this feature that we never really documented
[12:49:38] <timmywil> DaveMethvin: btw, did you see the minutes for monday's meeting?
[12:49:46] <DaveMethvin> no i didn't
[12:49:47] <gnarf> is it too late?
[12:49:47] <timmywil> http://bit.ly/i3vsit
[12:49:57] <gnarf> i mean, i could make this change in like an hour
[12:50:12] <gnarf> but
[12:50:13] <timmywil> but we should see how many people it will affect first
[12:50:15] <DaveMethvin> sure the change is small but ...
[12:50:23] <gnarf> agreed
[12:50:29] <gnarf> i doubt we are gonna point release it
[12:50:36] <DaveMethvin> agreed ther tooo
[12:50:36] <gnarf> so target for 1.8 ?
[12:50:46] <DaveMethvin> i guess so, we can discuss then and give ppl notice
[12:50:54] <DaveMethvin> i would LOVE to remove all the event stuff tbh
[12:50:55] <timmywil> yea, we have a few things we want to deprecate and warn removal in 1.8.  We can add this to that list
[12:50:59] <gnarf> with immediate deprecation of "getData.namespace" events ?
[12:51:21] <gnarf> DaveMethvin: i would agree as well
[12:51:31] <gnarf> DaveMethvin: with removing the getData/setData events
[12:51:38] <DaveMethvin> yeah
[12:51:51] <DaveMethvin> and we'll need to document that dots are magical in event names in the meantime
[12:51:51] <timmywil> DaveMethvin: that may be harder.  get/setData are useful to certain plugins
[12:52:15] <DaveMethvin> we could make the feature a monkey-patch though
[12:52:33] <DaveMethvin> it just slows down all the $.fn.data  operations like 10x  over $.data
[12:52:42] <timmywil> we can certainly debate it
[12:52:43] <DaveMethvin> for a VERY small group of needs
[12:52:52] <timmywil> be back soon
[12:53:12] <timmywil> DaveMethvin: i just wanted you to see we proposed a date for rc1
[12:53:15] <DaveMethvin> ok so it sounds like the 1.7 resolution is to document the magic of dots
[12:53:19] <DaveMethvin> yeah saw that
[12:53:23] <DaveMethvin> i guess we may as well
[12:53:30] <DaveMethvin> what else should go in?
[12:53:46] <DaveMethvin> i saw a few things that could go
[12:53:51] <timmywil> DaveMethvin: and i wanted to get your eyes on this https://github.com/jquery/jquery/pull/550
[12:53:52] <socialhapy> ★ Pull request on jquery by rwldrn (3d, 2h ago): IE6,7,8 cannot cache fragments of unknown elems. Fixes #10501
[12:53:52] <DaveMethvin> from the pull queue
[12:54:18] <timmywil> https://github.com/jquery/jquery/pull/554 this can probably go in
[12:54:19] <socialhapy> ★ Pull request on jquery by mathiasbynens (1d, 4h ago): #10531: Remove `layerX` and `layerY`
[12:54:22] <timmywil> alright, gotta run
[12:54:33] <DaveMethvin> i will be on and off today and tomorrow, still on the west coast
[12:54:41] <DaveMethvin> working at a starbux right now
[12:56:31] <gnarf> hrm
[12:57:58] <DaveMethvin> on battery
[12:58:11] <DaveMethvin> running out of coffee
[12:58:16] <DaveMethvin> and i have to pee
[13:00:02] <rwaldron> bummer dude
[13:00:19] <gnarf> so um
[13:00:24] <gnarf> bug/feature/enhancement
[13:00:26] <gnarf> bug?
[13:00:34] <rwaldron> oh, neat, exactly what I came to discuss
[13:02:05] <gnarf> http://bugs.jquery.com/ticket/10544#comment:5 seem fair? I marked the "version" 1.2.6 because this broken shit has been there that long ;)
[13:03:21] <DaveMethvin> yeah sounds good ... and hi rwaldron
[13:04:14] <rwaldron> hi DaveMethvin
[13:04:19] <DaveMethvin> obtw gnarf rwaldron it looks like ui datepicker is using the data events
[13:04:30] <gnarf> DaveMethvin: it wont be in 1.9
[13:04:37] <gnarf> i'll make that personal promise
[13:04:38] <gnarf> :)
[13:04:44] <rwaldron> hahaha
[13:05:02] <rwaldron> you might need to run that by MJG International's lawyers
[13:06:06] <gnarf> rwaldron: DaveMethvin needing to pee is what you came to discuss?
[13:06:07] <DaveMethvin> kill gnarf kill  https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js#L168
[13:06:17] <DaveMethvin> well it's important to ME rwaldron
[13:06:23] <rwaldron> gnarf DaveMethvin no, pull requests
[13:06:27] <gnarf> oh
[13:06:40] <DaveMethvin> yeah just wondering what we could throw in before rc1
[13:06:47] <rwaldron> DaveMethvin i ahve a blocker
[13:06:54] <rwaldron> patched and ready to rock
[13:07:11] <rwaldron> DaveMethvin https://github.com/jquery/jquery/pull/550
[13:07:12] <socialhapy> ★ Pull request on jquery by rwldrn (3d, 2h ago): IE6,7,8 cannot cache fragments of unknown elems. Fixes #10501
[13:07:20] <DaveMethvin> yeah defs need that oen
[13:07:34] <rwaldron> IE 6,7,8 will take a small perf hit on html5 elems
[13:07:42] <rwaldron> but fuck them anyway
[13:08:15] <DaveMethvin> lol
[13:08:16] <rwaldron> this fixes several append()/html() inconsistencies that jd bartlett helped uncover
[13:08:32] <DaveMethvin> i gotta run and find an outlet
[13:08:43] <DaveMethvin> battery ... low ... must ... recharge
[13:08:45] <DaveMethvin> and pee
[13:08:52] <DaveMethvin> back in a while
[13:09:45] <gnarf> hey rick
[13:10:03] <gnarf> when you're doing whitespace reviews - do you do them in a text editor - or just on raw view?
[13:12:51] <rwaldron> raw
[13:12:58] <rwaldron> but sometimes in a test editor
[13:13:07] <rwaldron> if it's > 4-5 lines
[13:13:23] <timmywil> back
[13:14:37] <rwaldron> timmywil <3
[13:14:50] <timmywil> what is this? https://github.com/jquery/jquery/pull/558
[13:14:50] <socialhapy> ★ Pull request on jquery by mattheworiordan (29m, 58s ago): clone does not work for checkboxes on IE9 correctly, your tests were faulty
[13:14:56] <rwaldron> crap
[13:15:07] <rwaldron> i pinged you on it because i hate the code
[13:15:09] <timmywil> there's no way .checked doesn't set checked
[13:15:23] <rwaldron> but I figured you could dash it with authority
[13:15:36] <rwaldron> the whole thing seemed like bullshit to me
[13:15:44] <rwaldron> i just had fun picking apart the code
[13:15:49] <timmywil> oh ha, he's checking the attribute
[13:15:53] <timmywil> fail
[13:16:10] <rwaldron> timmywil http://bugs.jquery.com/ticket/10550
[13:16:24] <timmywil> yea, im looking at his test
[13:16:36] <timmywil> he's checking that .checked sets the attribute (noooo)
[13:18:37] <rpflo> I finally made this for my co-workers
[13:18:37] <rpflo> https://twitter.com/ryanflorence/status/126051380044636160
[13:18:39] <socialhapy> ★ Tweet from ryanflorence: prop v. attr, and what the crap. http://t.co/TfNLs4KP ★ http://bit.ly/r5WpsQ
[13:21:00] <timmywil> rpflo: nice
[13:21:12] <timmywil> http://timmywillison.com/pres/attributes/#boolean-example
[13:22:38] <rpflo> timmywil: ooh, love the table.
[13:29:23] <timmywil> DaveMethvin: how was it
[13:31:33] <timmywil> rwaldron: <3 also.  i went off on a tangent there.
[13:31:59] <DaveMethvin> i feel better
[13:32:31] <timmywil> the guy insulted .checked!
[13:32:32] <rwaldron> DaveMethvin nice
[13:32:40] <rwaldron> timmywil nice one
[13:32:59] <rwaldron> DaveMethvin http://www.wired.com/underwire/2011/10/coders-filmmakers-popcorn/all/1
[13:33:05] <rwaldron> and watch the video at the bottom :D
[13:33:08] <DaveMethvin> yeah that's not a good way to title a pull request
[13:33:25] <DaveMethvin> "you guys fucked up, here's how i'm bailing out your ass"
[13:33:40] <rwaldron> "hey checkout my broken ass logic"
[13:33:51] <timmywil> he looks like simon
[13:34:08] <timmywil> from american idol
[13:34:27] <timmywil> maybe he is!
[13:34:50] <DaveMethvin> "that patch was horrid, like some karaoka band"
[13:35:05] <timmywil> lol
[13:45:25] <gnarf> My next pull will be titled "[object object] in my jaqueries"
[13:45:32] <DaveMethvin> rwaldron: nice linky there ... yer FAMOUSE dude!
[13:46:00] <DaveMethvin> for geeks, having your pix in wired is like being on the cover of Rolling Stone
[13:48:25] <gnarf> dude rwaldron - that popover info screen is hot
[13:52:26] <timmywil> rwaldron: haha If JavaScript is to the web what ActionScript is to Flash, I want Popcorn.js to be the new Flash ActionScript. There, I said it.
[13:52:41] <timmywil> nice
[13:53:18] <rwaldron> ya know how sometimes I go on blind rants....
[13:53:25] <rwaldron> that was one of those times
[13:53:31] <rwaldron> but that quotes is pretty good
[13:53:36] <rwaldron> quote*
[13:53:37] <timmywil> it is
[13:53:37] <rwaldron> hahaha
[13:53:48] <rwaldron> "There, I said it"
[13:53:59] <rwaldron> I'm sure it will serve to stir some shit up somewhere
[13:54:01] <DaveMethvin> "Whoops he did it again"
[13:54:05] <rwaldron> hahahahahaha
[14:00:28] <rpflo> I show up to events simply to hear rwaldron
[14:00:31] <rpflo> 's latest rant
[14:00:57] <timmywil> and slice up ajpiano
[14:03:16] <rwaldron> truth
[16:24:19] <mikesherov> timmywil, here?
[16:24:53] <timmywil> mikesherov: hey, yea, I'm fine with == null, but I bet === null would be fine too
[16:25:02] <timmywil> I assumed you meant the property wasn't even there
[16:25:47] <timmywil> but that makes more sense
[16:26:10] <mikesherov> yeah, existent properties dont have currentStyle when disconnected
[16:26:24] <mikesherov> which is why  currentStyle is DUMB
[16:27:00] <timmywil> mikesherov: there's a difference between not having currentStyle and currentStyle being set to null
[16:27:19] <timmywil> it has currentStyle, it's just null because it's disconnected
[16:27:34] <mikesherov> i can do === if you like, but i haven't run enough tests to gaurantee undef doesnt happen, although i suppose it's reasonable to assume
[16:27:58] <timmywil> not a big deal, but I'm willing to bet undefined would not happen
[16:28:14] <timmywil> just checked ie6-8 and it's all null
[16:28:19] <mikesherov> yeah, i agree
[16:28:24] <mikesherov> k
[16:28:34] <mikesherov> so i'll update
[16:28:39] <timmywil> thanks mike!
[16:28:41] <mikesherov> only took me 4 comits ;-)
[16:28:55] <timmywil> functionunction
[16:29:16] <mikesherov> LOL
[16:29:30] <mikesherov> this function haqs too many unctions in it
[16:29:31] <timmywil> ;)
[16:30:14] <mikesherov> ok, updated
[16:30:26] <mikesherov> housekeeping question:
[16:30:39] <mikesherov> should i squash these commits and repush?
[16:30:53] <timmywil> no worries, we squash when we merge
[16:31:19] <mikesherov> ok, so all my commit messages get blasted out anyway
[16:31:24] <timmywil> yea
[16:31:43] <mikesherov> i want to make sure "take 3" doesn't make it into the history
[16:32:13] <timmywil> heh, yea not a problem
[16:32:18] <mikesherov> cool
[16:32:30] <timmywil> gotta run, ttyl mikesherov
[16:32:39] <mikesherov> later
[16:32:44] <mikesherov> thanks for the help
[16:32:53] <timmywil> np, thank you
[16:32:59] <mikesherov> np
[16:37:08] <rwaldron> timmywil i'm seeing something awful in IE9
[16:37:19] <rwaldron> value="on"?
[16:37:39] <rwaldron> but there is so much that is stupid about this dude's test case
[16:38:05] <rwaldron> hm.
[16:39:51] <rwaldron> boom
[16:39:54] <rwaldron> disproved.
[16:42:28] <rwaldron> shit, i didnt notice that he left
[16:42:36] <rwaldron> ?tell timmywil That test case is invalid and disproven: http://jsfiddle.net/rwaldron/cq2PB/
[16:42:37] <bot-t> rwaldron, Okay.
[17:02:41] <timmywil> rwaldron: it makes more sense now, but I was bout to bust some heads
[17:02:41] <bot-t> (20 mins 4 secs ago) <rwaldron> tell timmywil That test case is invalid and disproven: http://jsfiddle.net/rwaldron/cq2PB/
[17:03:06] <rwaldron> which part makes sense?
[17:03:12] <rwaldron> timmywil ^
[17:03:49] <timmywil> rwaldron: not a lot of sense mind you, but he's saying the html from the cloned node doesn't create a checked checkbox when appended, which in other browsers it actually does.
[17:04:11] <timmywil> in ie9, setting defaultChecked apparently doesn't create an attribute like everywhere else
[17:04:13] <rwaldron> ok, then we're on the same page
[17:04:26] <rwaldron> but I still think his approach is broken
[17:04:28] <timmywil> but wtf, append the node
[17:04:32] <rwaldron> yeah
[17:04:34] <rwaldron> exactly.
[17:04:53] <timmywil> that's much easier than trying to set broken attributes for people
[17:05:04] <timmywil> and he loses everything else that clone does
[17:05:54] <rwaldron> i was trying to find some kind of historical documentation to back me up
[17:06:00] <rwaldron> but was basically preparing the same response
[17:06:02] <rwaldron> it's hard
[17:06:08] <timmywil> any other DOM properties that don't display as attributes will also not be represented
[17:06:11] <rwaldron> I should be able to say "You're doing it wrong"
[17:06:20] <timmywil> lol
[17:07:12] <timmywil> rwaldron: you can say that to me.  im fine with that
[17:07:36] <timmywil> no docs required!
[17:08:13] <rwaldron> :)
[17:08:21] <rwaldron> i expect the same in return!!!
[17:43:05] <sneakyness> hey guys
[18:40:47] <timmywil> hey sneakyness
