[00:25:02] <DarsVaeda> hi, is there a release timeline?
[05:36:27] <scott_gonzalez> DaveMethvin: Are you really contemplating supporting 1/0 for .outerWidth() getter?
[05:36:33] <DaveMethvin> NO
[05:36:43] <scott_gonzalez> Why did you reopen that bug?
[05:36:48] <DaveMethvin> to close it as a dup
[05:36:51] <scott_gonzalez> Ah, ok
[05:37:13] <scott_gonzalez> You had me worried for a second :-P
[05:37:18] <DaveMethvin> haha
[06:01:50] <DaveMethvin> mikesherov: got a second?
[06:01:59] <mikesherov> hey!
[06:02:14] <DaveMethvin> i decided to add something about outerWidth in that blog post
[06:02:21] <mikesherov> Going under the water in a few moments, so literally, I got about a minute
[06:02:28] <DaveMethvin> just wanted a double check on what i wrote
[06:02:29] <mikesherov> yeah, we should mention dimension setters
[06:02:35] <DaveMethvin> https://docs.google.com/document/d/1iGIfg0NjA9e7EQ_G9Ul6RyVbvarJWZNwLUP1cw3J6u0/edit
[06:02:38] <mikesherov> send it over
[06:07:07] <mikesherov> One thing that'll trip people up is that as a getter, first arg is bool, and as a setter, second arg is bool
[06:07:07] <mikesherov> just need to clarify that a bit
[06:07:07] <mikesherov> .
[06:07:17] <kswedberg> DaveMethvin: looks like we need to update the docs for outerWidth / outerHeight then.
[06:07:33] <DaveMethvin> yeah
[06:07:46] <DaveMethvin> kswedberg: i used to be able to edit the entries pretty easily
[06:08:00] <DaveMethvin> but now I need quite a bit of setup?
[06:08:00] <kswedberg> Sorry I've been so delinquent lately on the docs. Vacation screwed me up.
[06:08:04] <DaveMethvin> i need to do that
[06:08:26] <DaveMethvin> i've just been putting it off because all the sites were in transition
[06:08:41] <DaveMethvin> and i didn't want to edit the old site and give you a pile of work to do moving it over
[06:08:42] <kswedberg> DaveMethvin: don't worry about it. If you just want to update the live docs, I can update the github docs to sync up with the live.
[06:09:38] <kswedberg> DaveMethvin: also, I was thinking it would be helpful to have an oksoclap page with a list of all the doc updates that need to be made.
[06:10:00] <DaveMethvin> kswedberg: let me do that, it will be a good todo in any case
[06:10:19] <kswedberg> DaveMethvin: do what?
[06:10:25] <DaveMethvin> make a clap
[06:10:30] <kswedberg> ok, do it here: http://oksoclap.com/jquery-1-8-docs
[06:10:36] <DaveMethvin> oh, thanks!
[06:10:40] <kswedberg> :)
[06:14:48] <kswedberg> gnarf: I keep losing the link to your doc in progress for new animate stuff. can you put it in the clap ↑?
[07:00:17] <rwaldron> DaveMethvin ping
[07:00:29] <DaveMethvin> rwaldron: pong
[07:00:38] <rwaldron> so, the jQuery.trim patch...
[07:01:14] <rwaldron> I just went through test262 and found a boat load of tests that support his change
[07:01:17] <rwaldron> it's all legit
[07:01:25] <DaveMethvin> for OUR use cases?
[07:01:35] <rwaldron> but I'm not sold on the practicality
[07:01:38] <DaveMethvin> i don't care if $.trim passes or fails the 262 tests
[07:01:39] <rwaldron> exactly
[07:01:45] <rwaldron> same here
[07:01:51] <DaveMethvin> i care if it breaks for the cases where we use it
[07:02:08] <DaveMethvin> if someone wants strict 262 compliance they can use a shim
[07:02:10] <rwaldron> also agreed
[07:02:24] <DaveMethvin> also, 41 bytes :D
[07:02:50] <rwaldron> yeah, it's a bit much
[07:03:14] <rwaldron> get
[07:03:17] <rwaldron> ack
[07:03:19] <rwaldron> get it
[07:03:23] <rwaldron> a "bit" much
[07:03:31] <DaveMethvin> haha (ugh)
[07:03:42] <rwaldron> don't sweat it, that pun sucked.
[07:04:06] <DaveMethvin> let's make a blood pact to never expose utility methods like that again
[07:04:18] <DaveMethvin> i've never seen so much attention to a stupid string trim function
[07:04:28] <jqcommit> [api.qunitjs.com] jzaefferer pushed 1 new commit to master: http://git.io/6PhPVw
[07:04:28] <jqcommit> [api.qunitjs.com/master] Undo moving dir property to config.json, its not user-configurable - Jörn Zaefferer
[07:05:02] * rwaldron cuts self, offers blood
[07:05:30] <rwaldron> I wish lodash/underscore had existed when jQuery was first created
[07:05:36] <rwaldron> so much of this could've been offloaded
[07:06:42] <DaveMethvin> yeah
[07:08:22] <rwaldron> Also, making progress on getting a "deep merge" into ES6
[07:09:09] <rwaldron> it wont do [[DefineOwnProperty]], just [[Put]], but will drill down into properties that are objects on both sides
[07:09:21] <rwaldron> as well as a shallow batch [[put]] assignment api
[07:09:34] <DaveMethvin> that would be mighty handy
[07:09:49] <DaveMethvin> i thought that was abandoned b/c it couldn't construct objects
[07:09:49] <rwaldron> and a "fixed" batch define api
[07:10:09] <DaveMethvin> for plain objects with no constructors it would save a LOT of time tho
[07:10:41] <rwaldron> Object.define( target, source ) -> will  [[DefineOwnProperty]] with writable: true, configurable: true, enumerable: true (with definePropert(y|ies) those are all false
[07:11:02] <rwaldron> Object.put( target, source ) -> [[Put]] values
[07:11:18] <rwaldron> Object.merge( target, source ) -> deep [[Put]] values
[07:11:45] <rwaldron> they are separate because any attempt to combine would result in the whole thing getting killed
[07:12:50] <rwaldron> so I'm approaching it as though these are orthogonal, giving abstractions and lib authors the most amount of flexibility
[07:13:48] <rwaldron> DaveMethvin if you;re interested, this is my initial discussion opener and will be the basis for a new sketch/strawman: https://gist.github.com/c50c23e45b8a298580ea
[07:14:02] <DaveMethvin> cool i'll take a look later
[07:14:05] <rwaldron> rad
[07:14:43] <rwaldron> Also, v8 dudes published a version of Chromium that supports the Object.observe API
[07:14:51] <rwaldron> it's REALLY AWESOME
[07:15:11] <rwaldron> https://github.com/rafaelw/v8
[07:15:29] <rwaldron> just download a pre-built
[07:15:34] <rwaldron> (link in the readme)
[07:16:12] <DaveMethvin> awesome! a non-crappy way to implement the jquery-datalink plugin!
[07:17:35] <rwaldron> DaveMethvin it's really, really cool
[07:17:48] <rwaldron> one sec
[07:46:25] <jqcommit> [jquery] jaubourg pushed 1 new commit to master: http://git.io/Tns6xw
[07:46:25] <jqcommit> [jquery/master] Calling load with null as the data parameter now properly issues a GET request, not a POST request. Unit tests added. Fixes #12234. - jaubourg
[08:05:48] <doesallmagic> Project jQuery Core build #314: FAILURE in 19 min: http://swarm.jquery.org:8080/job/jQuery%20Core/314/
[08:05:48] <doesallmagic> j: Calling load with null as the data parameter now properly issues a GET request, not a POST request. Unit tests added. Fixes #12234.
[08:11:42] <jzaefferer> ?tell jaubourg you broke it: http://swarm.jquery.org/job/523
[08:11:43] <bot-t> jzaefferer, Okay.
[08:44:10] <jaubourg> hello there
[08:44:10] <bot-t> (32 mins 20 secs ago) <jzaefferer> tell jaubourg you broke it: http://swarm.jquery.org/job/523
[08:44:43] <jaubourg> jzafferer: except it passes in chrome 21 and I have no clue why chrome 19 is halting on the HEAD request test
[08:45:41] <jzaefferer> jaubourg: browserstack doesn't have to 21 as stable, otherwise we could just test against 20/21 and pretend the issue doesn't exists...
[08:46:20] <jaubourg> any way to re-launch the ajax tests just to see if it wasn't a hiccup?
[08:46:42] <jaubourg> it's very surprising it halts '"far away' from the tests I modified
[08:46:56] <jzaefferer> generally testswarm reruns failed tests, but might still be a hiccup...
[08:48:13] <jaubourg> I may have broken something, mind you, but it just seems strange to me given it passes on 20 and 21 and halts in a place I didn't touch.
[08:48:30] <jaubourg> now, it's javascript, so you may commit in dojo and break YUI but heh
[08:49:06] <scott_gonzalez> jaubourg: I'll test for you.
[08:49:33] <jaubourg> thanks scott
[08:49:57] <scott_gonzalez> Yup, it's hanging on the HEAD test.
[08:50:05] <jaubourg> weird
[08:50:15] <scott_gonzalez> It did eventually continue though.
[08:50:29] <scott_gonzalez> But it timed out.
[08:50:55] <scott_gonzalez> jzaefferer: Is there a reason that the test would timeout for me, but just completely hang in TestSwarm?
[08:51:19] <jaubourg> ok, now to understand what I may have changed to warrant this
[08:51:29] <scott_gonzalez> There are actually a few tests that timeout and some that fail.
[08:51:39] <scott_gonzalez> Hard to tell if the failures are side effects of the timeouts though.
[08:51:46] <scott_gonzalez> jaubourg: Do you have a BrowserStack account?
[08:52:11] <jaubourg> yes but I need to remember my password and all ;)
[08:52:47] <jaubourg> oh nice
[08:52:58] <scott_gonzalez> heh
[08:53:03] <jaubourg> I guess I can point to testswarm or something? I haven't touched it for months
[08:53:16] <scott_gonzalez> Yeah, you can point to http://swarm.jquery.org/build/jquery/b292c4c2df673d17d8c720e13d4d81ecae4ec499/test/index.html?module=ajax
[08:53:37] <jaubourg> awesome, thanks so much scott
[08:53:47] <scott_gonzalez> You can also setup a tunnel to your code to run the tests against your modified code for debugging/developing.
[08:54:13] <scott_gonzalez> Setting up the tunnel is as simple as telling it the name of your virtual host :-)
[08:54:24] <scott_gonzalez> It's like magic.
[08:55:36] <jaubourg> hmmm, chrome dev tool reports a 400 bad url
[08:55:38] <jaubourg> wtf?
[08:56:11] <scott_gonzalez> Maybe it was just a bug in Chrome 19 with HEAD requests?
[08:56:26] <scott_gonzalez> Seems odd.
[08:56:36] <jaubourg> yeah, it's weird, especially if it worked before
[08:57:40] <jaubourg> that's the same URL I request with the new tests
[08:58:04] <jaubourg> could be some kind of weird interaction, though the tests in question are not ran first :/
[08:59:17] <jaubourg> sadly can't investigate right now, soon to be in a phone interview
[09:24:42] <mikesherov> DaveMethvin: I like the blog post
[09:34:43] <jaubourg> I really have no clue what the problem is
[09:35:17] <jaubourg> jzaefferer: I may take you on the idea of switching to 21 as stable and act as if nothing happened :P
[09:36:48] <mikesherov> Ugh, I hate weak inferences
[09:37:04] <jaubourg> mikesherov: where?
[09:37:20] <mikesherov> trying to fix the .ready() regression in IE
[09:37:50] <mikesherov> if you open this in IE10, and then hit run a second time, .ready() is borked: http://jsfiddle.net/dKDdj/4/
[09:38:29] <jaubourg> I don't have IE10 installed yet, what happens?
[09:38:37] <mikesherov> so, I want to include IE9 and IE10 in the list of browsers that can't deal with readyState == 'interactive'
[09:39:05] <jaubourg> oh, I see. And you need to sniff the browser somehow sadly, right?
[09:39:14] <mikesherov> jaubourg: browserstack! But what happens is the fire fires synchronously
[09:39:24] <mikesherov> but what a second
[09:39:27] <mikesherov> wait a second
[09:39:31] <mikesherov> hmmm
[09:39:37] <jaubourg> you timeout it
[09:39:40] <jaubourg> could
[09:40:12] <mikesherov> wait a second here.
[09:40:20] <mikesherov> This is not that .ready() is borked!
[09:40:25] <jaubourg> so IE is in interactive mode if only document.written scripts are yet to execute
[09:40:33] <jaubourg> ?
[09:40:52] <mikesherov> .ready() just means the dom is safe to manipulate
[09:41:03] <jaubourg> exactly
[09:41:12] <jaubourg> says nothing about everything else being loaded
[09:41:20] <mikesherov> people are relying on the async deferred nature of promises
[09:41:36] <mikesherov> when we know that promises are not always async
[09:41:49] <mikesherov> Grrr
[09:41:53] <jaubourg> then again, you can timeout the reseolve if you needed to
[09:42:03] <jaubourg> but I doubt it's the issue
[09:42:06] <mikesherov> I, like you, love that deferred can be sync or async
[09:42:24] <mikesherov> but this example shows people not understand that about them
[09:43:15] <jaubourg> I don't get it, would using setTimeout( defer.resolve, 0 ); actually solve the problem?
[09:43:42] <mikesherov> look at the fiddle
[09:43:57] <jaubourg> I have it in front of me
[09:44:16] <mikesherov> unless the .ready() call itself was setTimeout'ed, this code only works with async .ready() resolution
[09:44:18] <jaubourg> bwahahahaha
[09:44:21] <jaubourg> getting it now
[09:44:49] <mikesherov> basically, people expect .ready() to always fire async?
[09:44:54] <mikesherov> and that's usually the case
[09:44:56] <jaubourg> it didn't before
[09:45:02] <mikesherov> right
[09:45:04] <jaubourg> it could be called synchronously
[09:45:07] <mikesherov> SURE
[09:45:20] <mikesherov> but people never really encountered it on initial load
[09:45:36] <jaubourg> no, only when everything is in cache and executed right away... like IE likes to do
[09:45:38] <mikesherov> that by the time they got to the bottom of the page, that readyState would already be interactive!
[09:45:56] <jaubourg> same thing with IE calling readystatechange before returning a send call on the xhr when data is in cache
[09:45:58] <jaubourg> very IE
[09:46:17] <mikesherov> Right, by making .ready() happen faster (which is awesome), it broke an assumption people had about .ready() at the bottom of the page
[09:46:40] <jaubourg> heh, the script element has been parsed, the dom is ready
[09:46:48] <mikesherov> the dom IS ready
[09:46:56] <mikesherov> you can manip that dom no problem
[09:47:05] <jaubourg> good, nothing to fix \o/
[09:47:07] <mikesherov> so sync execute
[09:47:19] <mikesherov> Right, except everyone's code
[09:47:34] <mikesherov> well, maybe something, but nothing ATM
[09:47:53] <jaubourg> franckly, I'd argue that doing code like this is pushing it, nothing prevents you from declaring the variable and assign to it first
[09:48:04] <mikesherov> right
[09:48:16] <mikesherov> and you shouldnt ever rely on deferred exec
[09:48:22] <mikesherov> of a promise
[09:49:00] <jaubourg> strangely, even without promises, this would have failed with the old callback trigerring code
[09:49:19] <jaubourg> it's just that the DOM is ready earlier really
[09:49:30] <mikesherov> right
[09:49:48] <mikesherov> by saving people page load time, I screwed them over
[09:50:33] <jaubourg> damnit, I know what went wrong in #12233
[09:50:43] <jaubourg> OMG mikesherov, you broke the interweb
[09:50:52] <jaubourg> ;)
[09:53:12] <mikesherov> DaveMethvin: ^^^
[09:54:20] <mikesherov> Looks like I didn't really break $(document).ready(), at least not according to the test case
[10:01:39] <gnarf> kswedberg: doc in progress is in the release notes
[10:01:40] <bot-t> (1 hour 14 mins ago) <gseguin> tell gnarf: We need to get started on the node server for the jQM download builder as Joyent is retiring their no.de machines
[10:13:47] <jqcommit> [jquery] jaubourg pushed 1 new commit to master: http://git.io/WyU3vA
[10:13:47] <jqcommit> [jquery/master] Makes sure "adding" a string to a Callbacks object doesn't cause a stack overflow, just ignore the value like 1.7.x righfully did. Fixes #12233. Unit tests added. - jaubourg
[10:38:15] <doesallmagic> Project jQuery Core build #315: STILL FAILING in 24 min: http://swarm.jquery.org:8080/job/jQuery%20Core/315/
[10:38:16] <doesallmagic> j: Makes sure "adding" a string to a Callbacks object doesn't cause a stack overflow, just ignore the value like 1.7.x righfully did. Fixes #12233. Unit tests added.
[10:39:48] <jaubourg> sooo, the HEAD request hanging has now switched from Chrome 19 to Chrome 20 ><
[10:40:32] <jaubourg> + a ready test failing in IE9
[10:40:34] <jaubourg> \o/
[10:41:15] <scott_gonzalez> haha
[10:41:19] <scott_gonzalez> It's contageous.
[10:42:11] <jaubourg> seems so
[10:42:49] <jaubourg> gotta go back to the appartement right now... damn, I seem to have lost my mojo... for one bugs fixed, 3 appear \o/
[11:00:54] <Krinkle|detached> jzaefferer: gnarf FYI: the testswarm-browserstack is as good as ready, It is currently running as test in wikimedia-labs. I'm currently on vacation (which I took 7 days of, right after I got back in the Netherlands), getting back on next Tuesday/Wednesday. I'll push it to github then.
[11:00:57] <Krinkle|detached> cya
[11:37:44] <gnarf> http://bugs.jquery.com/ticket/12221 is a cant-fix I think
[14:04:55] <ajpiano> lol @ 12321
[14:06:33] <ajpiano> "Hello, I'm using an onclick event in an SVG element inside of a page where I've modified Object.prototype in quirks mode. I'm trying to trigger a CSS transition but it's throwing some warnings out to the console. Can you guys fix this?
[14:17:44] <DaveMethvin> He was SOOOO close, if he had only been trying to do it in IE5.5 he would have won!
[14:25:31] <scott_gonzalez> Hi guys! I see you've closed this bug and a million duplicates and explained why I'm having a problem. But I haven't bothered to read what you wrote, so you should reopen this one. Ok?
[14:26:06] <scott_gonzalez> HAHAHAHA 12322
[14:27:35] <ajpiano> ?13222
[14:27:53] <ajpiano> http://jqbug.com/12322
[14:29:07] <scott_gonzalez> The good tickets are just rolling in today.
[14:29:16] <snover> wat
[14:29:16] <b-ot> I want to meet the person in ruby who came up with this idea of naming them as begin.. rescue... end. Thats one frantic whose siter would make it to every ruby programmers most dirty dreams.
[14:29:19] <bot-t> ajpiano, Couldn't find "13222" in jQuery Docs.
[14:29:19] <ajpiano> i believe you mean trolling in today
[14:29:31] <scott_gonzalez> :-)
[14:30:42] <scott_gonzalez> bot-t: That was quite a delay. Do your parts need to be oiled?
[14:32:18] <bot-t> scott_gonzalez, Outlook not so good.
[14:47:47] <DaveMethvin> yeah scott_gonzalez, thanks for SLOWING DOWN MY SITE! If only UI wasn't so monolithic. I just want the tabs file from 2007!
[14:48:15] <scott_gonzalez> :-)
[14:48:41] <scott_gonzalez> I should've said "A slow site is better than a broken site, right?"
[14:49:44] <scott_gonzalez> He's worried about a slow down from including UI, but he's adding a DNS lookup for docs.jquery.com?!?
[14:50:23] <scott_gonzalez> How do you even get to the point where you're looking at a docs site and you think "I need those tabs on my site. Let me hotlink to the docs!"
[14:50:58] <DaveMethvin> it's easy to get there, just put one stupid move in front of the other
[14:52:38] <DaveMethvin> BOTH OF THEM SCOTT I INCLUDED **BOTH** OF THEM!
[14:52:52] <scott_gonzalez> heh
[14:54:48] <snover> wait wait
[14:54:50] <snover> someone did what?
[14:55:16] <scott_gonzalez> snover: http://bugs.jquery.com/ticket/12280
[14:55:29] <scott_gonzalez> They were linking to a js file from docs.jquery.com which no longer exists.
[14:55:47] <snover> scott_gonzalez: lol
[14:55:55] <snover> “All I need is the tabs though, I don't want to have to include a full UI”
[14:55:57] <snover> love it.
