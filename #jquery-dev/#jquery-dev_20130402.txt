[03:23:36] <gnarf> Krinkle|detached: i'd prolly change the url
[03:23:50] <gnarf> and sorry, you caught me at like the end of my day, i wandered off
[04:36:33] <Aquaguy> Hello, good morning, I'm experiencing some issue when using 1.9.1 and having Chrome's developer tools opened, jQuery is not properly loaded and things like jquery ui's draggable/sortable... don't work, when closing dev tools and reloading the window everything works properly, I guess it's because of an exception that is being raised.
[05:00:38] <scott_gonzalez> rwaldron: I decided to take two minutes and dig up that WHATWG event listener thread. I won't be responding to the forum post any more.
[05:01:05] <Aquaguy> http://jsfiddle.net/my9ZA/ that simple test is not working on Chrome Â 27.0.1453.9 m / Windows when Developer Tools are opened.
[05:01:40] <scott_gonzalez> Aquaguy: worksforme
[05:01:55] <scott_gonzalez> Version 23.0.1271.101
[05:02:03] <scott_gonzalez> ugh, wtf
[05:02:08] <scott_gonzalez> Do I have a broken auto-updater again?
[05:02:41] <scott_gonzalez> paul_irish: This is crap!
[05:03:14] <Aquaguy> I gave to check updates manually too
[05:03:20] <Aquaguy> have to *
[05:03:33] <scott_gonzalez> That doesn't even help me. It tells me I'm up to date.
[05:04:01] <scott_gonzalez> Last time I had to do a full install to fix it.
[05:09:45] <Aquaguy> I just installed 26.0.1410.43 m and the same test works, but in 27.0.1453.9 m and Canary builds don't work anymore
[05:17:34] <scott_gonzalez> Works fine for me in Version 28.0.1460.0 canary
[05:24:13] <Guest45723> Aquaguy, working for me 26.0.1410.43 debian
[06:41:01] <rwaldron> scott_gonzalez link?
[06:41:16] <scott_gonzalez> For the forum post or the ML thread?
[06:41:34] <rwaldron> the WHATWG event listener thread?
[06:41:43] <rwaldron> or maybe you can summarize?
[06:41:56] <rwaldron> I'm just wondering why you said you won't rspond to him anymore
[06:41:59] <rwaldron> aside from the obvious
[06:42:15] <scott_gonzalez> http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2012-May/036187.html
[06:42:33] <rwaldron> The thing that bugs me the most on that thread
[06:42:43] <rwaldron> is  his accusation that he's being dismissed
[06:42:47] <DaveMethvin> you're being hostile because you don't like my dumb idea
[06:43:05] <rwaldron> and that you and DaveMethvin don't understand
[06:43:16] <scott_gonzalez> While at the same time completely dismissing every comment from us.
[06:43:19] <rwaldron> I want to send him a messanger that will slap him with a trout
[06:43:41] <scott_gonzalez> We've directly responded to everything he has said.
[06:43:43] <DaveMethvin> if we had exposed those internals before 1.7 it woudn't have been possible to refactor all the lame .live() code
[06:43:46] <rwaldron> DaveMethvin exactly
[06:43:51] <rwaldron> scott_gonzalez exactly
[06:43:54] <scott_gonzalez> And his response to us is basically just "no, let me repeat myself"
[06:43:59] <rwaldron> yeah
[06:44:14] <DaveMethvin> let me ignore the fact that the w3c model doesn't let you get the handlers eithre
[06:44:46] <DaveMethvin> and then i will give you a lame example that redefines tabbing across fields
[06:44:51] <scott_gonzalez> rwaldron: You had actually replied to the WHATWG thread.
[06:44:57] <rwaldron> scott_gonzalez nice.
[06:45:01] <rwaldron> haha
[06:45:04] <rwaldron> what did i say?
[06:45:15] <DaveMethvin> something smart i'd guess
[06:45:33] <rwaldron> why thank you
[06:45:41] <rwaldron> looks like I agreed with you guys back then
[06:45:44] <rwaldron> as I do now
[06:45:48] <scott_gonzalez> That exposing the list of event handlers is dangerous because it allows arbitrary people to remove your code.
[06:45:50] <rwaldron> but for the standard model
[06:46:04] <scott_gonzalez> Also, "Please save the dramatics"
[06:46:12] <rwaldron> of course
[06:46:20] <DaveMethvin> all the important points are pretty well laid out in that whatwg thread
[06:46:31] <rwaldron> agreed
[06:46:47] <rwaldron> but his argument is that jQuery should provide an "abstraction"
[06:46:49] <rwaldron> hehe
[06:46:52] <rwaldron> bwahaha
[06:46:53] <rwaldron> sorry
[06:46:56] <rwaldron> "abstraction"
[06:47:28] <rwaldron> "give me a dump of all the events in raw data form, with no sense of context"
[06:47:34] <rwaldron> ...is not an abstraction
[06:47:39] <DaveMethvin> "you keep using that word, i do not think it means what you think it means"
[06:47:44] <rwaldron> hahahaha
[06:48:01] <rwaldron> I almost feel bad for him
[06:48:05] <rwaldron> because he _really_ doesn't
[06:48:09] <rwaldron> :(
[06:48:24] <DaveMethvin> it's just bad design
[06:48:37] <DaveMethvin> this is how you create code that doesn't play well with others
[06:48:39] <rwaldron> This is an interesting story
[06:48:53] <DaveMethvin> because you assume you control everything down to the CPU and nobody else wants it
[06:49:13] <rwaldron> this argument mirrors the enumerable weakmap argument
[06:49:24] <scott_gonzalez> But DaveMethvin, clearly we should remove .hide() and .show() from core.
[06:49:30] <rwaldron> it's been brought up once or twice
[06:49:45] <rwaldron> by someone that clearly misunderstands weakmap
[06:49:51] <rwaldron> I think it's the "map"
[06:49:55] <rwaldron> creates confusion
[06:50:48] <DaveMethvin> well if you just understand a few of the aspects of why something exists, or you basically assert that the ones you don't understand/know don't matter, that's how you get there
[06:50:48] <rwaldron> if you can somehow access the reference keys of a weakmap, it will create non-determinism that will prevent the gc semantics
[06:50:56] <rwaldron> which makes it "just a map
[06:50:57] <rwaldron> "
[06:51:05] <rwaldron> if jQuery can
[06:51:06] <rwaldron> ack
[06:51:35] <DaveMethvin> but yeah that's another example
[06:51:48] <rwaldron> if jQuery's event data becomes non-deterministic, from an implementation internal perspective, then... chaos.
[06:52:11] <rwaldron> DaveMethvin I like that summary
[06:52:23] <rwaldron> "well if you just understand a few of the aspects of why something exists, or you basically assert that the ones you don't understand/know don't matter, that's how you get there"
[06:53:36] <DaveMethvin> and it seems like he didn't see it creeping...first he asks for the handlers, then he asks for the selectors to get delegated events, then  he'll realize he needs the other data in that internal structure plus the special event hooks
[06:53:47] <DaveMethvin> pretty soon you've reimplemented the event handler logic in your code
[06:53:49] <DaveMethvin> poorly
[08:00:07] <siovene> Does anyone know if John-David Dalton is on IRC?
[08:00:53] <DaveMethvin> siovene he's jdalton on twitter, that's as close as I can get you
[08:01:22] <siovene> DaveMethvin: thanks, I follow him already. I'll ask him there :)
[08:01:59] <siovene> DaveMethvin: btw, concerning the perf tests in jquery: I made perfectjs API compatible with QUnit, so now jquery unit tests are used for benchmarking
[08:02:46] <scott_gonzalez> Why is there a sudden influx of discussion about promises? Is it because of DOM Futures?
[08:02:51] <siovene> DaveMethvin: the only problem I have (a big one) is that benchmarkjs is not being consistent enough across measurements, sometimes leading to values that are 50% different for the same code.
[08:03:40] <DaveMethvin> siovene that does sound like a problem
[08:04:01] <DaveMethvin> also the unit tests probably aren't good benchmarks as far as proportionally representative coverage
[08:04:26] <siovene> DaveMethvin: yeah but it's a start: I figure that people might not be motivated enough to write performance tests.
[08:04:41] <DaveMethvin> that's the truth!
[08:04:56] <siovene> DaveMethvin: I'm surprised about benchmarkjs behaving that way, because AFAIU it keeps measuring until it has a margin of error <1%.
[08:05:35] <DaveMethvin> scott_gonzalez it will be interesting to see how well the existing impls track DOM Futures
[08:05:53] <DaveMethvin> i think we should wait until it's settled and redo ours to the standard
[08:06:01] <DaveMethvin> providing input of course
[08:06:04] <scott_gonzalez> :-)
[08:19:38] <siovene> DaveMethvin: this is how it looks so far: http://siovene.github.com/perfectjs/examples/jquery/index.html
[08:19:47] <siovene> it's using the "core" unit tests.
[08:20:28] <siovene> unfortunately it's useless because benchmarkjs is not being consistent,  but I'll talk to John-David about that
[12:32:31] <jqcommit> 01[13jquery01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/DJxuiA
[12:32:31] <jqcommit> 13jquery/06master 1405d55d0 15Scott GonzÃ¡lez: Updated mailmap.
[12:33:20] <scott_gonzalez> DaveMethvin: ^^^ You're welcome :-)
[12:33:35] <DaveMethvin> yay scott_gonzalez!
[12:34:27] <scott_gonzalez> That actually helped a lot with the audit.
[12:35:17] <scott_gonzalez> BTW, is Julian's email in AUTHORS.txt his preferred email?
[12:35:32] <DaveMethvin> not sure, i thought so
[12:36:34] <scott_gonzalez> I thought he used the ubourg.net address
[12:36:40] <scott_gonzalez> The majority of his commits use that.
[12:37:23] <DaveMethvin> he may not have a strong preference ... i can't recall how i settled on that one
[12:37:43] <scott_gonzalez> ok, I'll ask him when he's around.
[12:38:54] <doesallmagic> Project jQuery Core build #749: STILL FAILING in 6 min 31 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/749/
[12:38:54] <doesallmagic> Scott GonzÃ¡lez: Updated mailmap.
[13:24:38] <paul___> Could you consider relaxing the rule for the new html parsing engine in $() to count it as html as long as the first non-whitespace character is a < ?
[13:24:44] <paul___> instead of just the first character
[13:25:00] <DaveMethvin> paul___ we're talking about doing that
[13:25:43] <DaveMethvin> paul___ but in return, no $() or .append() etc will run script by default
[13:25:56] <paul___> The templating engine that I use most frequently (EJS) has a habit of appending newlines to the beginning of partials.
[13:26:08] <paul___> Yes, that sounds reasonable.
[13:26:50] <DaveMethvin> right now they do run scripts and people expect it to, so this could be a breaking change for many
[13:27:01] <DaveMethvin> but we're going to try and get it into 2.0/1.10
[13:27:05] <DaveMethvin> i have a blog post coming
[13:27:12] <paul___> Thanks for considering it, that would be the major pain point in my migration.
[13:32:06] <scott_gonzalez> And he's gone.
[13:32:15] <scott_gonzalez> I wanted to ask him how painful it is to use $.parseHTML()
[13:32:28] <DaveMethvin> must be horribly painful
[18:53:35] <danheberden> DaveMethvin: yt?
[18:57:18] <DaveMethvin> sup danheberden
[18:57:38] <danheberden> Hey DaveMethvin, just wanted to run an idea by you before i made a ticket regarding deferreds
[18:57:50] <DaveMethvin> k
[18:58:33] <danheberden> currently, jQuery doesn't follow the promises/A spec in that if you return a value in a failing deferred, e.g., something.then(null,function(){ return "YAY";}).then(function(a){ /* this wont run */},function(b){ /* but this will still fail */});
[18:58:49] <danheberden> which is sensible, since we aren't swallowing exceptions
[18:59:03] <danheberden> so, i wanted to add this to underscore.Deferred, but also want it to be inline with jQ
[18:59:15] <danheberden> $.Deferred.resolve and $.Deferred.reject as helper methods
[18:59:25] <danheberden> that instantly resolve or reject a Deferred
[18:59:33] <danheberden> so return $.Deferred.resolve(value); 
[18:59:56] <danheberden> will do the same as var dfd = $.Deferred(); dfd.resolve(value); return dfd.promise();
[19:01:16] <danheberden> the other option would be to make $.unless() be the opposite of when
[19:01:21] <danheberden> and just $.when(value);
[19:01:26] <danheberden> which would do the same thing
[19:01:42] <danheberden> DaveMethvin: k, done ranting :p ^
[19:02:10] <DaveMethvin> I think you should propose it, with some fiddles, and we can discuss
[19:02:32] <danheberden> ok, i was hoping for at least that. if you were like "pssh, whatever dumbo" then i'd bail on it
[19:02:35] <danheberden> i'll make a ticket for it
[19:02:38] <danheberden> and stuffs
[19:03:11] <DaveMethvin> sure, make a ticket ... not sure we're gonna land anything but it woudl be worth discussing
[19:35:06] <danheberden> DaveMethvin: TADA http://bugs.jquery.com/ticket/13717
[19:54:52] * JamesMGreene hopes one day jQuery will deliver Q-quality promises at the speed of when.js :-P
[19:55:55] * JamesMGreene also hopes one day Q will deliver Q-quality promises at the speed of when.js :-P
[19:57:13] <JamesMGreene> Ugh... damn you, unit tests! Why do you always tell me the ugly truth!?
[19:57:55] <snover> why not justâ¦use one of those other libraries :)
[19:59:24] <JamesMGreene> I do :)
[19:59:28] <JamesMGreene> Q
[19:59:30] <JamesMGreene> Always
[20:00:08] <JamesMGreene> `Q.all` is the best <3
[20:00:09] <b-ot> JamesMGreene: memorised âQ.all`â.
[20:00:25] <JamesMGreene> errr, OK b-ot, if you say so
[20:02:09] <JamesMGreene> Anyone like to recommend API designs? :)
[20:02:17] <JamesMGreene> I have one I'm unsure on
[20:02:49] <JamesMGreene> (non-jQuery, if that sways your interest)
[21:21:36] <JamesMGreene> "divout", LOL
[21:21:58] <divout> hm?
[21:22:12] <JamesMGreene> I like your nick :)
[21:22:20] <divout> so am i ^^
[21:22:40] <JamesMGreene> Seems like a play on the homonym of "devout" :)
[21:22:40] <divout> it's almost uniq, there is only one other user uses it
[21:23:18] <JamesMGreene> Preaching to the choir... there is a reason that I have this confounded "M" in all of my usernames
[21:23:33] <JamesMGreene> And even on Twitter I couldn't get THAT -_-
[21:23:41] <JamesMGreene> Have to be _JamesMGreene there
[21:23:46] <divout> xD
[21:25:41] * JamesMGreene eyes the "IRCTC Booking Assistant" signature in the jQuery CLA database
[21:27:03] <nschonni> how many signed with an X :)
[21:37:05] <JamesMGreene> nschonni: None that I see but there are plenty of first-name-only entries, as well as many fake address... like DaveMethvin|away's
[22:30:49] <JamesMGreene> Oh, thank goodness... finally got this stupid (awesome?) utility module working: https://npmjs.org/package/dos2unix
[22:47:41] <stevenbenner> JamesMGreene: imho, if you find yourself having to manually convert linefeeds then you've got something misconfigured somewhere and/or the code handling the file is missing a very trivial /\r?\n/
[22:48:18] <JamesMGreene> stevenbenner: it's more complicated than that since I need this to work for all possible file encodings (i.e. must be transformed at the byte level)
[22:49:30] <JamesMGreene> Believe me, I thought it was basically going to be a `fileContents.replace(/\r\n/g, '\n')` when I started, too....
[22:49:39] <JamesMGreene> Not so much... not so much at all
[22:50:49] <stevenbenner> ahh, well i may be a bit rusty with the more unusual file encoding schemes, but in my experience line endings are usually determined by the environment so the character codes remain valid
[22:53:01] <stevenbenner> even in UTF-16 a \n is still a 000A
[22:53:10] <JamesMGreene> My scenario is basically that [in another Node module], I am downloading a ZIP file that contains shell scripts (for Linux/Mac) and executables (for Windows)
[22:53:24] <JamesMGreene> but the ZIP file was made on Windows and has Windows CrLf line endings
[22:53:51] <JamesMGreene> Which, when executing the shell scripts on Linux/Mac, leads to it thinking that '\r' is a command to execute and dying a horrible fiery death
[22:54:23] <JamesMGreene> stevenbenner: Yeah, the bytes don't change much... other than endianness
[22:54:37] <JamesMGreene> That wasn't the annoying part
[22:55:13] <stevenbenner> okay, now i see... yeah bash isn't very forgiving of pointless characters that would require that you actually convert the file
[22:55:26] <JamesMGreene> Yup
[22:55:30] <JamesMGreene> It's definitely an edge case
[22:55:49] <JamesMGreene> but I also didn't want to require that users on Mac/Linux had to install the actual `dos2unix` package for their OS either
[22:56:16] <JamesMGreene> I hate external dependencies like that
[22:57:08] <stevenbenner> yeah, i agree - though personally i would be yelling and the person who uses dos line endings when writing a bash script haha
[22:57:11] <JamesMGreene> Especially since's that module is at the bottom of a several modules high stack for a grunt task I'm working on
[22:57:28] <JamesMGreene> stevenbenner: Agreed but the ZIP is old and from Adobe :)
