[08:57:38] <JohnResig> howdy all
[08:57:46] <JohnResig> meeting times in #jquery-meeting!
[08:58:11] <ajpiano> wooo
[08:58:20] <ajpiano> donno if folks around
[08:58:30] <ajpiano> last week of august and all
[10:02:07] <DaveMethvin> now about that requestAnimationFrame ...
[10:02:10] * DaveMethvin runs away
[10:02:24] <louisremi> hehe
[10:02:43] <DaveMethvin> louisremi: definitely read that thread in the forum, it's linked in the notes
[10:02:54] <louisremi> Doin' that
[10:03:12] <louisremi> (to find out who's to blame for this non-sense commit)
[10:03:20] <DaveMethvin> ouch
[10:03:40] <timmywil> heh, well. I just blame john for everything. ;)
[10:03:53] <gnarf> JohnResig said remove it, timmywil removed it
[10:04:11] <gnarf> and I said "NOOOOOO"
[10:04:33] <louisremi> and I wish I was there to cry with you "NOOOOOOOOOOOOOOOOOO"
[10:04:34] * gnarf cries in a corner mourning the loss of raf support
[10:06:00] <DaveMethvin> like timmywil said though, if the timers are slow there isn't a lot of gain from rAF
[10:06:13] <DaveMethvin> i guess the big hit comes on the older mobile platforms that have rAF but no slow timers
[10:06:29] <DaveMethvin> and they can use 1.6.2
[10:07:27] <gnarf> DaveMethvin: read: almost every mobile platform?
[10:07:48] <DaveMethvin> older than  yesterday? :P
[10:08:51] <DaveMethvin> So this 1.8 animation rewrite is going to be the attr rewrite of its release ... but cause more problems :P
[10:09:49] <DaveMethvin> i am still convinced that ppl will need to change the way they write animation code, and that means we will be the teacher slapping them across the knuckles with a ruler. people hate that
[10:10:13] <gnarf> DaveMethvin: they should change it now
[10:10:15] <ajpiano> first you take away my inline event handlers, now this?
[10:10:29] <gnarf> DaveMethvin: its wrong now - even if it works, its still wrong
[10:10:43] <DaveMethvin> ajpiano: wait, when did we take away inline handlers? if we did that would be peachy
[10:10:48] <gnarf> I'm sorry that we've supported bad code for 1.6.2 versions
[10:11:00] <gnarf> because apparently everyone thinks we should keep supporting it
[10:11:12] <ajpiano> DaveMethvin: well, we give you a firm rap on the knuckles for 'em over in #jquery :D
[10:12:04] <DaveMethvin> gnarf: backwards compatibility isn't called "backwards" for nothing you know
[10:12:43] <DaveMethvin> i have a bunch of things i'd love to remove, like, er, inline event handler support for example
[10:13:23] <gnarf> Well, we've painted ourselves into a corner now
[10:13:49] <timmywil> :first
[10:13:58] <gnarf> I don't think we can ever reliably support raf if we don't have the balls to do it now
[10:14:32] <timmywil> I disagree there
[10:14:54] <gnarf> If support includes letting people do bad shit and get away with it
[10:15:04] <gnarf> which apparently it does
[10:15:25] <gnarf> You're pulling this "enhancement" to support bad code
[10:16:02] <timmywil> back-compat isn't the only argument for removal
[10:16:17] <DaveMethvin> since rAF isn't surfaced in an API it's not like we changed anything that much
[10:16:57] <DaveMethvin> if someone wrote a plugin that used animations, they wouldn't even know what version of jQuery the person was using on their site
[10:17:09] <DaveMethvin> and it can work with or without rAF
[10:17:51] <DaveMethvin> i think our mistake with rAF was putting it in without realizing it would change the animation semantics
[10:18:06] <timmywil> off topic: how are these blockers going? http://bugs.jquery.com/query?priority=blocker&status=assigned&status=new&status=open&status=pending&status=reopened&milestone=1.6.3&col=id&col=summary&col=status&col=owner&col=type&col=priority&col=component&order=priority
[10:18:12] <gnarf> its okay, I'll just maintain a jQuery 1.6.3+rAF fork :)
[10:18:33] <gnarf> timmywil: I have asked a question about 6150 at least twice now
[10:18:37] <gnarf> and noone seems to care
[10:18:38] <gnarf> :)
[10:18:52] <timmywil> gnarf: I don't I understand that ticket yet
[10:19:01] <DaveMethvin> gnarf: only my ignorance prevents me from answering :)
[10:19:06] <gnarf> docs#6150
[10:19:07] <bot-t> [#6150] .stop sometimes doesn't clear .delay (assigned bug) - http://jqbug.com/6150
[10:19:13] <gnarf> you can't .stop() a delay
[10:19:16] <gnarf> because delay doesn't use timers
[10:19:22] <gnarf> and .stop only looks at timers
[10:19:25] <gnarf> so
[10:19:27] <gnarf> two options
[10:19:36] <gnarf> 1) make delay animate a "non-property"
[10:19:51] <gnarf> 2) make a way for non-animate queue functions to supply a "stop" function
[10:19:53] <gnarf> to stop them
[10:19:55] <gnarf> i like #2
[10:20:02] <gnarf> because there are ui effects that can't be .stop()
[10:20:12] <gnarf> and I'd like to be able to provide a way to stop them
[10:20:53] <gnarf> option 1 only solves the issue for .delay()
[10:21:03] <gnarf> option 2 could solve the issue for anything
[10:21:50] <gnarf> but option 2 is a lot more work
[10:21:55] <gnarf> and more "feature"ish
[10:22:04] <gnarf> prolly something that should be deferred til 1.8
[10:22:17] <DaveMethvin> sounds like 1 is the wtg for 1.6.3 then?
[10:22:25] <rwaldron> timmywil i have a patch in 10026
[10:22:27] <timmywil> I don't like 1
[10:22:29] <rwaldron> but DaveMethvin hates it
[10:22:33] <timmywil> I like 2 much better
[10:22:38] <gnarf> I also like 2 much better
[10:22:46] <gnarf> but its an API change
[10:22:51] <timmywil> DaveMethvin hates????
[10:23:00] <rwaldron> yeah, he was a rage face
[10:23:04] <DaveMethvin> lol
[10:23:04] <timmywil> lol
[10:23:22] <DaveMethvin> actually i deraged, that patch seems ... okay
[10:23:27] <rwaldron> the thing is, 10027 is not accomplished reasonably
[10:23:37] <rwaldron> 10026 is reasonable
[10:23:47] <rwaldron> and I understand the need
[10:23:58] <DaveMethvin> 10027 is a problem, we need the semantics the way they are now
[10:24:18] <rwaldron> its _really_ unexpected to remove data (that is a data attr) only to discover that it's actually still there
[10:24:19] <DaveMethvin> getting the data- attrs is not at all what we want to do
[10:24:26] <rwaldron> DaveMethvin++
[10:24:47] <rwaldron> i can;t think of a way that isnt atrocious
[10:24:54] <DaveMethvin> we have made an unholy mess of .data() at this point by confusing it with data- attributes
[10:25:12] * rwaldron nods
[10:25:24] <rwaldron> i've been trying to keep up with the tickets
[10:25:28] <rwaldron> to smooth it out
[10:25:30] <timmywil> gnarf, DaveMethvin: You think it's ok to defer 6150 to 1.7?
[10:25:37] <rwaldron> and not eff up the legacy
[10:25:48] <rwaldron> while providing modern support requests
[10:26:16] <DaveMethvin> timmywil, gnarf: is it really critical? Maybe it can wait for 1.8?
[10:26:26] <timmywil> gnarf: what about adding the timer directly to jQuery.timers?
[10:27:14] <rwaldron> DaveMethvin i just thought of something actually
[10:27:22] <timmywil> DaveMethvin: it's always been like this, so I'd say yes
[10:27:32] <gnarf> timmywil: Well, thats what animating the "non-property" would do
[10:27:37] <rwaldron> for jQuery.hasData()
[10:27:42] <DaveMethvin> rwaldron: i am still not convinced that it's useful to ask "are there ANY data- attributes on this element?"
[10:27:50] <rwaldron> well
[10:27:56] <timmywil> gnarf: true, but it wouldn't have to execute a function every interval
[10:27:59] <gnarf> the jQuery.timers thing is just a collection of functions that animate "properties" on "elements"
[10:28:04] <DaveMethvin> plus that's not what .hasData() would tell you
[10:28:12] <timmywil> gnarf: im thinking of it backwards
[10:28:14] <timmywil> nvm
[10:28:14] <gnarf> timmywil: adding it to timers == executing a function every interval
[10:28:21] <timmywil> yea
[10:28:23] <rwaldron> the same answer would be given by calling .fn.data()
[10:28:29] <rwaldron> and if there was no data
[10:28:45] <gnarf> If I want to try to solve 6150 the "right" way - using a "stop" callback
[10:28:50] <timmywil> trying to think of a way to clear all of the timers without executing an extra function
[10:28:52] <gnarf> its prolly a better fit in 1.7 than 1.6.3
[10:29:08] <DaveMethvin> rwaldron: the diff would be that you get an empty fresh obj back from $.fn.data() but not from $.hasData()
[10:29:17] <rwaldron> right
[10:29:20] <rwaldron> one sec
[10:30:06] <DaveMethvin> and that's the semantics we need, so we can see if the element has (internal) data without creating an unneeded object
[10:30:09] <timmywil> but delay actually does use the queue, so it doesn't make a lot of sense to add more stuff.  And I like that adding a callback would help UI.
[10:31:27] <gnarf> timmywil: it uses the queue, but it doesn't use timers
[10:31:40] <timmywil> gnarf: yea i understand
[10:31:43] <gnarf> timmywil: but yeah - the callback would help UI effects too
[10:31:58] <gnarf> i also wonder if there isn't some way I can't hook :animated too
[10:32:15] <gnarf> should something being delayed be :animated ?
[10:33:02] <timmywil> ehhh.  I guess it depends on what's being delayed, which probably can't be determined.  So I'd say no.
[10:33:26] <DaveMethvin> yeah do you even know?
[10:33:35] <gnarf> timmywil: http://bugs.jqueryui.com/ticket/7123 for the UI ticket about it
[10:33:38] <rwaldron> DaveMethvin http://jsfiddle.net/rwaldron/Um8MF/
[10:34:07] <rwaldron> AND i say, don;t even add it to the core
[10:34:17] <rwaldron> we just offer this solution on the ticket
[10:34:20] <DaveMethvin> yeah i closed the ticket wontfix
[10:34:21] <rwaldron> and close it "wont fix"
[10:34:22] <DaveMethvin> so thatnks
[10:34:26] <DaveMethvin> thanks
[10:34:45] <rwaldron> thanks?
[10:34:54] <DaveMethvin> rwaldron: and i think we shoudl pull in your removeData patch
[10:35:02] <rwaldron> sounds good
[10:35:10] <DaveMethvin> so that leaves #9521
[10:35:16] <rwaldron> I'll link to the "plugin" in the ticket
[10:36:12] <rwaldron> DaveMethvin 9521 eek
[10:36:24] <rwaldron> not rally
[10:36:27] <rwaldron> really*
[10:36:30] <DaveMethvin> it's an easy fix at least
[10:36:37] <rwaldron> (was being dramatic)
[10:36:43] <DaveMethvin> but it is only a band-aid for the general problem
[10:36:46] <rwaldron> right
[10:36:48] <DaveMethvin> don't feed scripts to $()
[10:37:06] <DaveMethvin> prolly never shoudl have run scripts fed to 4()
[10:37:08] <DaveMethvin> $()
[10:37:26] <rwaldron> basically, there is another related ticket that has an issue caused by the same expression
[10:37:37] <rwaldron> that i believe will be fixed with the same patch http://bugs.jquery.com/ticket/9776
[10:37:50] <rwaldron> i need lunch
[10:37:57] <rwaldron> where does the time go
[10:38:00] <DaveMethvin> then you shall have it
[10:38:02] <gnarf> So, should we push docs#6150 to 1.7?
[10:38:04] <bot-t> So, [#6150] .stop sometimes doesn't clear .delay (assigned bug) - http://jqbug.com/6150
[10:38:19] <DaveMethvin> gnarf: if you want, doesn't sound like a blocker to me
[10:38:53] <gnarf> well john pulled it back from 1.7 to 1.6.3
[10:38:55] <timmywil> pushing to 1.8 right now.  you think 1.7?
[10:38:59] <gnarf> recently
[10:39:25] <gnarf> timmywil: it was voted into 1.7
[10:39:27] <gnarf> already
[10:39:46] <timmywil> true, but there may be a simpler solution when we rework the effects internals
[10:40:21] <timmywil> ok, it's probably not a big deal for 1.7
[10:40:36] <gnarf> true, but doing this gives us a chance to get a little bit of an internals update in 1.7 too :)
[10:40:48] <timmywil> yea cool
[10:40:57] <DaveMethvin> as long as you can get it done in 3 weeks :P
[10:40:59] <gnarf> also, I'd like to use it in the 1.9 UI branch which will likely require 1.7
[10:41:02] <gnarf> yeah
[10:41:04] <timmywil> I think we all agree it's not right for 1.6.3 tho
[10:41:26] <gnarf> Fixing it the "right way" isn't a viable point release - agreed
[10:44:38] <timmywil> concerning docs#10026, I think China is inevitable
[10:44:41] <bot-t> timmywil, #10026 (removeData does not work with html5 data attributes ... - Opened 11 days ago http://bugs.jquery.com/ticket/10026
[10:45:46] <timmywil> so +1 to the pull. Once the user does their first data call, the data is in the hands of the jQuery's cache, but I would expect .removeData to remove html5 data even before it enters the cache.
[10:46:29] <timmywil> since we pull from both html5 data and the cache when retrieving
[10:47:01] <timmywil> but I understand it's not the most efficient thing in the world
[10:47:17] <timmywil> DaveMethvin, rwaldron
[10:47:31] <timmywil> oh rwaldron went to lunch, sry
[10:47:35] <DaveMethvin> yep ...
[10:48:07] <timmywil> and you're ok with the pull.  I should read more.
[10:48:19] <DaveMethvin> on the blockers, i can get that one for docs#9521, it's a simple change and just needs a test case
[10:48:20] <bot-t> DaveMethvin, #9521 (XSS with $(location.hash) and $(#<tag>) is needed ... - Opened 7 weeks ago http://bugs.jquery.com/ticket/9521
[10:48:36] <timmywil> cool
[10:48:45] <DaveMethvin> yeah you can land rwaldron's removeData patch if you want
[10:50:26] <timmywil> kk, landing
[10:50:55] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/kgHVKg
[10:50:55] <jqcommit> [jquery/master] Landing pull request 461. Adds a due diligence check for pre-defined data-* attrs during removal. Fixes #10026. - Rick Waldron
[10:52:10] <timmywil> DaveMethvin: well now we're down to 1 blocker. maybe we can release 1.6.3 sooner?
[10:52:25] <timmywil> rc
[10:52:30] <DaveMethvin> i think some of the non-blockers prolly need to be reviewed/landed
[10:52:38] <DaveMethvin> lemme look at the list
[11:30:57] <rwaldron> DaveMethvin timmywil I just had a discussion with ben_alman and I agree that we need to backout that last patch
[11:31:16] <DaveMethvin> which one
[11:31:22] <timmywil> yea, I'm starting to think so too
[11:31:32] <ben_alman> did you read my comment timmywil
[11:31:34] <DaveMethvin> removeData?
[11:31:38] <ben_alman> in rwaldron's new ticket
[11:31:40] <ben_alman> yeah DaveMethvin
[11:31:40] <timmywil> ben_alman: i did
[11:31:43] <ben_alman> ok.
[11:31:53] <rwaldron> DaveMethvin ya
[11:32:06] <DaveMethvin> is there discussion on the ticket?
[11:32:25] <rwaldron> it was mostly in person
[11:32:33] <rwaldron> but it supports your original thinking
[11:32:39] <rwaldron> the rabbit hole.
[11:32:44] <rwaldron> cc ben_alman
[11:32:45] <timmywil> DaveMethvin: http://bugs.jquery.com/ticket/10113#comment:2
[11:33:01] <rwaldron> timmywil yeah, thats for a better solution
[11:33:10] <timmywil> we could mark this ticket a dupe of 10113
[11:33:11] <rwaldron> then just brute removal
[11:33:17] <rwaldron> er
[11:33:31] <rwaldron> mark 10113 a dup of 10113?
[11:33:38] <rwaldron> i filed 10113
[11:33:42] <timmywil> 10025
[11:33:42] <DaveMethvin> yo dawg
[11:33:44] <timmywil> 10026
[11:33:47] <rwaldron> ok
[11:33:51] <ben_alman> a flag should be set the first time data is read from the attribute that says "never again read data from this attribute" or something
[11:34:23] <DaveMethvin> ben_alman: that gives us a philosophical framework for our behavior at least!
[11:34:29] <ben_alman> yeah
[11:34:34] <DaveMethvin> it's similar to pulling in properties from attributes
[11:34:35] <rwaldron> i think "this has been nulled, so treat it like a removed data property" flag...?
[11:34:37] <DaveMethvin> but less fucked up
[11:34:49] <ben_alman> rwaldron, the flag could be set as soon as the data is read from the attr
[11:34:51] <rwaldron> for removal
[11:34:53] <ben_alman> it'd never have to be read again
[11:35:09] <ben_alman> then setting it to null, it's just null
[11:35:21] <timmywil> rwaldron: you going to do a pull? or ben_alman ?
[11:35:22] <rwaldron> hrm.
[11:35:28] <ben_alman> i can't
[11:35:28] <rwaldron> i see
[11:35:36] <rwaldron> timmywil i'm going to work on it
[11:35:48] <ben_alman> right now it probably just says "if data is undefined, grab it from the attr"
[11:36:08] <ben_alman> but even with your removeData change
[11:36:22] <ben_alman> if someone does $('div').data('foo', undefined')
[11:36:31] <ben_alman> it'll probabyl still fetch the value
[11:36:33] <rwaldron> there have been other issues... let me find...
[11:36:34] * ben_alman is guessing
[11:36:53] <timmywil> so removeData would add the data to the cache, but set a flag that says not to read it?
[11:37:25] <timmywil> so .data('attr') would never read the DOM
[11:37:26] <rwaldron> er.
[11:37:41] <rwaldron> at this point I'm not sure
[11:37:47] <DaveMethvin> be careful, $.data and $().data work diff
[11:37:52] <rwaldron> yeah
[11:38:02] <rwaldron> Basically, this is totally effed
[11:38:11] <DaveMethvin> i think you're proposing that $().data() read the data- attrs just once
[11:38:19] <ben_alman> sorry to dampen the collective blanket
[11:38:25] <rwaldron> because i don't agree with most of it in theory, but i support it in practice
[11:38:28] <DaveMethvin> and never again touch them
[11:38:36] <DaveMethvin> which is at least a framework upon which we can build
[11:38:45] <DaveMethvin> because it's a firm rule
[11:39:15] <ben_alman> rule: the data- attribute should only ever be read if data has never yet been set on that element, and only ever read once
[11:39:28] <ben_alman> so the instant data is gotten or set, the flag should be set
[11:40:17] <ben_alman> that would eliminate any issues with someone setting data, then removing it, then getting data for example
[11:40:31] <ben_alman> it means persisting a flag in the cache
[11:40:33] <ben_alman> but w/e
[11:40:33] <timmywil> the flag should probably only be added on html5-data removal. Otherwise, remove the data from the cache.
[11:40:52] <timmywil> but that means reading the DOM on every removal.
[11:41:22] <rwaldron> naw
[11:41:29] <ben_alman> i think if you set the "ignore the data attribute" flag the first time an element's data is set / get / remove you'll be fine
[11:41:34] <rwaldron> we'll keep an internal list of where it came from
[11:42:13] <rwaldron> timmywil either way, go ahead and back that out
[11:42:17] <timmywil> there's no need for flag on set/get except to check if it's there
[11:42:27] <ben_alman> no
[11:42:33] <DaveMethvin> I may use a plugin that sets jQuery  $().data("pluginstuff") but later i want to get $().data("attr") and the data- attrs should be there
[11:42:34] <ben_alman> as soon as you perform the set or get, you set the flag
[11:42:57] <DaveMethvin> did we land a change to get the data just once? i know there was something in the pull q
[11:43:06] <timmywil> or if ( !flag ) // do something
[11:44:27] <DaveMethvin> how about this ... if we have to create a data object for any reason, we read the data- attrs at that point
[11:44:34] <DaveMethvin> no flag at all
[11:45:09] <timmywil> that works if you never read from the DOM again
[11:45:26] <timmywil> which is ideal
[11:46:23] <timmywil> but I suppose that means, on a first .removeData('something') call, you'd add everything html5-attr to the cache except the one getting removed
[11:46:29] <timmywil> every*
[11:46:38] <DaveMethvin> yeah
[11:46:41] <DaveMethvin> which i can live with
[11:46:46] <DaveMethvin> given how hosed up this thing is already
[11:46:58] <timmywil> me too
[11:47:09] <DaveMethvin> if you need to force data to be gotten at a particular point, just way $("whatev").data() to grab the object
[11:47:15] <timmywil> that could certainly improve performance
[11:47:30] <DaveMethvin> performance...hahaha
[11:48:13] <DaveMethvin> i am hoping it at least makes the code no more complicated
[11:49:21] <timmywil> well, it would be less DOM reads.  I can't say for sure it would be faster.
[11:52:04] <gnarf> if we are blending the data-* attribs and .data(), .removeData("something") makes sense to also removeAttr("data-something")
[11:53:43] <ben_alman> i made some unit tests
[11:53:44] <ben_alman> http://jsfiddle.net/cowboy/Dvhqe/
[11:53:47] <ben_alman> far from comprehensive
[11:53:58] <ben_alman> but i want to make sure things work when done in different orders
[11:54:49] <DaveMethvin> gnarf: but then it also makes snse for $().data("abc", 43) to become .attr("data-abc", "43") as well
[11:55:02] <DaveMethvin> and then we're off to the anti-races
[11:55:38] <gnarf> the data-* attribs just seem like a bad idea at this point
[11:55:42] <gnarf> :)
[11:55:43] <DaveMethvin> AMEN
[11:56:04] <DaveMethvin> it's mainly a damage control thing right now
[11:56:08] <gnarf> can we remove them? seems thats what we do with ideas that didn't quite pan out ;) (mostly kidding)
[11:56:14] <DaveMethvin> lol, yeah
[11:56:33] <DaveMethvin> honestly, i think that would be a great 2.0 change
[11:56:44] <DaveMethvin> b/c we will never get this right ... it can't be gotten right
[11:57:11] <gnarf> plus, its a perf hit instead of a gain
[11:57:44] <DaveMethvin> but as far as limiting damage goes, if we just read the data- attrs once on first jQuery.cache access, that seems like a good philosophy
[11:57:51] * gnarf wonders how many more anti-raf arguments he can use against data-* attrs ;)
[11:58:01] <ben_alman> what i like: data- attribs used as a declarative-only way of pre-populating the data value. PERIOD. no JSON parsing or type coercing, no changing data- attribs via .data
[11:58:05] <gnarf> DaveMethvin: i had a patch about that at one point
[11:58:11] <DaveMethvin> ben_alman: yes
[11:58:22] <DaveMethvin> gnarf, yeah what happened to y our patch?
[11:58:25] <ben_alman> i fought really hard to keep the data- changes out of 1.4.3 but it was paul's pet project
[11:58:31] <ben_alman> and i lost :/
[11:58:33] <DaveMethvin> i pinged the -mobile guys on the patch
[11:58:42] <DaveMethvin> to be sure it didn't break their stuff
[11:58:45] <gnarf> its still there i just closed it
[11:58:47] <DaveMethvin> they are big users of data-
[11:58:52] <gnarf> because it fell out of sync with data.js
[11:58:55] <DaveMethvin> oh
[11:59:08] <DaveMethvin> ok i thought i was going crazy
[11:59:10] <gnarf> and there were some bugs that rwaldron pointed out
[11:59:13] <DaveMethvin> which still is in play btw
[11:59:28] <gnarf> https://github.com/jquery/jquery/pull/335
[11:59:28] <socialhapy> ★ Pull request on jquery by gnarf37 (4m, 4d ago): Ticket: 8909 - $(element).data() will scan the attributes more times than needed.
[11:59:41] <DaveMethvin> yeah ben_alman i think it was definitely one of those items that seemed like a "why not" and turned into an "oh god"
[11:59:56] <ben_alman> lol
[12:00:41] <DaveMethvin> it's the problem that once people see that .data() has SOMETHING to do with the data- attrs they expect it to work JUST LIKE the data- attrs
[12:00:46] <ben_alman> heh
[12:01:01] <rwaldron> DaveMethvin exactly the issue
[12:01:28] <gnarf> DaveMethvin: wait are we talking about data-* or raf here? :)
[12:01:41] <DaveMethvin> $("#omg").data("haha\nthisIs-valid\x01", true)
[12:01:50] <ben_alman> sweet christ
[12:03:47] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/XAQ31w
[12:03:47] <jqcommit> [jquery/master] Revert "Landing pull request 461. Adds a due diligence check for pre-defined data-* attrs during removal. Fixes #10026." - timmywil
[12:04:59] <timmywil> have at it. be back soon. :)
[14:51:39] <gnarf> DaveMethvin: "feedback from the UI team?" :)
[14:52:06] <DaveMethvin> oh yeah!
[14:52:07] <gnarf> you realize I'm the guy that handles all the UI Effects stuff right? :)
[14:52:19] <DaveMethvin> welll NOW i do!
[14:52:25] <DaveMethvin> it didn't occur to me
[14:52:31] <gnarf> although my "UI Team" feedback would be "I'll make it work with whatever"
[14:52:35] <DaveMethvin> well then we should give you two votes
[14:52:50] <gnarf> the argument to keep raf was mostly a "personal hope"
[14:53:06] <gnarf> cuz I'm like so in tune with what its trying to do
[14:53:11] <DaveMethvin> rAF Wars: A New Hope
[14:54:20] <DaveMethvin> sorry, but sometimes my mind is going, i can feel it
[14:54:41] <DaveMethvin> i knew you did the effects stuff but it didn't register
[14:56:27] <gnarf> np
[14:56:35] <gnarf> I figured that was the case
[14:56:46] <gnarf> mine left a long time ago, it just shows up to inspire me from time to time
[17:23:09] <addcol> hi all
[17:23:22] <addcol> all sleeping i guess
