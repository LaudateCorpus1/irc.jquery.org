[05:23:46] <mikesherov> .
[08:34:04] <gibson042> .
[09:15:32] <rwaldron> timmywil the ticket this refers to was closed invalid: https://github.com/jquery/jquery/pull/665
[09:15:33] <socialhapy> â˜… Pull request on jquery by gibson042 (52m, 22s ago): #11219: Prevent jQuery.param infinite loops
[09:35:36] <timmywil> rwaldron: closed
[10:02:29] <danheberden> ?tell mikesherov i was wrong, there _are_ backups of the bugs server :D
[10:02:30] <bot-t1> danheberden, Okay.
[10:12:01] <ajpiano> DaveMethvin:
[10:12:10] <DaveMethvin> you rang?
[10:13:08] <ajpiano> yt?
[10:13:08] <ajpiano> that dude in docs#11231 is off his rocker
[10:13:08] <ajpiano> you just need to reply that it DOES accept arrays of dom elements
[10:13:08] <ajpiano> every single one of the examples he listed is NOT an array of dom elements
[10:13:09] <bot-t1> [#11231]  (closed bug: patchwelcome) - http://jqbug.com/11231
[10:13:18] <ajpiano> Given that $('body').append(['<div/>','<div/>','<div/>']), $('body').append([$('<div/>'),$('<div/>'),$('<div/>')]), and $('body').append([$('a'),$('b'),$('center')]) all fail with "Error: NOT_FOUND_ERR: DOM Exception 8", this claim is more than a bit overbroad.
[10:13:41] <ajpiano> [ document.getElementById("foo"), document.getElementById("bar") ] is an array of dmo elements
[10:13:49] <DaveMethvin> yes
[10:13:50] <ajpiano> DaveMethvin: i say this because i am on the train and cannot reach the bug tracker
[10:14:23] <DaveMethvin> there are some dup tickets to the same effect but i was too busy/lazy to look for them
[10:14:54] <DaveMethvin> but i know it does not accept arrays of jqueries for example and ppl have asked for that
[10:15:00] <ajpiano> ah
[10:15:25] <DaveMethvin> but you gotta draw the line somewhere
[10:15:36] <DaveMethvin> and his assertion that it is just one line is wrong as i recall
[10:15:43] <DaveMethvin> or i would have been ok with adding it a while back
[10:16:00] <DaveMethvin> i seem to recall it got all ugly in jQuery.clean when you tried to do that
[10:16:05] <DaveMethvin> but it's been a long time
[10:16:30] <ajpiano> yeah i doubt it's so simple
[10:16:30] <ajpiano> i agree w/ drawing the line too
[10:16:36] <ajpiano> i just saying that his assertion that the docs are wrong is also wrong :p
[10:16:52] <DaveMethvin> i think what the docs say is right, agreed
[10:17:32] <DaveMethvin> people always want a "do what i mean" for that stuff, like being able to append an xml doc to an html one
[10:19:32] <ajpiano> yeah, and when you look at this in conjunction with $.when( arrayOfDeferreds )
[10:19:38] <ajpiano> the inherent question is like
[10:19:46] <ajpiano> "should jQuery users never have to use .apply?"
[10:20:00] <ajpiano> cause that's what the complaint amounts to
[10:54:28] <DaveMethvin> ajpiano: .apply() is tooo javascripty! jqueries should be able to just figure out whatever i dump on it!
[10:54:44] <ajpiano> pretty much
[11:28:34] <ajpiano> lol DaveMethvin i caved and just tapped it into my phone
[11:29:06] <DaveMethvin> wow ajpiano that must have been fun
[11:30:00] <ajpiano> it seems this gentleman does not know exactly what DOM Element means
[11:31:58] <DaveMethvin> b...b...but ajpiano, clearly an array ["<div>", "<div>"] is an array of elements, can't  you SEE THE ANGLE BRACKETS IN THOSE STRINGS?
[11:32:33] <ajpiano> i thought it was a javascript feature that if you type "<div>", it converts it into an element
[11:32:37] <ajpiano> and jQuery was built on top of that
[11:34:01] <DaveMethvin> I don't use DOM elements, I use jQuery
[11:45:35] <ajpiano> oh goodness
[11:45:40] <ajpiano> are you by any chance replying to this latest one
[12:13:08] <rwaldron> DaveMethvin ajpiano haha it can be done with a 51 byte expense
[12:15:47] <rwaldron> just kidding... 49
[12:22:34] <Eviltwin> Clearly we need $.whenArray([...])
[12:25:08] <Eviltwin> http://pastebin.com/MuQ3s4ZQ
[12:25:31] <rwaldron> who is "we"
[12:25:43] <rwaldron> jQuery doesn't want $.whenArray
[12:29:43] <clarkbox> eviltwin: i think you want to do this? http://pastebin.com/69nVW7FB
[12:30:51] <Eviltwin> Why this?
[12:31:00] <Eviltwin> $.when is part of $
[12:31:23] <Eviltwin> Not that it matters
[12:31:28] <clarkbox> what do you want whenArray to do? the same as $.when() but wait for an array?
[12:31:32] <Eviltwin> I can do $.when(0, ...) if I wanted
[12:31:38] <clarkbox> an array of deferreds?
[12:31:51] <rwaldron> I wrote this about 4 months ago, when someone filed a ticket for it: http://jsfiddle.net/rwaldron/BpdyD/
[12:31:56] <Eviltwin> $.whenArray = function(arr) { return $.when.apply($, arr); };
[12:31:58] <Eviltwin> That's all
[12:32:03] <Eviltwin> That is required
[12:32:27] <clarkbox> no need when you can do it via plain JS
[12:32:33] <Eviltwin> ...
[12:33:02] <Eviltwin> You can do $(".class td[colspan=1]") in plain JS
[12:33:17] <Eviltwin> But it's far less pretty (depending on the browser)
[12:33:38] <Eviltwin> Like $(".class td a:visible");
[12:33:42] <clarkbox> nevermind. i was only trying to help. i didnt realize you knew it could be done at all.
[12:33:52] <Eviltwin> It was done correctly in my pastebin
[12:34:19] <clarkbox> ya. you got it!
[12:34:20] <rwaldron> $.whenArray is ugly hungarian type notation
[12:34:44] <Eviltwin> rwaldron: Only suggested it because of seralize/serializeArray
[12:34:51] <rwaldron> also ugly
[12:34:53] <Eviltwin> I don't actually think it's a good name
[12:37:20] <rwaldron> $.when.apply( null, [] ) saves everyone from burden of incurring the ~74 bytes that patch has
[12:37:32] <rwaldron> which also gzips to 84 bytes... weird.
[12:46:45] <Eviltwin> I don't know if "it ads 74 bytes" is actually a good reason
[12:48:38] <Eviltwin> What's the reasoning behind $.when using the args instead of an array?
[12:49:05] <Eviltwin> I think being forced to put the deferreds in an array is less awkward than having to .apply
[12:51:07] <rwaldron> actually, "it adds 74 bytes" is the best reason.
[12:51:29] <rwaldron> if you're unfamiliar with the project's current goals, then please refrain from arguing
[12:52:16] <rwaldron> you can familiarize yourself by reading and subscribing to https://groups.google.com/forum/#!topic/jquery-bugs-team/17rGK6eAAxI
[12:52:54] <rwaldron> http://blog.jquery.com/2011/11/22/call-for-jquery-1-8-ideas/
[12:53:08] <rwaldron> we're not adding any unnec bytes
[16:42:50] <Eviltwin> Question, which of these two solutions do you guys think is better? http://pastebin.com/ctdpPGbn
[16:43:03] <Eviltwin> (Sorry, not strictly a jquery-dev question)
[16:49:22] <danheberden> Eviltwin imho using concat (what we do in $.map) is both more elegant and i believe faster
[16:49:51] <danheberden> it's kind of 'the way' people flatten arrays most often
[16:50:32] <danheberden> namely, your recursive method will be a function call and that's overhead on the stack each time - where as concat can run natively
[16:50:46] <danheberden> annnnnyway i'm sure you'll jsperf it just to be sure :)
[16:50:58] <Eviltwin> It was an interview question
[16:51:03] <Eviltwin> They advocated the second method
[16:51:07] <danheberden> good
[16:51:09] <Eviltwin> I advocated the first
[16:51:12] <danheberden> bad
[16:51:14] <danheberden> :p
[16:51:23] <Eviltwin> But I made a good case
[16:51:43] <Eviltwin> If it's a very long array, the second method will require shifting a lot of elements
[16:52:22] <danheberden> but that would (*should*) be less overhead than a call to the stack
[16:52:28] <Eviltwin> So Array.prototype.concat.apply([], arr)
[16:52:32] <Eviltwin> Will flatten one layer
[16:52:38] <Eviltwin> Didn't know how it behaved if the elements weren't arrays
[16:52:40] <Eviltwin> But it seems to work fine
[16:52:54] <Eviltwin> Do that repeatedly?
[16:53:05] <Eviltwin> Until there are no arrays in it?
[16:53:07] <Eviltwin> Or is there a better approach
[16:53:35] <danheberden> Eviltwin if there isn't already, it'd be nice to see some perf  on it
[16:53:44] <danheberden> maybe try both and a hybrid of the two
[16:54:06] <Eviltwin> Does perf have a good mechanism for multi-dimensional tests
[16:54:15] <Eviltwin> Like test A, B, and C with array X, Y, and Z
[16:57:30] <danheberden> not particularly (last time i looked anyway)
[16:57:54] <danheberden> but making 9 tests will at least let you see the ops/sec
[16:58:55] <mikesherov> .
[16:58:56] <bot-t> (6 hours 56 mins ago) <danheberden> tell mikesherov i was wrong, there _are_ backups of the bugs server :D
[16:59:04] <mikesherov> HOORAY
[16:59:20] <mikesherov> danherberden, great job on the initial wiki for infrastructure
[16:59:31] <danheberden> mikesherov thnx - it's coming along pretty well :)
[17:00:38] <mikesherov> do we have to do anything to get rid of the inactive servers?
[17:00:56] <mikesherov> i.e. is there a decommission process?
[17:01:28] <danheberden> mikesherov i already brought it up to mt, but there's one box i need to make an issue about
[17:01:30] <danheberden> to double check
[17:01:45] <danheberden> it has .5gig of traffic a month, which is weird since the rest have like .03
[17:06:17] <mikesherov> hmm
[17:06:32] <danheberden> mikesherov i added a page for ssh keys
[17:06:34] <danheberden> if you wanna add yours
[17:06:39] <mikesherov> k, great
[17:07:15] <mikesherov> so, danheberden, do I log the issues like "trac is slow", or do I need to be more detailed than that?.
[17:07:53] <danheberden> if that's all you got, then that's at least a jumping point for someone to look at it and comment what they found
[17:07:57] <danheberden> or speculate even
[17:08:17] <danheberden> i think the power will be in categorizing them properly
[17:08:28] <mikesherov> ok
[17:08:43] <mikesherov> So for now I'm just going to dump the issues I saw
[17:09:19] <danheberden> sounds good
[17:14:22] <mikesherov> danheberden, if I give you my ssh key, I can get onto the trac box?
[17:14:35] <mikesherov> Did you ever figure out what was wrong with the MySQL db on that box?
[17:14:38] <danheberden> totes
[17:14:41] <danheberden> no, i didn't :(
[17:14:56] <mikesherov> I want to take a quick look now that I know there's a backup
[17:15:06] <danheberden> i thought uprading helped a bit, and i think gnarf found out some stuff too
[17:15:09] <mikesherov> anyway to figure out what the mysql passwords are
[17:15:18] <danheberden> has it been really shitty still?
[17:15:19] <mikesherov> what version were we on?
[17:15:26] <danheberden> i don't recall
[17:15:26] <mikesherov> no, it's been OK
[17:15:34] <mikesherov> some queries still take a while
[17:15:51] <danheberden> yeah - it depends if you catch it when it's updating other content
[17:15:54] <danheberden> or building jqueryui
[17:15:55] <danheberden> :/
[17:16:17] <mikesherov> wait, what?
[17:16:27] <mikesherov> what do you mean building jqueryui?
[17:16:27] <danheberden> haha
[17:16:34] <danheberden> it's where the autobuild stuff was put
[17:16:39] <mikesherov> oh
[17:16:46] <danheberden> (i know, i know - "why the hell would you do that?!")
[17:16:46] <mikesherov> like when a push happens
[17:16:49] <danheberden> yeah
[17:16:51] <mikesherov> no, it's fine
[17:16:53] <danheberden> but, it's worse
[17:16:56] <mikesherov> you work with the resources you got
[17:16:57] <danheberden> it checks every like 15 minutes
[17:17:21] <danheberden> it's on a different box in the server plan :D
[17:17:47] <mikesherov> yeah, if I open a certain report on trac, it takes forever
[17:17:51] <mikesherov> http://bugs.jquery.com/report/103
[17:17:55] <mikesherov> tickets I have commented on
[17:18:08] <danheberden> yeah, that report is awful on mysql anyway
[17:18:16] <danheberden> because of how the trac tables are setup
[17:18:22] <danheberden> i really dislike trac
[17:18:30] <mikesherov> right, but I figure I can optimize one
[17:18:47] <danheberden> yeah, that would be a good thing to get some manual look-see on it
[17:18:51] <mikesherov> well, for one thing, trac implements users as a virtual table
[17:18:58] <mikesherov> I'm going to
[17:19:06] <mikesherov> let me get you my key
[17:19:36] <mikesherov> just opened three reports at once and got: "OperationalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')" on one of them
[17:21:39] <mikesherov> https://github.com/jquery/infrastructure/issues/1
[17:21:40] <socialhapy> â˜… Github API: no issue found
[17:21:42] <mikesherov> FIRST
[17:25:55] <mikesherov> danheberden: added my ssh key
[17:27:03] <danheberden> mikesherov noice
[17:27:48] <mikesherov> can you add me to the trac box so I can poke around?
[17:28:09] <mikesherov> wonder if there's a slow query log running for mysql
[17:29:25] <Eviltwin> danheberden: http://jsperf.com/flatten-array2
[17:29:53] <JohnResig> huh, I'm hitting a really weird edge case with $.ajax() that I've never seen before
[17:30:23] <JohnResig> I have a call: $.ajax({ url: "/api/labs/videoexercises" }) that's returning false
[17:30:35] <JohnResig> it calls the error callback, returns false, and just bails
[17:30:43] <JohnResig> it seems like it's dying in the prefilter setup
[17:34:59] <Eviltwin> danheberden: All the browser I've tried it in have had the second one be the fastest
[17:35:11] <Eviltwin> And most but not all had the first one be the slowest
[17:35:34] <Eviltwin> I don't know if my arrays are representative of real use cases though
[17:37:14] <paul_irish> http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0954 have we looked at how native HTML parsing in XHR helps?
[17:37:41] <JohnResig> gah, nevermind, the issue is down another rabbit hole
[17:37:56] <paul_irish> :(
[17:57:14] <paul_irish>  does anyone touch jquery ajax code aside from julien?
[17:57:23] * paul_irish looks at git blame
[17:58:44] <paul_irish> lol definitely no one except julian. https://github.com/jquery/jquery/blame/1.6.4/src/ajax/xhr.js
[17:59:26] <Eviltwin> Nice
