[01:28:20] <doesallmagic2> Project jQuery Core Compat Periodic build #199: STILL UNSTABLE in 30 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat%20Periodic/199/
[06:20:04] <scott_gonzalez> Mr21: Do you think the entire jQuery community will settle on a single class that can be used for showing and hiding elements?
[06:20:18] <scott_gonzalez> If not, it's impossible for any plugin author to know how to show and hide elements.
[06:20:33] <scott_gonzalez> Unless you want every single plugin that does so to have an option for what class to use.
[06:20:37] <scott_gonzalez> Which would be a terrible API.
[06:23:06] <Mr21> scott_gonzalez: like the hidden attribute? you are right, my question yesterday was about your reply against dmethvin when he spoke about the evangelisation of using the class instead of play with show/hide directly
[06:24:02] <Mr21> scott_gonzalez: after you said its not a viable solution for plugin developpers, and when I made a plugin I use every time some classes, never .css (or show)
[06:24:40] <scott_gonzalez> Mr21: Are you dealing only with your own generated content?
[06:24:59] <scott_gonzalez> How does your use of classes work with the user's own classes that hide content?
[06:26:38] <Mr21> scott_gonzalez: I like to see my plugin works like the directive (in angular) so I specify a certain class (like: <div class="jquery-slider">), ahhh I see what you mean. If the user add another display:none I dont care, it's like my "directive" is hidden like he wanted.
[06:53:17] <arschmitz> Mr21: I think the point is that as a plugin developer there are absolutely cases where you want to unconditionally show or hide something that you don't 100% control. show and hide used to do this, with the proposed changes there would no longer be any method capable of this. 
[06:53:49] <arschmitz> Mr21: while that may not be the case for your plugins its a valid case. 
[06:58:58] <Mr21> arschmitz: yep, I hadn't realized how big this problem is..
[08:11:06] <gibson042> arschmitz: `$collection.css( "display", function forceShow( i, computed ) { return (computed || "none") === "none" ? getVisibleDisplay( this ) : undefined; } )`
[11:28:03] <arschmitz> timmywil: FYI the latest break we found was nothing
[11:28:16] <arschmitz> timmywil: we were still using .load as an event alias in 2 places
[11:28:29] <arschmitz> so it was passing a function to ajax .load
[11:28:41] <arschmitz> then trying to indexOf the function as a url
[11:32:06] <timmywil> oh, good to know, thanks
[13:29:54] <jqcommit> [13api.jquery.com] 15mattkime opened issue #750: api docs for .ready() inaccurate  02http://git.io/vIUXT
[14:18:01] <arschmitz> timmywil: ha ha mobile was crazy out of date on grunt-bowercopy
[14:18:31] <arschmitz> it stoped working for no reason and i was like WTF but apparently upgrading from 0.5.0 to the current fixes it lol
[14:23:37] <timmywil> well that's good to know :)
[15:41:41] <gnarf> timmywil: do you know what version we put requestAnimationFrame back?
[15:42:03] <gnarf> timmywil: wanted to add a "no longer needed" to the readme on https://github.com/gnarf/jquery-requestAnimationFrame
[19:49:03] <doesallmagic2> Project TestSwarm build #34: SUCCESS in 1.6 sec: http://jenkins.jquery.com/job/TestSwarm/34/
