[05:00:48] <gibson042> .
[07:20:51] <timmywil> .
[07:20:57] <timmywil> DaveMethvin: pingaling
[07:21:32] <DaveMethvin> timmywil: here in about 5 minutes
[07:21:32] <bot-t> (13 hours 50 mins ago) <timmywil> tell DaveMethvin sooo, I'm running a bunch of perf tests now and I'm thinking perhaps we should add back matchesSelector. You know those bytes we shaved? :) Some of them are here: https://github.com/timmywil/sizzle/commit/f50989bf92f90d219a5f09b44d98b8b824ab8aa9#L0R637
[07:21:33] <socialhapy> â˜… Commit on sizzle by timmywil (14h, 11m ago): Add back matchesSelector support (with all browser versions). The speed is too great to give up.  Related: http://jsperf.com/jquery-id-init/3
[07:21:49] <timmywil> DaveMethvin: kk
[07:28:38] <DaveMethvin> timmywil: yeah i was going to ask about that, glad you did perfs
[07:28:58] <timmywil> always :)
[07:29:33] <timmywil> on the one hand it makes me sad. It's about +190 to add it back, even though that's smaller than it was before. On the other hand, it is super fast.
[07:30:06] <timmywil> DaveMethvin: side note, gibson and I agree parseHTML should go into 1.8
[07:30:42] <timmywil> my fixes for detecting html isn't going to cut it without a hit to both size and perf
[07:30:50] <DaveMethvin> yeah i was looking at it, i think there's a bunch of cleanup that could be done with parseHTML but it seems late to do it now so perhaps we can get the basic API in now and clean it up for 1.9
[07:31:10] <DaveMethvin> really it seems like a bunch of refactoring in manipulation.js is in order
[07:31:32] <timmywil> ok that makes sense
[07:32:01] <timmywil> however, I just ran this: /^\s*(<[\w\W]+>)[^>]*$/ and we pass all except 2 in core
[07:32:18] <timmywil> which are " a<div/>b "
[07:32:18] <DaveMethvin> yeah i think that is a good one
[07:32:27] <DaveMethvin> right where a and b get thrown out anyway, right?
[07:32:40] <timmywil> they were ignored
[07:32:43] <timmywil> yea
[07:32:58] <DaveMethvin> that doesn't bother me
[07:33:10] <DaveMethvin> its a regression but a tiny little one for an edge case
[07:35:27] <DaveMethvin> timmywil: i gotta run but could we get together this afternoon and figure out an easy way to add parseHTML?
[07:35:55] <timmywil> DaveMethvin: I'll be here
[07:36:00] <DaveMethvin> sweet
[08:19:54] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/st5LOQ
[08:19:54] <jqcommit> [jquery/master] Adjust jQuery('html') detection to only match when html starts with '<' (counting space characters). Fixes #11290 - timmywil
[08:42:25] <jq-jenkins> Project jQuery Core build #162: STILL FAILING in 22 min: http://swarm.jquery.org:8080/job/jQuery%20Core/162/
[08:42:26] <jq-jenkins> timmywillisn: Adjust jQuery('html') detection to only match when html starts with '<' (counting space characters). Fixes #11290
[08:47:13] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/38i0Fw
[08:47:13] <jqcommit> [jquery/master] Update Sizzle: performance testing and changes for optimization. Adds back matchesSelector. - timmywil
[08:47:22] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/_813lQ
[08:47:22] <sizcommit> [sizzle/master] Add back matchesSelector support (with all browser versions). The speed is too great to give up. - timmywil
[08:49:19] <timmywil> miketaylr: ^^ :)
[08:50:39] <miketaylr> oh neat
[08:50:52] <miketaylr> timmywil: that must have been a fun adventure
[08:51:09] <timmywil> yup
[08:55:16] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/ZpxQhw
[08:55:16] <sizcommit> [sizzle/master] Missing bang - timmywil
[08:55:46] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/kd89ww
[08:55:46] <jqcommit> [jquery/master] Update Sizzle: minor fix for matchesSelector usage in FF<12 - timmywil
[09:07:27] <jq-jenkins> Project jQuery Core build #163: STILL FAILING in 20 min: http://swarm.jquery.org:8080/job/jQuery%20Core/163/
[09:07:27] <jq-jenkins> timmywillisn: Update Sizzle: performance testing and changes for optimization. Adds back matchesSelector.
[09:19:49] <gnarf> Krinkle: are you around?
[09:27:05] <jq-jenkins> Project jQuery Core build #164: STILL FAILING in 19 min: http://swarm.jquery.org:8080/job/jQuery%20Core/164/
[09:27:05] <jq-jenkins> timmywillisn: Update Sizzle: minor fix for matchesSelector usage in FF<12
[09:52:02] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/RrSn4Q
[09:52:02] <sizcommit> [sizzle/master] Fix a couple test fails in IE9 and Opera - timmywil
[09:52:55] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/24W22Q
[09:52:55] <jqcommit> [jquery/master] Update Sizzle: fixes test fails in selector module in IE9/Opera - timmywil
[10:01:40] <timmywil> ajpiano: meeting today? I'm on skype.
[10:04:00] <gnarf> timmywil: dev leads? was last week
[10:04:12] <gnarf> its every other
[10:04:16] <gnarf> and on the meetings calendar
[10:04:25] <timmywil> gotcha, I just had it on my calendar
[10:04:30] <gnarf> if its something else, ignore me :)
[10:04:37] <timmywil> no its taht
[10:04:39] <timmywil> that
[10:04:41] <gnarf> I'll be in the airport again for the next one
[10:05:06] <gnarf> hey out of curiosity
[10:07:15] <gnarf> can someone tell me why this is an exception in IE6? http://jsfiddle.net/aPNc6/
[10:11:55] <timmywil> I have noticed that certain properties will only accept certain values. That might be the case there.
[10:14:44] <gnarf> Isn't "inherit" the default value for style.color ?
[10:17:11] <timmywil> gnarf: it may not have been for IE6
[10:17:36] <gnarf> I'd like .css( 'color', 'inherit' ) to not throw in IE6
[10:17:37] <timmywil> i've run into similar issues
[10:17:54] <gnarf> if inherit really is the right thing to put there
[10:18:07] <gnarf> assuming my rememberance of CSS isn't completely off base :)
[10:20:24] <jq-jenkins> Project jQuery Core build #165: STILL FAILING in 27 min: http://swarm.jquery.org:8080/job/jQuery%20Core/165/
[10:20:24] <jq-jenkins> timmywillisn: Update Sizzle: fixes test fails in selector module in IE9/Opera
[10:48:56] <timmywil> gnarf: you're right about "inherit" being the default, even in IE6, but it looks like setting to "inherit" could be an issue for IE6 http://msdn.microsoft.com/en-us/library/ie/ms530749(v=vs.85).aspx
[10:49:16] <gnarf> timmywil: are you in ui-dev ?
[10:49:29] <gnarf> lemme copy
[10:49:31] <timmywil> oh, not right now
[10:49:33] <gnarf> https://gist.github.com/696d46a6877c9ab9a249
[10:49:42] <gnarf> you have an opinion on the approach?
[10:50:39] <timmywil> gnarf: "auto" doesn't throw an error?
[10:50:48] <gnarf> i dunno
[10:50:51] <gnarf> hadn't tried yet
[10:50:55] <gnarf> lemme check
[10:51:36] <gnarf> nvm
[10:51:39] <gnarf> option 3 is out
[10:51:40] <gnarf> :)
[10:51:55] <gnarf> i mean - the catch & release makes me feel a little ill
[10:52:05] <gnarf> but i don't think the support test + branch is worth it
[10:52:19] <gnarf> since i can't think of many reasons why that call would throw that you'd want to know about it
[10:52:52] <timmywil> no, I don't think option 2 is worth it either
[10:53:27] <timmywil> the only other option I can think of would be to find some value that would evaluate to inherit in all browsers including ie6/7, but that may not be possible either
[10:53:49] <timmywil> like empty string works sometimes
[10:53:55] <timmywil> and sometimes "auto"
[10:56:58] <DaveMethvin> gnarf: i don't think ie6/7 (maybe 8 too) support "inherit"
[10:57:24] <DaveMethvin> can you perhaps s/inherit// for just them?
[10:57:33] <DaveMethvin> the problem is that ie always throws on invalid style strings
[10:57:49] <timmywil> DaveMethvin: http://swarm.jquery.org/job/66 so close!
[10:57:51] <gnarf> how do we handle it in core, don't we eventually catch & release ?
[10:57:54] <DaveMethvin> div.style.border = "1mile barbed wire"
[10:58:11] <DaveMethvin> i thought we just threw and the user had to deal with it
[10:58:20] <DaveMethvin> it's not supposed to happen
[10:58:26] <DaveMethvin> the most famous is "NaNpx"
[10:58:35] <DaveMethvin> when we convert "auto" to a number
[10:58:46] <timmywil> we try/catch
[10:59:07] <DaveMethvin> in .css?
[10:59:09] <timmywil> yea
[10:59:14] <DaveMethvin> huh
[11:00:29] <timmywil> DaveMethvin: so with matchesSelector back in, we have a perf improvement of about 5-10% for all selections, 300% for element-rooted id queries :)
[11:01:00] <DaveMethvin> the 300% makes the diff
[11:01:12] <DaveMethvin> but does that case go through quickIs still?
[11:02:37] <timmywil> I wanted to discuss that, according to this perf http://jsperf.com/jquery-id-init/3, trigger using matchesSelector (falling back to filter with quick-matching if necessary) is still faster than 1.7.2
[11:02:52] <DaveMethvin> wat!
[11:02:59] <DaveMethvin> strange
[11:03:12] <timmywil> it's possible matchesSelector has improved since then
[11:03:25] <DaveMethvin> did you tidy up the code path?
[11:03:29] <timmywil> chrome and FF went up like 10 versions
[11:03:35] <timmywil> I did
[11:03:39] <DaveMethvin> b/c it seems like we'd run a lot more javascript than quickIs no matter what
[11:03:50] <DaveMethvin> i mean, look at the code path for quickIs in 1.7.2
[11:03:59] <DaveMethvin> it's a single function call and two js lines
[11:04:14] <gnarf> I'm gonna do what core does then...
[11:04:19] <gnarf> try{}catch{}
[11:04:26] <timmywil> gnarf: sounds reasonable to me
[11:04:43] <DaveMethvin> i'm tryna figure out why i've seen it throw recently then
[11:04:51] <DaveMethvin> maybe .width()?
[11:05:02] <timmywil> it doesn't try/catch for anything with a hook
[11:05:08] <timmywil> unless the hook does
[11:05:10] <DaveMethvin> true, maybe that's it
[11:05:21] <DaveMethvin> or maybe i'm crazy
[11:05:24] <DaveMethvin> that's possible
[11:05:35] <timmywil> it's prolly the hook thing
[11:05:47] <DaveMethvin> timmywil i wonder if getting the attributes collection is expensive
[11:06:13] <timmywil> DaveMethvin: I did remove the amount of stuff it was doing before hitting matchesSelector, but it's still 2 calls on the stack rather than 1
[11:06:27] <timmywil> could be
[11:07:17] <DaveMethvin> there isn't a lot going on there, but perhaps if it got all attributes in advance that would be a perf killer
[11:08:02] <DaveMethvin> and all that was to fix ie 6/7 attroperties as i recall
[11:08:20] <timmywil> that's about all I can figure as well, but quick match is faster than regular Sizzle.filter mostly because it only loops through the elements once, so it will still be faster when matchesSelector fails
[11:08:39] <timmywil> not that matchesSelector would fail a lot, but there are some cases
[11:09:01] <DaveMethvin> it's all about the odds anyway
[11:09:15] <DaveMethvin> the most common cases are things like #id and .class or tag
[11:09:24] <DaveMethvin> and those are so simple to do
[11:10:09] <DaveMethvin> even ones like :first-child are relatively easy, just check the node's .previousSibling
[11:10:46] <DaveMethvin> i had a bigger list at one point but couldn't justify adding the code b/c i had NEVER seen it used as a delegated event selector :D
[11:11:59] <timmywil> yea, I was thinking about adding attribute detection to the quick match, but decided to save the space for now
[11:13:35] <DaveMethvin> it's a bit of a shame since we still need all the heavy throw weight for the hard cases like is("p > div.class")
[11:14:16] <DaveMethvin> unless we were willing to use quickIs (perhaps extended for a few more cases) and throw out matchesSelector again
[11:14:29] <DaveMethvin> it really seems like matchesSelector should be able to do the  hard cases faster
[11:14:39] <timmywil> complex matching was also improved by about 25%
[11:15:05] <timmywil> oh you mean with matchesSelector
[11:15:34] <Krinkle> gnarf: yes?
[11:15:47] <timmywil> with matchesSelector, we keep it about the same
[11:16:16] <gnarf> Krinkle / clarkbox: clark is gonna try to get some more traction moving forward on setting up the swarm services on a new staging server
[11:16:38] <gnarf> just wanted to make sure you guys knew of each other since you're the swarm master nowadays ;)
[11:16:40] <DaveMethvin> timmywil: when we drop some of the old browsers we'll have a better opportunity to clean up a lot of this
[11:17:28] <timmywil> in a way, I think we'll always need Sizzle fallbacks for qsa and matchesSelector
[11:17:38] <Krinkle> gnarf: clarkbox okay, if I should do something or if you're about to do something that affects the availability of the swarm, let me know :)
[11:17:41] <DaveMethvin> as far as the modularity goes it might be interesting to come up with a stubby Sizzle that supports as much as possible but isn't afraid to regress on performance for things that can't be handled by qSA/mS
[11:18:24] <clarkbox> ya i am read only mode on the running server
[11:18:59] <gnarf> Krinkle: we are just trying to setup a stage.swarm.jquery.com basically
[11:19:22] <gnarf> so that we can switch onto a new server with more everything and less cruft
[11:19:33] <timmywil> DaveMethvin: I'm excited about what we have right now. I can safely say good things about perf and reliability in my talk.
[11:20:11] <jq-jenkins> Yippie, build fixed!
[11:20:12] <jq-jenkins> Project jQuery Color build #23: FIXED in 2 min 30 sec: http://swarm.jquery.org:8080/job/jQuery%20Color/23/
[11:20:12] <jq-jenkins> Corey Frang: Fixing unit test failure in IE6 & 7
[11:20:15] <gnarf> fuck yeah green
[11:20:29] <timmywil> man I was excited there for a second
[11:20:38] <Krinkle> gnarf: This "stage" principle I see every here and there. What is is exactly? Is it for testing before on the live one? I'm a little confused since I haven't been able to actually access any of the domains that had "stage" in them.
[11:20:40] <timmywil> thought it was our first all green from jenkins
[11:20:44] <DaveMethvin> yeah i need to go clean out my underwear
[11:20:50] <Krinkle> gnarf: and then there is the "origin" thingy...
[11:21:17] <gnarf> Krinkle: and yeah - "stage" is a place to like setup a server before you setup the real one, and test out whatever you need to test
[11:21:24] <DaveMethvin> i have to run off again, back by 3 i hope
[11:21:29] <gnarf> none of the stage. domains are defined in DNS
[11:21:38] <gnarf> you have to hack em into your hosts file
[11:21:46] <timmywil> DaveMethvin: so many bug fixes as well. e.g. QSA bug detection and correct multiple-combinator handling
[11:21:50] <timmywil> DaveMethvin: ok, cyl
[11:21:58] <Krinkle> the 12 failures in offset in IE7 in core are related to it being in an iframe, we'll have to fix that  my implementing  https://github.com/jquery/testswarm/issues/195
[11:21:58] <socialhapy> â˜… Issue #195 on testswarm (Krinkle; 4d, 20h ago): Find an alternative method for the client runs
[11:22:28] <gnarf> the code.origin.jquery.com, etc are domains that the actual CDN's hit to copy data from
[11:22:37] <Krinkle> gnarf: ah, ok
[11:22:47] <Krinkle> great
[11:23:17] <gnarf> Krinkle: maybe when clark is in there setting himself up an account on the new services box, he can get you in there as well
[11:23:43] <clarkbox> ya i can do that
[11:24:10] <gnarf> clarkbox: I think his ssh key is in the infra wiki already
[11:50:06] <mikesherov> DaveMethvin: https://github.com/jquery/jquery/commit/239fc86b01d52fd9df6d1963027ed37b4f6251fc#commitcomment-1483569
[11:50:07] <socialhapy> â˜… Commit on jquery by timmywil (3h, 30m ago): Adjust jQuery('html') detection to only match when html starts with '<' (counting space characters). Fixes #11290
[11:50:17] <mikesherov> I'm nervous
[11:55:57] <mikesherov> http://jsfiddle.net/RphY2/
[12:22:09] <gnarf> mikesherov: whats that fiddle demonstrating?
[12:22:17] <gnarf> the fact that "hi " is lost off the left?
[13:14:24] <timmywil> DaveMethvin: so, would you like me to restore the regex, and I noticed you were assigned. Do you think you can do parseHTML for beta?
[13:15:22] <timmywil> just wondering what else I can do before release
[13:15:29] <DaveMethvin> timmywil: yeah i guess we should leave the regex as is?
[13:15:48] <DaveMethvin> on parseHTML i keep thinking i will find the time but i haven't figured out where i hid it :D
[13:15:58] <DaveMethvin> do you want to take a shot at it?
[13:16:15] <timmywil> I can do a pass if you like
[13:16:21] <DaveMethvin> that would be great
[13:16:40] <timmywil> cool, I'll try to have something by tomorrow
[13:16:50] <DaveMethvin> i will be around tonight but probably busy until around 8pm
[13:17:01] <DaveMethvin> thanks sooooo much!
[13:17:09] <timmywil> np! :)
[14:11:17] <FJ1> will there be an pre release of 1.8?
[14:11:56] <danheberden> FJ1: yes, and you can get ready for it: http://weblog.bocoup.com/easily-test-jquery-pre-release-versions/
[14:12:32] <danheberden> the latest build is always here:
[14:12:33] <danheberden> http://code.jquery.com/jquery-git.js
[14:13:23] <FJ1> @danheberden great! thx a lot.
[14:18:52] <FJ1> @danheberden http://code.jquery.com/ great overview
[14:26:46] <David_Souther> ?
[14:45:46] <timmywil> For anyone interested, this is what I have so far for parseHTML: https://github.com/timmywil/jquery/commit/a92ac464c65319e086361d5f992c79fc96bd1eff  bbs
[14:45:46] <socialhapy> â˜… Commit on jquery by timmywil (56.867s ago): Adds parseHTML. Fixes #11617.
[14:47:22] <timmywil> that should read "allowScripts: If true, will include scripts passed in the html string"
[14:47:32] <timmywil> ok back later
[16:12:18] <gnarf> mikesherov: you around?
[16:35:11] <benv> hey jquery devs
[16:35:16] <benv> i have a ticket but trac rejects it as spam
[16:35:23] <benv> tje ticket is: buy nike shoes www.airzoomzoom.com
[16:35:39] <benv> https://gist.github.com/c7b5f70fc5cba4520e4d
[16:43:10] <gnarf> lol benv
[16:43:38] <gnarf> benv: I'll just post it for ya
[16:45:05] <gnarf> benv: http://bugs.jquery.com/ticket/11943
[16:46:04] <benv> merci
[16:46:45] <gnarf> thanks for the gist
[17:40:08] <jqcommit> [jquery] rwldrn pushed 1 new commit to master: http://git.io/qbiTLw
[17:40:08] <jqcommit> [jquery/master] Actually omit files that are specified. Fixes #11943 - Rick Waldron
[18:10:47] <jq-jenkins> Project jQuery Core build #166: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/166/
[18:10:48] <jq-jenkins> waldron.rick: Actually omit files that are specified. Fixes #11943
