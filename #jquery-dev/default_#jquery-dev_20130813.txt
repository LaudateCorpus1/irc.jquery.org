[08:04:31] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06AMD: 02http://git.io/m7Uvsw
[08:04:31] <jqcommit> 13jquery/06AMD 144568ac9 15Timmy Willison: Add a QUnit option to include jQuery using AMD in tests.
[08:16:59] <jqcommit> 01[13jquery01] 15timmywil pushed 1 new commit to 06AMD: 02http://git.io/KjYPnw
[08:16:59] <jqcommit> 13jquery/06AMD 14748cdeb 15Timmy Willison: Restore -sizzle option to include selector-native instead
[12:52:41] <paul_irish> how would you feel about Chrome DevTools using $._data(elem,'events') so that it can show the actual event listener instead of jQuery's innards
[12:53:06] <paul_irish> http://gyazo.com/abb3af6cc4ed3b1c6f737a943977065f  current results on top. `handler` is useless. jQuery debugger chrome ext on bottom that uses that API
[12:54:23] <paul_irish> private api, but would be super useful. We want to have better support for abstracted handlers like this.. for jQuery's case this seems optimal
[13:10:36] <m_gol> paul_irish: it would need a way to be disabled, sometimes you might want to see the true handlers (e.g. if you debug jQuery ;)). as for using $._data itself, seems fine for me, though I'd wait for others' opinions. This is not web tech but tooling so accessing private APIs seems a little more acceptable
[13:12:21] <paul_irish> m_gol: we would expose both, probably
[13:13:04] <m_gol> by creating a separate "jQuery handlers" section?
[13:13:13] <m_gol> that's probably a question for UI designers :)
[13:13:56] <m_gol> anyway, I agree if you use jQuery the handlers section becomes useless, it'd be good to have sth built-in for that popular use case
[13:23:17] <paul_irish> kk
