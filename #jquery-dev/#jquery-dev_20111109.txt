[12:53:09] <kswedberg> eddiemonge, ajpiano: I'm back now. ajpiano: you calling me obtuse!? ;)
[12:53:26] <ajpiano> WAT NO
[12:53:30] <ajpiano> i would never
[12:55:03] <kswedberg> ajpiano: "i think it's just the "include your css before any scripts" thing rephrased more obtusely" just messing with you.
[12:55:12] <ajpiano> haha no i remember
[12:55:50] <DaveMethvin> kswedberg isn't obtuse, i think he's kind of acute
[12:56:06] <kswedberg> lol <3z DaveMethvin
[12:56:50] <kswedberg> anyway, eddiemonge: I vaguely recall there being an issue with Safari 2 or 3 and stylesheet loading. pretty sure that's where that warning came from.
[12:59:06] <eddiemonge> i was more referring to the vagueness of the language used to issue aforementioned warning text
[13:23:40] <kswedberg> eddiemonge: gotcha. sure. feel free to edit for clarity
[13:25:15] <eddiemonge> im not sure what its saying to begin with or i would
[13:29:49] <Krinkle> Does jQuery support the use of trigger/bind for non-elements (i.e. on some random object)
[13:30:21] <Krinkle> MediaWiki's front-end needs a hook for events and we're looking for options. One of which is to "just use jQuery as is".
[13:30:43] <Krinkle> I'm not sure whether it's a good idea, but if we decide to do se I would prefer having some kind of blessing from a core developer :)
[13:30:59] <Krinkle> i.e. to have it not break suddenly because it just happens to no longer work.
[13:31:09] <Krinkle> I know it works kinda, but is it 'supported'
[13:33:21] <jzaefferer> Krinkle: you probably shouldn't use it for any high-frequency events, say, > 10 per second, as the overhead is big compared to a pure pub/sub system
[13:34:00] <jzaefferer> but generally its fine to use, and at the base for $.observable, part of jQuery UI Grid, see http://wiki.jqueryui.com/Observable
[13:34:01] <Krinkle> jzaefferer: Right
[13:34:32] <Krinkle> what we would use it for is for example mw.hooks.run('article.loaded'); and mw.hooks.register('article.loaded', fn);
[13:34:54] <Krinkle> which is called whenever an article is loaded. Usually only once, but if one uses an AJAX skin, it would be triggered more than once on a page's life time.
[13:35:20] <Krinkle> The reason we need this is for plugins that 'do' stuff to force to re-do their stuff when the body is no longer the same page
[13:35:36] <Krinkle> traditionally those plugins are told to do their stuff on #mw-content on $(document).ready
[13:35:54] <Krinkle> we would change that to run on mw.article.loaded instead
[13:36:47] <Krinkle> I would prefer a light weight self-made plugin that I can rely on. But I'm not sure there are many things to guard for (we support the same browser set as jQuery)
[13:37:03] <Krinkle> I'm thinking a simple private object with keys=event names and value=array of functions
[13:37:32] <Krinkle> run(name), looks through the private_object[name] and calls them.
[13:37:45] <Krinkle> register(name, fn), privaste_object[name].push(fn)
[13:37:48] <Krinkle> simple, right ?
[13:41:03] <danzik17> Krinkle: it sounds like you kind of want this (assuming you're using 1.7 ) http://api.jquery.com/jQuery.Callbacks/#pubsub
[13:41:40] <Krinkle> I heard of it, now that it's public I guess it's usable. Let's see
[13:43:00] <Krinkle> danzik17: wow, that looks incredibly easy
[13:43:43] <Krinkle> it doesn't seem to manage the names for me though. So I'd create an instance of Callbacks for each event name the first time a hook wants to add a function, and from there on just .add() stuff and fire() at will
[13:45:48] <Krinkle> Hm.. googleapis ajax still caches 1.6.4
[13:45:51] <Krinkle> http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js
[13:46:22] <Krinkle> http://code.jquery.com/jquery.js :)
[13:47:04] <danheberden> does anyone know the # of unit test for jquery of the top of their head? /cc rwaldron
[13:47:09] <danheberden> *off the
[13:47:39] <Krinkle> http://swarm.jquery.org/job/314/
[13:47:40] <Krinkle> do the math :P
[13:47:46] <Krinkle> one column
[13:53:30] <danheberden> nice, thanks Krinkle
[13:56:01] <danheberden> 6204
[13:56:16] <Krinkle> (a column that is entirely green of course :) )
[13:57:49] <rwaldron> danheberden 6204 is nice
[13:57:53] <danheberden> var total = 0;[].forEach.call( document.querySelectorAll( 'td:nth-child(2) a' ), function(v,i){ total += +v.innerHTML }); total;
[13:58:00] <rwaldron> last time i looked we'd hit 6000 exactly
[13:58:09] <danheberden> heh - wonder how many of those you've written rwaldron
[13:58:16] <rwaldron> lots
[13:58:24] <rwaldron> but that's a good question
[13:58:32] <rwaldron> not sure of a smart/easy way to figure that out
[14:00:19] <danheberden> we can go the smart `s/\/easy/ass/` way and say 'most of them' :p
[14:01:06] <rwaldron> naw
[14:01:52] <rwaldron> that's probably split between John, Brandon Aaron and DaveMethvin
[14:04:33] <danzik17> DaveMethvin: if youre around, just wondering - do you have any docs or draft docs for special events as of 1.7?  looking at the source for existing specials, but it's kind of muddy in what you're allowed to use vs what's considered internal.
[14:15:18] <paul_irish_> gnarf: can you work out the merge issue? https://github.com/jquery/jquery-ui/pull/185#issuecomment-2688160
[14:15:19] <socialhapy> â˜… Pull request on jquery-ui by lindstroem (6m, 3w ago): Split
[17:30:31] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/q0DHAA
[17:30:31] <jqcommit> [jquery/master] Removing .unbind in favor of .off in jQuery.ready - Daniel Herman
[17:33:24] <jq-jenkins> Project jQuery build #186: STILL FAILING in 2 min 36 sec: http://swarm.jquery.org:8080/job/jQuery/186/
[17:33:24] <jq-jenkins> dave.methvin: Removing .unbind in favor of .off in jQuery.ready
[17:46:27] <rwaldron> DaveMethvin yt?
[17:46:33] <DaveMethvin> yep
[17:46:49] <rwaldron> not sure I follow you here...
[17:47:00] <rwaldron> "those names are not in the list of events when we apply fixHooks"
[17:47:08] <rwaldron> wait
[17:47:11] <rwaldron> nope, nevermind
[17:47:20] <rwaldron> i getcha now
[17:47:32] <DaveMethvin> yeah at the bottom of the file we have to have the name there atm
[17:47:32] <rwaldron> that patch was basically a "stab in the dark"
[17:47:40] <rwaldron> i think i wrote it at like 11:30 at night
[17:47:59] <rwaldron> and because the test didnt actually test anything
[17:48:10] <DaveMethvin> yeah, cheater! :P
[17:48:16] * rwaldron shrugs
[17:48:21] <DaveMethvin> i think you could call .fix directly for the test
[17:48:38] <DaveMethvin> i mean, it's an internal function but the unit test is too
[17:48:53] <DaveMethvin> kinda like the test for the frag cache or the ones i have for quickIs
[17:48:55] <rwaldron> cool
[17:49:07] <DaveMethvin> but...as for how we fix it
[17:49:13] <rwaldron> Like you said, needs a rethink
[17:49:16] <rwaldron> approach wise
[17:49:40] <DaveMethvin> if we didnt have custom events it would be easy to set the hook on first attach
[17:50:25] <DaveMethvin> how widespread is this issue though? there are a lot of events
[17:50:53] <DaveMethvin> for everything but ie we could check for instanceof MouseEvent or KeyEvent
[17:51:19] <DaveMethvin> maybe we SHOULD drop ie support in 1.8
[17:51:28] <DaveMethvin> and i could live a full life
[17:55:01] <DaveMethvin> http://www.w3.org/wiki/List_of_events
[17:55:17] <rwaldron> DaveMethvin http://gyazo.com/a073275c72f0d7366f15f52d862dc5d5.png
[17:55:25] <rwaldron> take it in.
[17:55:40] <DaveMethvin> awww, puppies!
[17:58:47] <rwaldron> puppies make ie related bugs go away
[18:29:53] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/tKWoAA
[18:29:53] <jqcommit> [jquery/master] Fix #10705. Don't bail too soon in `.off()` event string processing. - Dave Methvin
[18:32:20] <jq-jenkins> Project jQuery build #187: STILL FAILING in 2 min 19 sec: http://swarm.jquery.org:8080/job/jQuery/187/
[18:32:21] <jq-jenkins> dave.methvin: Fix #10705. Don't bail too soon in `.off()` event string processing.
[18:35:57] <DaveMethvin> mikesherov: i gave you trac-admin so you could edit tickets
[18:55:43] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: http://git.io/P7ca8g
[18:55:43] <jqcommit> [jquery/master] The special.handle hook is for origType, not the mapped type. - Dave Methvin
[18:58:10] <jq-jenkins> Project jQuery build #188: STILL FAILING in 2 min 19 sec: http://swarm.jquery.org:8080/job/jQuery/188/
[18:58:10] <jq-jenkins> dave.methvin: The special.handle hook is for origType, not the mapped type.
[19:12:30] <danzik17> hey DaveMethvin - do u have any docs for the 1.7 special events stuff?  i tried to glean from the source how it was supposed to work, but it's not entirely clear what's considered public
[19:13:14] <DaveMethvin> i have it on my todo list danzik17
[19:13:24] <DaveMethvin> is there something in particular you wanted to know?
[19:13:32] <DaveMethvin> oh i have something just a sec
[19:14:01] <danzik17> essentially theres a comment that jQuery.event.handle (which was undocumented) is entirely replaced the special events
[19:14:16] <danzik17> but it's not clear how that'd work without calling something like .dispatch or .fix
[19:14:31] <danzik17> all of the examples in the source use what i'd think are internal methods
[19:15:26] <danzik17> and gotcha about the "don't work on master" thing - read up on it now - complete newb at github committing
[19:16:52] <DaveMethvin> normally you wouldn't need to call fix directly unless you skipped using .on() and used document.addEventListner/attachEvent directly
[19:17:00] <DaveMethvin> still looking for that example
[19:17:52] <danzik17> sure - the actual use case is that i'm catching an event in tinymce which relies on native events and want to re-trigger it on an element that uses jquery bindings
[19:18:22] <DaveMethvin> http://jsfiddle.net/dmethvin/gseGm/
[19:18:37] <DaveMethvin> danzik17: that's the example converted from Brandon's original article linked there
[19:20:06] <DaveMethvin> most old special event handlers should continue to work though, they're just a lot more complicated
[19:22:10] <danzik17> yea i was reading up on ben alman's old special events article earlier
[19:23:05] <DaveMethvin> i should be able to get the docs done but most likely not until 1.7.1 is out
[19:24:04] <danzik17> that's cool - basically i was just trying to avoid having to use internal functions to convert a native event to a jquery event and thought special events might be the ticket
[19:25:00] <danzik17> but the examples of events that did that all use .fix, so it might just be a no-go - either use event.fix, or just write my own
[19:27:07] <DaveMethvin> you can use .fix but generally you'd only want do do that in a special event handler
[19:27:31] <DaveMethvin> and it's definitely internals stuff that's more subject to change than the normal external interfaces
[19:27:51] <DaveMethvin> but i don't think we broke that in 1.7 ... how did we miss that :D
[19:28:13] <danzik17> eh, just rename it to .fixt - done =P
[19:28:22] <DaveMethvin> .repair
