[05:41:19] <DaveMethvin> .
[06:47:55] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/mQj3mg
[06:47:55] <sizcommit> [sizzle/master] Don't tokenize trailing commas. Fixes jQuery bug #12643. Closes gh-158. - Richard Gibson
[06:49:50] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/zMbyQg
[06:49:50] <jqcommit> [jquery/master] Sizzle: throw an invalid selector exception for trailing-comma selectors. Fixes #12643. - Timmy Willison
[07:21:03] <doesallmagic> Project jQuery Core build #393: STILL FAILING in 31 min: http://swarm.jquery.org:8080/job/jQuery%20Core/393/
[07:21:04] <doesallmagic> timmywillisn: Sizzle: throw an invalid selector exception for trailing-comma selectors. Fixes #12643.
[08:57:51] <rwaldron> DaveMethvin ping
[08:58:16] <DaveMethvin> sup rwaldron
[08:58:28] <rwaldron> I was just reviewing http://bugs.jquery.com/ticket/10227 and https://bugzilla.mozilla.org/show_bug.cgi?id=797029
[08:58:42] <rwaldron> where this default display thing is still a problem in the latest firefo
[08:58:45] <rwaldron> firefox*
[08:59:04] <rwaldron> so I started trying to implement boris's suggestion and then it occurred to me
[08:59:14] <rwaldron> body is always default display :block
[08:59:34] <rwaldron> so, instead of adding a bunch of insane workaround to defaultDisplay
[08:59:52] <rwaldron> I preload elemdisplay = { body: "block" }
[08:59:55] <DaveMethvin> http://bugs.jquery.com/ticket/10227#comment:7
[09:00:13] <DaveMethvin> i dunno why we didn't listen to mikesherov
[09:00:17] <rwaldron> pfft
[09:00:19] <rwaldron> nice
[09:00:21] <DaveMethvin> must have been a reason
[09:00:22] <mikesherov> HA
[09:00:22] <b-ot> mikesherov, you have one new message, say “read” to me when you wish to read it.
[09:00:25] <mikesherov> read
[09:00:34] <mikesherov> THAT SHIT GOT CLOSED
[09:00:37] <DaveMethvin> mother may I read
[09:00:39] <mikesherov> b-ot: read
[09:00:40] <b-ot> mikesherov, from gnarf, 1d 10h ago: do you know where you hardcode it in? can you do it? (give gibson access to the voting)
[09:00:45] <rwaldron> well mikesherov, that's the solution I'm doing
[09:00:48] <rwaldron> so hat's off
[09:00:48] <mikesherov> UGH
[09:00:52] <rwaldron> :D
[09:00:54] <mikesherov> hold on
[09:01:00] <rwaldron> we thought it would go away
[09:01:04] <rwaldron> that's why it was closed
[09:01:11] <DaveMethvin> right if it was only ff3.6
[09:01:12] <rwaldron> 1. it's a stupid edge case
[09:01:16] <rwaldron> 2. thought it was only 3.6
[09:01:24] <rwaldron> it's still stupid, but it's still an issue
[09:01:27] <mikesherov> https://github.com/jquery/jquery/pull/555
[09:01:28] <socialhapy> ★ Pull request on jquery by mikesherov (11m, 2w ago): display:none on body tag causing .show() to not show, fixes #10227
[09:01:45] <rwaldron> Um
[09:03:11] <mikesherov> wait, wrong one
[09:03:18] <rwaldron> this isn't failing in FF nightly
[09:03:34] <rwaldron> if it fails in the latest stable, but not nightly, I'm reclosing
[09:03:49] <scott_gonzalez> Closed: wait12weeks.
[09:04:19] <rwaldron> scott_gonzalez +1
[09:04:40] <DaveMethvin> closed: waitfix
[09:05:04] <scott_gonzalez> It's such a cop-out, but it's also a ridiculous edge case.
[09:06:04] <rwaldron> um
[09:06:08] <rwaldron> this is hilarious
[09:06:19] <rwaldron> forget this conversaation ever happend
[09:06:24] <rwaldron> happened*
[09:06:31] <DaveMethvin> what conversation?
[09:06:39] <rwaldron> hehe
[09:06:43] <rwaldron> I just went back to the moz ticket and looked at the test case
[09:06:46] <rwaldron> they're using 1.7.2
[09:06:49] <rwaldron> this issue doesn't exist
[09:07:01] * DaveMethvin waves hand
[10:26:41] <rwaldron> mikesherov
[10:26:47] <rwaldron> "body default display is always block. @mikesherov was right and this is the proof. Fixes #10227"
[10:26:58] <mikesherov> :-)
[10:27:06] <rwaldron> (my earlier test case had a bug, which is why i thought it was closeable)
[10:29:36] <DaveMethvin> yay
[10:30:00] <rwaldron> sorry about the false-false alarm earlier
[10:30:13] <rwaldron> I have a high-preset-desire to kill these tickets
[10:30:16] <rwaldron> who does that???
[10:30:21] <DaveMethvin> good q
[10:30:24] <DaveMethvin> not me
[10:30:29] <DaveMethvin> that's the problem with us
[10:30:34] <DaveMethvin> we are not good test case generators
[10:30:35] <rwaldron> .initially-hidden { display: none; }
[10:30:37] <rwaldron> so easy
[10:30:41] <DaveMethvin> we don't think pathologically enough
[10:56:41] <doesallmagic> Project jQuery Core build #394: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/394/
[10:56:42] <doesallmagic> waldron.rick: body default display is always block. @mikesherov was right and this is the proof. Fixes #10227
[11:05:03] <mikesherov> I WAS RIGHT
[12:02:29] <mikesherov> DaveMethvin: timmywil: I sent you a briandump about what the core bug team may do during the dev summit
[12:02:40] <DaveMethvin> yea, thanks was just looking at it
[12:02:53] <mikesherov> I don't know if I went overboard
[12:02:59] <DaveMethvin> no such thing
[12:03:14] <timmywil> agreed, thanks for doing that!
[12:03:49] <mikesherov> I was very procedural, but during the summit it actually won't be as stuffy and rigid
[12:04:05] <DaveMethvin> right, more like hectic and chaotic
[12:04:20] <timmywil> I'm gonna be fighting the temptation to work on the bugs themselves btw
[12:04:25] <mikesherov> the result of planning isn't as important as the exercise of planning
[12:04:42] <mikesherov> timmywil: I told ajpiano that last night
[12:04:58] <DaveMethvin> i think a lot of our work will be mentoring the folks who attend
[12:04:58] <mikesherov> he said: why do you think the triage table is seated next to the bug table
[12:05:06] <DaveMethvin> andthat's fine
[12:05:12] <DaveMethvin> i hope we get a few live ones
[12:05:32] <mikesherov> Right, I'm not planning on doing anything that isn't dumb as doornails (like porting over needsdocs to api.jquery.com tracker)
[12:05:47] <DaveMethvin> gonna get some carrier pidgeons, roll up little scrolls to their legs and throw them at the other table
[12:05:54] <mikesherov> HAHAHA
[12:05:54] <timmywil> can we make dave do that?
[12:06:00] <mikesherov> I'll do that
[12:06:18] <timmywil> I want to make Dave do something, he never does anything.
[12:06:24] <DaveMethvin> damn right
[12:06:28] <DaveMethvin> that's my specialty!
[12:06:44] <timmywil> ;)
[12:06:46] <DaveMethvin> "Dave, can  you close this bug wontfix?"
[12:06:46] <ajpiano> cmon guys DaveMethvin is pretty good at drinking cocktails
[12:07:00] <DaveMethvin> with my pinky extended
[12:07:16] <mikesherov> so, we need to add admin rights to trac for the peeps at my table
[12:07:23] <mikesherov> but that's another story
[12:07:36] <timmywil> ah good point
[12:07:37] <mikesherov> timmywil: all you should do is rewrite sizzle the entire time
[12:07:37] <DaveMethvin> mikesherov: are you trac_admin?
[12:07:43] <mikesherov> I think I am
[12:07:48] <DaveMethvin> DON"T ENCOURAGE HIM
[12:07:48] <timmywil> mikesherov: been there
[12:07:55] <mikesherov> I remember
[12:07:56] <timmywil> :)
[12:08:09] <timmywil> yea, that kinda took over my whole conference
[12:08:12] <mikesherov> You had a laptop in your lap at the bar at the indian place in SF that weekend
[12:08:17] <DaveMethvin> oh but it was sooo sweet
[12:08:27] <mikesherov> yeah, you were on a mission
[12:08:32] <timmywil> it was fun
[12:08:48] <DaveMethvin> such an awesome feeling when that happens
[12:08:58] <DaveMethvin> non-programmers will never understand
[12:09:21] <timmywil> yup
[14:10:16] <mikesherov> .
[14:10:21] <gnarf> WTB Rubyist
[14:10:28] <mikesherov> gnarf!
[14:10:49] <mikesherov> Hey dude, all I know is there is a script on the trac box that contains hardcoded list of usernames
[14:10:58] <mikesherov> danheberden knew where it was
[14:11:18] <mikesherov> gnarf: just ack the entire box for mikesherov :-)
[14:11:34] <gnarf> mikesherov: damnit, here i thought you were replying to my ad for a rubyist
[14:11:48] <mikesherov> oh
[14:11:56] <mikesherov> I kind of know ruby
[14:12:22] <gnarf> I have a ruby problem
[14:12:29] <gnarf> RE https://github.com/puppetlabs/puppet/blob/master/lib/puppet/util/execution.rb#L74
[14:13:01] <gnarf> and https://github.com/gnarf37/puppet-mysql/blob/master/lib/puppet/provider/mysql_grant/mysql.rb
[14:13:20] <gnarf> the execute() method is now stripping HOME
[14:13:25] <gnarf> and i need to put it back in
[14:13:29] <gnarf> so it reads the default files
[14:13:50] <gnarf> I kinda want to just define my own method that calls execute with the right option to set HOME
[14:14:12] <gnarf> so i can s/execute/execRoot/g or something
[14:14:22] <gnarf> and get this puppet module working in 3.0
[14:14:33] <danheberden> gnarf, i have to set HOME in other scripts too
[14:14:45] <gnarf> execute('foo', :custom_environment => { HOME => '/root' })
[14:14:54] <danheberden> aye
[14:15:22] <danheberden> but since the script is running non-interactively, i usually set HOME in the script/whati'm executing
[14:16:57] <gnarf> danheberden: this is inside the ruby "provider"
[14:17:15] <gnarf> danheberden: so its not like environment => ["HOME='/root'"] fixes it
[14:20:04] <gnarf> mikesherov: so, any chance you know how i can define a new method to pass its first argument to execute with this :custom_environment ?
[14:20:12] <gnarf> or danheberden?
[14:20:53] <gnarf> function execRoot( command ) { execute( command, { custom_environment: { HOME: '/root' } } ); } in JS terms
[14:21:46] <mikesherov> right I wasn't sure you could set environment variables from within ruby that are accessible from other commands you execute
[14:21:53] <mikesherov> using "execute" at least
[14:22:03] <mikesherov> isn't there like a "system" ruby command?
[14:22:52] <danheberden> yeah, but it's the same thing; you manage your own home/path vars
[14:23:26] <ryanneufeld_> gnarf: what's the issue that has you wanting to force /root as the exec dir?
[14:23:57] <gnarf> mikesherov: "execute" is the puppet execute util i showed above
[14:24:03] <gnarf> it takes :custom_environment
[14:24:04] <mikesherov> oh duh
[14:24:04] <gnarf> like that
[14:27:32] <mikesherov> I think you need to say env: if I'm reading the docs right
[14:27:37] <mikesherov> http://www.ruby-doc.org/core-1.9.3/Kernel.html#method-i-spawn
[14:28:46] <mikesherov> Puppet::Util.withenv({:HOME =>
[14:28:56] <mikesherov> gnarf: I think you're missing a semicolon
[14:29:19] <mikesherov> execute('foo', :custom_environment => { HOME => '/root' }) is missing a semi for ":HOME"
[14:29:31] <gnarf> sure
[14:29:44] <gnarf> now i have another issue tho
[14:29:47] <gnarf> https://github.com/gnarf37/puppet-mysql/blob/master/lib/puppet/provider/mysql_user/mysql.rb#L28
[14:29:53] <gnarf> i just realized this is execpipe
[14:29:54] <gnarf> not exec
[14:30:07] <gnarf> and it doesn't take that custom environment thing
[14:30:36] <gnarf> https://github.com/puppetlabs/puppet/blob/master/lib/puppet/util/execution.rb#L191-193
[14:30:54] <gnarf> but execpipe is doing this insanity: https://github.com/puppetlabs/puppet/blob/master/lib/puppet/util/execution.rb#L34-36
[14:31:05] <gnarf> i have NFC what yield is doing there
[14:31:35] <mikesherov> well, piping, right?
[14:32:30] <gnarf> i guess
[14:33:32] <mikesherov> I mean, it yields back out the piped data
[14:34:03] <gnarf> yield is magic i'm not parsing atm, how do I add an environment to the open() call ?
[14:34:22] <mikesherov> right so imagine you're in CLI
[14:34:49] <mikesherov> if you do `ls | wc -l`
[14:35:10] <mikesherov> how would you add a home env variable to JUST wc -l
[14:35:37] <gnarf> um, i wouldn't because it would already be set
[14:35:37] <gnarf> :)
[14:35:45] <mikesherov> but if you wanted to!
[14:36:09] <gnarf> also, not entirely sure but ( HOME='/root' wc -l ) would be my first try
[14:36:23] <mikesherov> so that's what you gotta do to the open call
[14:36:24] <gnarf> but that works in shell
[14:36:31] <gnarf> but not execvp() afaik
[14:36:48] <mikesherov> | #{command_str} 2>&1
[14:36:50] <mikesherov>  is like
[14:36:58] <mikesherov> | wc -l 2 > &1
[14:37:34] <mikesherov> afaik, you just gotta modify that open call to add the home wrapper:
[14:38:50] <mikesherov> so https://github.com/gnarf37/puppet-mysql/blob/master/lib/puppet/provider/mysql_user/mysql.rb#L28 is just a fancy way of doing a bunch of piped CLI commands
[14:39:03] <gnarf> so back to the first function
[14:39:20] <mikesherov> I'd just do it here: https://github.com/gnarf37/puppet-mysql/blob/master/lib/puppet/provider/mysql_user/mysql.rb#L27
[14:39:24] <gnarf> i have a BUNCH that are execute
[14:39:58] <mikesherov> right, so in execute, the problem is :HOME
[14:40:55] <mikesherov> you had "HOME"
[14:41:03] <gnarf> i just wanna make my own "execute" that adds :HOME to the options
[14:41:13] <mikesherov> oh, so then do that :-)
[14:41:17] <gnarf> HOW?!@#
[14:41:19] <gnarf> :)
[14:41:22] <mikesherov> HAHAHA
[14:41:27] <mikesherov> you want me to right the code for you?
[14:41:29] <gnarf> that was the first question
[14:41:31] <mikesherov> write*
[14:42:15] <mikesherov> I mean, find where the execute function is defined and then define another function that calls it with options…
[14:42:29] <mikesherov> I'm not really sure what the question is other than "how do I write ruby?"
[14:42:31] <mikesherov> :-P
[14:42:38] <gnarf> mikesherov: i have NO idea how to write anything with ruby... I kinda understand --- can you please
[14:42:42] <gnarf> i can read
[14:42:43] <gnarf> can't write
[14:42:47] <gnarf> it doesn't flow
[14:43:23] <gnarf> i want to write this function in ruby, dunno where to add it in the code, or anything
[14:43:41] <gnarf> is it "self.something" or
[14:43:58] <mikesherov> ok, pastebinning it
[14:43:59] <gnarf> etc
[14:44:01] <gnarf> thanks
[14:44:02] <gnarf> :)
[14:45:10] <gnarf> im starting to get a little of it, but its like lost on me what goes where yet :)
[14:46:19] <mikesherov> wait, so just to be clear, you want me to modify this file, right?: https://github.com/gnarf37/puppet-mysql/blob/master/lib/puppet/provider/mysql_user/mysql.rb
[14:46:56] <gnarf> mikesherov: it actually needs to be done in all of the "provider"s
[14:47:04] <mikesherov> FUN
[14:47:56] <mikesherov> so, in this file :-) : https://github.com/puppetlabs/puppet/blob/master/lib/puppet/util/execution.rb#L191-193
[14:48:09] <mikesherov> I mean, that's the only DRY place I can put it
[14:48:10] <gnarf> mikesherov: can't edit that one, but if i can def the same alias in all the providers, then yes
[14:48:27] <mikesherov> I'll just do it in one provider, and you can copypasta
[14:48:44] <mikesherov> then when you figure out how how to include stuff, you can dry it yourself :-)
[14:48:47] <gnarf> mikesherov: thanks - once i see it i'll be like "doh, thats how you do it"
[14:48:52] <mikesherov> yup
[14:49:05] <mikesherov> p.s., this is all blind here
[14:49:09] <mikesherov> I don't have ruby env
[14:49:16] <gnarf> mikesherov: just wrapping my brain to parse the syntax is so overwhelming atm
[14:49:36] <gnarf> mikesherov: i can test/debug most likely, just dunno how to def a function that adds something to a potentially missing argument, etc
[14:50:10] <gnarf> nor do i even know what to call the {} thingys in ruby
[14:50:47] <danheberden> yields you mean, gnarf?
[14:51:02] <gnarf> danheberden: yield is its own brainfuck atm :)
[14:51:13] <danheberden> {} are either hashes or yields
[14:51:18] <gnarf> hash
[14:51:23] <gnarf> thats the one i was looking for
[14:51:37] <gnarf> so how tf does execute( cmd, :option => value ) work
[14:51:44] <gnarf> without the {} does it just assume it?
[14:52:38] <danheberden> yeah
[14:52:49] <danheberden> a lot of things are implied/optinoal
[14:52:51] <danheberden> *optinoal
[14:53:09] <danheberden> `execute cmd, :option => value` sohuld work too
[14:53:28] <danheberden> or execute cmd, { option: value }
[14:53:34] <danheberden> if ruby 1.9 or higher
[14:56:33] <mikesherov> gnarf: http://pastebin.com/0HjjHu6W
[14:56:42] <mikesherov> untested of course
[14:56:48] <mikesherov> pretty javascripty
[14:57:27] <gnarf> mikesherov: aye, last statemt = return value right?
[14:57:34] <gnarf> also, needs an "end" ?
[14:57:44] <danheberden> gnarf, last statement is the return
[14:57:51] <danheberden> and def needs an end, ya
[14:58:07] <danheberden> generally
[14:58:10] <danheberden> ;)
[15:00:20] <gnarf> so now i'm getting Could not evaluate: undefined method `execute_home' for #<Puppet::Type::Mysql_user::ProviderMysql:0x7fe96f7b68c0>
[15:01:31] <danheberden> is this being executed as a class method?
[15:02:13] <gnarf> danheberden: how can i tell? :)
[15:02:35] <danheberden> well, "puppet::type::mysql..." seems to indicate that - and are you adding this method in a class?
[15:02:38] <danheberden> or a mixin?
[15:02:52] <danheberden> like i have no idea how puppet includes this stuff
[15:04:55] <mikesherov> I agree
[15:05:00] <mikesherov> not sure of the puppet includes
[15:05:10] <mikesherov> which is why I wanted to stick it right in execution.rb
[15:05:54] <gnarf> danheberden: I really don't know --
[15:07:49] <mikesherov> oh, duh, get rid of self. in the definition
[15:08:53] <gnarf> okay so https://gist.github.com/dec4688e51204aa2a9c1
[15:08:57] <gnarf> Could not evaluate: undefined method `custom_environment' for {:custom_environment=>{}}:Hash
[15:09:57] <gnarf> ooo wait, maybe i can solve this one
[15:10:11] <gnarf> options[:custom_environment][:HOME] = '/root'
[15:10:18] <gnarf> seems to work!
[15:14:32] <gnarf> no clue why that works
[15:14:39] <gnarf> but options.custom_environemnt.HOME doesnt
[15:17:52] <gnarf> mikesherov: https://github.com/gnarf37/puppet-mysql/commit/ada37f196123305eba1d7642c0c917687d98cdbb thanks
[15:17:53] <socialhapy> ★ Commit on puppet-mysql by Corey Frang (2m, 21s ago): Changes needed to support Puppet 3.0
[15:18:50] <mikesherov> great
[15:18:55] <mikesherov> glad I could help
[15:23:11] <danheberden> gnarf, those are symbols
[15:23:22] <danheberden> :custome_environment != .custom_environment
[15:39:32] <erichynds> dan morgan, you in here?
[15:46:58] <danheberden> i could talk in a morgan freeman voice, would that count?
[16:31:23] <mikesherov> .
[18:09:31] <ajpiano> erichynds: what are you looking for dan morgan for
[18:37:09] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/p5VtuQ
[18:37:09] <jqcommit> [testswarm/master] Security: Allow settings file to be stored outside docroot. - Timo Tijhof
[18:46:03] <jqcommit> [testswarm] Krinkle force-pushed master from d5ed5f2 to c17cb88: http://git.io/9_ezCQ
[18:46:03] <jqcommit> [testswarm/master] Security: Allow settings file to be stored outside docroot. - Timo Tijhof
[18:58:58] <ryanneuf_> .
[19:02:46] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/Uxu_fg
[19:02:46] <jqcommit> [testswarm/master] JobPage: Fix TypeError in job.js after deleting a job. - Timo Tijhof
[19:22:25] <Krinkle> .
[19:32:16] <ryanneuf_> https://dl.dropbox.com/s/w94j0iqlfo0uu8r/screen-shot-2012-10-02-at-9-35-08-pm.png
[19:32:23] <ryanneuf_> so odd
[19:42:24] <ryanneuf_> gnarf?
[19:42:46] <gnarf> ya?
