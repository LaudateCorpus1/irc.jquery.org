[00:35:27] <FJ1> jquery 1.8 comes out today?
[05:32:16] <DaveMethvin> .
[06:00:49] <gibson042> .
[06:05:22] <Clooth> .
[06:55:33] <scott_gonzalez> DaveMethvin: http://groups.drupal.org/node/245858#comment-794683
[07:11:18] <FJ1> is there a date for jquery 1.8 release?
[07:27:41] <DaveMethvin> gibson042: thoughts? http://bugs.jquery.com/ticket/12208
[07:37:16] <gibson042> DaveMethvin: checking now
[07:38:45] <FJ1> with jQuery 1.7.2 (http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js) it works fine.
[07:42:57] <gibson042> hrmm
[07:43:47] <gibson042> I see what's going on with it, but I'll have to think about a fix
[09:47:32] <scott_gonzalez> DaveMethvin: That's a pretty clever hook into $.cleanData.
[09:47:44] <scott_gonzalez> I might update jQuery UI to do that.
[09:48:21] <scott_gonzalez> I'm not sure if it'll work though, I'll have to play around with it.
[09:55:50] <DaveMethvin> scott_gonzalez: yeah i just thought of it when i saw that
[09:56:02] <DaveMethvin> mainly because that is an area we're going to redo in jQuery 2.0
[09:56:16] <DaveMethvin> and try to avoid the expensive data/event cleanup when possible
[09:58:07] <DaveMethvin> timmywil: did you see that bug with custom selectors from john bender? http://bugs.jquery.com/ticket/12208 i asked gibson042 to take a look as well
[09:58:22] <DaveMethvin> seems like it might be important enough to hold 1.8
[10:25:26] <timmywil> DaveMethvin: think I got it
[10:26:09] <timmywil> was a problem with chaining selectors after pos selectors
[10:26:24] <DaveMethvin> easy fix??
[10:26:29] <timmywil> yea
[10:26:32] <DaveMethvin> oh good
[10:27:09] <DaveMethvin> i want to get things running with mobile 1.1.1, they won't have an update for more than a week and i know people will ignore whatever we say and try it with mobile
[10:27:33] <DaveMethvin> so i'm going to add back an empty $.attrFn as well, plus your fix, and we shoudl be good
[10:30:21] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: https://github.com/jquery/sizzle/commit/3d4f4e9436d7bdcb60e8880848c4a567bebbe91c
[10:30:21] <sizcommit> [sizzle/master] Do not assume a combinator when filter after pos selectors. Fixes jQuery bug #12208. - Timmy Willison
[10:30:21] <socialhapy> ★ Commit on sizzle by Timmy Willison (4.214s ago): Do not assume a combinator when filter after pos selectors. Fixes jQuery bug #12208.
[10:32:06] <jqcommit> [jquery] timmywil pushed 1 new commit to master: https://github.com/jquery/jquery/commit/5f3c36c7c0f997625a4b6be7397ecd31433511bf
[10:32:06] <jqcommit> [jquery/master] Sizzle: fix chaining pseudo selectors placed after pos selectors. Fixes #12208. - Timmy Willison
[10:32:06] <socialhapy> ★ Commit on jquery by Timmy Willison (51.859s ago): Sizzle: fix chaining pseudo selectors placed after pos selectors. Fixes #12208.
[10:48:00] <doesallmagic> Project jQuery Core build #304: SUCCESS in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Core/304/
[10:48:00] <doesallmagic> timmywillisn: Sizzle: fix chaining pseudo selectors placed after pos selectors. Fixes #12208.
[11:00:08] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: https://github.com/jquery/jquery/commit/37e8b44884cb9f5ceed84548c6e3961b449d98b2
[11:00:08] <jqcommit> [jquery/master] Add back a sacrificial $.attrFn object. - Dave Methvin
[11:00:09] <socialhapy> ★ Commit on jquery by Dave Methvin (14m, 5s ago): Add back a sacrificial $.attrFn object.  Originally removed in 86b775d036627ebd7242fbb4eb9f24e4ba1fa9c5 as part of the enhancement that allows $(html, props) to use any $.fn method.  Although $.attrFn is undocumented it appears to be a poorly kept secret. jQuery Mobile 1.1 is using it and it's the topic of several blog/StackOverflow posts. Leave an empty object here as a dum
[11:11:11] <snover> wat
[11:11:12] <b-ot> dear sir/mam, i inform for some malfunction of your item furchasing to your item mall was not found in item bank.please take it action.thanks
[11:34:09] <doesallmagic> Project jQuery Core build #305: FAILURE in 30 min: http://swarm.jquery.org:8080/job/jQuery%20Core/305/
[11:34:10] <doesallmagic> dave.methvin: Add back a sacrificial $.attrFn object.
[11:40:22] <rwaldron> scott_gonzalez yt?
[11:40:29] <DaveMethvin> clearly my sacrifice was not pleasing to the swarmy
[11:40:34] <scott_gonzalez> rwaldron: hey
[11:40:45] <rwaldron> re: your ping about summary emails
[11:41:06] <rwaldron> All I've posted are the complete minutes + summary resolutions
[11:41:27] <scott_gonzalez> rwaldron: I may have misunderstood you.
[11:41:34] <rwaldron> I haven't had time to sit and review all of the minutes and fill in the information that jzaefferer requested last time.
[11:41:47] <scott_gonzalez> I thought you said that most threads on es-discuss end with a summary post.
[11:42:04] <rwaldron> nope
[11:42:33] <rwaldron> https://mail.mozilla.org/pipermail/es-discuss/2012-July/024209.html
[11:42:48] <rwaldron> https://mail.mozilla.org/pipermail/es-discuss/2012-July/024208.html
[11:42:57] <rwaldron> each agenda item has a summary
[11:43:01] <rwaldron> one more, one sec
[11:43:32] <rwaldron> https://mail.mozilla.org/pipermail/es-discuss/2012-July/024207.html
[11:43:40] <rwaldron> agenda items start with #
[11:43:47] <rwaldron> it's actually written in markdown
[11:46:20] <scott_gonzalez> rwaldron: Ok. I thought http://twitter.com/rwaldron/status/229064551566569472 was referring to normal threads, not the meeting notes.
[11:46:20] <scott_gonzalez> Thanks for clarifying.
[11:46:21] <socialhapy> ★ Tweet from rwaldron: @gnarf37 @slicknet @scott_gonzalez btw, if you search for "summary" in those posts you'll get a 1-2 sentence summary of each resolution ★ http://bit.ly/OJPkhx
[11:47:17] <rwaldron> by "posts" I was referring to the ML posts that started the discussion, which were the 3 posts of meeting notes
[11:47:38] <rwaldron> give me a minute, I'm "gistifying" these
[11:47:48] <rwaldron> into markdown, then adding ``` fences for code
[11:47:53] <rwaldron> should make it easier to read through
[11:47:56] <rwaldron> a little anyway
[11:48:00] <rwaldron> then I can links later
[12:05:41] <rwaldron> scott_gonzalez ping https://gist.github.com/3288223 WIP
[12:05:42] <rwaldron> brb
[12:40:30] <scott_gonzalez> mikesherov: ping re: https://github.com/jquery/jquery-color/issues/13
[12:40:31] <socialhapy> ★ Issue #13 on jquery-color (gnarf37; 1y, 4m ago): borderColor as an animation key should prefilter to the 4 individual border*Color properties
[12:40:47] <mikesherov> yeah, been slammed this week
[12:40:54] <mikesherov> I have the fix, just need to test now
[12:41:00] <mikesherov> sorry scott_gonzalez
[12:41:09] <scott_gonzalez> ok
[12:41:11] <mikesherov> I'll definitely do it tonight :-\
[12:41:33] <mikesherov> My train ride will be dedicated to it
[12:41:53] <scott_gonzalez> Awesome. It's the last open issue for color :-)
[12:42:03] <FJ2> yey
[12:42:11] <scott_gonzalez> I'd love to get that released and pulled in to UI so I can cross that off my list.
[12:46:39] <mikesherov> OK, heard loud and clear
[12:52:16] <scott_gonzalez> gnarf: Let's hold off on tagging 2.0.0 until the license stuff is cleared up.
[12:52:26] <scott_gonzalez> Hopefully that will happen today :-)
[12:54:15] <snover> are you finally going straight to mit?
[12:58:12] <scott_gonzalez> snover: That's the plan.
[12:58:23] <snover> yay
[12:58:27] <snover> good plan
[12:58:55] <scott_gonzalez> Yeah, the dual licensing has bothered me for a long time.
[12:59:34] <scott_gonzalez> But it always seemed easier to just leave it than deal with those who don't understand.
[13:00:17] <scott_gonzalez> I've finally had enough of it and decided that it's better to educate developers than continue to dual license.
[14:58:37] <scott_gonzalez> Does anyone know XSL really well?
[14:59:20] <snover> everyone that knew xsl well was driven mad by it and no longer works with computers
[14:59:23] <snover> for their own safety
[14:59:47] <scott_gonzalez> seems plausible
[15:00:39] <snover> I expect this will be the fate of most people working with css3 transitions and animations at some point
[15:01:03] <scott_gonzalez> heh
[17:03:19] <DaveMethvin> .
[17:51:30] <jqcommit> [jquery] dmethvin pushed 1 new commit to master: https://github.com/jquery/jquery/commit/1d8bf0a2b57fd429c600aab5b150b2a04b87e451
[17:51:30] <jqcommit> [jquery/master] Fix #12203. .undelegate() should not remove direcly bound events. - Dave Methvin
[17:51:31] <socialhapy> ★ Commit on jquery by Dave Methvin (1m, 40s ago): Fix #12203. .undelegate() should not remove direcly bound events.
[17:51:45] <DaveMethvin> ugh, DIRECLY
[18:03:46] <DaveMethvin> IE6 YU NO AJAX WORKY
[18:09:33] <doesallmagic> Project jQuery Core build #306: STILL FAILING in 18 min: http://swarm.jquery.org:8080/job/jQuery%20Core/306/
[18:09:33] <doesallmagic> dave.methvin: Fix #12203. .undelegate() should not remove direcly bound events.
[18:10:25] <DaveMethvin> Hello, Swarmy, i've been expecting you.
[18:19:41] <scott_gonzalez> It's failing direcly in swarm.
[18:23:00] <DaveMethvin> scott_gonzalez: haw haw direcly
[18:28:18] <DaveMethvin> so scott_gonzalez, what's your take ... version 1.8 or should it be 1.8.0? should the file be jquery-1.8.js or jquery-1.8.0.js?
[18:29:35] <scott_gonzalez> We're going be doing jquery-ui-1.9.0.js.
[18:29:51] <scott_gonzalez> And I know ben_alman would be super happy if it was 1.8.0 instead of 1.8.
[18:30:00] <DaveMethvin> well in that case we'll use 1.8
[18:30:03] <scott_gonzalez> haha
[18:30:05] <DaveMethvin> direcly
[18:30:22] <ben_alman> lol
[18:30:44] <DaveMethvin> when i did 1.7 the google guys were bugging me b/c the file name wasn't 1.7.0
[18:31:07] <ben_alman> i think you should call it 1.8 in marketing materials and docs, but use the version 1.8.0 in the code and cdn
[18:31:25] <DaveMethvin> sounds like the right idea
[18:31:31] <ben_alman> 1.8 stable, the latest version is 1.8.whatever
[18:31:51] <DaveMethvin> the whole build/release script is so hosed at this point
[18:32:28] <DaveMethvin> imma have to just make it generate the commands and hand edit it, there are way too many incorrect assumptions
[18:32:38] <DaveMethvin> and windows IS NOT COOPERATING
[18:33:07] <DaveMethvin> i can't get node.js, Windows, and cygwin to agree on the path
[18:35:06] <DaveMethvin> scott_gonzalez: so i am assuming we aren't getting the license issues straightened out for 1.8 then?
[18:35:18] <scott_gonzalez> DaveMethvin: I think we're good to go.
[18:35:31] <DaveMethvin> oh so i can edit things to remove gpl?
[18:35:34] <scott_gonzalez> Unless you want to wait so that we can get the blog post ready at the same time.
[18:35:52] <DaveMethvin> i could wait  until thursday?
[18:36:10] <scott_gonzalez> sure
[18:36:16] <scott_gonzalez> We didn't get a definite answer from Drupal, but they said that they're already including other MIT code.
[18:37:34] <scott_gonzalez> I think Crell just didn't want to give a definite yes without getting some more input.
[18:37:43] <scott_gonzalez> But I can't imagine them actually having an issue with it.
[18:38:27] <DaveMethvin> right now Sizzle is under MIT, BSD, and GPL ... it's a license hat trick!
[18:38:28] <scott_gonzalez> I can also ping Dries directly which might speed up getting a definitive answer.
[18:38:31] <scott_gonzalez> :-)
[18:38:43] <DaveMethvin> hmm, can we change that?
[18:38:59] <scott_gonzalez> Yeah, we can change Sizzle.
[18:39:10] <scott_gonzalez> MIT can be relicensed as BSD if someone really wants to.
[18:39:35] <scott_gonzalez> BSD = MIT + non-endorsement
[18:40:02] <DaveMethvin> my license is just, use it but don't bother me
[18:40:15] <DaveMethvin> and stop asking for features
[18:40:28] <scott_gonzalez> Haha, "By using this software, you agree to not request any features."
[18:40:53] <scott_gonzalez> "You have the right to report bugs, but only if accompanied by patches and tests."
[18:41:10] <DaveMethvin> YEAH
[18:41:20] <scott_gonzalez> We'll call it the jQuery license :-)
[18:42:50] <scott_gonzalez> BTW, our new release script is awesome: https://github.com/jquery/jquery-ui/blob/master/build/release/release.js
[18:43:53] <scott_gonzalez> I've got some more stuff to add to it, but once it's done, it might be worth starting from that if you need to fix your release script.
[18:44:36] <ben_alman> i wonder if i should use BSD
[18:44:42] <scott_gonzalez> The one downside I've found is that if something fails in an interactive way, using node won't be nearly as nice as using bash.
[18:45:12] <scott_gonzalez> For example, if you get prompted for SSH keys or something.
[18:45:22] <scott_gonzalez> That'd be handled gracefully in a bash script, but not in a node script.
[18:45:35] <ben_alman> why can't it be handled gracefully in node?
[18:45:53] <scott_gonzalez> ben_alman: It probably can be, but you'd need to code around it.
[18:46:02] <scott_gonzalez> At least, I would think. I could be wrong.
[18:46:10] <ben_alman> you'd need to code around it in bash too, right?
[18:46:15] <scott_gonzalez> Nope.
[18:46:40] <ben_alman> are you just talking about a process needing user input?
[18:46:45] <scott_gonzalez> yes
[18:46:55] <scott_gonzalez> Let's say you have "git push" as a command in a bash script.
[18:47:03] <scott_gonzalez> And you get prompted for user/pass.
[18:47:07] <scott_gonzalez> That'd be handled gracefully.
[18:47:21] <scott_gonzalez> You'd get prompted, you'd interact with it, and then the script would continue running.
[18:47:34] <scott_gonzalez> If that happens via exec( "git push" ) in node, I don't think it'll be handled properly.
[18:47:41] <scott_gonzalez> Though this is just an assumption as this point.
[18:47:49] <DaveMethvin> where does exec() get defined?
[18:48:03] <scott_gonzalez> In node's built-in child_process module.
[18:48:13] <DaveMethvin> from your require?
[18:48:16] <scott_gonzalez> yeah
[18:48:32] <scott_gonzalez> I suppose we could find a situation where we know we'll get prompted and test it out.
[18:48:43] <scott_gonzalez> Oh, I could just git clone via HTTP, right?
[18:49:13] <DaveMethvin> that prompts you too though, right?
[18:49:29] <DaveMethvin> i have to use that inside some firewalls and it won't cache credentials
[18:49:38] <DaveMethvin> so i have to type my github user/pass each push/pull
[18:50:25] <scott_gonzalez> DaveMethvin: Right, I'm trying to find something that will prompt me so I can test.
[18:53:01] <ben_alman> node -e "require('child_process').exec('read -n 1', function(err, stdout) { console.log('stdout', stdout); })"
[18:53:03] <ben_alman> not working
[18:54:15] <scott_gonzalez> Yeah, so that's not as nice.
[18:55:02] <ben_alman> hmmn
[18:55:14] <ben_alman> well the problem with exec is that the output is buffered, i think
[18:56:17] <scott_gonzalez> hmm...actually I just tried with git push and it worked.
[18:57:00] <ben_alman> echo -e '#!'"/bin/bash\nread -n 1\necho \$REPLY" > test.sh; chmod a+x test.sh
[18:57:07] <ben_alman> node -e "var c = require('child_process').spawn('./test.sh'); c.stdout.on('data', function(data) { console.log('stdout', String(data)); })"
[18:57:15] <ben_alman> i get: stdout wat?
[18:57:16] <ben_alman> but that's it
[18:59:04] <scott_gonzalez> Maybe read is too low level?
[18:59:18] <ben_alman> dunnoes
[18:59:25] <ben_alman> no biggie
[18:59:45] <scott_gonzalez> Well, my concern about "real" commands turned out to not be an issue.
[18:59:49] <ben_alman> cool
[18:59:52] <scott_gonzalez> When git prompted me for username/password, it worked.
[19:00:05] <scott_gonzalez> It even worked with shelljs' fake sync exec.
[19:00:09] <ben_alman> cool
[19:00:25] <scott_gonzalez> So that makes me feel better.
[19:00:25] <ben_alman> i want that to be thoroughly tested
[19:00:29] <ben_alman> so i can use it in grunt
[19:01:00] <scott_gonzalez> So far from my experience, it should work well in grunt.
[19:01:06] <ben_alman> yeah
[19:01:07] <scott_gonzalez> The bugs I've seen won't affect grunt.
[19:01:16] <ben_alman> i just need it to be super solid cross-os
[19:01:17] <ben_alman> AND
[19:01:28] <ben_alman> i don't want node to do something in a future version that kills it
[19:01:35] <DaveMethvin> ben_alman: you can be sure it won't work in windows :)
[19:01:35] <ben_alman> i have no idea what they plan on doing
[19:01:41] <scott_gonzalez> Well, the nice thing is that the implementation is pretty small and built on top of built-in methods.
[19:03:04] <ben_alman> https://github.com/arturadib/shelljs/issues/7
[19:03:05] <socialhapy> ★ Issue #7 on shelljs (celer; 4m, 1w ago): Synchronous exec stalls permenantly when there is an error/w the shell
[19:04:52] <scott_gonzalez> gotta go, Panera is for-real closing now.
[19:04:57] <ben_alman> ha
[19:07:01] <ben_alman> scott_gonzalez: this can't be good https://github.com/croteb/shelljs/blob/master/shell.js#L1295-1296
[19:08:06] <ben_alman> https://github.com/arturadib/shelljs/issues/5
[19:08:07] <socialhapy> ★ Issue #5 on shelljs (celer; 4m, 2w ago): 100% cpu usage when a nodejs script goes side ways executing a command.
[19:08:26] <ben_alman> i'm not sure this is practical atm
