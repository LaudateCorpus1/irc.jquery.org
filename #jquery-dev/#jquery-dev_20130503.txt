[03:37:14] <_|Nix|_> Hi! If anybody's awake: When I attach a handler with .on( "eventname", selector, function() {} ), does the selector get compiled, or does it get stored as a string which needs to be parsed everytime an event is fired? I ask because currently using a delegated handler results in much slower event handling than attaching to each element matching the selector in turn, even though the latter comes at a higher startup time cost.
[03:37:43] <_|Nix|_> http://jsperf.com/delegated-vs-object/3
[03:37:56] <_|Nix|_> ... and that's for native selectors.
[03:38:24] <_|Nix|_> http://jsperf.com/delegated-vs-object/4 is for custom selectors - delegate is almost twice as slow there.
[03:42:54] <_|Nix|_> I'm wondering if it's even possible to parse the selector and store the result, so that elements may be passed into it at a later time.
[04:59:53] <JamesMGreene> Krinkle|detached jzaefferer scott_gonzalez DaveMethvin|away: Thoughts on the naming for the broken-out QUnit closeEnough assertion plugin? "qunit-assert-close", "qunit-assert-closeenough", "qunit-assert-close-enough", something entirely different? Its [current] assertion methods names are `close` and `notClose`.
[05:08:43] <scott_gonzalez> I'd name it qunit-assert-close
[05:11:46] <JamesMGreene> scott_gonzalez: That's what I'm thinking, too, so far
[05:12:03] <JamesMGreene> JsUnit used to call this idea `assertRoughlyEquals` https://github.com/pivotal/jsunit/blob/7ee150b9a1662053aa94243a7915cd203028ce3b/app/jsUnitCore.js#L494-512
[05:14:47] <JamesMGreene> chai.js calls it `closeTo`: http://chaijs.com/api/assert/#closeTo-section
[05:29:29] <JamesMGreene> Maybe something like "qunit-assert-approximate" but that's pretty long
[05:31:33] <JamesMGreene> Synonyms:  almost, appxorimate, close, comparative, near, proximate, relative, rough, about, around, ballpark figure, bordering on, circa, close to, closely, comparatively, generally, in the ballpark, in the neighborhood of, in the region of, in the vicinity of, just about, loosely, more or less, most, much, not far from, not quite, proximately, relatively, roughly, upwards of, very close
[05:31:44] <JamesMGreene> There we go: qunit-assert-ballpark-figure, lol
[06:37:58] <scott_gonzalez> Looks like we're in for a long day of spam.
[06:38:13] <DaveMethvin> yeah i really hate those guys
[08:04:03] <doesallmagic> Yippie, build fixed!
[08:04:04] <doesallmagic> Project jQuery Migrate Core 1.x build #60: FIXED in 2 min 59 sec: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/60/
[08:13:52] <JamesMGreene> Krinkle jzaefferer: Any thoughts on https://github.com/jquery/qunit/issues/447#issuecomment-17390637 ?  If not, I'll probably just go with "qunit-assert-close" for now
[08:14:29] <Krinkle> Sounds good to me
[08:14:41] <Krinkle> note though that you'll be owner of the repo, so it's up to you :)
[08:15:51] <timmywil> gibson042: should XHTML strict documents be treated like XML? I'm thinking that's a mistake.
[08:17:06] <gibson042> timmywil we should be able to treat them like HTML, but there should be not functional difference if we don't (only performance)
[08:17:28] <timmywil> gibson042: well, you know how :focus is borked in webkit
[08:17:39] <JamesMGreene> Krinkle: True enough. "qunit-assert-ballpark-figure" it is!  >=Þ
[08:17:46] <gibson042> ah, yeah
[08:19:11] <timmywil> I just ran into it
[08:19:30] <timmywil> was wondering if maybe an adjustment to isXML would be helpful here
[08:20:15] <timmywil> gibson042: what do you think of this suggestion for detecting XML? https://developer.mozilla.org/en-US/docs/DOM/document.xmlVersion
[08:20:32] <timmywil> not xmlVersion, but they're note on the page
[08:22:28] <timmywil> oh wait, that's basically what we're doing
[08:22:33] <timmywil> grrrr
[08:23:09] <gibson042> yeah, I'm not seeing a solution with that link
[08:23:31] <timmywil> yea, sry
[08:23:44] <timmywil> createElement isn't any different
[08:25:35] <timmywil> unfortunately, I need the document to be treated like XML to make Safari render SVG correctly, but it also means Sizzle doesn't use it's QSA path for those pages. not sure there's a solution except to use querySelectorAll myself for :focus.
[08:26:14] <JamesMGreene> I apparently need to reboot since my PC is consuming like 60% of its memory while running nothing but mIRC and Notepad++, and reporting very little memory consumption in the Task Manager's program listing o_O
[08:28:31] <gibson042> I keep holding out for a real :focus fix, but that's a reasonable workaround for now
[08:28:48] <timmywil> gibson042: should we document this or just leave it?
[08:29:33] <gibson042> let's leave it for now; I still think there's a solution just waiting to be discovered
[08:29:58] <timmywil> yea ok
[08:34:50] <timmywil> gibson042: oh I just thought of something nasty. If I use <HTML> instead of <html>, it's not treated like XML.
[08:34:59] <gibson042> hahaha
[10:18:34] <snover> gnarf: how does the github integration with trac work these days? did you guys fix any bugs in it?
[10:18:54] <scott_gonzalez> It works as poorly as ever.
[10:18:57] <gnarf> snover: nope, i haven't done much with the trac, but i'm hoping to get someone working on this soon
[10:19:15] <snover> ok
[10:19:19] <snover> that’s too bad
[17:32:56] <JamesMGreene> What a stud: http://www.siliconrepublic.com/business/item/32523-13-year-old-irish-coder-and/
[18:31:01] -verne.freenode.net- [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
