[03:45:08] <jqcommit> [qunit] jzaefferer pushed 1 new commit to master: http://git.io/SmOqhA
[03:45:08] <jqcommit> [qunit/master] Add Rerun link to placeholders. Fixes #240 - Jörn Zaefferer
[03:48:33] <jq-jenkins> Project QUnit build #117: SUCCESS in 3 min 5 sec: http://swarm.jquery.org:8080/job/QUnit/117/
[03:48:33] <jq-jenkins> joern.zaefferer: Add Rerun link to placeholders. Fixes #240
[10:46:35] <rwaldron> .
[12:24:03] <rwaldron> danheberden gnarf yt?
[12:25:33] <gf3> rwaldron: I am here to listen
[12:25:43] <gf3> I WILL BE THE SHOULDER FOR YOU TO CRY UPON
[12:28:55] <rwaldron> ?tell danheberden api.jquery.com is down
[12:28:55] <bot-t> rwaldron, Okay.
[12:29:02] <rwaldron> ?tell gnarf api.jquery.com is down
[12:29:03] <bot-t> rwaldron, Okay.
[14:06:57] <kswedberg> danheberden, gnarf: can someone look into api.jquery.com ? it's down.
[14:07:03] <kswedberg> ?down api.jquery.com
[14:07:06] <bot-t> kswedberg, It's not just you! - http://api.jquery.com looks down from here.
[14:09:36] <DaveMethvin> gnarf danheberden either of you around to check on api.jquery.com?
[14:11:21] <kswedberg> DaveMethvin: apparently they're not around. :/
[14:12:01] <DaveMethvin> kswedberg: :(
[14:12:12] <DaveMethvin> not sure who can save us
[14:12:48] <nicolasp> Not sure if I am in the right channel for support, but if anyone is willing to spare some time, I would appreciate it.
[14:12:59] <kswedberg> nicolasp: try #jquery
[14:13:29] <nicolasp> thank you.
[14:30:25] <Krinkle-away> rwaldron: I got limited server access, anything I can do?
[14:30:40] <Krinkle> oh the whole domain doesn't respond
[14:32:18] <Krinkle> Hm.. docs.jquery.com and api.jquery.com point to the same server
[14:32:20] <Krinkle> but docs is up
[16:06:21] <jqcommit> [jquery] jaubourg pushed 3 new commits to 1.8pre: http://git.io/SdC34Q
[16:06:21] <jqcommit> [jquery/1.8pre] remove jQuery.quickReady, save bytes, style nits in tests - Mike Sherov
[16:06:21] <jqcommit> [jquery/1.8pre] reduce complexity of ready further, and try manipulating DOM to make sure we're really ready - Mike Sherov
[16:06:21] <jqcommit> [jquery/1.8pre] Transform $.bindReady into $.ready.promise. It is now possible to use $.ready.promise or $.when( $.ready ) to get the ready promise. Costs *1* byte min/gzipped. Unit test added. - jaubourg
[16:27:21] <jqcommit> [jquery] jaubourg pushed 1 new commit to 1.8pre: http://git.io/Eqjdxw
[16:27:21] <jqcommit> [jquery/1.8pre] Fixes #11402. domManip now also removes the closing part of HTML comments or CDATA surrounding executed scripts. Unit tests added. - jaubourg
[17:27:39] <jaubourg> ?tell danheberden http://www.youtube.com/watch?v=29w0fFKAEtw <= that's me raping your slides at Wakanday last year... didn't even know it was posted until I stumbled upon it online (mispelled name didn't help)
[17:27:40] <bot-t> jaubourg, Okay.
[17:47:31] <kswedberg> ?tell danheberden can you look at the api.jquery.com server? it's been down for about 5 hours already. thanks!
[17:47:32] <bot-t> kswedberg, Okay.
[18:12:24] <jaubourg> hey rwaldron
[18:12:34] <jaubourg> and hey kswedberg :)
[18:17:39] <jqcommit> [jquery] jaubourg created sourceURL (+1 new commit): http://git.io/DJigkA
[18:17:39] <jqcommit> [jquery/sourceURL] Adds sourceURL support. - jaubourg
[18:18:41] <rwaldron> jaubourg hey dude
[18:19:42] <rwaldron> dude, this sourceURL stuff looks like bad news
[18:19:56] <rwaldron> well... the changes in manipulation
[18:20:06] <rwaldron> we were supposed to discuss this first I think
[18:20:54] <rwaldron> I'm not a fan of html() having new args
[18:21:19] <rwaldron> and append()...
[18:22:40] <rwaldron> I need to learn how to read those commit message things
[18:22:44] <rwaldron> in IRC
[18:26:40] <jaubourg> hehe
[18:26:48] <jaubourg> I made a pull request
[18:27:26] <jaubourg> rwaldron: https://github.com/jquery/jquery/pull/766
[18:27:27] <socialhapy> ★ Pull request on jquery by jaubourg (1m, 24s ago): Source url
[18:27:48] <jaubourg> I feel like I made you very nervous when I pushed into this sourceURL branch :P
[18:28:44] <jaubourg> rwaldron: funny thing is I have the same reservations as you
[18:32:25] <rwaldron> yeah, we're def on the same page
[18:32:31] <rwaldron> i just read your PR message
[18:33:23] <jaubourg> maybe setting a temporary data is the way to go
[18:33:25] <jaubourg> I dunno
[18:33:39] <rwaldron> perhaps?
[18:33:42] <jaubourg> domManip can simply delete it... it's hackish, but heh
[18:33:49] <rwaldron> you could use the internal _data() function
[18:34:01] <jaubourg> yeah
[18:34:34] <jaubourg> I hate to make something slower only for debugging purpose
[18:35:02] <jaubourg> the change is inconsequentiel in the text to script converter
[18:35:26] <rwaldron> yeah, there seems to be a fundamentally unfortunate aspect to this
[18:35:28] <jaubourg> though I guess few people use load with a collection that contains more than one element?
[18:35:42] <rwaldron> who knows?
[18:35:48] <jaubourg> I know I don't know
[18:35:51] <jaubourg> :P
[18:36:03] <rwaldron> I feel like we might say this and agree
[18:36:17] <rwaldron> but then someone will along and insist that we broke some important thing
[18:36:42] <rwaldron> which is the same feeling I got from the assassination of jQuery.bindReady
[18:36:45] <rwaldron> but ya know what...
[18:36:51] <rwaldron> if anyone is using that, too damn bad
[18:37:04] <rwaldron> it was not for them to use in the first place
[18:37:15] <rwaldron> I definitely prefer the new way
[18:37:23] <rwaldron> jQuery.ready.promise is cool
[18:37:25] <jaubourg> yeah, I had some hesitation but it's the only one of the ready internal methods that is not even acknowledged by the unit tests
[18:37:42] <rwaldron> fair enough
[18:38:12] <rwaldron> I wish api.jquery.com wasn't down
[18:38:14] <jaubourg> $.when( $.ready ) \o/
[18:38:14] <rwaldron> :(
[18:38:20] <rwaldron> i like it.
[18:39:08] <jaubourg> $.when( $.ready, $.ajax( "myData.json" ) ) \o/
[18:39:18] <rwaldron> oooo i like that too!
[18:39:42] <rwaldron> great for this pattern...
[18:39:51] <rwaldron> $.when( $.ready, $.ajax( "config.json" ) )
[18:40:16] <jaubourg> yeah, just put the ajax first to make it simpler in the done callback
[18:40:22] <rwaldron> $.when( $.ready, $.ajax( "config.json" ) ).then(function( null, config ) {  App.init(config); });
[18:40:23] <jaubourg> and boom
[18:40:29] <rwaldron> right right
[18:40:42] <rwaldron> $.when( $.ajax( "config.json" ), $.ready ).then(function( config ) {  App.init(config); });
[18:40:57] <jaubourg> $.when( $.ajax( "config.json" ), $.ready ).then(function( config ) {  App.init(config[ 0 ]); });
[18:41:00] <jaubourg> :P
[18:41:07] <rwaldron> well...
[18:41:23] <rwaldron> if you wanna be PICKY
[18:41:24] <rwaldron> :D
[18:41:27] <jaubourg> hehe
[18:41:43] <rwaldron> I have to get ready to go to a cinco de mayo party
[18:42:01] <rwaldron>  i wanna stay home and hang out with my dogs
[18:42:20] <rwaldron> I'll catch ya later
[18:42:27] <jaubourg> cya
[18:45:10] <jaubourg> hey DaveMethvin
[18:45:29] <DaveMethvin> hey jaubourg, thanks for landing the ready promise
[18:45:56] <jaubourg> np
[18:47:11] <jaubourg> DaveMethvin: nobody saw I killed an undocumented function :P
[18:47:19] * jaubourg hides before the storm
[18:47:26] <DaveMethvin> oh which one was that?
[18:47:38] <jaubourg> bindReady
[18:47:57] <DaveMethvin> well lets hope nobody reads the code
[18:47:59] <DaveMethvin> :D
[18:47:59] <jaubourg> pretty much got transposed into ready.promise
[18:48:10] <jaubourg> damn, rwaldron saw it already :/
[18:48:15] <jaubourg> damn this guy!
[18:48:39] <jaubourg> but heh, it's the only internal ready method that wasn't even unit tested
[18:48:43] <jaubourg> or referenced
[18:48:48] <jaubourg> in the unit tests
[18:49:14] <DaveMethvin> well it's easier to remove, eh?
[18:49:17] <DaveMethvin> :D
[18:50:13] <jaubourg> well, in all honesty, people could call ready.promise for the same effect ;)
[18:50:44] <jaubourg> fixed tis closing html comment thingy too
[18:51:04] <jaubourg> and I have a pull req for the sourceURL
[18:51:07] <DaveMethvin> you're in a bug fixing mood today ... and i love it!
[18:51:12] <jaubourg> load is a pain in the ass to deal with
[18:51:20] <DaveMethvin> agree
[18:51:47] <jaubourg> I feel so uneasy putting my greasy hands into manipulation
[18:52:04] <jaubourg> setting a temporary private data may be the way to go in the end
[18:52:27] <jaubourg> question is: how many do use load on a collection with more than one element?
[18:53:06] <DaveMethvin> yeah, i don't ever use .load()
[18:53:24] <DaveMethvin> so i am not a good person to ask
[18:53:35] <DaveMethvin> and now that google code is gone it's hard to say
[18:53:56] <jaubourg> indeed
[18:54:28] <DaveMethvin> i think kswedberg found a replacement search site, lemme see if i can find that link again
[18:54:49] <jaubourg> but seems reasonable to _data the elements with sourceURL, then retrieve it in domManip... avoids a lot of surface changes... though I kinda like the idea of having a sourceURL parameter to HTML...
[18:55:13] <DaveMethvin> i do too
[18:55:26] <jaubourg> we only need to bypass append somehow
[18:55:30] <DaveMethvin> $.parseHTML could have it perhaps?
[18:55:41] <DaveMethvin> oh no
[18:56:22] <jaubourg> by bypass, I mean "not give params to" not "not call", of course
[18:57:15] <DaveMethvin> damn, koders.com search sucks
[18:57:18] <jaubourg> truly hate the change of signature for append in the PR
[18:57:29] <DaveMethvin> which one?
[18:58:56] <jaubourg> https://github.com/jquery/jquery/pull/766/files#L3L131
[18:58:57] <socialhapy> ★ Pull request on jquery by jaubourg (32m, 54s ago): Source url
[18:59:18] <jaubourg> can you append( v1, v2, ... )?
[18:59:50] <DaveMethvin> yep, so that seems broken
[19:01:56] <Krinkle> jaubourg: If sourceURL is only meant to be used internally, maybe name it _srcURL (or something else starting with _) to emphasize that
[19:02:11] <Krinkle> or is it meant to be a new feaure for .append() and .domManip() and .html() ?
[19:03:26] <DaveMethvin> seeing the spread of ugly here, I dunno
[19:03:41] <Krinkle> Doesn't it need to be added to the other callers of domManip? Or just added to html and append as example for now?
[19:03:45] <Krinkle> (prepend, before, after, ..)
[19:04:36] <jaubourg> I think only html is fine
[19:04:57] <jaubourg> the problem is to have domManip receiving the info from html without having append changed
[19:05:16] <jaubourg> I'm even contemplating a variable in the closure, really
[19:05:27] <jaubourg> ... that would do it actually
[19:05:38] <jaubourg> global variables ftw
[19:05:39] <jaubourg> :P
[19:06:09] <DaveMethvin> well give it a try, i can't believe i'm saying i like a global but changing all the sigs seems even uglier
[19:06:26] <jaubourg> yep, but do we agree on html having the sourceURL param?
[19:06:29] <Krinkle> global or global within jQuery ?
[19:06:31] <jaubourg> it makes so much sense to me
[19:06:37] <jaubourg> global within jQuery
[19:06:45] <Krinkle> Why would anything besides globalEval need it?
[19:06:56] <Krinkle> getScript, ajax and load use that, right ?
[19:07:07] <jaubourg> because it makes sense for someone to wanna give the source of the html he's injecting
[19:07:18] <jaubourg> which is exactly what we do with load
[19:07:38] <jaubourg> and the API change is none breaking
[19:07:48] <Krinkle> yeah, but the source doesn't have to be explicitly given, right?
[19:07:52] <jaubourg> nope
[19:07:54] <Krinkle> it is extractable from the html snippet
[19:08:00] <jaubourg> not really
[19:08:01] <Krinkle> so why would the signature change
[19:08:14] <jaubourg> it's for inline scripts in an html fragment
[19:08:22] <jaubourg> source is the source of the html itself
[19:08:30] <Krinkle> hm..
[19:08:36] <jaubourg> which is nowhere in the fragment of course
[19:08:40] <Krinkle> So not for stuff like $('head').append('<script src="test.js'></script>');
[19:08:45] <jaubourg> nope
[19:08:54] <Krinkle> (which I quoted from the bug report)
[19:08:54] <jaubourg> it's taken care of within ajax
[19:09:02] <Krinkle> Ah, nice
[19:09:09] <Krinkle> already ?
[19:09:12] <jaubourg> yep
[19:09:23] <Krinkle> I see it added in this commit, or is that what you meant
[19:09:26] <jaubourg> the text to script converter calls globalEval with the url given
[19:09:40] <jaubourg> yeah, it's added in that commit
[19:09:42] <Krinkle> k
[19:10:03] <jaubourg> only surface change is what is given to converters and, again, it is non breaking
[19:10:52] <jaubourg> DaveMethvin: I'll look into this tomorrow, it's 4am and I need some sleep ;)
[19:10:54] <Krinkle> Well, I think it makes sense in ajax internally, and also as public argument in globalEval, but not sure about domManip and its callees. Especially not if only some of the callers would have it
[19:11:36] <DaveMethvin> yeah i'm good with making people go through one place to make sure the script is tagge
[19:11:38] <DaveMethvin> d
[19:11:48] <Krinkle> Right
[19:11:59] <jaubourg> Krinkle: it makes sense for html. If someone uses a third-party to get an html fragment, they may want to give a sourceURL while injecting the html
[19:12:06] <jaubourg> I see no reason not to allow that
[19:12:16] <DaveMethvin> jaubourg: but if we have a $.parseHTML we could do it there
[19:12:29] <jaubourg> yes but we don't have a parseHTML yet
[19:12:32] <Krinkle> jaubourg: Maybe, but the problem there is inconsistency
[19:12:42] <Krinkle> Assuming all html is injected via .html() is bogus
[19:12:43] <jaubourg> we don't have to document sourceURL in html() too
[19:13:16] <DaveMethvin> anyway, go to sleep jaubourg, you've done a couple days work today!
[19:13:18] <jaubourg> I just don't feel comfortable having a global passing from ajax to manipulation while the thing can be handled locally in manipulation
[19:13:27] <Krinkle> And it would only be for inline scripts. scripts referenced via <scirpt src="" will have debugging without needing a soruceURl argument in html()
[19:13:34] <jaubourg> while making sense from an API point of view
[19:14:08] <jaubourg> Krinkle: $( "myElement" ).html( code, whereTheCodeComesFrom )
[19:14:11] <Krinkle> inline scripts as HTML from within a plugin? I'd say to that plugin author: stop laughing or put your pants back on :P
[19:14:13] <jaubourg> doesn't seem to far-fetched to me
[19:14:28] <Krinkle> yeah, but inline scripts ?
[19:14:32] <jaubourg> I know
[19:14:36] <Krinkle> why not execute it right away
[19:14:49] <jaubourg> but if we support them, it makes sense to do it right
[19:15:10] <Krinkle> But, if we do it, existing scripts don't know about it. And new stuff can be written "the right way"
[19:15:10] <jaubourg> even if inline scripts are doing it wrong but meh
[19:15:12] <jaubourg> you get the idea
[19:15:36] <Krinkle> I wouldn't support debugging for inline scripts passed as HTML through a domManip callee from another source.
[19:15:48] <DaveMethvin> let's get this discussion into the PR as well
[19:15:53] <jaubourg> yeah, but I'm a giver
[19:15:54] <Krinkle> Alrighty :)
[19:16:12] <Krinkle> once the argument is settled it can't be easily swapped for a different one
[19:16:30] <DaveMethvin> i don't think we have to bend over backwards to support this stuff, esp if it ADDS BYTES :D
[19:16:40] <Krinkle> maybe as options object in the argument { sourceUrl: ... }
[19:16:43] <jaubourg> well, we have undocumented arguments everywhere on the surface
[19:16:46] <Krinkle> so that it is expendable in the api
[19:16:58] <Krinkle> jaubourg: yeah but this one would be used in real code
[19:17:17] <Krinkle> Real debug code that is, e.g a "Debug mode" in an application
[19:17:23] <Krinkle> not temporarily added and removed
[19:17:41] <jaubourg> I think we're over-thinking this
[19:17:54] <Krinkle> you go sleep, I'll add my stuff to the PR and we can pick it up later :)
[19:18:05] <jaubourg> ok
[19:18:11] <jaubourg> nighty night guys
[19:23:00] <jaubourg> how about a _sourceURL method in manipulation?
[19:23:07] <Krinkle> PR!
[19:23:13] <jaubourg> :P
[19:23:17] <jaubourg> bed
[19:23:38] <jaubourg> I'll write the idea down tomorrow
[19:40:28] <Krinkle> posted https://github.com/jquery/jquery/pull/766
[19:40:29] <socialhapy> ★ Pull request on jquery by jaubourg (1h, 14m ago): Source url
[20:36:30] <kswedberg> hey jaubourg (3 hours later) :)
[21:12:36] <kswedberg> ?down api.jquery.com
[21:12:38] <bot-t> kswedberg, It's just you. - http://api.jquery.com is up.
[21:12:41] <kswedberg> yay!
[21:13:15] <kswedberg> ?tell danheberden thx for guiding me through kicking the api server. :)
[21:13:15] <bot-t> kswedberg, Okay.
[22:49:53] <Krinkle> danheberden: maybe something to document on jquery/internal wiki ?
