[08:45:59] <matjas> http://twitter.com/cinsoft/status/132845545512382464 :')
[08:46:00] <socialhapy> ★ Tweet from Cinsoft: Poll: should I fix jQuery's "tricky" attribute/property problems for them?
[08:46:00] <socialhapy> #js #jquery #attr #stendec ★ http://bit.ly/sdcvVN
[08:49:22] <sneakyness> he uses an lg phone…
[08:55:50] <DaveMethvin> matches his lg ego
[09:10:34] <sneakyness> ooh someone get the man to a burn ward
[09:23:45] <sneakyness> hey guys, the "trigger custom event" demo on the on page is broken
[09:23:47] <sneakyness> http://api.jquery.com/on/
[09:23:53] <sneakyness> I'm using chrome on lion fwiw
[09:24:21] <sneakyness> so is the multiple event handlers example
[09:24:43] <sneakyness> should I submit a ticket or ?
[09:24:55] <sneakyness> oh i see the form at the bottom now
[09:24:56] <addyosmani> working for me
[09:25:19] <addyosmani> on Chrome/OSX 10.6.8
[09:25:33] <sneakyness> I've been… suspicious of lion
[09:29:03] <sneakyness> submitted report
[09:29:15] <sneakyness> works in safari/opera/firefox, just not chrome
[09:31:56] <sneakyness> also tested as working in chrome on win7 and chromium on linux O_o
[09:32:02] <sneakyness> fucking lion.
[12:07:27] <timmywil> http://code.jquery.com/jquery-git.js is taking a long while to load
[12:07:36] <timmywil> other versions are fine
[12:16:21] <DaveMethvin> so timmywil gnarf funny how ppl are finding bugs that have been there for two months since beta 1 ... why are they always wanting to jump on the release the millisecond its final but won't do anything with it the months before? (grumble grumble)
[12:16:59] <timmywil> grumble
[12:17:03] <DaveMethvin> timmywil: -git seems to be loading ok here
[12:19:32] <timmywil> strange, just hangs forever for me
[12:20:30] <timmywil> ?down static.jquery.com
[12:20:37] <bot-t> timmywil, It's not just you! - http://static.jquery.com looks down from here.
[12:20:45] <DaveMethvin> static, or code?
[12:21:03] <timmywil> code looks fine for me for other js files
[12:21:06] <timmywil> but now api won't load
[12:21:25] <timmywil> which is waiting for assets from static
[12:21:35] <DaveMethvin> hmmm, works for me
[12:21:47] <timmywil> grr
[12:21:50] <DaveMethvin> static replies ok for me
[12:21:59] <DaveMethvin> root is not found but i think that is normal
[12:22:22] <timmywil> 404 is different than no response
[12:22:35] <DaveMethvin> it's possible we're getting a DDoS from the .it mafia upset that we hosed em
[12:22:54] <DaveMethvin> dunno how the cdn would respond to that
[12:25:34] <timmywil> actually, static looks fine.  it must be the 404 took too long on ?down
[12:26:08] <timmywil> it's loading jquery.min from code that's hanging forever for me on api
[12:28:12] <DaveMethvin> timmywil: do you mean jquery-git.js? or some minified version
[12:28:27] <timmywil> also http://code.jquery.com/jquery.min.js
[12:28:34] <timmywil> which api uses
[12:28:42] <DaveMethvin> nope, that's really fast for me
[12:28:49] <timmywil> empty cache?
[12:28:55] <timmywil> ?down code.jquery.com
[12:29:02] <bot-t> timmywil, It's not just you! - http://code.jquery.com looks down from here.
[12:29:18] <timmywil> idk what's up
[12:29:34] <DaveMethvin> strange, works for me from multiple browsers and i can see it hitting the network
[12:30:10] <timmywil> do we have multiple cdn servers?
[12:30:23] <DaveMethvin> yeah
[12:30:31] <DaveMethvin> 72.21.91.19
[12:30:40] <DaveMethvin> that is the ip for mine
[12:30:49] <DaveMethvin> if you ping code.jquery.com what is the ip
[12:31:16] <DaveMethvin> ne1.wac.edgecastcdn.net is the dns for my server
[12:33:09] <timmywil> 72.21.91.19
[12:33:18] <timmywil> some are timing out tho
[12:39:34] <DaveMethvin> try a traceroute and see where it is getting hung up
[12:58:32] <gnarf> DaveMethvin: what bugs?
[12:58:54] * DaveMethvin puts fingers in ears LALALALALA
[12:59:18] <mikesherov> I'm with gnarf, which bugs are we talking about? I'd love to squash a couple
[12:59:59] <mikesherov> I'm getting tracert timeouts way before edgecast
[13:00:21] <gnarf> DaveMethvin: heh - oh well, i got a bunch of work to do before we leave for austin anyway.... ;)
[13:00:50] <DaveMethvin> the tracker is starting to fill up with them...
[13:01:35] <mikesherov> I'd love to take a stab, are any of these being targetted for 1.7.1 specifically?
[13:01:57] <tbranyen> DaveMethvin: did that issue with the delegate target get resolved for 1.7?
[13:02:10] <DaveMethvin> tbranyen: i sure hope so
[13:02:20] <tbranyen> lol
[13:02:22] <tbranyen> same
[13:04:39] <mikesherov> hey is there anyway in the unit tests to get a single file for jquery instead of including the individual src files?
[13:05:08] <DaveMethvin> edit the main file? :)
[13:06:01] <mikesherov> I'm trying to work on jqbug.com/10067
[13:06:31] <mikesherov> and changing document.readyState === "complete" to document.readyState !== "loading"
[13:06:56] <mikesherov> but it gives me funky results in chrome and sometimes in FF if jQuery isn't 1 file
[13:07:00] <DaveMethvin> you may need a standalone file for that
[13:07:24] <DaveMethvin> i dunno if it would hurt to document.write those script tags in index.html , that would let us look at the query string and even test against older versions
[13:08:02] <paul_irish> gnarf: can you comment with the status on this https://github.com/paulirish/lazyweb-requests/issues/4
[13:08:03] <socialhapy> ★ Issue #4 on lazyweb-requests, reported by paulirish (1y, 2w ago): port gruppler demos to jquery ui
[13:08:14] <DaveMethvin> one thing yehuda mentioned that coudl be useful is to run the 1.6 tests against 1.7, and that would be simpler with a querystring trick
[13:08:50] <mikesherov> yeah, there are a couple of improvements to the unit test platform I'd like to make in 1.8
[13:09:06] <mikesherov> I suppose I should submit a ticket
[13:09:22] <DaveMethvin> sure, all the cool kids seem to be submitting tickets
[13:09:28] <mikesherov> HAHA
[13:10:00] <mikesherov> But I'll do the work myself ;-) unlike the other cool kids
[13:10:09] <DaveMethvin> 1.7.1 tickets so far: http://bugs.jquery.com/query?milestone=^1.7.1&report=206&order=priority
[13:10:20] <DaveMethvin> any unassigned ones are fair game
[13:11:15] <timmywil> dammit, if only i could see bugs.jquery.com
[13:11:45] <DaveMethvin> timmywil: you don't WANNA see it, you can't HANDLE the truth!
[13:12:23] <mikesherov> DaveMethvin, 10686 is closed, 10687 should be marked as 1.7.1
[13:12:24] <timmywil> DaveMethvin: i'm pretty sure that fragment cache issue was related to the bad regex
[13:12:37] <mikesherov> mvn, it is already
[13:13:14] <timmywil> im still getting emails at least
[13:13:45] <DaveMethvin> timmywil: it looked like the logic for the test was wrong as well, the support test
[13:13:56] <DaveMethvin> we need some tests to ensure that the frag cache is actually working
[13:14:09] <timmywil> good idea
[13:14:26] <timmywil> which support test?
[13:14:48] <DaveMethvin> unknownElems
[13:15:15] <DaveMethvin> the check in fragcache may be reversed
[13:15:33] <DaveMethvin> but in any case it seemed like reopening that ticket was a good idea until we had a handle on it
[13:15:48] <DaveMethvin> sorry gotta go
[13:31:56] <gnarf> paul_irish: let me take one more run at the ui team to see if i can get these merged into master
[13:32:10] <paul_irish> k. i'm summarizing this repo
[13:32:16] <paul_irish> so wanted to know where we stand
[13:32:27] <gnarf> paul_irish: if you could also help and ping lindstroem again - it might help him get that last update i asked for ;)
[13:32:41] <gnarf> I made some big changes to the new effects api
[13:32:47] <gnarf> and he hasn't updated yet
[13:32:54] <gnarf> so like all his files are dirty too
[13:33:00] <gnarf> i dont mind doing it
[13:33:08] <gnarf> but - busy....
[13:33:21] <paul_irish> gnarf: is there a link of the latest thing
[13:34:31] <gnarf> paul_irish: hrm, maybe he did update
[13:34:32] <gnarf> https://github.com/lindstroem/jquery-ui/blob/split/ui/jquery.effects.split.js
[13:34:39] <gnarf> try pulling that and looking at the visual tests
[13:37:21] <paul_irish> gnarf: vis tests look good
[13:38:06] <gnarf> paul_irish: https://github.com/jquery/jquery-ui/pull/185
[13:38:07] <socialhapy> ★ Pull request on jquery-ui by lindstroem (6m, 2w ago): Split
[13:38:43] <gnarf> paul_irish: thats the status, summarize for yerself? :)
[13:38:59] <gnarf> scott seems against it a little too
[13:38:59] <paul_irish> k
[13:39:15] * gnarf shrugs
[13:39:40] <gnarf> maybe we should start an "effects" team
[15:47:17] <jqcommit> [qunit] prathe pushed 2 new commits to master: http://git.io/dBQOBA
[15:47:17] <jqcommit> [qunit/master] Allow objects with no prototype to tested against object literals. - DomenicDenicola
[15:47:17] <jqcommit> [qunit/master] Code review of "Allow objects with no prototype to be tested against object literals." - Philippe Rathé
[15:57:43] <jq-jenkins> Project QUnit build #44: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/QUnit/44/
[15:57:44] <jq-jenkins> * domenic: Allow objects with no prototype to tested against object literals.
[15:57:44] <jq-jenkins> * prathe: Code review of "Allow objects with no prototype to be tested against object literals."
[17:01:26] <DaveMethvin> .
[17:25:46] <rwaldron> DaveMethvin yt?
[17:26:04] <rwaldron> I believe I have a fix for the jQuery.fragments bug
[17:26:24] <DaveMethvin> sup rwaldron
[17:26:41] <rwaldron> inside jQuery.buildfragment() the condition for avoiding caching fragments in IE...
[17:26:48] <rwaldron> just need to change the && to ||
[17:26:54] <rwaldron> works like a charm
[17:26:55] <DaveMethvin> yeah it looked wonky
[17:26:59] <DaveMethvin> wasn't sure tho
[17:27:05] <rwaldron> we never had any tests for jQuery.fragment
[17:27:10] <rwaldron> jQuery.fragments
[17:27:11] <DaveMethvin> yeah
[17:27:16] <rwaldron> i wrote tests
[17:27:22] <DaveMethvin> THANK YOU!
[17:27:38] <DaveMethvin> kinda hard to tell if it's broken if we don't test it, eh
[17:27:50] <rwaldron> one catch, this fix relies on the other fix in the PR queue
[17:28:00] <DaveMethvin> oh the regexp one
[17:28:02] <rwaldron> the one that fixed rnoshimcache
[17:28:19] <rwaldron> yeah, +9001 to "kinda hard to tell if it's broken if we don't test it, eh"
[17:28:36] <DaveMethvin> how about we land some stuff tomorrow
[17:28:38] <rwaldron> Earlier today I was out with Rose, kind of upset about the whole thing, kept it to myself
[17:29:00] <rwaldron> but when I came home and discovered that no one had ever even written tests for the behaviour, I felt less bad
[17:29:11] <DaveMethvin> well i had a few like that, it's kinda scary how we think we have everything covered in unit tests
[17:29:21] <rwaldron> cool, I'll push a PR for this, with a note that it relies on the other
[17:29:23] <DaveMethvin> and then we find out not
[17:29:31] <rwaldron> seriously
[17:29:33] <DaveMethvin> yeah we can land them together
[17:29:46] <rwaldron> so, if you have a sec
[17:29:49] <DaveMethvin> yep
[17:30:01] <rwaldron> I want to pick your brain about the tests and what i discovered writing them
[17:30:19] <DaveMethvin> fire away
[17:30:26] <rwaldron> DaveMethvinhttp://jsfiddle.net/rwaldron/QDjSJ/3/
[17:30:29] <rwaldron> whoops
[17:30:30] <rwaldron> http://jsfiddle.net/rwaldron/QDjSJ/3/
[17:30:41] <rwaldron> oh wait
[17:30:42] <rwaldron> one sec
[17:30:55] <DaveMethvin> gotta link to your copy i suspect
[17:30:58] <rwaldron> that needs the patched buildfragment
[17:33:49] <rwaldron> sorry, this is kind of crummy...
[17:33:56] <rwaldron> http://jsfiddle.net/rwaldron/rW9QL/
[17:34:14] <rwaldron> i just pasted the patched version of the funtion in
[17:34:20] <rwaldron> but anyway...
[17:34:36] <DaveMethvin> yeah i guess we coulda just console.logged the cache too but i thought it would be big
[17:34:46] <rwaldron> guess which ones are creating the fragment
[17:34:51] <rwaldron> only 2
[17:34:55] <rwaldron> but which ones...
[17:35:17] <rwaldron> well, i guess you could look at jQuery.fragments
[17:36:28] <DaveMethvin> most of those are handled by the quick regexp rwaldron
[17:36:44] <DaveMethvin> that's why there are only 2 in the cache
[17:36:48] <rwaldron> right
[17:36:51] <rwaldron> hm
[17:36:54] <rwaldron> ok, now I get it
[17:37:38] <rwaldron> things that arent handled by the quick regexp, but are later found to be reasonably cacheable
[17:38:21] <rwaldron> I was mostly just wondering why $("<div></div>") wasn't cached
[17:38:29] <rwaldron> but it makes sense now
[17:38:41] <DaveMethvin> what did I  do to break it?
[17:38:47] <DaveMethvin> http://jsfiddle.net/dmethvin/rW9QL/1/
[17:40:04] <rwaldron> so, that's a good example, I think, of what I'm talking about
[17:40:19] <rwaldron> they all cached because they are different
[17:40:27] <rwaldron> but... that doesn't seem right...
[17:41:25] <DaveMethvin> well given that we had no unit tests, it is not certain that anything worked at all like expected before ...
[17:41:39] <rwaldron> exactly.
[17:41:48] <rwaldron> I'm trying to track down history
[17:42:57] <rwaldron> ugh
[17:42:58] <rwaldron> https://github.com/jquery/jquery/commit/f3a4d261ecd0e858515f6e3fa8f5ff59078ec895
[17:42:59] <socialhapy> ★ Commit on jquery by timmywil (1w, 6d ago): Landing pull request 550. IE6,7,8 cannot use cached fragments from unknown elems. Fixes #10501.More Details:- https://github.com/jquery/jquery/pull/550- http://bugs.jquery.com/ticket/10501
[17:43:09] <rwaldron> makes it really hard to tell who did what
[17:43:28] <rwaldron> I wrote that patch, but github has record that timmywil did
[17:43:47] <rwaldron> but the history is busted
[17:43:50] <rwaldron> :|
[17:44:00] <rwaldron> (that patch sucks, btw)
[17:44:12] <rwaldron> found it.
[17:44:18] <rwaldron> https://github.com/jquery/jquery/commit/8db967e9d52407c8e76d81b9d472800667f6fa29
[17:44:18] <socialhapy> ★ Commit on jquery by jeresig (2y, 3m ago): Added caching to domManip. Fixes #4883.
[17:44:35] <DaveMethvin> dinosaurs!
[17:44:45] <rwaldron> yeah
[17:44:48] <rwaldron> this is from svn
[17:44:50] <rwaldron> hahaha
[17:45:46] <rwaldron> weird...
[17:46:15] <rwaldron> it looks like all it does now is store "1"
[17:46:30] <rwaldron> based on our results here...
[17:46:32] <DaveMethvin> which don't seem right :)
[17:46:41] <rwaldron> i ahve an idea
[17:47:10] <rwaldron> have* even
[17:48:04] <DaveMethvin>         jQuery.fragments[ first ] = cacheresults ? fragment : 1;
[17:50:56] <rwaldron> whoooo
[17:50:59] <rwaldron> ok, we're clear
[17:51:01] <rwaldron> i think
[17:51:01] <rwaldron> http://jsfiddle.net/rwaldron/X4ntA/1/
[17:51:17] <rwaldron> old behaviour can be found in 1.4.4
[17:51:42] <rwaldron> matches the behaviour you recreated, but thought you'd broken
[17:51:50] <rwaldron> DaveMethvin ^
[17:51:54] <DaveMethvin> yeah
[17:52:05] <DaveMethvin> also tried some more complex stuff like nested elements
[17:52:14] <rwaldron> fiddle?
[17:53:13] <DaveMethvin> http://jsfiddle.net/dmethvin/rW9QL/3/
[17:54:44] <rwaldron> i added yours to mine
[17:54:44] <rwaldron> http://jsfiddle.net/rwaldron/X4ntA/2/
[17:56:23] <DaveMethvin> ok i officially have no idea wtf this code does
[17:56:48] <rwaldron> I'm walking through John's original jQuery.fragments
[17:57:05] <rwaldron> and i dont think it ever actually did anything
[17:57:15] <DaveMethvin> but how did it manage to work?
[17:57:26] <DaveMethvin> did it just end up reprocessing the original string?
[17:57:33] <rwaldron> how did you know it worked?
[17:57:40] <rwaldron> no tests...
[17:57:48] <DaveMethvin> well it didn't do anything wrong
[17:57:57] <rwaldron> right
[17:58:12] <rwaldron> and the patch i wrote this evening restores that same behaviour
[17:58:32] <rwaldron> fixing the regression
[17:58:36] <DaveMethvin> good work rwaldron, restored it to its original breakitude :D
[17:58:44] <rwaldron> exactly!
[17:58:58] <rwaldron> _what_ did it do aside from store "1"
[17:59:03] <DaveMethvin> maybe all those strings have a DOM representation of "1"
[17:59:06] <DaveMethvin> AMAZING
[17:59:17] <rwaldron> hahahaha
[17:59:31] <DaveMethvin> time for some breakpoints, i won't believe this until i step thru it
[17:59:40] <rwaldron> do itttt
[18:00:34] <rwaldron> hm.
[18:05:59] <DaveMethvin> rwaldron: that code doesn't do anything ever, afaict
[18:06:12] <rwaldron> :)
[18:06:25] <DaveMethvin> i don't think it ever did
[18:06:29] <rwaldron> thats what I've been trying to figure out
[18:06:36] <rwaldron> since I wrote the tests earlier
[18:06:57] <rwaldron> and realized that they were _never_ creating document fragments to begin with
[18:07:25] <DaveMethvin> well if jquery was fast enough before, imagine how fast it will be once we take all this code out
[18:07:33] <rwaldron> WOOOOO
[18:07:35] <rwaldron> holy shit
[18:07:39] <rwaldron> I feel heroic
[18:07:47] <DaveMethvin> all because of a unit test
[18:07:49] <rwaldron> I DIDN'T BREAK jQUERY
[18:07:49] <DaveMethvin> that never was
[18:07:54] * rwaldron dances
[18:08:18] <DaveMethvin> this is like some sort of nuclear secret, i think we need a third person to look at it
[18:09:37] <DaveMethvin> honestly we could just tear all this out, i know yehuda was talking about createContextualFragment, i wonder if that would be better instead
[18:09:46] <DaveMethvin> but this just doesn't seem to do anything
[18:10:56] <rwaldron> im going to rip this out
[18:11:04] <rwaldron> and see if it breaks tests
[18:11:07] <rwaldron> it wont
[18:11:13] <rwaldron> what am i talking about
[18:11:49] <rwaldron> DaveMethvin my old band had a song called Nuclear Secrets
[18:12:22] <DaveMethvin> small world, eh?
[18:12:51] <DaveMethvin> now i wonder if that guy's complaint about memory leaks had anything to do with this
[18:12:54] <rwaldron> DaveMethvin does this link work for you.... http://grooveshark.com/s/Nuclear+Secrets/4fyqK7?src=5
[18:13:14] <rwaldron> I think his complaints were actually about reflows
[18:13:22] <rwaldron> but he thought it was something else
[18:13:31] <rwaldron> and so investigated the wrong things
[18:15:00] <DaveMethvin> at least we have something to do for 1.7.1
[18:15:44] <rwaldron> WAIT
[18:15:51] <DaveMethvin> hammertime?
[18:15:52] <rwaldron> we are SO WRONG
[18:16:06] <rwaldron> http://jsfiddle.net/rwaldron/X4ntA/3/
[18:16:15] <rwaldron> his complaint is also still wrong
[18:16:20] <rwaldron> but so are we
[18:16:46] <rwaldron> a cached fragment is created the second time the same html is used
[18:16:54] <DaveMethvin> OH
[18:17:02] <DaveMethvin> that makes sense
[18:17:10] <DaveMethvin> you know what would have made that clear?
[18:17:15] <rwaldron> tests?
[18:17:16] <DaveMethvin> A UNIT TEST!
[18:17:22] <rwaldron> FOR REAL.
[18:17:32] <rwaldron> Now i can write meaningful tests.
[18:17:42] <DaveMethvin> yes indeedy
[18:18:31] <rwaldron> incredible
[18:18:54] <rwaldron> I just added dups for the other ones... strings that weren't previously creating an entry
[18:19:01] <rwaldron> now creating entries
[18:19:29] <rwaldron> <span><span>
[18:19:31] <rwaldron> wasnt
[18:19:39] <rwaldron> or was it?
[18:19:40] <rwaldron> one sec
[18:19:52] <rwaldron> it was
[18:19:55] <rwaldron> my mistake
[18:20:27] <DaveMethvin> now the code makes sense, the cacheresults is 1 the second time around so it stores the frag then
[18:20:54] <DaveMethvin> no, <span></span> doesn' go through that path
[18:31:26] <rwaldron> DaveMethvin I have ten tests
[18:31:44] <rwaldron> actually... i have an idea
[18:31:46] <rwaldron> one sec
[18:31:53] <rwaldron> naw, keep it like this
[18:32:03] <ryanneufeld> sorry to interrupt but is there any speed diff between append and appendTo ?
[18:32:06] <rwaldron> 2 tests check an initial set of created elements
[18:32:08] <rwaldron> for the 1s
[18:32:10] <rwaldron> and bytes
[18:32:23] <DaveMethvin> ryanneufeld: jsperf.com can answer that better than our guesses
[18:32:24] <rwaldron> then I make second runs on 4 of the strings
[18:32:42] <rwaldron> and test the DocumentFragments that are expected to now exist
[18:32:48] <rwaldron> looking for nodeType 11
[18:32:53] <rwaldron> and .childNodes.length
[18:32:53] <ryanneufeld> DaveMethvin: thanks, I didn't see any there, thought you guys would know faster than me making one. But I'll go make one. Thanks.
[18:32:57] <DaveMethvin> that sounds like a good test
[18:34:10] <rwaldron> DaveMethvin these are looking good
[18:34:16] <rwaldron> IEs love em
[18:34:34] <rwaldron> and the moderns love em too
[18:34:44] <rwaldron> shit yeah
[18:34:46] <rwaldron> pushing
[18:34:58] <DaveMethvin> IE and the Moderns, didn't they open for Turbonegro?
[18:36:22] <rwaldron> ahahahaha
[18:36:39] <rwaldron> Wait... don't tell me your a secret Turbonegro fan
[18:36:51] <DaveMethvin> i like all kinds of stuff
[18:36:59] <rwaldron> because if you are... i bought 5 tickets to their November gig in NYC
[18:37:15] <rwaldron> they are flying to the US for one show
[18:37:18] <rwaldron> unreal
[18:37:28] <DaveMethvin> where are they playing?
[18:37:41] <rwaldron> with new singer that apparently had the crowd at weltturbo jugendtage going bananas at his first show ever
[18:37:57] <rwaldron> Santos Party House
[18:38:04] <rwaldron> its a club that Andrew WK owns
[18:38:10] <rwaldron> Andrew WK is opening
[18:41:04] <rwaldron> DaveMethvin I have to drive Rose to her cousin's place, I'll be back in a bit
[18:41:09] <rwaldron> will push those tests when i return
[18:41:12] <rwaldron> later
[18:41:19] <DaveMethvin> cya later
[19:39:55] <mikesherov> hey, I need in the unit testing environment a way to load one file and have it be the complete source of jQuery
[19:40:11] <mikesherov> right now, all the examples have all the files loaded one by one
[19:57:54] <rwaldron> DaveMethvin yt?
[19:58:04] <rwaldron> I just gt back and realized a new test for this...
[19:58:16] <DaveMethvin> just about ready to pack it in...what's up?
[19:58:25] <rwaldron> confirming that after the second run, no new entries have been created
[19:58:50] <rwaldron> (since they should just be creating DocumentFragments, not adding new keys to jQuery.fragments)
[19:58:55] <rwaldron> and that should do it.
[19:59:00] <DaveMethvin> yeah good test
[19:59:15] <rwaldron> ok, good night
[19:59:29] <DaveMethvin> k, talk to you tomorrow no doubt ... gnight!
[19:59:34] <mikesherov> hey rwaldron, I need in the unit testing environment a way to load one file and have it be the complete source of jQuery
[19:59:40] <mikesherov> any ideas?
[19:59:57] <rwaldron> that's how it used to be
[20:00:09] <rwaldron> but um, no... not reall
[20:00:13] <rwaldron> really*
[20:00:16] <rwaldron> sorry :|
[20:00:28] <rwaldron> I mean, i culd come up with 33458034853859837458739485 shitty ways to do that
[20:00:41] <rwaldron> but i cant think of a good way off the top of my head at the moment
[20:00:45] <rwaldron> could*
[20:00:48] <mikesherov> Would it be goofy to add a PHP script that does the same thing as the make file?
[20:01:00] <mikesherov> or would that be 1 out of the 33458034853859837458739485 shitty ways
[20:01:03] <mikesherov> ?
[20:01:45] <mikesherov> I was trying to avoid having to use the isLocal flag...
[20:04:47] <mikesherov> oh, and by the way, that abacus prefix detector... anything like what I did here? https://github.com/jquery/jquery/pull/528/files
[20:04:47] <socialhapy> ★ Pull request on jquery by mikesherov (1m, 2d ago): make sure box-sizing:border-box children of a hidden div report inner/outer/Width()/Height() correctly, fixes #10413
[20:05:01] <rwaldron> yeah, that was definitely one of the 33458034853859837458739485... but who knows, since both of us thought the same thing, maybe go for it?
[20:06:01] <mikesherov> k, will do. Thanks
[20:07:16] <mikesherov> also, just wanted to ask one more question. A few of the unit test modules share similar "load an iframe for this test" code... if I wanted to unify them, where would I put that so it was exposed as a common fixture / utility?
[20:08:38] <rwaldron> testrunner.js?
[20:08:46] <rwaldron> in... data/
[20:08:48] <rwaldron> i think
[20:09:02] <rwaldron> most common use stuff is in there
[20:09:10] <rwaldron> i like patches like this
[20:09:11] <rwaldron> https://github.com/rwldrn/jquery/pull/new/10682
[20:09:39] <rwaldron> more tests please.
[20:10:06] <mikesherov> were your dogs barking when you wrote those tests?
[20:10:23] <rwaldron> naw
[20:10:28] <mikesherov> and listening to devo?
[20:10:30] <rwaldron> i wrote those earlier tonight
[20:10:46] <rwaldron> oh ahahah, DaveMethvin wrote the devo and dogs barking parts
[20:11:06] <mikesherov> I see
[20:11:28] <mikesherov> OK, so I'm going to add my iframe stuff to testrunner
[20:11:39] <rwaldron> hot shit
[20:12:03] <mikesherov> that's what I do too... my tests are larger than my actual changes
[20:12:27] <mikesherov> just to change readyState to !== "loading" it requires about 4 files.
[20:13:10] <rwaldron> damn, the PR backlog is getting long
[20:13:19] <mikesherov> An iframe, a PHP script that sleeps for 60 seconds before it loads, a generic iframe loader for testing, a way to get jquery as one file in the testing environment...
[20:13:36] <mikesherov> you could always merge my 3 commits ;-)
[20:13:39] <rwaldron> jesus
[20:13:54] <rwaldron> I'm not a committer
[20:13:58] * rwaldron shrugs
[20:14:10] <mikesherov> oh, right
[20:14:21] <rwaldron> i'd close almost every single PR in the queue
[20:14:22] <mikesherov> https://github.com/jquery/jquery/pulls/mikesherov my PR for 10159 is shitty anyway
[20:14:40] <rwaldron> yours, one other guy and mine go in
[20:14:43] <rwaldron> the rest is shit
[20:14:57] <mikesherov> HAHAHA
[20:15:34] <rwaldron> it's true
[20:16:15] <rwaldron> like... https://github.com/jquery/jquery/pull/573
[20:16:15] <socialhapy> ★ Pull request on jquery by jyli7 (2d, 5h ago): Boolean for slideToggle and fadeToggle, #10491
[20:16:23] <mikesherov> yeah
[20:16:32] <mikesherov> or the "less crude isWindow"
[20:16:35] <rwaldron> dude
[20:16:37] <rwaldron> fuck that
[20:16:44] <mikesherov> I'm tempted to write a negative unit test
[20:16:56] <rwaldron> the next person to file a fucking PR for isWindow is going to get a home visit from me
[20:17:03] <mikesherov> one that proves we WANT jQuery to be fooled by setInterval objects
[20:17:35] <mikesherov> it's literally right there, commented out
[20:17:44] <rwaldron> the problem is that people are mostly bad programmers
[20:17:50] <rwaldron> hell, I'm a bad programmer
[20:18:07] <mikesherov> well, there are a lot of concerns
[20:18:18] <mikesherov> style, size, speed, maintainability, clarity
[20:18:24] <rwaldron> but I know that isWindow is not meant to be used a method to test every object that comes down the line
[20:18:44] <mikesherov> usually programmers are concerned with only a few vectors
[20:18:51] <rwaldron> it's just confirm something that you know is likely true already
[20:19:06] <mikesherov> right,
[20:19:29] <mikesherov> rename it to isAlmostGauranteedToBeAWindow
[20:19:34] <rwaldron> right
[20:19:37] <mikesherov> and people will get the point
[20:19:55] <rwaldron> but calling it that would nominate it for inclusion to David Mark's "My Library"
[20:20:01] <mikesherov> HAHAHA
[20:20:11] <mikesherov> OMG
[20:20:15] <rwaldron> API.isAlmostGauranteedToBeAWindow()
[20:20:20] <mikesherov> I was getting super frustrated by him today
[20:20:26] <rwaldron> but he's all about "context" so he'll also have...
[20:20:33] <mikesherov> his tweets and the most obnoxious BS ever
[20:20:33] <rwaldron> API.isAlmostGauranteedToBeAnIframeWindow()
[20:20:38] <rwaldron> just to be safe
[20:20:44] <rwaldron> same here
[20:20:47] <rwaldron> both things
[20:20:50] <mikesherov> finally mathias and wookiehangover called him out
[20:21:06] <rwaldron> sometimes i want to fly to ohio, find his home and beat the shit out of him
[20:21:07] <mikesherov> he doesn't want to submit a PR because jQuery would "steal his ideas"
[20:21:12] <rwaldron> with real physical violence
[20:21:19] <mikesherov> it's obnoxious
[20:21:22] <rwaldron> he's so fucking wrong about everything
[20:21:30] <rwaldron> it blows my mind
[20:21:31] <mikesherov> well, wrong or right, he's just shitty
[20:22:26] <mikesherov> so, testinit.js is the spot
[20:22:47] <mikesherov> man, the unit test framework needs an overhaul
[20:23:07] <mikesherov> well, not completely
[20:23:13] <rwaldron> eh
[20:23:15] <mikesherov> just a few things make it tough
[20:23:23] <rwaldron> qunit is getting better
[20:23:29] <mikesherov> and by tough, I mean tough for me
[20:23:37] <mikesherov> oh, no, qunit is fine
[20:23:42] <rwaldron> but jQuery has some serious attic and closet space it's been neglecting
[20:23:50] <rwaldron> ya know that movie Uncle Buck?
[20:23:56] <mikesherov> Yeah
[20:24:04] <rwaldron> the beginning, when John Candy gets the call from his brother
[20:24:07] <rwaldron> and he's in his apartment
[20:24:17] <rwaldron> opens his closet and all kinds of shit falls out on him
[20:24:28] <mikesherov> right
[20:24:30] <rwaldron> that's jQuery's test setup stuff
[20:24:34] <mikesherov> Right
[20:24:48] <mikesherov> there are a few spots in the unit tests that need work
[20:24:53] <rwaldron> dude, that was way funnier than you're giving me credit for
[20:24:59] <mikesherov> just off the top of my head, and specifically for this PR I'm working on
[20:25:10] <rwaldron> how about...
[20:25:19] <mikesherov> Well, john Candy is one of the funniest actors of all time
[20:25:29] <rwaldron> when I just duckpunched window.equals = window.equal
[20:25:43] <rwaldron> because "equals" has to go
[20:25:47] <mikesherov> HAHA
[20:25:58] <rwaldron> and we didnt want to break anything
[20:26:07] <rwaldron> so we put that in "temporarily"
[20:26:11] <rwaldron> and forgot about it
[20:26:14] <mikesherov> I'm just going to replace all occurrences right now
[20:26:17] <mikesherov> it's done
[20:26:25] <rwaldron> :D
[20:26:25] <mikesherov> I'm making a pull request right now for it
[20:26:45] <mikesherov> INVALIDATE ALL THE PRS
[20:27:04] <mikesherov> all of those 28 pull requests will need to be rebased
[20:27:08] <mikesherov> it'll be glorious
[20:27:13] <rwaldron> eff
[20:27:18] <rwaldron> probably not
[20:28:07] <mikesherov> it's actually also buried in qunit
[20:28:20] <mikesherov> Qunit.equals = Qunit.equal;
[20:28:30] <rwaldron> hahaha
[20:28:35] <rwaldron> that might be newer
[20:28:41] <rwaldron> who knows
[20:28:57] <rwaldron> jzaefferer actually gave me the idea
[20:28:59] <rwaldron> so...
[20:29:02] * rwaldron shrugs
[20:29:07] <mikesherov> oh good, there's only 1459 matches of "equals" in the test directory
[20:29:33] <rwaldron> nice
[20:32:26] <mikesherov> there: http://bugs.jquery.com/ticket/10691
[20:32:34] <mikesherov> now I just get to work
[20:33:45] <rwaldron> triaged
[20:33:49] <rwaldron> and first vote in
[20:34:07] <mikesherov> nice
[20:34:09] <rwaldron> you should triage more bugs dawg
[20:34:18] <rwaldron> so i can give you more privileges
[20:34:24] <rwaldron> and then we can let you vote
[20:34:46] <rwaldron> how about that? do more free work and that earns you... MORE WORK!
[20:34:49] <rwaldron> AYAYAYAYAYAYA
[20:40:31] <mikesherov> HAHHA
[20:40:41] <mikesherov> I would love that
[20:41:09] <mikesherov> I don't really know what is expected out of triaging, or if I have enough privileges for that
[20:41:20] <mikesherov> tell me what to do, and I'll do it
[20:43:07] <mikesherov> so I just figured out those window.equals = window.equal are irrelevant now since QUnit does it
[20:51:01] <mikesherov> so, just got rid of same( and replaced with deepEqual(
[20:51:11] <mikesherov> that worked
[20:51:11] <mikesherov> now equals(
[20:56:17] <mikesherov> there, all tests pass
[20:56:27] <mikesherov> and, we're done, all with the magic of find/replace
[20:56:57] <mikesherov> I'll do another sweep in a few weeks to get the last stragglers from any PR's that were following a bad example
[21:02:53] <mikesherov> there it is: https://github.com/jquery/jquery/pull/580
[21:02:53] <socialhapy> ★ Pull request on jquery by mikesherov (36.279s ago): fixes #10691, remove all instances of equals() and same() in unit tests
[21:07:38] <mikesherov> geez, even Qunit uses Qunit's deprecated equals and same to test itself!
[21:19:56] <mikesherov> there! https://github.com/jquery/qunit/pull/175
[21:19:57] <socialhapy> ★ Pull request on qunit by mikesherov (18.509s ago): remove uses of equals(), as it's deprecated in favor of equal()
[21:20:53] <mikesherov> now to do the same thing to sizzle
[21:48:36] <mikesherov> there: https://github.com/jquery/sizzle/pull/80
[21:48:36] <socialhapy> ★ Pull request on sizzle by mikesherov (19.297s ago): remove deprecated same() and equals() QUnit calls
