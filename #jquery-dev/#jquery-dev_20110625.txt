[02:12:33] <KanKouni> good day
[02:13:04] <KanKouni> any idea about making draggables and droppables works on iphone?
[02:15:30] <sean`> KanKouni, ppi has an article about it I remember
[02:18:11] <KanKouni> whats ppi?
[02:46:44] <sean`> KanKouni, I ment ppk
[02:50:23] <KanKouni> i already got a solution
[03:00:34] <KanKouni> thank you Furfero
[05:33:10] <CasW> I'm trying to adjust event.pageX and event.pageY to my needs, but I can't find the place where they are calculated
[05:33:16] <CasW> Does anyone right here know that?
[05:50:37] <matjas> https://github.com/jquery/jquery/graphs/impact woah
[16:41:59] <gavin_huang> timmywil, hi, are you awake?
[19:01:05] <gavin_huang> hi, paul_irish, are you there?
[19:03:29] <gavin_huang> paul_irish, does modernizr have its own irc channel?
[19:03:38] <paul_irish> gavin_huang: yo
[19:03:44] <paul_irish> it doesnt but #html5 is good for that
[19:05:11] <gavin_huang> well, it's kinda specifically relates to modernizr. do you think it's ok if i discuss something about modernizr with you here?
[19:05:34] <paul_irish> lets take it to #html5.. some of the other devs hang there sometimes
[19:05:36] <paul_irish> :)
[19:05:47] <gavin_huang> ok, sure
[19:52:30] <gavin_huang> timmywil, hi
[19:52:39] <timmywil> gavin_huang: what's up
[19:52:46] <gavin_huang> i'm still pondering that attr('required') problem. i checked attr()'s src and have a qustion: when checking a boolean attr's existence, why does jquery check the corresponding prop instead? does it mean jquery expects browser to auto set prop when boolean attr is set?
[19:53:39] <timmywil> gavin_huang: not really, users expect the property to be set so jquery sets it for them, but only if that property is supported on the element
[19:54:38] <timmywil> the problem with boolean attributes is that they only set the default or initial value, but this was a difference in behavior for users in the attr rewrite because they were used to the attribute staying up to date with the current value
[19:54:52] <timmywil> which, by spec, it doesn't do
[19:56:23] <timmywil> in the attr('required') ticket, retrieving required in IE9 returned undefined because there is really no _current_ value for required in IE9
[19:56:40] <timmywil> only a default that was set that has no affect in IE9
[19:57:09] <timmywil> hence the different return values
[19:57:48] <gavin_huang> then how about in boolHook.get, it fallbacks to test the inital value (i.e., the attr) when no corresponding prop exists?
[19:58:53] <gavin_huang> *initial
[19:59:45] <timmywil> gavin_huang: the problem is attributes like required aren't supported across browsers so if you just had required present (e.g. <input type="text" required>), you'd get "required" back in supported browsers and "" back in unsupported...so still inconsistent
[20:00:55] <timmywil> this way, at least you have a way of knowing which browsers are supporting it, but I think what we'll end up doing is removing attributes that aren't supported in all browsers from the boolean list, so users will just get back what they set and will have to use properties to update current values
[20:02:12] <gavin_huang> yeah, but it's "" and not undefined, why not use === undefined to test the attribute's existence?
[20:04:04] <timmywil> that seems like more fallbacks than we want in core, especially when users should be using properties in the first place.
[20:05:41] <gavin_huang> if jquery drops boolean attrs like required. it's going to be very hard to write a plugin like html5 form. you don't have a way to test these extra attrs.
[20:06:00] <timmywil> gavin_huang: why not?
[20:06:16] <timmywil> seems like what you really want is something like hasAttr
[20:06:33] <timmywil> so if we drop support for required, attr is restored to the functionality you are looking for
[20:06:48] <timmywil> then you can just check if !== undefined
[20:08:21] <gavin_huang> timmywil, you mean like directly call dom method like getAttribute('require') !== undefined?
[20:08:41] <timmywil> gavin_huang: no, you could just do .attr('required') !== undefined
[20:10:13] <timmywil> if support is dropped for html5 boolean attributes, it all becomes consistent again
[20:11:33] <gavin_huang> timmywil, ah, i see it. why is it supported in the first place? because like you said, users expect attr() to set prop for boolean attrs?
[20:13:00] <timmywil> gavin_huang: in the past, attr worked with a combination of properties and attributes, but to deal with these relationship problems, it chose property over attribute and didn't have a way to differentiate between the two.  Now that we do, users aren't used to the idea that attributes are different than properties
[20:13:42] <timmywil> gavin_huang: mainly checked, disabled, readonly, selected
[20:13:57] <gavin_huang> timmywil, oh, man , they really should. see the trouble we are into now. :)
[20:14:20] <timmywil> gavin_huang: yea ;)
[20:15:26] <gavin_huang> i think what 1.6 did was right, strictly separates attr() & prop(), people will get it over the time.
[20:16:05] <DaveMethvin> timmywil: i'm startin to like this gavin_huang guy. :)
[20:16:27] <gavin_huang> DaveMethvin, haha. thanks. ;)
[20:16:32] <timmywil> DaveMethvin: lol
[20:16:54] <timmywil> gavin_huang: agreed, we seemed to have calmed the masses until 1.7 :)
[20:16:55] <DaveMethvin> i am sitting here atm trying to figure out how to NOT break events as i am doing the rewrite
[20:17:11] <DaveMethvin> and thinking of a big list o stuff that i want to deprecate
[20:17:25] <timmywil> DaveMethvin: looking forward to it
[20:18:40] <timmywil> gotta run, thanks for your input gavin_huang
[20:19:02] <gavin_huang> timmywil, thank you. c u. :)
