[05:29:06] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/HUauVg
[05:29:06] <jqcommit> [testswarm/master] Revert "Replacing Chrome 17 with Chrome 20 (now stable)" - Timo Tijhof
[06:25:23] <gibson042> .
[06:39:48] <Krinkle> .
[08:13:10] <timmywil> yayyyayayayayayayayayayasdfasyasdfjaweofkmawowowowow!
[08:13:42] <timmywil> DaveMethvin: woooooooooooooooooooooooooo
[08:14:14] <DaveMethvin> Good news everyone! timmywil did something great!
[08:14:22] <DaveMethvin> did you fix the :last problem?
[08:15:03] <timmywil> well, :last wasn't the issue anymore. I've got all tests passing in all browsers. The last problem was converting .split to multiple .execs cause IE blows.
[08:15:19] <DaveMethvin> well, that's a given
[08:15:27] <timmywil> http://cl.ly/0Q2B2V082I2q3k3X353W
[08:15:56] <DaveMethvin> awwww yeah
[08:16:02] <timmywil> also checked traversing
[08:16:08] <timmywil> which is also now a little smaller
[08:18:24] <timmywil> final size (with jQuery ID shortcut cause it's probably a good idea to keep it): 33114
[08:19:15] <timmywil> DaveMethvin: also, http://cl.ly/1t1s2t0k2l1u3c3O2I2l   :DDDD
[08:19:36] <DaveMethvin> sweet
[08:20:20] <DaveMethvin> man i am tired, just got back on a red eye flight about two hours ago
[08:20:28] <timmywil> oof
[08:20:31] <timmywil> sorry man
[08:20:35] <timmywil> did you sleep?
[08:20:37] <DaveMethvin> it was delayed out of sf because of the fog
[08:20:39] <DaveMethvin> kinda
[08:20:42] <DaveMethvin> maybe 3 hours
[08:20:51] <DaveMethvin> definitely could use some more
[08:20:57] <timmywil> i bet
[08:21:13] <DaveMethvin> we should have a short mtg today anyway
[08:21:13] <timmywil> DaveMethvin: oh btw, jQuery.unique needs to stay
[08:21:20] <DaveMethvin> orly?
[08:21:33] <DaveMethvin> can we deprecate from the public interface tho
[08:21:35] <timmywil> yea, even if we got rid of POS selectors, we need it in traversing
[08:21:53] <DaveMethvin> it's one of those things people seem to misuse
[08:21:55] <timmywil> we couldâ€¦.but we're one of the only libraries with a reliable way to sort by doc order
[08:22:06] <timmywil> true it is misued
[08:22:12] <DaveMethvin> kk, we can leave it if needed
[08:22:40] <DaveMethvin> imma get some, er, lunch or breakfast
[08:22:47] <timmywil> I remembered that I recommeded it to someone for some issue. I forgot what it was, but I was pretty adament about it. :)
[08:22:53] <timmywil> hehe, do it
[08:22:54] <DaveMethvin> dependingon what time zone my stomach is in
[08:25:44] <gibson042> .
[08:27:40] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/OvhXVQ
[08:27:40] <sizcommit> [sizzle/master] COMPLETE REWRITE FOR AWESOME STUFF - timmywil
[08:35:00] <jqcommit> [jquery] timmywil pushed 2 new commits to master: http://git.io/hn5-mw
[08:35:00] <jqcommit> [jquery/master] Add back ID shortcut. It's about 3 times faster than going through jQuery.fn.find and merging. - timmywil
[08:35:00] <jqcommit> [jquery/master] UPDATE SIZZLE: completed rewrite for better things! - timmywil
[08:49:03] <scott_gonzalez> Shouldn't jQuery.unique() be public for plugins to use if they call .pushStack()?
[08:49:56] <scott_gonzalez> Seems important for stuff like this: https://github.com/scottgonzalez/jquery-littles/blob/master/jquery.nmk.littles.js#L36
[08:50:20] <timmywil> scott_gonzalez: yes, it is the only solution for some use cases
[08:52:10] <timmywil> there are also cases where someone might need to remove duplicates from a set without reselecting
[08:52:51] <timmywil> the good news for Dave is that the implementation is a lot shorter in jQuery 2.0
[09:00:28] <jq-jenkins> Project jQuery Core build #193: STILL FAILING in 25 min: http://swarm.jquery.org:8080/job/jQuery%20Core/193/
[09:00:29] <jq-jenkins> * timmywillisn: Add back ID shortcut. It's about 3 times faster than going through jQuery.fn.find and merging.
[09:00:29] <jq-jenkins> * timmywillisn: UPDATE SIZZLE: completed rewrite for better things!
[09:04:21] <DaveMethvin> timmywil gnarf looks like everyone is traveling today
[09:04:23] <DaveMethvin> or gone
[09:05:05] <timmywil> that's fine, doesn't look like we have much on the agenda, and you're tired
[09:05:11] <DaveMethvin> yeah
[09:05:15] <DaveMethvin> you're tellin me!
[09:05:22] <timmywil> but hey! sizzle is sizzlin! man I'm excited.
[09:05:56] <DaveMethvin> me too!
[09:06:37] <DaveMethvin> figured i'd put together a status update in case anyone looks at the notes
[09:06:56] <timmywil> sure, I'm putting together a blog post as well
[09:07:05] <timmywil> and doing perf tests now
[09:07:36] <timmywil> finally everything is faster http://jsperf.com/sizzle-1-7-2-vs-1-8
[09:07:42] <timmywil> even POS is 3 times faster
[09:08:03] <timmywil> the simples are about the same cause they're taking the same shortcuts
[09:09:21] <timmywil> ignore browserscope, that's old
[09:09:32] <DaveMethvin> added to the meeting notes
[09:15:46] <DaveMethvin> ok i think that about does it for me, imma take a nappy
[09:15:55] <DaveMethvin> anything you guys want to add?
[09:24:20] <gnarf> DaveMethvin: ohere now
[09:45:36] <scott_gonzalez> haha, timmywil the id selectors make everything else impossible to look at :-P
[09:46:07] <timmywil> id selectors?
[09:46:51] <scott_gonzalez> In that jsperf
[09:47:03] <timmywil> does it break for you or something?
[09:47:26] <timmywil> ohhh, browserstack
[09:47:29] <scott_gonzalez> No, they're just so much faster than other types of selectors that the bars for everthing are so small you can't tell what's going on :-P
[09:47:29] <timmywil> I see what you mean
[09:47:39] <timmywil> browserscope**
[09:47:50] <timmywil> yea, I could revise it
[12:24:06] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/kWwFzw
[12:24:06] <sizcommit> [sizzle/master] Child selector regex adjustment and other clean-ups. - timmywil
[12:24:49] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/Is1RWQ
[12:24:49] <jqcommit> [jquery/master] Sizzle: minor adjustments and a small fix in the child selector regex - timmywil
[12:31:32] <timmywil> SlexAxton: cla signed <3
[12:45:18] <jq-jenkins> Project jQuery Core build #194: STILL FAILING in 20 min: http://swarm.jquery.org:8080/job/jQuery%20Core/194/
[12:45:18] <jq-jenkins> timmywillisn: Sizzle: minor adjustments and a small fix in the child selector regex
[13:53:46] <Krinkle> Anyone here an expert in javascript regexes in relation to IE6-8 ? I've got a regex that parses a url in a plugin, and some of the optional match groups become 'undefined' in most browsers (including new IE, firefox, chrome, opera, ..). But IE6-8 is returning an empty string for them.
[13:54:36] <Krinkle> ideally I'd change the regex so old IE behaves the same, other wise I'll add post-matching processing to normalize it
[13:54:55] <Krinkle> sounds familiar?
[13:56:44] <FJ> can you do a jsfiddle?
[13:58:09] <Krinkle> I'll abstract it, sure.
[13:59:08] <rwaldron> scott_gonzalez holy shit
[13:59:10] <rwaldron> http://bugs.jquery.com/ticket/12003
[13:59:15] <rwaldron> you blitzed me
[13:59:28] <scott_gonzalez> :-)
[13:59:29] <rwaldron> but my answer was probably a little mean
[13:59:34] <scott_gonzalez> haha
[13:59:43] <rwaldron> I had a bunch of links to "the fucking manual"
[13:59:44] <scott_gonzalez> BE NICE
[14:00:32] <scott_gonzalez> That's why I was able to blitz you, you were creating references...
[14:00:55] <scott_gonzalez> When I clicked the submit button, I was actually wondering whether it would go through or if I'd be blitzed :-P
[14:00:56] <rpflo> INDEXOF NOT INARRAY
[14:01:06] <rpflo> that method always irritates me when I see it
[14:02:02] <scott_gonzalez> polyfill indexOf :-)
[14:02:07] <rwaldron> yeah
[14:02:19] <rwaldron> rpflo good luck using indexOf in IE6,7
[14:02:29] <rpflo> I'm saying its named wrong
[14:02:35] <rpflo> inArray should return true or false
[14:03:00] * rwaldron dusts of time machine to make ryan happy
[14:03:04] <rwaldron> off*
[14:03:11] <rpflo> I know, bc is more important
[14:03:17] <rpflo> but it *is* named wrong.
[14:03:24] <rpflo> so I can rage for 5 seconds, and then get over it.
[14:03:27] <scott_gonzalez> Too bad it can't be dropped in 2.0...
[14:03:35] <rwaldron> it's actually not worth my mental cycles to even discuss
[14:03:53] <rpflo> naming things is the most important part of programming
[14:04:07] <rwaldron> no one is arguing that
[14:04:19] <rpflo> so its always worth discussing when an API is named wrong
[14:04:20] <rwaldron> but there is nothing we can do about 5 years later
[14:04:21] <rwaldron> so...
[14:04:24] <rwaldron> get over it.
[14:04:31] <rwaldron> not really
[14:04:46] <rwaldron> it was a worthwhile discussion before john released 1.0
[14:04:53] <rwaldron> but now it's a wart
[14:05:00] <rwaldron> i agree with you
[14:05:05] <rpflo> now you've spent more time than you would have had you said "yeah, too bad we're stuck with it now"
[14:05:12] <rpflo> :P
[14:05:14] <rwaldron> holy shit, i did say that
[14:05:58] <Krinkle> dang, jsfiddle is slow...
[14:06:19] <Krinkle> preview run takes 20+ seconds to respond
[14:06:41] <rpflo> Krinkle: yeah, it seems slower lately
[14:06:56] <rwaldron> slower, crappier a little insane
[14:07:06] <rwaldron> that needs a comma
[14:10:41] <Krinkle> FJ: http://jsbin.com/oketox/edit#preview
[14:12:16] <Krinkle> http://jsbin.com/oketox/2
[14:12:50] <Krinkle> http://cl.ly/2g2Z1R0P0e0g1G3O3z2C
[14:54:44] <sizcommit> [sizzle] timmywil pushed 2 new commits to master: http://git.io/nNpTJw
[14:54:44] <sizcommit> [sizzle/master] Add w3c whitespace rules to selector matching to account for all whitespace characters in all browsers. Remove unnecessary preFilter calls for ID and TAG. Adjust class caching. - timmywil
[14:54:44] <sizcommit> [sizzle/master] Remove unnecessary wrapper function for pseudos that don't require an argument for generation. - timmywil
[14:54:53] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/o3D0ZA
[14:54:53] <jqcommit> [jquery/master] Sizzle: add cross-browser w3c whitespace rules; pseudo generation adjustment - timmywil
[15:19:09] <jq-jenkins> Project jQuery Core build #195: STILL FAILING in 24 min: http://swarm.jquery.org:8080/job/jQuery%20Core/195/
[15:19:10] <jq-jenkins> timmywillisn: Sizzle: add cross-browser w3c whitespace rules; pseudo generation adjustment
[16:07:41] <rwaldron> DaveMethvin OMG
[16:07:46] <rwaldron> hilarious
[16:07:55] <DaveMethvin> haha?
[16:08:00] <mikesherov> .
[16:08:21] <DaveMethvin> tell mikesherov bot-t is sick
[16:08:30] <DaveMethvin> :D
[16:08:33] <mikesherov> ircjsbot is nice and healthy though
[16:08:59] <mikesherov> did I miss anything interesting in meeting today?
[16:09:06] <DaveMethvin> not much
[16:09:16] <DaveMethvin> timmy and gibson042 were there
[16:09:21] <DaveMethvin> a few things in the notes
[16:09:48] <DaveMethvin> timmy completely rewrote sizzle, just another boring day
[16:09:49] <rwaldron> I'm at nodeconf, so...
[16:09:51] <DaveMethvin> :)
[16:09:53] <rwaldron> I wasnt there
[16:10:21] <rwaldron> DaveMethvin... funny thing... i saw david mark actually tweeted something like...
[16:10:36] <rwaldron> "blah blah lah its not like they'll release a Sizzle rewrite"
[16:10:51] <DaveMethvin> new Array(3).join("ha")
[16:11:11] <rwaldron> <3
[16:11:13] <DaveMethvin> you are WRONG david mark
[16:11:13] <mikesherov> wait, so timmywil figured out the positional selector issue?
[16:11:19] <DaveMethvin> of course!
[16:11:25] <rwaldron> yes
[16:11:27] <rwaldron> he's timmywil
[16:11:32] <rwaldron> mutant!
[16:11:33] <mikesherov> I'm so interested in seeing it
[16:11:37] <rwaldron> i mean... super hero!
[16:11:50] <DaveMethvin> now he's on to writing a blog post on it
[16:12:09] <DaveMethvin> 1.8 is becoming more epic by the minute
[16:12:09] <mikesherov> timmywil: how'd you figure out the positional selector stuff?
[16:12:14] <timmywil> :D
[16:12:27] <timmywil> mikesherov: as facebook might say, it's complicated
[16:12:33] <mikesherov> wait, so the rewrite IS going to be in 1.8?
[16:12:49] <timmywil> it's already pushed :)
[16:12:55] <mikesherov> EPIC
[16:13:00] <DaveMethvin> it passes unit tests
[16:13:20] <DaveMethvin> we just have to get it out the door by the end of the month
[16:13:23] <DaveMethvin> i think we can do it
[16:13:42] <DaveMethvin> i wanted to get beta2 next monday
[16:13:49] <timmywil> mikesherov: basically, I go left-to-right for every POS part in the selector and right-to-left for every other part. Even with that, POS improved by ~200%
[16:15:05] <mikesherov> yeah, way over my head, but that's awesome that you got a solution you like
[16:15:32] <DaveMethvin> as long as we prove david mark wrong i am happy
[16:15:58] <timmywil> I shared the blog post with the bugs team
[16:16:04] <timmywil> still working on it
[16:16:18] <DaveMethvin> back in a few ... dinner
[16:16:47] <mikesherov> so how does speed compare to NWMatcher?
[16:17:03] <timmywil> it's competitive
[16:17:10] <timmywil> which I couldn't say before
[16:18:02] <timmywil> NWMatcher will always be a bit faster because it uses eval to create the compiled function from (unreadable) code strings
[16:18:14] <timmywil> but I'm happy
[16:18:15] <mikesherov> can't imagine it'll ever be as fast unless you rip the approach
[16:18:16] <mikesherov> yeah
[16:18:39] <mikesherov> yeah, worth being happy about
[16:19:10] <mikesherov> how is it size wise?
[16:21:27] <timmywil> jQuery overall is 500 bytes smaller now
[16:21:40] <timmywil> compared to 1.7.2
[17:42:11] <timmywil> alright blog post done
[18:34:04] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/KkxfYg
[18:34:04] <sizcommit> [sizzle/master] Adjust Sizzle's attribute handling to account for boolean attributes in IE6/7. Closes gh-94. - timmywil
[18:35:24] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/N-9I2w
[18:35:24] <jqcommit> [jquery/master] Use value rather than nodeValue in attributes (it's the string version). Update sizzle: default attribute handling. - timmywil
[18:52:03] <jq-jenkins> Project jQuery Core build #196: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Core/196/
[18:52:03] <jq-jenkins> timmywillisn: Use value rather than nodeValue in attributes (it's the string version). Update sizzle: default attribute handling.
[19:19:06] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/n9ffKQ
[19:19:06] <sizcommit> [sizzle/master] Simplify the pseudo regex to fix a long standing bug with nested pseudos. Fixes jQuery bug #7010. - timmywil
[19:19:54] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/oLvudQ
[19:19:54] <jqcommit> [jquery/master] Sizzle: fix multiple nested pseudos. Fixes #7010. - timmywil
[19:41:53] <jq-jenkins> Project jQuery Core build #197: STILL FAILING in 21 min: http://swarm.jquery.org:8080/job/jQuery%20Core/197/
[19:41:53] <jq-jenkins> timmywillisn: Sizzle: fix multiple nested pseudos. Fixes #7010.
[19:49:16] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/UUV0sg
[19:49:16] <sizcommit> [sizzle/master] Let non-parens take precendence when matching pseudo arguments - timmywil
[19:49:40] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/Ypf6WA
[19:49:40] <jqcommit> [jquery/master] Update sizzle: fixes fail in traversing with :has selector - timmywil
[20:00:02] <jq-jenkins> Project jQuery Core build #198: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/jQuery%20Core/198/
[20:00:02] <jq-jenkins> timmywillisn: Update sizzle: fixes fail in traversing with :has selector
[20:01:12] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/S1jc5A
[20:01:12] <sizcommit> [sizzle/master] Update space combinator to match all whitespace characters - timmywil
[20:01:33] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/2dA6tg
[20:01:33] <jqcommit> [jquery/master] Sizzle: space combinator update - timmywil
[20:20:16] <jq-jenkins> Project jQuery Core build #199: STILL FAILING in 18 min: http://swarm.jquery.org:8080/job/jQuery%20Core/199/
[20:20:17] <jq-jenkins> timmywillisn: Sizzle: space combinator update
[21:15:55] <sizcommit> [sizzle] timmywil pushed 1 new commit to master: http://git.io/Qrq0rw
[21:15:55] <sizcommit> [sizzle/master] Add caching system to combinator functions to avoid checking the same parent/sibling element more than once per selection - timmywil
[21:16:28] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/-5_ZXg
[21:16:28] <jqcommit> [jquery/master] Update Sizzle: adds caching to combinators - timmywil
[21:30:13] <timmywil> well I wasn't expecting such a difference. I think Diego could add dir caching though.  http://jsperf.com/nwmatches-vs-modified-nwmatcher/8
[21:32:07] <jq-jenkins> Project jQuery Core build #200: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Core/200/
[21:32:07] <jq-jenkins> timmywillisn: Update Sizzle: adds caching to combinators
