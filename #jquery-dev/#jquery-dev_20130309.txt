[06:36:16] <JamesMGreeneAway> Krinkle|detached Good detective work!
[06:36:39] <JamesMGreeneAway> That should help ensure that Grunt fails when appropriate
[06:37:04] <JamesMGreeneAway> But what about the actual PhantomJS crash?  Did you get a chance to run through the dump?
[13:47:14] <ravenzz> hello
[13:48:40] <ravenzz> why serializeArray excludes submit buttons?
[13:49:53] <ravenzz> the W3C spec says that "A successful control is "valid" for submission. Every successful control has its control name paired with its current value as part of the submitted form data set."
[13:50:17] <DaveMethvin> ravenzz nobody pressed the submit button if you are serializing via javascript or jquery
[13:50:25] <DaveMethvin> imagine you have a form with two buttons
[13:50:28] <ravenzz> am I interpreting it wrong?
[13:50:30] <DaveMethvin> create and delete
[13:50:46] <ravenzz> yeah but what if I click the button?
[13:50:59] <DaveMethvin> great then the browser will send that along
[13:51:06] <DaveMethvin> but when you call jquery
[13:51:13] <DaveMethvin> how will we know that you clicked the button?
[13:51:18] <DaveMethvin> YOU know you clicked the button
[13:51:24] <DaveMethvin> YOUR CODE knows you clicked the button
[13:51:28] <DaveMethvin> jQuery does not
[13:51:38] <DaveMethvin> so you can add the button to the serialized list
[13:51:45] <DaveMethvin> but we cannot
[13:51:52] <ravenzz> I know
[13:52:07] <ravenzz> wouldn't a workaround help?
[13:52:17] <DaveMethvin> yes, at your code's level
[13:52:48] <DaveMethvin> because again, you probably know which button was pressed
[13:52:50] <DaveMethvin> jquery does not
[13:52:59] <DaveMethvin> we can pick one, the shiniest one that says DELETE NOW
[13:53:10] <DaveMethvin> but we  have no grounds to pick
[13:53:24] <DaveMethvin> and in fact don't know that you want any of the submit buttons
[13:53:33] <DaveMethvin> for example perhaps your server wants to know
[13:53:39] <DaveMethvin> whether it was a user press or a code submit
[13:53:52] <DaveMethvin> so it determines that by looking for the submit button
[13:54:41] <ravenzz> well nvm I didn't consider the case in which you serialize no matter if the form was submitted or not
[13:55:02] <DaveMethvin> just add the button if you know which one you want
[13:57:16] <ravenzz> the case is that I helped a guy on #jquery and this was my first solution http://jsfiddle.net/dnYEg/ then I thought what if I serialize the form an check if "save" is there or not http://jsfiddle.net/dnYEg/1/
[13:57:46] <ravenzz> so i freaked out, but I got your point.,.. and it make perfectly sense
[13:59:09] <DaveMethvin> ravenzz and it is noted in the docs http://api.jquery.com/serialize/
[14:00:06] <ravenzz> do you mean here "No submit button value is serialized since the form was not submitted using a button." ?
[14:00:13] <DaveMethvin> right
[14:01:25] <ravenzz> I don't if that sentence is ambiguous or it is just my bad english's fault but the form is actually submitted using a button
[14:01:35] <ravenzz> +know
[14:01:47] <DaveMethvin> you can call .serialize() anywhere, any time
[14:01:59] <DaveMethvin> it doesn't know you're inside a submit handler
[14:02:06] <ravenzz> yep but serialize != submit
[14:03:07] <DaveMethvin> if you can think of better wording, you can submit a pull request at http://github.com/jquery/api.jquery.com/ to clarify
[14:06:32] <ravenzz> eheh as I mentioned my english is not that good :) but thanks for clarifying my doubt
[17:54:37] <tallio> hello guys. I have problem on Jquery understanding : "i have a page with divs loaded by ajax". I called them all class="icorem". I would like to make a alert() on each by simple click. But as it passes by Ajax load it doesn t worked. So i checked on Google and found explications about it. I made my code with recommandations on using DOM $(document) but my code doens't work well... :( could someone help me plz ? Pastie : http://pastie
[18:12:33] <JamesMGreene> Aaaaand BOOM! Tern will now have built-in Node.js support =)
[21:55:48] * JamesMGreene sighs and gives up on an NPM name dispute
[22:09:05] <JamesMGreene> So if I want to "udpate" a pushed git tag, I do... what?
[22:09:23] <gf3> JamesMGreene: You do nay
[22:09:33] <JamesMGreene> pull, maybe make a new branch from the tag? delete tag (local and remote)
[22:09:35] <gf3> JamesMGreene: Considered bad practice to change tags
[22:09:37] <JamesMGreene> edit, commit, push as tag
[22:09:58] <JamesMGreene> understood, blah blah blah, and I need to update my tags anyway
[22:10:16] <JamesMGreene> This is just for straight-up git, not NPM (yet)
[22:10:28] <JamesMGreene> and it's new code, so no one's using it
[22:10:32] <gf3> You could delete it
[22:10:34] <gf3> And re-tag
[22:10:44] <JamesMGreene> delete what?
[22:10:47] <gf3> The tag
[22:10:56] <gf3> It's basically just a branch
[22:11:00] <JamesMGreene> So did my list agove make sense?
[22:11:19] <gf3> Sure
[22:11:20] <JamesMGreene> pull, make a new branch from the tag, delete tag (local and remote),  edit, commit, push as tag
[22:11:45] <gf3> Might be better to branch from the ref the tag is at
[22:11:51] <gf3> Instead of the tag directly
[22:11:54] <gf3> I don't know
[22:12:19] <JamesMGreene> Does it make a difference?
[22:12:23] <JamesMGreene> I'm fine either way
[22:12:45] <JamesMGreene> just unfamiliar with this practice (or checking out tags in general)
[22:19:03] <JamesMGreene> Hmm
[22:19:22] <JamesMGreene> Can I push just the tag? I'm thinking not since tags are just pointers to particular commits, right?
[22:20:45] <JamesMGreene> Hmm
[22:20:57] <JamesMGreene> That's shitty, though, cuz I don't want to push this to master
[22:21:34] <JamesMGreene> If I push to a new branch w/ a tag and then delete the branch, will the tag still point to the deleted commit?
[22:21:48] <JamesMGreene> gf3
[22:22:24] <gf3> JamesMGreene: Yes, it will
[22:22:29] <gf3> JamesMGreene: And yes, you can
[22:22:34] <gf3> JamesMGreene: git push --tags
[22:23:07] <JamesMGreene> and that will _only_ push tags?
[22:23:35] <JamesMGreene> (normally I push my commits and tags together, e.g. `git push origin master --tags`
[22:23:36] <gf3> AFAIK
[22:23:43] <JamesMGreene> k, I'll give it a try
[22:23:49] <JamesMGreene> thx
[22:23:51] <gf3> Might want to double check the docs
[22:24:01] <JamesMGreene> meh whatever, it's git, anything can be correct
[22:24:02] <JamesMGreene> ed
[22:25:16] <JamesMGreene> Nice, worked perfectly
[22:30:39] <gf3> `boom @ JamesMGreene
[22:30:39] <b-ot> JamesMGreene: "Did you are unimpressed? and now?"
