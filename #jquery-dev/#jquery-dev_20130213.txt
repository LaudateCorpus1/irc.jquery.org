[04:00:16] <siovene> DaveMethvin|away: for when you wake up: I just found out that John Bender is also working on a benchmarking suite for JQM. I looked at his code and it's eerily similar to mine. I wrote to him so we can perhaps cooperate.
[05:23:57] <scott_gonzalez> So, one less browser to worry about, huh?
[05:26:55] <scott_gonzalez> I wonder what this means for web openers.
[05:27:59] <DaveMethvin> Presto was the only engine that had basically ZERO workarounds in core, I think there was one in ajax
[05:28:10] <DaveMethvin> webkit has tons
[05:28:49] <DaveMethvin> but if it means we can complain about webkit bugs to miketaylr, maybe it's not so bad
[05:29:43] <scott_gonzalez> ugh, tried to run a search for "opera" in Trac.
[05:29:51] <scott_gonzalez> operations, operators, operating, etc.
[05:30:57] <DaveMethvin> the difference is, opera fixed their bugs pretty quickly and since we didn't have to deal with a long tail we could remove patches pretty quickly
[05:31:25] <DaveMethvin> theres that recent bug where the guy was complaining that opera 10 had a bug we should work around
[05:31:43] <scott_gonzalez> I feel like we've had to deal with a lot of CSS bugs in Opera for UI.
[05:31:52] <scott_gonzalez> heh, yeah, I saw that.
[05:32:07] <scott_gonzalez> He was like "Opear 10 is awesome, Opera 11 sucks"
[05:32:34] <DaveMethvin> think of all the code that uses $.browser.opera that will break  horribly now
[05:32:41] <DaveMethvin> oh yeah, we already broke it
[05:32:44] <scott_gonzalez> heh
[05:32:45] <DaveMethvin> that's anticipation for you
[05:32:47] <scott_gonzalez> Ahead of the curve.
[05:33:36] <scott_gonzalez> Does this mean no more browser.js bundled inside Opera?
[05:35:00] <DaveMethvin> yeah technicaly the probably won't need to do that anymore
[05:35:21] <DaveMethvin> although it may be mis-diagnosed as Chrome and given a different set of inappropriate fixes
[05:41:04] <jqcommit> [13jquery] 15RubyLouvre opened pull request #1167: reduce "access" method (06master...06master)  02http://git.io/PnA1Ww
[06:25:13] <rxaviers> wycats__, Hi Yehuda, Im from jQuery UI team. Have a min? Quick question http://git.io/ds6_-g
[06:26:32] <scott_gonzalez> rxaviers: If wycats__ doesn't respond, you may have better luck asking Peter Wagenet.
[06:26:44] <rxaviers> ah! thks
[06:26:47] <scott_gonzalez> Actually, I'll just cc him in that comment.
[06:26:56] <rxaviers> thank you scott_gonzalez!
[06:27:42] <scott_gonzalez> no problem
[06:27:57] <scott_gonzalez> CALLING ALL TILDE EMPLOYEES! :-P
[06:34:43] <rxaviers> :D
[07:39:49] <scott_gonzalez> :-/
[07:40:10] <scott_gonzalez> With GitHub constantly hanging for me, I'm nervous about doing this release and having the script just stall.
[07:41:01] <scott_gonzalez> Maybe this is their way of forcing people to use HTTP instead of SSH.
[08:04:04] <DaveMethvin> whenever i do a release i'm always worried about it bombing out in the middle and then having to clean up the mess
[08:15:39] <rwaldron> timmywil gibson042 do either of you have a few mins to answer a question or two about nodelist performance?
[08:17:02] <rwaldron> DaveMethvin that PR that reduces access...
[08:17:05] <rwaldron> I want to dig into that
[08:17:21] <DaveMethvin> ok rwaldron
[08:17:39] <rwaldron> how can I make sure the author gets the commit credit
[08:17:42] <rwaldron> and add new commits
[08:17:49] <rwaldron> if they haven't signed CLA yet
[08:17:57] <rwaldron> ...just assume that they will?
[08:18:18] <wycats__> What's up bros
[08:18:19] <DaveMethvin> git commit --author="their name <their@email>"
[08:18:30] <rwaldron> I can do it on a branch, but then the branch will be squashed and both our commits will be that author
[08:18:40] <scott_gonzalez> wycats__: Peter answered the question.
[08:18:40] <rwaldron> DaveMethvin right, but ^^
[08:18:50] <wycats__> Cool
[08:18:58] <wycats__> Scumbag node
[08:19:00] <scott_gonzalez> wycats__: The question was why does everything say Handlebars 1.0.rc2 is latest when npm has 1.0.8
[08:19:09] <wycats__> We're going to get releases synced soon
[08:19:14] <scott_gonzalez> good :-)
[08:19:33] <rwaldron> DaveMethvin, I know...
[08:19:35] <DaveMethvin> just hold until they sign
[08:19:40] <wycats__> I am not actually the maintainer of the node package (or wasn't for a while)
[08:19:50] <rwaldron> DaveMethvin I'll branch from master, pull theirs ontop of that
[08:19:53] <scott_gonzalez> I noticed.
[08:19:55] <rwaldron> then branch from that
[08:19:57] <DaveMethvin> they just suggested deleting two lines, dunno if that really needed authorship anyway
[08:20:02] <rwaldron> ok
[08:20:13] <wycats__> scott_gonzalez: we should sync up eventually about the ui metadata for an ember shim
[08:20:13] <rwaldron> I can just credit them in the final commit message
[08:20:17] <rwaldron> easier.
[08:20:33] <scott_gonzalez> wycats__: Toronto?
[08:20:59] <wycats__> Seeeeeems good
[08:21:26] <scott_gonzalez> I can do whenever if you just want to discuss over IRC/jabber/Skype.
[08:21:30] <DaveMethvin> rwaldron that seems good, you commit under your name and give them a thanks in the commit
[08:22:46] <wycats__> scott_gonzalez: I am currently doing day 3 of ember training and embercamp is friday
[08:22:54] <wycats__> But anytime after that works
[08:23:18] <scott_gonzalez> Ok, ping me next week.
[08:25:00] <rwaldron> DaveMethvin +1
[08:29:39] <rwaldron> scott_gonzalez: ping
[08:29:52] <scott_gonzalez> hey rwaldron
[08:29:57] <rwaldron> scott_gonzalez does jQuery UI use jQuery._data or jQuery._removeData?
[08:30:02] <scott_gonzalez> nope
[08:30:06] <rwaldron> marvelous
[08:30:11] <rwaldron> I'd kiss you if I could.
[08:30:13] <rwaldron> ;)
[08:30:17] <scott_gonzalez> :-)
[08:30:26] <rwaldron> DaveMethvin... I have a zany idea.
[08:31:04] <rwaldron> I've been contemplating
[08:31:07] <rwaldron> ...
[08:31:13] <rwaldron> Namespaced data!
[08:31:29] <rwaldron> It might be too much code, so for now it's just an idea
[08:34:47] <gibson042> rwaldron: did you get your answer on NodeLists?
[08:37:39] <rwaldron> no
[08:37:40] <rwaldron> one sec
[08:37:44] <rwaldron> sorry
[08:38:44] <rwaldron> gibson042, in Sizzle all nodelists are sliced
[08:39:21] <rwaldron> which I always assumed was for speed and to make live nodelists appear "static"
[08:39:56] <rwaldron> in the case of qSA, it appear that the slice is costly enough to skip
[08:40:11] <rwaldron> that is... unless this perf is bogus http://jsperf.com/livelist-length/5
[08:40:42] <gibson042> rwaldron: can you point to a line in sizzle.js for that last point?
[08:40:44] <gibson042> to the extent that I've been involved, slicing has been out of necessity
[08:41:33] <rwaldron> gibson042 makes sense here: https://github.com/jquery/sizzle/blob/master/sizzle.js#L257
[08:41:39] <rwaldron> and here https://github.com/jquery/sizzle/blob/master/sizzle.js#L262
[08:41:57] <rwaldron> but the qSA case: https://github.com/jquery/sizzle/blob/master/sizzle.js#L298
[08:42:11] <rwaldron> might be suffering
[08:42:17] <rwaldron> but I'm not sure I buy that perf
[08:42:36] <gibson042> those are all push.apply
[08:42:42] <rwaldron> because it's measuring the slice operation in the test
[08:42:48] <gibson042> we could only skip the slice with a support test
[08:42:58] <rwaldron> no, they are slice.call
[08:43:07] <rwaldron> sorry
[08:43:10] <rwaldron> i don't mean "no"
[08:43:19] <rwaldron> i mean, "additionally, they are slice.call"
[08:43:20] <rwaldron> slice.call(context.getElementsByTagName( selector )
[08:43:24] <gibson042> right
[08:43:39] <gibson042> but without the slice, it's push.apply(_, NodeList)
[08:43:45] <rwaldron> right
[08:43:48] <gibson042> which is broken in many user agents
[08:43:56] <rwaldron> which can be an issue with live NodeList
[08:44:01] <rwaldron> also that
[08:44:27] <gibson042> so the slice in those lines could only be conditionally removed
[08:44:58] <rwaldron> Ok, I getchya now. the slice isn't just being used for perf, it has utility in older browsers
[08:45:08] <gibson042> correct
[08:45:09] <rwaldron> maybe more so the latter
[08:45:16] <gibson042> in fact, I suspect it hurts performance
[08:45:52] <rwaldron> iteration is drastically improved
[08:46:19] <rwaldron> so, when you make a selection, you pay a cost up front
[08:46:44] <rwaldron> in cases where you're caching a selection to be resused throughout the lifetime of an app...
[08:46:54] <rwaldron> massive benefits
[08:47:11] <rwaldron> reused*
[08:47:23] <gibson042> that doesn't really fit our use, though
[08:47:31] <gibson042> ideally, we iterate once and that's it
[08:47:40] <rwaldron> right
[08:47:54] <rwaldron> I meant in non-Sizzle cases
[08:48:01] <rwaldron> sorry, should've been clear
[08:48:07] <gibson042> ah, right
[08:48:10] <rwaldron> eg. in plain DOM
[08:48:27] <rwaldron> so, for context, I'm researching ways that FirefoxOS/Gaia can improve DOM performance
[08:48:45] <rwaldron> they've elected to "roll their own" for every single goddamn app
[08:48:50] <rwaldron> (it's a mess)
[08:49:05] <gibson042> good grief
[08:52:38] <gibson042> I agree 100% with your assessment, though, slice.call( NodeList ) improves performance of repeated iteration
[08:52:56] <gibson042> but repeated iteration is to be avoided wherever possible
[08:59:02] <gibson042> also rwaldron, more small savings are possible in the neighborhood of https://github.com/jquery/jquery/pull/1167
[08:59:02] <b-ot> gibson042: Pull request #1167 by RubyLouvre (3h 18m 17s): reduce "access" method
[08:59:46] <gibson042> by combining the first two if statements: `if ( key === undefined || key && typeof key !== "object" && value === undefined ) { return this.get( owner, key ); }`
[09:01:46] <rwaldron> gibson042 yeah, I actually have something similar already
[09:01:50] <rwaldron> not quite though
[09:01:58] <rwaldron> I'll have you look at it in a sec
[09:02:25] <rwaldron> gibson042 https://gist.github.com/rwldrn/331e2a63479f5ad903a3
[09:02:26] <gibson042> I'm off to meetings; just commit
[09:02:41] <gibson042> oh, well since it's ready now... :)
[09:03:21] <rwaldron> I see what you're talking about
[09:03:25] <rwaldron> let me try that
[09:03:33] <gibson042> yeah, I'd still combine the `if`s since .get does the right thing with key === undefined
[09:04:25] <rwaldron> gibson042 doin' it.
[09:04:28] <rwaldron> thanks for the look
[09:04:30] <rwaldron> ttyl
[09:14:50] <jqcommit> 01[13jquery01] 15rwldrn pushed 1 new commit to 06master: 02http://git.io/BeiRXw
[09:14:50] <jqcommit> 13jquery/06master 1493043d0 15Rick Waldron: Refactor: Data.prototype.access. Thanks to @RubyLouvre and @gibson042. Closes #1167
[09:45:29] <timmywil> rwaldron: it's true that slice is also used for performance reasons
[09:45:43] <timmywil> well, as opposed to the old makeArray
[09:46:20] <timmywil> In terms of performance, it's a catch-22 actually
[09:46:33] <doesallmagic> Project jQuery Core build #693: STILL FAILING in 31 min: http://swarm.jquery.org:8080/job/jQuery%20Core/693/
[09:46:33] <doesallmagic> waldron.rick: Refactor: Data.prototype.access. Thanks to @RubyLouvre and @gibson042. Closes #1167
[09:46:36] <timmywil> because we got rid of a function call, slice is faster
[09:47:09] <timmywil> calling a makeArray that used slice is actually slower in v8 than a makeArray that loops over all of the elements manually and creates a new array
[09:47:25] <timmywil> since v8 optimizes loops so much
[09:48:04] <timmywil> but getting rid of Sizzle.makeArray completely and using a shimmed slice in place of it was noticeably faster than either of those options
[09:49:05] <timmywil> I did a lot of perf testing on that
[09:50:02] <timmywil> but, if you want to know, since you're talking mozilla, spidermonkey always had slice faster than loops
[09:58:29] <rwaldron> timmywil thanks for the additional insight
[09:59:22] <timmywil> :)
[10:13:05] <JamesMGreene> Heyo
[10:13:27] <JamesMGreene> Does anyone know what happens with regard to Touch and Mouse events if you use a mouse with an iPad?
[10:14:42] <JamesMGreene> i.e. use mouse with iPad, click something on a webpage; does the mouse click fire Touch events as well as the Mouse events (like actual touches do if you don't `preventDefault`) or does it only fire Mouse events?
[10:15:12] <JamesMGreene> ^ DaveMethvin scott_gonzalez
[10:15:32] <gnarf> sounds easy enough to test, yeah?
[10:15:43] <gnarf> jsfiddle + some $("body").append() logging?
[10:15:48] <JamesMGreene> If I had an iPad with a mouse, yeah, totally :)
[10:15:51] <scott_gonzalez> Not sure, can you just plug any USB mouse into an iPad?
[10:16:12] <DaveMethvin> i think jaubourg has a setup
[10:16:12] <gnarf> if only julian was around
[10:16:22] <scott_gonzalez> Kristin has an iPad.
[10:16:35] <JamesMGreene> I don't think you can use any mouse, no
[10:16:38] <gnarf> i have a magic mouse
[10:16:39] <scott_gonzalez> But I don't know how I'd connect a mouse to it.
[10:16:47] <gnarf> bluetoothy
[10:16:51] <gnarf> ?
[10:16:55] <scott_gonzalez> I have a magic trackpad.
[10:16:58] <JamesMGreene> Magic Mouse works with it
[10:17:17] <gnarf> magic pad might pair with the ipad
[10:17:20] <gnarf> and be a "mouse"
[10:20:33] <scott_gonzalez> "You'll need a jailbroken iPad"
[10:21:12] <scott_gonzalez> http://www.youtube.com/watch?v=L2JHA3gPHjA
[10:21:39] <scott_gonzalez> I don't know if iPad even knows what MouseEvents are.
[10:23:17] <gnarf> i've definitely hooked up a keyboard to one wihtout jailbreak
[10:23:20] <gnarf> dunno about mouse tho
[10:24:01] <gnarf> i guess it doesn't support pointing devices on "stock"
[10:31:34] <JamesMGreene> Well then I suppose I don't have to worry about that edge case yet
[10:32:27] <JamesMGreene> scott_gonzalez iPhone/iPad will fire MouseEvents as a result of TouchEvents if the touch event handlers don't call `e.preventDefault();`
[10:32:59] <JamesMGreene> (They're only called so that Mobile Safari didn't have a completely non-functional web experience due to all of the MouseEvent handlers on websites, of course)
[10:33:09] <scott_gonzalez> Yeah, I know about that.
[10:33:19] <scott_gonzalez> That's part of the browser though.
[10:33:28] <scott_gonzalez> I don't know if iOS has the concept of a mouse.
[10:33:42] <JamesMGreene> Right, gotcha now
[10:33:44] <DaveMethvin> i wonder how much ipad sw expects ONLY touch events and won't see the mouse?
[10:34:13] <scott_gonzalez> I assume that the hacks for making mouse work just mimic a finger moving around.
[10:34:32] <scott_gonzalez> But I don't really know what's going on at the OS level, this is a pure guess.
[10:34:51] <DaveMethvin> that would make sense ... just a very pointy finger
[10:34:55] <JamesMGreene> Yeah, good point: their docs don't mention mouse events at all for the OS level
[10:35:22] <JamesMGreene> Screw that then
[10:35:49] <JamesMGreene> `var eventName = "touchend" in document ? "touchend" : "mouseup";` it is
[10:38:02] <scott_gonzalez> Never do that.
[10:38:04] <scott_gonzalez> ever
[10:38:06] <scott_gonzalez> never ever
[10:38:32] <scott_gonzalez> Always assume that all event systems are in play at all times.
[10:39:11] <scott_gonzalez> There are devices that will trigger both.
[10:39:23] <scott_gonzalez> Based on which input device is being used.
[11:10:06] <JamesMGreene> scott_gonzalez: Please clarify
[11:10:57] <JamesMGreene> (This isn't for jQuery core, mind you, just a plugin)
[11:11:04] <JamesMGreene> But please clarify all the same
[11:11:47] <JamesMGreene> I haven't been able to reproduce any scenario yet where I need to care about both, though I thought I would
[11:11:54] <JamesMGreene> jQuery Mobile also uses the same technique
[11:14:10] <JamesMGreene> https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.support.touch.js#L9-L11   <-- detection
[11:14:29] <JamesMGreene> https://github.com/jquery/jquery-mobile/blob/master/js/events/touch.js#L30-32  <-- usage
[11:17:32] <DaveMethvin> mikesherov your opinion appreciated on this issue when you get a chance, I know  you're probably busy on V-Day :D  http://bugs.jquery.com/ticket/13416
[12:02:22] <Krinkle> scott_gonzalez: (#jquery-meeting) only so long, Opera's switching to WebKit. So long Presto!
[12:02:55] <Krinkle> https://twitter.com/browsehappy/status/301677762031284224
[12:02:55] <b-ot> Krinkle: @browsehappy: Opera is switching from their own Presto engine to WebKit (and V8, Chromium). The less different engines, the better. http://t.co/xAdV7onN
[12:03:23] <DaveMethvin> That is so 10 hours ago
[12:03:27] <Krinkle> haha
[12:03:33] <Krinkle> This news made my day
[12:03:38] <Krinkle> For 24 hours!
[12:55:18] <JamesMGreene> Lots like mass IRC disconnects, yay
[12:56:07] <JamesMGreene> scott_gonzalez Now that I'm reconnected, could you clarify what/where/why to avoid the `var eventName = "touchend" in document ? "touchend" : "mouseup";` technique?
[12:57:27] <JamesMGreene> I understand that mobile WebKit's touch events will fire mouse events after the touch events if their default is not prevented but that is a non-issue for me. The question is: can any legitimate browser today (i.e. not Chrome using Dev Tools to send touch events) propose mouse events independently when its default would be touch events?
[12:57:53] <JamesMGreene> propose = produce
[13:13:31] <JamesMGreene> scott_gonzalez Even though I'm leaving, feel free to leave the answer here and I'll check the IRC log later. Or, email me:  james.m.greene@gmail.com
[13:32:51] <scott_gonzalez> ?tell JamesMGreene There are actual devices that will trigger touch events in some cases and mouse events in other cases.
[13:32:52] <bot-t> scott_gonzalez, Okay.
[13:32:52] <b-ot> scott_gonzalez: I’ll tell JamesMGreene about that.
[13:33:28] <scott_gonzalez> ?tell JamesMGreene ping me about it tomorrow. I was in my basement building walls earlier.
[13:33:28] <bot-t> scott_gonzalez, Okay.
[13:33:28] <b-ot> scott_gonzalez: I’ll tell JamesMGreene about that.
[14:09:45] <_|Nix|_> ben_alman: Ping!
[17:57:23] <jqcommit> 01[13jquery-migrate01] 15dmethvin pushed 4 new commits to 06master: 02http://git.io/Q6Rpzg
[17:57:23] <jqcommit> 13jquery-migrate/06master 140f21aea 15Dave Methvin: Correct and warn for empty JSON on $.ajax. Close gh-21.
[17:57:23] <jqcommit> 13jquery-migrate/06master 14b60f5ba 15Dave Methvin: Remove "use strict", close gh-20.
[17:57:23] <jqcommit> 13jquery-migrate/06master 14303f43b 15Dave Methvin: Preserve any existing jQuery.browser, close gh-22.
[18:09:19] <doesallmagic> Project jQuery Migrate Core 1.x build #26: SUCCESS in 12 min: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/26/
[18:09:20] <doesallmagic> * dave.methvin: Correct and warn for empty JSON on $.ajax. Close gh-21.
[18:09:20] <doesallmagic> * dave.methvin: Remove "use strict", close gh-20.
[18:09:21] <doesallmagic> * dave.methvin: Preserve any existing jQuery.browser, close gh-22.
[18:09:21] <doesallmagic> * dave.methvin: Update jQuery choices for unit test.
[18:26:20] <DaveMethvin> swarmy loves me, he really LOVES ME!
[19:18:45] <jqcommit> 01[13jquery-migrate01] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/jMFEbg
[19:18:45] <jqcommit> 13jquery-migrate/06master 14c9b4563 15Dave Methvin: Document the $(html) restriction. Close gh-23.
[19:37:36] <doesallmagic> Project jQuery Migrate Core 1.x build #27: SUCCESS in 18 min: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/27/
[19:37:36] <doesallmagic> dave.methvin: Document the $(html) restriction. Close gh-23.
[19:43:33] <scott_gonzalez> DaveMethvin: I haven't looked through the source, but I think "more lines of fixes and patches for WebKit than any other browser" is a misleading statistic.
[19:43:55] <scott_gonzalez> It encourages thinking like https://twitter.com/jonathansampson/status/301895045668298753
[19:43:55] <b-ot> scott_gonzalez: @jonathansampson: New bugs for Opera's 300M users... "jQuery Core has more lines of fixes and patches for WebKit than any other browser" http://t.co/a4revMhY
[19:44:01] <scott_gonzalez> Which I'm guessing isn't true.
[19:44:14] <DaveMethvin> scott_gonzalez i did a count
[19:44:15] <scott_gonzalez> How many of those fixes apply to current WebKit?
[19:44:21] <DaveMethvin> quite a few
[19:44:36] <DaveMethvin> if you look at 2.0
[19:44:48] <scott_gonzalez> Doesn't 2.0 have fixes for old WebKits?
[19:45:00] <scott_gonzalez> I'm talking about things broken in Canary.
[19:45:15] <scott_gonzalez> Because Canary is essentially what Opera is inheriting.
[19:45:16] <DaveMethvin> in the post i mention that we had to keep some of them for old webkits but the one i linked to was in safari 2.0 and is still broken in the latest released chrome
[19:45:29] <scott_gonzalez> But that's just one.
[19:46:07] <DaveMethvin> i don't have a count of which bugs are fixed in chrome canary
[19:46:14] <DaveMethvin> but there's also safari
[19:46:30] <scott_gonzalez> Sure, but it's not fair to compare WebKit and released browsers using WebKit.
[19:46:46] <DaveMethvin> well if we have to support it... 
[19:47:05] <scott_gonzalez> Sure, we have to support it, but that's like saying that IE has lots of bugs because we have to work around bugs from 6/7/8.
[19:47:25] <DaveMethvin> but if there are bugs in ie9 i sure count them
[19:47:33] <DaveMethvin> and ie10 is the latest
[19:47:49] <DaveMethvin> just looking at 2.0 here
[19:48:04] <scott_gonzalez> Sure, but the point is that if Opera were to switch to Trident (is that still what's used?), they wouldn't inherit any bugs that were already fixed.
[19:48:14] <DaveMethvin> right
[19:48:16] <scott_gonzalez> Same goes for WebKit.
[19:48:27] <DaveMethvin> right
[19:48:30] <scott_gonzalez> If the bug doesn't existin Canary, it doesn't matter how many released WebKits still have the bug.
[19:48:44] <DaveMethvin> i cannot tell you how many bugs are there in canary
[19:48:45] <scott_gonzalez> In terms of what affects Opera.
[19:48:57] <scott_gonzalez> In terms of what affects us and all other developers, sure, they all come in to play.
[19:49:37] <DaveMethvin> my point there was more that opera doesn't seem to be all that interested in raising the quality of webkit vs concentrating on the stuff outside webkit
[19:49:55] <DaveMethvin> if they get canary and someone has fixed the bugs for them, then that's great for them
[19:50:05] <miketaylr> how do you draw that conclusion, DaveMethvin?
[19:50:14] <DaveMethvin> what conclusion
[19:50:22] <miketaylr> " opera doesn't seem to be all that interested in raising the quality of webkit vs concentrating on the stuff outside webkit"
[19:50:34] <DaveMethvin> the press elease
[19:50:39] <DaveMethvin> i quoted it
[19:51:15] <miketaylr> i guess i don't remember that part
[19:51:36] <DaveMethvin> so the reason for moving to webkit was that there is less effort in using webkit than maintaining presto
[19:52:15] <DaveMethvin> the funny thing was that as far as core was concerned there were just about no probs with opera
[19:52:35] <miketaylr> i guess that's good to hear
[19:52:47] <DaveMethvin> well not NOW :)
[19:53:15] <miketaylr> "there is less effort in using webkit than maintaining presto", i don't think that's quite accurate either
[19:53:24] <miketaylr> but i didn't author the press release
[19:53:27] <miketaylr> so whatever
[19:53:27] <DaveMethvin> "The shift to WebKit means more of our resources can be dedicated to developing new features and the user-friendly solutions"
[19:53:37] <DaveMethvin> that;s what the release said
[19:53:57] <miketaylr> i think the point is less catch up, more features
[19:54:00] <miketaylr> shrugs
[19:54:01] <b-ot> miketaylr: ¯\_(ツ)_/¯
[19:54:16] <miketaylr> DaveMethvin: but where do you get the idea that opera isn't interested in raising the quality of webkit?
[19:54:35] <DaveMethvin> it's a vs
[19:54:59] <DaveMethvin> i pointed out that they submitted a patch todya
[19:55:01] <miketaylr> ok, so what does concentrating on the stuff outside webkit mean, sorry i dont' follow
[19:55:11] <miketaylr> (i'm kind of slow)
[19:55:17] <DaveMethvin> stuff outside webkit is the ui for example
[19:55:50] <DaveMethvin> i'm assuming that at some point opera could make something that looks like opera but has webkit engine
[19:56:00] <miketaylr> sure
[19:56:26] <miketaylr> you can also assume that webkit has bugs or lacks certain areas of standards support that will be added by opera engineers
[19:56:37] <DaveMethvin> which would be geat
[19:56:39] <DaveMethvin> great
[19:56:48] <DaveMethvin> i would love to see more of those tackled
[19:56:49] <miketaylr> if opera was just going to be a chromium skin i wouldn't work there anymore ;)
[19:57:03] <miketaylr> what's the fun in that?
[19:57:17] <DaveMethvin> i think that's why people don't tackle the old bugs
[19:57:18] <DaveMethvin> because
[19:57:27] <DaveMethvin> "where;s the fun in that" :)
[19:57:30] <miketaylr> heh
[19:57:40] <DaveMethvin> it's more fun to do CSS3/4 or faster js engines
[19:57:41] <miketaylr> well, the patch that made it into webkit today fixed a 5 year old CSS bug
[19:57:48] <DaveMethvin> yes which was a good sign
[19:57:54] <DaveMethvin> but also a symptom of the problem
[19:58:03] <DaveMethvin> which is that these bugs lie around for a long time
[19:58:09] <DaveMethvin> even when they're relatively simple to fix
[19:58:13] <DaveMethvin> because they're not sexy
[19:58:23] <scott_gonzalez> Well, I'm sure miketaylr can tell us how old the oldest open Opera bug is.
[19:58:30] <scott_gonzalez> You just don't know because the bug tracker is closed.
[19:58:31] <miketaylr> it's pretty remarkable the amount of bugs all browsers have
[19:58:43] <miketaylr> it's remarkable that any browser works at all :P
[19:58:45] <DaveMethvin> remarkable --> sad
[19:59:06] <DaveMethvin> and no doubt Presto didn't get the workout of webkit
[19:59:15] <scott_gonzalez> DaveMethvin: anyBrowserLOC / jQueryLOC * jQueryBugCount = MASSIVE
[19:59:23] <miketaylr> i dunno, browsers are complicated beasts
[19:59:44] <DaveMethvin> oh for sure
[19:59:59] <miketaylr> scott_gonzalez: sigh... there were plans in motion to open our bug tracker before this switch was announced internally
[20:00:22] <DaveMethvin> the safari tracker isn't open either is it? i've never filed a bug there
[20:00:31] <scott_gonzalez> miketaylr: Are you allowed to say how many open bugs there are in Opera?
[20:00:49] <miketaylr> scott_gonzalez: i can look, but i don't know if there is a ready metric
[20:00:59] <miketaylr> scott_gonzalez: also we have a "new" BTS that is only like 6 or so years old
[20:01:10] <miketaylr> so it might not be accurate
[20:01:47] <miketaylr> here's desktop
[20:01:53] <miketaylr>  	New 	37742 10 %
[20:01:59] <scott_gonzalez> hahaha
[20:02:08] <miketaylr> Resolved 	291921 78%
[20:02:11] <miketaylr> lawl
[20:02:15] <DaveMethvin> wow
[20:02:17] <miketaylr> and then like 15 other categories
[20:02:24] <scott_gonzalez> DaveMethvin: There's your pristine browser.
[20:02:25] <DaveMethvin> who can file bugs miketaylr
[20:02:32] <miketaylr> and then like 15 other projects for different browsers
[20:02:37] <miketaylr> DaveMethvin: anyone can file
[20:02:46] <DaveMethvin> well there's your problem
[20:02:46] <snover> oh man, you guys are having this discussion and didn’t invite me
[20:03:01] <DaveMethvin> just like our tracker
[20:03:05] <miketaylr> i'm hoping we can have our shiny new open BTS w/ the shiny new browser
[20:03:22] <miketaylr> DaveMethvin: yeah, and sadly we don't do dramatic readings
[20:03:57] <scott_gonzalez> miketaylr: But with an open bug tracker, we can tag your bugs and do our own dramatic readings :-P
[20:04:03] <miketaylr> :)~
[20:04:11] <miketaylr> lots in russian accents
[20:04:15] <scott_gonzalez> haha
[20:04:26] <DaveMethvin> in soviet russia, bugs track YOU
[20:05:24] <miketaylr> i guess those bug numbers aren't quite accurate
[20:05:29] <snover> DaveMethvin: all i can say is, the webkit bug tracker is like a blissful zone of bliss compared to bugzilla
[20:05:37] <miketaylr> because some bugs ended up in Core
[20:05:56] <DaveMethvin> i think all bug trackers that are open to the public suffer this
[20:06:03] <DaveMethvin> it would be so much better if there was some buffer 
[20:06:06] <snover> i submitted an svg memory chomping bug and someone actually responded and was like “yep this is a problem”
[20:06:15] <miketaylr> 4412 new to 29342 resolved for presto core
[20:06:37] <DaveMethvin> well 4412 isn't bad
[20:06:48] <DaveMethvin> i think snover started with a higher number than that for jquery
[20:07:03] <miketaylr> i would guess that at least 80% of desktop bugs are people saying facebook won't google their twitter
[20:07:06] <snover> let’s ask ticketgraph
[20:07:18] <miketaylr> core bugs are real bugs
[20:07:25] <snover> no sorry it was only like 1600 davew
[20:07:45] <DaveMethvin> issues in rearview mirror are bigger than they appear
[20:08:00] <snover> DaveMethvin: when is zero bugs day?
[20:08:09] <DaveMethvin> never
[20:08:10] <snover> you were down to 60 in mid-january
[20:08:13] <snover> er
[20:08:14] <snover> late january
[20:08:21] <DaveMethvin> yeah but there are always more coming
[20:08:33] <DaveMethvin> and feature tix
[20:08:39] <snover> closed wontfix everything is perfect
[20:08:42] <DaveMethvin> i am okay as long as we stay in this zone
[20:09:00] <snover> can you open a ticket for making jquery a framework? because john says it is one
[20:09:31] <DaveMethvin> but i really NEED to trigger focus events in IE9 while in an iframe and send data but also make sure focus goes there synchronously
[20:09:36] <DaveMethvin> you can't close that ubg
[20:09:37] <DaveMethvin> bug
[20:09:49] <snover> closed impossible
[20:09:52] <snover> closed youaredumb
[20:10:46] <snover> also
[20:10:47] <snover> dave
[20:10:50] <snover> methvin
[20:10:59] <snover> don’t make me open a ticket to make you split things into amd modules
[20:11:00] <DaveMethvin> yes
[20:11:14] <snover> teststack does functional testing now
[20:11:14] <DaveMethvin> don't say that in front of scott_gonzalez
[20:11:20] <miketaylr> i'm gonna lobby that we add goto to V8 like we had back in opera 9
[20:11:33] <DaveMethvin> you scare me mikesherov
[20:11:36] <snover> it is actually a test framework that might be worth using at this point
[20:11:38] <DaveMethvin> whops
[20:11:43] <snover> mikesherov scares everyone, what else is new
[20:11:44] <DaveMethvin> miketaylr
[20:11:44] <miketaylr> that guy scares me too
[20:11:57] <DaveMethvin> damn autocomplete
[20:12:02] <DaveMethvin> doesn't it know
[20:12:03] <snover> anyway I’M JUST SAYIN
[20:12:06] <miketaylr> actually i had no idea that was a thing until eich told me
[20:12:10] <scott_gonzalez> snover: What would teststack replace for us?
[20:12:30] <snover> qunit and testswarm
[20:12:43] <DaveMethvin> just rewrite our unit tests?
[20:12:47] <scott_gonzalez> Oh boy, so we would have to rewrite all of our tests?
[20:12:55] <snover> you don’t have to rewrite them, it has pluggable interfaces
[20:13:13] <scott_gonzalez> What do we get out of the switch?
[20:13:32] <DaveMethvin> if focus tests work i'll do it in a heartbeat!
[20:13:42] <snover> no more trouble with testswarm/browserstack breaking
[20:13:50] <snover> true event tests
[20:14:01] <scott_gonzalez> True event tests?
[20:14:01] <snover> since it uses webdriver
[20:14:07] <scott_gonzalez> oh, nice
[20:14:23] <snover> i discovered a bug where operadriver is broken
[20:14:24] <snover> but uh
[20:14:25] <scott_gonzalez> I'm sold.
[20:14:28] <DaveMethvin> so where are the systems running the tests?
[20:14:29] <snover> i guess that part isn’t important anymore
[20:14:35] <DaveMethvin> is this saucelabs?
[20:14:42] <snover> DaveMethvin: saucelabs has free oss accounts orrrrrrrr you can set up your own selenium grid if you hate yourself
[20:14:58] <DaveMethvin> yeah i don't hate myself
[20:15:12] <DaveMethvin> i didn't know if saucelabs would give us enough free stuff
[20:15:27] <snover> it integrates with travis-ci but if you wanted to do jenkins or whatever that should be easy enough to add in
[20:15:52] <DaveMethvin> i'd be interested in seeing how it worked
[20:16:08] <DaveMethvin> the sauce stuff seems to have some nice features
[20:16:13] <snover> https://github.com/csnover/dojo2-teststack the code
[20:16:24] <scott_gonzalez> We would either need Extra Hot or Bottomless.
[20:16:30] <snover> https://github.com/csnover/dojo2-core/blob/master/test/cookie.js a tdd test
[20:16:46] <snover> https://github.com/csnover/dojo2-core/blob/master/test/functional/demo.js a demo of the functional test interface
[20:17:05] <scott_gonzalez> Unless their unlimited for open source really is unlimited.
[20:17:06] <DaveMethvin> scott_gonzalez Krinkle said he had looked at using sauce instead of browserstack 
[20:17:20] <snover> scott_gonzalez: it seems pretty unlimited to me
[20:17:30] <snover> they also send you emails every month letting you know that your account has more hours
[20:17:38] <snover> but i think that part is a bug
[20:17:42] <snover> but hey, infinity+1 hours?
[20:17:42] <DaveMethvin> lol
[20:18:36] <snover> i have an open ticket with them right now about their mac os drivers seem to have an issue where they hang on the 'keys' command
[20:18:48] <snover> but i suspect that will be fixed relatively quickly, they have been responsive 
[20:19:06] <DaveMethvin> well i need to get something done with our core tests, they just fail too often
[20:19:22] <DaveMethvin> i may just end up commenting out stuff for a while
[20:19:29] <snover> oh
[20:19:30] <snover> also
[20:19:32] <snover> you get code coverage
[20:19:35] <snover> information
[20:19:42] <snover> so there’s that
[20:20:02] <DaveMethvin> have you put any benchmark/perf stuff into that pile?
[20:20:10] <snover> kitson kelly wants to add that
[20:20:17] <snover> and he usually does what he sets his mind to
[20:20:50] <snover> https://github.com/csnover/dojo2-teststack/issues/1
[20:20:50] <b-ot> snover: Issue #1 by kitsonk (3w 5d 10h 16m 39s): Feature: Performance API
[20:21:04] <snover> right now it already reports time per test
[20:21:22] <snover> but well, those things he says are things that are true
[20:23:19] <DaveMethvin> holy crap, they rewrote that press release to change the quote that I quoted
[20:23:33] <scott_gonzalez> haha
[20:23:38] <scott_gonzalez> They're on to you DaveMethvin
[20:23:59] <DaveMethvin> "that jquery guy is crazy, he's making up stuff"
[20:24:43] <snover> DaveMethvin: lol
[20:25:10] <DaveMethvin> no it's still there but it looks like they added more
[20:25:14] <DaveMethvin> strange
[20:31:48] <snover> aaaaagh static electricity
[20:31:55] <scott_gonzalez> snover: In case you're interested: https://github.com/scottgonzalez/node-git-tools
[20:31:59] <snover> anyway dave good luck with that lie
[20:32:28] <DaveMethvin> it won't be my first
[20:32:37] <DaveMethvin> oh you mean Hakon Lie?
[20:32:54] <snover> neat
[20:32:57] <snover> oh man
[20:33:08] <snover> this is why you don’t get invited to any parties
[20:33:28] <DaveMethvin> oh good i thought it was personal hygiene issues
[20:33:33] <snover> so that first comment was to scott and the two other comments were to you dave
[20:33:48] <snover> also you mikesherov
[20:37:18] <snover> scott_gonzalez: next, make one that works without git installed ;)
[20:49:44] <JamesMGreene> Yo bots, tell me
[20:49:45] <b-ot> JamesMGreene: You have 2 new messages, use `read when you wish to read them.
[20:49:45] <bot-t> (7 hours 16 mins ago) <scott_gonzalez> tell JamesMGreene There are actual devices that will trigger touch events in some cases and mouse events in other cases.
[20:49:45] <bot-t> (7 hours 16 mins ago) <scott_gonzalez> tell JamesMGreene ping me about it tomorrow. I was in my basement building walls earlier.
[20:50:07] <JamesMGreene> `read
[20:50:07] <b-ot> JamesMGreene: From scott_gonzalez, 7h 17m 15s: There are actual devices that will trigger touch events in some cases and mouse events in other cases.
[20:50:12] <JamesMGreene> `read
[20:50:12] <b-ot> JamesMGreene: No unread messages.
[20:50:17] <b-ot> JamesMGreene: From scott_gonzalez, 7h 16m 39s: ping me about it tomorrow. I was in my basement building walls earlier.
[20:51:40] <JamesMGreene> scott_gonzalez: Can you tell me which devices trigger touch events in some cases and mouse events in others?  Also, any related documentation, e.g. conditions under which each type of event is triggered, device market share, etc.
[21:12:56] <JamesMGreene> ?tell scott_gonzalez Can you tell me which devices trigger touch events in some cases and mouse events in others?  Also, any related documentation, e.g. conditions under which each type of event is triggered, device market share, etc.
[21:12:56] <b-ot> JamesMGreene: I’ll tell scott_gonzalez about that.
[21:12:56] <bot-t> JamesMGreene, Okay.
[22:29:24] <jqcommit> 01[13testswarm01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/mcc4Mg
[22:29:24] <jqcommit> 13testswarm/06master 1412cb413 15Timo Tijhof: UAParser: Update to latest version....
[22:51:23] <JamesMGreene> Hey ajpiano and anyone else who might work on the Plugins Registry, looks like the "time ago" is wrong on the site
[22:51:39] <JamesMGreene> e.g. I just published a new plugin and it says "Released 8 hours ago"
[22:53:31] <gnarf> https://github.com/jquery/plugins.jquery.com/issues/75
[22:53:31] <b-ot> gnarf: Issue #75 by gnarf37 (4w 2h 3m 56s): Times issue
[22:59:10] <jqcommit> 01[13testswarm01] 15Krinkle pushed 1 new commit to 06master: 02http://git.io/XPXnrA
[22:59:10] <jqcommit> 13testswarm/06master 1460952f1 15Timo Tijhof: Misc clean up (Add Firefox sample, consistency in linebreaks
[23:06:06] <JamesMGreene> k, thanks gnarf
[23:09:10] <JamesMGreene> Is there any reason that a jQuery plugin needs to not have "jquery." on the front of the actual JS filename? Or is that just a Grunt-suggested standard?
[23:09:24] <JamesMGreene> I really hate that it doesn't have "jquery." in the filenames....
[23:10:03] <gnarf> https://github.com/gnarf37/jquery-requestAnimationFrame/blob/master/src/jquery.requestAnimationFrame.js
[23:10:16] <gnarf> the "name" of the plugin shouldn't include jquery.
[23:10:19] <gnarf> in the json file
[23:20:24] <JamesMGreene> Yeah, I've got no beef with leaving "jquery." out of the package name
[23:20:33] <JamesMGreene> just the actual filename
[23:20:49] <JamesMGreene> (which is what `grunt-init jquery` gives me)
[23:24:07] <gnarf> i was upset with the amount of tweaking i had to do to the grunt init template the last time i tried it
[23:24:17] <gnarf> but it was a while back
[23:34:27] <JamesMGreene> argh, wtf jQuery Plugin Reg >=(
[23:35:07] <JamesMGreene> I get this off-by-1 error on the version all the damn time, when it is NOT true
[23:36:25] <JamesMGreene> "JamesMGreene/jquery.multiclick v0.5.1 multiclick.jquery.json has the following errors: Manifest version (0.5.0) does not match tag (v0.5.1)."
[23:36:42] <JamesMGreene> (but the manifest version is, in fact, 0.5.1)
[23:37:31] <gnarf> https://github.com/JamesMGreene/jquery.multiclick/blob/v0.5.1/multiclick.jquery.json
[23:37:33] <JamesMGreene> Weird timing issue, I assume, but REALLY annoying
[23:37:35] <gnarf> not there it isn't
[23:37:43] <gnarf> https://github.com/JamesMGreene/jquery.multiclick/blob/v0.5.1/multiclick.jquery.json#L5
[23:38:56] <JamesMGreene> O_o
[23:39:16] <JamesMGreene> I guess I'm new to tagging but... when should I run the "git tag v____" command?
[23:39:43] <JamesMGreene> Before commit, after commit but before push, post-push and then send a 2nd push, etc.?
[23:40:31] <gnarf> add all the files, commit the version fix, then tag that commit
[23:41:02] <JamesMGreene> OK, perhaps I've been doing that inconsistently
[23:41:09] <JamesMGreene> thanks
[23:43:57] <sanket> how to update database using nestedsortable
[23:45:13] <JamesMGreene> ^ o_O
