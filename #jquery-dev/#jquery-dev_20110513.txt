[04:50:34] <sean`> I like holdready
[05:38:26] <scott_gonzalez> ?7557
[05:38:35] <scott_gonzalez> ?#7557
[05:38:44] <scott_gonzalez> docs#7557
[05:38:50] <scott_gonzalez> I suck at this
[05:39:15] <scott_gonzalez> ?docs#7557
[05:39:24] <scott_gonzalez> bot-t: is there a list of commands?
[05:39:51] <scott_gonzalez> hmm....guess it would help if bot-t was here...
[07:30:12] <jaubourg> hi
[08:18:41] <jqp> this statement from http://api.jquery.com/jQuery.ajax/ seems misleading: "No onreadystatechange mechanism is provided, however, since success, error, complete and statusCode cover all conceivable requirements."  to my understanding, xhr streaming (see e.g. O'Reilly's "Even Faster Websites", page 115) requires a mechanism to detect the onreadystatechange event
[08:45:09] <jqcommit> jquery: master jaubourg * ceba855 (2 files in 2 dirs): Fixes #9239. If the body is already present in the DOM, use a div within it to perform boxModel-related support tests. Unit test added. - http://bit.ly/kwb4wf
[08:46:54] <timmywil> jaubourg: nice :)
[08:47:51] <jaubourg> I tested it with jQuery scripts loaded inside a div so we should be safe regarding dom no being ready and erroring
[08:48:22] <jaubourg> but I may be wrong
[08:52:12] <jaubourg> and I forgot the iframe
[08:52:15] <jqcommit> jquery: master jaubourg * 0f81cf8 (0 files in 0 dirs): Adds iframe code for #9239. - http://bit.ly/kwgIhK
[08:54:54] <rwaldron> ajpiano yt?
[08:58:33] <jqcommit> jquery: master timmywil * 3486365 (2 files in 2 dirs): Animation callbacks keep their place in the queue stack. Fixes #9220. - http://bit.ly/jOiQTl
[09:00:25] <gnarf> timmywil: nice addition with the promise in that callback order test
[09:00:47] <timmywil> gnarf: thanks :)
[09:12:21] <jqcommit> jquery: master avaly * cbbd7d2 (2 files in 2 dirs): Landing pull request 375. Added test case to support #9237 Fixes #9237. ... - http://bit.ly/iJrAes
[09:14:58] <jqcommit> jquery: master timmywil * a5b7c0f (2 files in 2 dirs): Style edits for pull request 375 - http://bit.ly/leCZBY
[09:17:56] <timmywil> gnarf: perhaps you could take a look at docs#9222
[09:18:06] <gnarf> ?9222
[09:18:10] <gnarf> damn
[09:18:19] <timmywil> http://bugs.jquery.com/ticket/9222
[09:20:34] <gnarf> that is odd...
[09:28:59] <jqcommit> jquery: master Rick Waldron * ec82943 (2 files in 2 dirs): Landing pull request 365. jQuery.buildFragment, ensure doc is a document; Fixes #8950. ... - http://bit.ly/mp8ZsF
[09:29:55] <gnarf> timmywil: hrm...
[09:30:14] <gnarf> some quick experimentation, I don't think jQuery is setting opacity to anything strange there
[09:32:20] <timmywil> gnarf: could it be removing the opacity setting for a brief moment at the end?
[09:32:38] <gnarf> timmywil: that wouldn't make only the letters have backgrounds
[09:32:57] <timmywil> yea, that is weird
[09:36:21] <gnarf> timmywil: http://jsfiddle.net/FesEG/2/
[09:37:27] <gnarf> seems setting opacity to 1 after setting it to something other than 1 or 0 is causing this
[09:39:43] <gnarf> timmywil: http://jsfiddle.net/FesEG/3/
[09:40:41] <timmywil> gnarf: strange, so I guess we can't fix that
[09:40:58] <gnarf> yeah, report to firefox?
[09:41:14] <timmywil> good idea
[09:47:05] <gnarf> timmywil: http://jsfiddle.net/FesEG/4/ without jquery
[09:47:37] <timmywil> cool, good for mozilla
[09:47:58] <gnarf> anyone have a FF3.5/3.6?
[09:48:16] <timmywil> i have a 3.6
[09:48:22] <gnarf> is it present there?
[09:50:05] <timmywil> it's not
[09:50:35] <psayre23> I've got 3.6 on OSx and the only flicker is the opacity changing.
[09:51:06] <psayre23> ok
[09:51:28] <gnarf> yeah, thats a ff4 rendering bug
[09:55:23] <gnarf> removed a bunch of css and it still happens: http://jsfiddle.net/FesEG/5/
[09:56:26] <psayre23> tested: FF3.6 is fine, FF4.0 is busted
[09:57:35] <gnarf> timmywil: u filing ff bug report?
[09:57:39] <timmywil> I commented on one of their existing opacity tickets
[10:01:59] <gnarf> do any of the FF devs hang out with us? :)
[10:09:33] * gnarf shrugs - https://bugzilla.mozilla.org/show_bug.cgi?id=656948 
[10:09:39] <gnarf> let them triage it ;)
[10:11:07] <gnarf> i didn't find a good one
[10:11:09] <gnarf> to comment on
[10:19:13] <timmywil> gnarf: I would include the fiddle you made
[10:19:22] <gnarf> its in the links
[10:19:26] <timmywil> oh you did
[10:19:28] <timmywil> yea just saw
[10:41:20] <jqcommit> jquery: master timmywil * 6f676e6 (2 files in 2 dirs): Use prop to retrieve boolean properties (so the selected hook will be used)
[10:41:20] <jqcommit> jquery: master timmywil * bc82ff0 (2 files in 2 dirs): Make sure setting boolean attributes to the same name sets the property to a boolean type
[10:41:20] <jqcommit> jquery: master commits ec82943...bc82ff0 - http://bit.ly/lGy5jO
[10:48:10] <jqcommit> jquery: master timmywil * cf70249 (1 files in 1 dirs): Removing unnecessary argument type check for boolean hook - http://bit.ly/mgWE4h
[11:24:31] <clarkbox_> danheberden you around?
[11:39:42] <kswedberg> gnarf, timmywil:  that opacity bug reminds me of one in FF2.x where animating opacity to 1 would make text look janky, so we all had to animate to .9999.
[11:41:22] <gnarf> kswedberg: heh - well, that suggestion works ;)
[11:41:31] <gnarf> http://jsfiddle.net/gnarf/FesEG/7/ doesn't blip out in ff4 ;)
[11:42:22] <kswedberg> yeah, I tried it, too. everything old is new again â€¦ or something like that. ;)
[11:45:48] <gnarf> kswedberg: did you add a comment to that guys ticket? :)
[11:46:01] <gnarf> kswedberg: its a hackish workaround - but wtf - if it works....
[11:47:15] <jqp> would it be reasonable to request a new feature in $.ajax() that supports detecting the onreadystatechange event?
[11:47:57] <jqp> without that, i don't think it's possible to implement the xhr streaming technique for comet using jquery
[11:52:18] <gnarf> jqp: if you can write up a good feature request i'm sure people would read it and think about it
[11:52:24] <gnarf> bugs.jquery.com
[11:55:55] <kswedberg> oops. sorry, gnarf. was afk.
[11:56:11] <gnarf> jqp: but i'm pretty sure at the level of abstraction in the current .ajax() its gonna cause issues :)
[11:56:21] <kswedberg> did not add a comment, but will do.
[11:56:49] <gnarf> kswedberg: yeah, i mean if i was that guy, i'd love to know that animating to 0.99999 isn't gonna be buggy, at least until FF4 can fix their shit ;)
[11:57:04] <kswedberg> sure sure.
[11:57:36] <gnarf> someone already confirmed my bug
[11:57:41] <gnarf> its now NEW
[11:57:44] <gnarf> *cheers*
[11:58:26] <kswedberg> cool!
[12:04:33] <kswedberg> ok, just added a comment to that ticket.
[12:07:23] <jqp> gnarf: would my request be more of an 'enhancement' than a 'feature'?
[12:07:36] <gnarf> either makes sense
[12:08:07] <gnarf> i'm leaning enchance
[12:14:15] <jqp> gnarf: the only reference implementation i know of for xhr streaming is in steve souders's book "even faster websites".  presumably it would be helpful to have an example of xhr streaming in the enhancement ticket.  would it not be kosher to closely paraphrase the example implementation from souders's book in the ticket?
[12:14:54] <gnarf> jqp: i assume if you sourced it noone would care much
[12:15:05] <gnarf> give credit where credits due and all
[12:27:38] <gnarf> i kinda wish we had "reduce"
[12:30:49] <brianseeders> maybe look at the xhr streaming solution in socket.io for an example
[13:21:18] <gnarf> do our custom selectors have any sort of xml api flag?
[13:25:06] <gnarf> kswedberg: danheberden: do you guys have opinions re: adding a "jQuery selector" reusable that we can attach to the jQuery extensions to css?  We could mention that in order to ensure best selector performance, its usually better to perform selectors without the jQuery extensions and then filter?
[13:25:33] <kswedberg> gnarf: that has been on my todo list for, like, forever.
[13:25:34] <bot-t> (89 hours 40 mins ago) <timmywil> tell kswedberg http://goo.gl/RfEQe Edits are much appreciated.
[13:25:54] <gnarf> kswedberg: anything other than lack of time to stop you from doing it?
[13:26:06] <kswedberg> nothing but no time.
[13:26:10] <gnarf> k
[13:26:14] <kswedberg> wanna do it?
[13:26:15] <kswedberg> :)
[13:26:15] <gnarf> i'll put it on my todo list as well
[13:26:28] <kswedberg> ok, then we'll have a race!
[13:26:41] <gnarf> its not a race if you plan on letting me win
[13:27:00] <kswedberg> hahahaha. good point.
[13:27:24] <gnarf> kswedberg: i do have a question tho
[13:27:30] <gnarf> how do i make the reusable? :)
[13:27:52] <kswedberg> oh crap. sorry, timmywil. I didn't see your request for my edits on the blog post. bot-t was down. :(
[13:28:37] <kswedberg> gnarf: click the Reusable link at the bottom of the left column. Add a title and the note and then save it.
[13:28:44] <timmywil> kswedberg: it's cool, john made some edits. thanks tho
[13:28:47] <gnarf> aha!
[13:28:55] <gnarf> kswedberg: i looked over that button like 4 times
[13:29:02] <kswedberg> :)
[13:29:43] <kswedberg> gnarf: then, in each post, add a Custom Field with Note as the name and either the title the ID of the Reusable as the value
[13:30:04] <kswedberg> *the title or the ID
[13:30:20] <gnarf> { Note: "jQuery selector extension" } ?
[13:30:54] <gnarf> kswedberg: where will this add the text?
[13:30:57] <gnarf> bottom of examples?
[13:31:25] <kswedberg> gnarf: above the examples. in a section titled "Additional Notes"
[13:31:50] <gnarf> kswedberg: k
[13:33:22] <kswedberg> gnarf: http://swedberg.us/grab/addlnote-20110513-163309.png
[13:33:47] <kswedberg> ^ for example
[13:34:50] <gnarf> kswedberg: http://oksoclap.com/pqR9fwnxx4 how does this look?
[13:46:32] <kswedberg> gnarf: nice work!
[13:48:14] <gnarf> kswedberg: touched it again...
[13:48:24] <gnarf> dunno if you were still lurking the clap
[13:48:39] <kswedberg> oh hi. I'm back in there.
[13:48:53] <kswedberg> "still lurking the clap" lol
[15:07:17] <jaubourg> hi there
[15:20:19] <gnarf> ello jaubourg
[15:21:16] <gnarf> some guy (jqp) was in here asking about trying to do some xhr streaming technique
[15:22:19] <gnarf> i thought he was gonna file a ticket, but now i can't find it
[15:25:02] <jaubourg> yeah, that's a reason why I wanna have progress callbacks on deferreds ;)
[15:25:15] <jaubourg> so that we can go forward in this direction
[15:33:52] <gnarf> jaubourg: coo
[15:34:01] <gnarf> jaubourg: wish you were here to tell him that
[15:34:02] <gnarf> :)
[15:34:21] <gnarf> i wish he had made that ticket
[15:39:17] <jaubourg> gnarf: do you know where to put proposals for 1.7?
[15:39:21] <jaubourg> I need to post mine
[15:39:30] <gnarf> jaubourg: nope, i still need to write mine...
[15:39:58] <jaubourg> https://spreadsheets.google.com/a/creative-area.net/viewform?hl=en&authkey=CPmgicsO&formkey=dG0yTEs2ZTFWQUhDRUp5dzRyc3NwV2c6MA
[15:39:58] <gnarf> jaubourg: i'd look at it if you wanna share :)
[15:40:02] <jaubourg> :P
[15:40:28] <jaubourg> well, my proposal is all in the 1.7/callbacks branch
[15:43:24] <gnarf> im stuck in UI atm
[15:43:32] <gnarf> and color
[15:43:39] <gnarf> don't wanna stretch too thin
[15:43:40] <gnarf> :)
[15:43:48] <gnarf> might just wait for 1.8
[15:44:56] <gnarf> that bug # field should say something like "And if there isn't... you should make one!"
[15:47:18] <jaubourg> hehe
[15:49:31] <jaubourg> gnarf: if you have time to read this, any feedback is appreciated
[15:49:35] <jaubourg> http://oksoclap.com/Yss96ge7f2
[15:53:55] <gnarf> hot
[15:54:14] <jaubourg> yeah, I think it can be really cool
[15:54:28] <jaubourg> I like the idea of jQuery.Callbacks()
[15:54:41] <gnarf> yeah
[15:54:47] <jaubourg> one callbacks list to rule them all :P
[15:54:57] <jaubourg> proposal clear enough?
[15:55:58] <gnarf> i think so
[15:56:11] <gnarf> i was definately ready for the $.Callbacks idea before it got there
[15:56:19] <gnarf> like so i wanted it in my jQueries
[15:56:21] <jaubourg> good :)
[15:57:49] <jaubourg> added where I was at in the branch
[15:58:08] <jaubourg> and you, unnamed people should write your names :P
[15:59:37] <gnarf> jaubourg: could this be used for events?
[16:00:15] <jaubourg> that's my hope
[16:00:33] <jaubourg> but dealing with exceptions could be tricky, I dunno how events react regarding exceptions
[16:01:04] <jaubourg> as of now $.Callbacks would be deadlocked because it ensures some ordering constraints
[16:01:23] <gnarf> "removable" ?
[16:01:25] <jaubourg> I'd need to look into adding a flag for this situation
[16:01:53] <jaubourg> how does it work when an event handler throws an exception right now?
[16:02:12] <gnarf> jaubourg: good question
[16:04:28] <gnarf> queues?
[16:05:51] <jaubourg> yeah, I was thinking about adding queues in there
[16:06:49] <jaubourg> everything that can be added with simple logic in it will cost less code size then by re-implementing the list from scratch for a special case
[16:07:15] <gnarf> ya
[16:08:09] <gnarf> like each "resolve" fires one function and removes it from the bucket
[16:08:22] <jaubourg> yep
[16:08:29] <gnarf> passing the resolve function as the first param
[16:08:51] <gnarf> could be done in queue
[16:09:05] <jaubourg> exactly
[16:09:21] <jaubourg> try & stay generic enough in the main object
[16:10:02] <gnarf> but that FIFO resolve logic might be useful
[16:10:28] <jaubourg> yes, then let's make a $.Queue and be done with it ;)
[16:10:39] <gnarf> right
[16:10:50] <jaubourg> just like we have $.Deferred
[16:15:55] <jaubourg> proposal submitted
[16:16:20] <gnarf> \o/
[16:16:46] <gnarf> autostart could be a $.Queue flag
[16:16:51] <gnarf> :)
[16:17:16] <jaubourg> with that and ajaxHooks, I doubt I'll have time to work on animate right now sadly
[16:17:54] <jaubourg> yeah, determining useful and meaningful flags is key here
[16:19:21] <gnarf> is there any way to remove a fn from the callbacks?
[16:20:00] <jaubourg> yep
[16:20:09] <gnarf> how about direct access to the array?
[16:20:18] <jaubourg> oh god no
[16:20:20] <gnarf> (queue would need it)
[16:20:47] <jaubourg> queue would not, it would need to know if there are still callbacks and have a way to empty the queue
[16:20:51] <jaubourg> and that's about it
[16:20:51] <gnarf> ?queue
[16:20:52] <bot-t> .queue([queueName]): Show the queue of functions to be executed on the matched elements. http://api.jquery.com/queue/
[16:20:59] <gnarf> .queue() returns the queue
[16:21:13] <gnarf> array of functinos
[16:21:49] <jaubourg> who in there right mind would do something like this? Well, it could return the Queue object if we were to use Callbacks, not the array
[16:21:50] <gnarf> in effects code i use that too to slice the queue functions I'm "appending" into the queue after the current function finishes
[16:22:15] <gnarf> because i can't effectively use a second queue right now with .animate()
[16:22:58] <gnarf> i'm boxxed into "fx" with .animate()
[16:23:03] <jaubourg> well, in Callbacks, you can add callbacks in bunch
[16:23:14] <jaubourg> Callbacks.add( fn1, fn2, ... )
[16:23:29] <gnarf> can you specify position?
[16:23:35] <jaubourg> nope
[16:23:55] <gnarf> always last?
[16:24:02] <jaubourg> yep
[16:24:24] <jaubourg> if you have "unique" flag then it will not add in if the callback exists
[16:24:40] <gnarf> unless there is the other flag to move it to the end
[16:24:48] <jaubourg> if you have "relocate" and the fn is already in, it will remove the previous occurence and add at the end
[16:24:58] <jaubourg> yes
[16:25:15] <gnarf> yeah, if I could start a second queue that would be nice
[16:25:26] <gnarf> :)
[16:25:44] <jaubourg> function() { otherQueue.fire() } added into the first queue?
[16:26:23] <gnarf> queue(function effecty() { new queue - queue some animations - next() })
[16:26:46] <jaubourg> problem is you have one fx queue per element, heh
[16:27:04] <gnarf> problem is .animate ONLY uses fx queue
[16:27:24] <gnarf> if I could .animate(props, { duration: 250, queue: "otherqueue" })
[16:27:27] <gnarf> i could already do that
[16:27:31] <gnarf> but i can't
[16:27:41] <jaubourg> make a proposal and add it in :P
[16:28:04] <jaubourg> though good luck with the $.fn.promise ;P
[16:28:27] <gnarf> yeah
[16:29:01] <gnarf> i also kinda want to suggest making some convention for "auto-start" queues
[16:29:24] <gnarf> but - thats like a total aside, and would like break queueing
[16:29:31] <gnarf> in old stuff
[16:29:57] <gnarf> i really hate the "inprogress"
[16:30:10] <gnarf> its like the thorn in my "clean it up" side
[16:30:40] <jaubourg> oh yes, I so agree on this one
[16:31:03] <gnarf> why not just a property of the queue itself?
[16:31:54] <jaubourg> because it's an array in current implementation :P
[16:32:06] <jaubourg> but a field would work for sure
[16:32:27] <jaubourg> q.inprogress = true
[16:32:41] <gnarf> "simulating" that inprogress thing would be a bitch tho for the external api
[16:33:21] <jaubourg> well, it's only used for "fx"
[16:33:27] <jaubourg> afaij
[16:33:29] <jaubourg> k
[16:33:31] <gnarf> yup
[16:33:40] <jaubourg> so purely internal
[16:34:03] <gnarf> not really, because forever we've exposed it as .queue() === ["inprogress", fn, fn, fn]; and people use it
[16:34:23] <gnarf> or at least "expect" it
[16:34:27] <jaubourg> ><
[16:34:40] <jaubourg> I so hate how we make our guts wide opened all the time
[16:35:11] <jaubourg> but it somehow makes sense, doesn't it? to have a mean to put inprogress whenever you need it
[16:35:14] <gnarf> http://bugs.jquery.com/ticket/9280
[16:35:59] <gnarf> jaubourg: yeah, like if you want to "prequeue" something you have to .queue().slice(1,0,fn)
[16:38:07] <jaubourg> but you could have a filter on the Callbacks which would transform "inprogress" into function() { q.inprogress = true; }
[16:38:18] <jaubourg> and that would work
[16:38:49] <gnarf> "inprogress" never actually gets fired
[16:39:15] <gnarf> .dequeue() skips it
[16:39:31] <gnarf> it just sits there until nothing else is there
[16:40:04] <gnarf> and is used purely as a flag to make .queue("fx", fn) automatically add "inprogress" and .dequeue()
[16:40:40] <jaubourg> I still don't quite get what it does exactly... I mean this thing seems esoteric to me... what's the use?
[16:41:24] <jaubourg> why not have a $.Queue constuctor with a "inprogress" flag of sort?
[16:41:26] <gnarf> auto-starting the fx queue if its empty
[16:41:44] <gnarf> thats its use
[16:42:18] <gnarf> it "queues" inprogress when a function starts, and removes it when next() is called but only on the "fx" queue
[16:42:44] <gnarf> so if .queue[0] === "inprogress" don't auto-start
[16:42:55] <jaubourg> yeah but why? It's the practical "in your face" example I need
[16:43:17] <gnarf> $elem.queue(fn); <-- calls fn immediately if the queue is empty
[16:43:27] <gnarf> $elem.queue("second", fn); <--- doesn't
[16:44:29] <gnarf> i dunno why they used "inprogress"
[16:44:37] <jaubourg> neither do I :/
[16:44:59] <gnarf> i assume its cuz they didn't know how to know wether or not to "dequeue" the function as it was added
[16:45:07] <jaubourg> wouldn't it be simpler to have a map of auto-starting queues so that people can make their queues auto-startable?
[16:45:22] <gnarf> jaubourg: that would be another one that would rock
[16:45:32] <gnarf> but i was thinking even easier, just name your queue "+queue"
[16:45:35] <gnarf> and it autostarts
[16:45:59] <gnarf> but map works too
[16:46:12] <gnarf> $.Queue.autostart = { fx: 1 };
[16:46:25] <gnarf> if we had a Queue.running flag
[16:48:19] <jaubourg> heh
[16:49:24] <gnarf> basically the "last" function of the autostart queues is Queue.running = false;
[16:49:37] <gnarf> makes it easier
[16:49:57] <jaubourg> yeah, I thought about adding an onEnd handler to Callbacks
[16:50:08] <gnarf> if you call .fire() on an empty list
[16:50:23] <jaubourg> called after all handlers have been called
[16:50:41] <gnarf> with return values? :)
[16:50:57] <gnarf> (j/k)
[16:50:59] <jaubourg> what do you mean? like when?
[16:51:26] <gnarf> like onEnd = function( firstFuncsReturn, secondFuncsReturn ) {
[16:51:39] <gnarf> useless
[16:51:41] <gnarf> prolly
[16:51:47] <jaubourg> hehehe
[16:53:30] <gnarf> queues make me famous on SO: http://stackoverflow.com/questions/3314877 :)
[16:54:22] <gnarf> http://oksoclap.com/ccZPXIAkUV <-- input?
[16:55:33] <jaubourg> looks good
[16:55:51] <gnarf> my response has been added
[16:56:47] <jaubourg> you'll need some mean to keep track of "fx" queues to know when to resolve animation deferred
[16:56:49] <jaubourg> s
[17:02:56] <gnarf> https://github.com/gnarf37/jquery/commit/d3eb1c1120f55a70a03bcb1545bc9a36cb3af205
[17:03:20] <gnarf> ?boom
[17:03:21] <bot-t> Did you are unimpressed? and now?
[17:06:44] <jaubourg> boom, no auto-start :P
[17:09:34] <gnarf> yeah, well, id rather queue and then use .dequeue()
[17:09:45] <gnarf> than splice the original
[17:09:46] <gnarf> :)
[17:13:39] <jaubourg> how about a "fx:queue-name" system?
[17:14:01] <gnarf> for autostarting?
[17:14:15] <jaubourg> and we can test if the queue is /^fx(?:$|:)/
[17:14:21] <jaubourg> ;)
[17:14:37] <gnarf> how is that any worse than /^+|fx/
[17:14:43] <gnarf>  /^\+|fx/
[17:14:54] <jaubourg> because you'd catch fx23?
[17:15:03] <gnarf>  /^\+|fx$/
[17:15:12] <gnarf> nvm
[17:15:15] <gnarf> whatever
[17:15:21] <gnarf> regexp fail for me today
[17:15:22] <gnarf> :(
[17:15:30] <jaubourg> + would work too yes
[17:15:32] <gnarf> im usually great with em
[17:16:26] <jaubourg> I suck at them really
[17:16:37] <jaubourg> took me a lot of time to get used to then in the first place
[17:16:40] <jaubourg> them
[17:19:32] <timmywil> where's the 1.7 spreadsheet?
[17:21:00] <jaubourg> dunno, I'd like to see it too ;)
[17:32:40] <kswedberg> gnarf: you there?
[17:36:49] <kswedberg> ?tell gnarf http://api.jquery.com/button-selector/ we're all set with the Reusables
[17:36:50] <bot-t> kswedberg, Okay.
[17:37:58] <jaubourg> hey karl
[17:38:05] <kswedberg> hey jaubourg
[17:38:20] <timmywil> nice http://daftpunk.themaninblue.com/
[17:39:25] <timmywil> html5 + daft punk
[17:40:00] <kswedberg> pretty crazy
[17:41:21] <kswedberg> jaubourg: I'm using deferreds for a youtube channel I'm putting together for a client. makes caching requests stupidly easy. loving it.
[17:41:29] <jaubourg> :)
[17:41:32] <jaubourg> coolness
[17:42:46] <kswedberg> also using a $.Deferred so I can execute a bunch of stuff when youtube fires their onYouTubePlayerReady event. totally hot, man. I'm indebted to you. :D
[17:44:35] <jaubourg> haha, well, it makes things easier, I know one of my partners was working on a gmail extension and was amazed at how is code was simplified by using deferreds
[17:45:54] <jaubourg> I'm just happy to see people having more free time because of some code I made ;)
[17:46:11] <kswedberg> yeah! I started thinking, "oh crap, I have to set flags all over the place again" and then I realized, "nope! just defer it, baby!"
[17:46:28] <jaubourg> :)
[17:47:09] <jaubourg> proposal for 1.7 is to add progress callbacks and scrap _Deferred and publish $.Callbacks instead
[17:47:43] <kswedberg> interesting.
[17:48:03] <jaubourg> http://oksoclap.com/Yss96ge7f2
[17:48:08] <jaubourg> if you're curious
[17:48:16] <kswedberg> not sure exactly what progress callbacks are. sounds like the step callback for animate?
[17:48:57] <kswedberg> oh yeah. sounds cool
[17:50:20] <kswedberg> that could come in really handy
[17:50:24] <jaubourg> should please people asking why they cannot re-resolve a defer
[17:50:34] <jaubourg> "use Callbacks"
[17:51:14] <jaubourg> had this in the back of my mind while I was working on _Deferred but didn't have time to look into it
[17:52:01] <kswedberg> :) nice
[17:52:23] <jaubourg> one step closer to Promise/A too
[17:52:35] <jaubourg> only difference after that is then not acting like pipe
[17:53:09] <kswedberg> you're a madman
[17:53:23] <kswedberg> (in the best possible sense of the term ;-) )
[17:53:58] <jaubourg> hehe
[17:54:30] <jaubourg> making when work with progress callbacks was the thing I was the most worried about but it seems to work like a charm
[17:54:50] <jaubourg> hey darcy
[17:54:58] <darcyclarke> hey julian
[17:55:07] <jaubourg> sup?
[17:55:32] <darcyclarke> chillen like a villian, you?
[17:56:03] <gnarf> kswedberg: hot
[17:56:05] <jaubourg> preparing to go to bed because I should get some sleep
[17:56:19] <jaubourg> ajaxHooks in the pipe, 1.7 proposals submitted ;)
[17:56:53] <kswedberg> hey gnarf. now we just gotta add the Note (and Notemeta) to the other selectors. :)
[17:57:14] <darcyclarke> jaubourg you're a beast, get some sleep
[17:57:53] <jaubourg> sleep is for sissies :P
[17:58:01] <gnarf> kswedberg: on it
[17:58:06] <gnarf> later tonght
[17:58:27] <kswedberg> awwwesooommmee gnarf. thanks so much!
[17:58:27] <jaubourg> I think I fixed 3 or 4 blockers lately... now that feels veeeeery good
[17:58:41] <kswedberg> jaubourg: show off.
[17:58:42] <kswedberg> ;)
[17:58:46] * jaubourg flexes
[17:58:52] <jaubourg> :P
[17:59:12] * gnarf feints in admiration
[17:59:14] <jaubourg> not so sure about the latest fix for this background thingy in support though
[17:59:35] <jaubourg> I really hope it won't trigger the infamous DOM IS NOT READY DUMBASS exception
[18:00:05] <gnarf> jaubourg: i wish that was the real exception
[18:00:11] <jaubourg> tried to check for it in the unit test but if anyone has a case when the exception might be triggered, I'll take it
[18:03:37] <kswedberg> aight folks. gotta go.talk to ya'll later
[18:05:50] <gnarf> damn no more kswedberg
[18:05:51] <bot-t> (29 mins 1 sec ago) <kswedberg> tell gnarf http://api.jquery.com/button-selector/ we're all set with the Reusables
[18:06:18] <gnarf> i was gonna ask about that selector category again
[18:06:38] <gnarf> "Selectors -> jQuery Extensions"  make sense as a category for all the selectors like :first :last :button :etc
[18:08:27] <gnarf> "Selectors -> jQuery selectors" ?
[18:09:00] <gnarf> anyone else have an opinion?
[18:12:03] <gnarf> maybe "Selectors -> Non-Standard" ?
[18:12:17] <gnarf> is there an official name for those?
[18:22:14] <gnarf> is http://www.w3.org/TR/2001/CR-css3-selectors-20011113/ the most recent selectors spec? it doesn't mention http://api.jquery.com/attribute-contains-prefix-selector/
[18:27:18] <gnarf> ?tell kswedberg Damnit... http://api.jquery.com/attribute-not-equal-selector/ -- the '=' split logic for this plugin sucks... i can't seem to get the "=" or anything after it to show up in that template...
[18:27:18] <bot-t> gnarf, Okay.
[18:39:32] <gnarf> hrm
[18:40:00] <gnarf> :file selector suggests using input:file instead of input[type="file"]
[18:40:10] * gnarf shakes head
[18:41:39] <gnarf> can i suggest we deprecate like half of these :selectors? :)
[18:44:06] <gnarf> http://api.jquery.com/password-selector/
[18:44:22] <gnarf> why mention the awesome CSS way to do it then suggest the other way again :)
[19:09:01] <gnarf> ?tell kswedberg hey - http://oksoclap.com/pqR9fwnxx4 line 40+ -- some notes I had while I went through all of these...
[19:09:02] <bot-t> gnarf, Okay.
[19:11:05] <gnarf> I really think we should deprecate :file :image :password :radio :reset :submit and :text -- they are all doable by [type="*"]
[19:11:34] <gnarf> it just encourages using a non-standard selector...
[19:11:41] <gnarf> to even have them
