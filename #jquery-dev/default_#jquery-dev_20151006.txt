[02:19:47] <doesallmagic2> Project jQuery Core Periodic build #274: STILL UNSTABLE in 23 min: http://jenkins.jquery.com/job/jQuery%20Core%20Periodic/274/
[03:01:27] <doesallmagic2> Project jQuery Core Periodic Basic build #17: STILL UNSTABLE in 12 min: http://jenkins.jquery.com/job/jQuery%20Core%20Periodic%20Basic/17/
[04:49:28] <doesallmagic2> Project jQuery Core Compat Periodic build #254: STILL UNSTABLE in 51 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat%20Periodic/254/
[07:33:51] <jqcommit> [13jquery] 15rostacik opened issue #2631: not well-formed error on Firefox 02http://git.io/vcdtU
[11:00:19] <jqcommit> [13jquery] 15gibson042 closed issue #2631: not well-formed error on Firefox 02http://git.io/vcdtU
[11:04:52] <ray_lam> Hello,
[11:05:11] <ray_lam> I had a question about a commit into core jQuery
[11:05:13] <ray_lam> https://github.com/jquery/jquery/commit/faf295a6d85ea716bd795609efdd855938144512
[11:05:32] <ray_lam> I noticed that this was committed to the compat branch and not the master
[11:05:45] <ray_lam> and thus it didn't make it into the jquery 1.11.3 release
[11:06:01] <ray_lam> are there any plans to incorporate this commit before jquery 3.0?
[11:51:51] <jqcommit> [13jquery] 15hezedu opened issue #2632: why xhr.getAllResponseHeaders() get the nonexistent header? 02http://git.io/vcFMV
[12:01:34] <jqcommit> [13jquery] 15hezedu closed issue #2632: why xhr.getAllResponseHeaders() get the nonexistent header? 02http://git.io/vcFMV
[12:29:16] <gnarf> ray_lam: the issue was labeled 'compat-only' https://github.com/jquery/jquery/issues/1840 
[12:32:03] <gnarf> ray_lam: it appears the bug is in code that isn't used by 2.0/3.0 branches
[13:09:57] <ray_lam> gnarf: this is correct, but it is a bug that was introduced in 1.11.2 and was not fixed in the 1.11.3 release
[13:10:32] <ray_lam> i was just wondering if there will be a fix for the issue in a 1.11.4 release, or whether we will have to wait until 3.0
[13:29:31] <gnarf> ray_lam: sorry thanks for clarifying
[13:29:36] <gnarf> cc timmywil ^^^ ?
[13:30:17] <gnarf> ray_lam: timmywil: seems like the kind of thing we might want to "hotfix" -- mem leaks in ie8?
[13:48:55] <m_gol> ray_lam gnard: compat is the branch for jQuery 1 & now the upcoming jQuery Compat 3.0, master was for jQuery 2 & now the upcoming jQuery 3.0
[13:49:10] <m_gol> gnarf ^_^
[13:49:36] <gnarf> m_gol: i think the question is basically - are we releasing a 1.11.4 with the fix
[13:49:48] <m_gol> gnarf ray_lam timmywil: this issue is almost a year old, if we wanted a hotfix it should have been done a year ago
[13:50:07] <m_gol> not sure if it's worth now
[13:50:17] <m_gol> it would certainly not be "hot" :P
[13:50:33] <ray_lam> so it will be released with the jQuery 3.0-compat release?
[13:52:39] <m_gol> ray_lam: yes, it will certainly be included in jQuery Compat 3.0.0
[13:53:02] <ray_lam> m_gol: okay, thank you very much
[13:53:19] <m_gol> ray_lam: how big a problem is this for you?
[13:54:26] <m_gol> ray_lam: this wasn't introduced in 1.11.2, the original reporter had a test case with 1.11.1
[13:55:10] <ray_lam> You're right -- we skipped 1.11.1 and went right to 1.11.2, which is when we started seeing the issue
[13:55:29] <m_gol> these lines were there at least since Sep 2, 2013 (https://github.com/jquery/jquery/commit/badcd1b6f301e6253405f17759c1270549a34e12)
[13:55:38] <m_gol> so it was a problem in 1.11.0 already
[13:55:48] <ray_lam> It has caused a pretty big problem -- much of our client base is unfortunately still on IE8
[13:55:52] <m_gol> so there's no regression here IMO, it's been leaking for the entire 1.11 life
[13:56:16] <m_gol> hmm, if you didn't see a problem in 1.11.0 then it might be a different issue
[13:56:23] <ray_lam> If we aren't going to hot fix it, I can apply the commit to our own copy of jQuery manually
[13:56:41] <ray_lam> We skipped 1.11.0 as well.
[13:56:50] <m_gol> a comment on the issue (https://github.com/jquery/jquery/issues/1840#issuecomment-118327021) claims it's been leaking since PR 1518 but it seems unrelated
[13:56:55] <jqcommit> [13jquery] 15mcpDESIGNS opened issue #2633: $.param(undefined) - throws Cannot read property 'jquery' of undefined 02http://git.io/vcb2S
[13:57:25] <m_gol> ray_lam: what did you use before 1.11.2?
[13:58:39] <ray_lam> m_gol: I am checking...
[13:59:00] <m_gol> 1.10.0 had this support test nearly exactly the same so it should leak as well: https://github.com/jquery/jquery/blob/1.10.0/src/support.js#L121-L127
[14:00:25] <m_gol> it was OK in 1.8.3: https://github.com/jquery/jquery/blob/1.8.3/src/support.js#L114-L122 and broken in 1.9.0: https://github.com/jquery/jquery/blob/1.9.0/src/support.js#L122-L131
[14:00:59] <m_gol> I don't think we can call it a hotfix when it has been broken for over 2.5 years :-)
[14:02:28] <ray_lam> Sorry, i was mistaken -- we upgraded from 1.11.1 to 1.11.2, and it is probable that we were suffering from the memory leak even with 1.11.1 but did not notice because our IE8 client base was not as large back then
[14:02:43] <m_gol> this is the commit that introduced the leak: https://github.com/jquery/jquery/commit/c8c6ab6924b48832bfc2b94d40887b2f1b6c891e, back in Dec 2012
[14:03:45] <m_gol> yeah, so I don't think we'll backport the patch to 1.11 then, it's been leaking long enough, the fact that we didn't get many bug reports about that seems to indicate it hasn't been such a widespread problem
[14:03:57] <m_gol> but it'll be fixed in 3.0.0, we just need to ship it ;)
[14:04:09] <ray_lam> before that we were using 1.10.2
[14:04:31] <ray_lam> right, we were using 1.8.3 i believe and then skipped to 1.10.2
[14:04:37] <ray_lam> and didn't have a large ie8 client base at that time
[14:04:37] <m_gol> ray_lam: you can try the first alpha: https://code.jquery.com/jquery-compat-3.0.0-alpha1.js, just don't deploy it to production :-)
[14:05:02] <ray_lam> so we did not notice it until recently when we released to some enterprise clients
[14:05:14] <ray_lam> so it sounds like this leak has existed for years then
[14:05:24] <m_gol> yup, for 3 years
[14:05:28] <ray_lam> okay, this makes sense
[14:05:31] <ray_lam> we will wait for 3.0 then
[14:05:35] <m_gol> ray_lam: do you know if they plan to upgrade soon? IE8 looses upstream support on Jan 12, 2016
[14:05:37] <ray_lam> and until then we will apply the fix locally
[14:05:40] <ray_lam> thank you very much for your help
[14:05:51] <m_gol> from this date only Enterprise Mode in IE 11 will be supported
[14:05:55] <ray_lam> IE8 upgrade is a long and harrowing story....
[14:06:10] <ray_lam> we know all about the deprecation and loss of support -- we are working on it...
[14:06:14] <m_gol> :)
[14:06:20] <ray_lam> thank you very much, all
[14:06:25] <m_gol> ray_lam: do you support Opera Presto? i.e. 12.1x
[14:06:40] <ray_lam> we do not
[14:06:51] <m_gol> ok, so you should be safe to backport https://github.com/jquery/jquery/commit/faf295a6d85ea716bd795609efdd855938144512 locally
[14:07:16] <m_gol> ray_lam: you're welcome, I'm glad it's not sth we broke in a patch release, that'd be bad :-)
[14:07:27] <ray_lam> :)
[14:31:18] <dpolivy> Any jQuery Mobile devs around? Could use some assistance with a bug.
[16:23:28] <jqcommit> [13api.jquery.com] 15AurelioDeRosa opened pull request #813: Document that addClass and removeClass change the property (06master...06class-methods) 02http://git.io/vcNBF
[19:24:22] <7GHABCULO> [13sizzle] 15timmywil closed pull request #355: Selector: speed up QSA path with a real ID prefix (06master...06id-qsa) 02http://git.io/vcaax
[19:24:22] <17WAASO3D> [13sizzle] 15timmywil pushed 1 new commit to 06master: 02http://git.io/vcAn0
[19:24:22] <17WAASO3D> 13sizzle/06master 141a8958f 15Timmy Willison: Selector: speed up QSA path with a real ID prefix...
