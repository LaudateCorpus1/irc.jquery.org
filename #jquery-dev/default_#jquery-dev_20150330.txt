[04:47:57] <doesallmagic2> Project jQuery Migrate Core build #110: SUCCESS in 1 min 56 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%20Core/110/
[05:01:34] <bepolite> Please who is responsible for managing https://api.qunitjs.com/?
[05:06:03] <arthurvr> bepolite: Do you have any questions? The repo is over at https://github.com/jquery/api.qunitjs.com/commits/master
[05:06:49] <bepolite> I just wanted to find out when things get pushed to the staging server
[05:07:07] <bepolite> Also, I noticed that all the jquery websites have SSL encryption but this is hardly ever used
[05:07:31] <bepolite> I mean when someone types http://jquery.com/ why does he get redirected to https://jquery.com/
[05:07:37] <bepolite> arthurvr ^^
[05:07:58] <arthurvr> Thatâ€™s documented here I believe: https://github.com/jquery/contribute.jquery.org/blob/0736bbe378b2fefbd17fd769bc84d689a4b41a14/pages/web-sites.md#deploying-to-staging-and-production-environments
[05:09:23] <arthurvr> And re https: dunno :D Iâ€™m sure the infrastructure guys will have a good reason for that.
[05:10:51] <bepolite> who are they arthurvr 
[05:11:19] <m_gol> @bepolite: #infrastructure channel
[05:11:22] <arthurvr> #jquery-infrastructure ;)
[05:11:27] <m_gol> right, sorry :)
[05:22:11] <bepolite> arthurvr, 
[05:22:22] <bepolite> On  which occastion is the version increased in the package.json file
[05:24:27] <arthurvr> We generally just bump after one or a few commits. https://github.com/jquery/api.jquery.com/commits/master
[05:25:24] <arthurvr> But you shouldnâ€™t really care about that. The one that merges your PR will do it.
[05:27:43] <arthurvr> bepolite: ^^
[05:28:15] <bepolite> nice
[05:30:18] <doesallmagic2> Project jQuery Migrate Core Compat build #309: SUCCESS in 2 min 18 sec: http://jenkins.jquery.com/job/jQuery%20Migrate%20Core%20Compat/309/
[06:29:04] <jqcommit> [13qunit] 15BraulioVM opened pull request #803: Fix autostart test (06master...06fix-autostart-tests) 02http://git.io/j6vY
[07:15:42] <scott_gonzalez> Does anyone know if there's a way to detect phantomjs from inside a script?
[08:02:14] <dcherman> scott_gonzalez: good old userAgent sniffing.  or you could feature detect webkit features with a lack of Function.prototype.bind, but that depends on PhantomJS continuing to have silly mistakes in it.
[08:02:39] <scott_gonzalez> userAgent sniffing is probably good enough.
[08:03:06] <scott_gonzalez> I just want to inject some specific code for wiring up phantom to node.
[09:09:00] <jqcommit> [13jquery] 15AlexanderOMara opened pull request #2179: Core: Follow the AMD specification for define (06master...06amd-define-spec-fix) 02http://git.io/ji3n
[09:21:41] <bepolite> hey arthurvr 
[09:25:03] <jqcommit> [13jquery] 15gibson042 opened pull request #2180: [WIP] CSS: Ignore the CSS cascade in show()/hide()/etc. (06master...061767) 02http://git.io/jiWy
[09:26:25] <arthurvr> bepolite: hey
[09:26:42] <bepolite> arthurvr, I've added a new commit which solved the issues
[09:26:58] <bepolite> I just wanted to know how the proceed
[09:27:48] <arthurvr> bepolite: When one of us has the time theyâ€™ll review it and merge if itâ€™s okay :-)
[09:28:21] <bepolite> Okay It seems github automatically adds the new commit to my old pull request :)
[09:28:25] <bepolite> that's just great
[09:28:39] <arthurvr> bepolite: it is :D
[09:28:54] <bepolite> I had no idea. Thats the worry I had
[09:47:03] <scott_gonzalez> bepolite: Pull requests are tied to branches, not commits, so they automatically update as you push to your branch.
[09:47:11] <scott_gonzalez> But be aware that nobody gets notified when you push.
[09:47:24] <scott_gonzalez> So if you push changes and want another review, you should leave a comment on the PR.
[09:55:04] <jqcommit> [13jquery] 15mzgol opened issue #2181: Test all factory use cases from intro.js 02http://git.io/jiKg
[10:00:46] <bepolite> scott_gonzalez, +1 for the heads up
[10:01:05] <jqcommit> [13jquery] 15mzgol pushed 1 new commit to 06master: 02http://git.io/jiPH
[10:01:05] <jqcommit> 13jquery/06master 1406f6cd1 15MichaÅ‚ GoÅ‚Ä™biowski: Core: Update tested jsdom, drop obsolete workarounds...
[10:05:11] <doesallmagic2> Project jQuery Core build #1311: SUCCESS in 4 min 19 sec: http://jenkins.jquery.com/job/jQuery%20Core/1311/
[10:05:12] <doesallmagic2> m.goleb: Core: Update tested jsdom, drop obsolete workarounds
[10:19:48] <jqcommit> [13jquery] 15mzgol opened pull request #2182: CSS: Don't expose jQuery.swap (06master...06swap) 02http://git.io/jiQ1
[10:40:43] <jqcommit> [13jquery] 15dmethvin pushed 1 new commit to 06master: 02http://git.io/jipX
[10:40:43] <jqcommit> 13jquery/06master 147b09235 15Dave Methvin: Wrap: Support .unwrap( selector) for selective unwrapping...
[10:41:39] <jqcommit> [13jquery] 15dmethvin pushed 1 new commit to 06compat: 02http://git.io/jihU
[10:41:39] <jqcommit> 13jquery/06compat 14e38138a 15Dave Methvin: Wrap: Support .unwrap( selector) for selective unwrapping...
[10:53:09] <doesallmagic2> Project jQuery Core build #1312: UNSTABLE in 12 min: http://jenkins.jquery.com/job/jQuery%20Core/1312/
[10:53:09] <doesallmagic2> Dave Methvin: Wrap: Support .unwrap( selector) for selective unwrapping
[11:05:49] <m_gol> so, I'm writing a patch that would need a PATCH test case
[11:05:56] <m_gol> but that breaks a little too often on BrowserStack
[11:07:59] <doesallmagic2> Project jQuery Core Compat build #576: UNSTABLE in 14 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/576/
[11:08:00] <doesallmagic2> Dave Methvin: Wrap: Support .unwrap( selector) for selective unwrapping
[11:22:05] <jqcommit> [13jquery] 15mzgol opened pull request #2183: Ajax: Use the native XHR for all non-local requests in IE9+ (06compat...06cors-activex) 02http://git.io/jPZa
[11:49:34] <jqcommit> [13api.jquery.com] 15timmywil opened issue #689: jQuery.fn.unwrap() now supports selector 02http://git.io/jPaO
[12:31:31] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06compat: 02http://git.io/jPdo
[12:31:31] <jqcommit> 13jquery/06compat 147bce5b0 15Timmy Willison: Attributes: revert returning null for non-existant attributes...
[12:33:37] <jqcommit> [13jquery] 15timmywil pushed 1 new commit to 06master: 02http://git.io/jPFl
[12:33:37] <jqcommit> 13jquery/06master 142905961 15Timmy Willison: Attributes: revert returning null for non-existant attributes...
[12:38:50] <sizcommit> [13sizzle] 15ldragoncg opened issue #329: Sizzle implementation in jQuery  02http://git.io/jPNR
[12:46:19] <doesallmagic2> Project jQuery Core Compat build #577: STILL UNSTABLE in 15 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/577/
[12:46:19] <doesallmagic2> Timmy Willison: Attributes: revert returning null for non-existant attributes
[12:51:22] <doesallmagic2> Yippee, build fixed!
[12:51:22] <doesallmagic2> Project jQuery Core build #1313: FIXED in 5 min 2 sec: http://jenkins.jquery.com/job/jQuery%20Core/1313/
[12:51:23] <doesallmagic2> Timmy Willison: Attributes: revert returning null for non-existant attributes
[13:18:26] <jqcommit> [13jquery] 15ZuBB opened issue #2184: Custom build in 1.11 branch produces file which gives 'Sizzle is undefined' JS error 02http://git.io/jXO7
[13:44:39] <6A4AB0CN8> [13jquery] 15mzgol closed issue #2184: Document in the master README excluding Sizzle is not supported in the compat/1.x build 02http://git.io/jXO7
[13:44:39] <7GHAA9VC0> [13jquery] 15mzgol pushed 1 new commit to 06master: 02http://git.io/jXRf
[13:44:39] <7GHAA9VC0> 13jquery/06master 14062b526 15MichaÅ‚ GoÅ‚Ä™biowski: Docs: Add info about Sizzle not being excludable on the compat branch...
[13:46:46] <jqcommit> [13jquery] 15mzgol pushed 1 new commit to 06compat: 02http://git.io/jXRP
[13:46:46] <jqcommit> 13jquery/06compat 148992ac8 15MichaÅ‚ GoÅ‚Ä™biowski: Docs: Rename 1.x to compat
[13:51:32] <doesallmagic2> Project jQuery Core build #1314: SUCCESS in 7 min 6 sec: http://jenkins.jquery.com/job/jQuery%20Core/1314/
[13:51:32] <doesallmagic2> m.goleb: Docs: Add info about Sizzle not being excludable on the compat branch
[14:06:00] <doesallmagic2> Project jQuery Core Compat build #578: STILL UNSTABLE in 14 min: http://jenkins.jquery.com/job/jQuery%20Core%20Compat/578/
[14:06:01] <doesallmagic2> m.goleb: Docs: Rename 1.x to compat
[14:13:33] <sizcommit> [13sizzle] 15gibson042 closed issue #329: Sizzle implementation in jQuery  02http://git.io/jPNR
[18:20:43] <arschmitz> timmywil: was just reading the meeting from today just to let you know the deferred breakages gibson042 mentioned did include a break to the actual code not just tests.
[18:21:09] <gibson042> arschmitz: the attr changes?
[18:21:22] <arschmitz> no
[18:21:36] <arschmitz> the deffered one assuming a sync then
[18:21:57] <gibson042> gotcha
[18:22:08] <arschmitz> https://github.com/jquery/jquery-mobile/commit/d34c86ae14d4ea603357be5e326de1fb8c31dbf9
[18:22:08] <gibson042> as expected
[18:22:12] <arschmitz> pretty minor
[18:22:31] <gibson042> that's good news
[18:23:02] <arschmitz> that commit is the entire thing for actual code and the tests was just https://github.com/jquery/jquery-mobile/commit/1d10a22092b36edcf60f758d1bc11c86391c8a0b
[18:23:23] <gibson042> :D
[18:23:45] <arschmitz> and took all of like 2 minutes to find and fix both
[18:24:08] <gibson042> you're making my day
[18:24:44] <arschmitz> yeah so anything this does break it should at least be easy to track down
[18:24:49] <arschmitz> in the wild
[18:25:52] <arschmitz> gibson042: Also i would say its fair to assume people using deferred / promises directly are likely to be much more capable debuggers then your average user of attr
[18:27:39] <gibson042> almost certainly
[18:28:02] <gibson042> and much closer to the source, rather than having to dig for a deeply-nested call to attr
[18:28:11] <arschmitz> yup
[23:08:16] <doesallmagic2> Project jQuery Core Periodic build #185: STILL UNSTABLE in 12 min: http://jenkins.jquery.com/job/jQuery%20Core%20Periodic/185/
[23:08:16] <doesallmagic2> * m.goleb: Build: Update native-promise-only (again)
[23:08:17] <doesallmagic2> * m.goleb: Core: Update tested jsdom, drop obsolete workarounds
[23:08:17] <doesallmagic2> * Dave Methvin: Wrap: Support .unwrap( selector) for selective unwrapping
[23:08:18] <doesallmagic2> * Timmy Willison: Attributes: revert returning null for non-existant attributes
[23:08:18] <doesallmagic2> * m.goleb: Docs: Add info about Sizzle not being excludable on the compat branch
