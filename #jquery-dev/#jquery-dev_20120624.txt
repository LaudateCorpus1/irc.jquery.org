[09:44:10] <jqcommit> [jquery] rwldrn created 11965 (+1 new commit): http://git.io/k67GqQ
[09:44:10] <jqcommit> [jquery/11965] Introduces src/deprecated.js, test/unit/deprecated.js; New flag on module list; Removes use in test/unit/ajax.js - Rick Waldron
[09:45:00] <jqcommit> [jquery] rwldrn pushed 1 new commit to 11965: http://git.io/0TvBjQ
[09:45:00] <jqcommit> [jquery/11965] Only run jQuery.browser & jQuery.uaMatch tests if APIs are present - Rick Waldron
[09:47:45] <jqcommit> [jquery] rwldrn pushed 1 new commit to 11965: http://git.io/CCs9Ow
[09:47:45] <jqcommit> [jquery/11965] Update README with -deprecated - Rick Waldron
[09:47:54] <rwaldron> DaveMethvin gnarf ^^^
[09:48:03] <rwaldron> it's in a branch at the moment
[09:48:25] <rwaldron> ?tell DaveMethvin, gnarf https://github.com/jquery/jquery/compare/11965
[09:48:25] <bot-t> rwaldron, Okay.
[11:22:21] <gnarf> ?tell rwaldron thanks man! good work
[11:22:22] <bot-t> gnarf, Okay.
[12:34:10] <jqcommit> [jquery] timmywil pushed 1 new commit to master: http://git.io/e5rMJw
[12:34:10] <jqcommit> [jquery/master] Add grunt with lint to Sizzle - timmywil
[12:49:22] <jq-jenkins> Project jQuery Core build #176: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Core/176/
[12:49:22] <jq-jenkins> timmywillisn: Add grunt with lint to Sizzle
[14:22:07] <jqcommit> [testswarm] Krinkle created review/master/jayarjo/pull-200 (+2 new commits): http://git.io/c04b5A
[14:22:07] <jqcommit> [testswarm/review/master/jayarjo/pull-200] Prettify Signup page, to look similar to Login. - Davit Barbakadze
[14:22:07] <jqcommit> [testswarm/review/master/jayarjo/pull-200] #200: Fixup - Timo Tijhof
[14:30:34] <jqcommit> [testswarm] Krinkle pushed 1 new commit to master: http://git.io/-8RRqg
[14:30:34] <jqcommit> [testswarm/master] SignupPage: Prettify to look similar to LoginPage. - Davit Barbakadze
[16:33:24] <tbranyen> if i am in the checked out source of 1.7.2
[16:33:28] <tbranyen> all unit tests should pass right?
[16:33:33] <tbranyen> like i'm getting weird ajax errors and shit dying on me
[16:33:41] <tbranyen> but php is configured fine in nginx
[16:33:47] <tbranyen> i don't want to install mamp just to run the tests
[16:33:51] <tbranyen> :|
[18:31:30] <DaveMethvin> .
[18:31:30] <bot-t> (8 hours 43 mins ago) <rwaldron> tell DaveMethvin, gnarf https://github.com/jquery/jquery/compare/11965
[18:31:56] <DaveMethvin> nice!
[18:33:00] <tbranyen> DaveMethvin: y did u remove async: false
[18:33:10] <tbranyen> jquery4u.com says u did
[18:33:16] <DaveMethvin> it's not gone
[18:33:21] <DaveMethvin> it's deprecated
[18:33:34] <tbranyen> ASYNC OPTION GONE
[18:33:34] <tbranyen> http://bugs.jquery.com/ticket/11013 It is now always true;
[18:33:37] <tbranyen> http://www.jquery4u.com/news/jquery-1-8-beta-1-whats-coming-and-going/?utm_source=dlvr.it&utm_medium=twitter#.T-e_nStYuH-
[18:33:42] <tbranyen> set them str8
[18:34:09] <DaveMethvin> so tbranyen
[18:34:22] <DaveMethvin> the reason we are deprecating it
[18:34:36] <DaveMethvin> is because we can't consistently resolve $.Deferred async
[18:34:47] <DaveMethvin> if we have to support $.ajax async=false
[18:34:54] <DaveMethvin> duh, right?
[18:35:06] <DaveMethvin> so i know there are useful cases for it
[18:35:15] <DaveMethvin> just like there are cases where people need $.browser
[18:35:18] <DaveMethvin> but the point it
[18:35:19] <DaveMethvin> is
[18:35:28] <DaveMethvin> we can't do it EXACTLY LIKE NOW
[18:35:35] <tbranyen> i dunno if that warrants removal, $.browser isn't the same at all
[18:35:38] <tbranyen> thats a really weird comparison to make
[18:35:39] <DaveMethvin> because the problem is the way it EXACTLY WORKS NOW
[18:35:47] <DaveMethvin> like
[18:35:57] <DaveMethvin> come up with the specific use cases
[18:36:03] <DaveMethvin> and we can work something out
[18:36:10] <tbranyen> https://github.com/tbranyen/backbone-boilerplate/blob/master/app/app.js#L30
[18:36:11] <tbranyen> my use case
[18:36:14] <DaveMethvin> but we cannot continue to support it exactly the way it is
[18:36:25] <DaveMethvin> which is why we are deprecating
[18:36:35] <tbranyen> i dunno what you mean by can't consistent resolve
[18:37:01] <tbranyen> the above code has been consistently resolving all the time for me
[18:37:07] <DaveMethvin> yes
[18:37:23] <DaveMethvin> so the way most Promise impls work
[18:37:37] <DaveMethvin> is that the then is called async
[18:37:41] <DaveMethvin> always
[18:37:43] <tbranyen> oh i see what you mean
[18:37:46] <DaveMethvin> that would break your code
[18:37:49] <tbranyen> so if you change the promise impl
[18:37:55] <tbranyen> this can't work
[18:38:01] <DaveMethvin> if you changed that to a callback, we could perhaps continue to support
[18:38:03] <tbranyen> do you really need to change something that isn't broken tho?
[18:38:27] <tbranyen> why bother injecting a setTimeout to make the then always "async"
[18:38:35] <DaveMethvin> promises calling their callbacks inconsistently can be a problem
[18:38:42] <DaveMethvin> you don't see it there of course
[18:38:47] <tbranyen> i thought that too with layoutmanager
[18:38:50] <tbranyen> instead i've decided
[18:38:54] <tbranyen> if someone knows they are writing sync code
[18:38:59] <tbranyen> it should execute sync
[18:39:02] <tbranyen> if they write async, it should be async
[18:39:21] <DaveMethvin> right but if we sometimes call sync and sometiems async ... well that is hard to expect
[18:39:26] <tbranyen> how so?
[18:39:33] <tbranyen> you know deliberately its sync
[18:39:37] <tbranyen> since you set it...
[18:39:39] <DaveMethvin> yes, for that case
[18:39:48] <DaveMethvin> but for something that is inherently async
[18:39:59] <DaveMethvin> but happens to add a .done() to a resolved promise
[18:40:05] <DaveMethvin> that will be called before the .done() returns
[18:40:39] <DaveMethvin> anyway, the point is
[18:40:44] <DaveMethvin> promises are meant for async
[18:40:47] <DaveMethvin> that case is sync
[18:40:52] <tbranyen> yeah, i can totally change this
[18:40:59] <tbranyen> to support future changes
[18:41:01] <DaveMethvin> right it's not like this is a big deal
[18:41:14] <tbranyen> so long as async: false stays available
[18:41:30] <tbranyen> i use it for development, can't imagine having to go back to async again >_< so much added code simply for development
[18:41:36] <DaveMethvin> well what  you need is a way to do sync ajax
[18:41:48] <tbranyen> yep and jquery does that p well
[18:41:56] <DaveMethvin> i don't know if $.*A*jax is the api we'll settle on
[18:42:09] <DaveMethvin> b/c there is SO much that async:false does differently
[18:42:21] <DaveMethvin> so we may not provide async:false in the current plumbing
[18:42:26] <DaveMethvin> but it could be elsewhere
[18:42:36] <DaveMethvin> if you accept a limited set of functionality
[18:42:40] <tbranyen> also the way i've written my implementation I *could* go back to async: true
[18:42:47] <tbranyen> just seems like a waste
[18:42:51] <tbranyen> and then to have that removed from core
[18:42:53] <tbranyen> seems odd
[18:43:59] <tbranyen> but thats neither here nor there, its not removed
[18:44:00] <tbranyen> only deprecated
[18:44:20] <DaveMethvin> right, but the discussion we're having now
[18:44:26] <DaveMethvin> is the discussion that needs to happen
[18:44:44] <DaveMethvin> because $.ajax({ async: false ... }) is intended to break from current functionality
[18:44:51] <DaveMethvin> so that we can make promises work right
[18:44:55] <tbranyen> i think its fine to document it
[18:45:01] <ajpiano> also async: false sux
[18:45:01] <tbranyen> and say, no promises with ajax
[18:45:07] <tbranyen> although
[18:45:16] <tbranyen> i think i'm using deferreds synchronously in layoutmanager
[18:45:31] <tbranyen> i dunno what would happen if suddenly the then's resolved async
[18:45:53] <DaveMethvin> well that's a good discussion to have as well
[18:46:11] <tbranyen> is there a way i could test that easily?
[18:46:27] <DaveMethvin> whether a promise resolves async or sync?
[18:46:29] <tbranyen> i could just modify the then function to have a setTimeout
[18:46:34] <tbranyen> and run my unit tests
[18:46:54] <DaveMethvin> well you could make a feature test for it, see if a callback sets a variable on a resolved promise
[18:46:56] <DaveMethvin> :D
[18:47:17] <DaveMethvin> but as $.browser proves, nobody really acts serious about this stuff until we deprecate it
[18:47:27] <DaveMethvin> and $.browser has been deprecated since 1.4
[18:47:29] <tbranyen> well i wasn't worried before, but i am now
[18:47:38] <tbranyen> since deferreds will affect a lot more of my code than async: false will
[18:48:09] <DaveMethvin> well it's good that you asked then, the camp pushing for async resolution has been heard from
[18:48:18] <tbranyen> http://pastie.org/4145929
[18:48:25] <tbranyen> that should simulate the change right?
[18:49:44] <DaveMethvin> oh as a change to jquery itself?
[18:49:57] <tbranyen> yeah
[18:50:13] <tbranyen> yeah that def fails tests
[18:50:14] <tbranyen> heh
[18:50:27] <tbranyen> broke four of my tests
[18:50:32] <DaveMethvin> only four?
[18:50:35] <DaveMethvin> :)
[18:50:44] <tbranyen> Testing index.html.....................FF.FF.
[18:50:45] <tbranyen> yep
[18:51:16] <DaveMethvin> there is a long story regarding $.Deferred
[18:51:21] <DaveMethvin> i think our impl is pretty good
[18:51:31] <DaveMethvin> but there is a faction pushing Promise/A compliance
[18:51:38] <DaveMethvin> but if you've read it, it's pretty vague
[18:51:39] <tbranyen> why
[18:51:51] <DaveMethvin> why pushing
[18:51:52] <tbranyen> jquery deferreds do everything we need them to do
[18:51:53] <tbranyen> why change
[18:52:00] <DaveMethvin> i like you :D
[18:52:00] <tbranyen> for the sake of compliance with an arbitrary spec
[18:52:06] <DaveMethvin> i agree
[18:52:26] <DaveMethvin> and the promise/a description isn't enough for interoperation anyway
[18:52:39] <DaveMethvin> so there are multiple impls, ours being one of the first widely distributed
[18:52:59] <tbranyen> not to mention underscore.deferred uses the jquery impl
[18:53:01] <DaveMethvin> and any changes made for better interoperability tend to break code
[18:53:02] <tbranyen> which works in ndoe
[18:53:21] <DaveMethvin> well speaking of changes
[18:53:34] <DaveMethvin> .then is going to return a new promise in 1.8
[18:53:39] <DaveMethvin> vs the old promise
[18:53:59] <DaveMethvin> again, in the name of promise/a friendliness
[18:54:08] <tbranyen> i dunno if that affects code so much
[18:54:18] <tbranyen> as much*
[18:54:29] <DaveMethvin> and we have .done() etc that return the existing promise
[18:55:05] <DaveMethvin> but definitely let us know which issues are causing the most hassle for you
[18:55:22] <tbranyen> yeah i mean if that async then goes through, i'm gonna have to change layoutmanager
[18:55:25] <tbranyen> and i'm not gonna like that
[18:55:43] <DaveMethvin> oh you mean promises resolving async?
[18:55:47] <tbranyen> yea
[18:55:53] <tbranyen> thats gonna have a pretty nasty impact on performance too
[18:56:14] <DaveMethvin> we'll be using setImmediate tho, so not that much i suspect
[18:56:20] <DaveMethvin> setTimeout, yes
[18:56:38] <DaveMethvin> you gonna be at the conf next week?
[18:56:52] <tbranyen> i wish
[18:56:57] <tbranyen> there was a ticket avail
[18:57:04] <tbranyen> but i'm working on a talk and doing open source stuff
[18:57:08] <tbranyen> no time :-/
[18:57:14] <DaveMethvin> damn work
[18:57:28] <tbranyen> wish i could get the unit tests to work too with jquery >_<
[18:57:32] <tbranyen> are you using apache?
[18:57:43] <DaveMethvin> i use it locally
[18:57:49] <DaveMethvin> what's not working?
[18:57:54] <tbranyen> ajax tests are failing
[18:58:00] <tbranyen> i have nginx and php set up
[18:58:03] <tbranyen> and i can hit the php scripts
[18:58:05] <tbranyen> they execute
[18:58:09] <tbranyen> i dunno what more i need
[18:58:34] <DaveMethvin> all the ajax tests fail?
[18:58:41] <tbranyen> nope
[18:58:42] <tbranyen> just a few
[18:58:55] <tbranyen> i checked out the 1.7.2 tag
[18:59:01] <tbranyen> figured all those must pass
[18:59:17] <DaveMethvin> they should, altho they may need to run with the browser in focus
[18:59:29] <DaveMethvin> our unit tests have been flakey on testswarm b/c of that
[18:59:45] <tbranyen> browser is in focus
[18:59:46] <tbranyen> ajax: pass-through request object
[18:59:52] <tbranyen> last two fail
[19:00:18] <tbranyen> Check all ajax calls successful exepected 5 got 4
[19:00:23] <tbranyen> yet i see all 5 pass above
[19:00:24] <tbranyen> weird
[19:00:54] <DaveMethvin> what browser?
[19:01:00] <tbranyen> chrome
[19:01:06] <tbranyen> weird i found name.html is giving back a 405
[19:01:08] <tbranyen> not allowed
[19:01:11] <tbranyen> when POST
[19:01:44] <tbranyen> do you know if anyone has run the tests with nginx before?
[19:01:52] <DaveMethvin> i am not sure
[19:01:58] <DaveMethvin> i've seen the 405 on iis
[19:02:06] <DaveMethvin> it doesn't like POST to an html page
[19:02:15] <tbranyen> right
[19:02:17] <tbranyen> hrm
[19:02:57] <tbranyen> lol judging by google this is a very common problem
[19:03:09] <DaveMethvin> we've talked about switching to node for unit tests but we have to coordinate with testswarm changes etc
[19:03:18] <DaveMethvin> getting past the grunt changes was hard enough!
[19:03:40] <tbranyen> heh
[19:03:46] <tbranyen> wow this workaround is messed up
[19:03:48] <tbranyen>      error_page   405   = @405;
[19:03:48] <tbranyen>      location = @405 {
[19:03:48] <tbranyen>          root   ...;
[19:03:48] <tbranyen>      }
[19:03:57] <tbranyen> O_O
[19:05:11] <tbranyen> i'll donate my nginx config once i get all this shit working
[19:05:16] <tbranyen> looks like i gotta remap a bunch of errors
[19:07:34] <DaveMethvin> that would be helpful
[19:07:54] <tbranyen> yeah a client project needs to run along side jquery and pass all the unit tests
[19:08:05] <tbranyen> so i need to get the jquery unit tests passing first
[19:08:06] <tbranyen> heh
[19:08:21] <tbranyen> i've done some dirty dirty thing
[19:08:21] <tbranyen> s
[19:08:23] <tbranyen> in this project
[19:08:26] <DaveMethvin> I've updated the two tix to indicate that they were just deprecated in 1.8, comments made clear nothing was removed but nobody reads that
[19:08:27] <tbranyen> overriding the XHR constructor
[19:08:45] <tbranyen> awesome thanks man
[19:09:03] <DaveMethvin> definitely let us know the technical issues you have with these things, we'll try to work with you on a solution
[19:09:24] <DaveMethvin> i would definitely prefer the solution isn't to just keep things exactly as is, but there are many other things we can do
[19:10:00] <tbranyen> just not removing functionality completely without a reasonable workaround
[19:10:13] <tbranyen> saying to use XHR natively as a way to make a synchronous request isn't a reasonable workaround imo
[19:10:18] <tbranyen> saying don't use deferreds with async: false is
[19:10:47] <DaveMethvin> if only it were that easy ... the callbacks are currently implemented by deferreds :(
[19:11:36] <DaveMethvin> but in that code you linked, are you setting any custom ajaxSettings or is that the whole set of options you are using?
[19:12:00] <tbranyen> whole set
[19:12:14] <DaveMethvin> so it isn't a really complicated request
[19:12:26] <tbranyen> nope super simple
[19:12:31] <tbranyen> synchronous html file fetch
[19:12:50] <DaveMethvin> really could be done with a much smaller set of lines,completely outside $.ajax plumbing
[19:13:17] <tbranyen> i dunno about that
[19:13:22] <DaveMethvin> no prefilters,  headers, you know it's xhr transport, etc
[19:13:42] <tbranyen> well not really
[19:13:46] <tbranyen> layoutmanager works in ie 6
[19:14:08] <DaveMethvin> sure but that's just the activex
[19:14:17] <tbranyen> yea, i mean i still need $.ajax
[19:14:29] <DaveMethvin> you just need the xhr getter
[19:14:57] <DaveMethvin> and you need $.param i suspect
[19:16:42] <DaveMethvin> wait, layoutmanager works in ie6? :D
[19:16:51] <DaveMethvin> are you CRAZY?
[19:17:04] <DaveMethvin> break it right this minute!
[19:17:23] <tbranyen> i know right?
[19:17:27] <tbranyen> i ran the tests in ie 6 and they worked
[19:17:30] <tbranyen> so i was like welp
[19:18:17] <DaveMethvin> "well the unit tests worked so crap i guess i support it"
[19:18:56] <tbranyen> isn't that how jquery works?
[19:19:37] <DaveMethvin> only for the browsers where we run it
[19:19:44] <DaveMethvin> and unfortunately ie6 is one of those
[19:19:50] <tbranyen> :)
[19:20:04] <DaveMethvin> but some people report issues with netfront or some other browser
[19:20:14] <DaveMethvin> and we just can't support it if we can't test with it consistently
[19:20:35] <DaveMethvin> brb
[19:20:55] <mikesherov> .
[19:21:24] <tbranyen> netfront lol
[19:21:50] <mikesherov> DaveMethvin: the number of test fails for that IE8 bug varies between each commit on testswarm
[19:22:01] <mikesherov> tbranyen: still having trouble getting the units to pass?
[19:22:04] <tbranyen> yeah
[19:22:09] <tbranyen> working through this nginx bug
[19:22:12] <tbranyen> can't POST to static files
[19:22:17] <mikesherov> right
[19:22:31] <mikesherov> jQuery needs a MAMP/WAMP server going to run all the tests
[19:22:33] <tbranyen> welp i think i just fixed it
[19:22:43] <tbranyen> lets see if that fixes all the tests
[19:23:00] <mikesherov> if you're not running PHP, the ajax tests won't even run
[19:23:47] <tbranyen> i have php running
[19:23:48] <tbranyen> http://localhost/jquery/test/data/jsonp.php/jQuery07631666373927146_1340591004253?_=1340591004415
[19:23:51] <tbranyen> wut
[19:24:09] <tbranyen> jsonp.php/
[19:24:15] <mikesherov> good luck with that
[19:24:21] <tbranyen> lol how does that even work?
[19:24:54] <tbranyen> wow got it
[19:25:48] <DaveMethvin> yeah, most of the ajax stuff is just echoing back stuff in the body or headers, sometimes after a delay
[19:26:07] <mikesherov> DaveMethvin: I'm not so sure about this IE8 bug
[19:26:14] <mikesherov> and the test failures
[19:26:14] <tbranyen> wow
[19:26:17] <tbranyen> i got them all passing in nginx
[19:26:23] <mikesherov> I can't figure it out for the life of me
[19:26:28] <DaveMethvin> oh mikesherov sorry i missed your message above
[19:26:32] <mikesherov> np
[19:26:35] <tbranyen> i'll document this config and pass it on to you guys
[19:26:39] <tbranyen> much prefer nginx to httpd
[19:26:46] <DaveMethvin> k thanks tbranyen
[19:26:53] <DaveMethvin> mikesherov: it's definitely strange
[19:26:59] <DaveMethvin> i just cannot figure it out either
[19:27:03] <DaveMethvin> and it's just IE8
[19:27:09] <DaveMethvin> and only in swarm
[19:27:42] <DaveMethvin> and only one pixel most of the time
[19:27:58] <mikesherov> yeah, but what is scary is that the number of fails change
[19:28:10] <mikesherov> sometimes 12, sometimes 8, and the latest one was 5!
[19:28:29] <DaveMethvin> sounds like good news, maybe we can wait it out down to 0
[19:30:44] <DaveMethvin> just saw a promo on the tv: "An injection that helps you lose weight, increases your sex drive, and gives you a long lasting tan. Doctors have a health warning, at 11!"
[19:31:52] <mikesherov> LOL
[19:33:42] <mikesherov> DaveMethvin: perhaps if you could tell me a bit about how testswarm works so I can replicate the environment locally as best I can?
[19:34:14] <DaveMethvin> well if I knew...:)
[19:34:29] <DaveMethvin> i know it runs each module separately
[19:34:34] <DaveMethvin> in an iframe
[19:37:01] <mikesherov> using browserstack API?
[19:38:20] <DaveMethvin> not sure how those interact mikesherov
[19:38:35] <DaveMethvin> looking at the testswarm code here: https://github.com/jquery/testswarm/blob/master/js/inject.js
[19:39:05] <DaveMethvin> earlier we had some issues with the onerror handler at https://github.com/jquery/testswarm/blob/master/js/inject.js#L179
[19:41:13] <DaveMethvin> i don't see it injecting anything into the page that would seem to affect the dimensions
[19:43:56] <mikesherov> right
[19:44:12] <mikesherov> but I'm wondering about document height inside iframe
[19:44:59] <mikesherov> http://bugs.jquery.com/ticket/8625
[19:45:12] <mikesherov> and if that has anything to do with it
[19:45:26] <mikesherov> but if testswarm has always been this way...
[19:45:56] <DaveMethvin> well maybe there were some recent tweaks
[19:47:26] <DaveMethvin> Krinkle_ would be the guy to ask, he's in europe so it's the middle of the night for them
[19:47:38] <mikesherov> WELL WAKE HIM UP
[19:47:51] <mikesherov> OK, I'll ask him next time I'm on the train
[19:47:51] <DaveMethvin> ding a ling
[19:48:21] <DaveMethvin> wish i hadn't been so busy this weekend
[19:48:36] <DaveMethvin> so many good things landing, i need to go through the pulls
[19:48:46] <DaveMethvin> or, to land i should say
[19:49:00] <DaveMethvin> ticket counts way down too
[19:50:33] <mikesherov> only 2 open pulls....
[19:50:52] <DaveMethvin> i love the .progress one for animations
[19:50:59] <mikesherov> me too
[19:51:14] <mikesherov> Yeah, my goal was to get css, dimensions, and effects as low as possible before 1.8
[19:51:26] <DaveMethvin> sure looks like you did it!
[19:51:32] <mikesherov> nice to see effects, and selector came down as well
[19:52:00] <DaveMethvin> so many of the remaining ones are ie6/7/8 bugs
[19:52:22] <DaveMethvin> i have a great solution for those :D
[19:52:25] <mikesherov> LOL
[19:52:44] <mikesherov> a lot of the css ones are "margin: auto" or "mixed width and percentages"
[19:52:59] <mikesherov> both of which really require browser vendor actions to fix
[19:53:10] <DaveMethvin> we're screwed!
[19:53:31] <mikesherov> well I keep poking at this one: https://bugs.webkit.org/show_bug.cgi?id=29084
[19:53:59] <mikesherov> which is to beg webkit to follow everyone else and just have top/left/bottom/right return pixels even when percent is specified
[19:54:57] <mikesherov> I could probably even fix margin:auto to trick it into returning pixels, but not in a way that would be small...
[19:55:02] <DaveMethvin> ?glwt
[19:55:03] <bot-t> http://goodluckwiththatdude.com
[19:55:18] <mikesherov> ha
[19:55:20] <DaveMethvin> this one has been open in firefox since 2004: https://bugzilla.mozilla.org/show_bug.cgi?id=238041
[19:55:42] <DaveMethvin> and somehow people expect us to fix it
[19:56:12] <DaveMethvin> when did the click originally occur? WE DON'T KNOW FOLKS
[19:56:17] <DaveMethvin> BUT WE CAN MAKE SHIT UP
[19:56:25] <mikesherov> LOL
[19:57:27] <mikesherov> I mean, margin:auto might be as "easy" as ($(this).parent().width() - $(this).outerWidth()) / 2
[19:57:38] <mikesherov> hmmm... I wonder if that works
[19:57:58] <mikesherov> but what if the parent has margin auto... I guess it doesn't matter
[19:58:08] <mikesherov> You know, maybe I COULD fix that
[19:58:31] <DaveMethvin> wouldn't that be funny
[19:58:53] <DaveMethvin> seems right in theory
[19:58:59] <mikesherov> margin-collapse might come into play here though...
[19:59:07] <mikesherov> I don't even want to think about that
[19:59:29] <DaveMethvin> yeah, i didn't either
[19:59:43] <mikesherov> Well, food for that
[19:59:45] <DaveMethvin> that's why i made my awful hack for that body-margin-collapse issue
[20:00:01] <DaveMethvin> sometimes ie just wears me down
[20:00:11] <mikesherov> link?
[20:00:48] <DaveMethvin> https://github.com/jquery/jquery/commit/c18f1f119e07b08793ffb1e98621170f5f2eaba4
[20:00:48] <socialhapy> ★ Commit on jquery by Dave Methvin (6d, 6h ago): Detect IE collapsing body margin directly rather than inferring it.
[20:01:29] <DaveMethvin> the documentMode check was complete brain damage, since IE7 didn't support documentMode. :rolleyes:
[20:02:26] <mikesherov> fooh, right
[20:02:29] <mikesherov> oh*
[20:02:48] <mikesherov> OK, I'm going to bed. Goodnight
[20:03:00] <DaveMethvin> gnight, thanks!
