[00:20:28] <Krinkle> Grr testswarm gateway timeout again
[00:20:37] <Krinkle> gnarf: I feel helpless, what's going on?
[00:20:48] <Krinkle> defenceless rather
[00:20:54] <Krinkle> http://swarm.jquery.org:8080/ is still fine
[00:20:58] <Krinkle> just :80
[00:21:10] <Krinkle> 502 Bad Gateway
[00:21:21] <Krinkle> instantly, no dela
[00:21:22] <Krinkle> y
[00:34:40] <Krinkle> connect() to unix:/var/run/php5-swarm.sock failed (11: Resource temporarily unavailable) while connecting to upstream, client: 208.115.113.88, server: swarm.jquery.com, request: "GET /result/203898 HTTP/1.1", upstream: "fastcgi://unix:/var/run/php5-swarm.sock:", host: "swarm.jquery.org"
[00:34:40] <Krinkle> host=jq03.jquery.com   Options|  host="swarm.jquery.org"   Options|  sourcetype=apache_error   Options|  source=/var/log/nginx/swarm.jquery.org.error.log   Options
[00:34:46] <Krinkle> That looks bad
[00:34:49] <Krinkle> mysql down?
[00:34:50] <Krinkle> wtf
[00:34:55] <Krinkle> (the socket anyway)_
[00:36:50] <SlexAxton> seems like php is down
[00:37:21] <SlexAxton> should be running as a fastcgi process
[00:37:27] <SlexAxton> and apache can't connect to it
[00:38:01] <SlexAxton> however http://swarm.jquery.org/result/1069352 it all works for me
[00:45:48] <Krinkle> It automatically recovers
[00:45:52] <Krinkle> it isn't fixed
[05:04:39] <scott_gonzalez> DaveMethvin|away: Have you seen http://lunametrics.wpengine.netdna-cdn.com/js/lunametrics-youtube.js?
[05:34:01] <mvta> hey, I have one stupid question: why is not related .data() with html5 data-* ?
[05:34:13] <mvta> sorry, hi first.
[05:39:21] <gibson042> mvta: jQuery .data() predates HTML5 data-* attributes... we can initialize our values from them, but (unlike HTML) our data can be any Javascript value, including functions and complex objects not expressible in JSON
[05:45:56] <mvta> gibson042, I know
[05:46:16] <gibson042> then what's your question?
[05:46:43] <mvta> I mean, shouldn't be neccesary some sort function instead of .attr('data-whatever')
[05:47:02] <mvta> some like .hData('whatever')
[05:47:11] <mvta> i don't know...
[05:47:18] <mvta> maybe is a stupid question
[05:48:19] <mvta> but I'm trying to say that, for example, someone that doesn't know anything about jQuery if see .data() could thought "hey, a function for html5 data atributes"
[05:49:06] <gibson042> you're free to write a plugin, but we're extremely unlikely to expand our core API for that
[05:49:29] <gibson042> the documentation at http://api.jquery.com/data/ is clear
[05:51:13] <mvta> yeah gibson042 I know it
[05:55:55] <jqcommit> 01[13jquery-migrate01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/6qjTdg
[05:55:55] <jqcommit> 13jquery-migrate/06master 14395c58f 15Richard Gibson: Fix gh-19: better linting
[06:07:28] <doesallmagic> Project jQuery Migrate Core 1.x build #21: FAILURE in 11 min: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/21/
[06:07:29] <doesallmagic> richard.gibson: Fix gh-19: better linting
[06:48:01] <ajpiano> DaveMethvin: you brute
[06:48:13] <ajpiano> there are a lot of applications out there that use synchronous requests to fetch xml
[06:48:15] <DaveMethvin> ajpiano you need to do a better job on QA
[06:48:24] <DaveMethvin> the QA department is really falling down lately
[06:48:35] <ajpiano> yeah
[06:48:53] <ajpiano>  i love completely unquantifiable stuff like that
[06:49:03] <DaveMethvin> it's breaking A LOT of code
[06:49:06] <ajpiano> do a better job!
[06:49:27] <ajpiano> yeah
[06:49:32] <ajpiano> you know how like every basic jquery tut is like
[06:49:43] <ajpiano> the first thing you're gonna wanna do with jquery is synchronously request and parse some xml
[06:50:14] <DaveMethvin> but put up an alert("PLEEZE WAIT FOR DATA TO ARRIVE") so users know it's budy
[06:50:16] <DaveMethvin> busy
[06:50:28] <ajpiano> i mean, it sucks that this happen
[06:50:37] <ajpiano> but it's not such a show stopper bug that it merits a release just for it
[06:50:56] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/HFo2Tg
[06:50:56] <jqcommit> 13jquery/06master 146a0ee2d 15Mark Raddatz: Fix #13401: replaceWith(""). Close gh-1163.
[06:51:05] <DaveMethvin> yay gibson042!
[06:51:35] <DaveMethvin> that Mark Raddat pull impressed me, a test case and everything first time
[06:51:52] <gibson042> he signed the CLA on his own too
[06:52:22] <DaveMethvin> nice
[06:52:30] <DaveMethvin> it's like he's paying attention
[06:53:37] <gibson042> I was serious about a better fix in 2.1, though... `$collection.replaceWith( function(){ return ""; } )` is a no-op
[06:55:09] <DaveMethvin> yeah i agree, and it still seems strange to me that it only takes one element
[06:55:18] <jqcommit> 01[13jquery01] 15gibson042 pushed 1 new commit to 061.9-stable: 02http://git.io/K3Okaw
[06:55:18] <jqcommit> 13jquery/061.9-stable 1403ab9b9 15Mark Raddatz: Fix #13401: replaceWith(""). Close gh-1163....
[06:57:18] <doesallmagic> Project jQuery Core build #690: STILL FAILING in 5 min 52 sec: http://swarm.jquery.org:8080/job/jQuery%20Core/690/
[06:57:18] <doesallmagic> richard.gibson: Fix #13401: replaceWith(""). Close gh-1163.
[06:57:35] <doesallmagic> Project jQuery 1.x Core build #63: STILL FAILING in 17 sec: http://swarm.jquery.org:8080/job/jQuery%201.x%20Core/63/
[06:57:36] <doesallmagic> richard.gibson: Fix #13401: replaceWith(""). Close gh-1163.
[06:59:22] <gibson042> DaveMethvin do you have any thoughts on .domManip ignoring empty string? it's only a significant problem for .replaceWith, but shouldn't .append("") add an empty text node?
[06:59:42] <DaveMethvin> technically yes it should
[07:00:24] <DaveMethvin> i am sure we'll break code either way :D
[07:01:08] <gibson042> lol
[07:29:52] <jqcommit> 01[13jquery01] 15jaubourg created 06#13388 (+1 new commit): 02http://git.io/T_G1VA
[07:29:52] <jqcommit> 13jquery/06#13388 14c0c38ad 15jaubourg: Minor refactor of response conversion and when/where responseXXX fields are set on the jqXHR. Fixes #11151. Fixes #13388.
[07:50:13] <jqcommit> [13jquery] 15jaubourg opened pull request #1164: Fix for #13388 that incidently fixes #11151 (061.9-stable...06#13388)  02http://git.io/g9S_hA
[08:03:27] <rwaldron> DaveMethvin ping
[08:04:11] <doesallmagic> Yippie, build fixed!
[08:04:11] <doesallmagic> Project jQuery Migrate Core 1.x build #22: FIXED in 3 min 22 sec: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/22/
[08:16:28] <rwaldron> gibson042 ping
[08:25:41] <gibson042> yo rwaldron
[08:25:46] <rwaldron> hey dude
[08:26:01] <rwaldron> gibson042 do you have a minute?
[08:26:06] <gibson042> yeah
[08:26:10] <rwaldron> great
[08:26:39] <rwaldron> So when DaveMethvin was reviewing my data re-rewrite optimizations, he mentioned some issues with QtWebKit
[08:26:49] <rwaldron> something about not using Array.isArray
[08:27:03] <rwaldron> but when I went searching for background I came accross this: http://bugs.jquery.com/ticket/13282
[08:27:08] <rwaldron> which is marked for 1.9.x branch
[08:27:23] <rwaldron> but landed on master (2.0)
[08:27:39] <gibson042> that'd be an error; it's a 2.0 fix
[08:27:47] <rwaldron> Why?
[08:28:01] <rwaldron> QtWebKit support should be kicked to 1.9
[08:28:30] <gibson042> the issue was with `push.apply(_, arraylike)`
[08:28:39] <rwaldron> Ok...
[08:28:47] <gibson042> we don't do that in 1.x
[08:28:59] <rwaldron> Ok, that's fine
[08:29:40] <rwaldron> But why does 2.0 have to suffer the jQuery.merge path?
[08:30:36] <gibson042> for phantomjs etc.
[08:30:40] <rwaldron> Since 2009, push.apply(_, arraylike) has been spec'ed
[08:30:58] <rwaldron> Function.prototype.apply intentionally specs generically
[08:31:04] <gibson042> I know
[08:31:07] <gibson042> it's QtWebKit
[08:31:12] <rwaldron> I'm not sure I'm making my point clearly
[08:31:15] <gibson042> that don't yet have it right
[08:31:16] <rwaldron> sorry for that
[08:31:51] <rwaldron> I don't think we should be making concessions in jQuery 2.0 for QtWebKit
[08:31:58] <gibson042> the reason this got fast action is that it broke the jquery-migrate grunt process
[08:32:02] <rwaldron> the fix should've been: wontfix, use 1.9
[08:32:59] <rwaldron> I'm concerned that this will continue to prevent us from progressing the core library code
[08:33:23] <gibson042> a fair position either way; the difference is actually negligible
[08:33:35] <rwaldron> For example, does QtWebKit support Object.defineProperty? I need this for the mega-optimization in data.
[08:34:29] <gibson042> they seem to
[08:34:39] <rwaldron> Ok, that's great news
[08:34:42] <gibson042> Array.isArray is there too
[08:35:05] <rwaldron> What version of PhantomJS are you using to confirm this?
[08:36:09] <gibson042> 1.4.0 & 1.7.0
[08:36:10] <johnbender> DaveMethvin: someone put me in touch with the jsperf folks at one point to discuss performance regression testing
[08:36:27] <rwaldron> gibson042 you're actually the man
[08:36:34] <rwaldron> I want you to know that
[08:37:07] <gibson042> nah, this just fell into my lap from jquery-migrate
[08:37:25] <rwaldron> no, I mean you're the man for helping me step through this issue :_
[08:37:26] <rwaldron> :)
[08:38:46] <rwaldron> gibson042 may I quote you on the PR?
[08:38:59] <rwaldron> or would you like to respond?
[08:39:22] <rwaldron> gibson042 re: https://github.com/jquery/jquery/pull/1160/files#L0R135
[08:39:23] <b-ot> rwaldron: Pull request #1160 by rwldrn (3d 18h 41m 7s): Rewrite data to use a valueOf-override keying system
[08:39:23] <gibson042> on Array.isArray?
[08:40:38] <gibson042> rwaldron: commented
[08:41:15] <rwaldron> radi-bonzi-cal
[08:41:18] <rwaldron> ;)
[08:41:34] <DaveMethvin> sorry rwaldron gibson042 i was scanning that quickly last night and got my rememberances wrong
[08:42:05] <DaveMethvin> gibson042 you realize that if we use .isArray it won't work in Firefox 3.6!!!!????!!!!1ONE
[08:42:19] <gibson042> OMG
[08:42:20] <DaveMethvin> i know some people who use that browser!
[08:42:25] <DaveMethvin> in 2010
[08:42:31] <gibson042> stop the presses; the jqueries are broked
[08:43:17] <johnbender> DaveMethvin: maybe I should have framed that in the form of a question: Dave, do you know the nicks of the jsperf folks so that I might pester them with questions?
[08:43:31] <DaveMethvin> you mean like jsperf.com?
[08:43:34] <johnbender> DaveMethvin: correct
[08:43:53] <DaveMethvin> @mathias 
[08:44:00] <DaveMethvin> on twitter
[08:44:11] <johnbender> yah, but I had a short convo with him here I thought
[08:44:21] <DaveMethvin> yeah matjas i think
[08:44:23] <johnbender> (99% confidence)
[08:44:25] <DaveMethvin> but he's not here now
[08:44:29] * johnbender sighs
[08:45:32] <gibson042> DaveMethvin do you know if we opened a ticket for QtWebKit's broken apply?
[08:45:54] <DaveMethvin> i didn't
[08:46:11] <rwaldron> DaveMethvin I just pushed a commit with the change you recommended for directly dereferencing the cache with the return value of a call to this.unlock
[08:46:13] <DaveMethvin> i think i remember starting to look for their tracker, after that it's a blur
[08:46:31] <DaveMethvin> rwaldron: it looked really slick
[08:46:53] <rwaldron> johnbender speak to jdalton or matjas
[08:47:10] <rwaldron> DaveMethvin thanks!
[08:47:27] <johnbender> rwaldron: thanks I'll ping them on twitter, I think jdalton knows me from publicly diskliking my blog posts lolol
[08:47:35] <rwaldron> hahaha
[08:47:44] <rwaldron> johnbender he's really a great dude
[08:47:54] <rwaldron> I used to think I hated him
[08:48:06] <johnbender> rwaldron: seems like it (he hasn't actually hated on my blog posts)
[08:48:07] <rwaldron> ...until I met him in person.
[08:48:14] <johnbender> rwaldron: such is the internet
[08:51:47] <rwaldron> DaveMethvin so, re: jQuery 2.0 beta2
[08:52:08] <DaveMethvin> yeah rwaldron
[08:52:14] <DaveMethvin> maybe next week?
[08:52:18] <rwaldron> Sounds good to me
[08:52:25] <rwaldron> you just saved me a bunch of typing
[08:52:30] <gibson042> rwaldron: what is the best link for pointing to documentation of .apply(_, arraylike)? should I go straight to ECMA HTML pages?
[08:52:45] <rwaldron> gibson042 http://es5.github.com/#x15.3.4.3
[08:53:04] <gibson042> was that new in v5?
[08:53:10] <rwaldron> yessir
[08:53:19] <gibson042> cool, thanks
[08:53:27] <rwaldron> The implementation is explicitly generic
[08:53:34] <rwaldron> it only cares about a length property
[08:53:39] <rwaldron> which arguments objects have
[08:53:46] <gibson042> right
[08:53:58] <gibson042> it was previously guaranteed only for arguments and arrays, right?
[08:54:11] <rwaldron> and of course, numerically "indexed" properties
[08:54:17] <gibson042> :)
[08:54:19] <rwaldron> it was previously only guaranteed for array
[08:54:33] <rwaldron> ES5 made is completely generic
[08:55:53] <rwaldron> gibson042 this should illustrate nicely..
[08:55:54] <rwaldron> function foo() { return arguments; } foo.apply(null, { 0: "a", 1: "b", length: 2 }); // ["a", "b"]
[08:56:02] <gibson042> no, I totally get it
[08:56:11] <rwaldron> I know you get it!
[08:56:19] <rwaldron> I figured you ewre writing a bug report
[08:56:22] <rwaldron> were*
[08:56:29] <rwaldron> (for someone else's benefit)
[08:56:35] <gnarf> johnbender: matjas is on IRC , just not hiding in -dev
[08:56:35] <gibson042> yeah
[08:56:58] <gibson042> I'm linking to spec and to our ticket, with just a little explanation
[09:01:54] <johnbender> gnarf: nice
[09:31:18] <gnarf> timmywil / gibson042: I've been carrying that crossword with me, got it about 50% filled up
[09:31:19] <gnarf> :)
[09:31:38] <gnarf> was way more fun than the sudoku in the paper at breakfast ;)
[09:31:46] <gibson042> awesome
[12:09:46] <JamesMGreene> 'lo
[12:09:47] <bot-t> (173 hours ago) <jzaefferer> tell JamesMGreene what atomics commits are you talking about?
[12:10:20] <JamesMGreene> Can anyone tell me (DaveMethvin) what happens when someone adds a jQuery special event with the same name as a normal event (e.g. "mousedown")?
[12:10:50] <JamesMGreene> Does jQuery invoke the special event handlers first and then fallback to the normal event handlers if the event is not marked as handled?
[12:11:03] <JamesMGreene> That's what I'm assuming ATM
[12:11:24] <JamesMGreene> (e.g. https://github.com/ofk/jquery-touchable/blob/master/jquery.touchable.js#L109 )
[12:20:19] <JamesMGreene> ben_alman you may know as well :)
[12:20:22] <gibson042> JamesMGreene: there aren't really "special" event handlers; native and synthetic events are processed identically
[12:20:38] <DaveMethvin> back
[12:20:42] <JamesMGreene> I'm referring to the jQuery Special Events API
[12:20:52] <JamesMGreene> $.event.special.MY_EVENT stuff
[12:20:54] <DaveMethvin> yeah but there are a half dozen different hooks
[12:21:41] <DaveMethvin> if you declare a jQuery.event.special.mouseover = { ... } and there was already one, you clobber the old one
[12:21:56] <DaveMethvin> it's not a general chainable event interface IOW
[12:22:31] <DaveMethvin> does that answer?
[12:22:52] <gibson042> _default *can* be used to prevent us from calling `elem[ type ]()`
[12:23:38] <JamesMGreene> Do you mean that you clobber OTHER `$.event.special.mouseover` events (obviously) or that you actually clobber jQuery's core "mouseover" hooks?
[12:25:16] <DaveMethvin> inside the object there are hooks for trigger, handle, etc plus some properties
[12:25:31] <DaveMethvin> if you define a function you have to return the right values if you want jquery to do its default handling
[12:25:41] <DaveMethvin> otherwise it assumes you took care of everything
[12:25:45] <DaveMethvin> and it leaves
[12:26:10] <gibson042> JamesMGreene: these are our only core hooks: https://github.com/jquery/jquery/blob/f005af54e4983658e3ae504111885921c4dca383/src/event.js#L542-L591
[12:26:35] <gibson042> load/click/focus/blur/beforeunload
[12:26:40] <gibson042> mouseover is just another event
[12:26:47] <gibson042> no special handling
[12:26:56] <gibson042> unless you set it up yourself
[12:41:43] <JamesMGreene> So `$.event.special.mouseover` DOES prevent jQuery from proceeding with its default event handling for "mouseover", right? (Assuming all 
[12:42:04] <JamesMGreene> "mouseover" events are bound with `on` after the special event has been declared)
[12:42:25] <DaveMethvin> no
[12:42:40] <JamesMGreene> Long story short: I'm trying to figure out the safest way to map "touchstart"/"touchend" to "mousedown"/"mouseup" :-P
[12:42:43] <DaveMethvin> $.event.special.mouseover is an object
[12:42:46] <JamesMGreene> Does that clarify anything?
[12:42:48] <DaveMethvin> that has properties and functions
[12:42:56] <DaveMethvin> that the event system calls
[12:43:15] <DaveMethvin> at various points, for example the trigger property of a special event object
[12:43:24] <DaveMethvin> is called if someone tries to .trigger(
[12:43:30] <JamesMGreene> But it will call the special event version first, right?
[12:43:42] <DaveMethvin> it's not that simple
[12:43:49] <JamesMGreene> I'm not surprised :)
[12:43:50] <DaveMethvin> it depends on the function
[12:43:59] <DaveMethvin> in the case of trigger it does some stuff
[12:44:04] <DaveMethvin> then it calls the special trigger
[12:44:18] <DaveMethvin> and if the special trigger returns false
[12:44:24] <DaveMethvin> then it's done
[12:44:25] <JamesMGreene> "some stuff" = event object normalization, etc.?
[12:44:35] <DaveMethvin> yeah basically, at least for trigger
[12:44:52] <DaveMethvin> but the rules are different for diffrent hooks
[12:45:00] <DaveMethvin> setup/teardown add/remove
[12:49:33] <JamesMGreene> sure
[12:50:01] <JamesMGreene> Sooooooo any tips on safely mapping the touch events to mouse events?  I don't even need coordinates or anything ;)
[12:50:43] <JamesMGreene> Literally just need `touchstart` to trigger `mousedown` and NOT have a duplicate `mousedown` event issued (and then the same for `touchend` --> `mouseup`)
[12:51:06] <JamesMGreene> Requirement: using only jQuery core and plain JavaScript, no jQuery UI
[12:51:20] <JamesMGreene> (or other plugins)
[12:52:01] <JamesMGreene> --> https://github.com/JamesMGreene/jquery.textSelect/issues/3
[12:52:02] <b-ot> JamesMGreene: Issue #3 by JamesMGreene (10mon 1w 2d 17h 31m 53s): Add support for mobile browsers
[12:53:53] <DaveMethvin> okay so these are always native incoming events?
[12:54:40] <DaveMethvin> can the touchstart preventDefault to avoid the mousedown?
[12:55:00] <DaveMethvin> because the mousedown happens "later"
[12:55:07] <JamesMGreene> Debating if `$.event.special.touchstart = { 'bindType': 'mousedown', 'delegateType': 'mousedown', 'handle': function($event, data) { ... } };` is a bit too troublesome
[12:55:29] <DaveMethvin> that's page wide though...
[12:55:51] <gibson042> I think you want a special.preDispatch method
[12:56:12] <JamesMGreene> Would the `preventDefault` work, though, if they are two different events (`touchstart` vs. `mousedown`)?
[12:56:17] <DaveMethvin> not sure special events are the right hammer here
[12:56:35] <DaveMethvin> idunno, what does the touchstart docs say?
[12:56:58] <JamesMGreene> Nor I
[12:57:03] <JamesMGreene> They weren't my first thought
[12:57:14] <DaveMethvin> if you just need this on an input i'd attache the events on the input and handle it w/o special events
[12:57:19] <JamesMGreene> But then I ran into that jquery-touchable lib I linked earlier and wanted to give it some thought
[12:57:30] <DaveMethvin> this is one reason why i don't want to document special events
[12:57:34] <DaveMethvin> they're a plumbing thing
[12:57:37] <JamesMGreene> lol, indeed
[12:57:50] <JamesMGreene> Definitely a jQuery dev only thing
[12:57:52] <DaveMethvin> if people start using them at the app level then we're gonna break things when we try to fix browser bugs
[12:58:19] <JamesMGreene> I mean, they're obvious enough when you aren't creating a special event with a conflicting name
[12:58:54] <DaveMethvin> but what if jquery core wants to patch it later? boom
[12:59:27] <gibson042> that goes back to where I started: for all we care, a mousedown is a mousedown
[12:59:32] <DaveMethvin> also that code isn't taking MSPointer events into account, which will be the new pointer events std
[12:59:48] <JamesMGreene> You'd know better than I but obviously if the API _were_ made public you'd have to give slight notice before the BOOMing occurs :)
[13:00:30] <DaveMethvin> it won't matter b/c the person who wrote the plugin probably would be busy and it would go boom after we released
[13:00:50] <DaveMethvin> and then we would get bug reports b/c the plugin was broken
[13:00:58] <DaveMethvin> so don't use special events for this
[13:01:26] <DaveMethvin> btw the $.support.touch is added by the Mobile guys it's not part of core
[13:01:36] <JamesMGreene> roger that
[13:01:48] <JamesMGreene> I know
[13:02:01] <JamesMGreene> thus the fallback
[13:02:04] <DaveMethvin> i think you'll need to experiment a bit to see what the browserS report in these cases
[13:02:37] <JamesMGreene> Apparently so
[13:02:40] <JamesMGreene> Cursed touch events
[13:02:47] <DaveMethvin> all those little onscreen widgets on my phone for touch-based text selection, dunno if there is any feedback given event wise
[13:03:52] <DaveMethvin> so textSelect doesn't support keyboard? I use Ctrl-A all the time to select
[13:06:03] <JamesMGreene> Hem https://github.com/JamesMGreene/jquery.textSelect/issues/new :)
[13:06:42] <JamesMGreene> And yes, the mobile devices completely suck at text selection anyway
[13:07:43] <JamesMGreene> e.g. select some text on iOS/Android (events fire, yay)... OK, now expand your selection by dragging the start and end markers of the selection (no events fire, BOO! WTF)
[13:08:28] <JamesMGreene> So yes, this plugin has very limited conditions in which it works as desired
[13:08:52] <JamesMGreene> but it suites our purposes perfectly
[13:09:21] <JamesMGreene> And for the record, the current non-jQuery impl attaches to both the touch and mouse events without seemingly to cause trouble
[13:09:27] <JamesMGreene> but now I'm trying to figure out why ;)
[13:09:35] <JamesMGreene> Anyway, gotta run
[13:09:55] <JamesMGreene> Thanks for the affirmation to NOT use special events for this
[13:11:03] <JamesMGreene> For DaveMethvin: https://github.com/JamesMGreene/jquery.textSelect/issues/9
[13:11:03] <b-ot> JamesMGreene: Issue #9 by JamesMGreene (11s): Add support for keyboard selections
[16:20:34] <jqcommit> 01[13jquery-migrate01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/2d2-Ow
[16:20:34] <jqcommit> 13jquery-migrate/06master 14fbea3d1 15Richard Gibson: Fix gh-17: make sure $(html, props) works like v1.8
[16:22:48] <doesallmagic> Project jQuery Migrate Core 1.x build #23: SUCCESS in 1 min 42 sec: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/23/
[16:22:48] <doesallmagic> richard.gibson: Fix gh-17: make sure $(html, props) works like v1.8
[17:52:22] <jqcommit> 01[13jquery-migrate01] 15gibson042 pushed 1 new commit to 06master: 02http://git.io/B15zsA
[17:52:22] <jqcommit> 13jquery-migrate/06master 14d08c2b9 15Richard Gibson: Followup fbea3d1c: Don't overwrite jQuery.attrFn
[17:56:14] <doesallmagic> Project jQuery Migrate Core 1.x build #24: SUCCESS in 3 min 56 sec: http://swarm.jquery.org:8080/job/jQuery%20Migrate%20Core%201.x/24/
[17:56:14] <doesallmagic> richard.gibson: Followup fbea3d1c: Don't overwrite jQuery.attrFn
