[01:34:09] <Meme> .Click Memory leak. is there a solution or do i have to use .unbind ?
[06:11:15] <jqcommit> [13jquery] 15markraddatz opened pull request #1162: Handle the case of an empty string. Fixes #13401 (06master...06bug_13401)  02http://git.io/1sIFlQ
[06:22:03] <ajpiano> DaveMethvin: where else was "everywhere" in http://bugs.jquery.com/ticket/13388
[06:22:18] <ajpiano> i don't see any other commentos in e-mail that were baleeted
[06:33:07] <scott_gonzalez> He wrote anonymous notes on bricks and threw them through Dave's window.
[06:36:27] <scott_gonzalez> We should list browser extensions as environments we don't target, but are willing to review PRs for.
[06:36:54] <scott_gonzalez> We tend to get a handful of tickets related to that.
[06:37:36] <ajpiano> yea, i had one once upon a time
[06:37:45] <ajpiano> .offset() and friends don't tend to work too great
[07:22:47] <DaveMethvin> ajpiano: i think he was complaining becuase I deleted a huge hunk of code filed in a comment
[07:23:26] <ajpiano> in a diff thread?
[07:23:35] <ajpiano> that thread is identical in e-mail and on bugs.jquery
[07:23:42] <ajpiano> i just want to see the carnage :D
[07:23:45] <DaveMethvin> it was on the blog
[07:23:48] <ajpiano> ohhhhhhhhhhh
[07:23:49] <DaveMethvin> but i think it was him
[07:23:50] <ajpiano> brilliant
[07:25:00] <DaveMethvin> http://blog.jquery.com/2012/09/20/jquery-1-8-2-released/comment-page-1/#comment-536362
[07:26:08] <ajpiano> oh brilliant
[07:26:52] <scott_gonzalez> Look at that sexy new blog :-P
[07:27:01] <DaveMethvin> it DOES look ince
[07:27:03] <DaveMethvin> nice
[07:27:53] <ajpiano> we can't get off franken blog soon enough tho
[07:28:13] <scott_gonzalez> It would be nice to get off of it, but it's actually pretty manageable.
[07:28:26] <scott_gonzalez> ajpiano: I can show you how to update it if you want.
[07:28:29] <ajpiano> so it isn't a pain at all to update from lateset jquery-wp-content?
[07:28:30] <ajpiano> ah ok
[07:28:37] <ajpiano> i was about to ask you in my inner monologue about 45 seconds ago
[07:28:41] <ajpiano> basically i just saw http://blog.jquery.com/2013/02/04/jquery-1-9-1-released/comment-page-1/#comment-536463
[07:28:41] <scott_gonzalez> Nope, it's pretty easy.
[07:28:50] <ajpiano> and i was like, wait, i thought we fixed that
[07:28:55] <ajpiano> and we did, just not in franken :p
[07:29:30] <scott_gonzalez> heh
[07:30:44] <ajpiano> so sure, let me know how to do it
[07:31:20] <scott_gonzalez> Skype?
[07:31:27] <ajpiano> sure
[08:49:58] <rwaldron> DaveMethvin ping
[08:50:12] <DaveMethvin> sup rwaldron
[08:52:06] <rwaldron> I'd like to land the data re-rewrite, but I haven't seen any action on the PR
[08:52:27] <DaveMethvin> yeah i just got busy with the 1.9.1 release and then some backed up client work
[08:52:44] <rwaldron> Oh, no problem then
[08:52:45] <DaveMethvin> is it ready otherwise?
[08:52:55] <DaveMethvin> let me take a look tonight
[08:53:02] <rwaldron> I feel very confident about it
[08:53:07] <DaveMethvin> SUCKER!
[08:53:36] <DaveMethvin> i wanted to be sure i understood the valueOf trick
[08:53:54] <rwaldron> I plan on refactoring the fake "hash code kind of thing" into a stand alone piece of code
[08:54:34] <rwaldron> I tried to be very descriptive in the comments
[08:54:53] <DaveMethvin> yeah, i just haven't had time to sit down and walk through it
[08:54:56] <rwaldron> Object.prototype.valueOf() accepts no arguments
[08:55:27] <rwaldron> so we "borrow" the functionality by redefining the method on an as-needed basis
[08:56:10] <rwaldron> and to activate the portion of code that is there for us, we pass an argument
[08:56:25] <rwaldron> specifically, the argument is a reference to an object that only WE have access to
[08:56:45] <rwaldron> so only we can ever activate this overloading
[08:57:09] <rwaldron> keeping valueOf() safe and in-tact for any extant code that (system or user)
[08:57:22] <rwaldron> in-tact?
[08:57:24] <rwaldron> weird
[08:57:28] <DaveMethvin> intact
[08:57:28] <rwaldron> extant*
[08:57:54] <DaveMethvin> yeah i got the gist of that from the comments, i agree it's pretty well documented
[08:58:05] <DaveMethvin> just wanted to think about possible impacts
[08:58:23] <rwaldron> So then we're only asking valueOf() to return a "key" that corresponds to that object's cache entry
[08:58:25] <DaveMethvin> and meditate on the code
[08:58:38] <rwaldron> absolutely
[08:59:31] <rwaldron> DaveMethvin ping me if you have any Qs
[08:59:35] <rwaldron> I'll be around
[08:59:36] <DaveMethvin> ok thanks
[08:59:40] <rwaldron> np :)
[09:42:00] <scott_gonzalez> miketaylr: Think there's any chance of Opera changing how it handles fractional pixels? http://bugs.jqueryui.com/ticket/9002
[09:42:36] <scott_gonzalez> Two buttons with height 50% (one at top: 0, the other at bottom: 0) doesn't always touch in the middle.
[09:43:12] <miketaylr> scott_gonzalez: yeah, it's possible. i'll point one of the CSS dudes that way
[09:43:18] <scott_gonzalez> thanks
[09:44:16] <scott_gonzalez> miketaylr: tj_vantoll just pointed me at http://bugs.jqueryui.com/ticket/7903 too
[09:45:35] <miketaylr> cool
[09:52:24] <scott_gonzalez> DaveMethvin: I don't know what's going on with https://github.com/jquery/jquery/pull/1161
[09:52:24] <b-ot> scott_gonzalez: Pull request #1161 by gajdaw (10h 38m 30s): Mapping for John Resig names
[09:52:30] <scott_gonzalez> But that updated file is horrible.
[09:52:54] <scott_gonzalez> Not sure if we should wait for him to fix again or we should just do it.
[09:53:08] <scott_gonzalez> I can build the map if you want.
[11:15:08] <jqcommit> 01[13jquery.com01] 15ajpiano pushed 1 new commit to 06master: 02http://git.io/h41Rhw
[11:15:08] <jqcommit> 13jquery.com/06master 148669f8c 15adam j. sontag:  Change "shell" to "bash" in download.md so that git code blocks highlight properly. Fixes #16.
[11:16:09] <scott_gonzalez> DaveMethvin: I don't think I can keep doing this: https://github.com/jquery/jquery/pull/1161
[11:16:24] <b-ot> scott_gonzalez: Pull request #1161 by gajdaw (12h 2m 15s): Mapping for John Resig names
[11:16:39] <scott_gonzalez> It'd be so much faster for me to just do it rather than keep pointing out mistakes.
[11:16:47] <scott_gonzalez> And finding the mistakes after each round is painful.
[11:17:21] <snover> scott_gonzalez: blaugh, how‚Äôd that internal email address of mine make it onto a commit :)
[11:17:33] <snover> git noob
[11:17:35] <scott_gonzalez> such a git noob
[11:18:59] <scott_gonzalez> brb
[11:20:53] <DaveMethvin> it's definitely easier to just do it ourselves ... the revelation here is that .mailmap can do these wonders for us
[11:24:37] <scott_gonzalez> back
[11:24:56] <scott_gonzalez> So what should I do?
[11:25:08] <DaveMethvin> i told him I'd take care of it
[11:25:18] <DaveMethvin> much easier than telling him what needs to be done
[11:25:22] <scott_gonzalez> ok
[11:25:53] <scott_gonzalez> When he sent the PR, I assumed he knew what he was doing.
[11:26:01] <DaveMethvin> WRONG
[11:26:10] <scott_gonzalez> So I figured I'd do the "hard" work of finding the duplicates and listing them out for him.
[11:29:22] <gnarf> yeah, memory impact is like non-existant here
[11:29:24] <gnarf> oops
[11:29:26] <gnarf> wrong -dev
[11:31:03] <DaveMethvin> so scott_gonzalez on the "widget factory as a named module" why can't someone else do that? Seems that it isn't going to help UI unless you went full-body into AMD
[11:31:27] <scott_gonzalez> jrburke already does it.
[11:31:36] <DaveMethvin> well then it's done
[11:31:38] <scott_gonzalez> https://github.com/jrburke/jqueryui-amd
[11:32:45] <scott_gonzalez> Yup, I was trying to make a point that Greg seemed to miss.
[11:33:07] <scott_gonzalez> Which is that the only way it's gonna happen is if the core project lead forces me to do it.
[11:33:33] <DaveMethvin> i get somewhat frustrated that nothing can be "real" for some folks until it's tattooed into the project and can't be removed
[11:33:46] <scott_gonzalez> yeah
[11:33:52] <DaveMethvin> "it's a plugin, use it"   OH BUT IT"S NOT THE SAME
[11:34:08] <snover> why use jquery then
[11:34:12] <scott_gonzalez> It's even better when it's a plugin from a core committer.
[11:34:13] <snover> if you don‚Äôtw ant plugins
[11:34:30] <DaveMethvin> because you want the jquery team to do your dependency management
[11:34:47] <DaveMethvin> and if they choose wrong you whine until they choose the right dependencies for your specific use
[11:35:02] <DaveMethvin> it's much easier than including a plugin
[11:35:06] <DaveMethvin> or running a build tool
[11:35:14] <snover> :)
[11:35:16] <DaveMethvin> or copy/pasting a few lines of code
[11:35:22] <snover> üôâ
[11:49:59] <_|Nix|_> DaveMethvin: Ping!
[11:50:33] <_|Nix|_> DaveMethvin: If you're around: Is this input[type='submit'][name],input[type='button'][name],button[name],submit[name] a good selector to catch all possible buttons that end up immediately submitting a form?
[11:50:42] <_|Nix|_> DaveMethvin: I'm only interested in those that have a name. 
[11:51:04] <_|Nix|_> DaveMethvin: I'm doing the add-hidden-input hack so the button's value will be included in the form data.
[11:51:21] <_|Nix|_> DaveMethvin: Re: https://github.com/jquery/jquery-mobile/issues/5387
[11:51:21] <b-ot> _|Nix|_: Issue #5387 by ryanki1 (1mon 2w 5d 19h 58m 33s): Switching off jQuery Mobile enhancement interferes with HTTP FORM POST values
[11:57:45] <scott_gonzalez> There's no <submit> element.
[11:59:11] <_|Nix|_> scott_gonzalez: Oh, good ... one less to worry about. So, what do you think? Do I have it covered?
[11:59:31] <_|Nix|_> scott_gonzalez: I think I may want to throw some [type!='reset'] in there as well, because those don't submit forms, right?
[11:59:41] * _|Nix|_ is a n00b in this respect ...
[12:00:01] <DaveMethvin>  (‚ïØ¬∞‚ñ°¬∞)‚îÅ‚òÜÔæü.*ÔΩ•ÔΩ°Ôæü
[12:00:04] <snover> scott_gonzalez: omg but what if you want to support xforms
[12:00:08] <DaveMethvin> ok, my new notebook is working
[12:00:16] <DaveMethvin> yeah, or what about the form attribute
[12:00:30] <DaveMethvin> where you can have buttons in one form that belong to a differnet form
[12:00:33] <scott_gonzalez> There are lots of things you're matching that don't submit forms.
[12:00:44] <_|Nix|_> Egads ...
[12:00:46] <scott_gonzalez> You really shouldn't be grabbing all the possible submiters.
[12:00:53] <scott_gonzalez> You're going to break stuff if you do.
[12:01:18] <DaveMethvin> yeah, imagine a form with a save and a delete
[12:01:24] <DaveMethvin> you can't send both
[12:01:32] <DaveMethvin> and the destination may check delete before save
[12:01:34] <DaveMethvin> :(
[12:01:38] <_|Nix|_> DaveMethvin: I only wish to send the one that was clicked.
[12:01:53] <scott_gonzalez> So why are you creating a list of possible elements?
[12:01:54] <DaveMethvin> do you know which one that is?
[12:02:06] <_|Nix|_> Sorry. Let me be clear.
[12:02:08] <DaveMethvin> if so, just serialize it and add it to the end of the submit
[12:02:38] <_|Nix|_> I'm trying to determine if the element that was clicked is going to end up submitting a form, so that I may include a hidden element just like it which .serialize() will pick up.
[12:03:02] <_|Nix|_> Then, I .one( "submit", function() { remove the element; } )
[12:03:22] <_|Nix|_> The problem is, I was adding superfluous hidden elements.
[12:03:30] <_|Nix|_> Like, when you click on a text input.
[12:03:44] <DaveMethvin> hmmm
[12:03:48] <scott_gonzalez> So you know which element was clicked?
[12:03:52] <_|Nix|_> scott_gonzalez: Yes.
[12:04:08] <_|Nix|_> scott_gonzalez: This is happening in a click handler.
[12:04:17] <_|Nix|_> Well, vclick to be precies.
[12:04:20] <_|Nix|_> precise.
[12:04:49] <scott_gonzalez> You can just store a ref in the vclick.
[12:04:53] <_|Nix|_> I need to write a .is() which, if true, will cause me to add a hidden input as I described.
[12:05:23] <scott_gonzalez> .on( "click", function() { submitButton = this; setTimeout(function() { submitButton = null; }); })
[12:05:38] <_|Nix|_> scott_gonzalez: I thought about that: Store a ref, then .serialize(), and if the result of serialize does not include my ref, then add it by hand. Right?
[12:05:38] <scott_gonzalez> .on( "submit", function() { serializeAndAddSubmitButton(); })
[12:05:49] <scott_gonzalez> yup
[12:06:21] <scott_gonzalez> You don't need the hidden input.
[12:06:24] <scott_gonzalez> This is ajax, right?
[12:06:36] <_|Nix|_> scott_gonzalez: Yeah, so I need to call .serialize() to assemble the form data.
[12:07:16] <_|Nix|_> That's actually what's keeping me from doing the ref thing. I worry that my code for adding the extra name/value pair does not have the same *-fu as serialize().
[12:08:04] <_|Nix|_> Although it seems simple enough ... just serializedData[ el.attr("name") ] = el.attr( "value" );
[12:08:47] <DaveMethvin> just make sure the name and value for the button go through the normal encoding process
[12:08:55] <scott_gonzalez> The serialized data is a string, not an object.
[12:09:07] <scott_gonzalez> You can use .serializeArray() to get an array of objects which you can then walk.
[12:09:14] <DaveMethvin> or append to
[12:09:23] <_|Nix|_> scott_gonzalez: Yeah, I think we pass it as an object into our nav.
[12:10:19] <scott_gonzalez> Yeah, you can handle the serialization however you want.
[12:10:30] <scott_gonzalez> The important part is letting the browser decide if the submit is going to happen.
[12:10:43] <scott_gonzalez> You absolutely do not want to write rules around what will submit a form.
[12:10:58] <_|Nix|_> No, I guess not.
[12:11:26] <scott_gonzalez> There are all kinds of crazy rules that come into play.
[12:11:29] <DaveMethvin> who "owns" the code that is serializing and sending the form?
[12:11:57] <DaveMethvin> if it's some code outside jqm then it's gonna be tougher
[12:12:06] <_|Nix|_> DaveMethvin: Nono ... it's inside.
[12:12:10] <DaveMethvin> but if it's jqm then the two can be cozy
[12:12:39] <_|Nix|_> DaveMethvin: We call $.mobile.changePage() with the data passed in.
[12:12:57] <_|Nix|_> DaveMethvin: ... which in turn loads the page via AJAX, performs the transition, etc.
[12:13:09] <DaveMethvin> yeah so just have a var that sets submitButton and changePage can look at it
[12:13:16] <DaveMethvin> and add it to the data
[12:14:18] <_|Nix|_> OK. A solution is beginning to crystallize in my brain ... ouch ...
[12:14:28] <_|Nix|_> Thanks guys!
[12:20:00] <_|Nix|_> OK ... there's a wrinkle: What if the form is submitted programmatically, and the last item that was clicked is a text input. I cannot assume that the click on the text input caused the form submission.
[12:20:20] <_|Nix|_> So, I still have to check that the last item that was clicked is one that could have submitted the form.
[12:21:03] <_|Nix|_> Like, it's not a textarea, and it's not a checkbox, and it's not a radio, etc.
[12:21:59] <gnarf> but in that case
[12:22:00] <scott_gonzalez> _|Nix|_: You can tell the difference between a programmatic submit and a user-initiated submit based on event.originalEvent.
[12:22:06] <gnarf> the data is already in the submit right?
[12:22:24] <gnarf> er serialized...
[12:24:00] <_|Nix|_> gnarf: Hmmm ... interesting ... if it is, then why are we serializing ourselves? ... maybe the presence of the data is not reliable across platforms.
[12:24:57] <_|Nix|_> scott_gonzalez: Interesting - if the element that initiated the submit is in the submit event /somewhere/ then that makes this /real/ simple ...
[12:25:39] <gnarf> i'm pretty sure the element isn't there
[12:25:47] <_|Nix|_> :(
[12:26:18] <gnarf> i mean't that if you clicked on a text last, the data for that text will already be in your serialized data, so you wouldn't need to add it again
[12:27:07] <scott_gonzalez> I meant that if event.originalEvent exists, it wasn't programmatic.
[12:27:14] <_|Nix|_> gnarf: I know, but if the serialized data is unavailable, and a button was clicked to submit the form, then I have to reconstruct the serialized data, and in the "submit" handler I don't know which button caused the submission.
[12:27:14] <scott_gonzalez> At least not programmatic through jQuery.
[12:27:32] <scott_gonzalez> I think it's fine to ignore the case of a programmatic DOM submit.
[12:29:27] <_|Nix|_> Alright ... I'll go with that ...
[12:30:18] <_|Nix|_> scott_gonzalez: After all, if the last thing that was clicked is a text input, then surely its name and value will already be in the serialized data, so my add-it-if-absent logic will be bypassed.
[12:30:33] <_|Nix|_> scott_gonzalez: ... unless it's a text input of another form.
[12:30:59] <_|Nix|_> ... which leads me to ask: Is there a way of determining which input belongs to which form?
[12:31:06] <scott_gonzalez> form.elements
[12:31:16] <_|Nix|_> scott_gonzalez: Oh, sweet!
[12:31:32] <_|Nix|_> scott_gonzalez: So, I think that might just nail it, even for programmatic submits.
[12:32:08] <scott_gonzalez> There's also element.form (not sure if it's cross-browser)
[12:32:35] <scott_gonzalez> Must be cross-browser, we're using it in UI.
[12:32:44] <_|Nix|_> scott_gonzalez: Nice!
[12:33:06] <_|Nix|_> OK. I guess some (proverbial?) knuckle-cracking is in order.
[22:35:27] <JamesMGreene> Yo, anyone around who is familiar with what jQuery does and does not support when working with text nodes?
[22:35:28] <b-ot> JamesMGreene: You have 1 new message, use `read when you wish to read it.
[22:35:46] <JamesMGreene> `read
[22:35:47] <b-ot> JamesMGreene: From jzaefferer, 5d 15h 57m 54s: what atomics commits are you talking about?
[22:49:28] <JamesMGreene> For example, I would expect `$("<div>bad</div>").contents().replaceWith("good");` to result in "<div>good</div>" but it is still "<div>bad</div>"
[23:00:27] <JamesMGreene> Nobody? :(
[23:00:45] <JamesMGreene> I wanted my plugin to be robust enough to deal with text nodes before I pushed it....
[23:01:10] <JamesMGreene> Maybe that's an unrealistic expectation if jQuery core doesn't deal with text nodes either, though, eh?
