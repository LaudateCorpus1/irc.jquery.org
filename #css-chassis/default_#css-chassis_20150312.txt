[03:26:52] <Samat> Trying to install css-chassis I followed https://github.com/jquery/css-chassis/pull/47 and https://github.com/jquery/css-chassis/pull/44 and the previous error does not appear anymore. However, there is new one. Any ideas?
[03:27:04] <Samat> samat@ubuntu:~/Desktop/css-framework-c38725d8309b12ba9a7d55bef89447202ab17170$ grunt perf Running "start-selenium-server:dev" (start-selenium-server) task >> Starting Selenium server... >> Using (roughly) command: java -jar node_modules/grunt-selenium-server/selenium-server-standalone-2.45.0.jar -Dwebdriver.chrome.driver=node_modules/chromedriver/bin/chromedriver >> Saw process for target: dev >> Boom, got it. pid is 22761 in cas
[03:27:43] <Samat> samat@ubuntu:~/Desktop/css-framework-c38725d8309b12ba9a7d55bef89447202ab17170$ grunt perf
[03:27:51] <Samat> Running "start-selenium-server:dev" (start-selenium-server) task
[03:28:01] <Samat> >> Starting Selenium server...
[03:28:09] <Samat> >> Using (roughly) command: java -jar node_modules/grunt-selenium-server/selenium-server-standalone-2.45.0.jar -Dwebdriver.chrome.driver=node_modules/chromedriver/bin/chromedriver
[03:28:16] <Samat> >> Saw process for target: dev
[03:28:25] <Samat> >> Boom, got it. pid is 22761 in case you give a shit. Attempting to clean up running selenium server.
[03:28:32] <Samat> >> Killing selenium target: dev
[03:28:40] <Samat> Fatal error: spawn ENOENT
[03:29:29] <Samat> P.S. the second row before the error is quite hilarious:)
[09:31:41] <hiren_> How css-chassis is going to diff from normal stylesheet themes provided by jquery-ui?
[09:32:29] <arschmitz> hiren_: well its going to replace them
[09:32:47] <arschmitz> but its also a lot more then that its a framework for styling your entire page
[09:33:14] <arschmitz> its also javascript agnostic so you can use any js library with it that can be made to add the proper classes
[09:33:19] <sfrisk> you can use it completely separate from jquery-ui/mobile
[09:35:26] <hiren_> Oh cool.. So we can use it with other js framework like angular,knockout,backbone etc.
[09:35:41] <sfrisk> yup
[09:35:47] <sfrisk> that will be the eventual plan
[09:36:03] <sfrisk> the css framework part you don't even really need to use JS to make it work
[09:38:55] <hiren_> It will be really cool to use it with different framework and CMS.
[09:39:22] <arschmitz> hiren_: for cms we have people from wordpress contributing already
[10:13:44] <geekman-rohit> hey, arschmitz, or sfrisk I have put together a few points about my theme-roller proposal, would love some suggestions anyone of you free?
[10:14:03] <sfrisk> sure, what's up?
[10:15:42] <geekman-rohit> I have put together a few points(6-7) , will paste them here in a second
[10:16:28] <geekman-rohit> Change font, colors, border size and border-radius (or any other variable components as suggested by chassis team)
[10:16:28] <geekman-rohit> A single swatch for specific customizations, eg. change color of just buttons, or only change border-radius of tables and leave others to default
[10:16:28] <geekman-rohit> Export and Import from URL (So URL can be shared or linked to other components)
[10:16:28] <geekman-rohit> Export into a variables file
[10:16:29] <geekman-rohit> Additional option to export into compiled css
[10:16:31] <geekman-rohit> Consider integrating with the download builder
[10:17:39] <geekman-rohit> sfrisk, here they are, thanks for your time, any additions or changes you can suggest?
[10:22:41] <arschmitz> geekman-rohit: ill give feed back when i get back need to run
[10:23:27] <geekman-rohit> arschmitz, sure, thanks!
[10:24:05] <sfrisk> geekman-rohit: looking it over, will let you know
[10:25:10] <geekman-rohit> yep, thanks
[10:50:48] <hiren_> What about drupal, joomla etc.?
[10:50:51] <hiren_> Still demo theme for css-chassis is going to develop by gsoc-15 student, not wordpress people right?
[10:51:55] <sfrisk> if you want to do a theme for druapl/joomla/etc that would be awesome
[10:52:51] <michaelarestad> <3 WordPress people.
[10:53:56] <arschmitz> michaelarestad: well yeah!
[10:54:07] <arschmitz> ;-)
[11:09:39] <sfrisk> indeed
[11:14:23] <sfrisk> geekman-rohit: stuff for work come up, I'll get back to you a bit later on my thoughts
[11:15:42] <geekman-rohit> Proposals dont start till monday! how about I email it to you, and you reply whenever you find time?
[11:16:29] <sfrisk> That work!
[11:16:31] <sfrisk> that works*
[11:16:38] <geekman-rohit> thanks, will do :)
[13:23:09] <GreatDanton> arschmitz, hi
[13:23:28] <GreatDanton> I am also interested in Chassis - Styling Components for JS Libraries
[13:23:51] <sfrisk> Yay!
[13:23:54] <GreatDanton> so this is actually writing css code?
[13:23:58] <sfrisk> SCSS code
[13:24:10] <arschmitz> its also markup
[13:24:20] <sfrisk> It would be creating UI components with SCSS and html
[13:24:27] <arschmitz> and working with js libaries like jquery ui mobile dojo etc to come to agreements on these
[13:24:47] <sfrisk> since a lot of the components with be things the two frameworks would share
[13:24:54] <arschmitz> GreatDanton: sfrisk is the lead on chassis
[13:25:01] <GreatDanton> aha
[13:25:02] <GreatDanton> =)
[13:25:40] <GreatDanton> well I am not sure what this scss actually is, I do know css, html quite well
[13:26:05] <arschmitz> GreatDanton: is a css preprocessor that allows the use of things like variables
[13:26:11] <sfrisk> SCSS is very similar to css, but gives you a lot more power
[13:26:12] <sfrisk> http://sass-lang.com/
[13:26:26] <sfrisk> That's a good site to go through if you're interested learning more about it
[13:26:34] <GreatDanton> I am actually
[13:26:48] <GreatDanton> I really like web stuff
[13:30:21] <GreatDanton> so sfrisk where can I begin? In ideas page there is : Up next, find a project you're interested in and try to contribute a small fix.
[13:30:40] <sfrisk> check out css-chassis.com and look at the Issues
[13:30:58] <sfrisk> join in/read the current issue discussions
[13:31:20] <sfrisk> the stuff marked with "Phase One" are items that we'll be working on for the next few months
[14:35:13] <GreatDanton> sfrisk, thanks for that site you send me before. When I was writing my site I was constantly scrolling around just to reuse the same colors =|
[14:35:30] <sfrisk> Variables are a wonderful thing :-)
[18:05:26] <chassis-commit> [css-chassis] arschmitz closed pull request #47: Build: Move download location to be within the node module (master...selenium-location) http://git.io/p8ky
[19:06:42] <chassis-commit> [css-chassis] arschmitz closed pull request #50: Add css comb to clean up libsass output and verify style guide compliance in scss files (master...css-comb) http://git.io/p8w2
[19:10:29] <arschmitz> michaelarestad: how goes?
[19:10:46] <michaelarestad> arschmitz: oh hey! Pretty good.
[19:10:57] <michaelarestad> Starting to slow down on projects a little.
[19:11:12] <arschmitz> michaelarestad: want to see something funny go to the chassis repo and check the language statistics
[19:11:22] <arschmitz> our 100% js free lib is 80% JS!!!!!
[19:12:53] <michaelarestad> Ha!
[19:13:14] <michaelarestad> Wah wah.
[19:13:29] <michaelarestad> That will change shortly
[19:13:35] <arschmitz> yup
[19:14:02] <arschmitz> michaelarestad: i fixed the newline eof issue with libsass
[19:14:12] <michaelarestad> Yeah? How?
[19:14:19] <arschmitz> csscomb
[19:14:33] <michaelarestad> Was just looking at that. Nice.
[19:14:36] <arschmitz> run that as part of the build
[19:14:52] <arschmitz> only way to get libsass to follow our style guide right now i think
[19:15:05] <arschmitz> because it cant do expanded output
[19:15:16] <arschmitz> plus the eof issue
[19:15:53] <michaelarestad> Right.
[19:16:50] <michaelarestad> I wrote a big ol' ordering list of properties for CSS combo if we go with property grouping sections instead of alpha.
[19:18:07] <arschmitz> cool
[19:18:26] <arschmitz> i would run them both and see which gets smaller gzip output after cssmin
[19:18:50] <arschmitz> when it comes to grouping and ordering of properties i think thats about the only thing that matters in the end
[19:19:06] <michaelarestad> I'm guessing it would be almost no difference if they both were used strictly.
[19:19:29] <michaelarestad> But yeah. Totally should measure that.
[19:19:53] <arschmitz> im not so sure
[19:20:11] <arschmitz> if you got your groupings right i think that would totally win
[19:20:32] <arschmitz> because gzip is all about repeted strings so if you grouped them based on most common groupings
[19:20:39] <arschmitz> you would get a good size reduction
[19:21:03] <arschmitz> michaelarestad: and i have a great graph for this!!!
[19:21:05] <michaelarestad> True.
[19:21:22] <michaelarestad> They are grouped with very similar strings.
[19:22:01] <arschmitz> michaelarestad: https://docs.google.com/presentation/d/1_15yz1uT-oq17ZNsZTczGgwUh-TP15gGO6DFcz_XTJU/edit#slide=id.g688356856_20
[19:22:05] <arschmitz> check out topcoat
[19:22:18] <arschmitz> see how dramatic its size reduction is
[19:22:44] <michaelarestad> Yep.
[19:22:48] <arschmitz> combo of bem and really really good gzip optimization through grouping
[19:23:02] <michaelarestad> Nice. Will have to see what we can take from that.
[19:23:19] <arschmitz> michaelarestad: i have more detailed stuff somewhere
[19:23:25] <arschmitz> but pre gzip its one of the biggest
[19:23:29] <arschmitz> and loc same
[19:23:43] <arschmitz> but they have insane gzip optimization so they are the smallest after
[19:23:55] <arschmitz> i have access to the guy who did it to pick his brain lol
[19:24:52] <michaelarestad> Awesome. Perfect.
[19:25:11] <michaelarestad> I think for this project I'd prefer we focus on gzip optimization versus smallest size.
[19:25:23] <arschmitz> the original chart for private eyes was a bit more dramatic
[19:25:26] <michaelarestad> Though we could totally automate the build to cater to either.
[19:25:54] <arschmitz> michaelarestad: i had to take the time to explain how gzip worked to a lot of people to before they would belive it was a not a mistake
[19:26:08] <michaelarestad> Yeah. You're not the only one.
[19:26:36] <arschmitz> michaelarestad: yeah most people dont really know how gzip works and often when they attempt to optimize for it they do the oppisite
[19:26:43] <michaelarestad> I've been reading alot about it in @extend versus @mixin debates.
[19:26:49] <michaelarestad> @mixin is smaller.
[19:26:56] <arschmitz> yup
[19:27:05] <arschmitz> because it maintains the whole block
[19:27:08] <michaelarestad> Yep.
[19:27:14] <arschmitz> so its a much better repeted string
[19:27:24] <arschmitz> michaelarestad: the classis example is in js
[19:27:37] <arschmitz> when people make a var opt to replace repeted use of options
[19:27:39] <arschmitz> or similar
[19:27:43] <arschmitz> that does not help at all
[19:27:54] <michaelarestad> Interesting.
[19:28:08] <arschmitz> because they can both be compressed to o
[19:28:17] <arschmitz> but one you have the extra var statement
[19:29:22] <arschmitz> in general when people do things to "optimize for gzip" my advice is dont you dont understand it enough to do it right. so unless your making your change then checking the difference in final gzip size your probably doing it wrong
[19:29:40] <michaelarestad> Yep.
[19:29:55] <michaelarestad> Have to compare before/after or it's a waste of effort.
[19:30:00] <arschmitz> yup
[19:30:14] <arschmitz> often your "optimizations" will have the oppisite effect
[19:30:38] <arschmitz> i know some projects where they run it through EVERY minifier and sometimes multiple
[19:30:48] <michaelarestad> lol
[19:30:50] <arschmitz> then to gzip and compare
[19:30:52] <michaelarestad> That's not how it works.
[19:30:57] <arschmitz> to get the combo with the best result
[19:31:02] <michaelarestad> Interesting.
[19:31:05] <arschmitz> oh no that really works
[19:31:27] <arschmitz> before each release they figure out what combo does the best optimization and use that
[19:31:45] <arschmitz> its either underscore or lodash that does it i cant remember
[19:31:58] <michaelarestad> Huh
[19:31:59] <michaelarestad> Cool
[19:32:09] <michaelarestad> Automated?
[19:32:16] <arschmitz> i think so but not sure
[19:34:11] <arschmitz> michaelarestad: once it makes sense ill add a sizer task to compare the size commit to commit sort of thing
[19:34:22] <arschmitz> but right now its pointless "Yup it got bigger!"
[19:34:23] <michaelarestad> Rad.
[19:34:55] <michaelarestad> I'd still like to track commit to commit, but for the next few weeks, not super critical.
[19:35:09] <arschmitz> michaelarestad: yeah ill add it once it makes sense
[19:35:17] <arschmitz> we just need to decide when ever that is
[19:35:39] <michaelarestad> Yeah.
[19:36:00] <michaelarestad> Probably when we get somewhat close to a v1.
[19:36:08] <arschmitz> thats what i figured
[19:37:09] <michaelarestad> You're familiar with CSSstats as well?
[19:37:28] <michaelarestad> I'd like to do some of those measurements as well. Selector count, colors, etc.
[19:38:26] <arschmitz> michaelarestad: yeah i would keep results on the pattern libaray
[19:38:34] <michaelarestad> Rad.
[19:38:35] <arschmitz> since that will include essentially one of everything
[19:38:54] <arschmitz> it will give a good overview of the library as a whole
[19:40:30] <arschmitz> michaelarestad: right now we are rocking 82 B :-)
[19:41:03] <michaelarestad> Sounds about right.
[19:50:29] <sfrisk> woah, words
[19:50:42] <michaelarestad> :)
[19:52:18] <arschmitz> we say things
[19:52:19] <sfrisk> leave you guys alone for a few hours, all the chatting
[21:28:41] <chassis-commit> [css-chassis] arschmitz closed pull request #46: Component: Performance FrameWork Fixes, Added Semantic-UI (master...2-performance-testing) http://git.io/pqnk
