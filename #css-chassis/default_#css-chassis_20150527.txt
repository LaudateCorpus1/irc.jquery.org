[09:32:27] <geekman-rohit> hey
[09:32:32] <sfrisk> Okay GSOC mini meeting! Go!
[09:32:39] <michaelarestad> 8)
[09:32:42] <sfrisk> arschmitz, geekman-rohit!
[09:32:44] <sfrisk> bam!
[09:32:57] <arschmitz> geekman-rohit: so i know originally i had recomended you start with the back end then build out the front
[09:33:07] <arschmitz> geekman-rohit: but im going to now recomend a complete 180
[09:33:10] <geekman-rohit> yes, arschmitz
[09:33:23] <geekman-rohit> okay front end first ?
[09:33:26] <arschmitz> since you will be using the chassis node based build id build out your ui and interface first
[09:33:33] <arschmitz> then just connect it to the build when your done
[09:33:51] <arschmitz> so you can focus on awesome UI and UX in the beginning and then just basicly plug it in
[09:33:55] <geekman-rohit> I am actually kindof making  a demo app, in 2 days
[09:34:02] <geekman-rohit> like proof of concept
[09:34:17] <arschmitz> because 90% of the builder is the front end at this point
[09:34:25] <geekman-rohit> yes, I agree
[09:34:35] <arschmitz> your just going to collect the current values and pass them to  a build then do some packaging
[09:34:37] <geekman-rohit> the backend will just parse data into json and pass to chassi build
[09:34:43] <geekman-rohit> yep
[09:34:44] <sfrisk> well if we want to do front end first, I think we should hash out all the functionality that should be covered
[09:34:45] <arschmitz> so that should be pretty simple at the end to set up
[09:34:46] <geekman-rohit> agreed
[09:34:54] <sfrisk> and either I or I can go blackmail someone can come up with some wireframes
[09:34:57] <geekman-rohit> agreed, sfrisk
[09:35:08] <arschmitz> yeah i think that makes sense
[09:35:26] <geekman-rohit> but only typography is done, as of now
[09:35:39] <arschmitz> the only 3 examples i know to look at for inspiration right now is ui, mobile and bootstrap
[09:35:53] <arschmitz> geekman-rohit: that and colors will be most of it
[09:36:03] <arschmitz> and you can use placeholder componenets
[09:36:12] <geekman-rohit> works, arschmitz
[09:36:13] <arschmitz> for the most part that wont effect the functionality
[09:36:31] <geekman-rohit> we can later add components as we build then
[09:36:33] <arschmitz> thats just what goes in the preview frame basicly
[09:36:47] <arschmitz> geekman-rohit: and most componenet probably wont have much in the way of variables
[09:37:06] <geekman-rohit> um hm
[09:37:07] <arschmitz> those are generally most universal things like colors and typography radius's etc
[09:37:15] <geekman-rohit> yep
[09:37:16] <sfrisk> except for maybe the colors and border radius
[09:37:51] <arschmitz> sfrisk: you already have a sample color file i can commit with the jsass-vars stuff
[09:38:03] <geekman-rohit> okay, I'll shift my focus to ui first
[09:38:08] <arschmitz> and you can change it from there but typography and colors hsould give a good start
[09:38:23] <geekman-rohit> works
[09:38:26] <sfrisk> sounds good
[09:38:39] <geekman-rohit> so now sfrisk, we will start work on the wireframe
[09:38:48] <sfrisk> yeah
[09:39:02] <geekman-rohit> arschmitz
[09:39:11] <arschmitz> yes?
[09:39:16] <geekman-rohit> for now I plan to encode data into url directly?\
[09:39:28] <arschmitz> sure
[09:39:33] <geekman-rohit> like JSON.stringify
[09:39:41] <arschmitz> the only issue with that is potential url length issues
[09:40:01] <geekman-rohit> i was thinking for that we could fix an order, and remove variable names, and send only values
[09:40:09] <geekman-rohit> we parse in the same order
[09:40:21] <geekman-rohit> so like #000000#111111
[09:40:43] <geekman-rohit> where first 7 chars is primary color, next 7 secondary color, something like that
[09:40:46] <arschmitz> so i know on ui they had to go a bit more intense
[09:41:09] <arschmitz> this is a url for ui theme roller thats bookmarkable
[09:41:10] <arschmitz> http://jqueryui.com/themeroller/#!zThemeParams=5d00000100f405000000000000003d8888d844329a8dfe02723de3e5701fa198449035fc0613ff729a37dd818cf92b1f6938fefa90282d04ae436bb72367f5909357c629e832248af2c086db4ab730aa4cced933a88449eca61db9f7f3b23d47f58a712d809b6088edfb34ad39fdc365386d0fa05a1ac3ecd320d2c989729f79ebdc6c6c1efbdad4c8411d498f009ffe98fe129da7602fb950113abdae4a76a6c41a4b54b4f82bb8821d6d431cd3fdd76b9d62159
[09:41:11] <arschmitz> 6a2728b93385f2e7aaf8ea6603553343d43845f9b9813cf7a7c45c0cc7c8b831e12044e5d2cd407e9cdee25df8d48bee0ae15bbf0bd0fae0019be07925cc1eaa3ef5f210ca3652b36bd82efe025191990a42a4d314c64531424b64022afbe61c1371452118c544380a0dfbf25735de77820d0a869e49a9c1d645cf4d689c86715bd8aa8ea09348efe1d52ddff5588512de4434a9c69ac9a94e5d1242ad4c29ae24825982e176953b01f598cf6f8387c0b5d17dd79dc31bb6246dcd9afd20cd3514868518f3a15fe14f72dccb
[09:41:12] <arschmitz> 4a5166a3f947e99d8b82fd81b397001315e9ba59c353220b46fa313b207079874a33f361e828c37ad88d7f402663452608aa6ef7477041cf6e74c1997be9d56fad6968edb2ad28487f9fe6244538832fc7ffef8801c46
[09:41:55] <geekman-rohit> um, I did look into that, Ill go deeper
[09:42:00] <geekman-rohit> what do you think of that?
[09:42:09] <geekman-rohit> i was thinking for that we could fix an order, and remove variable names, and send only values
[09:42:09] <geekman-rohit> <geekman-rohit> we parse in the same order
[09:42:09] <geekman-rohit> <geekman-rohit> so like #000000#111111
[09:42:27] <geekman-rohit> we can even get rid of hashes
[09:42:30] <arschmitz> im worried you will exceed the max url length
[09:42:48] <arschmitz> also our style guide prefers short hex values when possible
[09:42:53] <arschmitz> so you would still need a delemiter
[09:43:06] <geekman-rohit> one extra char
[09:43:09] <arschmitz> and you wouldnt want to force convert short values
[09:43:28] <geekman-rohit> its not a problem at start, I'll look at all options and come up with a good one in a day or two
[09:44:18] <geekman-rohit> i have mobile themeroller set up locally, I'll do the same with ui's and dig deeper
[09:44:33] <arschmitz> geekman-rohit: do me a favor and count the number of variables andmultiply by 7
[09:44:40] <arschmitz> in ui theme roller
[09:45:17] <sfrisk> because we will have ALL the variableS?
[09:45:31] <arschmitz> we may have more we may have less
[09:45:49] <arschmitz> but using an existing framework gives us a good guess as to how many we will have
[09:46:16] <geekman-rohit> 406 i guess
[09:46:17] <arschmitz> considdering our scope is much bigger then ui i would expect us to have more
[09:46:21] <geekman-rohit> 58 is what i counted
[09:46:24] <geekman-rohit> no. of variables
[09:46:29] <arschmitz> ok
[09:46:57] <arschmitz> the max url length is 2083 chars
[09:47:20] <geekman-rohit> what could be the max no. of vars we could have
[09:47:26] <geekman-rohit> any time in future?
[09:47:44] <arschmitz> well lets give a good healthy 100 chars for the regular url
[09:48:08] <arschmitz> and just round some more and say we have 1900 to play with
[09:48:27] <arschmitz> is there any value we could want to encode that is more then 7 chars
[09:48:36] <arschmitz> yes things like font names
[09:48:40] <geekman-rohit> yes
[09:48:43] <geekman-rohit> font family
[09:48:43] <geekman-rohit> yep
[09:48:49] <arschmitz> even shadows
[09:48:52] <geekman-rohit> whats the max that could go to
[09:48:58] <arschmitz> urls
[09:49:03] <arschmitz> for backgrounds or icons
[09:49:05] <geekman-rohit> urls?
[09:49:07] <geekman-rohit> oh
[09:49:31] <arschmitz> so there is essentially no limit to a single value length
[09:49:44] <arschmitz> but most should be 7 or less
[09:50:12] <arschmitz> so to account for that lets use a nice average of 10
[09:50:52] <geekman-rohit> 10 * a max of 100 ?
[09:53:47] <geekman-rohit> we could have fallback mechanism in case of anything exceeeding limits
[09:53:54] <geekman-rohit> for just in case situations
[09:54:08] <geekman-rohit> so the api supports bot POST and GET?
[09:54:25] <sfrisk> I know we discussed being able to upload a config file to go back to a theme state...
[09:54:44] <geekman-rohit> sfrisk, now we just use a url
[09:55:07] <geekman-rohit> so a user can simply bookmark the url and return to that state, all data inside the url
[09:55:20] <sfrisk> yeah, but it might be nice for upgrade purposes, or if we saved the url in the project that was genreated
[09:55:32] <sfrisk> generated*
[09:55:46] <geekman-rohit> we could let the user download a file too then, containg variables
[09:55:55] <geekman-rohit> or we could let him download a vars.scss
[09:56:05] <geekman-rohit> which he can also later upload
[09:58:30] <geekman-rohit> should i look at any string compression mechanisms?
[10:00:19] <sfrisk> @archmitz?
[10:00:23] <sfrisk> arschmitz*
[10:01:06] <geekman-rohit> he must be occupied, or calculating things and finding solution for us :P
[10:01:55] <geekman-rohit> sfrisk, it does bother me a bit that we are switching to UI first :P
[10:01:59] <sfrisk> yeah, I know he and I are about to go into a meeting
[10:02:33] <sfrisk> or we're supposed to
[10:02:51] <geekman-rohit> oh I'll ping later, I plan to get my css and jquey ui revised, so I am tucking in late
[10:03:01] <sfrisk> okay, sounds good
[10:03:07] <sfrisk> hopefully this was helpful
[10:03:13] <sfrisk> and we're here most days if you need us
[10:03:14] <geekman-rohit> yes very!
[10:04:07] <geekman-rohit> I am still a little .. unclear about ui, coz I was more focused on nodejs api sofar, but I should be fine as long as you are here to help! :)
[10:04:18] <sfrisk> yeah, I'll be here to help
[10:04:28] <sfrisk> michaelarestad is a good designer too, so I might bug him as well
[10:05:08] <geekman-rohit> yay :)
[10:05:26] <geekman-rohit> the npm chassis module actually takes a lot of work offme
[10:05:56] <geekman-rohit> so I should be able to add the spare time to help with chassis components development once we have the base donw
[10:07:00] <sfrisk> sounds good
[10:07:10] <geekman-rohit> thanks everyone :)
[10:16:21] <michaelarestad> :)
