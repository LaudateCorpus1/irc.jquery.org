[11:15:00] <ryanneufeld> Krinkle: yt?
[11:15:18] <Krinkle> I am, but currently in a meeting. be there in 20 minutes
[11:15:29] <ryanneufeld> k
[11:31:54] <Krinkle> ryanneufeld: b
[11:32:26] <ryanneufeld> Krinkle: I was gonna ask you about testswarm, but i'll wait. Stay tuned :)
[11:32:52] <Krinkle> Okay.. ? I'm curious now
[11:32:58] <Krinkle> Here when you need me.
[11:37:15] <ryanneufeld> Thanks Krinkle. I hear you rewrote most of it already? 
[11:37:35] <Krinkle> I rewrote testswarm last year.
[11:37:43] <Krinkle> I'm improving it this year :)
[11:38:09] <Krinkle> but yeah, the projects branch refactors the user/job relations in the system to be more scalable for what testswarm is being used for today by people.
[11:39:02] <ryanneufeld> I'd like to help
[12:09:59] <gnarf> rxaviers: https://www.tarsnap.com/download.html
[12:10:06] <rxaviers> got it
[12:27:34] <Krinkle> ryanneufeld: you'd like to help
[12:27:52] <ryanneufeld> Krinkle: yes, I'm reading the PHP codez now
[12:28:31] <Krinkle> There is also some high level documentation here: https://github.com/jquery/testswarm/wiki/Code-Documentation
[12:28:59] <Krinkle> Though a big chunk is changing and will land this week (I am aiming for Thursday)
[12:29:27] <Krinkle> Progress is in the projects branch, although nothing changes the infrastructure design 
[12:30:54] <ryanneufeld> k
[12:31:29] <ryanneufeld> Krinkle: which projects branch should I use?
[12:31:37] <Krinkle> the latest (-4)
[12:31:37] <ryanneufeld> and you've not pushed to master?
[12:31:51] <Krinkle> projects-4? no
[12:31:55] <Krinkle> That's still incomplete
[12:32:00] <Krinkle> master is always functional
[12:32:16] <ryanneufeld> Master is ahead of projects 4
[12:32:25] <Krinkle> 1 ahead, 1 behind
[12:32:57] <Krinkle> A few minor bug fixes
[12:33:05] <Krinkle> projects4 will be rebased
[12:33:07] <ryanneufeld> http://cl.ly/image/1J3U3k3h0j37
[12:33:09] <Krinkle> I know
[12:33:12] <ryanneufeld> k
[12:33:30] <ryanneufeld> which one should I branch off of then projects 4?
[12:33:36] <Krinkle> for what?
[12:33:47] <Krinkle> Anything should go off master
[12:33:55] <ryanneufeld> ok
[12:34:06] <Krinkle> There are no major changes in the issue tracker that are being worked on other than projects
[12:34:19] <Krinkle> so minor changes go off master, then merged into master, and I'll rebase.
[12:34:35] <Krinkle> but if you're working on anything, please assign yourself in the issue tracker.
[12:34:58] <ryanneufeld> yeah, I'm just taking a look now
[12:35:05] <Krinkle> ryanneufeld: btw, what do you use to display two different branches in the prettified git log?
[12:35:07] <ryanneufeld> just reading the code
[12:35:28] <gnarf> thats just git "lg"
[12:35:40] <Krinkle> my git log-pretty looks almost the same, except that it doesn't show multiple trees
[12:35:49] <gnarf> here's the alias:
[12:35:49] <gnarf>  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative 
[12:36:18] <ryanneufeld> Krinkle: https://gist.github.com/ryanneufeld/5085404
[12:36:21] <gnarf> git lg master...projects-4
[12:36:37] <Krinkle> There is no such thing as "just git lg" that's a custom alias, I have a similar one, called "git lp", but what makes it include other branch trees?
[12:36:54] <Krinkle> ah, --all
[12:36:55] <gnarf> Krinkle: the commitsh argument to lg
[12:36:55] <Krinkle> that's the one
[12:37:08] <gnarf> that too
[12:37:23] <Krinkle> what I mean is, git-lg can be anything you make it, it's not like it is a standard thing or something.
[12:37:39] <Krinkle> k
[12:37:44] <ryanneufeld> I just use git lg
[12:38:09] <Krinkle> yeah, but you did copy or write it yourself. my git-lg can be completely differrent.
[12:38:55] <ryanneufeld> Krinkle: it's what I use, I got it from a github training my company put us through
[12:39:02] <Krinkle> k
