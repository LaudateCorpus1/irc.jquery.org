[08:51:08] <jzaefferer> danheberden gnarf ryanneufeld: I think during the dev summit someone started working on a generated index.html for the cdn - do you know what happened to that?
[08:51:31] <jzaefferer> we can automate the upload elsewhere, but the index.html editing is still pretty annoying when you do frequent releases
[08:59:05] <ryanneufeld> jzaefferer: https://github.com/jquery/code.jquery.com
[08:59:50] <ryanneufeld> That's the work that was done. I'm not sure about actually executing it or where it would ive
[08:59:52] <ryanneufeld> *live
[09:00:09] <jzaefferer> ah, okay
[09:00:22] <jzaefferer> I guess that would have to be puppetized
[09:05:36] <ryanneufeld> Yeah, that would make sense. I don't think I'll personally have time to look at it until after the 21st
[09:14:26] <jzaefferer> okay
[09:34:53] <gnarf> It's actually pretty high on my list
[09:34:58] <gnarf> I want to make the whole thing a repo
[09:35:04] <gnarf> so pushing a release is just pushing to the repo
[09:35:20] <gnarf> Might get some work on that this week
[13:21:54] <gnarf> clarkbox: splunk drive is re-mounted!
[13:22:10] <clarkbox> SWEET!
[15:01:51] <Krinkle> clarkbox: Q
[15:02:09] <Krinkle> clarkbox: testswarm api exposes stats on how many pending runs
[15:02:17] <Krinkle> JSON, parsable, aggregateable
[15:02:22] <Krinkle> idea; get in splunk
[15:02:22] <Krinkle> so..
[15:02:33] <Krinkle> cron and write to file monitored with splunk?
[15:02:45] <Krinkle> then I heared "splunk script"
[15:03:13] <Krinkle> would be be feasible to have a script that makes the api http request, parses json, adds the numbers to a total, and use that as raw data / source in splunk ?
[15:19:37] <clarkbox> yes
[15:20:24] <clarkbox> krinkle ^
[15:20:36] <clarkbox> scripted input
[15:22:15] <clarkbox> you can see the scripted inputs here https://splunk.jquery.com:8000/en-US/manager/search/data/inputs/script
[15:24:54] <Krinkle> clarkbox: nice
[15:26:37] <Krinkle> clarkbox: hm.. so where do I store these scripts?
[15:26:46] <Krinkle> am I supposed to put them on splunk server in /opt ?
[15:26:52] <clarkbox> anywhere really
[15:26:52] <Krinkle> or upload them via web interface?
[15:26:55] <clarkbox> but ideally, in....
[15:26:55] <Krinkle> not sure how to get them 
[15:27:03] <clarkbox> you'll have to place it on disk
[15:27:30] <Krinkle> clarkbox: on splunk.jquery.com, right ?
[15:28:15] <Krinkle> do we have a directory for our own scripts? (I imagine /opt/splunk might be discouraged due to upgrading / installing plugins conflicting)
[15:28:49] <clarkbox> well its best to create an app to house the scripts
[15:29:21] <clarkbox> so /opt/splunk/etc/apps/APPNAME/bin
[15:29:46] <clarkbox> you don't need to do anything to create an app. just place the file in that dir convention
[15:29:56] <clarkbox> its just a way to organize things
[15:31:27] <clarkbox> also, anything you put in etc/system/local will be preserved
[15:31:33] <clarkbox> so you could create a bin did there.
[15:32:11] <clarkbox> *IN there
[15:32:26] <Krinkle> ok
[15:32:58] <Krinkle> clarkbox: it can take arguments, right ?
[15:33:45] <clarkbox> yes
[15:33:56] <clarkbox> i am not certain of how its done
[15:34:20] <clarkbox> http://docs.splunk.com/Documentation/Splunk/latest/admin/inputsconf
[15:34:34] <clarkbox> that is the conf file that backs that URL i posted above 
[15:38:01] <clarkbox> [script://$SPLUNK_HOME\bin\scripts\test.cmd arg1 arg2]
[15:38:32] <clarkbox> i think that directory may be more appropriate for the script
[16:13:49] <Krinkle> clarkbox: So what I'd like to output from the script is key/value pairs uaID => pendingRuns. Can it take those from one row?
[16:14:18] <Krinkle> I mean, when there is 1 event for each key/value pair, we can generate a timechart, span by X and then we'll see e.g. how they go down/up and the total with a bar graph
[16:14:27] <Krinkle> but they're not events in this case, but pulled data
[16:14:34] <Krinkle> so it is all at once, and that every few minutes.
[16:15:11] <Krinkle> so 1 event has 20 key/value pairs. Where the key is a line on a graph, and the value a number for the y ax
[16:15:24] <Krinkle> should be possible I guess
[16:15:56] <Krinkle> I'll check it out tomorrow
[16:16:00] <Krinkle> thx for the link
[16:34:50] <clarkbox> do you have an example of the output?
[16:34:55] <clarkbox> krinkle
[16:35:13] <Krinkle> well I haven't actually written the script yet
[16:35:19] <clarkbox> oh ok
[16:35:38] <Krinkle> but I'll write a node script that requests http://swarm.jquery.org/api.php?action=swarmstate
[16:35:55] <Krinkle> then look through the aggregate it into just uaID => pendingRuns
