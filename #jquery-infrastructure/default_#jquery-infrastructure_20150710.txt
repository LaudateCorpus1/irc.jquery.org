[07:47:55] <jqcommit> [13infrastructure] 15markelog opened pull request #331: TestSwarm: Add yandex.browser 14.12 (06puppet-master...06yandex) 02https://github.com/jquery/infrastructure/pull/331
[09:26:33] <jqcommit> [13infrastructure] 15Krinkle pushed 1 new commit to 06puppet-master: 02https://github.com/jquery/infrastructure/commit/305a8b31fdbfc852651714865261505db4aec9f2
[09:26:33] <jqcommit> 13infrastructure/06puppet-master 14305a8b3 15Oleg Gaidarenko: TestSwarm: Add Yandex Browser 14.12
[09:26:42] <jqcommit> [13infrastructure] 15Krinkle merged 06puppet-master into 06puppet-stage: 02https://github.com/jquery/infrastructure/compare/71d211e638a5...305a8b31fdbf
[09:30:32] <markelog> Krinkle: .
[09:30:55] <markelog> so it all good to merge?
[09:30:59] <Krinkle> 92.30.252.45)
[09:31:00] <Krinkle> 15:47 jqcommit: [infrastructure] markelog opened pull request #331: TestSwarm: Add yandex.browser 14.12 (puppet-master...yandex) https://github.com/jquery/infrastructure/pull/331
[09:31:00] <Krinkle> 15:47 jqcommit has left ()
[09:31:01] <Krinkle> 17:26 jqcommit has joined (~jqcommit@192.30.252.34)
[09:31:03] <Krinkle> 17:26 jqcommit: [infrastructure] Krinkle pushed 1 new commit to puppet-master: https://github.com/jquery/infrastructure/commit/305a8b31fdbfc852651714865261505db4aec9f2
[09:31:05] <Krinkle> 17:26 jqcommit: infrastructure/puppet-master 305a8b3 Oleg Gaidarenko: TestSwarm: Add Yandex Browser 14.12
[09:31:07] <Krinkle> 17:26 jqcommit has left ()
[09:31:09] <Krinkle> 17:26 jqcommit has joined (~jqcommit@192.30.252.41)
[09:31:11] <Krinkle> 17:26 jqcommit: [infrastructure] Krinkle merged puppet-master into puppet-stage: https://github.com/jquery/infrastructure/compare/71d211e638a5...305a8b31fdbf
[09:31:13] <Krinkle> 17:26 jqcommit has left ()
[09:31:15] <Krinkle> 17:30
[09:31:17] <Krinkle> It already merged
[09:31:22] <Krinkle> Hm.. Forgot to add a "closes". line
[09:31:25] <jqcommit> [13infrastructure] 15Krinkle closed pull request #331: TestSwarm: Add Yandex Browser 14.12 (06puppet-master...06yandex) 02https://github.com/jquery/infrastructure/pull/331
[09:31:43] <markelog> okay, i will continue further then
[09:31:57] <Krinkle> Might take a while though since puppet applies once per 30 min from cron
[09:32:00] <Krinkle> let me trigger a run
[09:32:10] <markelog> thanks!
[09:34:10] <markelog> Krinkle: on the swarm i see only Chrome at the minute? Should i have seen other browsers? Like ff or IE?
[09:34:30] <Krinkle> markelog: Where are you looking?
[09:34:42] <markelog> http://swarm.jquery.org/run/markelog....
[09:34:53] <Krinkle> markelog: What does it say? Which icon?
[09:35:15] <markelog> Chrome 43 "No new tests to run. Getting more in 6 seconds."
[09:35:49] <Krinkle> markelog: Which OS
[09:36:00] <markelog> Chrome 43.0.2357
[09:36:01] <markelog> Mac OS X 10.10.4
[09:36:27] <markelog> oh, i get it
[09:36:29] <Krinkle> here it says "browser not needed" when I join with Yandex
[09:36:32] <Krinkle> Not chrome
[09:37:10] <markelog> yeah, i see that message now to
[09:37:14] <markelog> was on the chrome before
[09:37:21] <Krinkle> It has to be in a group for it to show up
[09:37:21] <Krinkle> hold on
[09:39:13] <Krinkle> I've added it to debug group
[09:39:21] <Krinkle> now it shows on the home page  http://swarm.jquery.org/
[09:39:29] <Krinkle> but /run still says "not needed'
[09:39:33] <Krinkle> which means it didn't recognise it
[09:39:43] <markelog> so ua-parser problem?
[09:39:51] <Krinkle> Probably
[09:39:54] <Krinkle> let me check
[09:44:41] <Krinkle> stdCass browserFamily Yandex Browser browserMajor 14 browserMinor 12
[09:44:56] <Krinkle> markelog: your patch had "browserFamily": "Yandex",
[09:45:02] <Krinkle> ua-parser parses as "Yandex Browser"
[09:45:19] <markelog> didn't know that, could you commit the right name?
[09:45:26] <Krinkle> yeah
[09:47:53] <jqcommit> [13infrastructure] 15Krinkle pushed 1 new commit to 06puppet-master: 02https://github.com/jquery/infrastructure/commit/8fb5f1f1603cfd1fb3e17310b0662ce1630c0fe0
[09:47:53] <jqcommit> 13infrastructure/06puppet-master 148fb5f1f 15Timo Tijhof: TestSwarm: Fix yandex detection ("Yandex Browser")...
[09:48:32] <jqcommit> [13infrastructure] 15Krinkle merged 06puppet-master into 06puppet-stage: 02https://github.com/jquery/infrastructure/compare/305a8b31fdbf...8fb5f1f1603c
[09:50:03] <Krinkle> markelog: works :)
[09:50:28] <markelog> mm, i still see "Your browser is not needed by this swarm."
[10:07:37] <Krinkle> markelog: Still?
[10:19:47] <jqcommit> [13infrastructure] 15Krinkle closed issue #327: TestSwarm's ua-parser yaml file out of date 02https://github.com/jquery/infrastructure/issues/327
[10:20:16] <markelog> Krinkle: yep
[10:20:21] <markelog> do you see different picture?
[10:20:25] <Krinkle> Yeah
[10:20:35] <Krinkle> Let me look again
[10:20:48] <Krinkle> Yep
[10:20:51] <Krinkle> markelog: may've been cached
[10:21:06] <Krinkle> It now says Krinkle / no new tests to run / Connected to th swarm
[10:21:10] <Krinkle> Yandex Browser 14.12
[10:21:28] <markelog> okay, lets operate under this assumption
[10:22:07] <Krinkle> markelog: Still need to make sure testswarm-browser stack can translate the testswarm UA requirement to a browserstack worker
[10:22:08] <markelog> Krinkle: so now i need to do analogue of this commit https://github.com/jquery/infrastructure/commit/0d7d6a0ebc15478e972bf955c88a15fdfa47b203
[10:22:29] <Krinkle> .. before adding it to a live browserSet used by Jenkins
[10:22:50] <markelog> okay, meanwhile i will do the pr, sounds good?
[10:25:26] <Krinkle> OK
[10:25:40] <Krinkle> We can just add it to the main browserSet (e.g. the one used by qunit)
[10:25:49] <Krinkle> and do a "Rebuild" on Jenkins to test it
[10:25:56] <Krinkle> If it doesn't work, we'll revert of course
[10:26:10] <Krinkle> yeah, in localSettings.json, go ahead :)
[10:26:34] <markelog> is that right - https://github.com/jquery/infrastructure/pull/332
[10:26:34] <markelog> ?
[10:26:43] <jqcommit> [13infrastructure] 15markelog opened pull request #332: TestSwarm: add yandex browser to "jquery-periodic" set (06puppet-master...06jquery-per) 02https://github.com/jquery/infrastructure/pull/332
[10:26:56] <markelog> or we need to add it to "jquery" to test it?
[10:29:58] <Krinkle> Doesn't matter, as long as you know which Jenkins job triggers that browserSet
[10:31:32] <markelog> okay then
[10:33:34] <Krinkle> markelog: Can you check what name browserstack uses in their API for this browser?
[10:33:48] <markelog> yeah
[10:33:52] <Krinkle> If it is not "Yandex Browser" then testswarm-browserstack won't be able to spawn it
[10:33:57] <Krinkle> we'll need to add a mapping
[10:34:27] <jqcommit> [13infrastructure] 15Krinkle pushed 2 new commits to 06puppet-master: 02https://github.com/jquery/infrastructure/compare/8fb5f1f1603c...2eeaaee96e07
[10:34:27] <jqcommit> 13infrastructure/06puppet-master 1486e7538 15Oleg Gaidarenko: TestSwarm: add yandex browser to "jquery-periodic" set
[10:34:27] <jqcommit> 13infrastructure/06puppet-master 142eeaaee 15Timo Tijhof: Merge pull request #332 from markelog/jquery-per...
[10:35:28] <jqcommit> [13infrastructure] 15Krinkle merged 06puppet-master into 06puppet-stage: 02https://github.com/jquery/infrastructure/compare/8fb5f1f1603c...2eeaaee96e07
[10:38:00] <markelog> Krinkle: "Yandex"
[10:38:23] <Krinkle> Right. So it won't be able to find that when looking for browserFamily "Yandex Browser" from testswarm
[10:38:33] <Krinkle> let's trigger it anyway so that we have a job in TestSwarm to look at
[10:38:45] <markelog> Krinkle: okay
[10:40:17] <markelog> correction, it uses lowercase - "yandex"
[10:40:42] <markelog> doesn't change much, but felt to mentioned it
[10:40:59] <Krinkle> Yeah
[10:41:10] <Krinkle> testswarm-browserstack does a small amount of normalisation
[10:41:20] <Krinkle> we actually have 0 mappings right now for browser names
[10:41:24] <Krinkle> only for device and OS names
[10:41:37] <Krinkle> but I made the mapping apply to all fields so this'll be easy
[10:41:51] <markelog> first time for everything )
[10:42:37] <Krinkle> markelog: Did you trigger the build?
[10:43:20] <markelog> Krinkle: not sure if i have a account on http://jenkins.jquery.com/
[10:43:42] <Krinkle> markelog: you do according to Jenkins :)
[10:43:48] <Krinkle> http://jenkins.jquery.com/view/Active/asynchPeople/ -> markelog
[10:44:03] <markelog> o_o
[10:44:36] <Krinkle> its on your gmail.com
[10:44:57] <markelog> looking
[10:45:08] <Krinkle> it's a default account created by git plugin
[10:45:13] <Krinkle> since you commit via github
[10:45:14] <Krinkle> has no user rights
[10:45:16] * Krinkle fixes
[10:45:37] <markelog> Krinkle: so no pass?
[10:45:42] <Krinkle> Not sure
[10:45:47] <Krinkle> Yeah not by default
[10:45:49] <Krinkle> try password forget
[10:45:54] <Krinkle> if that doesn't work, I'll promite it
[10:45:57] <Krinkle> promote
[10:46:02] <Krinkle> markelog: meanwhile, which job uses that browser set?
[10:47:31] <markelog> i guess it should be http://jenkins.jquery.com/job/jQuery%20Core%20Periodic/
[10:47:34] <markelog> but not sure
[10:48:14] <markelog> there is two periodic there
[10:48:31] <markelog> compat and the above one
[10:48:45] <markelog> but we don't use weekly builds for compat
[10:50:53] <Krinkle> grunt testswarm:${COMMIT}:/usr/local/bin/tools/node-testswarm-config.json:jqueryperiodic:jquery-periodic:3600000 
[10:50:56] <Krinkle> http://jenkins.jquery.com/job/jQuery%20Core%20Periodic/configure
[10:51:00] <Krinkle> So yeah that uses it
[10:51:03] <Krinkle> alright
[10:51:38] <Krinkle> triggered a build :)
[10:51:51] <markelog> Krinkle: fingers crossed!
[10:54:42] <Krinkle> markelog: Hm.. no Yandex in the table here http://swarm.jquery.org/project/jqueryweekly
[10:54:58] <markelog> yeah, notice that too
[10:56:12] <markelog> Krinkle: what might be the reason?
[10:57:52] <Krinkle> markelog: Ah, puppet hasn't deployed that change yet
[10:58:02] <markelog> Krinkle: so simple )
[10:58:16] <Krinkle> doing another manual run now
[11:03:56] <Krinkle> markelog: Yup http://swarm.jquery.org/job/897
[11:03:58] <Krinkle> but not yet running
[11:04:11] <markelog> oh yeah!
[11:04:33] <markelog> Krinkle: We can add an icon right?
[11:04:39] <Krinkle> markelog: I already did
[11:04:44] <Krinkle> But CloudFare caches css for 12 hours
[11:04:48] <Krinkle> see -dev commits
[11:04:50] <markelog> ha-ha
[11:04:53] <markelog> what is the icon?
[11:05:10] <Krinkle> https://github.com/jquery/testswarm/commit/ba50f43b13c8be3b72bf499f33b81692d15e2942
[11:05:38] <Krinkle> Ok. pushing testswamrbrowserstack map patch now
[11:05:47] <markelog> awesome :-)
[11:08:27] <git-commit> [13testswarm-browserstack] 15Krinkle pushed 2 new commits to 06master: 02https://github.com/clarkbox/testswarm-browserstack/compare/3993d4d903ad...435ae83cc42e
[11:08:27] <git-commit> 13testswarm-browserstack/06master 142f93465 15Timo Tijhof: Add myself to the credits
[11:08:27] <git-commit> 13testswarm-browserstack/06master 14435ae83 15Timo Tijhof: map: Add mapping for Yandex Browser...
[11:10:17] <travis-ci> clarkbox/testswarm-browserstack#20 (master - 435ae83 : Timo Tijhof): The build passed.
[11:10:17] <travis-ci> Change view : https://github.com/clarkbox/testswarm-browserstack/compare/3993d4d903ad...435ae83cc42e
[11:10:17] <travis-ci> Build details : https://travis-ci.org/clarkbox/testswarm-browserstack/builds/70425474
[11:10:56] <markelog> Krinkle: Opera's and yandex should start though, right?
[11:12:05] <Krinkle> markelog: Opera just started. Yandex should start soon as well
[11:12:10] <Krinkle> I've deployed the patch for Yandex
[11:12:15] <Krinkle> Opera was delayed because limited workers
[11:12:40] <Krinkle> Mmm I've missed watching these job pages filll up
[11:12:42] <Krinkle> So nice :D
[11:13:21] <markelog> Krinkle: yeah, you don't see that with karma or in testem :-(
[11:13:53] <Krinkle> markelog: Yeah, there's also the benefit of being able to re-run, and result page html: http://swarm.jquery.org/result/458152
[11:14:11] <Krinkle> Although it makes sense all-in-all. It's a completely different model
[11:14:24] <Krinkle> web service vs. one-off command line program
[11:14:50] <markelog> results page are pretty cool too, although you can do the re-run with karma by "git checkout <hash> && grunt karma"
[11:15:05] <Krinkle> markelog: Yeah, but that would do all browsers again
[11:15:13] <markelog> yep (
[11:15:15] <Krinkle> have to hack that into it
[11:15:19] <Krinkle> and it woudl also do all suites
[11:15:22] <Krinkle> which is fine I guess
[11:15:29] <Krinkle> I don't mind. I'm all for deprecating TestSwarm.
[11:15:41] <Krinkle> But I also appreciate it's advantages.
[11:15:48] <Krinkle> It kind of "just works."
[11:15:53] <markelog> Krinkle: first heard it from you, about swarm deprecation :-)
[11:15:55] <Krinkle> which I suppose is why we're still using it :D
[11:15:59] <markelog> you need a server though
[11:16:05] <markelog> which is the biggest downside
[11:16:12] <Krinkle> Yeah.
[11:16:17] <Krinkle> It's also quite fast
[11:16:24] <Krinkle> because of testswarm-browserstack shared deamon
[11:16:25] <markelog> i think we don't have time to switch on console runners
[11:16:29] <Krinkle> so it re-uses workers
[11:16:37] <markelog> that is the primary reason
[11:16:40] <Krinkle> right, it's not a priority
[11:16:42] <Krinkle> this is working
[11:16:43] <markelog> so much need to be done for it
[11:16:49] <Krinkle> and it provides useful dashboards
[11:17:02] <markelog> and, karma is not as stable as browserstack
[11:17:39] <Krinkle> I think another important point is that jQuery right now does not fully enforce pre-merge review afaik. Which means if we only did karma via travis, and something slips up, it's harder to figure out what went wrong and be reminded. Whereas here is'a all in a page easy to find
[11:17:46] <Krinkle> you mean saucelabs?
[11:18:02] <Krinkle> browserstack/saucelabs, karma/testswarm
[11:18:08] <markelog> oh, i meant swarm )
[11:18:13] <Krinkle> Right
[11:18:17] <Krinkle> Yeah, don't I know it
[11:18:22] <markelog> ))
[11:18:23] <Krinkle> We use Karma at Wikimedia now
[11:18:27] <Krinkle> for most projects
[11:18:28] <Krinkle> My idea
[11:18:32] <Krinkle> because TestSwarm didn't work for us
[11:18:41] <markelog> how is it?
[11:18:55] <markelog> do you have a lot of tests?
[11:19:05] <Krinkle> well, the main problem is that we only use it with local browsers, not browserstack/saucelabs or otherwise cross browser
[11:19:15] <Krinkle> so we cover with Chrome and Firefox only
[11:19:24] <markelog> do you have a greed?
[11:19:27] <Krinkle> Because of tokens and stuff, it's complicated.
[11:19:28] <Krinkle> greed?
[11:19:43] <markelog> selenium grid
[11:19:46] <Krinkle> No
[11:19:50] <markelog> typo )
[11:19:56] <markelog> oh, so locally only
[11:20:09] <Krinkle> The reason TestSwarm didn't work is because we have many different repositories.
[11:20:11] <markelog> why don't you use bb or sauce?
[11:20:15] <Krinkle> And we do 100% pre-merge testing
[11:20:24] <markelog> security issue/
[11:20:25] <markelog> ?
[11:20:29] <Krinkle> Yeah, that too.
[11:20:33] <Krinkle> but also scale
[11:20:42] <Krinkle> karma is a lot easier to scale.
[11:20:58] <Krinkle> because there is no "global" stuff
[11:21:08] <markelog> this is also one of the reason, why it would be nice for core to switch on console runners - pr testing through travis and all
[11:21:11] <Krinkle> at jQuery foundation, we have to purge TestSwarm once a year because the mysql database is HUGE
[11:21:14] <Krinkle> becuase of all the htlm reports
[11:21:16] <Krinkle> html
[11:21:29] <Krinkle> Doing it at Wikimedia for our commit rate and different repos, would not scale.
[11:21:34] <Krinkle> Also, the problem is mobility
[11:21:45] <Krinkle> "npm test" should do the same in our Jenkins as locally
[11:21:49] <Krinkle> no extra secrets
[11:21:54] <Krinkle> so that means no Testswarm :/
[11:21:55] <markelog> true that
[11:22:06] <Krinkle> whereas with Karma it'll use your local browser easily
[11:22:14] <markelog> how do you do cross browser in prs?
[11:22:28] <markelog> you run tests on prs right?
[11:22:31] <Krinkle> Yes
[11:22:44] <markelog> but they should be installed locally
[11:22:48] <Krinkle> Right now for the main projects (e.g. mediawiki, visualeditor, etc.) we only run local browsers on the Jenkins slave
[11:23:00] <Krinkle> which has Firefox and Chromium latest from Ubuntu
[11:23:02] <markelog> so this is why you don't test on IE?
[11:23:06] <Krinkle> every job an isolated VM
[11:23:16] <Krinkle> For one project I started experimenting using saucelabs for IE testing
[11:23:34] <Krinkle> Just created a separate saucelabs/oss account for that one repo only
[11:23:44] <Krinkle> It's semi-public in Jenkins for PRs
[11:23:54] <Krinkle> and when you run locally, you have to enter your saucelabs username/token
[11:24:00] <Krinkle> as environment variable
[11:24:01] <Krinkle> works fine
[11:24:06] <Krinkle> because accounts are free there
[11:24:17] <markelog> yeah, just like we did in jquery/sizzle
[11:24:21] <Krinkle> We can use browserstack in Jenkins, but not for the community.
[11:24:37] <Krinkle> unless they allow users to create their own account without management, because that's too much work.
[11:24:56] <Krinkle> volunteers should be able to set up their dev environment without staff intervention at whatever time they want
[11:25:38] <markelog> That decreased expenses on admins i suppose
[11:25:49] <markelog> why don't you pay to bb or saucelabs?
[11:26:00] <markelog> don't beliave in their secure tunnels?
[11:26:13] <markelog> *believe
[11:26:26] <Krinkle> markelog: the tunnels are fine, we already use that for that one project I mentioned
[11:26:56] <markelog> oh, so you gradually switching?
[11:27:25] <Krinkle> well, the token issue needs to be solved.
[11:27:36] <Krinkle> We dont want to create separate projects manually in saucelabs for every repo
[11:27:40] <markelog> oh, right, that thing again
[11:27:40] <Krinkle> there is over 1000 repos
[11:27:57] <Krinkle> the reason it works for that one project is because if someone steals the token, it's small impact, we can fix it
[11:28:04] <Krinkle> and if eveyr project has their own token, that;s fine took
[11:28:06] <Krinkle> too*
[11:28:21] <Krinkle> but if we get a big account at saucelabs and use that for all, we have a problem with PR testing
[11:28:46] <Krinkle> and also shared limit for all repos together
[11:29:01] <markelog> what about private repos? Or don't have those?
[11:29:07] <Krinkle> For now the plan is to enable karma with saucelabs for developers locally, with their own token
[11:29:11] <Krinkle> and then in Jenkins run it post-merge
[11:29:28] <Krinkle> so not in PR
[11:29:37] <Krinkle> the PR will run Chrome/Firefox from the Jenkins slave 
[11:29:38] <markelog> It is weird that they decided not to fix that issue
[11:29:54] <Krinkle> and post-merge, comment on the commit if cross-browser failed
[11:30:05] <Krinkle> better then now where we don't have automated testing for IE
[11:30:35] <Krinkle> Example: https://gerrit.wikimedia.org/r/#/c/223357/
[11:30:41] <Krinkle> https://integration.wikimedia.org/ci/job/npm/13206/console
[11:30:42] <markelog> keep forgetting that yours repos all public :-)
[11:30:49] <markelog> hard to believe 
[11:31:02] <Krinkle> markelog: there is 2 private repos in total
[11:31:19] <markelog> full of passwords i suppose )
[11:31:21] <Krinkle> one for private puppet variables (extra mixin, so that moduels are public, just the parameters private, e.g. password)
[11:31:25] <Krinkle> and one for ssl stuff
[11:32:33] <markelog> it is a shame that can't protect those keys, for two years now right?
[11:32:51] <Krinkle> Meh, it's a conceptual problem
[11:32:56] <Krinkle> markelog: it's impossible
[11:33:08] <markelog> nothing is impossible!
[11:33:13] <Krinkle> if you allow Jenkins job to run suacelabs that means the token is available to the process.
[11:33:13] <markelog> we put a man on the moon!
[11:33:15] <markelog> )
[11:33:21] <Krinkle> if the process runs proposed git commit, that means the commit can do anything
[11:33:26] <markelog> there was some suggestions to fix that
[11:33:43] <markelog> don't remember what they were
[11:33:44] <Krinkle> there is silly suggestions like trying to buffer Jenkins console output and look for the token
[11:33:55] <Krinkle> and search in git commit diff to see if it uses that name
[11:33:58] <Krinkle> but that's easily worked around
[11:34:23] <Krinkle> other suggestions is for suacelabs or browserstack to provide organisation/unlimited accounts that are okay to have public token
[11:34:33] <Krinkle> then it is their problem to verify nobody uses them elsewhere
[11:34:41] <Krinkle> eg. using reference IP range as verification
[11:35:01] <Krinkle> to e.g. whitelist Wikimedia jenkins servers
[11:35:17] <markelog> well yeah, even if there was a way, you could just replace original project with yours and run your tests for free 
[11:35:40] <Krinkle> Yeah, but that is not valid argument imho
[11:35:45] <Krinkle> that means you have to submit pull request
[11:35:52] <Krinkle> which means it is limited by abuse systems in github or gerrit
[11:35:55] <Krinkle> and it is visible
[11:35:57] <Krinkle> so we can block it
[11:36:01] <markelog> right, and you will be like "WTF?!"
[11:36:02] <Krinkle> and there are built-in rate limits
[11:36:07] <Krinkle> (e.g. 10 per minute per user)
[11:36:12] <Krinkle> or whatever
[11:36:22] <Krinkle> It's okay as long as it has to be public.
[11:36:41] <markelog> there should be a way though, since it is really needed
[11:36:53] <Krinkle> would be nice if maybe Travis and SauceLabs can make a deal
[11:37:01] <Krinkle> to e.g. provide unlimited workers
[11:37:11] <Krinkle> and maybe limited within Travis to like 1 per project concurrentely
[11:37:21] <Krinkle> so if you opt-in then your travis build concurrency will go lower
[11:37:31] <Krinkle> but it will be allowed to use saucelabs
[11:37:43] <Krinkle> with no token, taken care of by proxy or network protection
[11:37:48] <Krinkle> that would be easiest
[11:38:28] <Krinkle> and not only lower concurrency but also lower priority (e.g. may have to wait for available entry in global Travis queue)
[11:38:30] <Krinkle> but that's fine
[11:38:36] <markelog> well, that would be fast, but you usually can wait
[11:38:38] <Krinkle> they can figure out a way to make it fair and limited.
[11:39:04] <markelog> seems like a cool idea
[11:39:08] <Krinkle> for now what I do for private projects (e.g not wikimedia) is just create saucelabs/oss account per repo and hardcode token in github
[11:39:22] <Krinkle> if someone abuses it all that will happen is my account hits limit and can't make builds for a month
[11:39:37] <markelog> but no one does
[11:39:41] <Krinkle> exactly
[11:39:42] <markelog> no one still that stuff
[11:39:44] <Krinkle> I just don't care
[11:39:48] <Krinkle> it works fine
[11:39:51] <Krinkle> everybody happy
[11:39:59] <markelog> security is overrated )
[11:40:00] <Krinkle> only few commits per year on those projects
[11:40:27] <markelog> but that conception doesn't work for companies
[11:40:32] <markelog> although it could work for jquery
[11:40:37] <markelog> since it is works for angular
[11:40:44] <markelog> they do the same thing
[11:40:47] <Krinkle> yeah, not just for security but also availability
[11:41:09] <Krinkle> if our tests can't run (e.g. because of some third-party rate limit) then we can't merge and thus can't deploy code! 
[11:41:19] <markelog> right
[11:41:26] <markelog> so if you have popular project
[11:41:32] <markelog> then you might have a lot of prs
[11:41:37] <markelog> less time then
[11:41:47] <Krinkle> a popular project that has a first-party customer that uses it in production
[11:41:50] <markelog> but you can always use different keys to run locally
[11:42:07] <markelog> so even if ci doesn't finish
[11:42:08] <Krinkle> jquery isn't "deployed" to production anywhere (other than people using jquery-latest :P )
[11:42:11] <Krinkle> , it's a library.
[11:42:13] <markelog> you publish anyway
[11:42:20] <markelog> because you run it locally
[11:42:26] <Krinkle> but for repos with web apps that can be deployed, yeah..
[11:42:28] <Krinkle> tricky
[11:42:38] <markelog> depend on your setup though
[11:42:46] <markelog> some people deploy only through ci
[11:42:51] <markelog> if there is a tag or something
[11:42:55] <Krinkle> yeah
[11:42:57] <Krinkle> that's what we do
[11:43:07] <Krinkle> once a week, master -> production
[11:43:08] <markelog> that is the cool way to do it )
[11:43:16] <Krinkle> and several times per day, cherry-picks as well
[11:43:32] <markelog> so whatever is in the master goes to production, because master is always stable?
[11:43:36] <Krinkle> yes
[11:43:42] <Krinkle> and the only way to merge in master is through CI
[11:44:08] <Krinkle> after landing in master, it goes to a beta cluster http://en.wikipedia.beta.wmflabs.org/
[11:44:14] <Krinkle> and then within a few days to Wikipedia
[11:44:52] <markelog> but you publish at the beginning of the week right?
[11:45:07] <markelog> not on friday?
[11:46:21] <markelog> need to be afk, anyway, thank you Krinkle, you were very helpful!
[11:46:27] <Krinkle> yw :)
[11:47:18] <Krinkle> We deploy many times per day (cherry picks), but the default master>prod "train" starts beginning of the week
[11:47:26] <Krinkle> on Tuesday
[11:48:11] <Krinkle> to small % of wikis (e.g. mediawiki.org, test.wikipedia.org), then on Wednesday to all non-Wikipedia (e.g. wiktionary.org, commons.wikimedia.org), and Thursday to all *.Wikipedia
[11:48:13] <Krinkle> https://www.mediawiki.org/wiki/MediaWiki_1.26/Roadmap
