[07:14:40] <git-commit> [13testswarm-browserstack] 15mgol opened pull request #46: Update to the 4th version of the BrowserStack API (06master...06browserstack-api-v4) 02https://github.com/clarkbox/testswarm-browserstack/pull/46
[10:19:35] <m_gol> is anyone able to test changes in testswarm-browserstack apart from Krinkle?
[10:20:45] <Krinkle> What kind of changes?
[10:20:51] <Krinkle> They should be relatively easy to change locally
[10:20:57] <Krinkle> albeit slightly counter intuitively
[10:21:06] <Krinkle> I can walk you through it
[10:21:20] <Krinkle> s/change/test/
[10:21:20] <b-ot> Correction, <Krinkle> They should be relatively easy to test locally
[10:21:34] * Krinkle is impressed
[10:21:56] <m_gol> Krinkle: basically https://github.com/clarkbox/testswarm-browserstack/pull/46
[10:22:40] <Krinkle> m_gol: yeah, that should be testable from your local machine
[10:22:46] * Krinkle checks out the repo
[10:23:59] <Krinkle> create a config.json with your browserstack credentials (or yank it from https://github.com/jquery/infrastructure/blob/puppet-stage/modules/jquery/files/testswarm-browserstack/config.json )
[10:24:21] <m_gol> (I might have to run in a moment but keep writing, if I need to go, I'll read it later; just warning)
[10:25:06] <Krinkle> $ npm install;  $ node src/cli.js --ua2bs '*'
[10:25:24] <Krinkle> That should produce some harmless interaction with the API which tests about 80% of the code
[10:25:39] <Krinkle> it outputs a map of testswarm IDs to browserstack ids (based on retreiving the list of browsers from the BS api)
[10:25:42] <m_gol> where should I put this file? in the testswarm-browserstack folder?
[10:26:40] <Krinkle> Yep
[10:26:43] <Krinkle> alongside sample-config.json
[10:27:24] <Krinkle> You can then also go a step further and spawn something, e.g. $ node src/cli.js --spawn edge_13 (testswarm uaID) 
[10:27:36] <Krinkle> and then later --terminate it with the worker ID returned from the previous command
[10:28:08] <Krinkle> If those three pass, I usually just merge it and then pull on the server and trigger a job in Jenkins, usually by rebuilding a past job
[10:29:20] <m_gol> k, will try that, thanks
[10:29:35] <m_gol> If it works, should I do it all myself? Including pulling on the server?
[13:18:08] <s5fs> m_gol: go for it!
