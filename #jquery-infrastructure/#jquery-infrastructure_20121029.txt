[15:19:06] <Krinkle> gnarf: pretty amazing, that imdb question just keeps raising every day. At least 1 upvote almost every single day.
[15:24:37] <gnarf> thats the way it works :)
[15:31:03] <clarkbox> gnarf any word on that server? should i just stick with citadel?
[15:31:50] <gnarf> clarkbox: I haven't heard back, work on citadel for now? I'll try to setup another one in a few days if I don't hear anything from them
[15:32:19] <clarkbox> ok
[15:32:20] <gnarf> I could just make a new one on the same IP prolly
[15:32:30] <gnarf> but I wanna give him a chance to figure out how it went sideways
[15:33:04] <clarkbox> ya no rush. just wondering about it
[15:33:08] <clarkbox> is what it is
[15:33:17] <clarkbox> is what IT is
[22:20:12] <Krinkle> gnarf: clarkbox: I just ran testswarm-browserstack/src/cli.json --terminateAll, because everything was stagnated
[22:20:15] <Krinkle> guess what, it is still running
[22:20:27] <Krinkle> 848 "queued" workers have been killed so far
[22:20:35] <Krinkle> none were "running"
[22:20:41] <Krinkle> the thing is still running...
[22:20:45] <Krinkle> (killing..*)
[22:21:55] <Krinkle> No idea what caused this. For some reason browserstack didn't start any new workers for a few hours. And during those hours our script just kept asking for workers and terminating them away from the queue ~ 2 minutes later when they still hadn't booted.
[22:21:57] <Krinkle> so far so good
[22:22:16] <Krinkle> except that for some reason the browserstack API wasn't taking the terminate command
[22:22:20] <Krinkle> it stayed in the queue
[22:22:46] <Krinkle> so it only took the "spawn" commands for 15 browsers every 2 minutes, not the 15 terminate commands every 2 minutes.
[22:22:59] <Krinkle> grrr. their API has been having a fair amount of issues latelyt
[22:23:26] <Krinkle> 1857 and counting..
[22:24:52] <Krinkle> dang 11254 !!
[22:24:58] <Krinkle> that's a whole lot of VM
[22:25:06] <Krinkle> (well, only in queue)
[23:13:27] <clarkbox> thats a lot of queueâ€¦ are things flowing again? i guess browserstack may need some safety to prevent that situation
[23:13:44] <Krinkle|detached> their API was broken, no content-type response
[23:13:45] <clarkbox> i mean, testswarm-browserstack
[23:13:54] <Krinkle> it is working again now
[23:14:05] <Krinkle> well, there isn't much we can do
[23:14:06] <clarkbox> how long has it been down
[23:14:12] <Krinkle> terminateWorker oughta work
[23:14:15] <Krinkle> that's node-browserstack
[23:14:19] <Krinkle> about 24 hours
[23:14:35] <Krinkle> my shell is still busy with --terminateAll
[23:15:04] <Krinkle> copy/paste line count: 11112 of 11393
[23:15:54] <Krinkle> and done
[23:35:35] <Krinkle> clarkbox: oh, crap. I figured it out
[23:35:43] <Krinkle> its not just browserstack's API
[23:35:57] <Krinkle> they had an issue with the api not having a content-type header, but that isn't the root cause
[23:36:10] <Krinkle> Found worker for which there is no match in UA map { status: 'queue', browser: { version: '6.0', name: 'ie' } }
[23:36:10] <Krinkle> Found worker for which there is no match in UA map { status: 'queue',
[23:36:10] <Krinkle>   browser: { version: '20.0', name: 'chrome' } }
[23:36:11] <Krinkle> Found worker for which there is no match in UA map { status: 'queue',
[23:36:13] <Krinkle>   browser: { version: '16.0', name: 'firefox' } }
[23:36:15] <Krinkle> Found worker for which there is no match in UA map { status: 'queue',
[23:36:17] <Krinkle>   browser: { version: '15.0', name: 'firefox' } }
[23:36:20] <Krinkle> Found worker for which there is no match in UA map { status: 'queue',
[23:36:21] <Krinkle>   browser: { version: '21.0', name: 'chrome' } }
[23:36:23] <Krinkle> Found worker for which there is no match in UA map { status: 'queue', browser: { version: '7.0', name: 'ie' } }
[23:36:25] <Krinkle> Found worker for which there is no match in UA map { status: 'queue', browser: { version: '8.0', name: 'ie' } }
[23:36:27] <Krinkle> Found worker for which there is no match in UA map { status: 'queue', browser: { version: '11.6', name: 'opera' } }
[23:36:29] <Krinkle> Found worker for which there is no match in UA map { status: 'queue', browser: { version: '9.0', name: 'ie' } }
[23:36:31] <Krinkle> Found worker for which there is no match in UA map { status: 'queue', browser: { version: '12.0', name: 'opera' } }
[23:36:33] <Krinkle> Found worker for which there is no match in UA map { status: 'queue', browser: { version: '5.0', name: 'safari' } }
[23:36:35] <Krinkle> Found worker for which there is no match in UA map { status: 'queue', browser: { version: '5.1', name: 'safari' } }
[23:36:37] <Krinkle> Turns out for some reason the JSON result of browserstack now has the 'version' property before 'name'
[23:36:44] <Krinkle> and we use JSON.stringify(worker.browser) as ID.
[23:37:20] <Krinkle> which expects name to be before version
[23:37:21] <Krinkle> crap
[23:55:30] <Krinkle> clarkbox: bug fixed, pushed and deployed. Queue is has also been cleared (finally)
[23:55:40] <Krinkle> however still nothing online: http://swarm.jquery.org/user/browserstack
[23:55:45] <Krinkle> at least our side is back up.
