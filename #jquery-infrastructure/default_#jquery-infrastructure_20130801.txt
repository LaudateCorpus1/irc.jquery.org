[08:02:24] <scott_gonzalez> gnarf Krinkle|detached: Can we take down MediaWiki today?
[10:41:52] <Krinkle> scott_gonzalez: Hi
[10:41:54] <Krinkle> scott_gonzalez: No, that would also take down the redirects.
[10:42:20] <scott_gonzalez> I realize that. I meant can we do everything involved in taking it down.
[10:42:29] <scott_gonzalez> Moving the redirects to nginx and then turning off MediaWiki.
[11:51:11] <scott_gonzalez> gnarf: ^
[11:51:48] <gnarf> scott_gonzalez: Krinkle: if can you get me a simple list of URL -> URL to redirect to - I can write the rewrites in nginx and kill it
[11:53:22] <Krinkle> I need to write a script to fetch them. They're in the 'redirects' mysql table, but needs to be mapped from pageid -> page_namespace+page_title, and expand the interwiki prefix.
[11:53:42] <Krinkle> Pretty trivial inside MW (classes are available to abstract that), just need to write a script for it.
[11:54:03] <scott_gonzalez> Think you'll have time today or tomorrow?
[11:54:17] <Krinkle> Yes
[11:54:26] <scott_gonzalez> Awesome. Thanks.
[11:55:21] <Krinkle> gnarf: Can you give me an output format featuring {title} and {expanded url} ?
[11:55:36] <Krinkle> e.g. Redirect 301 /urlencode({title}) {expanded url}
[11:56:00] <Krinkle> it's no trouble to do it right in the format you want.
[11:57:06] <gnarf> rewrite ^{original uri} {expanded url} permanent;
[11:57:31] <gnarf> I.E. rewrite ^/ui http://jqueryui.com/ permanent;
[11:57:49] <gnarf> left side is a regexp tho
[11:57:55] <gnarf> so like - remember that :)
[11:59:02] <Krinkle> gnarf: what kind of regex? There's many variations. Is it compatible with php's preg?
[11:59:14] <Krinkle> I could run it through preg_quote
[11:59:17] <gnarf> yeah
[11:59:21] <gnarf> should be
[11:59:41] <Krinkle> using '/' as delimeter argument, naturally 
[11:59:45] <Krinkle> k
[11:59:49] <gnarf> no, / is a /
[11:59:56] <gnarf> i.e. ^/ - starts with /
[12:00:02] <Krinkle> Ah, okay
[12:00:09] <gnarf> " " is actually the delim
[12:00:24] <Krinkle> so what about page name "docs.jquery.com/Foo/bar"
[12:00:32] <gnarf> ^/Foo/bar
[12:00:35] <Krinkle> Right
[12:00:41] <gnarf> ^/Foo/bar$ prolly better
[12:00:46] * gnarf shrugs
[12:00:46] <b-ot> gnarf: ¯\_(ツ)_/¯
[12:00:49] <Krinkle> Yeah
[12:01:07] <Krinkle> gnarf: doesn't have a non-regex non-rewrite way of doing plain redirects?
[12:01:24] <Krinkle> it's no trouble, just wondering
[12:01:39] <gnarf> kind of but not worth it
[12:01:42] <Krinkle> k
[12:02:07] <gnarf> location /Foo/bar { AddHeader Location http://foo.bar/; return 403; } i think
[12:02:14] <gnarf> er 301 
[12:02:16] <gnarf> or whatever
[12:02:21] <gnarf> but rewrite is just as easy
