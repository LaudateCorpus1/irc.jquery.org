[01:39:03] <jqcommit> 01[13infrastructure01] 15gnarf pushed 1 new commit to 06puppet-stage: 02https://github.com/jquery/infrastructure/commit/ca857f3ff6f4b5f3b6be01cbb38bc4ab83fc70fa
[01:39:03] <jqcommit> 13infrastructure/06puppet-stage 14ca857f3 15Corey Frang: add ssl cert to splunk;
[01:39:18] <jqcommit> 01[13infrastructure01] 15gnarf merged 06puppet-stage into 06puppet-master: 02https://github.com/jquery/infrastructure/compare/44787918967d...ca857f3ff6f4
[01:44:16] <jqcommit> 01[13infrastructure01] 15gnarf pushed 1 new commit to 06puppet-master: 02https://github.com/jquery/infrastructure/commit/256785b98777d352e80584a9d7b27d131d549050
[01:44:16] <jqcommit> 13infrastructure/06puppet-master 14256785b 15Corey Frang: make ssl cert readable by splunk
[07:22:38] <scott_gonzalez> gnarf: https://github.com/jquery/jquery.com/issues/52
[10:27:21] <scott_gonzalez> Does anyone know which version of Trac we're using?
[10:27:34] <gnarf> fucking old? :)
[10:28:02] <gnarf> Trac==0.12.1
[13:42:19] <scott_gonzalez> Anyone know why this script doesn't error, but also doesn't seem to reach the end point? https://github.com/scottgonzalez/temp-test/blob/master/log-to-server.js
[13:43:20] <scott_gonzalez> This is the server: https://gist.github.com/scottgonzalez/e09e2a5eb636bae42a9f
[13:43:32] <scott_gonzalez> With nginx sitting in front, proxying from :80 to :3000
[13:46:24] <scott_gonzalez> ah, looks like nginx might be ignoring POSTs without a content-length header.
[14:16:41] <gnarf> scott_gonzalez: that's very likely true, I don't think POST without Content-Length is valid
[14:18:00] <scott_gonzalez> Hmm...wouldn't that mean it's not possible to stream content of unknown size?
[14:18:44] <scott_gonzalez> Oh, probably need to use Transfer-Encoding: Chunked for that.
[14:19:28] <scott_gonzalez> Ah, and that requires HTTP 1.1
[14:19:45] <scott_gonzalez> Well, that doesn't apply to this situation anyway :-P
[14:19:54] <scott_gonzalez> Just sending the Content-Length fixed it.
[14:20:05] <gnarf> scott_gonzalez: ://wiki.nginx.org/HttpChunkinModule
[14:57:49] <scott_gonzalez> gnarf: What do you think about this? https://github.com/scottgonzalez/temp-test/blob/master/test/all.js#L41
[14:58:00] <scott_gonzalez> That's storing data to send off to the secure server.
[14:58:22] <scott_gonzalez> It's arbitrary key/value storage.
[14:58:31] <scott_gonzalez> And at the end of the job, the whole payload is sent.
[14:58:48] <scott_gonzalez> We also get a payload at the end of the build.
[14:59:02] <scott_gonzalez> And the server would then parse through the job payloads at that point.
[14:59:13] <scott_gonzalez> And do whatever it wants based on that data.
[14:59:34] <scott_gonzalez> It'll know what environment/config was used for each job (it's part of the build payload).
[15:00:01] <scott_gonzalez> Heading out to dinner. I'll check for any feedback after the kids go to bed.
[15:22:18] <s5fs> scott_gonzalez: sorry, i've been tied up in meetings all day
[16:49:52] <gnarf> scott_gonzalez: sounds good
[16:56:42] <scott_gonzalez> I figure the module can be smart enough to not do the actual sending outside of Travis.
[16:57:01] <scott_gonzalez> It can just write the data to the console instead.
[17:44:46] <scott_gonzalez> Any database people around?
[17:44:55] <scott_gonzalez> DaveMethvin|away ryanneufeld
[17:52:04] <s5fs> scott_gonzalez: what kinda db stuff do you need?
[17:52:57] <scott_gonzalez> I've got this: https://gist.github.com/scottgonzalez/08410626eeefc6e4ef38
[17:53:19] <scott_gonzalez> Because username is marked unique, it's automatically indexed?
[17:55:56] <scott_gonzalez> I guess using EXPLAIN would tell me that.
[17:56:04] <scott_gonzalez> Seems like it's creating an index.
[17:56:10] <scott_gonzalez> So I don't need to explicity create one.
[17:58:19] <s5fs> yeah i'm pretty sure it creates an index as well, but it most certainly creates some sort of constraint
[17:58:43] <s5fs> show indexes should list what you have, or as you said, explain
[17:59:41] <scott_gonzalez> Ah, SHOW INDEXES lists 2 for that table.
[18:00:09] <scott_gonzalez> username has the exact same type of index as id, just a different key_name.
[18:00:21] <scott_gonzalez> So that's perfect.
[18:00:24] <s5fs> :)
[18:11:07] <scott_gonzalez> I'm really letting this need-to-write-tests stack up :-/
[18:11:14] <scott_gonzalez> Gonna be a busy night writing tests.
[18:11:23] <scott_gonzalez> But I'm making good progress.
[18:11:43] <scott_gonzalez> I'm able to programatically set up the database, create a user, then create a ticket.
[18:11:59] <scott_gonzalez> Hoping to have all the constraints in place for that by the end of the night.
[18:12:10] <scott_gonzalez> It doesn't do any constraints on the user for the ticket yet.
[18:12:23] <s5fs> very cool
[18:12:49] <s5fs> i've been spending my evenings reading about trac, i hope to attempt an upgrade on my local machine soon
[18:20:49] <scott_gonzalez> Cool. Hopefully upgrading will fix a lot of our problems.
[18:21:41] <s5fs> me too. at the very least we can move to a host managed via puppet and get onto the latest version so the next person can manage it moving forward ;)
[18:22:53] <scott_gonzalez> :-)
[19:41:33] <scott_gonzalez> I'm trying to set -n on #debt, but it doesn't seem to be doing anything.
[19:46:09] <scott_gonzalez> Weird, I had to use `/msg chanserv set #debt mlock -n` instead of `/mode #debt -n`
