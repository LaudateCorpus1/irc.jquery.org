[07:52:50] <Xatenev> hello
[07:52:57] <Xatenev> how can i override a style="display:none;" with jquery?
[07:53:00] <Xatenev> with e.g. display: inline;
[07:53:08] <Xatenev> I tried .show() and .css("display", "inline")
[07:54:08] <Xatenev> okay it seems to work in a fiddle so i guiess its something else, nvm
[07:56:51] <Cork> Xatenev: that is specifically what those are doing
[07:57:00] <Xatenev> yea thats why I wondered :]
[07:57:03] <Cork> Xatenev: you don't override values in style you replace/remove them
[07:57:30] <Cork> Xatenev: make sure the selector matches the element
[08:30:46] <sine`> hello folks. I am creating a little form quote system, when someone selects a dropdown box hte img src updates and a different picture is displayed. this works but i want to try and have some kind of animation as part of the process, like a transition. is this possible ?
[08:36:55] <sine`> found a stack post for it
[09:52:06] <aruns> Hey guys, I believe there are memory issues with using animations in a setInterval, such as with the .fadeIn and .fadeOut methods when the tab loses focus (I've run into this issue before)
[09:52:52] <aruns> One of our work sites is suffering from memory leaks, we have a timer function that decrements a number element in the HTML.
[09:53:27] <aruns> It is nested in a jQuery(document).ready() function, and has a setInterval call to the timer function.
[09:54:11] <aruns> The timer function has additional setInterval function calls.
[09:54:22] <aruns> Would all these nested setIntervals cause memory leaks?
[09:58:43] <Cork> aruns: you should NEVER call things in a setInterval directly
[09:59:07] <Cork> aruns: setInterval will run without care if the tab has focus or not
[10:00:04] <Cork> also it will ignore the execution time of the function you have in the setInterval so you can get multiple executions on every time (as setInterval gets a higher lowest time when the tab loses focus)
[10:00:22] <Cork> aruns: the solution is to use requestAnimationFrame + setTimeout
[10:01:49] <Cork> aruns: https://jsfiddle.net/ndbjkeo6/
[10:02:20] <aruns> I see.
[10:02:41] <Cork> that will wait 1 second then wait for the next time the tab renders and then run your code
[10:02:47] <aruns> So I don't even need to use setTimeout
[10:02:50] <Cork> then wait another 1 sec and so on
[10:02:57] <aruns> I can just do it all in requestAnimationFrame
[10:03:05] <Cork> that would run every 1 ms
[10:03:11] <Cork> might be over kill
[10:03:47] <Cork> but ya, that might be what you want
[10:05:18] <aruns> I found this example on MDN
[10:05:20] <aruns> https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame#Notes
[10:05:23] <aruns> That might be what I need.
[10:05:43] <aruns> I will have a go, thanks.
[10:05:46] <Cork> it all depends on how often you want it to run
[10:06:19] <aruns> For this particular site, it decrements 118 to 116.
[10:06:24] <aruns> So essentially two cycles.
[10:06:47] <Cork> also note $().animate() with step uses requestAnimationFrame if you use a modern version of jquery
[10:07:31] <Cork> two cycles would be two renderings if you just use requestAnimationFrame
[10:07:50] <Cork> but ya, what ever, there are many ways to skin a goat
[10:49:51] <znf> Is there a replacement for fooTable that is actually properly updated for bootstrap v4?
[11:14:35] <pete___> Hey everyone
[11:32:54] <asdfgh> hello
[11:33:02] <asdfgh> i select the element with $('a.load-content')
[11:33:12] <asdfgh> BUT i should check if there IS NOT "hidden" class too
[11:33:19] <asdfgh> how to change it
[11:33:20] <asdfgh> ^
[11:33:21] <asdfgh> ?
[11:36:03] <asdfgh> not() found!
[11:36:05] <asdfgh> nevermind :)
[12:35:09] <robertmaxrees> https://victorzhou.com/blog/a-javascript-bug-i-had-once
[12:35:39] <taplar> hmm
[12:35:54] <robertmaxrees> :)
[12:37:53] <taplar> strange
[12:38:11] <robertmaxrees> asi was a terrible idea
[12:49:25] <taplar> on the plus side, i think i delayed the need to add a loading indicator to my app, :D
[12:49:32] <robertmaxrees> very nice
[12:50:06] <taplar> i restructured when i'm making the ajax calls for the data to do them once the app initializes, so they should be loaded before the user gets to the point that they need it.
[12:53:16] <robertmaxrees> smart.
[13:08:03] <taplar> it just made more sense.  i was originally targeting different endpoints to get subsections of the data, specific to what they wanted to see, but then I had to account for if they went back and forth.  but changing it to retrieve all the data and filter on the front reduced all that
[13:50:54] <royalty> taplar, i always think things are just faster in general when you load data clientside and manipulate it there
[13:51:20] <taplar> well, i was trying to limit the respone size originally, which is why i split it up
[13:57:22] <taplar> and in this case it's all client side, since it's using service workers
[14:04:24] <royalty> sounds crazy, i never played with service workers
[14:39:37] <taplar> off topic, anyone have a wireless AC router?
[15:15:30] <MikeD_> is there any known gotchas around possible interaction between keypress events and scrolling?  ex:  having an event trigger another event and a scroll happens during all the events being done and a preventDefault() causes the scroll to be canceled?
[15:16:10] <taplar> which event is being prevented?
[17:00:35] <MikeD_> it was a confluence of events (literally) that made some weird stuff happen ... tl;dr:  don't trigger new events while handling old events (even via indirection) because after a while it is difficult to trace who causes what  *shrug*
[17:00:53] <taplar> :D
[17:49:57] <sine`> to tagrget element span with class close i use
[17:50:02] <sine`> "span .close" righ ?
[17:51:00] <robertmaxrees> sine`no space.
[17:51:08] <robertmaxrees> just span.close
[17:51:23] <robertmaxrees> 'span .close' would be all descendents of <span> with that class.
[17:51:49] <sine`> cool thanks
[18:02:35] <sine`> robertmaxrees: can I ask another question
[18:02:47] <robertmaxrees> you just did ;)
[18:02:49] <sine`> <select><option>
[18:02:51] <robertmaxrees> lol, yeah - just ask it :)
[18:03:07] <sine`> I have populated about 10 options. how do I ge the text of the currently selected options
[18:03:10] <sine`> its just strings
[18:03:21] <robertmaxrees> do you want the text or the value?
[18:03:38] <sine`> text
[18:03:44] <robertmaxrees> :/
[18:03:57] <robertmaxrees> mind if I ask why you'd want the text?
[18:04:05] <taplar> also, it's a multi select?
[18:04:16] <robertmaxrees> ^ great moment for a fiddle imo :)
[18:04:42] <sine`> yes its multi dropdown and also I want the text just to know how to do it
[18:04:50] <sine`> I knwo the id of the select
[18:04:56] <robertmaxrees> make a fiddle and show us what you've tried :)
[18:05:05] <sine`> ok
[18:05:14] <sine`> I just need to know how to target the selected option
[18:05:22] <sine`> select#theid option selected
[18:05:28] <robertmaxrees> lol
[18:05:51] <robertmaxrees> okay i'm going to shjow you why a fiddle is a nice to have
[18:07:12] <robertmaxrees> https://jsfiddle.net/robertmaxrees/86wh0osL/1/
[18:07:29] <robertmaxrees> ^ not really what you're looking for i take it.  so update to make it closer to your use-case :)
[18:10:55] <sine`> i have used text() but it returns all of them
[18:11:03] <robertmaxrees> show me :)_
[18:14:21] <sine`> this is what I have, i dont have the values that match the inner html text
[18:14:23] <sine`> https://jsfiddle.net/h7z4fgx2/3/
[18:14:32] <sine`> I have like index numbers as the value
[18:14:38] <robertmaxrees> ew
[18:15:11] <robertmaxrees> https://stackoverflow.com/a/10659117/923919
[18:17:48] <sine`> ok great, so this works
[18:17:51] <sine`> jQuery('#pg_models').find(':selected').text();
[18:18:13] <sine`> what was troubling was that when I was viewing the html in the browser debug and I selected an option the selected did not update
[18:18:24] <sine`> but I guess that html is old and static
[18:18:25] <robertmaxrees> the selected attribute?
[18:18:44] <robertmaxrees> the inspector doesn't necessarily show all DOM updates.
[18:18:46] <sine`> I see selected as an attribute without a value in the first one
[18:19:07] <taplar> selected doesn't have to have a value in newer versions
[18:19:22] <robertmaxrees> actually
[18:19:27] <robertmaxrees> it never needed one.
[18:19:33] <robertmaxrees> since it's a binary attribute.
[18:19:44] <robertmaxrees> err, boolean, not binary. \
[18:19:56] <taplar> no? not even for some IE weirdness perhaps?
[18:20:42] <taplar> unless i'm confusing it with checked, or something
[18:20:46] <taplar> idk
[18:20:47] <robertmaxrees> as far as I recall, nope.
[18:21:07] <robertmaxrees> in fact, some browsers break on selected="false" instead of omitting it.
[18:23:07] <taplar> https://www.w3.org/TR/html/infrastructure.html#boolean-attribute  ok, so maybe it's never been enforced, but it allows you to do a value if you want
[18:23:48] <robertmaxrees> or just use 'em the right way ;)
[18:25:50] <taplar> sine`: i did want to ask though, you said the value of the options were their index?
[18:28:22] <sine`> taplar: im using some old code, the value was the index of the list, which matched some other arrays iwth images for that particular product etc. it was a while ago and looking at it it does not need it
[18:28:33] <sine`> I could even create my own attr for storing information, right
[18:28:44] <taplar> a data attribute, sure
[18:29:05] <sine`> https://bpaste.net/show/23c1ba6ed272
[18:29:09] <sine`> thats what it is
[18:30:04] <taplar> If you just need the index though, you can actually just derive that when you need it with index()
[18:30:54] <taplar> you should also consider refactoring that into a map though
[18:32:48] <taplar> https://jsfiddle.net/08ymoh4k/
[18:35:38] <taplar> rather than taking each element, constructing the option, turning it into a jQuery object, and then appending them one by one, you let map create an array of the elements as html, and pass that array to append.  jQuery will perform a single DOM change with all the elements, reducing the number of times you're touching the DOM
[18:49:28] <sine`> Yes I think you mentioned that to me before, we went through it a while back but it was after i had done something
[18:50:41] <sine`> like I was trying but there were some more complications in how the data related
[18:50:58] <taplar> ?
[18:51:00] <sine`> the rest of the options were changed depending on the selection of the first one, it got complex
[18:51:54] <taplar> map vs using an each to append one at a time should both result in the same end, just map in this case is more efficient
[18:52:17] <sine`> ok thanks for the update
[18:52:54] <taplar> each could also have the same efficiency, if you pushed the strings to an array, and then afterwards appended the array.  the main point being to reduce the number of times you are appending
[18:53:19] <taplar> and not do the unnecessary jQuery('html') in side the each
