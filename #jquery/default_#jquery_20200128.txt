[07:54:06] <apocs> Has the 502 error on cloudflare been reported to someone? If not, where to report? :)
[07:56:41] <Cork> apocs: what is reporting 502?
[08:01:09] <iwkse> hi, I have a svg inside a button, I would like to open a context menu when clicking on the svg but instead the button click event is fired. There's a way to avoid that?
[08:01:46] <iwkse> I've tried preventDefault() but didn't seem to help
[08:04:52] <Cork> iwkse: it is better to check event.target in the button handle instead of trying to stop the real event from existing
[08:05:04] <Cork> the later has a tendency to cause bugs in the page later
[08:05:37] <Cork> while if you check if the event came through the svg element you will only affect things you know you want to avoid
[08:07:45] <iwkse> Cork: thanks, will give a try
[08:08:10] <apocs> @Cork when I attempt to download a single module (accordion) from UI it throws a 502 error on CloudFlare
[08:08:43] <Cork> ah, so jquery ui is down again
[08:09:06] <apocs> Cork so it seems :)
[08:09:07] <Cork> last time it was down for about a month, never found a report method that actually worked
[08:09:23] <apocs> Great
[08:09:31] <Cork> can try poking the infra fokes again but donno if it will work
[08:09:39] <apocs> Are there any alt mirrors you know of?
[08:09:58] <apocs> For single modules, that is
[08:11:08] <Cork> there is http://code.jquery.com/ui/, thgouth that isn't in the same format
[08:11:13] <Cork> there is also github
[08:12:12] <apocs> But that's the whole package, isn't it? :)
[08:13:03] <apocs> I found the accordion package on github. Thank you :)
[08:13:59] <apocs> Hope you get a hold of the infra folks :)
[08:29:31] <Cork> apocs: sorry got busy a bit, there is an old bug report for the same thing where someone had a private caceh of it
[08:29:34] <Cork> let me see if i can find it
[08:33:13] <Cork> apocs: https://github.com/jquery/download.jqueryui.com/issues/371
[08:59:07] <apocs> Cork ah great :)  Tank you :)
[08:59:12] <Cork> np
[08:59:53] <Cork> apocs: btw just tested jquery ui builder, and it seams to be up again
[09:02:47] <apocs> Cork: You're right :)  It's a bit iffy though :)  Had problems yesterday also :/
[09:06:37] <Cork> apocs: ya, i'm not sure how alive the jquery-ui project is now days, starting to suspect it has close to noone wokring on it
[09:14:58] <apocs> Cork: Has someone developed something else that's better or are the devs just slowly quitting?
[09:29:37] <Cork> apocs: https://blog.jqueryui.com/2017/12/the-future-of-jquery-ui-and-jquery-mobile/
[09:30:00] <Cork> and that was 2 years ago, as far as i know jquery-ui hasn't had a release since
[09:30:28] <Cork> (and two download.jquery.com down periods)
[09:31:25] <Cork> and doesn't make me enthusiastic about using the project to be honest
[09:31:31] <apocs> I see
[09:31:59] <Cork> i'm normally using it very sparsly (only the slider) and that part i'm comfortable with using from them
[09:32:35] <Cork> but if i needed a more full ui library i would probably pick another source
[09:33:23] <apocs> Do you have know which UI you'd use?
[09:33:36] <apocs> -have :D
[09:34:16] <Cork> no, not really as i usually evaluate what ui to use based on the project needs, instead of adapting the project to the widgets
[09:34:54] <Cork> but i have looked at jqwidgets not sure if it is a fav, but it does have quite a lot of widgets
[09:35:37] <Cork> might be a license cost depending on how you plan to use it thought...
[09:35:53] <apocs> I'll have a look at them :)  I'm normally a backend dev. But sometimes i have to edit some frontend layouts/functionality so it's nice to know what's out there :D
[09:36:26] <Cork> hostestly now days i mostly just use html+css and it often does what i need
[09:37:01] <apocs> Yeah, you can get far with plain html/css today
[09:37:02] <Cork> a dialog is normally a few 10's of css rows and no need to the full dialog from jquery ui
[09:37:05] <Cork> ya
[09:37:27] <apocs> You're a FE dev?
[09:37:43] <Cork> more a full stack
[09:37:51] <apocs> Ok
[09:37:55] <Cork> everything from server side go code to css+html
[09:38:06] <Cork> the design is not my task thankfully though
[09:38:18] <apocs> I hate designing :D
[09:38:25] <Cork> and i'm doing more backend then frontend now days
[09:38:25] <apocs> It wakes me far too long :D
[09:38:29] <apocs> takes*
[09:38:56] <apocs> I'm primarily working with PHP
[09:39:01] <Cork> lol na, i like simplisity in code, so i often try to push css as far as i can :)
[09:39:20] <Cork> like doing tab views with css divs and radio buttons :)
[09:39:23] <Cork> (no js at all)
[09:39:58] <Cork> i started with php many years ago, still do it from time to time, but mostly go and rails now days
[09:40:13] <apocs> I don't mind doing a bit JS :)
[09:40:22] <apocs> Ok
[09:40:31] <Cork> na, as long as it isn't to over abstracted it is nice
[09:40:56] <Cork> when you start to need 2-4 servers to mangle the code before you can provide it to the browsers i start to zone out
[09:41:14] <apocs> Yea, thats a bit too much :D
[09:41:51] <Cork> but way to many libs has that dependency now days
[09:42:22] <Cork> feels like it is written for using in node.js and you have to bend backwards if you want to use it in a "normal" webpage
[09:43:42] <apocs> Same if you use a composer plugin for PHP. When installing one module you automatically get 10 other packages :o
[09:44:22] <Cork> ouch they are there too huh...
[09:46:01] <apocs> Yeah, it's a bit crazy... "Just need this tiny little thing... Here ya go 10MB of other stuff you need to run those 2k...!" :D
[09:46:30] <Cork> well that is prob what i like the most with golang coding, thin dependencies
[09:46:43] <Cork> rails is the worst of the bunch...
[09:46:57] <apocs> Haven't looked at golang yet. It's from Google, right?
[09:47:00] <Cork> where you often don't even know where the code you need actually exist
[09:47:21] <Cork> they started it, but it is beyond just them now days
[09:47:29] <apocs> Ah ok
[09:47:57] <Cork> what makes it special is that it is a compiled statically typed langauge, that behaves like a mix of javascript+python
[09:48:20] <Cork> it doesn't "feel" like a statically typed language
[09:48:34] <Cork> and it compiles wickedly fast
[09:48:52] <Cork> the longest compilation i've had for any of my projects is like 5 sec
[09:48:52] <apocs> It must execute extremely fast too?
[09:48:59] <Cork> ya
[09:49:14] <Cork> we started using it cause rails is silly slow at generating json
[09:49:24] <Cork> rails took about 10 ms to generate a json response
[09:49:38] <Cork> go took... 15ns
[09:49:46] <apocs> Wow
[09:50:33] <apocs> Maybe I should take a look at it sometime :)
[09:50:34] <Cork> this one is quite interestin too https://github.com/gin-gonic/gin#benchmarks
[09:51:23] <Cork> golang has a native webserver that has been extended by third libs and they are wickedly fast
[09:51:48] <apocs> Sounds interesting
[09:52:13] <Cork> so ya, if you want a full program (that can't really run on a shared server) go is on the top of my list now days
[09:52:30] <Cork> for shared servers, ya php is still king
[09:52:36] <apocs> I love PHP :D
[09:52:51] <Cork> well i love modern php, i HATE pre 5 php
[09:52:54] <apocs> Do you have any good guides on go you'd wan't to share? :)
[09:54:32] <Cork> https://github.com/golang/go/wiki/Learn has quite a lot of good links
[09:55:01] <Cork> (don't miss the first link to golang it is where i started ones upon a time)
[09:55:22] <Cork> the tour + effective go was basically what existed back then
[09:55:31] <apocs> Ah, very nice :)  Thank you! :)
[09:55:34] <Cork> (this was 2 years before go 1)
[09:55:38] <Cork> np
[09:56:30] <apocs> Also what I like about PHP is their documentation :D  Love that I can go to php.net/INSERTMETHODHERE to read the docs on that method :D
[09:56:53] <Cork> ya, i agree
[09:57:04] <Cork> the ruby world has a lot to learn there
[09:57:29] <Cork> btw golang has https://godoc.org/
[09:57:49] <Cork> where you can find lot of good packages and find what code a specific function actually runs
[09:58:04] <apocs> Ah nice :)
[09:58:25] <Cork> ex. https://godoc.org/net/http#ListenAndServeTLS
[09:58:57] <Cork> clicking hte "ListenAndServerTLS" there will take you to the actual go code that starts the golang build in webserver (for tls traffic)
[09:59:06] <Cork> not many languages is that transparent
[09:59:44] <apocs> Oooh
[10:02:03] <apocs> Very cool :)  def wan't to have a look at that at some time :)
[10:02:40] <Cork> ya, it is a learning curve no question about that, but learning a new language always are
[10:02:58] <Cork> and as always the first 2-3 projects you create are shit :D
[10:03:53] <apocs> Yeah, I think the biggest problem is learning the methods by heart. In PHP I know the most-used methods and their arguments by heart and when to use them ,which makes it faster for me :D
[10:04:25] <Cork> well from switching around in languages the method names isn't really the problem
[10:04:33] <Cork> you can look them up quick enough
[10:04:43] <Cork> but it is "how you are suppose to structure things"
[10:04:55] <Cork> and that is where the first few projects suffer hard
[10:05:13] <apocs> True :)
[10:05:18] <Cork> unless you jump into a project someone that know the language already handles
[10:06:14] <Cork> i started with pascal and basic in the early 90's and from there went to c and then php
[10:06:27] <Cork> from there then to ruby on rails and from there to go
[10:06:42] <apocs> In that case you have someone to guide you :D
[10:06:43] <Cork> and i have to say every switch has had very similar pain points
[10:06:50] <Cork> ya
[10:07:26] <Cork> "this code looks like shit", "how should one structure this to make it manageable"
[12:22:04] <vish93> hey guys, in jquery how do you included appended inputs in an ajax post?
[12:22:43] <robertmaxrees> vish93 depends on the code for the ajax call.
[12:23:13] <robertmaxrees> vish93 if you're just serializing the form itself, then the appended inputs will be included so long as they're included before you call ajax.
[12:23:13] <vish93> robertmaxrees: https://pastebin.com/xqJ0u4pX
[12:23:28] <robertmaxrees> yeah, those should be fine.
[12:23:46] <vish93> robertmaxrees: for some reason not included in the ajax post
[12:23:47] <robertmaxrees> erm
[12:24:07] <robertmaxrees> because you're specifying the object you want to send and not including the new elements.
[12:24:16] <robertmaxrees> where are you defining name, email, and message?
[12:26:46] <vish93> robertmaxrees: think i have just realised my mistake. Idiot I am
[12:26:49] <vish93> So sorry
[12:26:58] <robertmaxrees> you're not an idiot - it's all good :)
[12:27:08] <vish93> Appreciate the help
[12:27:39] <robertmaxrees> oh and don't use "success-
[12:27:40] <robertmaxrees> welp
[15:02:50] <morenoh11> how do I pass the original this to my function? it logs undefined, undefined, undefined http://dpaste.com/299YHZP
[15:26:29] <robertmaxrees> you want .call(this)
[15:26:38] <robertmaxrees> not .call($(this));l
[15:26:39] <robertmaxrees> not .call($(this));
[15:28:39] <robertmaxrees> morenoh11
[15:29:34] <robertmaxrees> also: use .prop instead of .attr
[16:56:28] <efspdoejfep> hi
[16:56:32] <efspdoejfep> I need help
[16:56:40] <efspdoejfep> to convert this : https://pastebin.com/raw/D46WEuEf
[16:56:43] <efspdoejfep> in pure js
[16:56:55] <robertmaxrees> hit up ##javascript then.
[16:56:59] <robertmaxrees> or reference against the docs.
[16:57:02] <robertmaxrees> :)
[16:58:20] <robertmaxrees> efspdoejfep
[17:07:28] <szdqaszade> Which one is better to use : .appendTo() or .append() ?
[17:07:42] <szdqaszade> Sorry connexion issue, I have been disconnected
[17:19:50] <morenoh11> robertmaxrees: the data attribute is found if I do .attr but not if I do .prop
[17:21:31] <robertmaxrees> szdqaszade you want .data() for data attributes.
[17:21:43] <robertmaxrees> and appendTo and append do two different things.
[17:21:49] <robertmaxrees> use the right one for your case.
[17:22:46] <szdqaszade> from what i have see .appendTo() and .append() do the same thing, only the way to do the thing change
[17:22:55] <robertmaxrees> *sigh*
[17:23:02] <robertmaxrees> alright captain pedant ;)
[17:23:25] <szdqaszade> please perdon my english
[17:23:28] <szdqaszade> i'm not native
[17:23:40] <robertmaxrees> fwiw in the docs, it tells you the difference.
[17:23:57] <robertmaxrees> https://api.jquery.com/append/ -> "The .append() and .appendTo() methods perform the same task. The major difference is in the syntax-specifically [...]"
[17:24:20] <szdqaszade> it's what i said
[17:24:34] <szdqaszade> only the way to process is different
[17:24:51] <robertmaxrees> your original question was "Which one is better to use [...]"
[17:25:08] <robertmaxrees> i answered that question, then you argued by changing what you were trying to ask :)
[17:25:26] <szdqaszade> For example : $("#greeting").append( $("#message") ); do the same as $("#message").appendTo("#greeting");
[17:25:33] <robertmaxrees> correct.
[17:25:39] <szdqaszade> No my question is still the same
[17:25:51] <robertmaxrees> i think what you mean is "which is more common?"
[17:25:51] <szdqaszade> with is the common way (and better way to do)
[17:26:08] <robertmaxrees> common != better.
[17:26:11] <szdqaszade> i know that .append() is more efficiant
[17:26:14] <robertmaxrees> but convention is to use .append()
[17:26:17] <szdqaszade> in term of speed
[17:26:21] <szdqaszade> good
[17:26:26] <szdqaszade> i prefere .append()
[17:26:26] <robertmaxrees> don't concern yourself with "speed" in cases like that.
[17:26:35] <robertmaxrees> worry more about convention and readability.
[17:26:43] <szdqaszade> If you are not speed, you suck
[17:26:47] <robertmaxrees> eh.
[17:26:50] <szdqaszade> speed, speed
[17:26:50] <robertmaxrees> not really.
[17:26:59] <robertmaxrees> you're not running it millings of times.  you're running it once.
[17:27:00] <szdqaszade> it's the only thing that matter
[17:27:07] <robertmaxrees> lmfao - no.
[17:27:12] <robertmaxrees> readability is your first priority.
[17:27:18] <robertmaxrees> always.
[17:27:36] <szdqaszade> the code is anyway offuscate
[17:27:41] <robertmaxrees> huh?
[17:27:47] <szdqaszade> and no one should read it
[17:27:52] <robertmaxrees> ??
[17:28:02] <szdqaszade> uglify.js + other method
[17:28:09] <robertmaxrees> it should be readable by the people writing it.
[17:28:19] <robertmaxrees> also: if raw speed is truly your concern, don't use jquery ;)
[17:28:20] <szdqaszade> are used, my code is not for public
[17:28:21] <robertmaxrees> bbiab
[17:28:53] <szdqaszade> i already tell you. I should learn jQuery cause some one create a tool using this library
[17:28:59] <szdqaszade> and i need the library
[17:29:12] <szdqaszade> need the tool *
[17:29:34] <szdqaszade> of course, I plan to convert everything in native
[17:30:07] <szdqaszade> i already start the process
[17:30:30] <szdqaszade> but there are many thing I should learn in jQuery.
[17:31:00] <szdqaszade> anyway thanks you have answer my question
[17:31:20] <szdqaszade> I will prefer .append()
[17:58:58] <morenoh11> .data('company') returns undefined
[18:04:15] <robertmaxrees> morenoh11 sorry - meant to clarify that inventing your own attributes is *technically* invalid.
[18:04:33] <robertmaxrees> should be data-name="foo" data-company="bar" etc.
[20:34:21] <RahulAN> Hi All
[20:35:03] <RahulAN> I am trying to access closest select which in next col-xs-2 div
[20:43:36] <RahulAN> This is my https://jsbin.com/juhijuloka/edit?html,js,output
[20:43:57] <RahulAN> any one here ?
