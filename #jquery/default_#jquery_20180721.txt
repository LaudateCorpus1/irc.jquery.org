[00:04:27] <ryan_ford> in the future just ask
[00:04:46] <how2hack> right, it's really late so i wasn't sure
[00:05:08] <ryan_ford> 12 noon here ðŸ˜‰
[00:05:18] <how2hack> i'm using fragments, but for some reason the variable holding it's wiped after two reads...
[00:05:22] <Woet> [09:24:27]  <how2hack>	can jquery access css ::before and ::after?
[00:05:23] <Woet> http://lmgtfy.com/?q=can+jquery+access+css+%3A%3Abefore+and+%3A%3Aafter%3F
[00:05:31] <Woet> (in regards to your previous question)
[00:05:56] <Woet> how2hack: show your test case to this "wiping" variable using www.jsfiddle.net
[00:06:01] <how2hack> Woet: yes i already search for it, looks like it's not possible
[00:06:05] <how2hack> ok
[00:07:04] <how2hack> it involves getting html from server and it's not online
[00:07:13] <how2hack> i'll just put the code
[00:07:35] <ryan_ford> http://swapi.co/api/people/?format=json
[00:10:46] <how2hack> https://jsfiddle.net/yn2p6u4j/
[00:11:29] <how2hack> i want to "cache" the html inside a variable/object so i don't have to request it many times, since it's static
[00:12:06] <how2hack> the problem is after 2 clicks, it's like the array/object is empty and nothing is shown...
[00:15:27] <Woet> how2hack: a working test case please
[00:16:35] <how2hack> i'll have to put my dev server online, one moment
[00:17:40] <Woet> how2hack: i sincerely doubt your backend/ajax is related to variables vanishing.
[00:18:12] <how2hack> hmm does that mean the problem is in the code? or is it ok?
[00:20:55] <ryan_ford> you could read it 3 times with 3 console.log's and test it pretty quick without a ton of code
[00:32:57] <how2hack> i just tested it, the first click works, the second it's empty
[00:35:11] <how2hack> i literally commented every other line of code and the second click, the log shows an empty object
[00:38:25] <how2hack> could you please confirm if the code i posted earlier is ok? that it does what i think it does? (store the ajax request)
[00:48:37] <how2hack> the problem is $(document.createDocumentFragment())....
[00:49:36] <how2hack> if i just do menu[key] = data then the value does not vanish...
[00:52:52] <how2hack> does that make sense?
[00:54:03] <how2hack> i mean why does the appended data vanishes after the first click? menu[key] = $(document.createDocumentFragment()); content[name].append(data)
[00:55:21] <how2hack> on the other hand assigning the data directly to the variable doesn't
[01:05:38] <how2hack> is it possible to do something like: data.insertAfter(html.find('div')); ???
[01:05:59] <how2hack> html being a local variable
[01:23:50] <ryan_ford> you should right some tests
[01:24:03] <ryan_ford> s/right/write
[01:47:38] <how2hack> ok i just wrote one test
[01:47:48] <how2hack> https://jsfiddle.net/2961fpv5/
[01:48:06] <how2hack> second click doesn't show anything
[01:48:43] <how2hack> is that expected behavior?
[01:50:35] <how2hack> why is the variable content vanishing? what is unsetting it?
[09:26:21] <how2hack> hi, is it possible to do data.insertAfter($(html).find('div'))?
[09:26:50] <how2hack> I just tried it, it's not working, is it possible to do what i'm trying?
[09:52:14] <how2hack> i've got a problem with fragments, can someone tell me if this is expected behavior? https://jsfiddle.net/2961fpv5/
[09:56:56] <how2hack> in any case, after debugging, i can observe that the variable cache looses its content right after the first read, that'll be $('div').html(cache)
[09:59:21] <how2hack> https://jsfiddle.net/2961fpv5/1/
[09:59:27] <how2hack> why is that?
[10:05:15] <ryan_ford> what exactly are you trying to do? add testhtml to the fragment on every click?
[10:05:37] <how2hack> testhtml is supposed to be an ajax request
[10:05:45] <ryan_ford> because right now you're only adding it once
[10:06:34] <how2hack> how come once? I'm setting the variable's content
[10:07:00] <how2hack> why does it loose it's content?
[10:08:11] <ryan_ford> `cache.append(testhtml)' only gets called once, outside the click handler
[10:08:45] <how2hack> then why if i do "cache = testhtml", cache doesn't loose never the content of testhtml
[10:10:53] <how2hack> what i don't understand is what does it matter if it's called once, a variable should not loose its content? or should it?
[10:18:25] <ryan_ford> https://stackoverflow.com/a/14974019/8140725
[10:19:04] <ryan_ford> need train up your google-fu
[10:20:19] <how2hack> i was convinced it was a bug or something i didn't even thought of googling... how could i know fragments are created in memory :P
[10:20:32] <ryan_ford> rtfm?
[10:22:10] <how2hack> i should've srry
[10:23:59] <how2hack> now this last one i've spend a couple of hours researching (between yesterday and now): is it possible to use inserAfter() for the html inside a variable? i mean insert after an element that's inside a variable
[10:26:21] <ryan_ford> what type is in the variable?
[10:26:31] <how2hack> for example insertAter(fragment) or $(fragment).find('div')
[10:26:46] <how2hack> normal html code
[10:26:59] <ryan_ford> an html string? or a dom object?
[10:27:43] <how2hack> i think it is html string, it is html output from the sever, the ajax request picks it and i store it inside a variable
[10:28:09] <ryan_ford> is it's an html string you could do normal string concatenation I'd think
[13:21:29] <how2hack> can someone tell me why this is not working? https://jsfiddle.net/2961fpv5/12/
[13:34:49] <shoky> how2hack: cache/testhtml is just an html string, which you aren't changing. to get a jquery object from it that you can manipulate,  do e.g. var elem = $(cache);  var list = elem.filter()... ;   $('div').html(elem)
[13:39:02] <how2hack> oh that's right! thanks shoky!
[14:18:59] <how2hack> hmm it is not working if the elements from testhtml have a parent: https://jsfiddle.net/2961fpv5/14/
[14:23:28] <shoky> how2hack: .filter only finds top-level elements.  for descendants use .find()
[14:24:26] <shoky> e.g. .find('> ul')  or .children('ul') which is the same
[14:53:38] <how2hack> what if i have many parents with ul but i want to target only one? Why can't i do .find('article#id > ul')?
[14:53:58] <how2hack> https://jsfiddle.net/2961fpv5/16/
[14:56:25] <how2hack> what this removed from jquery at some point? $('article#id > ul', $(content.stats))
[14:56:27] <shoky> how2hack: you can combine filter and find
[14:56:32] <how2hack> was*
[14:56:52] <shoky> how2hack:  .filter('#id').find('> ul')
[14:57:33] <shoky> how2hack: i don't think it was removed, no
[14:57:45] <how2hack> oh right, i forgot i can chain methods
[14:57:55] <shoky> how2hack: but, it does exactly the same as:  $(content.stats).find('article#id > ul')
[14:58:13] <shoky> i.e.  $(a, b) === $(b).find(a)
[14:58:19] <how2hack> then for some reason it was not working https://jsfiddle.net/2961fpv5/17/
[14:58:29] <how2hack> yes, its the same, i'll use that one
[14:58:34] <shoky> how2hack: for the same reason .find() alone doesnt work
[14:59:36] <shoky> i.e. article#id is not a descendant
[15:00:48] <how2hack> oh, those methods are not selectors, they take only one element ok
[15:01:33] <shoky> they take selectors as argument
[15:01:53] <how2hack> yes, i meant nested selectors
[15:02:24] <shoky> .find() is fine with nested selectors.  .filter isn't though ya
[15:03:19] <shoky> well, it could be
[15:03:35] <shoky> but not for finding descendants
[15:03:50] <how2hack> then that's why it doesn't work here: https://jsfiddle.net/2961fpv5/16/
[15:04:14] <shoky> that doesn't work because .find() only looks at descendants of the top-most element(s)
[15:04:36] <shoky> article#unique is not a descendant, so it's not finding it among the descendants
[15:05:36] <how2hack> right, then the best way for what i need is: content.stats.filter('article#unique').find('ul')
[15:06:31] <shoky> yep that's fine.  can use just '#unique' instead of 'article#unique'
[15:08:15] <how2hack> oh right, since ids are already uniques, i just specify it out of habit
[15:08:21] <how2hack> thanks again shoky
[15:08:51] <shoky> if you didn't want to need to differentiate between top-most elements and descendants with filter/find, you could do something like  $('<div>').append(content.stats).find('#unique > ul')
[15:08:53] <shoky> np
[15:14:47] <how2hack> yes, that looks easier, but i need to identify the articles so filter/find let's me reuse the same id
[15:18:45] <how2hack> is using a setTimeout() after a $.get hacky? is there a better way?
[15:20:52] <how2hack> and i'm already using .done() but for some reason i still need a setTimeout()
[17:50:17] <how2hack> i read something about $.get shorthand now supporting settings like async, is this true? Like: $.get( url, { async: false } )
[17:57:05] <pavonia> how2hack: Do you mean $.get({ url: url, async: false })?
[17:57:28] <how2hack> that's right, ty
