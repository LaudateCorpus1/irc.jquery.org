[04:43:40] <jax> hello
[04:43:46] <jax> i got this listener: $('#actionCard').on('click.actionForm', 'button', function (e) {
[04:43:57] <jax> i can't seem to unbind it.. i have redefined it somewhere else because i need to override it.
[04:44:01] <jax> but somehow both are firing.
[04:44:14] <jax> can't i just do: $('#actionCard button).off(), then redefine the same listener as above?
[04:55:14] <jax> found out. it was lazy loading.
[04:55:14] <jax> so my off had no effect
[05:03:31] <Cork> man why can't ppl just chill a few minutes after asking a question...
[05:04:35] <thykka> tbf, this one seemed to find the answer shortly after asking
[05:04:59] <Cork> lazy has nothing to do with the problem though
[05:05:21] <Cork> he binds on #actionCard and tris to unbind it on #actionCard button
[05:05:43] <Cork> and as it was a delegated bind there is nothing to unbind on the specific button
[05:05:51] <thykka> right, well, maybe they'll be back soon n_n
[05:06:00] <Cork> heh
[05:06:15] <Cork> ya, my annoyance is that there was two similar yesterday
[05:06:24] <Cork> (ask and 3-4 minutest later left)
[05:06:43] <Cork> it's just frustrating
[06:06:13] <cusco_> hello
[06:06:58] <cusco_> $('#form').serialize() does not contain inputs that haven't been selected/clicked yet - is there a way to include all?
[06:07:51] <Uhkis> cusco_: do they all have names?
[06:08:41] <cusco_> yes, for instance a group of radios
[06:08:47] <cusco_> all have the same name
[06:09:14] <cusco_> but if I don't click any of them, none show on the serialzie()
[06:09:24] <Uhkis> "Values from checkboxes and radio buttons (inputs of type "radio" or "checkbox") are included only if they are checked"
[06:09:30] <Uhkis> to quote the documentation
[06:10:03] <Uhkis> that's probably because they wouldn't have a value, so there's no point in having those
[06:10:17] <cusco_> I would like to know that some are still missing
[06:10:23] <cusco_> hmm ok.. I'll figure something out then
[06:10:26] <cusco_> thanks
[06:10:47] <Uhkis> cusco_: serializeArray might have them
[06:10:57] <cusco_> looking..
[06:12:04] <cusco_> the same..
[06:41:33] <ChambreNoire> Hello
[06:42:20] <ChambreNoire> Does anyone know how I can add a conditional call to the start of a JQuery promise chain (I new to this)
[09:27:39] <EugenA> how would look selector for an element with id="d[land]" like?
[09:29:33] <Cork> $('#d\[land\]')
[09:31:29] <Cork> ah wait you need to escape for the string too
[09:31:35] <Cork> so $('#d\\[land\\]')
[09:32:33] <EugenA> yes, the second one is much better, thanks!
[10:25:42] <taplar> could also $(document.getElementById('d[land]')) and escape the escapes, :D
[10:28:51] <AdamPDotty> As you still need a separate name for form inputs I use the [] syntax only for names, not for ids.
[10:30:19] <taplar> i avoid them in ids as well, but it's all knowledge to be gained
[10:31:10] <taplar> and technically if you're doing ajax, and hate yourself, your forms don't have to have names
[10:38:48] <makr8100> I don't name my ajax forms :P
[10:39:01] <makr8100> I do id them tho
[10:39:11] <taplar> your forms or your form fields?
[10:39:43] <makr8100> I just id them most of the time, always have a submit handler that builds my object to be submitted
[10:39:53] <taplar> and you hate serialize()?
[10:39:56] <taplar> :P
[10:40:10] <makr8100> I absolutely hate serialize
[10:41:26] <makr8100> $('form').submit(function() { postData = {}; $(this).find('input,select').each(function() { postData[$(this).attr('id)] = $(this).val() }) });
[10:41:35] <makr8100> something like that
[10:42:16] <makr8100> then of course the $.ajax({ ... data: postData, ... });
[10:43:05] <makr8100> I prefer the way php handles data posted that way vs serialize()
[10:43:20] <taplar> could use map instead of each there
[10:43:23] <makr8100> and the way it looks in debug tools
[10:43:36] <taplar> err, you'd have to map and reduce, nvm
[10:43:59] <makr8100> I always forget about map, been using that method for 6-ish years now
[10:44:37] <taplar> $(this).attr('id) could be this.id though.  No need for jQuery there.
[10:44:54] <taplar> I see lots of people doing that
[10:45:41] <taplar> That and is(':checked') is written a lot, -_-
[10:46:08] <makr8100> but if it's a jquery event handler don't I need to use jquery to access 'this' ??
[10:46:13] <taplar> nope
[10:46:16] <makr8100> oops I forgot a closing '
[10:46:32] <makr8100> well crap I've been writing it like that since I first started using jquery D:
[10:46:34] <makr8100> lmao
[10:46:39] <taplar> $(this).attr('id') is taking an Element, turning it into a jQuery object, and then getting an attribute
[10:46:44] <taplar> but this.id is already exposed
[10:46:56] <taplar> and is two less method calls
[10:47:23] <makr8100> idk why I thought $(this) was specific to jquery and different from this.foo
[10:47:42] <makr8100> everything I know is wrong
[10:47:48] <makr8100> my whole life is a lie
[10:48:03] <taplar> lol.  i think lots of people just get in the habit of using jQuery for everything
[10:48:32] <makr8100> true that
[10:49:01] <makr8100> I thought when you used jquery for events you were stuck accessing the event and its element through jquery
[10:49:55] <taplar> $(someSelector).on('click', event => { console.log( 'Element clicked', event.target ) });
[10:49:58] <taplar> nah
[11:17:56] <tona> hello everyone
[11:18:06] <taplar> aloha
[11:18:09] <tona> how could I click on my submit button automatically using jquery ?
[12:06:01] <tona> how could I click submit button automatically when my form is loaded
[12:09:36] <taplar> tona you can logically fire an event on and element with the trigger() method
[18:00:03] <iwkse> hi, I'm using jquery ui drag&drop feature, I am having an issue with reverting the drag. When I do that not in a droppable div it works as expected, but when I do to a droppable div, in a place I don't want it to drop, it reverts and go back to position but also delete the element. There's a way to make it visible again?
