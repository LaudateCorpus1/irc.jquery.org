[06:54:16] <joao> hi, i have this $("#yy").text(data.yy[0]) where i receive data how can i save the data in a variable?
[06:54:46] <joao> i tryed this var numeroradios = $("#numeroradios").text(data.numeroradios)  					 console.log("PPPPP" + numeroradios);
[06:54:55] <joao> but it don't print numeroradios
[06:59:10] <shoky> var x = data.whatever;
[07:10:26] <joao> thanks  <shoky>
[07:10:27] <preference> sup, first time trying to do anything with JSON. could anyone tell me what the issue is with this?
[07:10:33] <preference> http://jsfiddle.net/xpvt214o/473692/
[07:13:56] <ryan_ford> are you trying to get data or send it?
[07:14:05] <preference> get
[07:14:24] <preference> i want to retrieve the country code from the location
[07:14:24] <ryan_ford> why are you using a post request then?
[07:14:35] <ryan_ford> and what's up with that url?
[07:14:41] <preference> this made no sense to me, either, but people said this was a working example
[07:16:09] <ryan_ford> you probably want a get request, and a valid url
[07:16:25] <preference> i already tried that :)
[07:16:32] <preference> http://jsfiddle.net/xpvt214o/473733/
[07:16:43] <preference> woops, i did change it to GET. changed it back
[07:19:50] <preference> all i really want is to find a visitor's country by IP
[07:23:05] <ryan_ford> did you go through the docs? http://ip-api.com/docs/
[07:24:38] <ryan_ford> looks like they even have a jQ example...
[07:25:53] <preference> it doesn't work :)
[07:26:13] <preference> no worries though, i'll figure it out myself
[07:26:16] <preference> thanks for the help :)
[09:32:05] <joao> hello. i have this for (i = 1; i < numeroradios; i++) { 							 						$('body').append('<button class="trigger"> ' + data.yy[i] + '</button>') 						 						 						 						}
[09:32:23] <joao> that create different buttons with different text. how can i give different ids?
[09:32:48] <joao> because i want to make actions that deppends of what button was clicked
[10:17:11] <juslintek> Hi, anyone used Bloodhoun and typeahead.js?
[10:34:08] <preference> hi guys, i got a working ajax/json geolocator with an API. it works perfectly on jsfiddle, but does nothing on the platform that i am hosting my website on. could the API calls be blocked by the platform somehow?
[10:46:33] <Guest99624> Would there be any reason why a conditional based around $(this).hasClass('class-name') would fail?
[10:47:35] <Guest99624> I'm basically trying to check whether a user should get the number of points listed in the data field, or if it has a class, to give them 2x that number. https://bpaste.net/show/b41cd722c21f
[11:07:43] <Guest99624> update: didn't realize that my $(this) was targeting the clicked answer and not the clicked question -facepalm-
[11:14:44] <catuca> I would like to loop over the children changing all the data-iterator ids to start from 0 through 4
[11:14:48] <catuca> https://codepen.io/anon/pen/gjWJeo
[11:18:11] <taplar> ok, so what's your difficulty with that?
[11:19:27] <catuca> taplar: I can't get to the children data-iterator
[11:19:37] <taplar> can you get the parent?
[11:20:01] <catuca> taplar: yes
[11:20:12] <taplar> ok, so how do you get the children of an element?
[11:20:52] <catuca> taplar: $('#buildpost_metabox_repeater_repeat > .postbox.cmb-row.cmb-repeatable-grouping).each(function(){});
[11:21:00] <catuca> taplar: $('#buildpost_metabox_repeater_repeat > .postbox.cmb-row.cmb-repeatable-grouping').each(function(){});
[11:21:22] <taplar> that's one way sure
[11:21:26] <taplar> or you could use the children() method
[11:21:38] <taplar> but either way works
[11:21:42] <catuca> taplar: $('#buildpost_metabox_repeater_repeat > .postbox.cmb-row.cmb-repeatable-grouping').each(function(){$(this).data('iterator')});
[11:21:46] <catuca> taplar: does not work
[11:22:26] <taplar> any errors in the console?
[11:22:46] <catuca> taplar: No, it just does not get to the data-iterator objects
[11:23:24] <taplar> your id lookup doesn't match
[11:23:36] <taplar> err, nvm
[11:23:46] <catuca> ?
[11:24:22] <taplar> i had a moment where i though the id didn't have the _repeat on it, but i was looking at the data-group
[11:24:44] <catuca> I just can't understand why $(this).data('iterator') wouldn't print the current iterator id
[11:25:30] <taplar> your logic is working for me
[11:25:34] <taplar> cause that's not a print statement
[11:25:40] <taplar> you have to console.log() it
[11:26:38] <catuca> I did that bud
[11:26:45] <taplar> http://jsfiddle.net/y9euk5bg/1/
[11:26:47] <catuca> it just prints out the entire object
[11:28:20] <catuca> taplar: Yeah, your code works. I did the exact same thing and it just print out the object and not the iterator numbers
[11:28:25] <catuca> taplar: argh...anyways
[11:28:26] <catuca> thanks
[11:28:36] <taplar> did you put the console log around the whole thing, and not the data part?
[11:29:30] <catuca> taplar: Yeah, I did try that. Not sure why it didn't show me. Maybe I messed up the DOM trying different things. Who knows
[11:29:33] <catuca> It is all good though
[11:29:33] <catuca> thanks
[11:47:02] <catuca> taplar: Why won't this reassign the data-iterator attribute to the new value? http://jsfiddle.net/y9euk5bg/2/
[11:48:26] <taplar> it's setting it to the index being passed in as 'a'
[11:48:38] <taplar> 0-4
[11:49:14] <taplar> given the logic you have, the external 'a' variable is not used
[11:49:21] <catuca> taplar: it is not changing the DOM
[11:49:52] <taplar> changing an element with data() will not be reflected in the browser inspector.  jQuery uses an internal cache when manipulating/retrieving data variables for performance reasons
[11:50:00] <taplar> to see the change you have to log it
[11:50:46] <catuca> taplar: but has it changed?
[11:50:53] <taplar> yep
[11:51:15] <catuca> ok cool
[11:51:19] <catuca> I have a way to test it
[11:51:20] <taplar> http://jsfiddle.net/y9euk5bg/10/
[11:51:20] <catuca> I will do it now
[11:52:24] <catuca> taplar: wait...how this is not yelling at me? a isn't set to 0 anywhere
[11:52:37] <taplar> you are passing in 'a' as a parameter to the each
[11:52:49] <taplar> which the each is giving it the index as the first argument
[11:52:55] <taplar> so 0-4
[11:53:10] <taplar> that's what i was saying when i said the external variable was not being used
[11:53:13] <catuca> right, but in your example, a wasn't set to anything
[11:53:25] <taplar> sure it is.  i just said the each is passing it in
[11:54:08] <taplar> it's just like if you have a method: function addMe (a, b) { ... }
[11:54:17] <taplar> *something* has to call that method giving two arguments
[11:54:30] <taplar> in this case, the each is calling your method you give it, and it's passing in the index as the first argument
[11:55:21] <taplar> in fact it's passing in a few things: http://jsfiddle.net/y9euk5bg/11/
[11:55:37] <taplar> well, 2
[11:56:22] <taplar> http://api.jquery.com/each/
[11:58:12] <catuca> taplar: sorry, lunch just got here and I got distracted. Let me catch up with what you have typed so far
[11:58:18] <taplar> np
[11:58:31] <taplar> you're an hour or two ahead of me, :)
[11:58:56] <catuca> ohh...I see
[11:59:03] <catuca> Does the index start at 0?
[11:59:06] <taplar> yes
[11:59:09] <catuca> ah ok
[11:59:11] <catuca> That makes sense
[12:11:04] <catuca> taplar_lunch: are you eating lunch? can you type?
[12:11:14] <catuca> taplar: ^
[12:30:18] <taplar_lunch> just got back to my desk catuca
[12:30:55] <taplar_lunch> sandwich line was slow today, :/
[12:31:39] <igcewieling> With jquery-ui Tabs, is there a way to set a minimum tab width?  I can't seem to figure out the right style or css to accomplish that.
[12:32:15] <igcewieling> most of my tabs should be the same width, but there are one or two which need to be much wider.
[12:33:00] <taplar_lunch> have you tried setting a style on .ui-tabs-tab
[12:33:02] <taplar_lunch> ?
[12:34:24] <catuca> taplar_lunch: cool, running some more tests to make sure I know how to explain what is going on
[12:36:30] <igcewieling> I tried setting it manually 7-|  I'll verify what I have for that class.
[12:37:53] <igcewieling> I have some other .ui-tabs-* css, but nothing for .ui-tabs-tab, I'll try setting it there.
[12:40:53] <igcewieling> setting .ui-tabs-tab changes the tab title, not the tab content.   I'll continue to look through the classes and see if I can find anything which works.
[12:41:00] <catuca> taplar_lunch: I understand that the DOM does not get changed with data('iterator', a). But what is getting passed is the old id. Since it is in the DOM cache, do I need to also retrieve it with .data()?
[12:41:14] <taplar_lunch> yes
[12:41:34] <catuca> oh k
[12:41:55] <taplar_lunch> try to avoid intermixing data() and attr() calls, because attr() does not use the cache
[12:42:08] <catuca> taplar_lunch: what if I do attr('data-iterator', a) instead?
[12:42:30] <taplar_lunch> then that would update the attribute on the element directly
[12:42:32] <catuca> taplar_lunch: I rather not use the cache. I would like for the values to be replaced on the browser. Does attr() do that?
[12:42:49] <taplar_lunch> yeah, using attr() you should see it reflected in the browser
[12:42:54] <catuca> k thanks
[12:43:51] <catuca> taplar_lunch: it didn't change it on the browser
[12:45:10] <taplar_lunch> http://jsfiddle.net/x1w0vo7k/1/
[12:45:21] <taplar_lunch> if i inspect that in my browser, i see "new value" in the data field
[12:47:09] <catuca> taplar_lunch: It doesn't work here: http://jsfiddle.net/y9euk5bg/11/
[12:47:28] <taplar_lunch> because that one is using data()
[12:47:45] <catuca> ohhhhh
[12:47:55] <catuca> thats right
[12:48:07] <catuca> I see where you are coming from now
[12:49:19] <catuca> taplar_lunch: Then why wouldn't it retrieve the current data from here: http://jsfiddle.net/y9euk5bg/14/
[12:50:37] <taplar_lunch> there's a bit going on with this one.  which part isn't working like you expect?
[12:52:32] <catuca> taplar_lunch: Lets say that I have 0,1,2,3,4,5. If I delete 3, it that code should do this: 0,1,2,3,4. But it seems that it does this instead: 0,1,2,4. So if I delete 2, it deletes 4. It is passing the wrong id back
[12:53:13] <taplar_lunch> fadeOut is an animation
[12:53:30] <taplar_lunch> so you can think of it like a promise, asynchronous logic
[12:53:35] <catuca> ohhh
[12:53:46] <catuca> Just place that code right above it then
[12:53:51] <catuca> You are smart taplar
[12:53:56] <taplar_lunch> i would think that would fix that issue
[12:54:08] <taplar_lunch> or, put it inside the remove
[12:54:09] <catuca> me too
[12:54:10] <catuca> testing
[12:54:24] <taplar_lunch> i mean, not inside the remove, but inside the fadeOut callback
[12:54:31] <catuca> inside remove()??
[12:54:42] <taplar_lunch> hold on
[12:54:48] <catuca> k
[12:54:57] <taplar_lunch> http://jsfiddle.net/y9euk5bg/16/
[12:55:41] <taplar_lunch> so it removes one of the elements, and then re-adjusts their numbers
[12:55:43] <catuca> taplar_lunch: it works now
[12:56:17] <catuca> taplar_lunch: I see. Unless it has completed the removal, do not re-adjust.
[12:56:18] <catuca> Cool
[12:58:54] <catuca> taplar_lunch: I had fun doing this with you. I quick recap. What did I learn from you? 1) .data() has cache. If you use data, also use it to get and set to make sure that it is coming from cache. If the DOM uses attr, you can set with attr as well and see changes on the browsers. data() will not change the DOM but it changes the value internally. 2) animation causes delay...
[12:59:32] <taplar_lunch> animation is asynchronous, not necessarily a delay
[12:59:38] <taplar_lunch> so it's non-blocking
[13:00:11] <catuca> gotcha, so it means that it will do what it needs to. If it hasn't finished, it will continue the execution of other code.
[13:00:19] <taplar_lunch> yep
[13:00:42] <taplar_lunch> and another point with the data() cache, it only caches it after it first reads/sets it
[13:01:13] <taplar_lunch> so, in actuality, you could change a data attribute N number of times, and the first time you use data, it would match
[13:01:24] <taplar_lunch> but if you use attr after that point to change it, the two will not match
[13:01:38] <taplar_lunch> which is why it's just less headache to just use one vs the other and not intermix
[13:02:55] <catuca> taplar_lunch: oh, I see
[13:03:06] <catuca> ah ok
[13:03:09] <catuca> makes total sense
[13:03:51] <catuca> So if .data(), it needs to read first so that it places it into the cache. With that info, it can set. While attribute changes happen right away. A major difference here is performance. Cache is faster.
[13:04:27] <taplar_lunch> read or set, data will cache it, since it is accessing it.
[13:04:56] <taplar_lunch> when you read a data attribute you can think of it checking the cache first.  do I know about it?  no.  go get the attribute.  put it in cache
[13:05:07] <taplar_lunch> next time
[13:05:13] <taplar_lunch> do i know about it?  yes.  just use it
[13:06:19] <taplar_lunch> and the cache can be faster, but there are also other considerations.  i believe there is logic in there to handle for older browsers which may not have fully supported the data attributes before they were introduced.  so there is some compatibility layer stuff that jQuery does for you.
[13:06:46] <taplar_lunch> which given brower usage today may or may not be an issue, but it's there
[13:08:00] <catuca> taplar_lunch: I am not too concerned with older browsers. Thankfully, this is not a concern here. We tender to our US customers which tend to use newer browsers. About over 80% of our traffic comes from Google Chrome+Safari with the 18% from IE (using 10 and up)
[13:08:17] <catuca> I think that the other 2% is misc browsers like Konqueror in Linux and so forth
[13:08:44] <taplar_lunch> so probably not a big issue, but now you know more about data() :)
[13:09:20] <catuca> yes
[13:09:21] <catuca> thank you
[15:12:41] <tsukasadt> Is it possible to bypass RequireJS and load its libraries via jQuery?
[15:12:50] <robertmaxrees> wat
[15:14:23] <tsukasadt> I'm working on a contracted system that uses jQuery without RequireJS, but we're trying to add a library that requires RequireJS. Is it possible with jQuery, or do I have to load RequrieJS and then load the library?
[15:20:33] <tsukasadt> The only solution I've found is to pull the library and inject it into a script element wrapped in "(function() {})();", but while this gets the code only the page it's not executing and making functions available.
[15:26:14] <MikeD_> this doesn't do what the person who wrote it thinks it does, does it?  .find('.uhspa-rounding-row').filter(':visible').filter(':even').addClass('uhspa-even')
[15:27:09] <taplar> find children, filter visible ones, filter even ones, add the class to them
[15:27:35] <MikeD_> but does "even" have anything to do with "visible" ?
[15:27:54] <taplar> i'm checking the api.  i'm not sure if even is going against the dom, or against the result stack
[15:27:59] <taplar> i'm thinking its the dom
[15:28:31] <MikeD_> yeah, which is why if element 3 is not visible, you'll have two even back-to-back ... thus this "zebrastripe" feature is implemented badly.
[15:29:18] <taplar> the example in the api is going straight off of a dom lookup, so it's not expressly apparent if the filter will change what it returns, so i'd have to make a fiddle to test it.  but I do believe it's the dom
[15:29:29] <MikeD_> kk, thanks
[15:29:43] <MikeD_> i didn't feel like making a fiddle either :)
[15:29:47] <taplar> heh
[15:31:46] <taplar> ooh, it actually may be the result set
[15:32:05] <taplar> https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.js   search for "even"
[15:37:37] <MikeD_> heh, i find a lot of "prEVENt"
[15:37:53] <taplar> with the quotes
[15:38:15] <taplar> sorry, should have put '' around it
[15:39:38] <MikeD_> hmm
[15:42:32] <MikeD_> you frequently remind me that i can consult implementation details and i always forget that it's possible
[15:43:22] <taplar> i just get curious some times, :)
[15:43:32] <taplar> especially when it comes to pseudo selectors
[16:37:38] <robertmaxrees> weeeeeee
[16:38:00] <taplar> yup
