[13:50:01] <bewees> hi
[13:50:19] <bewees> how can I stop a script within chromium's inspect tab. I run this script in inspect https://gist.github.com/eykanal/a0b30e035d8c15995deeffec6ab21866
[13:50:39] <bewees> i tried to click the pause button in sources but the scripts continues to run
[13:51:17] <ahylight> hi!
[13:52:20] <ahylight> could someone give the result of Date.now() in your browser console?
[13:52:45] <ahylight> I'm curious if it's really UTC / GMT or locale timezone. I ran it myself, but I'd like to compare with someone else. Thanks in advance!
[14:00:52] <bewees> nvm i used a workaround
[14:10:08] <bewees> hm my workaround doesn't work after I reopen the inspect console, i think it needs to stay open to access the scripts scope
[14:58:08] <shoky> ahylight: Date.now() is the same in every timezone. it's the number of millsecs since 1.1.1970 00:00:00 UTC
[14:58:57] <shoky> but to indulge your request... i'm getting: 1606593564397
[15:07:16] <ahylight> shoky, thanks! Are you in UTC+1 ?
[15:10:18] <shoky> ahylight: no, there is no way for you to know based on my timestamp
[15:10:45] <shoky> i'm in +2
[15:14:18] <ahylight> shoky, ok thanks! How to know *your* local time from JS?
[15:19:36] <shoky> ahylight: with the various Date instance methods. e.g.  new Date().toString()
[19:31:24] <ckb> var results = contacts.filter(contact => contact.find(val => val.includes(q))); how am I getting contact.find is not a function?
[19:31:48] <robertmaxrees> ckb what happens when you do $.fn.jquery in the console?
[19:31:52] <robertmaxrees> or jQuery.fn.jquery
[19:32:06] <ckb> 1.11.1
[19:32:28] <robertmaxrees> oh nvm - 'contact' is a DOM element - you need to do $(contact).find
[19:33:22] <robertmaxrees> and even better - .filter((index, element) => $(element).find(
[19:33:26] <robertmaxrees> :)
[19:33:41] <robertmaxrees> most jquery methods that take a function as an arg pass index, element.
[19:34:31] <ckb> val.includes is not a function
[19:34:36] <ckb> :<
[19:34:43] <robertmaxrees> same thing there.
[19:35:06] <robertmaxrees> wait does $.fn.find even take a function??
[19:35:25] <robertmaxrees> https://api.jquery.com/find/ nope - needs to be a selector or an element/jquery object.
[19:36:35] <ckb> I'm trying to search a JSON object (2d) for a value
[19:36:43] <robertmaxrees> oh.
[19:36:49] <robertmaxrees> then you're bot using jquery at all?
[19:36:54] <robertmaxrees> *not
[19:36:57] <ckb> well yes I am
[19:37:01] <robertmaxrees> huh?>
[19:37:14] <ckb> but I think this is just ES related. the result will be jquery related
[19:37:19] <robertmaxrees> lol
[19:37:25] <robertmaxrees> mind making a fiddle at least?
[19:37:31] <robertmaxrees> because JSON != javascript object.
[19:37:39] <robertmaxrees> and .find() and .filter() are for arrays.
[19:38:30] <ckb> var contacts = <?=json_encode(...)?>; ....
[19:38:47] <robertmaxrees> right, so what does the javascript actually see?
[19:39:15] <robertmaxrees> JSON can come out with [] or {} - if it's getting printed out as a string, that'll be another issue.
[19:39:19] <ckb> inspector gives me the object
[19:39:20] <robertmaxrees> make a fiddle :)
[19:39:28] <ckb> Ugh okay one second
[19:39:42] <robertmaxrees> trust me, a fiddle with an example is going to go 1000x quicker here :)
[19:40:15] <ckb> yeah I know... just give me a moment
[19:40:22] <ckb> jsfiddle?
[19:40:30] <robertmaxrees> jsfiddle.net/
[19:43:25] <ckb> robertmaxrees, https://jsfiddle.net/Lyuwas30/
[19:43:41] <ckb> I want to match on 1 or "user"
[19:43:56] <robertmaxrees> "on 1 or "user""??
[19:44:06] <robertmaxrees> what does that mean?
[19:44:17] <ckb> label or phone contains q
[19:44:51] <robertmaxrees> can you formulate that into a complete sentence?  wanna make sure i'm understanding fully :)
[19:45:52] <robertmaxrees> looking at your original code, it looks like you're conflating .filter() and .find() - within filter, you're checking each indvidual object.
[19:46:00] <ckb> Okay I want an ES function to search a 2D array to see if key values (label, phone) contain a string
[19:46:14] <robertmaxrees> that's not really a '2d' array - it's just an array of objects :)
[19:46:59] <robertmaxrees> and that's a really basic check here - .filter(contact => ) - no need to go any deeper.  just need to check contact.label || contact.phone
[19:47:06] <robertmaxrees> for whatever test you want.
[19:47:57] <ckb> I mean, what is contact has 10 keys I want to search?
[19:48:25] <robertmaxrees> do you want to search ALL the keys?
[19:48:33] <ckb> I know I can write vanilla to do this, but I'm trying to understand what is the issue with this
[19:48:46] <ckb> I potentially MIGHT in the future...
[19:48:49] <robertmaxrees> trying to help you understand.
[19:48:53] <robertmaxrees> uh, huh?
[19:49:09] <ckb> so if I wanted to search all keys, how would I do so?
[19:49:33] <ckb> rather than key1 || key2 || ...
[19:50:02] <robertmaxrees> i mean, i might avoid doing something like that in the first place since that points to a funky data format, but there are a few ways.  one sec.
[19:50:54] <ckb> no problem. I'm literally just trying to do an autocomplete but I don't want to do async web requests when this can potentially be applied site wide
[19:50:58] <robertmaxrees> https://jsfiddle.net/robertmaxrees/qgcx5u0a/
[19:51:02] <robertmaxrees> oh.
[19:51:11] <robertmaxrees> how much data are you talking here?
[19:51:17] <ckb> not much
[19:51:28] <ckb> but the latency could prove a problem
[19:51:36] <robertmaxrees> how much latency are you expecting??
[19:51:48] <robertmaxrees> or are you just on really barebones hardware?
[19:51:50] <ckb> for each async web request to do this same search?
[19:52:01] <ckb> 70-100ms I imagine
[19:52:14] <ckb> but I figure JSON is a better route
[19:52:19] <robertmaxrees> this isn't JSON.
[19:52:23] <robertmaxrees> it's just a javascript object.
[19:52:30] <ckb> well yes.
[19:52:40] <robertmaxrees> and while those numbers are non-ideal they aren't not terrible.  debounce the requests and your server won't be hit as hard.
[19:52:40] <ckb> object notation
[19:52:45] <robertmaxrees> lol
[19:53:26] <ckb> I mean if it's going to be on every page isn't it just easier to have them "hard coded"?
[19:53:36] <robertmaxrees> "easier"?
[19:53:53] <robertmaxrees> depending on the site and how things may grow over time, "easier" now may become "big pain in the ass" later.
[19:53:58] <robertmaxrees> let the server/DB do what its good at.
[19:54:13] <ckb> on server stress.. rather than HTTP calls for every 500ms after .change()
[19:54:15] <ckb> idk
[19:54:24] <robertmaxrees> huh?
[19:54:34] <robertmaxrees> debbounce the requests and reduce overall server load.
[19:54:47] <robertmaxrees> have you stress tested to confirm what it can/can't handle?
[19:54:55] <ckb> keyup/keydown on an input.... and making an HTTP call after a delay
[19:55:08] <ckb> No, I'm just speculating
[19:55:51] <robertmaxrees> you might be very surprised.  check out something like junit and simulate it.  you can also often configure your api routes to get rid of any extra request overhead and ignore things like session management and the like where it isn't necessary.
[19:56:51] <ckb> This data won't change very often, and when it does there will be a page load to update it. I don't need it super dynamic
[19:57:09] <robertmaxrees> it's less about that and more about being smart about initial pageweight and the like.
[19:57:36] <ckb> I'm also not trying to search key names, but the values of the keys. so Object.keys(...) isn't right
[19:57:51] <robertmaxrees> you didn't look at the code :)
[19:58:03] <robertmaxrees> console.log(contact[aKey]);
[19:58:17] <robertmaxrees> that prints of the values per key.
[19:58:29] <ckb> I'm still trying to learn =>
[19:58:56] <robertmaxrees> it's, basically, the same as function(){}, save for preserving your 'this' value.
[19:59:07] <robertmaxrees> (and some other minor differences, but that's the biggie)
[19:59:19] <robertmaxrees> theKeys.forEach(aKey => contact[aKey].indexOf('foo') > -1);
[19:59:26] <ckb> You think it's better to do a HTTP call rather than having the object already printed?
[19:59:41] <robertmaxrees> what's the pageweight difference with/without the object?
[19:59:55] <robertmaxrees> do you plan on that object getting bigger over time?  if so, by how much?
[20:00:06] <ckb> it's literally like 40kb tops
[20:00:35] <ckb> 400*
[20:00:43] <ckb> but yes it definitely could
[20:00:52] <robertmaxrees> so half a meg.
[20:01:01] <robertmaxrees> that's not trivial.
[20:01:08] <robertmaxrees> push that server-side.
[20:01:08] <ckb> you're right
[20:01:23] <ckb> idk what I was thinking
[20:01:33] <robertmaxrees> nah - you saw a quick and simple soluton :)
[20:01:48] <ckb> Well, I wanted it to be more responsive
[20:01:58] <robertmaxrees> responsive as in...?
[20:02:00] <robertmaxrees> mobile-friendly?
[20:02:03] <ckb> quick
[20:02:06] <robertmaxrees> oh.
[20:02:26] <robertmaxrees> "quick" applies to the whole lifecycle of the page.  users are far more likely to get pissed off when the page itself takes forever to load.
[20:02:32] <ckb> but it makes sense that someone's contact list could grow 15000+
[20:02:35] <robertmaxrees> optimize your API routes and go from there.
[20:03:15] <ckb> at that point I don't want to print an object of 15k+ on every page
[20:03:22] <robertmaxrees> right.
[20:03:46] <ckb> out of a rabbit hole
[20:03:48] <robertmaxrees> and with that, i gotta jet for a bit.  i'd head over to ##php and ##javascript for more info since none of this has to do with jquery :D
[20:03:50] <ckb> thanks robertmaxrees
[20:03:53] <robertmaxrees> happy hacking :)
[21:18:59] <Destramic> https://jsfiddle.net/destramic/3yqtwzeg/1/   how do you make a checkbox read only please?
[22:49:35] <audio> can anyone help? https://stackoverflow.com/questions/65056847/calling-djangorestframework-api-functions-from-a-chrome-extension-django
