[00:16:18] <sixfingeredamish> I asked a question yesterday but it was during odd hours and it wasn't answered. Do you mind if I ask again?
[00:44:38] <robertmaxrees> no need to ask permission :)
[00:44:41] <robertmaxrees> just ask sixfingeredamish
[00:45:38] <sixfingeredamish> ok
[00:45:59] <sixfingeredamish> I'm using JQuery to read html data attributes to display photos, text, etc upon hover.
[00:46:08] <sixfingeredamish> This works fine (working example: https://mejai.netlify.com/projects)
[00:46:17] <sixfingeredamish> However, on another page, I have the exact same set-up except with search, but it won't work (https://mejai.netlify.com/search)
[00:46:39] <robertmaxrees> this is a simple one :D
[00:46:49] <sixfingeredamish> OH GOOD :D
[00:46:50] <robertmaxrees> you're dynamically creating those search results.
[00:47:00] <sixfingeredamish> that's what i feared
[00:47:06] <robertmaxrees> but it's an easy fix.
[00:47:15] <robertmaxrees> $('.projectList li') only selects elements that exist at the time it's called.
[00:47:35] <robertmaxrees> future changes aren't accounted for.  houwever - you can leverage event delegation for this
[00:47:43] <robertmaxrees> http://api.jquery.com/on/#direct-and-delegated-events for more info
[00:47:54] <robertmaxrees> http://learn.jquery.com/events/event-delegation/ has good info, too
[00:49:21] <sixfingeredamish> ok, let me start reading this
[00:52:28] <sixfingeredamish> So what we want to do here is to: instead of using .projectList li
[00:52:44] <sixfingeredamish> I would use its parent (.projectList) which is already there at the beginning
[00:53:11] <sixfingeredamish> $( ".projectList" ).on( "hover", "li", function() {
[00:53:13] <sixfingeredamish> ^ like so?
[00:53:27] <robertmaxrees> you actually need to split this into two separate handlers./
[00:53:37] <robertmaxrees> .on('mouseenter' and .on('mouseleave'
[00:53:42] <robertmaxrees> but you've got the basic idea.
[00:54:55] <sixfingeredamish> what would it do on mouseleave?
[00:55:46] <robertmaxrees> right now you're passind two handlers to .hover()
[00:55:57] <robertmaxrees> the first runs on mouseenter.  the other on mouseleave.
[00:57:49] <robertmaxrees> make sense?
[00:57:57] <sixfingeredamish> I think so, like this? https://codeshare.io/5QLekQ
[00:58:10] <robertmaxrees> yep!
[00:58:58] <robertmaxrees> also: I would do something like var $this = $(this); and then use $this.data('foo') instead of $(this).data('foo')
[01:00:50] <sixfingeredamish> I see. Is that just an optimization thing
[01:01:12] <robertmaxrees> and a code readability thing!
[01:01:43] <robertmaxrees> any time you can call $('.bar') once and store the result is a good idea.  makes it easier to read and update in the future.
[01:02:11] <sixfingeredamish> Ah. Makes sense
[01:02:18] <sixfingeredamish> THANK YOU! I spent a long time trying to debug this
[01:02:21] <sixfingeredamish> :)
[01:04:13] <robertmaxrees> :)
[01:04:18] <robertmaxrees> just needed someone with a flashlight.
[09:08:29] <madseabear> Hello, how can i insert a lot of new elements into dom without locking the browser ? so i load a json object with ajax and then i loop through each and create the new element and append it to dom but having 200+ elements to insert causes the browser to freeze
[09:08:57] <madseabear> i tried with detaching the div and re-append it but there was barely a difference
[09:09:29] <madseabear> maybe i didn't do it right ?
[09:10:13] <Cork> madseabear: 1. don't append until your done
[09:10:34] <Cork> 2. if you need to do a lot of modifications before your done think about using a webworker
[09:11:02] <Cork> if you get hangs you most likely modify after appending (1)
[09:11:28] <Cork> cause each child append / modification cause a page reflow and that costs a lot
[09:11:59] <madseabear> Cork i detached the container, started loop, inside loop append to container then append the container when loop is done,
[09:16:15] <Cork> then check where the tome goes in the code
[14:25:41] <RoseBus> hello, i have a basic checkall() / uncheckall() function https://bpaste.net/show/5jUU
[14:26:19] <RoseBus> it works just fine _unless_ i have altered the checked state of one of the checkboxes
[14:26:47] <RoseBus> then the function does not change the checked state of the altered box, only the 'virgin' checkboxes are changed
[14:27:44] <robertmaxrees> RoseBus two things
[14:27:56] <robertmaxrees> actually sorry - just one - use .prop(), not .attr()
[14:28:08] <RoseBus> xD ty
[14:29:12] <RoseBus> that worked so ez thx
[14:29:17] <robertmaxrees> yep.
[15:59:54] <noserie> I have this checkbox form, i'm trying to limit the number of choices they get, its working but when it refreshes the checkbox is not disabled anymore https://jsfiddle.net/#&togetherjs=Uny0rwEGdw
[16:00:44] <noserie> sorry https://jsfiddle.net/c1Lzg9qu/
[16:01:08] <noserie> if you select 3 then reload the frame you will see what  i mean
[16:01:25] <RoseBus> that's a nifty little snippet
[16:02:01] <RoseBus> if i reload the screen, all of them become 'unchecked'
[16:02:28] <noserie> if you just click on the frame and reload it ?
[16:03:21] <RoseBus> if i right-click on the frame and "reload frame" all of the checkboxes return to unchecked state
[16:03:23] <RoseBus> i'm using chrome
[16:03:36] <noserie> oh firefox it does not do that
[16:04:26] <RoseBus> idk how to help u tho i'm a noob
[16:05:07] <noserie> oh ok
[16:20:43] <monmon> hello?
[16:20:46] <makr8100> noserie: I'm on Chrome and didn't see it happen either.  Try this maybe? $(document).on('ready', function() { $("input[class=yes]").trigger('change') });
[16:24:20] <monmon> is this channel still active?
[16:26:07] <daN-R-G> seems so?
[16:29:33] <monmon> doesnt seem like it
[16:34:17] <robertmaxrees> noserie first up - use prop, not attr
[16:35:15] <robertmaxrees> second up - you'll have to store that information somewhere if you want to persist data across page loads.
[16:40:13] <RoseBus> jquery stores info in the cache, right?
[16:40:33] <robertmaxrees> that's a pretty vague statement :)
[16:40:38] <robertmaxrees> and not entirely accurate.
[16:41:47] <RoseBus> i'm new to js in general... the term 'query' in jquery once made me worried we were giving db access to client-side scripts
[16:41:53] <robertmaxrees> lol
[16:42:05] <RoseBus> by 'once' i mean earlier today
[16:42:09] <robertmaxrees> yeah, nah.
[16:42:27] <robertmaxrees> older library that simplifies the DOM api a bit.
[16:42:51] <robertmaxrees> directly influenced some of the DOM API, in fact.
[16:43:53] <RoseBus> does ms office use dom?
[16:44:00] <robertmaxrees> huh?
[16:44:17] <robertmaxrees> i mean, maybe?  but that's a strange question to ask lol
[16:44:33] <RoseBus> i know they use xml
[16:45:25] <robertmaxrees> ah, you're conflating concepts - generally when we talk about DOM on the web we're referring to the API that browsers offer.  very likely that MS also uses it for office, but it probably isn't the same API.
[16:46:08] <RoseBus> ah okay
[16:47:12] <robertmaxrees> DOM is short for Document Object Model - it's technically just a way to load markup and work with it without, like, parsing the actual text yourself.  so you can treat the document as an object :)
[22:42:16] <jsin> I have a form where if questions above have their answers changed, I need to reset some of the questions below if they were already answered. Sometimes questions need to be hidden and the hide logic requires a change trigger to work correctly, so, I am using .prop('checked',false).trigger('cahnge') ---- But, it is horribly slow and fires off a chain reaction each time. Is there a better way that I am missing?
[22:49:36] <shoky_> call a function, instead of triggering a DOM event
[22:57:56] <jsin> The show/hide is in someone else's code that I cannot edit and requires me to trigger a change event for it to work
[22:58:17] <jsin> My task is to do the resetting and to trigger the change event
[22:58:47] <jsin> Can I still do as you suggest shoky? Sorry... I've done very little JS in the past.
[23:21:33] <shoky_> jsin: uh if your task is to trigger the change event... then I donno how to avoid that :p
[23:22:16] <shoky_> but triggering an event is a bad way to execute logic
[23:22:22] <shoky_> best to just.. execute it
