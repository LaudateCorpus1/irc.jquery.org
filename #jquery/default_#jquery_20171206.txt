[01:20:28] <Cork> jak2020: have a look at moment.js och setTimeout + requestAnimationFrame
[01:20:34] <Cork> opps
[01:21:01] <Cork> jak2020: have a look at moment.js and setTimeout + requestAnimationFrame
[02:44:44] <someboy> Hi
[02:44:50] <someboy> How do I check if back button was clicked?
[02:45:14] <someboy> I want to be able to disable the multi tabs for a my website but it also throws error when I click back button in safari only
[02:49:13] <Cork> someboy: you can't really
[02:49:57] <Cork> if you use the history.pushState you could have the popstate event and use that to fix the tabs instead of preventing it
[02:50:19] <someboy> Cork: tinder does something like that
[02:50:23] <someboy> and they are able to do it
[02:50:28] <Cork> not prevent no
[02:50:47] <Cork> the only thing that exists is the popstate event
[02:51:04] <someboy> not prevent but when you open a new tab they show a message in previous tab
[02:51:23] <someboy> 'You opened the app in new tab'
[02:51:25] <Cork> they might be using window.open i guess
[02:52:19] <Cork> hmm or was it window.popup... -_-' keep forgetting
[02:52:43] <someboy> what should them do?
[02:52:49] <someboy> they open new tab?
[02:55:29] <Cork> fix the site to not break when ppl navigate...
[02:55:50] <someboy> :(
[02:56:04] <Cork> it was a long time since it was ok to prevent users to use there browser cause one are to lazy to fix the server code
[02:56:30] <Cork> there are good hooks for all you need to do this correctly
[02:56:32] <Cork> just do that
[03:00:59] <someboy> Cork: okay, but for now I'll have to fix it
[03:01:07] <someboy> I have written the code which blocks multiple tabs
[03:01:12] <Cork> you can't
[03:01:16] <someboy> it works in chrome, ff, and safari
[03:01:16] <Cork> if you mean browser tabs
[03:01:23] <Cork> you have no control over that
[03:01:46] <someboy> yeah  I mean browser tabs. The problem with the safari is that it shows the eror  when i click the back button
[03:02:10] <Cork> ya, you can detect if a new tab is opened from the current page (in some cases) but you can't EVER prevent it
[03:02:57] <someboy> https://gist.github.com/anonymous/469879a963d2f9e92b465cb7c3f4edc7
[03:03:24] <someboy> it works fine for chrome, ff, and safari, Only thing broken with safari is that it shows that message even when you click back button
[03:03:47] <Cork> that is absolutely horrible...
[03:03:59] <Cork> and it won't prevent all cases anyway
[03:04:11] <Cork> as sessionStorage isn't always synced
[03:04:29] <someboy> Cork: what if I have used something else?
[03:04:35] <Cork> sigh...
[03:04:37] <someboy> it works fine with ff, chrome though
[03:04:45] <Cork> the best option you can do is use websocket
[03:04:46] <someboy> I mean I can't fix the site as of now
[03:04:55] <Cork> have each page you open connect to the websocket server
[03:05:02] <Cork> then you can count the number of tabs they have open
[03:05:09] <Cork> but except for that, you can't do it
[03:05:14] <someboy> Oh, but nothing on client side?
[03:05:27] <Cork> browsers will explicitly lie to you in some cases
[03:05:49] <someboy> do you think changing the timeout could help there?
[03:05:58] <Cork> no
[03:06:08] <someboy> ...
[03:06:11] <Cork> once every 1 milisecond is often enough...
[03:06:30] <someboy> okay, why that code is horrible?
[03:06:44] <Cork> cause you use a setInterval to try to detect user state...
[03:07:09] <Cork> that will burn cpu times like mad for no reason what so ever
[03:07:17] <someboy> hmmm...right
[03:07:56] <someboy> okay if I were to give report on what's status of fixing it
[03:08:00] <someboy> what it should be?
[03:08:15] <someboy> What are solutions, why is this bad? Why it can't be fixed?
[03:08:16] <Cork> well you haven't said why the server ends in error
[03:08:25] <Cork> i would look at handling that
[03:08:29] <someboy> because of session fuckery is all i know
[03:08:43] <Cork> then i would fix that so it isn't broken
[03:08:58] <someboy> hm, okay
[03:09:05] <Cork> alternatively you could write a small websocket server
[03:09:14] <Cork> that all it does is take the session key and stor it
[03:09:18] <someboy> Cork: last question why safari behaves badly and not others?
[03:09:27] <Cork> if two connections has the same session send back to block the page
[03:09:40] <someboy> Cork: any example tutorial you can send me to? So I can actually do and test it?
[03:10:01] <Cork> not really, as it depends on what server language you want to use for websocket
[03:10:12] <someboy> Cork: I am okay with node
[03:10:17] <Cork> the javascript end is extreamly simple and prob only needs to be like 3-4 lines
[03:10:47] <Cork> then find a tutorial for how to handle websocket connections in node
[03:11:27] <someboy> the server written is in other language, does that matters?
[03:11:49] <Cork> php can't support websocket connections as far as i know
[03:12:02] <Cork> it needs to be a language that can handle keeping constant connections
[03:12:08] <someboy> Oh so fix the damn site is only way to do it?
[03:12:21] <Cork> basically ya
[03:12:30] <someboy> hm okay
[03:12:48] <Cork> but the websocket solution doesn't have to be integrated with the normal site
[03:12:53] <Cork> it can be a stand alone thing
[03:13:03] <someboy> Cork: okay tell me more, I am all eyes
[03:13:12] <Cork> i already have
[03:13:28] <someboy> so one browser has the socket related to it
[03:13:30] <Cork> javascript connects to the websocket address on page loads push the session id
[03:13:35] <Cork> the server stores the id
[03:13:41] <Cork> on connection loss throws away the id
[03:13:54] <Cork> if you get two connections with the same id, send back to block the page
[03:14:09] <someboy> awesome
[03:14:16] <someboy> Thank You!
[03:14:22] <Cork> i would prob say the easier way to go is to fix the page, but it is a way to do it, that would actually work
[03:16:02] <someboy> aha thanks
[04:05:13] <Koopz> just got some weird issue... Edge is getting 403s on an $.ajax() OPTIONS request
[04:05:20] <Koopz> Firefox does fine
[04:06:03] <Koopz> may there be problems sending the Authorization header?
[04:07:01] <Koopz> nah that can't be it... the Authorization header isn't being passed in Firefox either
[04:47:44] <morphyeys> hello guys!
[04:59:22] <Cork> Koopz: just dump what you get server side and see what differs
[05:06:36] <Koopz> already found the problem. Customer firewall is blocking API access
[05:06:58] <Koopz> Firefox and Chrome don't give a damn
[05:07:23] <Cork> what?
[05:07:40] <Cork> you mean the request silently fails?
[05:13:24] <Koopz> well it doesn't fail silently
[05:14:02] <Koopz> the firewall just jumps between the assumed target and the user and throws a "Blocked" page with a 403 at him
[09:40:40] <Dunams> I have some on click events bound to elements inside a pjax contrainer, after the contrainer is reloaded the events aren't triggered anymore, what should I do?
[09:44:44] <m1su> use event delegation and attach your event listeners to a parent of the container
[09:45:43] <moveax> ^ there is a good guide in the docs for that
[09:45:53] <moveax> https://learn.jquery.com/events/event-delegation/
[09:46:18] <Dunams> thanks, just tried binding to the body and it works that way
[14:19:15] <poboy> Hmm.  How can I add a class onfocus?  This doesn't appear to work.  class="form-control onfocus="<?= $dependency['check_amt_1']['dependantField']?>""
[14:19:39] <taplar> ask ##javascript
[14:19:40] <robertmaxrees> poboy why not do the binding via js instead?
[14:19:50] <robertmaxrees> and/or - why not use a css pseudoclass?
[14:23:18] <WebDragon> poboy: um, your quotes are skewed
[14:23:33] <WebDragon> class="form-control" <-- missing quote there
[14:23:42] <poboy> WebDragon it's at the very end
[14:24:01] <WebDragon> poboy: onfocus is not a class
[14:24:06] <taplar> which would be a syntax error
[14:24:11] <WebDragon> precisely
[14:24:17] <WebDragon> which is why it isn't working
[14:24:53] <taplar> if that paste is verbatim, then the class value ends with the start of the onfocus
[14:24:54] <WebDragon> class="form-control" onfocus="<?= $dependency['check_amt_1']['dependantField']?">
[14:25:12] <WebDragon> erp
[14:25:22] <poboy> got it, thanks everyone.
[14:25:39] <WebDragon> class="form-control" onfocus="<?php echo $dependency['check_amt_1']['dependantField']; ?>">
[14:25:47] <robertmaxrees> ew.
[14:25:50] <taplar> ya
[14:25:54] <WebDragon> no kiddin
[14:26:07] <robertmaxrees> generating inline handlers using php
[14:26:16] <taplar> and my suspicion is that that value isn't javascript either
[14:26:25] <poboy> plus I need to first check if it's empty.
[14:26:25] <WebDragon> having a dispatch table isn't a bad thing, necessarily
[14:26:59] <robertmaxrees> having inline handlers within markup is though ;)
[14:27:17] <taplar> unless you're doing like some framework
[14:27:21] * WebDragon duly logs the ensuing half hour of eye rolls and arm waving
[14:27:28] <WebDragon> ;)
[14:28:07] <robertmaxrees> taplar then you're not putting handlers in your html, you're putting it into your templating language ;)
[14:28:16] <taplar> ^_^
[14:29:30] * WebDragon puts handlebars on his huge blob of code, and calls it a steering whale
[14:30:06] * taplar sings "I can write an app, with no handlebars.  no handlebars."
[14:30:32] * WebDragon throws the appropriate amount of peanuts in taplar's general direction
[14:30:36] <taplar> jk.  do luv me some handlebars
[14:30:58] <taplar> and now i need to find that song again
[14:31:06] <WebDragon> heh
[14:32:10] <taplar> you do any react/vue?  it's pretty sweet progressing from nothing, to handlebars, to something with a data-model
[15:08:46] <robertmaxrees> hoo boy.  get to do datetime math using the native Date constructor.
[15:08:56] <taplar> nice
[15:11:41] <taplar> what's the occasion?
[15:19:22] <grapheti> https://i.imgur.com/pB3j4L3.gif
[15:19:51] <taplar> i'm disturbed sometimes how quick people whip out memes
[15:38:08] <codecutter> $('.foo').text('text') replace everything inside the div with 'text' including '<i class="rss-icon"></i>' part, how do include it?
[15:39:54] <taplar> put a span around the text that you want to replace and target it specifically
[15:41:41] <codecutter> just realised i already have it :P
[15:43:59] <taplar> (y)
[15:44:13] <taplar> awww, no thumbs up icon
[15:44:18] <codecutter> is that a two finger lol
[15:44:29] <codecutter> oh
[16:46:16] <WebDragon> taplar: no actually I use no react/vue
[17:16:12] <taplar> it's pretty sweet once you get into it
[17:23:51] <grapheti> vue dat bomb
[17:23:55] <grapheti> da*
[18:26:35] <stan_man_can> SO I'm using select2 on some input's on an website primarily used on phones. Is there any way so that when an element is selected to scroll the browser so it's at the top of the page?
[18:26:57] <stan_man_can> Essentially it gets all screwey when you focus on the select2 input because it doesn't all fit on the screen
[18:28:02] <taplar> Conceptually you'd have an event binding on the focus or the open of the select2, which would find the elements scrollTop(), and then scroll the page to that position
[18:45:16] <stan_man_can> taplar: thanks
[18:46:35] <taplar> i'm out!
[18:46:43] <taplar> don't cry
