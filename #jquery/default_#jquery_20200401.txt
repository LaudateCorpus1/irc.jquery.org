[01:11:06] <Cork> jak2000: never hand build params, use $().serialize() or $.params()
[01:12:18] <Cork> normally arrays are built by repeating the value key with [] $.params({ editable: [ 'name', 'fecha' ] })
[01:12:41] <Cork> thought you can't have double value for each entry like you have with the numbers
[01:12:52] <Cork> so either the string or the number
[01:21:32] <Cork> opps sorry its $.param not $.params
[07:28:17] <Sal> hi, I have an object retuning from a success ajax call and I want to move its content to a global var so that I can access the content from other functions
[07:28:32] <Sal> is there a way to do it? I'm getting crazy after it
[07:29:16] <Sal> I know that you need to initialize the global var to that object, but I can't because I don't know what object returns from the ajax call
[07:30:06] <Sal> is there a way to copy an object to a non initialized var?
[07:52:01] <Cork> Sal: you can't access respons data outside the callback no
[07:52:11] <Cork> Sal: the best solution is to use deffered objects
[07:52:40] <Cork> ref = $.ajax(); ref.done(function(data) {}); .... ref.done(function(data) {}); .... ref.done(function(data) {});
[07:52:57] <Cork> but the code that need to access the returned data need to be inside the done callback function
[07:53:21] <Cork> Sal: this is cause the data isn't back in syncronous mode so you have to wait for it
[07:53:59] <Cork> es6+ has await and but it isn't fully usable yet
[07:54:33] <Cork> (would give that about another year for edge do die)
[07:54:38] <Sal> Cork, no, I have data from ajax success, so its already there. I display the content do I know it arrived
[07:55:04] <Sal> but, on a button click, when I need to go to another function to work with that data, the global var is empty
[07:55:22] <Sal> this is a sample, made with js https://jsfiddle.net/qmf5ax1u/1/
[07:56:52] <Cork> Sal: https://jsfiddle.net/4xmdjnyw/
[07:57:03] <Cork> that is why you can't use it "after" the ajax call
[07:57:13] <Cork> cause it is executed BEFORE the callback
[07:58:06] <Cork> if you for example use it in a global variable from a input event or similar you can access the data
[07:58:15] <Cork> as it is in a separate execution scope
[07:58:26] <Cork> so it will be fired after the callback hook
[07:58:31] <Sal> wait, I'm not getting it... the A2 function is executed on user click event after I see the A1 has its ajax data
[07:58:38] <Sal> so, there's not async
[07:59:16] <Cork> Sal: there is no ajax in your code snippet
[07:59:25] <Cork> just a function doing a return of an object
[07:59:34] <Cork> that isn't how ajax works
[08:00:24] <Sal> Cork, I know, i couldn't put the ajax call in the sample, so I just created a func returning an obj
[08:00:37] <Sal> but the concept is the same
[08:01:51] <Cork> Sal: you can simulate an ajax call with function ajaxCall(callback) { setTimeout(function() { callback({ one:1,  two:2,  three:3, four:4, five:5 }); }); }
[08:02:00] <Cork> that will give you a somewhat correct experience
[08:02:34] <Cork> or you can use jsfiddles built ajax echo backend
[08:05:45] <Sal> Cork, ok, i'll add the click event, or you'll continueing saying its a async problem, and I'll put it all in jq
[08:05:48] <Sal> 1 sec
[08:06:32] <Cork> well you need to have a realiztic reprecentation of the problem your trying to solve
[08:15:49] <Sal> the problem is passing an object data to a non initialized global var
[08:15:54] <Sal> that is it all
[08:16:23] <Cork> if you just want to set a value globaly you use window['the name'] = value
[08:16:56] <Cork> but note that is fully globally, and noramlly that is a bad idea
[08:17:22] <Sal> no, sorry, look at the sample, its global within the function
[08:17:32] <Sal> so its not global GLOBAL
[08:17:35] <Sal> sorry
[08:17:41] <Cork> there is no unitizalized global inside a function
[08:17:43] <Cork> it dosen't exist
[08:17:49] <Sal> var dt
[08:17:57] <Sal> in funcA
[08:18:03] <Cork> well if the dt is defined you can just do dt = value;
[08:18:14] <Cork> if it isn't defined you can't create it
[08:18:34] <Sal> yes, and if i debug step by step, at the line dt = data, I can see the content copied
[08:18:50] <Sal> but as soon as I step into the A2 function, dt is empty
[08:19:16] <Cork> most likely cause it runs in a state before the ajax callback has sat the value
[08:19:34] <Sal> no, A2 is run only by a click event
[08:19:48] <Sal> after the user has seen some of the data on screen
[08:19:56] <Cork> then you define the value so they have two different names or isn't in the same scope
[08:20:08] <Cork> or last option, you clear it somewhere
[08:20:40] <Sal> ok, have to leave now, I'll make a better sample later and if you'll still here, I'll try to recontact you
[08:20:42] <Sal> thanks for now
[09:09:57] <Sal> Cork, https://jsfiddle.net/58m1czfr/
[09:10:05] <Sal> here it is, but this works :-(
[09:10:21] <Sal> but gives you an idea of what its all about
[09:10:31] <Sal> have to see my code why its not working
[09:10:44] <Sal> in the sample it is
[09:10:59] <Sal> but, as you can see, there no async problem
[09:11:52] <Cork> Sal: trigger isn't the same thing as user events thought
[09:11:57] <Cork> those are still syncronous
[09:12:15] <Cork> and again there isn't any ajax code here and that is most likely why you don't see the problem
[09:13:42] <Sal> the ajax emulation is myFuncTwo
[09:13:57] <Sal> I use a click to activate it
[09:14:20] <Sal> on the real app, I read data from ajax and then trigger an event
[09:14:30] <Sal> so all other funcs are listening that event
[09:14:38] <Sal> there can't be async
[09:15:06] <Sal> ajax goes by itself on a 1 minute timer
[09:15:10] <Cork> no you do not
[09:15:20] <Cork> data = {}; isn't even remotely close to what ajax does
[09:15:32] <Sal> oh
[09:15:45] <Sal> my ajax call returns json
[09:16:02] <Cork> you can do setTimeout(function() { data = {}; }); if data is a variable defined before
[09:16:07] <Sal> debugging the return, I see an object just like that
[09:16:10] <Cork> and you get closhish to how ajax work
[09:16:46] <Cork> you can't return value from an ajax callback
[09:16:54] <Cork> ever
[09:17:05] <Sal> I'm not getting it
[09:17:21] <Cork> you need to read up on asyncronous code flows in javascript
[09:17:27] <Sal> wait, let me add the timeout
[09:17:44] <Cork> cause you go with the expectation that var data = setTimeout(function() { return {1: } })
[09:17:59] <Cork> cause you go with the expectation that var data = setTimeout(function() { return {1: 'a', 2: 'b' } }); data == {1: 'a', 2: 'b'}
[09:18:10] <Cork> and that isn't in any way or form correct
[09:18:57] <Cork> Sal: https://jsfiddle.net/1g03ps48/
[09:19:11] <Cork> there you have a way to share code with an event handler
[09:19:33] <Cork> as long as the event handler isn't triggered before the ajax call has succeeded
[09:20:25] <Cork> (and ya, alert for debugging sucks, but vivaldi has manage to make console.log completely unusable with jsfiddle so...)
[09:23:23] <Sal> https://jsfiddle.net/58m1czfr/1/
[09:23:29] <Sal> this is more realistic
[09:23:44] <Sal> but anyway, like I said, here the dt = data line is working
[09:23:56] <Cork> ya, cause it is still syncronous
[09:24:05] <Cork> .trigger() does not make syncronous code async
[09:26:32] <Cork> Sal: either you have to never call sendData() except through setInterval or setTimeout
[09:26:46] <Cork> or you need to include the /echo/json to emulate what you actually do with the ajax call
[09:27:02] <Sal> oh
[09:27:08] <Sal> ok, i'll do that
[09:27:11] <Cork> i suggest do the later
[09:27:31] <Cork> as it means one can actually read the code to figure out where the async error comes from
[09:28:11] <Cork> i gave you a link a little while ago with a working example of the echo service
[09:30:04] <Sal> here it is
[09:30:04] <Sal> https://jsfiddle.net/58m1czfr/2/
[09:30:17] <Sal> with the ajax, and here, like I said, is working
[09:31:07] <Sal> I need to better check my code. I wrote it last night, or better, thins morning a 05:00 AM, so maybe i coded with one eye closed
[09:31:11] <Cork> ok. ya, that all looks correct
[09:31:39] <Cork> then you have to figure out where your local copy differ from the jsfiddle
[09:31:40] <Sal> thanks for you time
[09:31:43] <Cork> np
[09:32:00] <Sal> and take care
[09:32:05] <Sal> ciao
[10:09:37] <Sal> Cork, just came back to tell you ythat i found the problem and to show you how dum I am. The var holding the copied data was named 'dt', and at the end of the function I had a var dt = date();data
[10:09:53] <Sal> so I was redefining the var
[10:10:24] <Sal> bye
[12:09:22] <asdfgh> hello
[12:09:33] <asdfgh> is it possible to hide() a select >option>
[12:09:35] <asdfgh> ?
[12:10:49] <Robdgreat> asdfgh: what happened when you tried it?
[12:14:12] <asdfgh> Robdgreat, my doubt is if it is crossbrowser
[12:15:41] <Robdgreat> it's not the kind of thing I'd assume isn't, though
[12:16:13] <asdfgh> Robdgreat, ok
[12:16:20] <asdfgh> pardon i just have started with jquery but
[12:16:42] <asdfgh> when i do $("#my-select").on('change', function(){..... here ....})
[12:16:51] <asdfgh> there how can i select the option?
[12:16:56] <asdfgh> because i have to hide it.
[12:17:06] <asdfgh> if i do $(this).hide() it hide the select
[12:17:33] <Robdgreat> are you able to assign meaningful ids to your options?
[12:17:40] <Robdgreat> if so, you can select by id
[12:18:20] <asdfgh> Robdgreat, i have the value of the option√π
[12:18:52] <Robdgreat> https://stackoverflow.com/questions/314636/how-do-you-select-a-particular-option-in-a-select-element-in-jquery
[12:19:00] <Robdgreat> this demonstrates how to do it
[12:19:34] <asdfgh> thanks
[12:19:50] <Robdgreat> np
[12:27:34] <asdfgh> Robdgreat, i do var o = $(this).val();
[12:27:42] <asdfgh> and then $('#filters-list option[value="' + o + '"]').hide();
[12:27:47] <asdfgh> + o + in mandatary?
[12:27:56] <asdfgh> can i write it inside the string directly?
[12:28:13] <Robdgreat> like how?
[12:28:18] <Robdgreat> (no)
[12:28:31] <Robdgreat> there isn't another way
[12:28:42] <asdfgh> f"hello {name}" like in f-strings in python
[12:28:44] <asdfgh> ok
[12:30:37] <Robdgreat> huh ok I thought it was possible thata there was a away that I just didn't know. I guess interpolation is a thing now
[12:31:39] <Robdgreat> https://dmitripavlutin.com/string-interpolation-in-javascript/#41-refactor-string-concatentation maybe
[21:55:36] <znf> Could anyone have a look at https://zoso.ro/doua-despre-presa-2/ and figure out why fitVids() returns that it's not a function? even tough the script is loaded
[22:10:35] <znf> Seems that my scripts suddenly load with async="async", where they didn't before
