[02:52:42] <factor> With Jquery, how would I load the html but not redner it , until I called it in a jquery function?
[02:53:21] <robertmaxrees> "load" how?
[02:53:27] <Cork> factor: var html = $.get('url'); $(target).html(html)
[02:53:50] <Cork> factor: note it still expects a partial / fragment not a full html page
[02:55:02] <factor> can url be an object
[02:55:12] <factor> right
[02:55:13] <Cork> no
[02:55:15] <factor> will be partial
[02:55:16] <Cork> its an url
[02:55:18] <factor> no header
[02:55:18] <robertmaxrees> you can ski[ that part.
[02:55:21] <robertmaxrees> *skip
[02:55:34] <robertmaxrees> var theThing = $('<span>foo</span>');
[02:55:50] <Cork> ya, if you already have the html just parse it
[02:56:09] <Cork> also for completeness you should do $($.parseHTML('string'))
[02:56:19] <factor> It will be a wordpress php plugin output using shortcode not a url
[02:56:19] <Cork> else you might get broken parsing
[02:56:35] <Cork> uh.. js can't access php values
[02:56:38] <factor> ok thanks , I think I got it.
[02:56:39] <Cork> you need to fetch it somehow
[02:57:04] <factor> The php returns the html for the client to process.
[02:57:20] <factor> it works now, just want to load it later. as my page is getting bogged down.
[02:57:31] <factor> Have the user click activate.
[02:57:34] <Cork> factor: that means you have to fetch it from the server
[02:57:45] <factor> right , but not as url , as a shortcode
[02:57:47] <Cork> else you will still have to do the server load on first load, just not show it
[02:57:56] <Cork> "shortcode"??
[02:58:11] <factor> I think I got it now though.
[02:58:22] * Cork isn't convinced...
[02:58:27] <factor> Wordpress function that gets url
[02:58:57] <factor> I will have it render the html code into a javascript object.
[02:59:06] <factor> instead of raw html
[02:59:19] <factor> then jquery can render it with the .html you shown me.
[03:00:43] <factor> As you said  var theThing = $(' PHP shortcode will render in here.  ');
[03:01:11] <robertmaxrees> no
[03:01:18] <robertmaxrees> php is server-side.
[03:01:24] <robertmaxrees> jquery is client-side.
[03:01:35] <factor> PHP send out HTML
[03:01:53] <robertmaxrees> :|
[03:02:22] <robertmaxrees> that sounds terrible.
[03:02:25] <factor> ok yea, the PHP script will render the javascript and HTML , just will be encapsulated with the javascript var
[03:02:33] <robertmaxrees> ewwwwwww
[03:02:35] <robertmaxrees> don't do that.
[03:02:42] <factor> I do that already
[03:02:50] <robertmaxrees> that's an awful pattern.
[03:03:05] <factor> I made a word search puzzel and it genreate the client side vars fo rit
[03:03:29] <robertmaxrees> there's nothing you can say that will change the fact that it's a bad idea.
[03:03:44] <factor> that would have php create a javascript variable for the page to use.
[03:03:55] <factor> How is it a bad idea.
[03:03:56] <robertmaxrees> lol that's a bad idea still.
[03:04:28] <robertmaxrees> you need client-side rendering.  with a library/framework meant to do that.
[03:04:34] <robertmaxrees> anyway - i gotta to go bed.  kbyeeeeee
[03:04:38] <factor> heh
[05:38:43] <crs> Good morning. :)
[10:53:53] <primitivMedia> https://bpaste.net/show/uIBc
[10:54:00] <primitivMedia> this isnt doing what i hope it would do, any thoughts?
[10:54:12] <taplar> what do you hope it would do?
[10:54:56] <taplar> though just from a quick look it looks like you are comparing a string to an array
[10:55:03] <taplar> would always be not equal
[10:56:04] <taplar> if you are wanting to see if you're string contains characters you don't want, you should be able to do that with a simple /[your invalid characters]/.test(yourString)
[10:56:54] <primitivMedia> that could be true and yes that is exaclty what I am trying to do
[14:20:16] <nitrospectide> I am using a very simple bit of jQuery to run a slideshow. It was designed to manipulate <img> elements inside a parent <div>. I tweaked the selectors to make it manipulate <div>s inside a parent <div>. It works great, until I add something inside the inner divs. If you run this jsbin, right click the output to inspect the markup, and you'll see the code somehow strips the inner divs off of the <h1>s that are inside them, and makes them
[14:20:16] <nitrospectide> siblings to the inner divs, breaking things. How can I get it to manipulate the inner divs like intended, but keeping their children inside them? https://jsbin.com/bojinev/edit?html,css,js,output
[14:22:41] <robertmaxrees> nitrospectide :first-child is selecting ALL elements that are the first-child of their parent
[14:24:13] <robertmaxrees> if you do a console.log($('
[14:24:29] <robertmaxrees> * console.log($('.fadein :first-child'));, you'll see what's up.
[14:25:29] <robertmaxrees> do something like this instead: https://jsbin.com/tagotuhako/1/edit?html,css,js,output nitrospectide
[14:33:28] <Jonatas> Good afternoon!
[14:33:45] <Jonatas> Do you have a problem witj jquery ui thems download?
[14:50:08] <Tcalp> I feel a bit daft, but can anyone see what I'm doing wrong with my data argument on this ajax post : https://puu.sh/ElJ2Z/669abfdb00.png
[14:55:53] <taplar> what is the console.log logging?
[14:56:29] <thykka> and what does window.modules contain? I mean, is it stringifiable?
[14:59:54] <Tcalp> yeah sorry, should have included more details
[14:59:56] <Tcalp> https://puu.sh/ElJfw/f7735a10ac.png
[15:00:17] <Tcalp> data post is not preset in the url request
[15:02:25] <taplar> ok, so open your developer tools and go to the network tab, then make your ajax request happen.  Find the request, and take a look at the data being passed to post body
[15:03:04] <Tcalp> Yes, the request is happening, and as I said, there is no data post
[15:03:58] <taplar> not even the object with the key of modules in it?
[15:04:08] <Tcalp> nope
[15:04:22] <Tcalp> if I change it to { 'modules' : 'HI' } , it works
[15:04:33] <Tcalp> still doesn't work as window.modules either
[15:04:41] <Tcalp> so it's something with the data array
[15:04:45] <thykka> Tcalp, I'm suspecting you have class instances or such inside window.modules
[15:04:52] <thykka> those cannot be converted into JSON
[15:05:07] <Tcalp> https://puu.sh/ElJmb/858ab4be16.png
[15:05:16] <thykka> yup
[15:05:19] <thykka> can't do that
[15:05:48] <thykka> you must recreate the instance server-side, or rip out the data you want and send just that
[15:06:33] <Tcalp> thykka, isn't the above code just assigning data to an array ?
[15:06:41] <thykka> it's not just any data
[15:07:12] <thykka> if your data consists of strings, numbers, arrays and objects, it's fine
[15:07:23] <thykka> nulls too, and perhaps some other things
[15:07:34] <thykka> but what you have here is an instance
[15:07:53] <taplar> try changing "var modules = [];" to "window.modules = []';"
[15:07:54] <Tcalp> blah I was using [] instead of }|
[15:07:57] <Tcalp> {}
[15:08:05] <Tcalp> works with {}
[15:09:17] <Tcalp> thanks for the help guys
[15:10:05] <taplar> also note that there is a syntax issue in the success method of https://puu.sh/ElJ2Z/669abfdb00.png
[15:10:23] <nitrospectide> robertmaxrees: You ducked out before I could respond. Thank you very much.
[15:10:36] <robertmaxrees> sorry, had to go to a meeting - and did that make sense?
[15:11:04] <nitrospectide> Is there a way to not use the classs, and limit the scope of first-child to only the immediate first child? Kind of like div>div does in CSS?
[15:11:18] <robertmaxrees> jquery selectors support CSS selectors :)
[15:11:21] <nitrospectide> robertmaxrees: total sense
[15:11:25] <robertmaxrees> you can do exactly that.
[15:11:25] <Tcalp> taplar, yeah it hasn't been re-coded yet
[15:11:37] <nitrospectide> hmm
[15:11:46] <robertmaxrees> but I would honestly favor using a class.
[15:11:55] <robertmaxrees> and avoid implicit relationships between elements.
[15:14:23] <nitrospectide> robertmaxrees: I suppose that assuming structure creates awkward requirements that can easily be broken.
[15:14:46] <taplar> div > div creates three points of failure
[15:14:53] <robertmaxrees> ^
[15:15:18] <taplar> the parent element could change, the child element could change, the child could become an indirect child
[15:16:56] <taplar> ".someParent .someChild"  also has three points of failure, but they are different
[15:17:29] <taplar> 1) the parent doesn't have the class (but we don't care what tag it is), 2) the child doesn't have the class (but we don't care what tag it is, 3) it may not be a child at all
[15:18:03] <taplar> "not a child at all" is much less strict than "not a direct child"
[15:40:31] <robertmaxrees> welp
[16:37:19] <robertmaxrees> weeeeeeeeeeeeeeeeee
[22:09:21] <audioburn> henlo birb
[22:09:27] <audioburn> hello you STINKY birb
