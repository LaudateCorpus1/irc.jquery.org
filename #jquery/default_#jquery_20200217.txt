[01:27:46] <Cork> hrobi: ya, jquery-ui has a hard time when it comes to atracting developers
[01:28:00] <Cork> (note jquery and jquery-ui are two separate projects
[01:28:04] <Cork> )
[05:02:04] <errorous> Hello. Given $('.myclass a'); that catches 4 <a> elements. How can I use it with click()?
[05:02:23] <errorous> $('.myclass a').click( function(){}); doesn't work
[05:50:45] <Cork> errorous: that should work, as long as the elements exist when you run the code
[05:51:02] <Cork> errorous: for future elements you want the delegate syntax instead
[05:51:27] <Cork> https://api.jquery.com/on/#on-events-selector-data-handler
[05:52:20] <Cork> (also note if you replace the elements ex. by replacing them with new html tags. the event handlers on the old elements are lost)
[05:52:27] <errorous> Cork yeah that should work in case you're not an idiot and had <div class="my_class"> but used $('.my-class a')
[05:52:44] <Cork> lol, classic :)
[05:52:54] <Cork> i've done the same a few times too :D
[05:52:56] <errorous> I love this job!
[05:53:09] <errorous> Yeah, i did this a few times, as well, in the last hour
[05:53:12] <errorous> :D
[05:53:15] <Cork> lol
[05:54:24] <errorous> people don't trust me when I say there are moments I'd rather be fetching tools for construcion workers instead of programming
[06:59:37] <karstenk> Iam using jq-ui for a slider, but I would like to have behavior show slider on mousedown and bind direction to the handle directly. Any suggestions how to do that?
[07:08:27] <Cork> show slider on mousedown??
[07:08:38] <Cork> you mean it should be hidden untill it is clicked?!?
[07:12:48] <Robdgreat> I think that's the pinnacle of "mystery meat navigation"
[12:30:15] <Dotnet> Sa
[12:31:33] <robertmaxrees> aS
[12:31:44] <Dotnet> Dakso
[12:31:53] <Dotnet> AnannaÄ± sikerim senin. AI a
[12:32:23] <robertmaxrees> what a pleasant person
[13:26:31] <taplar> life; an eternal struggle against the vampire
[15:11:09] <robertmaxrees> basically.
[16:07:43] <caliel> good morning #jquery
[16:08:21] <robertmaxrees> good afternoon
[16:08:30] <caliel> just using UGT :P
[16:08:36] <robertmaxrees> so am i ;)
[16:08:52] <caliel> long live this channel then ;)
[16:09:15] <robertmaxrees> lol
[16:09:59] <caliel> I need to perform multiple ajax calls, but sequentially - i.e. if the user has expired credentials AND hasn't a valid profile, i create <div data-rel="popup-crud" data-url="url_to_the_credential_update"> and another <div data-rel=... url_to_profile_update>
[16:10:57] <caliel> I was trying to perform $.each('*[data-rel^="popup-crud"').function() { crud($(this)); } where crud is a function that activates a modal div and process the data
[16:11:13] <caliel> but I cannot perform them sequentially, just the last one popups
[16:11:31] <caliel> I've tried with $.Deferred.resolve(); but it's an endless loop - any help?
[16:11:32] <robertmaxrees> you'd need to chain some .then() calls to handle this.
[16:12:10] <robertmaxrees> but also: do they really need to be sequential?
[16:14:08] <caliel> robertmaxrees: yes, because there are some other controls, for example, I cannot ask a "customer" to create a payment account before creating the billing profile
[16:14:21] <robertmaxrees> got it - so you have dependencies in there.
[16:14:45] <caliel> robertmaxrees: the "rude" solution would be to use {% if %} {% else %} in the Twig template
[16:14:46] <robertmaxrees> do you have a set known number of potential calls?  or is it a variable number?
[16:15:34] <caliel> robertmaxrees: it's variable - for example, if the user creates the account, then the credentials are not expired, but if it asks for a new password, the credentials are expired (he needs to change it at first login)
[16:15:50] <caliel> robertmaxrees: I used deferred.then but it's an infinite loop
[16:15:52] <robertmaxrees> then you're in for a real gross time.
[16:16:06] <robertmaxrees> check out this: https://stackoverflow.com/a/24706694/923919
[16:16:14] <robertmaxrees> the part labeled "Sequence the Ajax Calls - Iterate Arbitrary Length Array"
[16:16:29] <robertmaxrees> basically, you'll need to get your calls into an array and go from there.
[16:17:49] <caliel> ok just like ... $('*[data-rel^="crud-popup"]').each( deferredArray[] = $(this)) and then follow that answer?
[16:18:09] <robertmaxrees> no - you need to get all the ajax calls into an array first.
[16:18:22] <taplar> side note, try to scope down that initial selector
[16:19:17] <caliel> mmm
[16:19:23] <robertmaxrees> var foo = $('*[data-rel^="crud-popup"]').map(/* get whatever you need for the ajax call from here */).get();
[16:19:27] <robertmaxrees> foo would then be an array of ajax calls.
[16:19:36] <robertmaxrees> *array of whatever you need for your ajax calls, rather.
[16:19:52] <caliel> taplar: how can I scope down it?
[16:20:02] <marchesini> why this sh** dont run https://pastebin.com/m4iG0aFM
[16:20:08] <caliel> robertmaxrees: I try right now
[16:20:23] <taplar> Do they have a common element, or elements?  Because the `*` on that selector is not doing anything
[16:20:37] <robertmaxrees> marchesini what do you mean "don't run"?
[16:21:04] <taplar> @marchesini one thing, `val()` is a method
[16:21:22] <caliel> taplar: they can be divs or spans
[16:21:42] <caliel> taplar: I can use div[data-rel^="crud-popup"];
[16:21:51] <taplar> so you could do `div[...], span[...]` to scope it down a bit
[16:22:12] <caliel> taplar: I will follow your advice, thank you
[16:23:09] <robertmaxrees> marchesini also: don't do new Object() - just do var myObject = {};
[16:23:26] <marchesini> run well before the second alert, but in jquery.ajax the execution stops
[16:23:51] <taplar> did you fix the typo I pointed out?
[16:23:54] <marchesini> i will try
[16:23:54] <robertmaxrees> marchesini check your network tab - is the ajax call failing?
[16:24:17] <marchesini> i will try in the postman
[16:24:28] <taplar> ...
[16:24:28] <robertmaxrees> also: did you fix the type Taplar pointed out?
[16:24:34] <robertmaxrees> *typo?
[16:24:37] <taplar> myObject.msg = $("#msg").val;
[16:24:49] <taplar> it's going to try to stringify a method for the ajax call
[16:24:54] <robertmaxrees> running this in postman doesn't make any sense if you're trying to troubleshoot your code.
[16:26:12] <marchesini> i will check if the backend is working
[16:26:14] <marchesini> well
[16:26:28] <robertmaxrees> >.>
[16:26:42] <taplar> https://i.imgflip.com/3phiud.jpg
[16:27:08] <robertmaxrees> srs
[16:28:30] <marchesini> backend working very well
[16:28:51] <taplar> marchesini please take a moment to address the issue i pointed out
[16:28:53] <robertmaxrees> so for the umpteenth time - marchesini did you fix the typo that taplar pointed out?
[16:28:59] <taplar> it dosn't help anyone if you ask for help, and ignore it
[16:29:52] <marchesini> lol
[16:29:57] <marchesini> i will do
[16:32:01] <marchesini> taplar, what line of code i need edit?
[16:32:06] <marchesini> full lenght https://pastebin.com/f8q6kwK3
[16:32:13] <robertmaxrees> marchesini he showed you an example already.
[16:32:22] <robertmaxrees> <taplar> myObject.msg = $("#msg").val;
[16:32:28] <robertmaxrees> ^ val is a method, not a property.
[16:32:48] <taplar> val() <= getter version; val('weee') <= setter version
[16:33:31] <marchesini> lol tks
[16:34:04] <caliel> robertmaxrees: can you please take a look to this? I tried your .map().get() stuff but I suppose I didn't get the point -> https://pastebin.com/GB9KMemm
[16:34:22] <robertmaxrees> where's the code?
[16:34:28] <robertmaxrees> none of that has what I suggested.
[16:35:06] <robertmaxrees> did you read the stackoverflow link i pasted?
[16:35:44] <caliel> yes I was trying to replicate the paragraph you pointed - I tried with the .map().get() stuff getting a console error about callback...
[16:36:03] <caliel> the popupUrls[] is the files]
[16:38:27] <caliel> robertmaxrees: https://pastebin.com/eJb1CX1r
[16:38:50] <caliel> I think I didn't get the point though.
[16:39:00] <caliel> s/think/am sure/g
[16:41:05] <robertmaxrees> so reread the "Sequence the Ajax Calls - Iterate Arbitrary Length Array" paragraph in the SO artickle.
[16:41:07] <robertmaxrees> *article
[16:41:33] <caliel> ok I will RTFM ;)
[16:42:04] <robertmaxrees> as an aside, why not have a single endpoint that returns what you need to do next?
[16:42:12] <robertmaxrees> instead of these weird, nested client-side calls?
[16:45:38] <caliel> robertmaxrees: I didn't think about that, to be honest... but I cannot say previously what comes next
[16:46:11] <caliel> what do you mean, can you explain this PoV?
[16:48:14] <robertmaxrees> well, what problem are you actually trying to solve here?
[16:52:18] <caliel> robertmaxrees: the problem is this. Perform some checks on Users / Admins / Customers and force them to complete needed data before browsing the control panel.
[16:52:30] <caliel> robertmaxrees: I thought about addressing [0] and location.reload();
[16:52:55] <robertmaxrees> "and force them to complete needed data before browsing the control panel." like what?
[16:53:40] <robertmaxrees> your session store on the server-side should have all of this info already.  the page then checks against that on load.
[16:53:50] <caliel> https://pastebin.com/ZFmkkUzD
[16:54:08] <robertmaxrees> yeah, so your server should be managing all of this.
[16:54:15] <robertmaxrees> instead of ad-hoc in the browser.
[16:55:04] <caliel> well, I could redirect the user to a page with a Before Controller filter
[16:55:35] <robertmaxrees> ^^^
[16:55:40] <robertmaxrees> exactly what you should be doing.
[16:55:41] <caliel> that was the first solution, but it's... "not economic"
[16:55:47] <robertmaxrees> sure it is.,
[16:56:08] <robertmaxrees> it'll take you longer to figure out how to handle all of this client-side.
[16:56:09] <caliel> well I have to check a lot of routes... and exclude the current route...
[16:56:37] <robertmaxrees> could invert that and load that filter by default for all routes and then explcitly exclude it when needed.
[16:56:56] <robertmaxrees> or use that filter to simply set flags on the session and then respons as appropriate within your controllers.
[17:03:23] <caliel> robertmaxrees: can be a solution
[17:03:25] <caliel> thank you :)
[17:09:19] <caliel> robertmaxrees: I will study in deep the SO link you gave me, while trying to work on controller filters. Anyway I got a workaround, can you tell me what do you think about it? I mean, side effects and related? https://pastebin.com/fjYd2CCF
[17:09:49] <caliel> that way I will take the very first element on the list - of course when the credentials is not expired, the popup div will not exist
[17:10:32] <robertmaxrees> lol
[17:10:33] <robertmaxrees> first off
[17:10:44] <robertmaxrees> if (undefined !== typeof (element)) { - don't do yoda conditonals.
[17:10:58] <caliel> lol
[17:11:08] <caliel> may the Schwartz be with you (yogurt)
[17:11:14] <robertmaxrees> but also, the more idiomatic, jquery way to do that is if (element.length) {
[17:12:57] <robertmaxrees> that's especially important here, but your check will always be truthy if you're selecting via jquery.
[17:13:29] <caliel> robertmaxrees: well, it *was* element.length but I hate the IDE warning in yellow -.-'
[17:13:40] <robertmaxrees> then fix your IDE
[17:13:43] <robertmaxrees> if (undefined !== typeof (element)) { will always pass.
[17:13:57] <caliel> corrected in element.length
[17:14:40] <robertmaxrees> just to drive the point home: https://jsfiddle.net/robertmaxrees/wmn9t86e/
[17:14:54] <caliel> I will win the lazyness to fix the IDE -.-' well, this way (dunno if it's the correct way) I achieve the result needed, just one popup at a time
[17:15:05] <robertmaxrees> :/
[17:15:20] <caliel> yes
[17:16:44] <caliel> https://pastebin.com/9ekB5HhX - done - do you think that this could have some side effects?
[17:17:46] <robertmaxrees> yeah, i do.  $('*[data-rel^="crud-popup"]') isn't a very good selector.
[17:18:23] <robertmaxrees> that asterisk is redundant.  instead, at least scope down your selector, just like taplar suggested.
[17:19:59] <caliel> yes I was so used in writing *[] (because, for example, I have both button,a,span,i[data-rel^="crud"] that I used * for the modal activation "link"
[17:20:15] <robertmaxrees> it's still redundant in this case.
[17:20:22] <caliel> that I forgot to re-fix, did the div[data-rel^="popup-crud"] as good taplar suggested
[17:20:41] <robertmaxrees> it's implied when you're doing attriobute selectors.  though attribute selectors are a bad idea, especially for data attributes.
[17:22:14] <taplar> The logical point to make there is that a selector of "*[...]" doesn't make a lot of sense.  "*" matches everything.  And "[]" will evaluate on everything.  So the "*" is pointless
[17:22:24] <robertmaxrees> ^
[17:22:37] <caliel> ok I understand the redundancy, it's pointless
[17:22:50] <robertmaxrees> and actually, in some cases, would actually be appreciably slower, since you're forcing some older browsers to gather ALL elements before doing the next step.
[17:23:38] <caliel> using a class (i.e. .crud .crud-popup) could be better (no attribute selectors here) and repeat the selector for i and button ?
[17:24:05] <robertmaxrees> if you use a class, you don't need the tag part.
[17:25:00] <caliel> $('.crud').on('click) .... element = $('.popup-crud')[0];
[17:25:10] <caliel> s/\[0\]/.first\(\)/g
[17:25:30] <robertmaxrees> yeah, either .first() or .eq()
[17:26:03] <robertmaxrees> fwiw https://jsfiddle.net/robertmaxrees/prxhjktu/ this is why you don't select on data attributes.
[17:26:12] <robertmaxrees> well, one of the reasons at least.
[17:26:53] <robertmaxrees> bbiab
[17:26:59] <caliel> uh, it doesn't log
[17:27:13] <taplar> it logs 0
[17:59:49] <caliel> good night #jquery - robertmaxrees, taplar thank you really much for your precious *time*
[18:54:21] <errorous> Hello. Has anyone worked with jstree?
[18:55:09] <robertmaxrees> errorous if you have a question, just ask :)
[18:56:22] <errorous> robertmaxrees using jstree and json to create tree. I've added custom attribute to all my nodes in json, but when I console log a node, I don't see that property
[18:56:32] <robertmaxrees> gotta fiddle?
[18:56:59] <errorous> robertmaxrees nope, let me create one
[19:02:46] <robertmaxrees> errorous any luck?
[19:09:57] <errorous> robertparkerx https://jsfiddle.net/x83e5u6n/9/
