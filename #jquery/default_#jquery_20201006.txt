[13:15:11] <robertparkerx> is there anyway to prevent default on a submit but still submit the form ?
[16:48:17] <conr> how can you define a variable like `const v = $('table');` and search its children jquery again?
[16:48:28] <robertmaxrees> v.find('.foo');
[16:49:06] <conr> will find do a deep search or just on that node level?
[16:49:20] <robertmaxrees> .find() searches all descendents of a given element.
[16:49:31] <robertmaxrees> https://api.jquery.com/find/ for more info
[16:49:50] <robertmaxrees> if you want to just search the direct children of an element, you want, well, .children() :)
[16:50:11] <conr> can i still use `v.find('.foo').text();`?
[16:50:23] <robertmaxrees> yeah - why wouldn't you be able to?
[16:51:01] <conr> i basically have 5 tables in the dom and based on validation i want to put the 1st or last table in a var.
[16:51:12] <conr> then  search within
[16:51:30] <robertmaxrees> sure - can do that just fine.
[16:54:58] <conr> `const v = $('table').first();`, `$("tr").each(function () { const td =   ${self.find("td:nth-child(3)").text().trim(); });`
[16:55:09] <conr> oops
[16:55:26] <conr> const v = $('table').first();`, `v.each(function () { const td =   ${self.find("td:nth-child(3)").text().trim(); });
[16:55:55] <robertmaxrees> that's not valid code.
[16:56:21] <robertmaxrees> specifically ${self.find("td:nth-child(3)").text().trim();
[16:56:49] <robertmaxrees> are you trying to use find on the current tr?
[16:57:23] <conr> `const v = $('table').first();`
[16:57:25] <conr> `$("tr").each(function () { ${this).find("td:nth-child(3)").text().trim(); });`
[16:57:58] <robertmaxrees> that ${this) doesn't make sense - do you meant $(this) ?
[16:58:16] <conr> basically grab all tables, isolate the first or last, then loop through all tr and grab each td value
[16:58:26] <conr> yes
[16:58:47] <robertmaxrees> are you trying to get an array of each TD's text?
[16:59:17] <conr> yes or i'll set it as vars.
[16:59:29] <robertmaxrees> lol
[17:00:07] <robertmaxrees> if you want the text of all the TDs, just do const allTdText = $(this).find('td').map(function() { return $(this).text().trim() }).get()
[17:02:22] <conr> actually i need only 3 of the 8 tds
[17:03:11] <robertmaxrees> i'd try to add semantic classes to them or find some other way to identify them beyond just "i need x number of them" - make your server render them with a class that you can target.
[17:03:28] <robertmaxrees> one shared class or one for each one, whichever makes more sense.
[17:04:16] <conr> i wish i could but i'm scraping html
[17:04:36] <robertmaxrees> gotcha.  is there a table heading or some other way you can better index that data?
[17:05:09] <conr> yeah i've got classes i was just using $('table') to keep it simple here
[17:05:21] <robertmaxrees> i mean the TDs haha but sure.
[17:06:00] <conr> no their markup is awful
[17:07:54] <conr> so this should work? `const v = $('table').first();``v.find('td').map(function() { return $(this).text().trim() }).get();`
[17:08:22] <robertmaxrees> erm.
[17:08:33] <robertmaxrees> what are you hoping that does?  becuase right now it won't do anything.
[17:09:34] <conr> i just trying to define one section of code "first table" in to a var, so i can search on it multiple times and not always use the whole dom.
[17:09:52] <robertmaxrees> the const v = $('table').first() will do that.
[17:10:39] <conr> right ok.
[17:11:39] <conr> 2nd question what's the best way to get the 2nd to lasts node?
[17:11:44] <conr> slice()?
[17:11:59] <robertmaxrees> can you make a fiddle to reference so I better understand what you need?>
[17:12:07] <robertmaxrees> "2nd to lasts node" doesn't really mean anything out of context :)
[17:13:46] <conr> sure
[17:24:04] <robertmaxrees> >.>
[17:24:16] <conr> robertmaxrees: https://jsfiddle.net/kuxfzsqg/
[17:24:45] <robertmaxrees> ok.  so what do you need next?
[17:25:53] <conr> what's the best approach to get the 1st div.table_c and the 2nd to last div.table_c?
[17:26:12] <robertmaxrees> what is "2nd to last div.table_c" referring to?
[17:26:26] <conr> Header 2
[17:26:55] <conr> but the amount of div.table_c is not static, could be 4, 1, 5
[17:27:03] <robertmaxrees> you can use .eq() for some of this.
[17:28:32] <robertmaxrees> there are a handful of ways to handle it, but you could do stuff like: https://jsfiddle.net/jw1shd0b/
[17:28:40] <conr> so `.eq(-1)`?
[17:28:49] <robertmaxrees> no - check out the docs for .eq()
[17:31:00] <conr> ok i see. and how would you recommend grabbing the h3 and h5 text?
[17:31:14] <robertmaxrees> how do you think you'r do that?
[17:31:16] <robertmaxrees> *you'd
[17:32:01] <conr> `const h3 = v.find('h3').text();`?
[17:32:34] <robertmaxrees> :shrug: have you tried? :)
[17:33:47] <conr> yes, i'm a genius!
[17:33:51] <robertmaxrees> :)
[17:34:54] <conr> ty
[18:36:16] <conr> robertmaxrees: one more question, is this valid `v.find('div.ofh > div:nth-child(6)).text();`?
[18:36:36] <robertmaxrees> just sure I follow - "valid" as in...?
[18:36:58] <robertmaxrees> *not sure i mean
[18:37:12] <conr> can i use that selector with .find()?
[18:37:59] <conr> or does it have to be html tags? ie h3
[18:38:00] <robertmaxrees> you can use any selector with .find(). though you're missing a quote there.
[18:38:12] <conr> ok cool thanks
[18:38:24] <robertmaxrees> did you try checking the dogs first? :)
[18:39:07] <robertmaxrees> wtf *docs
[18:40:14] <conr> i should of
[18:43:50] <robertmaxrees> ;)
