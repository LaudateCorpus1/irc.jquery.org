[00:50:56] <Cork> robertmaxrees: or in many cases the question (or rather potential question) is just ignored
[15:45:16] <realdeal007> hello?
[15:45:25] <robertmaxrees> hello
[15:47:31] <robertmaxrees> but it's been so long since gambl0re was here last :/
[16:38:20] <zeferefr> hi
[16:38:27] <zeferefr> which is better :
[16:38:51] <zeferefr> var $el = $('#main-content')$el.data('key', 'plop');
[16:39:13] <zeferefr> which is better :
[16:39:22] <zeferefr> $el.data('key', 'plop')
[16:39:23] <zeferefr> or
[16:39:26] <zeferefr> $.data($el, 'key', 'plop')
[16:39:30] <robertmaxrees> the first.
[16:39:44] <zeferefr> robertmaxrees $el.data('key', 'plop') ?
[16:39:47] <robertmaxrees> yes
[16:39:51] <zeferefr> why ?
[16:40:11] <robertmaxrees> more consistent with the rest of the jquery API.
[16:40:42] <robertmaxrees> in fact, the docs for $.data() tell you that $().data is more convenient.
[17:16:27] <zeferefr> robertmaxrees Thanks
[17:16:53] <robertmaxrees> Sure :)
[19:50:43] <fury__> this is a simplified example, and the problem cannot be reproduced here, but under what circumstances might 'myvar' be undefined in success()? http://dpaste.com/30799RC
[19:50:49] <fury__> I have never seen such a thing
[19:51:09] <fury__> in the real example, the variable is NOT modified or touched - it's defined on line 2, and undefined on line 8, with no other code at all inbetween
[19:51:21] <robertmaxrees> can you show us the actual code?
[19:51:33] <fury__> unfortunately not, but it's really that simple. defined on line 2, and undefined on line 6
[19:51:38] <fury__> it's just a bunch of variable declarations
[19:51:45] <robertmaxrees> i have a feeling there's something else going on here.
[19:51:47] <fury__> just looking for a clue here
[19:52:16] <robertmaxrees> check for any places that you set myvar.
[19:52:44] <fury__> literally none inbetween line 2 and 6
[19:52:57] <robertmaxrees> dunno then,
[19:53:06] <fury__> and this is almost verbatim copy/paste from elsewhere that I do the same thing
[19:53:09] <robertmaxrees> can't help without the actual code in front of me. sorry,
[19:53:33] <fury__> http://dpaste.com/0JGX3BH
[19:53:36] <fury__> that's kinda the best I can do
[19:53:40] <fury__> it's the entire thing
[19:53:48] <robertmaxrees> so which var is it here?
[19:53:59] <fury__> see line 54
[19:54:20] <robertmaxrees> sttYears is valid here ?
[19:54:27] <fury__> right
[19:54:38] <fury__> and as soon as $.get fires and enters .success(), it's no longer defined
[19:54:51] <fury__> this violates everything I know about scope in C-like languages in javascript for more than a decade
[19:55:04] <fury__> it almost smells like stack corruption from back in my C++ days, but, it isn't
[19:55:20] <robertmaxrees> i feel like the example got cut off somewhere.
[19:55:27] <fury__> the rest of it is not relevant
[19:55:34] <fury__> as it doesn't contain problematic code
[19:55:37] <robertmaxrees> where's the closing curly for "handleStupidUpdate"?
[19:55:38] <fury__> ohh wait a minute
[19:55:49] <robertmaxrees> or the end of the success callback?
[19:55:58] <fury__> oh, nope, that's the end of the function essentially, there's nothing after $.get
[19:56:19] <Jonno_FTW> hello
[19:56:22] <robertmaxrees> can you paste it then fury__?
[19:56:38] <fury__> sure: });
[19:56:46] <robertmaxrees> *sigh*
[19:56:52] <Jonno_FTW> I'm using setInterval to display some json from $.getJSON in a <pre>, but it stops working when the json has a % in it
[19:56:52] <robertmaxrees> please help me help you duder.
[19:57:03] <robertmaxrees> Jonno_FTW show some code :)
[19:57:38] <fury__> robertmaxrees yeah I hear you, I appreciate it, give me a sec
[19:57:43] <Jonno_FTW> robertmaxrees: http://pastebin.ws/1ra82g
[19:57:59] <fury__> I realize that code could execute after $.get and invalidate those because $.get is async, but, there's nothing after it
[19:58:38] <robertmaxrees> sure, but i want to make sure I have an accurate representation of your code.
[19:59:28] <robertmaxrees> Jonno_FTW and what's the data you're feeding it?
[19:59:34] <Jonno_FTW> robertmaxrees: one sec
[19:59:42] <fury__> robertmaxrees: http://dpaste.com/02NVTCY - I may have made some mistakes anonymizing it
[20:00:03] <fury__> the problem is between line 42 and 44, and genuinely no code executes after that
[20:00:08] <fury__> it's nested inside $.get
[20:00:21] <robertmaxrees> so which var is it here?
[20:00:33] <fury__> sttSort, sttYears, sttModels, et al
[20:01:16] <Jonno_FTW> robertmaxrees: oh I figured it out, python is putting NaN in the json file
[20:01:16] <fury__> I understand there's some spaghetti here, it's not mine heh
[20:01:40] <robertmaxrees> so where are the cars undefined here?
[20:01:43] <robertmaxrees> *vars
[20:01:51] <fury__> they are defined on line 41, and not defined on line 45.
[20:02:03] <fury__> I could understand if there was code after that first $.get that was invalidating it, but, there isn't
[20:02:24] <robertmaxrees> actually, there is.
[20:02:31] <robertmaxrees> :)
[20:02:35] <robertmaxrees> hoisting is the issue.
[20:02:46] <robertmaxrees> see how you're later doing var sttYears = $('select#sttFilterYear').val(); within that callback?
[20:03:05] <fury__> yes, but later on, and that code hasn't executed yet
[20:03:15] <fury__> and this is done elsewhere
[20:03:16] <robertmaxrees> but that's not what's happening in the engine.
[20:03:24] <robertmaxrees> 1 sec.  let me show you.
[20:03:55] <Jonno_FTW> is it possible to get $.getJSON to understand NaN?
[20:04:04] <robertmaxrees> fury__ https://jsfiddle.net/robertmaxrees/1b8rokgq/1/
[20:04:11] <robertmaxrees> Jonno_FTW not sure i follow.
[20:04:34] <Jonno_FTW> robertmaxrees: actually that's not the issue
[20:04:58] <Jonno_FTW> the issue is that there are non-standard NaN values in my data, i don't think JSON.stringify handles them properly
[20:05:01] <Jonno_FTW> maybe
[20:05:11] <robertmaxrees> fury__ because you do var sttYears = $('select#sttFilterYear').val();, the js engine "hoists" the var declaration.  so what's actually happening is it's executing var sttYears; at the top of the function, before anything else happens./
[20:05:37] <robertmaxrees> Jonno_FTW i'd need to see the data to understand what problem you're having :)
[20:06:28] <robertmaxrees> Jonno_FTW i say that because https://jsfiddle.net/robertmaxrees/qek30pzr/
[20:06:47] <fury__> robertmaxrees: that's utterly ridiculous and literally code executing out of order and nonsense, but, such is javascript I guess. thanks, seems like I just need to remove the 'var'.
[20:07:13] <robertmaxrees> fury__ yep.  when you redeclare using var, you're also changing the scope.
[20:07:32] <robertmaxrees> so, like in my fiddle, the two foo vars are different objects entirely.
[20:08:20] <robertmaxrees> modern javascript doesn't suffer from these kinds of issues but that doesn't really help much without a transpiler.
[20:08:55] <Jonno_FTW> robertmaxrees: https://gist.github.com/JonnoFTW/4d76a44215538e6b6bb8985dadb6eb51
[20:09:14] <fury__> well thanks for your help, I'll try to look out for that next time
[20:09:20] <robertmaxrees> sure :)
[20:09:20] <fury__> and it's fixed now
[20:09:23] <Jonno_FTW> stats.json  is provided by an pi
[20:09:25] <Jonno_FTW> api
[20:10:45] <robertmaxrees> Jonno_FTW so what about this "doesn't work"?
[20:11:03] <Jonno_FTW> robertmaxrees: when the bad.json file is present, it doesn't update the <pre>
[20:12:21] <robertmaxrees> got it.
[20:12:32] <Jonno_FTW> and there's no error in the console
[20:12:51] <robertmaxrees> what version of jquery are you using?
[20:12:56] <Jonno_FTW> it's in the html
[20:13:05] <Jonno_FTW> 3.4.1
[20:14:27] <robertmaxrees> hrm.
[20:15:49] <robertmaxrees> well, neither of those objects work for me under jquery 3.4.1
[20:16:57] <Jonno_FTW> I get a parseerror
[20:17:02] <robertmaxrees> oh?
[20:17:27] <Jonno_FTW> if I put .fail() after the getJSON
[20:17:47] <Jonno_FTW> does jquery not use the builtin json parser?
[20:17:48] <robertmaxrees> mind copying the raw response from your network tab?
[20:18:08] <Jonno_FTW> {"gpus":[{"free":9037742080,"name":"GeForce RTX 2080
[20:18:08] <Jonno_FTW> Ti","temp":35,"total":11522867200,"usage_pct":{"gpu":26,"memory":14},"used":2485125120}],"runtime":717.043484,"sessions":[],"started":1579827971.134132,"tasks_stats":{"a_g_e":{"fail":{"25%":NaN,"50%":NaN,"75%":NaN,"count":0.0,"max":NaN,"mean":NaN,"min":NaN,"std":NaN},"success":{"25%":3.4776047500000002,"50%":4.1495885,"75%":4.4569589999999994,"count":100.0,"max":5.479553,"mean":3.99287998,"min":1.729362,
[20:18:14] <robertmaxrees> :|
[20:18:14] <Jonno_FTW> "std":0.9058703343163991}}}}
[20:18:17] <Jonno_FTW> woops
[20:18:20] <robertmaxrees> heh
[20:18:40] <fury__> robertmaxrees: ah, I see, hoisting as in ANSI C "all variables are declared at the top of the function"
[20:18:40] <Jonno_FTW> http://pastebin.ws/4dy76q
[20:18:42] <Jonno_FTW> raw response
[20:18:51] <robertmaxrees> fury__ correct.
[20:19:01] <robertmaxrees> fury__ you also didn't wnat to redeclare those vars.
[20:19:20] <robertmaxrees> in fact, technically, you should just store the result of the id selectors at the top and then vall the .val() method on 'em as needed.
[20:19:49] <fury__> I agree. somebody else lazily copy/pasted this code and I got stuck fixing it, didn't write it, and so wasn't paying as much attention
[20:19:59] <fury__> maybe he's here, watching ;)
[20:22:26] <robertmaxrees> Jonno_FTW try swapping to just $.ajax()
[20:22:50] <robertmaxrees> $.ajax('/stats.json').then(/* success function here */)
[20:26:21] <Jonno_FTW> robertmaxrees: I 've done this https://gist.github.com/JonnoFTW/4d76a44215538e6b6bb8985dadb6eb51
[20:26:29] <Jonno_FTW> load as text, parse with JSON5
[20:26:43] <robertmaxrees> get rid of dataType: "text",
[20:26:53] <robertmaxrees> let ajax figure out the correct type for you.
[20:26:54] <robertmaxrees> :)
[20:27:28] <robertmaxrees> also: that code's gonna not do what you think it does - you want a recursive setTimeout where you call the next iteration in that success callback.
[20:27:53] <Jonno_FTW> yeah probably
[20:27:59] <robertmaxrees> :)
[20:28:03] <Jonno_FTW> and it should only run when the page is in focus
[20:28:15] <robertmaxrees> why's that?
[20:28:25] <robertmaxrees> oh and you'll also wanna make sure you start using .then()/.catch()
[20:28:34] <Jonno_FTW> or maybe not
[20:28:47] <Jonno_FTW> eventually it will update some plots and charts and things
[20:29:20] <robertmaxrees> 'k.
[20:30:41] <Jonno_FTW> should probably also use vue.js or something to update the UI
[20:30:48] <robertmaxrees> depending, yeah.
[20:30:57] <robertmaxrees> if it's a small, simple project, no need imho
[20:48:55] <Jonno_FTW> I just want to be able upsert some templated content
