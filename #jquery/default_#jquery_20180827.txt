[01:14:46] <compact> hi. im looking at https://mariolurig.com/selectize-demo.htm?m%5B%5D=&m%5B%5D=&m%5B%5D= - any idea how when I implement this into mine, serialise doesn't rerun? it all goes back to select menus - https://pastebin.com/ixPgY57i
[01:16:15] <Lenswipee> hi, when to use .text() and .html()?
[05:24:13] <shadowswalker> hello guys, I want to create something like $('.list').myList(); for all list class and add some property accordingly ,how do I do that ?
[05:48:04] <AdamPDotty> $('.myList').prop(propertyName, propertyValue);
[09:30:21] <Lamentin12> hello
[09:30:43] <Lamentin12> is there anybody who knows jquery datatable plugins
[09:31:00] <Lamentin12> I'm trying something but it's no longer working
[10:16:44] <spinningCat> any suggestion to make this better http://jsfiddle.net/hellyeah/UxGr4/153/
[10:20:26] <AdamPDotty> changing names again
[10:21:41] <AdamPDotty> anyways: You search for $('#state') a lot, could use a variable
[10:22:58] <AdamPDotty> the rest is mainly readability
[10:30:28] <Cork> avoid appending in a loop to a dropdown that exists in the dom
[10:30:52] <Cork> as it causes page redraws each time you do it
[11:03:42] <AdamPDotty> Cork: Would you create a select outside DOM and then replace the old one?
[13:18:45] <thecliguy> I've a function in which a GET a performed against a PHP script. I want to achieve two things: 1) There are several steps within the function which should not be performed until the GET is complete. 2) The function should not return to the caller until the entire function has been executed. In other words, it should operate synchronously.
[13:19:01] <thecliguy> I think the following sample code achieves objective 1 but not 2: https://paste.debian.net/1039532/
[13:19:23] <taplar> dead link?
[13:19:37] <robertmaxrees> https://paste.debian.net/1039532/ works for me
[13:19:45] <robertmaxrees> thecliguy so where's the issue?
[13:19:45] <taplar> hmm
[13:19:58] <robertmaxrees> thecliguy are you trying to return the result of that $.get() ?
[13:20:05] <taplar> i had to swap it to http
[13:20:58] <thecliguy> I beleive that the function is handing back to the call when it reaches $.get
[13:21:06] <thecliguy> *caller
[13:21:32] <robertmaxrees> thecliguy right, because it's a promise.
[13:21:36] <taplar> your saying what it's doing.  robert is asking what the goal is
[13:22:13] <taplar> why do you need the method to behave synchronously?
[13:22:19] <robertmaxrees> actually
[13:22:35] <robertmaxrees> this looks like confusion about what "asynchronous" means.
[13:22:42] <robertmaxrees> oh oh nvm.
[13:22:45] <robertmaxrees> taplar+++ is right
[13:23:03] <thecliguy> Because the caller depends on actions within PerformLookup hving been completed.
[13:23:23] <thecliguy> So I dont want to hand back to the caller until everything is complete in PerformLookup.
[13:23:30] <robertmaxrees> thecliguy you want to return the $.get() call and then use the .then() in the calling function
[13:25:35] <thecliguy> I actually don't want to return anything from PerformLookup(). It actually writes its output to an HTML5 custom data attribute.
[13:25:58] <thecliguy> Yeah... not the best idea probably. But I don't want to do a complete refactor if possible.
[13:26:07] <robertmaxrees> it's not a complete refactor.
[13:26:17] <robertmaxrees> just gotta fix those two functions.
[13:27:24] <thecliguy> I've been playing with various ideas and going through various documentation on api.jquery.com but I'm just not getting how to structure this.
[13:27:50] <taplar> so you know the then() in the method is done after the ajax finishes, right?
[13:27:57] <robertmaxrees> ^
[13:28:15] <taplar> and a promise can have more than one then() attached to it
[13:28:17] <robertmaxrees> and that doing a synchronous ajax call will lock the browser.
[13:28:39] <taplar> so your $.get() can have it's then() inside the method that does whatever with the result.
[13:29:00] <taplar> but, if your method returns the $.get(), the caller can attach a then() to that as well, to do whatever it needs to after it is finished
[13:29:51] <taplar> function me() { return $.get(...).then(...); }   me().then(...more stuff...);
[13:30:02] <thecliguy> If I were to keep it as a self contained solution would it require child functions within 'PerformLookup()' ?
[13:30:28] <taplar> can you elaborate on what you mean by 'self contained'?
[13:31:00] <thecliguy> So the caller doesn't have to be involved with any output/return emitted by 'PerformLookup()'.
[13:31:16] <taplar> you could pass in a callback to the method
[13:31:19] <thecliguy> PerformLookup() just runs and exits once all code has been executed.
[13:31:29] <taplar> that's synchronous thinking
[13:31:37] <taplar> you have to think in terms of asynchronousity
[13:38:14] <thecliguy> Could you help demonstrate this for me if you have time? http://collabedit.com/qk2cd
[13:38:47] <thecliguy> Or any existing examples you could point me to?
[13:39:05] <robertmaxrees> https://bpaste.net/show/49ee6e1e77bc
[13:39:21] <robertmaxrees> this is one way
[13:40:45] <taplar> i'm assuming that collabedit auto updates for you as we type in it?
[13:42:38] <thecliguy> Yes thats right it does.
[13:43:11] <taplar> so you see the two different ways you could go about using a callback?
[13:43:19] <thecliguy> I'm just reading through what you've written.
[13:45:28] <thecliguy> I think its clicked.
[13:47:11] <thecliguy> Thank you both - I am going to start testing this now.
[13:48:06] <thecliguy> I was not expecting two replies so quickly! Much appreciated.
[13:48:18] <robertmaxrees> taplar+++
[13:48:22] <taplar> we're bored and eager to please
[13:48:27] <thecliguy> ha
[13:48:45] <robertmaxrees> >:)
[14:46:26] <thecliguy> taplar: If you're still there... Can I access the return value from line 4 and use it in line 5?
[14:46:30] <thecliguy> https://bpaste.net/show/49ee6e1e77bc
[14:47:06] <taplar> the function you give to the then() can accept the response as the first argument
[14:47:29] <taplar> $.get(...).then(function(data){});
[14:52:07] <thecliguy> Sorry for my slow replies... I'm just trying to think things through and not ask stupid questions.
[14:52:21] <taplar> nah, all good
[14:53:23] <thecliguy> You see, I don't really need the call to have access to the return value. I planned to use the return value in some code on line 5.
[14:53:28] <thecliguy> *caller
[14:54:19] <taplar> right, the logic in the then(), which isn't exposed to the caller.
[14:54:20] <thecliguy> Basicaly - I want the caller to call PerformLookup, wait for it to do its thing and then move on to the next line of code.
[14:54:39] <taplar> but as we said, thats synchronous thinking
[14:54:48] <taplar> you can't think like that when it comes to ajax
[14:54:57] <taplar> it's a completely different paradigm
[14:55:32] <taplar> you have to think in terms of, i'm going to make a request.  that request is going to finish *sometime* in the future, and i'm not going to wait on it.
[14:55:43] <taplar> but, when it does return, i want it to do *this*
[14:56:01] <taplar> you do not want to block your users from using your system while you make a web request.
[14:56:49] <thecliguy> The thing is, this is all fired by a button click, so waiting for a result is the thing that the user will be doing.
[14:57:09] <thecliguy> They won't be or want to be performing any other actions.
[14:57:32] <taplar> they won't be?  or you don't imagine they will
[14:57:39] <thecliguy> true
[14:59:10] <taplar> the point with this is that making ajax synchronous, not only making it shoe horn into a paradigm it's not really meant for, has performance issues.  javascript in the browser is single threaded.  so if you do anything to pause that thread waiting on something, you hurt *everything*
[15:05:12] <thecliguy> I've added your wisdom "you have to think in terms of, i'm going to make a request...." as a comment in my code to keep me in the right mindset.
[15:05:25] <thecliguy> :D
[15:05:47] <taplar> good deal.  it can take a bit to get used to, definitely.
[16:31:40] <Rtecom47> hey guys. i just wrote my first jquery script and ... it not working. someone got 1-3 minutes for me to help me? As you know, first time is always the hardest ...
[16:32:46] <robertmaxrees> yeah
[16:32:58] <robertmaxrees> just pop your code into a jsfiddle and we can take a look :)
[16:33:36] <robertmaxrees> erm
[16:33:42] <robertmaxrees> in the channel please - not via PM Rtecom47 :)
[16:35:14] <robertmaxrees> also: try sharing just the relevant snippet - not the full page.
[16:39:41] * pavonia hands Rtecom47 a badge for making three classical newbie mistakes
[16:39:51] <Rtecom47> ;)
[16:39:52] <robertmaxrees> :)
[16:39:59] <Rtecom47> sry
[16:40:04] <taplar> o.O
[16:40:14] <robertmaxrees> so yeah, whenever you have a minute just share out the relevant code and i'd be mor ethna happy to take a look.
[16:41:52] <Rtecom47> https://jsfiddle.net/kjmdawh3/4/
[16:42:30] <Rtecom47> this code should switch the background from daytime to nighttime mode
[16:43:13] <taplar> where is your htmlhead element?
[16:45:12] <Rtecom47> mmh what do you mean? Up to know, I thought to give the id="#htmlhead" in the <html> should work. at least, the regular beackround is loaded
[16:46:40] <taplar> you don't want to change the html element
[16:46:48] <taplar> you want to change an element that is a child of the body
[16:47:10] <taplar> ahhhh, i didn't even look for that id on the html tag
[16:47:28] <taplar> but yeah, you want to target either the body or an element in the body
[16:47:49] <taplar> since you're trying to change the background image of the page, the body would work for that
[16:48:10] <taplar> $(document.body).css(.....)
[16:50:07] <Rtecom47> ok, i check
[16:58:53] <robertmaxrees> but also: why not do this server-side?
[16:58:56] <robertmaxrees> :)
[17:05:06] <Rtecom47> ok, i am still struggelin :/
[17:05:49] <Rtecom47> i try another solution, hopefully i wont come back to you
[17:05:50] <Rtecom47> :)
[17:05:55] <Rtecom47> thanks for your help
[17:05:58] <Rtecom47> :))))
[17:06:04] <Rtecom47> have a nice evening
[17:07:06] <taplar> can you tell us what you are struggling with?
[17:07:35] <robertmaxrees> they're already gone.
[17:07:41] <robertmaxrees> :|
[17:07:43] <taplar> :/
[18:41:38] <taplar> so sleepy
[18:42:34] <robertmaxrees> same
[18:42:41] <robertmaxrees> today is just dragging'
[18:54:23] <taplar> i spent all day yesterday mowing and cleaning house.  today is going to be a lazy day
