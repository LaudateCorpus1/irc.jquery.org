[15:00:15] <W0LF> I have a window.addEventListener that fires multiple times (tested with an alert), but I'm not sure how to fix it or if it's affecting performance... which it has to be if it's firing a hundred times, right?
[15:01:19] <W0LF> anyone free to take a look? https://pastebin.com/bdxMB9Sx
[15:02:03] <W0LF> I'm sure it has to be some simple "fire once" per window click piece of code I'm missing, I'm just still learning jquery
[15:05:19] <W0LF> any jquery gurus able to take a look at this pastebin for me? https://pastebin.com/bdxMB9Sx
[15:05:37] <W0LF> the addEventListener is firing the alert multiple times on one click
[15:11:25] <pavonia> W0LF: What is .addListener? It seems you're adding the listerner twice
[15:13:03] <W0LF> pavonia: My understanding it's what allows the jquery to detect when a click is made on the window and then check the initial if condition
[15:13:47] <pavonia> Where is that from?
[15:14:36] <pavonia> Oh nevermind
[15:15:03] <W0LF> pavonia: if it helps, you can see the active behavior on the site here - www.kobejet.com
[15:15:40] <W0LF> it doesn't seem to be breaking the code from working, but when I added an alert, it clearly showed any clicks resulted in many, many alerts fired off
[15:17:00] <pavonia> It seem you're adding the listener when you call myFunction first and then later again when the handler is called from that media thing
[15:18:22] <W0LF> so i should be able to remove it from the window. call? maybe somehow make that second line window.on('click'.function() or something?
[15:19:22] <W0LF> pavonia that code was in the original ultimenu module I used, so I'm not sure why it would be there
[15:20:11] <pavonia> I don't know when or why that media handler fires, but adding a handler inside the handler itself seems wrong to me
[15:21:05] <pavonia> So first try removing "x.addListener(myFunction)" and see if the handler still fires multiple times
[15:21:59] <W0LF> pavonia: same here, but I'm just learning all this stuff so not sure how to begin testing a fix/change. Do you think replacing the line window.addEventListener('click', function(e){  is the right place to start?
[15:22:34] <pavonia> No
[15:22:49] <W0LF> pavonia: well, my guess is that part is so if the window size is detected to change it will tell the jquery to work on >943px screens or not?
[15:23:39] <pavonia> I don't know
[15:33:22] <W0LF> pavonia: thanks for your help - i've written the original module creator and am hoping they have some insight as to how to fix the code
[15:36:18] <pavonia> You should first make clear what you actually want to do on the different event types, then add the right handler to the corresponding event
[16:37:33] <solsTiCe> hi. I want to test the error callback of my ajax call. IS there a way to force an ajax call to trigger an error response ?
[16:43:02] <solsTiCe> using mackjax ?
[16:43:11] <solsTiCe> mockjax
[16:43:57] <pavonia> Use an invalid URL perhaps
[17:30:49] <solsTiCe> pavonia: mockjax was very good. powerfull tool. I may need that in the future. In this case, it was more using a big hammer to kill a fly
[20:19:04] <truffshuff> I've got a jQuery demo which reads a mouse's current position within a div and displays, in the center in a nested div, what percentage from the left side of the base container the cursor is. When the mousemove event fires on the div displaying the percentage, I get offsetX data for that div but would like to still target the base container div. https://codepen.io/jaredcaraway/pen/BVjppp
[20:19:29] <truffshuff> I've stopped propagation on the display text div, but I'm wondering if there's any way to ultimately target the container beneath so I still get the percentage even when the cursor is positioned over the display text div
[20:27:02] <truffshuff> Cancel that...think I figured it out.
