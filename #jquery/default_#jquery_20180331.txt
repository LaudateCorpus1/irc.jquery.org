[01:22:07] <techkid6> Is there a simple way to see when the text of an input is changed without having to deselect the input? `.change()` only seems to work after I've left the text field
[01:24:22] <techkid6> Oh, wrong channel my bad
[06:19:05] <xenaxon> hello all ! Need your help!
[06:19:11] <xenaxon> I'm getting this error: a.indexOf is not a function
[06:19:12] <xenaxon> I can'
[06:19:27] <xenaxon> can't figure out where this is coming from!
[06:20:39] <cannap> sure what is a
[06:21:46] <cannap> a must be a string or array when a is undefined there is no indexOf function to call
[06:26:41] <xenaxon> cannap
[06:26:51] <xenaxon> it is actually coming from something else
[06:26:53] <xenaxon> I fixed that error
[06:27:11] <xenaxon> but I am trying to use a guy's code from github
[06:27:21] <xenaxon> and I don't understand where one of the variables come from
[06:27:31] <xenaxon> https://github.com/taqimustafa/fabricjs-polygon/blob/master/js/polygon.js
[06:27:49] <xenaxon> prototypefabric here, where is this defined?
[06:27:52] <xenaxon> I can't understand
[06:28:04] <xenaxon> it's working fine in his example
[06:28:17] <xenaxon> but when I try to just copy it's code, it says that variable is undefined
[06:28:58] <cannap> yea check the date
[06:29:02] <cannap> its 2 years old
[06:31:34] <xenaxon> nah
[06:31:36] <xenaxon> it has nothing to do
[06:31:38] <xenaxon> with this
[06:32:17] <xenaxon> it's defined just a few lines above
[06:32:22] <xenaxon> but on load, it says it's undefined
[06:32:29] <xenaxon> why would this be happening?
[07:56:54] <pj> Hi, I'd just like to confirm something that seems to be the case in my experimentation but doesn't appear to be documented as such.  if I have <div class="foo"><div class="bar"></div></div> and I do this: $("div.foo").find("div.foo div.bar") it does not return the inside element, but it works with either of the following: $("div.foo").find("div.bar") or $("div.foo").find("*").filter("div.foo div.bar").  It would seem that the selector criteria for find has to be
[07:56:54] <pj> relative to the element it's searching from somehow?
[08:06:52] <Woet> pj: https://api.jquery.com/find/
[08:07:12] <pj> Woet: that's the docs I was looking at.
[08:08:08] <pj> I don't see anything in there that says that the selector passed to find() cannot include leading elements in it.
[08:10:21] <Woet> pj: " the .find() method allows us to search through the descendants of these elements in the DOM tree"
[08:10:26] <Woet> pj: "Even though item II matches the selector expression, it is not included in the results; only descendants are considered candidates for the match."
[08:11:16] <Woet> hope that helps
[08:11:46] <pj> not very clear, it seems to apply to the actual matched elements, but not to how those elements are matched in relation to the selector that is passed.  Anyways, it doesn't matter, I just wanted to confirm that my findings were indeed accurate in regard to how jQuery works.
[08:12:51] <pj> one more question: if I do this: $("div.foo").find("*").filter("div.foo div.bar"), how much of a performance hit will I be looking at in comparison to doing: $("div.foo").find("div.bar")?
[08:14:54] <Woet> pj: I think we're having a xy problem here. what is the actual problem you're trying to solve?
[08:15:33] <pj> Well this will take a bit to explain...
[08:16:51] <Woet> i'm scared
[08:17:01] <pj> yeah, you probably should be ;-)
[08:19:37] <pj> I am passed a number "messages" that are to be attached to individual products on a product listing display.  The product ID is contained as a class in the div container element for each product in the display.  for the sake of flexibility of the system I need to allow another developer to define the selector(s) where this data will be displayed inside the product container and then I am filtering it to just show each message in the particular container to for the
[08:19:37] <pj> product it is associated with...
[08:20:38] <pj> my current solution is something along the lines of $("div."+pid).find(selector) where selector contains the defined selector where the message is to be displayed.
[08:21:53] <pj> but I fear that the other dev may try to do something like this in his selector: "div.products span.message" where div.products will match the same div container as "div."+pid
[08:23:15] <pj> so I need to either tell him that he can't do that, or account for it.  I can account for it with $("div."+pid).find("*").filter(selector), but I am wondering how much of a performance hit that will get me as opposed to just telling him he can't do that and his selector has to be relative to the product div.
[08:23:43] <pj> manage to follow that?
[08:26:55] <Woet> i'm trying
[08:27:29] <pj> well, it's not exactly easy to explain, heh
[08:29:42] <pj> also, does find() accept a jQuery object for the selector?  If not then I may have to stick with find("*").filter(selector) as I may very well need to allow for it to be a jQuery object.
[08:37:28] <pj> anyways, I'm off, thanks for your help Woet .
[11:52:14] <sangeet> suggest some program which does not use DB but still interesting enough to do while learning php or any other web development language
[12:12:45] <Woet> sangeet: what is your jquery question?
[12:13:13] <sangeet> you are here too Woet :D :D :D
[15:07:30] <xenaxon> how to use replaceWith but set different id?
[15:08:54] <Woet> xenaxon: huh?
[15:09:13] <xenaxon> I used replacewith from one canvas element to another
[15:09:17] <xenaxon> and it just makes an exact clone
[15:09:20] <xenaxon> of the first canvas
[15:09:22] <xenaxon> I dont want that
[15:09:24] <xenaxon> Woet
[15:09:28] <xenaxon> I want a different canvas, different id
[15:09:45] <xenaxon> if I want to change the id of the second one after the replace... I can't cause it changes for both of them
[15:10:01] <Woet> xenaxon: show your test case.
[15:16:48] <xenaxon> https://jsfiddle.net/3yh425uj/6/
[15:16:52] <xenaxon> Woet: https://jsfiddle.net/3yh425uj/6/
[15:17:05] <xenaxon> I set the id of the second canvas to cloneCanvas
[15:17:18] <xenaxon> and after replaceWith it is just changed to the same as the first
[15:17:22] <xenaxon> everything is the same
[15:17:24] <xenaxon> the id,
[15:17:29] <xenaxon> everything
[15:18:01] <Woet> xenaxon: I'm not sure why all the drawing is a part of your test case.
[15:18:34] <xenaxon> ????
[15:18:39] <xenaxon> doesnt mater
[15:18:42] <xenaxon> the id is the problem
[15:18:46] <Woet> xenaxon: a test case is a minimum amount of code to demonstrate your issue.
[15:19:20] <Woet> xenaxon: yes, #cloneCanvas gets /replaced/ with cloneCanvas, which is #sheetCanvas, since you ran .clone on that
[15:19:26] <Woet> xenaxon: hence the method is called replaceWith.
[15:20:15] <Woet> xenaxon: change the ID on cloneCanvas first, then use it with replaceWith.
[15:20:31] <xenaxon> ok
