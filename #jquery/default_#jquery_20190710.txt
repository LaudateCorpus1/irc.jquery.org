[06:01:57] <plzHelpM3> This is more of a general js query, but i feel someone in here should be able to enlighten me. Question: Why would a dev choose to store meta-data inside a hidden form oppose to using the 'data' attribute? This seems so illogical to me, but this particular dev has more experience than i do so i'm trying not to jump to assumptions.
[06:03:02] <Cork> plzHelpM3: the form field would be included serverside from a form post
[06:03:24] <plzHelpM3> addtionally - this form isn't being used by any serverside functions
[06:03:51] <Cork> well it would still be included in the form post data
[06:03:54] <plzHelpM3> @Cork as that was my first thought
[06:29:35] <plzHelpM3> @Cork the responding php file seems to be only receiving post data passed via ajax/xhr. If the params of this request exclude the form data - and no actions are declared on the form - surely this means the form post data is never passed to the php file?
[07:10:44] <Cork> plzHelpM3: my point was that you have things like serializeArray and serialize that could pick up the hidden field
[07:11:04] <Cork> if they don't use that, then ya not sure what the point would be (might be legacy and that it existed before data-)
[07:11:32] <Cork> back then it was actually quite common to use hidden field for data as xhtml didn't provide any other way to do that (except for meta tags)
[07:15:58] <plzHelpM3> @Cork I get what you're saying. Maybe you're right - it could just be legacy logic
[07:17:55] <plzHelpM3> @Cork Anyway, thanks for sparing your time. Really appreciated
[07:18:05] <Cork> np
[17:43:27] <inthl> I have a script that I want to include in an existing CMS (template) for WP, which uses some pretty much old jQuery 1.2 or something. I'm looking for an universal solution to upgrade this to e.g. 3.4 onload, without touching the existing template. is there a way to "unset" the current loaded jquery version and init a new one on the fly? Basically I want to remove the current jquery instance from DOM and load my 3.4.x
[17:43:56] <robertmaxrees> inthl back way up.
[17:44:04] <robertmaxrees> did you need all the existing code to still function?
[17:44:28] <inthl> not really
[17:44:35] <robertmaxrees> "not really" isn't "no" :P
[17:44:45] <robertmaxrees> any reason you don't just update the core dependency in that case?
[17:45:50] <inthl> well it is a no, there is noting much there that would be of interest, I would run a few tests to see whether any errors are raised. updating that core is another thing, I was surprised how many templates and other software around WP use that old jquery versions, really
[17:46:09] <robertmaxrees> there's generally a good reason for that.
[17:46:25] <robertmaxrees> i would either update the core version of jquery, or run the two versions side-by-side.
[17:46:50] <robertmaxrees> trying to stomp over another instance on the page will caise a bunch of bugs that you won't really be able to solve.
[17:47:06] <robertmaxrees> *cause
[17:47:06] <inthl> well it's either that, or another template :>
[17:47:13] <robertmaxrees> :shrug:
[17:47:19] <robertmaxrees> stomping over will break things.
[17:47:51] <robertmaxrees> you can use noConflict mode.
[17:48:03] <robertmaxrees> https://api.jquery.com/jQuery.noConflict/
[17:48:03] <inthl> so I'd give it a try by unsetting 1.x and using 3.x, I am not willing to cause too much work due to legacy stuff anyway, since this is notging important too - it's just that my 3.4 script *is* imporant, everything else is pretty much not
[17:48:12] <robertmaxrees> there's no "unsetting"
[17:48:33] <inthl> no way to remove a jquery instance from DOM to load another..?
[17:48:47] <robertmaxrees> heh
[17:48:54] <robertmaxrees> you're asking the wrong question :)
[17:49:35] <robertmaxrees> you can redefine $ and jQuery on a page, but there's going to be other code on the page that's going to be looking at that object that will break.
[17:49:48] <robertmaxrees> and when it breaks, the entire page will stop working.
[17:50:51] <inthl> I assume that much, however, I just hard-removed 1.x from the source and loaded 3.x, no errors or unexpected things happened. again, should that be an issue I'd rather switch templates than causing more work there by maintaining new+legacy
[17:51:08] <robertmaxrees> :shrug: your call then.
[23:00:33] <jexmex> Hoping somebody is around to give me an idea how to do this. I have a html page that you can push a button that sends a request to the server via ajax. The server sends back a json object with the raw output of a generated pdf. I want to send that pdf to be printed. Anybody have any ideas?
[23:00:50] <robertmaxrees> erm.
[23:01:30] <robertmaxrees> your statement of "[...] a json object with the raw output of a generated pdf." is where I'm seeing issues.
[23:02:28] <robertmaxrees> why not just respond with the PDF proper?
[23:03:02] <jexmex> I guess I am not sure how to handle getting a pdf (proper) response via ajax
[23:03:31] <jexmex> I thought I would have to handle it client side, which is why I setup the raw output, but I can change that no issue, whatever is the easiest way
[23:03:53] <robertmaxrees> the server response can be whatever you want it to be :)  sounds like really what you want is to generate the PDF, store it temporarily on your server, then redirect the user to it.
[23:04:04] <robertmaxrees> then they can do whatever they want.
[23:04:06] <robertmaxrees> including print it.
[23:04:40] <jexmex> well I do not even want to store it on the server, it is a on demand thing so there is no reason to store a physical file
[23:05:08] <robertmaxrees> you can store it and then delete it once it's been accessed.
[23:06:03] <jexmex> hmm, so maybe my best bet would be to open a new tab and direct it straight to the url to output the pdf via php instead of trying to do it over ajax?
[23:06:11] <robertmaxrees> otherwise you need to properly form your response from your server to actually serve the PDF.
[23:06:18] <robertmaxrees> yep exactly.
[23:06:28] <robertmaxrees> doesn't even have to be a new tab.
[23:06:40] <jexmex> alright I will do it that way, should not be a issue
[23:07:10] <jexmex> well ya, but I don't want to screw up the user where they have to click the back button or something
[23:08:15] <jexmex> This is a pretty limited use case though and only like 1 person will see this aspect so whatever flow I choose, as long as it is not inconveniet will be fine.
[23:08:30] <jexmex> The specs on this part are limited so I have some leeway
[23:09:05] <jexmex> Thanks robertmaxrees
[23:09:06] <robertmaxrees> good :)
[23:09:22] <robertmaxrees> glad i could point you in the right direction!
[23:09:45] <jexmex> Me too, sometimes I like to overcomplicate things when there is no need to
[23:09:56] <robertmaxrees> we all do that.
