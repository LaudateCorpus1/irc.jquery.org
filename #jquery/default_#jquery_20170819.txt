[00:21:24] <S1GM4> I'm having a strange type of error and do not even know how to reproduce it
[00:21:39] <S1GM4> I have buttons on my website and they work fine normally, they trigger an ajax load event for the content area
[00:22:13] <S1GM4> After clicking around for a while, they seem to "break", where one page just keeps loading (I click Articles, and then it becomes "stuck", no other page seems to do this and Articles does not always do this)
[00:22:33] <S1GM4> when I click another page, like Home, it flashes for a split second, and then loads the Articles page again
[00:22:53] <S1GM4> (seems to mutate all the buttons to have a similar problem once it starts, but also sometimes will fix itself)
[00:23:53] <S1GM4> because this is an SPA type of website, I've tried to add a fail-safe that reloads the button functions when the user mouseenter the div that contains them (incase they've become broken), this problem seemed to crop up even before I did this and was one of the many things with the buttons being broken that made me try to think of a "fix"
[00:23:55] <S1GM4> any ideas?
[00:25:14] <S1GM4> https://pastebin.com/LBzNMxXk   <--- these are the "button functions" that I am having a problem with
[00:25:29] <S1GM4> I've tried to disable the user from reclicking certain buttons too fast (as they caused problems before)
[00:26:14] <S1GM4> those buttons are contained inside the #menuArea div, and another part has this line: $( "#menuArea" ).mouseenter(function() { buttonFailSafe(); });
[00:26:32] <S1GM4> buttonFailSafe(); just reloads those button functions, incase they've been lost somehow for whatever reason (which was happening a lot0
[00:32:19] <lemonsparrow> how to rewrite this in single line to get all checked checkboxes in an array
[00:32:20] <lemonsparrow> $('input.hold[type=checkbox]').each(function () {    var sThisVal = (this.checked ? $(this).val() : "");  });
[02:13:18] <lemonsparrow> can someone tell me why does this function make change to actual object even though Im passing it a variable and modifying only the variable ? https://gist.github.com/mithunsasidharan/fda524c7774ffa54caf089626fab4ea9
[02:14:59] <pavonia> "o._nodes = this._nodes;" doesn't create a copy of the object, it passes a reference
[02:18:44] <lemonsparrow> pavonia how to get a copy instead of reference
[02:20:28] <pavonia> You could JSON.stringify the array and then JSON.parse it back
[02:20:47] <pavonia> That's probably not the most efficient way but pretty simple
[02:21:41] <lemonsparrow> pavonia: ok
[02:23:40] <lemonsparrow> worked.. thanks pavonia
[02:35:30] <lemonsparrow> I have an element and that is both clickable and draggable.. I need to avoid the clickable event from firing when dragged
[04:41:43] <anki> Hello All,
[04:41:44] <anki> Anyone please help me remove parent class
[04:41:44] <anki> I am trying to add parent class using below syntax on hover
[04:41:44] <anki> Same way want to remove once hover done.
[04:41:44] <anki> $(this).parent().append($('<div class="sim-row-delete"><i class="fa fa-times" ></i></div>'));
[04:41:44] <anki> $(this).parent().remove(".sim-row-delete");
[04:41:44] <anki> Here append is work properly.But remove is not working.
[04:41:45] <anki> How can i achieve that.Any idea ?
[04:45:35] <pavonia> Are you sure both refer to the same object?
[04:45:52] <pavonia> Maybe prepare an example fiddle
[04:47:19] <anki> Yeah i am 100% sure about it.
[04:50:00] <pavonia> Reading the API, the selector may only apply to the element itself, not child elements
[04:52:13] <pavonia> anki: So try $(this).parent().find(".sim-row-delete").remove()
[04:52:57] <anki> Thanks for reply.Trying now
[05:09:04] <anki> @pavonia:Thanks its working for me.
[07:58:10] <Feelsonic> Hi, this is possible to dev this tool with jquery ? http://www.atout-box.fr/devis-gratuit-en-ligne
[09:55:09] <neo_> hi guys
[09:56:11] <neo_> who know how right use anyone or someone in this sentences sleeping sleeping sleeping Olay, with just anyone or with just someone ????
[09:56:59] <neo_> in positive sentences need use someone ? It means right 'with just someone' ???
[09:58:14] <neo_> and if 'don't sleeping Olya, with just anyone' this is right because negative ??? yes ? Only one question answer somebody
[12:24:55] <jak2000> hi all, how to display a window(float window) and minimize it? (the user can see when maximize, hwo to do that?
[14:56:29] <udn> hi all
[14:56:46] <udn> i need select first three element and wrap them into a div
[14:56:46] <udn> $(".path-node.page-node-type-gallery-item .region.region-content > *:nth-child(-n+3))
[14:56:57] <udn> i have this code but do not work
[15:03:30] <vxa> hey
[15:44:14] <snfgf> hello folks
[15:45:47] <snfgf> I have an array of objects, and I need to create a HTML element for each of them, and append it to a div. Is the best way, simply to, array.forEach((item)=>{ ... div.append(new_element);});
[15:45:54] <snfgf> something like that?
[15:46:11] <snfgf> or is that inefficient for some reason I haven't recognised
[16:02:23] <hellyeah> yo
[16:33:29] <pavonia> snfgf: What do you consider "best"? That looks like a reasonable way to do it to me
[16:35:13] <hellyeah> Skip to content
[16:35:13] <hellyeah> This repository
[16:35:13] <hellyeah> Search
[16:35:13] <hellyeah> Pull requests
[16:35:13] <hellyeah> Issues
[16:35:24] <hellyeah> Marketplace
[16:35:26] <hellyeah> Gist
[16:35:28] <hellyeah>  @spinningcat
[16:35:30] <hellyeah>  Sign out
[16:35:33] <hellyeah>  Watch 0
[16:35:34] <hellyeah>   Star 0
[16:35:37] <hellyeah>   Fork 0 spinningcat/Person-On-Duty
[16:35:39] <hellyeah>  Code  Issues 0  Pull requests 0  Projects 0  Wiki  Settings Insights
[16:35:41] <hellyeah> Branch: master Find file Copy pathPerson-On-Duty/js/PersonOnDuty.js
[16:35:42] <hellyeah> 8efa33c  on 11 Nov 2016
[16:35:45] <hellyeah>  spinningCat some changes in dropdowns
[16:35:47] <hellyeah> 0 contributors
[16:35:49] <hellyeah> RawBlameHistory
[16:35:53] <hellyeah> 664 lines (535 sloc)  18.2 KB
[16:35:55] <hellyeah> $(function() {
[16:35:57] <hellyeah>   "use strict";
[16:35:59] <hellyeah>   ConstructFirstDropDown();
[16:36:01] <hellyeah>   AppearingSecondDropDown();
[16:36:03] <hellyeah>   eventDelegationJobs();
[16:36:04] <pavonia> udn: You probably want to .detach() them first and then .appendTo() the new div
[16:36:05] <hellyeah>   fullInputBoxes();
[16:36:07] <hellyeah>  // removeLastInstance();
[16:36:09] <hellyeah>   deletingTheSpesificIndex();
[16:36:10] <hellyeah>   fillingArrayWithFields();
[16:36:12] <hellyeah> /  triggerCreatingNewElementEventAfterRemoveOperation();
[16:36:14] <hellyeah>   demonstratingJQXCalendar();
[16:36:16] <hellyeah> });
[16:36:19] <hellyeah> function eventDelegationJobs() {
[16:36:22] <hellyeah>   var $body = $('body');
[16:36:25] <hellyeah>   $body.on('click', '#new', createANewDatepickerSection);
[16:36:27] <hellyeah>   $body.on('click', '#new', getDatesFromCurrentDatePickers);
[16:36:29] <hellyeah>   $body.on('click', '#new', setButtonsState);
[16:36:31] <hellyeah>   $body.on('click', '#remove', removeLastInstance);
[16:36:33] <hellyeah>  // $body.on('click', '.updateButton', removeSpesificInstance);
[16:36:35] <hellyeah>   $body.on('click', '.updateButton',fillingArrayWithFields);
[16:36:37] <hellyeah>   $body.on('click', '.updateButton',deletingSpecialDates);
[16:36:39] <hellyeah> /$body.on('click', '.updateButton', deletingTheSpesificIndex());
[16:36:41] <hellyeah> }
[16:36:43] <hellyeah> function demonstratingJQXCalendar() {
[16:36:45] <hellyeah> $("#jqxCalendar").jqxCalendar({
[16:36:47] <hellyeah>     width: '200px',
[16:36:49] <hellyeah>     height: '200px',
[16:36:53] <hellyeah>     columnHeaderHeight: 30,
[16:36:54] <hellyeah>     dayNameFormat: 'shortest',
[16:36:57] <hellyeah>     enableFastNavigation: true,
[16:36:59] <hellyeah>     enableWeekend: true,
[16:37:00] <hellyeah>     selectionMode: 'range',
[16:37:02] <hellyeah>     backText: "Bir Ã¶nceki ay",
[16:37:04] <hellyeah>     forwardText: "Bir sonraki ay",
[16:37:06] <hellyeah>     enableTooltips: true,
[16:37:08] <hellyeah>     readOnly: true,
[16:37:10] <hellyeah>     enableHover: true,
[16:37:12] <hellyeah>   Date: new Date(2016, 3, 5),
[16:37:15] <hellyeah>   Class: '',
[16:37:17] <hellyeah>   Tooltip: 'Date 1'
[16:37:19] <hellyeah> }, {
[16:37:23] <hellyeah>   Date: new Date(2016, 4, 27),
[16:37:25] <hellyeah>   Class: '',
[16:37:27] <hellyeah>   Tooltip: 'Date 2'
[16:37:29] <hellyeah> }]*/
[16:37:31] <hellyeah>   });
[16:37:33] <hellyeah> }
[16:37:35] <hellyeah> var val, opt;
[16:37:37] <hellyeah> function ConstructFirstDropDown() {
[16:37:38] <pavonia> hellyeah: What the heck? D:
[16:37:39] <hellyeah>   var dropdownObject = {
[16:37:41] <hellyeah>     "Capability Center 1": "System Monitoring",
[16:37:43] <hellyeah>     "Capability Center 2": "System Management",
[16:37:44] <hellyeah>     "Capability Center 3": "Network Software"
[16:37:46] <hellyeah>   };
[16:37:48] <hellyeah>   var $firstDropdown = $('.firstdropdown');
[16:37:52] <hellyeah>   $firstDropdown.append($.map(dropdownObject, function(value, key) {
[16:37:54] <hellyeah>     return $('<option>').text(value).val(key);
[16:37:57] <hellyeah>   }));
[16:37:59] <hellyeah> }
[16:38:01] <hellyeah> function AppearingSecondDropDown() {
[16:38:02] <hellyeah>   var $firstDropdown = $('.firstdropdown');
[16:38:05] <hellyeah>   var $secondDropdown = $('.seconddropdown');
[16:38:07] <hellyeah>   var $radio = $('.radio');
[16:38:09] <hellyeah>   var capacityCenter1 = {
[16:38:11] <hellyeah>     "Person 1": "Anthony Tomtom",
[16:38:13] <hellyeah>     "Person 2": "Bres Diart",
[16:38:15] <hellyeah>     "Person 3": "James Jerald"
[16:38:17] <hellyeah>   };
[16:38:19] <hellyeah>   var capacityCenter2 = {
[16:38:23] <hellyeah>     "Person 1": "Tom Dorald",
[16:38:25] <hellyeah>     "Person 2": "Erich Richter",
[16:38:26] <hellyeah>     "Person 3": "Simona Solomon"
[16:38:28] <hellyeah>   };
[16:38:30] <hellyeah>   var capacityCenter3 = {
[16:38:33] <hellyeah>     "Person 1": "Daralok Dorolod",
[16:38:34] <hellyeah>     "Person 2": "Darold Dorald",
[16:38:36] <hellyeah>     "Person 3": "Jim Kenedixal"
[16:38:39] <hellyeah>   };
[16:38:41] <hellyeah>   $firstDropdown.on('change', function() {
[16:38:42] <hellyeah>     //  $('.firstdropdown').prop('disabled', true);
[16:38:44] <hellyeah>     $radio.prop('disabled', false);
[16:38:47] <hellyeah>     if ($(this).find(":selected").text() === "Ä°zleme Sistemleri YÃ¶netimi Alt Gr.") {
[16:38:48] <hellyeah>       $secondDropdown.empty();
[16:38:53] <hellyeah>       $secondDropdown.prop('disabled', false);
[16:38:55] <hellyeah>       $secondDropdown.append($.map(capacityCenter1, function(value, key) {
[16:38:57] <hellyeah>         return $('<option>').text(value).val(key);
[16:38:59] <hellyeah>       }));
[16:39:01] <hellyeah>     } else if ($(this).find(":selected").text() === "Sistem YÃ¶netimi ve Veri Saklama Alt Gr.") {
[16:39:03] <hellyeah>       $secondDropdown.empty();
[16:39:05] <hellyeah>       $secondDropdown.prop('disabled', false);
[16:39:07] <hellyeah>       $secondDropdown.append($.map(capacityCenter2, function(value, key) {
[16:39:09] <hellyeah>         return $('<option>').text(value).val(key);
[16:39:11] <hellyeah>       }));
[16:39:13] <hellyeah>     } else if ($(this).find(":selected").text() === "Network YazÄ±lÄ±m Alt Gr.") {
[16:39:15] <hellyeah>       $secondDropdown.empty();
[16:39:17] <hellyeah>       $secondDropdown.prop('disabled', false);
[16:39:19] <hellyeah>       $secondDropdown.append($.map(capacityCenter3, function(value, key) {
[16:39:23] <hellyeah>         return $('<option>').text(value).val(key);
[16:39:25] <hellyeah>       }));
[16:39:27] <hellyeah>     } else {
[16:39:28] <hellyeah>       $secondDropdown.prop('disabled', true);
[16:39:30] <hellyeah>       // $('.seconddropdown').val("");
[16:39:32] <hellyeah>       $secondDropdown.empty();
[16:39:34] <hellyeah>     }
[16:39:36] <hellyeah>   });
[16:39:38] <hellyeah> }
[16:39:40] <hellyeah> var i = 0;
[16:39:43] <hellyeah> function createANewDatepickerSection() {
[16:39:45] <hellyeah>   var $datePart = $('.datePart'),
[16:39:46] <hellyeah>     $datepickerPart = $('#datepickerPart'),
[16:39:49] <hellyeah>     $body = $('body');
[16:39:53] <hellyeah>   clone = $datepickerPart.clone(true, true);
[16:39:55] <hellyeah>   clone
[16:39:57] <hellyeah>     .removeAttr('id')
[16:39:59] <hellyeah>     .removeClass('hidden')
[16:40:01] <hellyeah>     .appendTo($datePart);
[16:40:03] <hellyeah>   $body.append($datePart);
[16:40:05] <hellyeah>   $datePart.find('.datePicker').last().attr('id', 'datepicker' + i);
[16:40:07] <hellyeah>   /* getting values */
[16:40:09] <hellyeah>   datePickers();
[16:40:11] <hellyeah>   i++;
[16:40:13] <hellyeah> }
[16:40:15] <hellyeah> var specialNum = 1;
[16:40:17] <hellyeah> var numColors = 25;
[16:40:19] <hellyeah> function getDatesFromCurrentDatePickers() {
[16:40:22] <hellyeah>   var $input = $('body').find('.datePicker').last().find('.input');
[16:40:24] <hellyeah>   $input.on('change', function() {
[16:40:27] <hellyeah>     var $from = $(this).closest('.datePicker').find('.from').val();
[16:40:28] <hellyeah>     var $to = $(this).closest('.datePicker').find('.to').val();
[16:40:31] <hellyeah>     if ($from !== "" && $to !== "") {
[16:40:33] <hellyeah>       between = [];
[16:40:34] <hellyeah>       between.push($from);
[16:40:37] <hellyeah>       between.push($to);
[16:40:38] <hellyeah>       colorizingCalendar(between);
[16:40:41] <hellyeah>     }
[16:40:43] <hellyeah>   });
[16:40:44] <hellyeah> }
[16:40:46] <hellyeah> function splittedArray(datesArray) {
[16:40:49] <hellyeah>   var arrayWithDateValuesSeperately = datesArray.map(function(subArray) {
[16:40:53] <hellyeah>     return subArray.split('/');
[16:40:55] <hellyeah>   });
[16:40:57] <hellyeah>   return arrayWithDateValuesSeperately;
[16:40:59] <hellyeah> }
[16:41:01] <hellyeah> function colorizingCalendar(datesArray) {
[16:41:03] <hellyeah>   var parametrizedArray = splittedArray(datesArray);
[16:41:05] <hellyeah>   var startingDate = new Date();
[16:41:07] <hellyeah>   startingDate.setFullYear(Number(parametrizedArray[0][2]), (Number(parametrizedArray[0][1]) - 1), Number(parametrizedArray[0][0]));
[16:41:10] <hellyeah>   var endingDate = new Date();
[16:41:11] <hellyeah>   endingDate.setFullYear(Number(parametrizedArray[1][2]), (Number(parametrizedArray[1][1]) - 1), Number(parametrizedArray[1][0]));
[16:41:14] <hellyeah>   var date = new Date(startingDate);
[16:41:17] <hellyeah>   date.setHours(0);
[16:41:19] <hellyeah>   endingDate.setHours(23);
[16:41:23] <hellyeah>   var cal = $("#jqxCalendar");
[16:41:24] <hellyeah>   var obj = {
[16:41:26] <hellyeah>     "CapacityCenter": $('.firstdropdown').find('option:selected').text(),
[16:41:28] <hellyeah>     "DutyType": $(".radio:checked").closest('.type').find('.label').text(),
[16:41:31] <hellyeah>     "PersonInDuty": $('.seconddropdown').find('option:selected').text()
[16:41:33] <hellyeah>   };
[16:41:35] <hellyeah>   var jsonArray = [];
[16:41:37] <hellyeah>   jsonArray.push(obj);
[16:41:39] <hellyeah>   while (date < endingDate) {
[16:41:41] <hellyeah>     cal.jqxCalendar('addSpecialDate', date, 'special' + specialNum, jsonDataforTooltipofCalendar(jsonArray));
[16:41:44] <hellyeah>     date = new Date(date);
[16:41:46] <hellyeah>     date.setDate(date.getDate() + 1);
[16:41:48] <hellyeah>   }
[16:41:52] <hellyeah>   specialNum++;
[16:41:53] <hellyeah>   if (specialNum > numColors) specialNum = 1;
[16:41:55] <hellyeah> }
[16:41:57] <hellyeah> function removeSpesificInstance() {
[16:41:59] <hellyeah>   $(this).closest('.datePicker').remove();
[16:42:01] <hellyeah> }
[16:42:04] <hellyeah> function removeLastInstance() {
[16:42:05] <hellyeah>   var $datePickers = $('.datePart .datePicker');
[16:42:07] <hellyeah>   if ($datePickers.length > 1) {
[16:42:10] <hellyeah>     $datePickers.last().remove();
[16:42:12] <hellyeah>     $('#remove').prop('disabled', false);
[16:42:14] <hellyeah>     $datePickers.find('.from').last().prop('disabled', false);
[16:42:15] <hellyeah>     $datePickers.find('.to').last().prop('disabled', false);
[16:42:18] <hellyeah>   } else if ($datePickers.length === 1) {
[16:42:20] <hellyeah>     $('#remove').prop('disabled', true);
[16:42:24] <hellyeah>   }
[16:42:26] <hellyeah>   $(this).closest('body').find('.datePicker').last().find('.from').attr('disabled', false);
[16:42:28] <hellyeah>   $(this).closest('body').find('.datePicker').last().find('.from').val('');
[16:42:30] <hellyeah>   $(this).closest('body').find('.datePicker').last().find('.to').attr('disabled', false);
[16:42:32] <hellyeah>   $(this).closest('body').find('.datePicker').last().find('.to').val('');
[16:42:34] <hellyeah> }
[16:42:36] <hellyeah> function triggerCreatingNewElementEventAfterRemoveOperation() {
[16:42:38] <hellyeah>   $('.updateButton').on('click', function() {
[16:42:40] <hellyeah>     $("#new").trigger("click");
[16:42:42] <hellyeah>   });
[16:42:44] <hellyeah> }
[16:42:46] <hellyeah>   var sD = $("#jqxCalendar").jqxCalendar('specialDates');
[16:42:48] <hellyeah>   //console.log(sD);
[16:42:49] <hellyeah>   var dates = [];
[16:42:54] <hellyeah>   var specialDates = [];
[16:42:55] <hellyeah>   sD.forEach(function(element, index) {
[16:42:57] <hellyeah>     specialDates.push(element.Date);
[16:42:59] <hellyeah>   });
[16:43:02] <hellyeah>   for (var keys in valuesAll) {
[16:43:04] <hellyeah>     var tmp = new Date();
[16:43:06] <hellyeah>     tmp = valuesAll[keys].BaÅlangÄ±Ã§;
[16:43:08] <hellyeah>     while (tmp <= valuesAll[keys].BitiÅ) {
[16:43:10] <hellyeah>       dates.push(tmp);
[16:43:12] <hellyeah>       tmp = new Date(tmp);
[16:43:14] <hellyeah>       tmp.setDate(tmp.getDate() + 1);
[16:43:16] <hellyeah>     }
[16:43:18] <hellyeah>   }
[16:43:22] <hellyeah>   var distinctDates = dates.filter(function(obj) {
[16:43:24] <hellyeah>         return specialDates.indexOf(obj) === -1;
[16:43:26] <hellyeah>    });*/
[16:43:28] <hellyeah>   //console.log(Array.isArray( $("#jqxCalendar").jqxCalendar('specialDates')));
[16:43:30] <hellyeah>  // $('.updateButton').on('click', function(){
[16:43:32] <hellyeah> function deletingSpecialDates(){
[16:43:34] <hellyeah>  // $("#jqxCalendar").jqxCalendar({ specialDates: [] });
[16:43:36] <hellyeah> }
[16:43:38] <hellyeah> function fullInputBoxes() {
[16:43:40] <hellyeah>   var $input = $('.datePicker input');
[16:43:42] <hellyeah>   $input.on('change', function() {
[16:43:44] <hellyeah>     var $from = $(this).closest('.datePicker').find('.from').val();
[16:43:46] <hellyeah>     var $to = $(this).closest('.datePicker').find('.to').val();
[16:43:48] <hellyeah>     if ($from !== "" && $to !== "") {
[16:43:51] <hellyeah>       $('.updateButton').attr('disabled', false);
[16:43:53] <hellyeah>       $('#new').attr('disabled', false);
[16:43:55] <hellyeah>       $(this).closest('.datePicker').find('.from').attr({
[16:43:57] <hellyeah>         'disabled': 'disabled'
[16:43:59] <hellyeah>       });
[16:44:01] <hellyeah>       $(this).closest('.datePicker').find('.to').attr({
[16:44:03] <hellyeah>         'disabled': 'disabled'
[16:44:06] <hellyeah>       });
[16:44:07] <hellyeah>     }
[16:44:09] <hellyeah>   });
[16:44:12] <hellyeah> }
[16:44:13] <hellyeah> function setButtonsState() {
[16:44:15] <hellyeah>   var $pickerCount = $('.datePart .datePicker');
[16:44:17] <hellyeah>   var $new = $('#new');
[16:44:18] <\mSg> uhm, pastebin and link?
[16:44:20] <hellyeah>   var $remove = $('#remove');
[16:44:24] <hellyeah>   if ($pickerCount.length === 0) {
[16:44:25] <hellyeah>     $new.prop('disabled', false);
[16:44:28] <cannap> lol
[16:44:28] <hellyeah>   }
[16:44:30] <hellyeah>   if ($pickerCount.length === 0 || $pickerCount.length === 1) {
[16:44:32] <hellyeah>     $remove.prop('disabled', true);
[16:44:34] <hellyeah>   }
[16:44:36] <hellyeah>   if ($pickerCount.length > 1) {
[16:44:38] <hellyeah>     $remove.prop('disabled', false);
[16:44:40] <hellyeah>   }
[16:44:42] <hellyeah>   if ($(this).closest('body').find('.datePicker').last().find('.from').val() === "" && $(this).closest('body').find('.datePicker').last().find('.to').val() === "") {
[16:44:45] <hellyeah>     $(this).prop('disabled', true);
[16:44:47] <hellyeah>   }
[16:44:49] <hellyeah> }
[16:44:53] <hellyeah> function datePickers() {
[16:44:55] <hellyeah>   var $body = $('body');
[16:44:57] <hellyeah>   var fromDatepicker = $body.find('.datePicker').last().find('.from').datepicker({
[16:44:59] <hellyeah>     changeMonth: true,
[16:45:01] <hellyeah>     dateFormat: 'dd/mm/yy',
[16:45:03] <hellyeah>     minDate: 0,
[16:45:05] <hellyeah>     firstDay: 1,
[16:45:07] <hellyeah>     hideIfNoPrevNext: true,
[16:45:09] <hellyeah>     showAnim: 'slideDown',
[16:45:11] <hellyeah>   // showOn: "both",
[16:45:12] <\mSg> well, I'll see you in an hour after your ratelimiter finishes pasting...
[16:45:13] <hellyeah>     showOtherMonths: true,
[16:45:15] <hellyeah>     selectOtherMonths: true,
[16:45:17] <hellyeah>     showStatus: true,
[16:45:19] <hellyeah>     minDate: 0,
[16:45:23] <hellyeah>     monthNames: ['Ocak', 'Åubat', 'Mart', 'Nisan', 'MayÄ±s', 'Haziran',
[16:45:24] <hellyeah>       'Temmuz', 'AÄÂustos', 'EylÃ¼l', 'Ekim', 'KasÄ±m', 'AralÄ±k'
[16:45:26] <hellyeah>     ],
[16:45:28] <hellyeah>     monthNamesShort: ['Oca', 'ÃÂub', 'Mar', 'Nis', 'May', 'Haz',
[16:45:30] <hellyeah>       'Tem', 'AÃÂu', 'Eyl', 'Eki', 'Kas', 'Ara'
[16:45:31] <cannap> year
[16:45:32] <hellyeah>     ],
[16:45:35] <hellyeah>     dayNames: ['Pazar', 'Pazartesi', 'SalÄ±', 'ÃÂarÅÂamba', 'PerÅÂembe', 'Cuma', 'Cumartesi'],
[16:45:36] <hellyeah>     dayNamesShort: ['Pz', 'Pt', 'Sa', 'Ãa', 'Pe', 'Cu', 'Ct'],
[16:45:39] <hellyeah>     dayNamesMin: ['Pz', 'Pt', 'Sa', 'ÃÂr', 'Pr', 'Cu', 'Ct'],
[16:45:41] <hellyeah>     beforeShowDay: function(date) {
[16:45:43] <hellyeah>       var enabled = true;
[16:45:44] <hellyeah>       var prevRows = $(this).closest('.datePicker').prevAll('.datePicker');
[16:45:46] <hellyeah>       prevRows.each(function() {
[16:45:49] <hellyeah>         var from = $(this).find(".from").datepicker("getDate");
[16:45:51] <drej> stahp
[16:45:53] <hellyeah>         var to = $(this).find(".to").datepicker("getDate");
[16:45:55] <hellyeah>         //    console.log(date, from, to)
[16:45:57] <hellyeah>         if (date >= from && date <= to) {
[16:45:59] <hellyeah>           enabled = false;
[16:46:01] <hellyeah>           return false; // exit the .each() loop
[16:46:03] <hellyeah>         }
[16:46:03] <drej> `ops
[16:46:05] <hellyeah>       });
[16:46:07] <hellyeah>       return [enabled, "", ""];
[16:46:09] <hellyeah>     },
[16:46:11] <hellyeah>     beforeShow: function(input, inst) {
[16:46:13] <hellyeah>       if ($('.datePart .datePicker').length > 1) {
[16:46:15] <hellyeah>         var $date = $(this).closest('.datePicker').prev().find('.to').datepicker('getDate');
[16:46:17] <hellyeah>         var minDate = moment($date.setDate($date.getDate() + 1)).format('M');
[16:46:19] <drej> ~ops
[16:46:19] <hellyeah>         var difference = minDate - moment().format('M');
[16:46:21] <drej> sigh
[16:46:22] <cannap> i think this was a misstake or  something
[16:46:23] <hellyeah>         //$(this).datepicker( "option", "numberOfMonths", difference + 1);
[16:46:25] <hellyeah>         $(this).datepicker("option", "defaultDate", $date);
[16:46:27] <hellyeah>       }
[16:46:29] <hellyeah>     },
[16:46:29] <cannap> i mean he ask not the first time here
[16:46:31] <hellyeah>     onClose: function(selectedDate) {
[16:46:32] <drej> he could still /part at some point
[16:46:33] <hellyeah>       $body.find('.datePicker').last().find('.to').datepicker("option", "defaultDate", selectedDate);
[16:46:34] <hellyeah>     }
[16:46:36] <hellyeah>   });
[16:46:38] <\mSg> !ops
[16:46:38] <hellyeah>   var toDatePicker = $body.find('.datePicker').last().find('.to').datepicker({
[16:46:40] <hellyeah>     changeMonth: true,
[16:46:42] <cannap> maybe take a dump
[16:46:42] <hellyeah>     dateFormat: 'dd/mm/yy',
[16:46:44] <hellyeah>     minDate: 0,
[16:46:46] <hellyeah>     firstDay: 1,
[16:46:49] <hellyeah>     hideIfNoPrevNext: true,
[16:46:52] <hellyeah>     showAnim: 'slideDown',
[16:46:54] <hellyeah>    // showOn: "both",
[16:46:56] <hellyeah>     showOtherMonths: true,
[16:46:58] <hellyeah>     selectOtherMonths: true,
[16:47:00] <hellyeah>     showStatus: true,
[16:47:02] <hellyeah>     minDate: 0,
[16:47:05] <hellyeah>     monthNames: ['Ocak', 'Åubat', 'Mart', 'Nisan', 'MayÄ±s', 'Haziran',
[16:47:07] <hellyeah>       'Temmuz', 'AÄÂustos', 'EylÃ¼l', 'Ekim', 'KasÄ±m', 'AralÄ±k'
[16:47:09] <hellyeah>     ],
[16:47:11] <hellyeah>     monthNamesShort: ['Oca', 'AÄu', 'Mar', 'Nis', 'May', 'Haz',
[16:47:13] <hellyeah>       'Tem', 'AÄÂu', 'Eyl', 'Eki', 'Kas', 'Ara'
[16:47:15] <hellyeah>     ],
[16:47:17] <hellyeah>     dayNames: ['Pazar', 'Pazartesi', 'SalÄ±', 'ÃÂarÅÂamba', 'PerÅÂembe', 'Cuma', 'Cumartesi'],
[16:47:19] <hellyeah>     dayNamesShort: ['Pz', 'Pt', 'Sa', 'Ãa', 'Pe', 'Cu', 'Ct'],
[16:47:23] <hellyeah>     dayNamesMin: ['Pz', 'Pt', 'Sa', 'ÃÂr', 'Pr', 'Cu', 'Ct'],
[16:47:25] <hellyeah>     beforeShowDay: function(date) {
[16:47:26] <hellyeah>       var enabled = true;
[16:47:28] <hellyeah>       var prevRows = $(this).closest('.datePicker').prevAll('.datePicker');
[16:47:30] <hellyeah>       var fromDate = fromDatepicker.datepicker('getDate');
[16:47:31] <cannap> did he post that stuff twice?
[16:47:32] <hellyeah>       if (!fromDate || (date < fromDate)) {
[16:47:34] <hellyeah>         enabled = false;
[16:47:36] <hellyeah>         return false;
[16:47:38] <hellyeah>       }
[16:47:40] <hellyeah>       prevRows.each(function() {
[16:47:42] <hellyeah>         var from = $(this).find(".from").datepicker("getDate");
[16:47:44] <hellyeah>         var to = $(this).find(".to").datepicker("getDate");
[16:47:46] <hellyeah>         if (date >= from && date <= to) {
[16:47:48] <hellyeah>           enabled = false;
[16:47:53] <hellyeah>           return false; // exit the .each() loop
[16:47:54] <hellyeah>         }
[16:47:56] <hellyeah>       });
[16:47:58] <hellyeah>       return [enabled, "", ""];
[16:48:01] <hellyeah>     },
[16:48:03] <hellyeah>     onClose: function(selectedDate) {
[16:48:04] <hellyeah>       //$body.find('.datePicker').last().find('.to').datepicker("option", "maxDate", selectedDate + 1);
[16:48:07] <hellyeah>     }
[16:48:09] <hellyeah>   });
[16:48:11] <hellyeah> }
[16:48:13] <hellyeah> function disablePreviouslyFilledInDatepickers() {
[16:48:15] <hellyeah>   var $datePart = $('.datePart'),
[16:48:17] <hellyeah>     $datePicker = $datePart.find('.datePicker').last();
[16:48:19] <hellyeah>   //if ($datePicker.length === 1) {
[16:48:23] <hellyeah>   /*   if ($datePicker.find('.from').val() && $datePicker.find('.to').val()) {
[16:48:25] <hellyeah>        $datePicker.find('.from').attr({
[16:48:27] <hellyeah>          'disabled': 'disabled'
[16:48:29] <hellyeah>        });
[16:48:31] <hellyeah>        $datePicker.find('.to').attr({
[16:48:32] <hellyeah>          'disabled': 'disabled'
[16:48:34] <hellyeah>        });
[16:48:36] <hellyeah>      }*/
[16:48:38] <hellyeah>   //}
[16:48:40] <hellyeah> }
[16:48:42] <hellyeah> function jsonDataforTooltipofCalendar(json) {
[16:48:44] <hellyeah>   return "Beceri Merkezi: " + json[0].CapacityCenter + " Ä°sim: " + json[0].PersonInDuty + " NÃ¶bet TÃ¼rÃ¼: " + json[0].DutyType;
[16:48:47] <hellyeah> }
[16:48:50] <hellyeah> var valuesAll = [];
[16:48:54] <hellyeah>  var valuesFinal = [];
[16:48:56] <hellyeah> function fillingArrayWithFields() {
[16:48:58] <hellyeah>   var $input = $('.input');
[16:49:00] <hellyeah>   var valuesDropdown1 = [];
[16:49:02] <hellyeah>   var valuesDropdown2 = [];
[16:49:04] <hellyeah>   var valuesRadiobox = [];
[16:49:06] <hellyeah>   var valuesStart = [];
[16:49:07] <cannap> yo i readed that code you can do it in one line
[16:49:08] <hellyeah>   var valuesEnd = [];
[16:49:10] <hellyeah>   var valuesIds = [];
[16:49:11] <cannap> with an alert
[16:49:12] <hellyeah>   var i = 0;
[16:49:13] <hellyeah>   $input.on('change', function() {
[16:49:15] <hellyeah>     var valuesPart1 = [];
[16:49:17] <hellyeah>     var valuesPart2 = [];
[16:49:19] <hellyeah>     var valuesId = [];
[16:49:23] <hellyeah>     var $datePicker = $('.datePart .datePicker');
[16:49:25] <hellyeah>    // var $datePickerId =
[16:49:28] <hellyeah>    var $datePickerId =$(this).closest('.datePicker').prop('id');
[16:49:29] <hellyeah>     if ($datePicker.length >= 0) {
[16:49:32] <hellyeah>       if ($(this).closest('.datePicker').last().find('.from').val() !== "" &&
[16:49:34] <hellyeah>         $(this).closest('.datePicker').last().find('.to').val() !== "") {
[16:49:35] <hellyeah>          valuesId.push({'id' :{
[16:49:38] <hellyeah>             'id': $datePickerId
[16:49:40] <hellyeah>           }});
[16:49:42] <hellyeah>           valuesIds.push(valuesId[0]);
[16:49:44] <hellyeah>        valuesDropdown1.push({'CapacityCenter' :{
[16:49:46] <hellyeah>           "BeceriMerkezi": $('.firstdropdown option:selected').text()
[16:49:48] <hellyeah>         }});
[16:49:52] <hellyeah>        valuesDropdown2.push({'Name' :{
[16:49:54] <hellyeah>           "Isim": $('.seconddropdown option:selected').text()
[16:49:56] <hellyeah>         }});
[16:49:58] <hellyeah>         valuesRadiobox.push({'Type' :{
[16:50:00] <hellyeah>           'NobetTipi': $(this).closest('body').find('.radio:checked').next().text()
[16:50:02] <hellyeah>         }});
[16:50:04] <hellyeah>         valuesPart1.push($.extend(valuesIds[i], valuesDropdown1[i], valuesDropdown2[i], valuesRadiobox[i]));
[16:50:07] <hellyeah>         valuesStart.push({'Start' :{
[16:50:09] <hellyeah>           'Baslangic': $(this).closest('body').find('.datePart .datePicker').last().find('.from').datepicker("getDate")
[16:50:12] <hellyeah>         }});
[16:50:14] <hellyeah>         valuesEnd.push({'End':{
[16:50:15] <hellyeah>           'Bitis': $(this).closest('body').find('.datePart .datePicker').last().find('.to').datepicker("getDate")
[16:50:18] <hellyeah>         }});
[16:50:22] <hellyeah>         valuesPart2.push($.extend(valuesStart[i], valuesEnd[i]));
[16:50:24] <hellyeah>         i++;
[16:50:26] <hellyeah>         for (var keys in valuesPart2) {
[16:50:29] <hellyeah>             valuesAll.push($.extend(valuesPart1[0], valuesPart2[keys]));
[16:50:30] <hellyeah>         }
[16:50:32] <hellyeah>         console.log(valuesAll);
[16:50:34] <hellyeah>   }
[16:50:36] <hellyeah> }
[16:50:38] <hellyeah>   });
[16:50:40] <hellyeah> }
[16:50:41] <cannap> woa
[16:50:42] <hellyeah> function deletingTheSpesificIndex() {
[16:50:44] <hellyeah>   $('.updateButton').on('click', function()
[16:50:47] <hellyeah>   {
[16:50:48] <hellyeah>   $('#new').prop('disabled', true);
[16:50:52] <hellyeah>  var $datePickerId = $(this).closest('.datePicker').prop('id');
[16:50:55] <hellyeah>  alert($datePickerId);
[16:50:57] <hellyeah>  $(this).closest('.datePicker').remove();
[16:50:59] <hellyeah>  $("#jqxCalendar").jqxCalendar({ specialDates: [] });
[16:51:01] <hellyeah>      valuesAll = valuesAll.filter(function(item) {
[16:51:03] <hellyeah>      console.log("id");
[16:51:05] <hellyeah>      console.log(item.id.id)
[16:51:07] <hellyeah>       return item.id.id !== $datePickerId;
[16:51:09] <hellyeah>    });
[16:51:11] <hellyeah>   for(var keys in valuesAll)
[16:51:13] <hellyeah>       {
[16:51:15] <hellyeah>       var specialDatesArray = [];
[16:51:17] <hellyeah>             var tmp = new Date();
[16:51:19] <hellyeah>             tmp = valuesAll[keys].Start.Baslangic;
[16:51:23] <hellyeah>             while(tmp <= valuesAll[keys].End.Bitis){
[16:51:25] <hellyeah>                      specialDatesArray.push({"date": tmp});
[16:51:26] <hellyeah>               tmp = new Date(tmp);
[16:51:28] <hellyeah>               tmp.setDate(tmp.getDate() + 1);
[16:51:30] <hellyeah>             }
[16:51:32] <hellyeah>             $.extend(valuesAll[keys], specialDatesArray);
[16:51:34] <hellyeah>       }
[16:51:36] <hellyeah>      console.log(valuesAll);
[16:51:38] <hellyeah>      var counter = 1; valuesAll.forEach(function(element,index){
[16:51:40] <hellyeah>           for(var keys in element)
[16:51:42] <hellyeah>           {
[16:51:45] <hellyeah>                 if(element[keys].hasOwnProperty("date"))
[16:51:46] <hellyeah>                 {
[16:51:49] <hellyeah>                   var obj = element[keys];
[16:51:52] <hellyeah>                 }
[16:51:54] <hellyeah>                 $('#jqxCalendar').jqxCalendar('addSpecialDate', obj.date,'special' +counter,'Beceri Merkezi: ' + element.CapacityCenter.BeceriMerkezi +
[16:51:58] <hellyeah> 'NÃ¶bet Tipi ' + element.Type.NobetTipi+
[16:51:59] <hellyeah> 'NÃ¶betÃ§i Ä°smi ' + element.Name.Isim);
[16:52:01] <hellyeah>           }
[16:52:03] <hellyeah>           counter++;
[16:52:06] <hellyeah>           if(counter > 25){
[16:52:08] <hellyeah>               counter = 1;
[16:52:10] <hellyeah>           }
[16:52:12] <hellyeah>           });
[16:52:14] <hellyeah>           createANewDatepickerSection();
[16:52:15] <shoky> wtf..
[16:52:16] <hellyeah>           getDatesFromCurrentDatePickers();
[16:52:18] <hellyeah>  });
[16:52:22] <hellyeah> }
[16:52:24] <hellyeah> (function(window, undefined) {
[16:52:26] <hellyeah>   var Globalize;
[16:52:28] <hellyeah>   if (typeof require !== "undefined" &&
[16:52:30] <hellyeah>     typeof exports !== "undefined" &&
[16:52:32] <hellyeah>     typeof module !== "undefined") {
[16:53:31] <pavonia> Thanks shoky
