[14:14:14] <JohnTalent> why are people transitioning away from jQuery?
[14:14:20] <JohnTalent> It seems to have it all.
[14:15:00] <robertmaxrees> lots of reasons: browser APIs are more consistent, other tools enable support in legacy browsers, React/Angular/Vue/etc supercede the need, etc.
[14:15:44] <robertmaxrees> in fact, there are a lot of browser APIs that got their inspiration directly from jQuery.  handful of core JS featuires, too.
[14:15:47] <robertmaxrees> *features
[14:20:26] <JohnTalent> i believe it.
[14:20:40] <JohnTalent> I'm not a fan of React or Angular.
[14:21:12] <robertmaxrees> i don't like angular.  react is nice for some things.
[14:25:40] <JohnTalent> I don't quite like that state management system, which name eludes me. It's not at all intuitive.
[14:25:52] <JohnTalent> Redex or something.
[14:26:13] <robertmaxrees> flux is the pattern.
[14:26:38] <robertmaxrees> redux is one of the implementations.  going to guess you come from a more classical OO background.
[14:30:31] <JohnTalent> I started with BASIC, then C, VB, then a myriad of other languages.
[14:30:55] <JohnTalent> at least with Haskell you don't need to fiddle with with state management.
[14:31:09] <JohnTalent> Why even use redux?
[14:31:20] <robertmaxrees> redux is all about one-way data flows.
[14:31:25] <JohnTalent> It's still not going to give you clean multithreading.
[14:31:37] <robertmaxrees> it's not for multithreading, since js isn't multithreaded :)
[14:31:45] <JohnTalent> or multicore!
[14:31:50] <robertmaxrees> same thing.
[14:32:21] <JohnTalent> one way dataflow because you can't read the source.
[14:32:23] <JohnTalent> :p
[14:32:40] <robertmaxrees> not at all.
[14:32:48] <robertmaxrees> one way dataflow because it makes sense for FP.
[14:32:48] <JohnTalent> i'm glad you agree.
[14:32:59] <JohnTalent> javascript isn't pure fp.
[14:33:07] <robertmaxrees> you can get close enough ;)
[14:33:12] <JohnTalent> therefore statementment is just a cruft on top.
[14:33:29] <JohnTalent> hm
[14:33:31] <robertmaxrees> alrighty.
[14:33:52] <JohnTalent> i mean't to stay redux is just meaningless cruft.
[14:34:01] <robertmaxrees> i disagree :)
[14:34:16] <JohnTalent> just like objects are to C. C++ is the worst language ever invented.
[14:34:34] <robertmaxrees> large enough projects benefit greatly from tools like redux, even without react.
[14:50:02] <JohnTalent> if you say so.
[14:50:22] <robertmaxrees> :shrug: i and many others seem to agree.  :)
[14:54:24] <JohnTalent> see ya in a while crocodile!
[22:03:52] <Waldkauz> Is there any (possibly internal) value to indicate how deep a certain elemnt is nested in the DOM tree?
[22:04:32] <robertmaxrees> from a given element?
[22:04:40] <robertmaxrees> or from the root?
[22:04:40] <Waldkauz> Yes
[22:04:55] <Waldkauz> Oh, a given elemeent from the root :D
[22:05:16] <robertmaxrees> there may be, but that's a code smell heh.
[22:05:23] <Waldkauz> Like body is 0, body > div is 1, body > div > span is 2 etc.
[22:05:32] <robertmaxrees> yeah, why would you need to know that?
[22:07:03] <robertmaxrees> Waldkauz
[22:07:25] <Waldkauz> For regex search over .text(), only the deepest matches should be found
[22:07:55] <robertmaxrees> huh?  mind sharing an example of what you're trying to do?
[22:10:46] <robertmaxrees> i ask because your original request and your revised request are... strange.
[22:10:58] <Waldkauz> robertmaxrees: https://jsbin.com/zatuyehezi/edit?html,js,output <-- See how all the elements are highlighted?
[22:11:15] <robertmaxrees> yeah
[22:11:19] <Waldkauz> I'm trying to reduce the set to only the inner ones
[22:11:40] <robertmaxrees> "inner ones" is vague and non-specific.
[22:11:44] <robertmaxrees> just the spans?
[22:12:30] <Waldkauz> If A matches and B matches and B is inside of A, remove A from the result set
[22:13:28] <robertmaxrees> hrm.
[22:13:42] <robertmaxrees> yeah, dunno.
[22:14:20] <Waldkauz> I mean I could do some kind of custom traversing, but just sorting by depth seems to be the easiest solution to me :p
[22:14:49] <robertmaxrees> there isn't really "sorting by depth" in this case.  what happens if you have 2 children at the same depth?
[22:15:02] <robertmaxrees> can you provide more context about the actual thing you're building?
[22:15:15] <Waldkauz> I want both then, actually all children of max depth
[22:15:40] <robertmaxrees> yeah, more context would be helpful here.
[22:16:03] <Waldkauz> It's no real use case, actually. I'm just playing around with a similar question brought up on another channel
[22:16:14] <Waldkauz> What more context do you need?
[22:16:21] <robertmaxrees> real-world applicability haha.
[22:17:59] <robertmaxrees> if there is none, then some kind of wildcard selector, figuring out what the highest .parents('*').length is, and then filtering to that might work, but that gets into some really strange performance concerns.  it's also hard to read and it'll be bug prone :)
[22:25:50] <Waldkauz> Meh, getting only the deepest matches wouldn't work. I'm not even sure how to verbally describe the elements to select :D
[22:28:12] <Waldkauz> "all elements that match but not their parents"
[22:28:38] <Waldkauz> Can you remove a specific element from the result set?
[22:29:51] <Waldkauz> Ah .not()
[22:33:35] <shoky_> Waldkauz: elems.not(elems.parent())  ?
[22:34:23] <shoky_> https://jsbin.com/jeqozenusa/1/edit?html,js,output
[22:34:35] <robertmaxrees> oh, so it gets more complex - you might have three parent elements, each with its own set of elements at varying depths.
[22:34:47] <robertmaxrees> then you're getting into figuring out where things are branching.
[22:35:57] <robertmaxrees> https://jsbin.com/sivumecabo/1/edit
[22:37:53] <Waldkauz> I think shoky's solution works
[22:38:26] <Waldkauz> And it's also a one-liner <3
[22:43:13] <shoky_> that baaaaaaaarrrr wouldn't get selected by the regex anyway :p
[22:43:22] <shoky_> or the fooo
[22:44:53] <Waldkauz> Yeah, changing it to waaaaaaaaaarrrrr works :p
[22:44:57] <shoky_> still works  https://jsbin.com/vemohiceye/1/edit
[22:45:01] <shoky_> ya
[22:45:04] <shoky_> but
[22:45:05] <robertmaxrees> lol
[22:45:34] <shoky_> oh no but i guess
[23:55:34] <jak2000> i have a select option with attribute multiple='multiple' when user start choose munltiple options, which event was fired?
[23:56:55] <robertmaxrees> huh?
[23:57:12] <robertmaxrees> https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#See_also
[23:57:13] <robertmaxrees> ?
[23:57:55] <robertmaxrees> jak2000
