[12:40:47] <MediumD> Is there a function or "right way" to encode a string to be valid html5 "id"-values? I might have searched the wrong terms so maybe better keywords might already help me.
[13:17:33] <robertmaxrees> "id"-values as in...? MediumD
[13:21:59] <MediumD> i have a bootstrap dropdown and need identifiers from a json format I have no influence on - hence no id-numbers. Therefore I need to generate the li-id generated from a string that has umlauts or other special chars in it. I was thinking of just removing special chars and spaces and hope that there wont be a conflict in future :D
[13:22:24] <MediumD> ^i have a bootstrap dropdown - message was too long
[13:22:29] <robertmaxrees> "conflict" with that?
[13:22:35] <robertmaxrees> *what
[13:22:51] <robertmaxrees> you just want to make sure the id attribute is valid?
[13:24:08] <MediumD> strings like "ätem" or "ütem" could kill my solution - I dont think it will happen. Yes, ensure they're valid but also be able to create the same id from the original string.
[13:24:55] <robertmaxrees> where is the json coming from?
[13:25:45] <robertmaxrees> issue is - your frontend really isn't where you want this logic.
[13:26:46] <MediumD> from a customers cash system - they would like to have a searchable list of everything offered and I suggested to create some autocomplete on this. But yeah, maybe I should process things via php and ajax.
[13:27:31] <robertmaxrees> yeah, that would be a much safer bet.
[13:28:58] <robertmaxrees> especially since you're dealing with special characters.  also - not sure why you'd search based on ID attributes.
[13:29:06] <robertmaxrees> so move that logic server-side and call it a day.
[13:29:31] <MediumD> yeah convinced :D
[13:29:34] <MediumD> bless
