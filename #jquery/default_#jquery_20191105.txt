[00:29:07] <primitivMedia> https://bpaste.net/show/JFNII
[00:29:13] <primitivMedia> my on submit isnt fiirin
[03:04:40] <anli> Is jsfiddle working badly now?
[03:15:10] <Cork> anli: https://www.isitdownrightnow.com/jsfiddle.net.html
[03:15:26] <anli> I seems to work semi
[10:22:14] <agile_prg> how do I make chrome do a hard refresh?
[10:25:11] <thykka> agile_prg, open up developer tools, go to Network tab, make sure "Disable cache" is checked, then reload
[10:25:32] <thykka> cmd+shift+R might do the same thing
[10:29:35] <agile_prg> ok cool thanks
[11:01:26] <agile_prg> I am a very wierd thing happening, I am using https://bossanova.uk/jexcel/v3/jexcel.js and the getJson function I put a console.log and data is populated, but in my code that calls it with: var jsonData = $('#spreadsheet').jexcel('getJson'); it says jsonData is undefined
[11:01:31] <agile_prg> I am sooooooo confused by this
[11:01:33] <agile_prg> any ideas?
[12:10:55] <thykka> agile_prg, looks like .jexcel() expects an options object, not a 'getJson' string
[12:11:00] <thykka> https://bossanova.uk/jexcel/v3/examples/jquery
[12:11:30] <thykka> no wait..
[12:17:40] <thykka> agile_prg, is there an element with id="spreadsheet" on the page?
[12:19:07] <robertmaxrees> is there more than one element with that ID? ;)
[13:16:16] <theseb> Suppose your client's javascript code pulls info from the server.....how only get the **NEW** info so you avoid pulling the same info over and over?  Does django/javascript/jquery have any helpful code regarding that?
[13:35:07] <thykka> theseb, what kind of info are we talking about?
[13:46:50] <theseb> thykka: strings
[13:49:01] <thykka> theseb, okay, but why does it pull the same info over and over again in the first place?
[13:51:04] <thykka> trying to figure out what you're attempting to do, that would cause this problem
[13:51:47] <theseb> thykka: students enter answers to a question....I pull the latest answers from the server and display them
[13:52:12] <theseb> thykka: it would inefficient to pull ALL the answers every second with my polliing JS function..so trying to avoid that
[13:52:26] <thykka> ah okay, I see
[13:52:41] <thykka> websockets are an alternative to polling
[13:53:06] <thykka> they establish a UDP connection, so that the server can send whenever new info is available
[13:53:57] <thykka> not sure if django has support for that, jquery doesn't
[13:56:10] <thykka> of course, modern browsers do have websocket support built-in. https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications
[13:56:20] <theseb> thykka: interesting
[13:56:44] <theseb> thykka: do i need some library like jquery for websockets?
[13:57:00] <thykka> no, just a modern browser for all the students
[13:57:17] <thykka> https://caniuse.com/#feat=websockets
[13:57:30] <theseb> thykka: are they easy to write in simple javascript code?
[13:59:26] <thykka> theseb, the API itself is quite simple, but you'll also need server-side support for it. As far as javascript programming tasks go, I'd say this is advanced rather than simple
[13:59:45] <theseb> ok..i'll look into it! thanks!
[13:59:53] <thykka> good luck! :)
[14:02:15] <thykka> theseb, looks like there is a django plugin for websockets
[14:02:20] <thykka> https://channels.readthedocs.io/en/latest/
[14:02:31] <theseb> yea was just looking at that
[15:07:13] <hwk> hi
[15:07:18] <robertmaxrees> hello
[15:07:38] <hwk> any advice on how to hack the deffered promise to make it call all subscribed methods?
[15:07:45] <robertmaxrees> huh?
[15:08:00] <robertmaxrees> you... have it resolve.
[15:08:42] <hwk> when calling resolve on a resolve promise i want to execute the chain again
[15:08:47] <hwk> *d
[15:08:51] <robertmaxrees> you can't do that.
[15:08:57] <hwk> i want to do that
[15:09:03] <robertmaxrees> promises can only be resolved or rejected once.
[15:09:06] <hwk> any advice on how to do that?
[15:09:08] <robertmaxrees> you need a new object at that point.
[15:09:13] <robertmaxrees> you don't.
[15:09:14] <hwk> you pasting from the docs right now
[15:09:16] <hwk> :)
[15:09:19] <robertmaxrees> nope.
[15:09:22] <robertmaxrees> i'm speaking from experience.
[15:09:29] <hwk> promises in angular
[15:09:32] <hwk> ....
[15:09:37] <robertmaxrees> Promises/A+ says an object can resolve or reject once.
[15:09:38] <hwk> want that pattern
[15:09:38] <robertmaxrees> period.
[15:09:44] <robertmaxrees> you can't "re-resolve"./
[15:09:52] <robertmaxrees> you could make a factory function to spit out new objects.
[15:10:21] <hwk> well where i work with angularjs 1.6.x seems the promises calls all thens
[15:10:26] <hwk> :(  bummer
[15:10:29] <robertmaxrees> erm.
[15:10:35] <robertmaxrees> i think you're confusing concepts.
[15:10:46] <robertmaxrees> are you attaching new thens to the promise?
[15:10:59] <robertmaxrees> because otherwise, angular is likely creating new objects for you.
[15:11:06] <hwk>  :)  probably
[15:11:12] <robertmaxrees> probably what?
[15:11:50] <hwk> cause im resolving it multiple times and the subscribed then functions execute in the same order
[15:11:58] <robertmaxrees> again
[15:12:02] <hwk> queue
[15:12:04] <robertmaxrees> you can't resolve an object more than once.
[15:12:36] <robertmaxrees> if you really think that's happening, show me.
[15:13:20] <hwk> .....
[15:13:34] <hwk> anyhow, if retry ajax request in network debug
[15:13:36] <robertmaxrees> promises explicitly cannot be resolved or rejected more than once.
[15:13:38] <hwk> the binded events execute
[15:13:42] <hwk> making changes to ui
[15:13:44] <hwk> ....
[15:13:46] <hwk> :)
[15:13:52] <robertmaxrees> i'm not making this up.
[15:13:57] <hwk> neither do i
[15:13:59] <robertmaxrees> this is widely understood and accepted.
[15:14:09] <hwk> i know
[15:14:35] <hwk> so any advice on how to hack jquery deffered
[15:14:36] <robertmaxrees> either way, sounds like you want a factory to pump out ajax requests and attach thens to them.
[15:14:39] <robertmaxrees> you cannot.
[15:14:48] <robertmaxrees> well, correction.
[15:14:50] <robertmaxrees> you should not.
[15:14:55] <hwk> to make it a queue of events which need reexecution with a different argument value
[15:15:00] <robertmaxrees> because otherwise you'll break other parts of jquery.
[15:15:10] <hwk> no, the only toolkit i have around the project
[15:15:12] <robertmaxrees> you need to build your own queueing sytstem  for that.
[15:15:17] <hwk> is jquery which comes with the framework
[15:15:25] <hwk> the target is not to add additional funcionality
[15:15:27] <robertmaxrees> otherwise, use a factory function to handle this for you.
[15:15:34] <hwk> and keep older browser supported
[15:15:41] <hwk> running jq 1.24 :)
[15:15:55] <robertmaxrees> uh
[15:16:03] <robertmaxrees> then you can't use deferreds/
[15:16:07] <hwk> :/
[15:16:17] <robertmaxrees> https://api.jquery.com/category/deferred-object/ -> "The Deferred object, introduced in jQuery 1.5 [...]"
[15:16:36] <hwk> this was a question targeted to a jq dev then :)
[15:16:42] <robertmaxrees> huh?
[15:16:49] <robertmaxrees> you mean add support for deferreds to 1.24?
[15:16:50] <hwk> i know it can
[15:17:01] <hwk> dont want to reinvent the wheel
[15:17:04] <hwk> want to hack jq a bit
[15:17:10] <robertmaxrees> *sigh*
[15:17:14] <robertmaxrees> good luck then.
[15:23:18] <robertmaxrees> as an aside - what framework are you using?
[15:23:36] <hwk> rutorrent
[15:23:54] <hwk> hobby dev  a plugin for the project :)
[15:24:37] <robertmaxrees> why not submit a PR to update jquery on the main project?
[15:27:02] <hwk> hobby*
[15:27:13] <robertmaxrees> you spelled that correctly the first time?
[15:27:28] <hwk> **HOBBY**
[15:27:37] <robertmaxrees> and?
[15:27:45] <robertmaxrees> what's your point?
[15:27:52] <hwk> anyhow, will be forced to use a queue, cant the in js be used as api?
[15:28:09] <hwk> the reason for me asking questions here is for the opensource :D
[15:28:09] <robertmaxrees> "can't the in js be used as api?" - huh?
[15:28:33] <hwk> i do the same thing on a daily basis as a job for the closed source :D
[15:28:47] <robertmaxrees> your last question still doesn't make sense but alright.
[15:28:49] <hwk> jquery sorry
[15:28:57] <hwk> https://api.jquery.com/queue/
[15:29:16] <robertmaxrees> that's not what i was talking about.
[15:29:40] <robertmaxrees> that's mostly for handling animations on elements.
[15:30:30] <hwk> yes, but in my case the promise which calls all subscribed methods again on each "Resolution" acts like a queue for anon functions hooks
[15:30:48] <robertmaxrees> .queue is for elements.
[15:30:58] <hwk> promise is for js
[15:30:59] <robertmaxrees> which is not what you're dealing with here.
[15:31:13] <robertmaxrees> erm.
[15:31:24] <robertmaxrees> promises is just a spec.  js happens to adopt it for some things.
[15:31:33] <hwk> i can make function that "hooks" up all the then events again when "done"
[15:31:43] <hwk> factory
[15:31:54] <robertmaxrees> which is literally what i was talking about before.
[15:31:55] <hwk> wanted a internal approach
[15:32:05] <robertmaxrees> internal to what?
[15:32:06] <robertmaxrees> jquery?
[15:32:19] <hwk> yes, directly in the deffered
[15:32:23] <robertmaxrees> again
[15:32:27] <robertmaxrees> you don't have deferreds in 1.24
[15:32:28] <hwk> a flag to tell it do it again for all
[15:32:38] <hwk> not for those who subcribed after the resolution
[15:32:43] <robertmaxrees> you cannot do that.
[15:33:01] <robertmaxrees> the promises/a+ spec explicitly says you can't do that.
[15:33:20] <robertmaxrees> so you need a factory function to spit out a new object with the newly attached .then()s
[15:33:23] <hwk> its jquery for gods sake :))
[15:33:29] <robertmaxrees> doesn't matter.
[15:33:42] <hwk> it fixed cross compability issues before webkit was addopted
[15:33:48] <robertmaxrees> that's nice?
[15:33:49] <hwk> -commonly
[15:33:59] <robertmaxrees> if they're implementing promises, they're not going to modify them further from spec.
[15:34:02] <hwk> i has a before function :)
[15:34:06] <robertmaxrees> they're going to shoot to do it per spec.
[15:34:17] <hwk> it has
[15:34:29] <robertmaxrees> right.  so promises exist in modern jquery.
[15:34:31] <robertmaxrees> boom, done.
[15:34:47] <hwk> anyhow, need a queue for callbacks
[15:34:56] <robertmaxrees> which you will have to develop yourself :)
[15:34:57] <hwk> need to add code for it
[15:35:05] <hwk> i already have it
[15:35:19] <hwk> im trying to fir in a single js file 10k rows...
[15:35:27] <hwk> and try to maintaint in that format .... lol :))))
[15:35:33] <hwk> nice framework
[15:35:33] <robertmaxrees> why?
[15:35:41] <hwk> its a plugin
[15:36:05] <hwk> which uses arguments.callee =))
[15:36:20] <hwk> that might give a glance of the era where it comes
[15:36:20] <robertmaxrees> congrats?
[15:37:05] <hwk> rule of thumb in this case: the less i add the better :)
[15:37:25] <hwk> its really hard to write vanilla js in a single huge file
[15:37:42] <hwk> and the project is called "file manager"
[15:37:56] <robertmaxrees> k
[15:38:14] <hwk> plugin/project ---- potatoes
[15:38:20] <robertmaxrees> cool
[21:30:20] <rocketmagnet> hi everyone
[21:31:11] <rocketmagnet> i try to translate javascript into jquery, this is the code: https://paste.debian.net/1114253/
