[15:35:30] <volty> Hi. Any simple code to hide all elements except some (let's say in an array)?
[16:46:18] <robertmaxrees> volty why in an array?
[16:46:27] <robertmaxrees> why not just select them and add a .hide class or sokmething?
[16:46:54] <mulch2> i'm using the on("click") method to perform an action, but the click is actually temporarily removing the element from the dom as well. when it comes back, the on() method is no longer attached to it... is there a way to attach it so that it persists?
[16:47:12] <robertmaxrees> mulch2 sure - use a delegated handler instead
[16:48:02] <robertmaxrees> https://api.jquery.com/on/#direct-and-delegated-events
[16:48:09] <robertmaxrees> https://learn.jquery.com/events/event-delegation/
[16:48:33] <mulch2> sweet, ty
[17:10:56] <volty> robertmaxrees: Got it and did it. Thanks a lot.
[17:11:02] <robertmaxrees> cool
[17:17:04] <mulch2> robert, i'm reading the docs, and i felt like i had a handle on it, but hit another snag: the elem is in an iframe that is being reloaded after the click... the iframe has an onload init function that is apprently regenerating all the elems, so my handlers are lost.
[17:17:09] <mulch2> is there something more i need to do with the delegation in this case?
[17:17:28] <robertmaxrees> i don't know that you can do that.
[17:17:45] <robertmaxrees> since the events don't bubble out of the iframe.
[17:19:00] <mulch2> hmm
[17:19:28] <robertmaxrees> binding listeners like that is weird anyway.
[17:19:38] <robertmaxrees> one of many reasons iframes are bad :)
[17:19:50] <robertmaxrees> (at least when they can be avoided)
[17:19:52] <mulch2> i hear you.
[17:20:49] <mulch2> wish i had the skills to rewrite the whole thing rather than hacking away.
[17:20:54] <mulch2> maybe i can just force it reload the whole page rather than just the iframe.
[17:21:11] <robertmaxrees> why are you using an iframe?
[17:22:24] <mulch2> it's just how it was written -- and i'm trying to customize it and make it responsive.
[17:22:36] <mulch2> web-based media server.
[17:24:24] <robertmaxrees> what's it based on?
[17:27:01] <mulch2> it's written in java, and runs as a servlet, i guess
[17:27:15] <robertmaxrees> gotcha.  so it's a pre-built thing?
[17:27:19] <mulch2> yeah
[17:27:32] <robertmaxrees> i'd modify the iframe contents and bind the listener there instead.
[17:28:05] <robertmaxrees> and then just postMessage the data to the parent window.
[17:28:30] <mulch2> bind it to the iframe onload?
[17:28:41] <robertmaxrees> huh?
[17:28:51] <mulch2> i'm just trying to follow you, my bad.
[17:28:52] <robertmaxrees> i'd modify the contents of the iframe to handle binding the event listener.
[17:29:00] <robertmaxrees> instead of doing it through the parent window.
[17:29:06] <mulch2> ahh
[17:30:51] <mulch2> at the risk of sounding even more ignorant than i already have, what do you mean by modifying the contents of the iframe? in the source code?
[17:30:58] <robertmaxrees> yes
[17:32:03] <mulch2> ah, so like adding an onclick event to the elem
[17:32:08] <robertmaxrees> no.
[17:32:15] <robertmaxrees> bind it like you normally would
[17:32:25] <robertmaxrees> put the js to bind the listener in the iframe instead.
[17:32:34] <mulch2> oh, boom
[17:32:58] <robertmaxrees> and then use postmessage to notify the parent window that it happened and go from there.
[17:35:53] <mulch2> wait -- is that what stomp.js does? messaging?
[17:35:59] <robertmaxrees> huh?
[17:36:14] <robertmaxrees> where did you get stomp.js from??
[17:36:29] <mulch2> because i see tons of messages in my console log from some stomp-4.0.8.min.js
[17:36:43] <robertmaxrees> what does that have to do with postmessage?
[17:37:59] <mulch2> when i looked up postmessage it made me think of stomp -- and i just wondered, as an aside, if i could've had an event listener listening for those messages too.
[17:38:11] <mulch2> sorry
[17:38:12] <robertmaxrees> stomp is a websocket client.
[17:38:22] <robertmaxrees> nothing to do with what i'm talking about here.
[17:38:26] <mulch2> k
[17:39:00] <robertmaxrees> let's clarify - what does that event listener ultimately need to accomplish?
[17:41:40] <mulch2> the elem i have an on() method attached to is a share button, that when clicked hides(actually removes) my browser, and gives a "back" button. when i click this "back" button this reloads the iframe containing the original share button, so that the original on() method is no longer attached to it.
[17:41:59] <robertmaxrees> lol
[17:42:24] <robertmaxrees> so... what does that handler ultimately need to accomplish?
[17:43:12] <robertmaxrees> "when the element is clicked, i need the parent window to do Y thing"
[17:45:46] <mulch2> lmao... sorry, so for my browswer, i have a "condense" function that mades it neat and tidy for mobile, which i run on page load, and i also tried to run on the "back" button -- this is how i learned that the elems were being removed from the dom.
[17:46:05] <mulch2> because the iframe init completely changes the format of everything, i'm just trying to run my "condense" function each time it finishes its onload.
[17:46:29] <robertmaxrees> try one more time - "when the element is clicked, i need Y to happen"
[17:46:35] <robertmaxrees> what is "Y" there?
[17:50:54] <mulch2> okay, so i'll just walk through it: when i press the share button, since it's loading an iframe with elems that didn't exist in the dom, i have the click triggering a function that is essentially a timer checking for the existence of the back button... once that button exists, another listener is attached to the back button. the back button is reloading the original iframe where i was browsing, but
[17:50:55] <mulch2> because the onload of the iframe kills my formatting, i wanted my listener on the back button to re-run the function that i run on page load to condense the browser.
[17:51:02] <robertmaxrees> again
[17:51:05] <robertmaxrees> that's not what i'm asking lol
[17:52:02] <robertmaxrees> nevermind - my point is: instead of having the event handler do it directly, put the handler in the contents of the iframe and use postmessage.  let the parent window have a listener for that message that then runs whatever logic you need.
[17:52:19] <mulch2> Y is waiting for the back button to load, so i can attach a listener to it, right?
[17:52:37] <robertmaxrees> is the back button in the iframe?
[17:53:29] <mulch2> yes
[17:53:48] <robertmaxrees> so yeah, like i said - put the handler in the iframe source, then use postmessage and go from there.
[17:53:51] <mulch2> but not until the share button is clicked
[17:53:55] <mulch2> okay
[17:53:55] <robertmaxrees> don't use timers and the like for this sort of stuff.
[17:54:05] <mulch2> k, that makes sense
[19:45:24] <thiras> hello
[20:46:49] <mulch2> what's the current method of detecting when a browser back button is clicked?
[21:22:10] <robertmaxrees> mulch2 check out the history api
[21:22:52] <robertmaxrees> searching for javascript detect back button pressed in google will get you plenty opf info ;)
[22:06:04] <mulch2> robertmaxrees -- last question of the day: referring back to stomp and the websocket messages i'm seeing in my console, is there a way to use jquery to listen for those?
[22:06:18] <robertmaxrees> why?
[22:06:35] <mulch2> so i can run a custom function when a certain message is received
[22:06:44] <mulch2> or when any message is received
[22:06:53] <robertmaxrees> :shrug: would have to search google.
[22:07:16] <robertmaxrees> dunno if jquery supports websockets since that's not really a DOM thing.
