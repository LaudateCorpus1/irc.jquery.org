[00:04:11] <Woet> madprops: why does it worry you?
[00:04:44] <madprops> it's a basic feature, makes me think jquery is not going to be developed longer :/
[00:18:11] <Woet> madprops: outerHTML has been a thing since like 2012 at the very least
[00:18:39] <madprops> it's not implemented by jquery though
[00:18:47] <Woet> madprops: so?
[00:18:57] <Woet> madprops: $("#foo")[0].outerHTML
[00:18:59] <madprops> so it seems abandoned
[00:19:16] <madprops> what if it's better to not use the [0] for convenience
[00:19:19] <Woet> madprops: just because it doesn't implement everything possible? do you want it to be a 10 MB JS file?
[00:19:28] <madprops> outerHTML is very basic though
[00:19:43] <Woet> madprops: I've never had a need for outerHTML.
[00:19:51] <madprops> i have, a lot of times
[00:19:53] <Woet> madprops: but if you think it's so basic, why don't you implement it and create a pull request?
[00:20:04] <Woet> madprops: you know jQuery is a community project right?
[00:20:14] <madprops> i know, i guess that's an option
[00:20:54] <madprops> maybe it could just called element[0] internally
[00:20:57] <madprops> call*
[00:21:20] <Woet> madprops: plenty of development going on, https://github.com/jquery/jquery/pulse
[04:29:37] <thykka> MACscr, don't use an <a> if it's not a hyperlink. <button>s are better suited for clickable interactive things
[04:30:19] <thykka> and especially don't use <a href="#"> because that will scroll the page to the top when clicked
[07:05:05] <braindead__> hey guys... this is a wordpress related question but i guess its somehow related to jquery(?)
[07:05:49] <braindead__> i want to filter for posts with an advanced custom field value. to do so i use
[07:05:50] <braindead__> posts_per_page=-1&post_type=portfolio&meta_query[][key]=location&meta_query[][value][]=Melbourne&meta_query[][compare]=IN
[07:06:28] <Cork> that's a query... how does that relate to jquery?
[07:06:49] <braindead__> ok, thats why i made the ? there.. was not sure
[07:06:52] <braindead__> sorry then
[07:07:21] <Cork> didn't say it didn't but if that was all the info then i don't see how it could
[07:07:34] <Cork> js can parse queries too, but normally those are for the server
[07:08:32] <braindead__> ok, so - that above query works as long as there is only one value. for example "location = melbourne" but if its "location = melbourne, sidney" it wont find the post
[07:09:07] <Cork> you don't have a location key in the query
[07:09:18] <braindead__> but as far as i understood it the [compare]=IN should take care of that
[07:09:42] <braindead__> Cork: isnt it [key]=location
[07:09:53] <Cork> thats a value not key like you typed
[07:09:59] <Cork> either way this isn't related to jquery
[07:10:20] <braindead__> all right
[07:10:35] <braindead__> is there a channel it would fit besides #wordpress
[07:10:57] <Cork> you could try ##wordpress, but i don't know
[09:30:05] <MACscr> https://codepen.io/MACscr/pen/ZPqqOq?editors=1111. I realized i had a flaw in my logic when i ran the get_elements() function again as it simply appends everything again. Think I should just empty the list and recreate or is there a smarter way to go about this?
[09:31:01] <MACscr> Also, i really hate that I need to add a data attribute to get something like this to work, but since not all elements are inputs with names, im not sure of a better way to make a reference list of elements
[09:32:39] <Cork> MACscr: i would strongly recommend against using html concatination for the creation of the buttons
[09:33:13] <Cork> about the not recreating them every time, you could either save a referecen to the element and just append the element back again
[09:33:14] <MACscr> Cork well i really could just use each() with data-element-name
[09:33:17] <MACscr> if i go that route
[09:33:22] <Cork> though i don't think you would save much for that
[09:33:45] <Cork> MACscr: what i meant about the first one is replace append('string') with elements
[09:34:15] <Cork> append($('<li>', { html: $('<button>', { text: element_name }) }));
[09:34:26] <Cork> then you don't risk getting xss html in there
[09:40:15] <MACscr> Cork id love this little editor v2 im putting together to work with my old content as well. think I should stick with the data attribute concept that only works with new elements or come up with something a bit more elaborate that works with existing elements? They do already have the pub_element class. Now that i think of it, all content is either an input or button, but none of the buttons have any unique names to them.
[09:40:49] <Cork> MACscr: what i gave you shouldn't change what it works with
[09:41:06] <Cork> the result should be identical, only not xss suseptable
[09:41:26] <MACscr> Cork oh i know, this was my next issue to tackle
[09:41:37] <Cork> about the regenerating the element every time, i don't think that would cost enough to be worth worring about
[09:41:56] <Cork> bench it and if it takes meaning full time, then possibly look at it
[09:43:05] <MACscr> i think what i might do is use the data attribute if available and just use the element type if it doesnt exist. Though that means i couldnt reliably target them when clicked on. hmm
[09:43:27] <Cork> MACscr: why not?
[09:43:39] <Cork> just have a delegated event handler and get the clicked element
[09:44:04] <Cork> $('parent').on('click', '.dynelement', function(event){  })
[09:44:12] <MACscr> if there were two buttons, how would i set .current to its matching one
[09:44:32] <Cork> self.siblings()?
[09:44:42] <Cork> opps wrong language...
[09:44:49] <Cork> $(this).siblings()
[09:52:08] <MACscr> Cork im not sure what you mean. This is a more realistic version of what the pub_elements would be like, though i threw in a few with data-element-name for testing
[09:52:10] <MACscr> https://codepen.io/MACscr/pen/ZPqqOq?editors=1111
[09:53:03] <Cork> MACscr: i mean you could put the buttons in one parent and have them wrap by other means
[09:53:11] <Cork> then they are siblings and easy to target
[09:54:41] <MACscr> Cork they are all within the modal and all are within their own .pub_element, but thats about it. Im not sure im following your idea here
[09:55:04] <Cork> MACscr: my point is change the html to help you group the elements
[09:55:25] <MACscr> if i have to change the html, i might as well add the data names
[09:55:36] <MACscr> the point was to try to come up with something that would work with old content
[09:55:47] <MACscr> if i were not going to use the data names
[09:56:20] <Cork> well if the buttons aren't grouped you can't know if they are, unless "all buttons" are ok
[09:57:11] <MACscr> well i guess when traversing the dom for them, couldnt a unique identifier be dynamically added to it?
[09:57:35] <Cork> sure
[10:27:33] <MACscr> Cork https://codepen.io/MACscr/pen/ZPqqOq?editors=1111. Kinda got it working. Seems it not adding the element name to the ones without it though
[10:28:57] <Cork> MACscr: you want to use either value instaed of this
[10:29:03] <Cork> or use elements.each()
[10:31:14] <MACscr> doesnt make a difference. still doesnt add it
[10:31:31] <Cork> MACscr: add it to where?
[10:31:44] <Cork> the original element or the button you create?
[10:31:50] <MACscr> the original element
[10:32:42] <Cork> hmm, it definitely should, it won't be as an attribute though
[10:40:28] <MACscr> Cork what do you mean? It should add it as data-element-name="INPUT-1" or whatever
[10:40:39] <Cork> no
[10:40:45] <Cork> .data adds to the jquery data object
[10:40:51] <Cork> it doesn't modify the element
[10:41:23] <Cork> check what the element has with $(elm).data()
[10:42:10] <MACscr> im confused, whats the point of modifying it if it cant be used to identify it later on?
[10:43:28] <Cork> you can, just not by looking at the elemnt
[10:43:53] <MACscr> so i should just use attr?
[10:44:06] <Cork> $(elm).data('my-key', true)
[10:44:11] <Cork> $(elm).data('my-key') == true
[10:44:21] <Cork> if you want it as attr strings sure use .attr()
[10:44:33] <Cork> (but remember attr can only stor strings)
[10:44:50] <Cork> hence why .data() exists
[10:47:01] <MACscr> thanks, got it working with attr
[11:12:34] <MACscr> Cork  ive never done appends the way you suggested, so im trying to figure them out. Can you point me to a doc that uses the type of syntax you used to avoid xss?
[11:13:17] <MACscr> 1) i want to do it right  in the future. 2) I need to modify this differently as i am no longer doing lists, so dont need <li> anymore. $("#elements_list").append($("<li>", { html: $('<button>', { class: 'btn btn-primary', text: element_name }) }) );
[11:15:37] <MACscr> darnit, of course i figure it out just then
[11:15:53] <MACscr> nvm
[11:15:54] <MACscr> and thanks
[15:40:04] <taplar> hope peeps used unique passwords on their FB accounts
[15:40:11] <robertmaxrees> seriously :|
[15:41:08] <taplar> and google got smacked by the EU.  just not a good time to be a tech company, lol
[15:42:03] <robertmaxrees> yeah... plus the new california law about personal information
[15:42:20] <taplar> oh, i haven't read about that one
[15:43:25] <robertmaxrees> yeah, called the CCPA - real big deal.
[15:45:50] <taplar> i need to look at some of our disclosures.  I know we have some disclosures specific to people in california, and other states
[15:47:33] <robertmaxrees> yeah, if y'all haven't looked at it yet, CCPA has some pretty big ramifications: https://www.caprivacy.org/facts/information-control
[15:47:53] <robertmaxrees> heck i'd just read that entire site
[15:54:51] <taplar> is that new?  i see that it's been doing stuff since june last year, but then deliberation or something ended this month?
[15:55:33] <robertmaxrees> it was signed into law last june
[15:55:47] <robertmaxrees> it becomes effective on january 1 of 2020
[15:58:40] <taplar> from what i'm reading, given i'm not a lawyer dude, I think we're pretty good on what i'm reading.  Probably missing an explicit statement that we do not sell information, and we don't really have a way for users to have theri information deleted.
[15:59:14] <taplar> shot off an email to some peeps though, just in case, :)
[16:43:39] <geewonder> Anyone know if there's a way to set a callback for when a POST request has finished (the data was sent), but before the response comes back?
[16:44:02] <taplar> you can just perform the operation
[16:44:11] <taplar> you don't need a callback for that
[16:44:31] <geewonder> I'm uploading a large file blob and there's a few seconds' delay while the server does some computation. I'd like to update the UI to show "file uploading..." and then "analyzing...."
[16:45:03] <robertmaxrees> why not separate the two operations into separate calls?
[16:45:08] <geewonder> I know I could do this by breaking it into two requests, but it complicates the server end.
[16:45:13] <robertmaxrees> :)
[16:45:15] <geewonder> :)
[16:45:39] <taplar> have to look at the api.  there's a progress callback i think
[16:45:50] <geewonder> Right. Because then it's not a fire-and-forget kind of thing. If there's no other choice, I could assign a task ID and call back for the result.
[16:46:10] <robertmaxrees> https://coderwall.com/p/je3uww/get-progress-of-an-ajax-request
[16:46:22] <geewonder> Hey! That's a promising lead.
[16:46:23] <geewonder> Thank you.
[16:46:25] <taplar> aaaaah, it's on the xhr
[16:46:28] <taplar> herp derp
[16:46:29] <robertmaxrees> ^ yar
[16:47:05] <taplar> though, i have to ask
[16:47:24] <taplar> would your users actually know any difference if you just set it to "analysing..."?
[16:47:35] <taplar> minus the spelling error
[16:47:37] <robertmaxrees> lol
[16:48:09] <geewonder> Good question. Maybe not.
[16:48:22] <taplar> Cause I mean, *shrug*
[16:48:43] <geewonder> I suppose it's one of those things where I wanted to do it a certain way, thought it would be obvious and easy, and can't figure out how, and don't want to let it go for no particularly strong reason. :)
[16:49:21] <robertmaxrees> haha
[16:49:47] <taplar> you ever used an application that did something, that you didn't get any benifit from?  and thought, why did they do that?
[16:49:57] <robertmaxrees> every single day.
[16:50:02] <geewonder> Ha! Yep.
[16:50:10] <robertmaxrees> also: you just described OS X ;)
[16:50:12] <taplar> :)  so ask if you are currently making one of those situations
[16:50:26] <geewonder> Touché.
[16:50:49] <robertmaxrees> redefining the problem
[16:50:54] <robertmaxrees> my favorite solution
[16:53:13] <taplar> is the xhr property new?  I thought you used to have to have a beforeSend on the request to get it.
[16:53:21] <robertmaxrees> nope.
[16:53:24] <taplar> hmmm
[16:53:25] <robertmaxrees> it's been there for a long time.
[16:53:41] <taplar> fancy
[16:53:44] <robertmaxrees> yar
[16:53:57] <robertmaxrees> great example of jquery giving you access to the underlying object.
[16:54:21] <taplar> i bet i never knew it was there, because it starts with x and is at the bottom of the list.  I'm 10% joking
[16:55:43] <robertmaxrees> hahahahaha
[17:00:13] <geewonder> fyi, the xhr onprogress thing works perfectly. But I will nevertheless take this as an object lesson to consider if I'm doing something out of sheer stubbornness. :)
[17:02:54] <taplar> learning experience in any case
[17:03:15] <taplar> another tool for the developer toolbox
[17:40:15] <MACscr> ok, so i setup a little form for getting and setting the value of the data-element-name attribute. The problem is that as soon as i drag the element after that, it reverts back to the old name. Any ideas? https://codepen.io/MACscr/pen/PLymKJ?editors=1111
[17:40:48] <robertmaxrees> erm
[17:40:55] <robertmaxrees> explain how to repro the bug
[17:40:56] <robertmaxrees> can'
[17:40:59] <robertmaxrees> *can't read your mind
[17:41:38] <MACscr> robertmaxrees click on ape, look at the name on the right, change to somethign else. Inspect source and confirm its changed, then drag element somwhere else and you will see it changes it back
[17:41:58] <MACscr> nvm
[17:42:00] <MACscr> i was wrong
[17:42:01] <MACscr> lol
[17:42:06] <robertmaxrees> >.> heh
[17:42:10] <robertmaxrees> k
[17:42:39] <MACscr> well its not changing it back as far as the html attribute, but for some reason the form is reverting. i need to look closer at that
[17:44:16] <robertmaxrees> .attr("data-element-name", element_name) and .data('element-name') are not the same thing btw
[17:44:27] <robertmaxrees> use one or the other.
[17:44:40] <MACscr> yes, one is for setting it in the html, which i ned and the other is for reading it
[17:44:48] <taplar> data caches
[17:44:55] <taplar> you do not want to intermix the two
[17:44:57] <robertmaxrees> ^ trhey don't reference trhe same thing.
[17:45:12] <robertmaxrees> ie if you change using .attr() and then read using .data(), you'll get 2 different things.
[17:45:13] <taplar> attr('data-element-name') <-- reading
[17:45:33] <robertmaxrees> or .data('element-name')
[17:45:47] <robertmaxrees> but be consistent.  changing with one and reading with the other doesn't work.
[17:46:11] <MACscr> ah, that was it
[17:47:04] <MACscr> well my little editor is coming along. thanks everyone. Now i get to work on the z-index part. oh joy =P
[17:49:08] <MACscr> i think i will just do that in the form versus some fancy arrow icons on the outside of the element
[17:49:20] <MACscr> shouldnt have to mess with it too often
[17:58:50] <MACscr> boom. done with that. woo hoo
[18:33:00] <klow7> hello?
[18:35:44] <taplar> hola
[18:40:29] <klow7> taplar: hola
[18:41:36] <klow7> how does event binding with work dynamically created elements?
[18:41:56] <taplar> one of two ways
[18:42:19] <klow7> two ways?
[18:42:26] <taplar> you either have to bind on the elements after they are created, or you create a delegate event listener on a parent element that already exists, and you let it listen for the events that bubble up from the children
[18:44:32] <taplar> http://learn.jquery.com/events/event-delegation/
[18:53:57] <klow7> taplar: cool thanks
[21:30:21] <Audlex-> how can i also remove all spaces with this? replace(/[^a-z0-9\s]/gi, '')
[21:31:11] <robertmaxrees> just spaces?
[21:31:18] <Audlex-> i can only figured out how to remove just 1 but there is 2
[21:31:22] <Audlex-> yes please
[21:31:30] <robertmaxrees> wait what?
[21:31:37] <robertmaxrees> make a fiddle? :)
[21:31:42] <Audlex-> i just want to return alpha numeric with no spaces at all
[21:31:53] <Audlex-> Jan - 2019 = Jan2019
[21:32:21] <robertmaxrees> are they all formatted like that?
[21:32:27] <Audlex-> yes
[21:32:43] <robertmaxrees> why not just .split(' - ')[1] ?
[21:33:36] <Audlex-> sweet, i was trying to play with regex but if i dont need to, flag it!
[21:33:37] <Audlex-> thanx
[21:33:43] <robertmaxrees> :)
[22:59:55] <Jasein> How can I take an css frame animation and control it via jquery?
[23:00:41] <robertmaxrees> could you clarify what you mean?
[23:01:27] <Jasein> My end goal is to be able to take a frame-based animation in css and control the timing of it using percentages based on scroll position
[23:01:58] <Jasein> So when an element is at the top of the screen, it is at 0% and at the bottom -element height it is at 100%
[23:03:29] <robertmaxrees> i'd look into something like jquery.keyframes
[23:03:29] <robertmaxrees> https://github.com/Keyframes/jQuery.Keyframes
[23:04:42] <robertmaxrees> can you show what you've tried so far?
[23:08:41] <Jasein> It's a complete mess. What I have been trying to do is convert an old actionscript tweening engine into jquery.
[23:08:58] <robertmaxrees> *js :)
[23:09:35] <robertmaxrees> and i'm not sure what else to tell you - css keyframes are kinda wonk in JS.  i'd grab a plugin or lib to help you and go from there.
[23:31:16] <Jasein> https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f
[23:31:25] <Jasein> this is how I feel about "grabbing a plugin"
[23:31:45] <Jasein> and that article is so 2016...
