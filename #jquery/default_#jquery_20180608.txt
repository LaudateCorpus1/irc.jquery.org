[03:21:41] <pythonick> hello
[03:21:57] <pythonick> i have to inject a value inside an input field
[03:21:59] <pythonick> i have #FormSearch:provincia
[03:22:35] <pythonick> but i get https://nopaste.xyz/?278403a2517c42ec#HKlk0rRpqEvCe8vQO/sbgAHV5u5UAMaPnzR5bV2JNQw=
[03:22:42] <pythonick> should i escape the : somehow?
[03:26:31] <Woet> pythonick: http://jsfiddle.net/
[09:43:31] <jomofcw> Hello !
[09:44:10] <jomofcw> Is there a way to avoid a select dropdown to appear ? I tried to bind the click event and use event.preventDefault(); but it deosn't prevent the dropdown to appear.
[09:54:34] <thykka> err.. use the disabled attribute?
[09:55:45] <thykka> jomofcw, https://jsfiddle.net/thykka/9xy2cg37/
[09:57:59] <jomofcw> thykka you everywhere :D.
[09:58:02] <jomofcw> Hello ^^
[09:58:13] <jomofcw> Hm... and i shall reset the disable style so...
[10:01:54] <jomofcw> thykka it seems that a disabled select can't fire a click event anymore, right ?
[10:02:25] <jomofcw> (I'm trying to handle the click on the select to display, instead of the usual dropdow a custom popup)
[10:02:52] <thykka> it would seem so, yes..
[10:03:39] <thykka> are you sure that's a good idea?
[10:04:05] <jomofcw> thykka ask my webdesigner about it :P.
[10:04:31] <jomofcw> In mobile, the select act as default, but in tablet/desktop mode, I need to display something more... rich.
[10:04:31] <thykka> native selects are nice in the sense that they work well with the device the user is using. Rolling your own will lead to some cases where the UX is suboptimal
[10:05:00] <thykka> I mean, sure, you can fix the problems, but it can be a lot of work
[10:05:12] <jomofcw> I understand...
[10:05:32] <jomofcw> But, I need it :/. I have to respect the webdesign validated.
[10:05:49] <thykka> for instance, a native select on a desktop device can be navigated with cursor keys, and some people do so
[10:06:06] <thykka> you would then have to make sure your custom select can be used with cursor keys too
[10:07:05] <jomofcw> thykka in fact, in tablet/desktop the select doesn't look like one anymore, I just conserv it for the form structure and for the mobile display. So none wanna use it as a select as it doesn't appear like one.
[10:07:19] <thykka> jomofcw, keep in mind that the designer probably knows less about web tech, and you – as a professional – should be able to tell them when they might be making a counterproductive decision
[10:07:41] <thykka> if they STILL want to have a custom one, then fine
[10:07:52] <thykka> then you've given your professional input on the subject
[10:08:39] <thykka> point is, they might not know it's a bad idea. Give them a warning, see if that changes their view
[10:09:16] <jomofcw> Already did :P.
[10:09:23] <thykka> cool cool
[10:09:34] <jomofcw> (and i fully agree with you ;))
[10:09:36] <thykka> then you have my blessing to implement a custom select x)
[10:09:41] <jomofcw> haha xD
[10:09:43] <jomofcw> thanks :P !
[10:10:34] <jomofcw> I just have to find a solution to prevent this default dropdown to be visible... disabled is OK on that part, but I can't catch a click on the select anymore...
[10:11:35] <jomofcw> adding an overlay that will catch the event ?
[10:11:56] <thykka> surely
[10:13:08] <jomofcw> OK ^^ ! Thanks for your help !
[10:14:50] <jomofcw> Work ^^.
[10:26:04] <jak2000> hi all
[10:26:16] <jak2000> how to get the day number of the year sample 1 February is 32
[10:28:43] <Cork> jak2000: you will have to calculate it from the unix time
[10:28:46] <Cork> or use a lib
[10:34:35] <jak2000> i think moment?
[10:34:37] <jak2000> ok, thanks
[17:55:34] <Levin^> hi
[17:55:44] <Levin^> what's wrong with my code?
[17:55:44] <Levin^> https://codepen.io/anon/pen/dKNbrv?editors=1010
[17:55:51] <Levin^> the .css() is doing nothing
[18:02:25] <nitrospectide> I want to select a <td class="thing1"><a> only if the next <td class="thing2"><div class="warning"> over has the "warning" class on it. How, though?
[18:13:13] <Levin^> nitrospectide: I tried :'(
[18:13:14] <Levin^> https://codepen.io/anon/pen/JZEjPb
[18:13:23] <Levin^> I'm a noob too
[18:19:05] <nitrospectide> Levin^: Thanks. I changed the markup to reflect the actual markup. How do I share it back to you?
[18:20:22] <nitrospectide> Levin^: OK. I got it: https://codepen.io/anon/pen/JZEjGE
[18:21:30] <nitrospectide> Levin^: Looking closer at your code, I'm not sure that's the approach I want. Thanks, though.
[18:22:12] <Levin^> I'm still learning
[18:49:05] <SlimmyJimmy> let obj1 = { value1: 500, value2: 600, value3: 700}; When I use the $.ajax() method and pass obj1 as the value of data, i.e.: $.ajax( { ..., data: obj1, ...}; the values get sent as individual key value pairs. Is this proper behavior?
[18:52:29] <SlimmyJimmy> What do I check to make sure that $.ajax() is sending a JSON object?
[19:00:22] <pavonia> You most likely want a POST request in that case where the the request body is the stringified object
[19:07:25] <SlimmyJimmy> I am using method: "POST" but I don't understand why it's not being sent in JSON form. It goes back as just key=value pairs.
[19:08:54] <SlimmyJimmy> Wait a second....do I have to manually stringify my javascript object?
[19:09:00] <SlimmyJimmy> I guess I can do that.
[19:09:29] <SlimmyJimmy> If jQuery won't do it then I have no choice but to take matters into my own hands...
[19:12:58] <shoky> SlimmyJimmy: yes you need to stringify it yourself
[19:13:32] <SlimmyJimmy> shoky well...okay then.
[19:13:59] <SlimmyJimmy> why is that?
[19:16:32] <shoky> SlimmyJimmy: jquery only handles JSON responses for you automatically, not the requests. i'm not sure why, but at least it makes sense that the default is to send the key/values because that's very common too
[19:17:47] <SlimmyJimmy> shoky sure, its common enough but with all the variables involved it seems like it would be possible if they wanted to do it for you. There is already an option called 'processData' which is a boolean.
[19:19:02] <shoky> SlimmyJimmy: yep it's possible if they wanted to
[19:22:05] <pavonia> It's consistent with how HTML forms data is send to the server
[19:25:36] <SlimmyJimmy> $.ajax() method itself is not the most common way of sending data back to a server in my opinion.
[19:29:15] <pavonia> What else is?
[19:32:06] <SlimmyJimmy> Using a standard HTML <form> element and a standard HTML button.
[19:34:07] <shoky> why does it matter which way is more common :S
[19:35:33] <SlimmyJimmy> It doesn't matter, which makes it even funnier you made the statement. Your the one who used the words 'very common' @ 18:16:32. :)
[19:35:36] <pavonia> Both GET and POST data encodings are the same for standard and for AJAX requests, and that makes perfect sense, IMHO. If you want another encoding, use it explicitly
[19:41:41] <shoky> yes but it mattered when i said it :)
[20:53:09] <SlimmyJimmy> So it turns out you don't need to stringify your JavaScript objects. jQuery does it for you. :X
[20:54:59] <SlimmyJimmy> Well, I guess It doesn't.
[20:55:02] <SlimmyJimmy> :)
