[03:47:40] <AdamPDotty> there came the bus
[03:48:00] <Cork> Rockwood: what are you trying to do?
[03:48:08] <Cork> why do you need to wait for the load event?
[04:03:04] <BrianMiller> Can I have such selectors in jQuery? $("."+els[i].id+"")
[04:05:48] <Cork> and what selectors are that?
[04:06:11] <Cork> all i see is that you're building the selector from a variable
[04:06:27] <Cork> and ya, jquery just cares that it is a well formated css strings selector
[04:08:05] <BrianMiller> Cork: It comes from var els = document.querySelectorAll('input:checked');
[04:08:27] <Cork> do console.log("."+els[i].id)
[04:08:49] <Cork> if what you get a valid css selector then ya
[04:10:05] <BrianMiller> Cork: It's from a for() loop
[04:10:11] <BrianMiller> Cork: I can't call it just like that
[04:10:19] <Cork> you can
[04:10:34] <Cork> just add it in the loop and look in the console when the code runs
[04:10:43] <BrianMiller> Cork: Actually, yes, my bad. It does return a valid selector
[04:35:00] <BrianMiller> Cork: I'm trying to move an element from one place to another (in the DOM). However, I need to appendTo() it to a new element, instead of a currently existing one: $("."+els[i].id).detach().appendTo($("<div class='tab'></div>").appendTo($(".container")));
[04:35:34] <Cork> if you need to replace children, just use .html()
[04:37:34] <BrianMiller> Cork: So: $("<div class='tab'></div>").html("."+els[i].id); ?
[04:38:01] <Cork> no, that would replace it with the selector text
[04:38:08] <BrianMiller> $("<div class='tab'></div>").html( $("."+els[i].id) );
[04:44:39] <AdamPDotty> He did not say replace. I would feel more comfortable with $(newDiv).append($(searchedElement)).
[04:45:03] <AdamPDotty> No need to attach then. Maybe there are drawbacks I am not aware of.
[04:45:15] <AdamPDotty> s /attach/detach/
[04:45:19] <Cork> AdamPDotty: "it to a new element, instead of a currently existing one"
[04:45:28] <Cork> so yes he did
[04:45:44] <BrianMiller> AdamPDotty: The whole is that I have forms with display:none and I want to display only certain ones (depending on what the user chooses)
[04:46:24] <AdamPDotty> For visibility you do not need to manipulate the DOM.
[04:46:39] <BrianMiller> AdamPDotty: So this introduces several problems: (1) how to move the forms up the DOM where I want to display them and (2) how to change the display property only of the moved element
[06:09:03] <original> Hello. I have a small code that gets an image height and assigns it to a dov with height() function. Some times works well and sometimes not. In chrome always gets correct value, but in Firefox sometimes is cached height is too small! What can be?
[07:00:41] <Cork> original: you have to wait for the image to load (the load event on the image)
[07:00:58] <Cork> original: before that event you get the fallback size of the img tag
[07:01:27] <Cork> (or the partial size if the image has loaded, but not completely)
[08:40:10] <preference> quick script to change background-color of element based on whether it's between 0900-1500 hours or not?
[08:40:16] <preference> default red, if between 0900 and 1500, then green?
[08:42:10] <Cork> well then you would have to figure out how to convert that to 0,0 - 255, 255
[08:43:24] <preference> var time = new Date().getHours(); if time < 9 and time 15 > { element.css("background-color", "green")}; ?
[08:43:32] <preference> something like that?
[08:43:33] <Cork> lol
[08:43:43] <Cork> so you don't want to fade it?
[08:43:45] <Cork> just flip?
[08:43:45] <preference> no
[08:43:47] <preference> ya
[08:43:57] <Cork> ah, ya, that makes it a lot simpler :)
[08:44:15] <Cork> and ya
[08:44:31] <Cork> i would prob use a class instead though
[08:44:35] <preference> of course
[08:44:39] <preference> just using element as a placeholder
[08:44:42] <preference> but that should be functional?
[08:45:24] <preference> woops, if time > 9 and time < 15
[08:46:23] <Cork> something like var time = (new Date()).getHours(); element.addClass('work', time > 9 && time < 15); ya
[08:46:40] <preference> thank you
[08:47:53] <preference> Cork: wait a sec, i need to tie this to a specific timezone
[08:48:08] <preference> specifically UTC+0 (or GMT/BST)
[08:48:27] <Cork> getUTCHours()
[08:49:19] <preference> great
[08:58:14] <preference> https://jsfiddle.net/j7c6en2t/
[08:58:32] <preference> no idea why this doesn't work
[09:07:50] <noahsiano> preference, change .CSS() to .css()
[09:07:56] <noahsiano> then it works fine :)
[09:09:11] <Cork> preference: that won't ever turn back though
[09:10:11] <preference> rofl, thanks noahsiano
[09:10:21] <preference> Cork: ya, i know
[09:13:01] <noahsiano> I think he's just getting that quick css change tested @Cork
[09:13:15] <noahsiano> the .addClass() method is def the way to go though
[09:13:25] <noahsiano> or .toggleClass() might be best
[09:13:37] <Cork> lol, ya my typo actually
[09:13:45] <Cork> addClass doesn't take a second argument :P
[09:14:30] <preference> noahsiano: this is for a tiny little bit of code in the header of a page, feels like making a whole class for it would just make it bulky for no reason
[09:14:59] <Cork> preference: css class, not javascript :)
[09:15:41] <preference> i thought you were talking about creating a class like "active" and then add the class "active" to the <span> during the appropriate hours
[09:15:54] <Cork> yes
[09:16:02] <Cork> preference: and that isn't bulkier
[09:16:04] <preference> in which case i'd have to make a CSS class .active { background-color: green; }; just to change the color when i could do it in one line in jquery
[09:16:11] <Cork> it is letting the dom keep the state
[09:16:26] <preference> what do you mean by that?
[09:17:05] <Cork> if you have <div style="background-color: red"></div> $('div').css('background-color', 'green');
[09:17:15] <Cork> how do you "revert" it without having to know what it was?
[09:17:32] <preference> ok, i see
[09:17:41] <preference>   if (time > 9 && time < 15) {     $(".available").css("background-color", "green");   }   else {     $(".available").css("background-color", "red")   }
[09:17:46] <Cork> meaning, javascript gets cluttered with styling info
[09:17:58] <preference> but it would be easier to add/remove a class and leave it default as red rather than actually flipping it each itme
[09:17:59] <Cork> that is meant to be in the stylesheet, for maintainability
[09:18:26] <Cork> preference: ya, but the point is, styling shouldn't be in javascript
[09:18:35] <Cork> when you want to add more styling it becomes a pain if you do
[09:18:39] <preference> i know
[09:18:54] <Cork> like if you 6 months later has to set a pink color for 18-21
[09:19:00] <NoiseEee> https://jsfiddle.net/j7c6en2t/1/ @ preference
[09:19:04] <NoiseEee> something like that
[09:19:10] <NoiseEee> listen to Co
[09:19:11] <NoiseEee> Cork
[09:19:21] <NoiseEee> JS is no place to talk about style attributes
[09:19:40] <Cork> actually, not really like that ^^'
[09:19:43] <NoiseEee> use classes, for both design AND as Cork says, "state", or really just using semantics
[09:19:47] <preference> the reason why i'm reluctant to do so is because i want the code to be in one place
[09:19:53] <preference> it's not that i have an aversion to adding classes
[09:20:02] * AdamPDotty likes semantics
[09:20:04] <preference> it's that there's a backlog of other code which i don't want to potentially mess with
[09:20:19] <NoiseEee> but now you can query your DOM and instantly know what slots are "Available"
[09:20:21] <NoiseEee> etc etc
[09:20:27] <preference> i don't know what that means
[09:20:37] <preference> but ya, i'll just do it by class
[09:21:07] <Cork> i meant more like https://jsfiddle.net/j7c6en2t/3/
[09:21:25] <preference> .toggleClass adds the class if it's not present and removes the class if it is present?
[09:21:29] <NoiseEee> yeah i just meant the concept of toggleing a class
[09:21:46] <NoiseEee> indeed preference
[09:22:06] <preference> what is setInterval(mark, 60000), Cork?
[09:22:09] <Cork> or if you provide a second argument, based on if it is true or false
[09:22:14] <preference> run every 60k miliseconds?
[09:22:23] <Cork> preference: to update the coloring as the time changes
[09:22:38] <Cork> once a minute in this case
[09:23:17] <preference> okay
[09:23:26] <preference> thanks all for help, it's appreciated as always :)
[09:23:32] <preference> will do it like Cork suggested
[09:25:10] <preference> btw, retrieving the time like this every 60 secs and on page load shouldn't have a noticeable impact on site loading time, right?
[09:25:20] <Cork> no
[09:25:59] <Cork> be careful with how big the page gets though, cause that could technically be costly
[09:26:10] <Cork> but unless you have 4-5 digits it should be fine
[09:26:28] <preference> 4-5 digits?
[09:26:42] <Cork> number of elements matched by $(".scheduleItem")
[09:26:56] <preference> just one little span :)
[09:27:22] <Cork> heh if it is explicitly one element, then ya, you don't have any worry xD
[09:27:34] <NoiseEee> you can also help it along with $('span.scheduleItem')
[09:27:47] <Cork> that is actually not faster
[09:27:57] <preference> that seems like it would be an extra lookup
[09:28:04] <Cork> the browser has to do more to select span.scheduleItem then just .schedulItem
[09:28:10] <NoiseEee> interesting
[09:28:23] <NoiseEee> well f that then
[09:28:42] <Cork> you could go with an id to make it faster, but... that is getting silly
[09:28:57] <preference> it checks id before class?
[09:28:59] <Cork> you won't notice that difference for this load
[09:29:02] <Cork> a tiny bit ya
[09:29:27] <Cork> ids always only match one element, so the browser doesn't have to do the multiple lookup work
[09:29:49] <Cork> but both are hash table lookups so... it is marginal
[09:29:51] <preference> that makes sense intuitively, but what is the practical difference in the algorithm?
[09:30:12] <Cork> the browser doesn't actually search the dom
[09:30:28] <Cork> if you have a simple id or a simple class it just looks directly in the hash table it has
[09:30:47] <Cork> when you make compound selectors it will have to start searching the dom though
[09:31:24] <preference> right, but id=scheduleItem is not a compound selector, and nor is class=scheduleItem
[09:31:40] <Cork> those are attributes :)
[09:32:10] <Cork> the compound are in $('#scheduleItem') $('#scheduleItem') vs $('body #scheduleItem') $('body .scheduleItem') or $('div#scheduleItem')
[09:32:42] <preference> right
[09:32:44] <Cork> the more depth specificy you add to a selector, the slower it gets
[09:33:20] <Cork> so $('#body-id > header > section > a > span.link') is much slower then $('header span.link')
[09:33:41] <Cork> in relative terms though
[09:33:53] <Cork> none of those selectors are meaningfully slow :)
[09:40:23] <undefined_bob> hey Cork you helped me so much in the past, I wondered if you're interessted in seeing the final website I build for so long time?
[09:41:27] <Cork> so you've gotten the menu working huh?
[09:42:03] <undefined_bob> yes, sir. there is still one flaw in it but its okay
[09:42:17] <Cork> nice
[09:42:58] <undefined_bob> was a tough task for me, tho
[09:43:37] <preference> now my code doesn't work at all. won't even log to console :(
[09:45:28] <Cork> preference: and no parsing errors?
[09:47:29] <preference> Cork: i've fiddled about with it and put your line here in:  	 $(".scheduleItem").toggleClass('available', (time > 9 && time < 15))
[09:47:33] <preference> now it works, but it still won't log anything to console
[09:47:41] <preference> which it used to do fine
[09:47:47] <preference> anyway, it's functional for now
[09:51:32] <preference> Cork: you make me feel so productive haha :)
[10:51:05] <bigode> When I use the method animate to scroll up a div it looses the main window scroll cutting the div at the position I sent it up. Is there a way to use the main window instead of the div to keep the full scroll active?
[10:53:36] <bigode> As https://codepen.io/0rf30/pen/bMExXa
[10:54:22] <bigode> If I click on anchor two in the menu it moves to the second div but I loose track of the full page scroll...
[15:04:06] <taplar> another slow day
[15:26:29] <saltlake> Anyone there?
[15:28:44] <taplar> sup
[15:29:54] <saltlake> success: is not called during .ajax()
[15:29:56] <saltlake> why?
[15:30:16] <taplar> something about the request failed
[15:31:12] <pavonia> saltlake: Is error called?
[15:31:24] <taplar> for success to happen, the request has to get a good response code, and if there is any parsing errors with the response it will also not go into the success
[15:32:51] <saltlake> http://dpaste.com/00KT2NM
[15:33:19] <saltlake> in console output i see: SyntaxError: JSON.parse: unexpected character at line 1 column 1 of the JSON data[Learn More]
[15:33:50] <taplar> ok, so first off, crack open your developer tools and find your reqest
[15:33:53] <taplar> *request
[15:34:19] <taplar> you'll want to have the network tab showing before the ajax request is made
[15:35:02] <saltlake> Yes, it's GET 200 request
[15:35:12] <taplar> ok, and look at the response, does it look right?
[15:35:21] <saltlake> http://localhost/actions/removeimage.php?image1=Screenshot_2018-05-07-20-37-20.jpg
[15:35:35] <taplar> we can't see your localhost
[15:35:57] <saltlake> <br />
[15:35:57] <saltlake> <b>Notice</b>:  Undefined variable: image1 in <b>/var/www/html/portfolio/actions/removeimage.php</b> on line <b>5</b><br />
[15:36:00] <saltlake> {"image1":null}
[15:36:25] <taplar> so you're response is not valid json
[15:36:43] <saltlake> removeimage.php = http://dpaste.com/15E4F0M
[15:36:49] <saltlake> How can I make it valid json?
[15:37:05] <taplar> fix your issue in your endpoint
[15:37:09] <taplar> it's telling you something is wrong
[15:37:37] <NoiseEee> that is also insanely insecure
[15:37:59] <NoiseEee> you're deleting something off the filesystem based on an argument provided by a user??
[15:38:20] <taplar> ^^^
[15:38:21] <NoiseEee> what if I made $_GET['image1'] = '../../../../etc/passwd'   etc
[15:40:01] <saltlake> How can I make it secure?
[15:40:50] <taplar> one way would be to come up with some sort of mapping schema
[15:41:03] <NoiseEee> something like passing the image id or a hash to the script, where the path to the file is looked up in the DB
[15:41:05] <taplar> giving each file a "key"
[15:41:06] <NoiseEee> ^^
[15:41:18] <NoiseEee> something.php?action=delete&key=abc123
[15:41:34] <taplar> where the key does not directly relate to something on the system
[15:41:43] <taplar> but your logic knows how to turn that key into the reference to the file
[15:42:04] <taplar> if the user gives you a key you don't recognize, you just ignore it
[15:42:22] <taplar> or respond with a 400 Bad Request
[15:42:36] <saltlake> I can give the image an id
[15:44:03] <taplar> also personally i'd make this a DELETE request, but that's me being all restful
[15:47:39] <saltlake> What is the benifit of DELETE request instead of GET request?
[15:47:58] <saltlake> If I add id for an image, still same problem: $_GET['image1'] = '../../../../etc/passwd'
[15:48:30] <taplar> Outside of PHP, other language allow you to map that specific request type to logic specific to that type of request.
[15:48:42] <taplar> In PHP you have to do a little work to use it.
[15:48:53] <taplar> But the idea is that the request reflects what you are trying to do
[15:49:07] <NoiseEee> saltlake: then the DB query becomes 'select image from imageDatabase where specialKey='../../../etc/passwd'   which returns nothing
[15:49:20] <NoiseEee> (also please bind variables in your sql)
[15:50:34] <saltlake> I have uploaded image temporarily, still its url not stored in database,
[15:50:50] <NoiseEee> well you should be doing that
[15:50:51] <saltlake> Now if someone wants to delete the image from uploads/ folder, then what will we do?
[15:51:10] <saltlake> that means undoing uploading
[15:51:26] <NoiseEee> please tell me you "uploads" folder isnt directly accessible on the web
[15:51:26] <saltlake> delete from uploads/ directory
[15:51:31] <NoiseEee> ie: http://someSite/uploads
[15:51:32] <taplar> you could generate a random key for the files and store them in their $_SESSION potentially
[15:51:44] <NoiseEee> or store them in a DB
[15:52:10] <NoiseEee> write a script that gives them all IDs, stores them in a db, and of course moves them tf out of a publically available folder
[15:52:54] <saltlake> uploads/ is not directly accessible to public
[15:53:06] <saltlake> it has 644 permission from cpanel, i think
[15:53:37] <NoiseEee> as long as you can't http://some.site/path/to/uploads
[15:53:43] <saltlake> site.com/uploads/ returns 404 not found
[15:55:36] <saltlake> but a script can access uploads/ , i don't know
[15:56:31] <taplar> the script is being ran by the server, so directory access will depend upon what authority the server has
[15:56:49] <Ontaine> Hello i Need some advice. I hope it is clear what i want to achieve. I am having data ( a list of crypto coins, date when the coins are inserted in the database and they're prices) in a database and i am showing it with AJAX on my page. I want to compare the price that is in the database with the price that i am getting from the API. Any directions on how to achieve it?
[15:57:31] <taplar> Uh, that's a fairly broad question.  Which part of that are you having issue with?  Ontaine
[15:58:10] <Ontaine> I want to compare the price that is in the database with price of the API.
[15:58:32] <taplar> So are you asking how to do that with the database, or are you asking how to send the data from the client to the server so it can do that?
[15:58:50] <taplar> Because questions about database operations are off topic for the room
[15:59:19] <Ontaine> The database is clear. how to send the data from the client to the server so it can do that?
[15:59:52] <taplar> It depends.  You could do a normal form submit to send the data, or you could do an ajax request, which would allow you to make the request without a page transfer.
[16:00:31] <saltlake> Yes, I checked, any script can remove image from uploads/ directory , so how can I stop it?
[16:00:59] <taplar> saltlake: you don't stop it.  you just need to allow validation, which is what we've been talking about
[16:01:12] <taplar> as you had your script, the operation was completely unvalidated
[16:01:45] <Ontaine> Yes I have the AJAX request solution to retrieve the data. That is not the problem. The "problem" is on how to compare the price that i have retrieved from the database with the price of the API.
[16:02:00] <saltlake> taplar: validate what?
[16:02:07] <NoiseEee> saltlake: you change the way you have designed things, you change the way you display images and delete them
[16:02:14] <taplar> Ontaine: you'd have to make another request for that.  Or pull all the data from the database and do the comparison on the client side
[16:02:29] <Ontaine> Because the price in the database is maybe 10 days old and the price i get from the API is from today
[16:02:39] <saltlake> NoiseEee: I display image from select from database
[16:02:53] <saltlake> NoiseEee: problem with deleting image during uploading
[16:03:00] <Ontaine> And i want to see the difference of the price
[16:03:02] <NoiseEee> saltlake: i get it. we're saying that you also need to come up with a hash/code or something to store along with that image
[16:03:11] <saltlake> NoiseEee: Someone can undo uploading, then you need to delete from directory
[16:03:14] <taplar> Ontaine: same answer man.
[16:03:42] <Ontaine> @taplar  ok, i see...
[16:03:58] <NoiseEee> saltlake: and then when displaying the image on your page, you also include it's "id', ie: <img data-id="abc123"
[16:04:16] <NoiseEee> saltlake: so when the user says 'delete', you pass the data-id to the "delete" php script
[16:05:12] <saltlake> NoiseEee: You don't have id of that image before submiting the content, "first upload the image, no id yet for image, then submit the form, then we have id of image and content/post"
[16:05:27] <NoiseEee> saltlake: your 'upload' script creates an ID
[16:05:39] <taplar> "some how", :)
[16:06:02] <NoiseEee> saltlake: the backend makes sure its an image, then after that, creates a hash or code or uuid or whatever, and stores it in the DB too
[16:06:19] <NoiseEee> so "abc123" = the cool photo that Jimmy uploaded
[16:06:31] <pavonia> Ontaine: What do you mean by the price of the API? Where does that value come from?
[16:06:34] <taplar> personally it would make sense to me for that to be a new table
[16:07:58] <Ontaine> @pavonia I have a list of coins in my database that i added manually with the price at that moment. the other price is comping from an free online API.
[16:08:10] <Ontaine> coming*
[16:08:19] <Ontaine> i want to compare those two prices
[16:08:30] <taplar> TABLE upload_temp COLS id(int), userid(varchar), file(varchar) .... of some flavor
[16:08:55] <taplar> user uploads a file, stick it in the table as a reference, with the id being auto incrementing
[16:09:21] <pavonia> Ontaine: I don't see where the problem is. If you got both values by a request, you can easily compare them from your client code
[16:09:21] <taplar> then when they want to delete something, have them pass the id.  then you look up the id, also selecting on their userid, to get the file path
[16:10:51] <Ontaine> @pavonia the problem is i am getting 1200 coins from the API with the current price, how can i search for my coins (the one i have in the database) in the request of the API.
[16:11:31] <Ontaine> I only have 6 coins in my database
[16:11:34] <NoiseEee> depends on what the api result looks like
[16:11:41] <NoiseEee> is it an object?
[16:11:47] <NoiseEee> does it use coins as keys?
[16:11:55] <NoiseEee> we don't know what you're dealign with
[16:12:00] <NoiseEee> is it JSON?
[16:12:02] <saltlake> taplar: So when you delete a image, will pass the id to php-script? $_GET['id']?
[16:12:03] <NoiseEee> etc
[16:12:11] <taplar> saltlake: sure
[16:12:34] <taplar> you'd need the id and the userid associated with who created it (potentially)
[16:12:43] <saltlake> then the same problem, someone can pass autoincremented id from 1..100000 to delete all images
[16:12:47] <saltlake> to php script
[16:12:52] <taplar> that's what the userid is for
[16:12:53] <Ontaine> @NoiseEee http://coincap.io/front
[16:12:56] <Ontaine> this is JSON
[16:13:05] <NoiseEee> saltlake: thats why you would use a HASH or something other than a strict ID
[16:13:18] <taplar> if you also associate the user with an id of some sort, then they can only delete those images they uploaded
[16:13:22] <NoiseEee> saltlake: or you can associate a userID with them so they can aonly delete their own
[16:13:22] <NoiseEee> etc
[16:13:24] <saltlake> taplar: someone can pass userid too to that php-script
[16:13:29] <taplar> nope
[16:13:34] <taplar> you don't let a person tell you who they are
[16:13:43] <taplar> that's something you store in session based upon authentication
[16:14:13] <taplar> we're getting way off topic on this though
[16:14:20] <saltlake> taplar: userid will be integer, but email can be usefull
[16:14:52] <taplar> whatever works man.  just something to identify the user, that is not up to the user to provide to you
[16:14:55] <saltlake> NoiseEee: userid is autoincremented integer too
[16:15:24] <NoiseEee> saltlake: again, the BACKEND knows who is logged in based on a session right?  that user token isnt part of what gets sent to the client
[16:15:54] <NoiseEee> saltlake: or don't use incremental IDs, use UUIDs or similar
[16:16:16] <taplar> how the userid is created shouldn't matter.  a user should only have one userid
[16:17:08] <saltlake> NoiseEee: How can I make UUID?
[16:17:10] <NoiseEee> backend.php = receive request;  does this user (based on $_SESSION['loggedInUserID']) own the image they want to delete?  yes?  get the image path from the db.  no?  don't do anything
[16:17:56] <NoiseEee> saltlake: https://github.com/ramsey/uuid is a good one, but this is more heading into the ##php realm
[16:18:08] <taplar> :)
[16:19:52] <saltlake> Ok, thank you all
[16:34:25] <robertmaxrees> weeeeeeeeeee
[22:06:56] <saltlake> during .ajax() if we pass the userid and imagename, then select from table with userid and imagename and delete the image from uploads/ directory, is there any security problem?
[22:30:16] <pavonia> saltlake: How do you build the SQL query from the request data?
[22:32:47] <saltlake> with parameterized sql query
[22:34:15] <pavonia> And is the userid verified by the server?
[22:38:43] <saltlake> userid/email is stored in session after logging in
[22:42:03] <pavonia> So the userid is not passed in the AJAX request?
[22:43:20] <pavonia> You just need to make sure the user cannot provide another userid which is then used to delete the image
[22:46:17] <saltlake> no, userid will not be passed in .ajax(), userid will be checked in script from session
[22:50:12] <pavonia> Okay, that sounds good conceptually
