[01:57:06] <devi8> can someone explain how jquery "chains" functions. I understand that they work $(el).dosomething(params).dosomethingelse(params). But how does it work?
[01:58:10] <Cork> devi8: var o = {}; o.t1 = function() { return o; }; o.t2 = function() { return o; }; o.t1().t2()
[01:58:12] <Cork> basically
[01:59:15] <devi8> i assume the jquery engine splits the requested action and just runs them sequentially?
[01:59:29] <Cork> nope
[01:59:40] <Cork> it happens exactly the same as the code snippet i gave you
[01:59:54] <Cork> jquery isn't an enterpriter it is just a collection of javascript functions
[02:00:02] <Cork> hanging on a shared object
[02:00:08] <Cork> (jQuery or $)
[02:01:02] <devi8> but how does it know to use the returned value of o.t1 to call o.t2
[02:01:14] <Cork> cause you return it?
[02:01:38] <devi8> I'm going to make a fiddle with your example to see it work. brb
[02:01:39] <Cork> o.t1().t2() is identical to o.t1(); o.t2()
[02:01:50] <Cork> or var a = o.t1(); a.t2()
[02:03:12] <devi8> the reason I am asking is I was wondering if there was a way to return both a jquery ob ject and an extra parameter without messing up the chaining
[02:03:25] <Cork> no
[02:04:43] <Cork> javascript doesn't have optional return values
[02:05:07] <Cork> in ecmascript 6+ you can return multiple values and have them split
[02:05:21] <Cork> but then you will have to split them into variable names before trying to access them
[02:06:17] <Cork> what you can do though is something like var o = {}; o.t1 = function() { return { $: jQuery, r: 10 }; }; o.t1().$() (or something
[02:06:36] <Cork> but it would need to add an additional step to the next caller to jquery
[02:09:34] <devi8> thanks for the explanation.
[02:11:47] <devi8> Heres an ugly idea. What if you wrote a method that took a jquery object then looked at one if its data-properties to modify it's behavior and returned an element with the modified data property...it wouldn't break chaining and you could pass data with it.
[02:19:40] <Cork> well if you are ok with attaching your return value to the jquery object you can just do that
[02:19:57] <Cork> jquery generate new objects for each selection so you won't make a global value
[05:58:22] <ubik123> Helo,
[05:58:26] <ubik123> I've got a question.
[05:58:52] <ubik123>  $( "#settingscompany" ).click(function() {
[05:58:53] <ubik123>              $('#settingscontent').load('settingscompany.html');
[05:58:53] <ubik123>           });
[05:59:03] <ubik123> When I do this
[05:59:07] <ubik123> my page loads fine
[05:59:34] <ubik123> But when I click a second time, then the javascript of settingscompany.html isn't reloaded
[05:59:45] <ubik123> How can I achieve, that the javascript will be reloaded?
[05:59:47] <ubik123> Thanks!
[06:36:12] <Rojola> hi
[06:36:38] <Rojola> I would like to kindly ask for some help
[06:36:46] <Rojola> It's about the following line:
[06:36:47] <Rojola> $(".checkbox_class").change(function() { $(".checkbox_class").prop('checked',false); $(this).prop('checked',true); });
[06:37:06] <Rojola> unfortunately, the checkboxes have no class
[06:37:13] <Rojola> they look like this:
[06:37:18] <Rojola> <input type="checkbox" name="foo[bar][2]" id="foo_bar_2" value="1">
[06:37:51] <Rojola> how can I select them in jquery?
[06:38:17] <Rojola> should I select them by name?  or by id ?
[06:38:26] <Rojola> there are multiple such checkboxes
[06:38:36] <Rojola> and the number in the id and name changes!
[06:40:56] <pavonia> Rojola: Perhaps you can select by type and a common container element?
[06:41:21] <Rojola> maybe... I need to check if there is a container that I can address
[06:41:30] <Rojola> pavonia, in vanilla JS, it would be like this:
[06:41:32] <Rojola> document.querySelectorAll('input[id^="foo_bar_"]')
[06:41:36] <Rojola> can this be done in jquery?
[06:41:54] <pavonia> Yes, but it's less performant
[06:42:26] <Rojola> brb, I check for a container
[06:42:58] <Rojola> ha! the <form> has an id!
[06:43:25] <Rojola> I want to address _all_ checkboxes in the form with the id "foo" (foo is a placeholder for this public chat)
[06:43:57] <Rojola> thank you for the tip pavonia
[06:44:03] <Rojola> I go read on selecting in jquery now =)
[06:44:40] <pavonia> Selecting in jQuery isn't much different that in pure JS, I think
[06:45:23] <Rojola> well, it is... in pure JS I would go through all findings in a loop
[06:45:45] <Rojola> and then apply an eventListener to every single one of them
[06:46:22] <pavonia> I meant writing the selector. jQuery has a few extras, but otherwise the syntax is pretty much the same
[06:46:50] <Uhkis> Rojola: replace "document.querySelectorAll" with $ and you're done
[06:47:28] <Rojola> Uhkis, for real? :)
[06:47:30] <Rojola> thank you
[06:47:39] <Rojola> thank you pavonia and thank you Uhkis
[06:47:56] <pavonia> No problem :)
[06:53:24] <Rojola> I am sorry, I think I am on the wrong way
[06:53:27] <Rojola> https://filebin.net/5uzjgd9vx3ogbwaa/checkboxes_03.html?t=gagos7j3
[06:54:48] <Rojola> oh
[06:54:50] <Rojola> checkbox...
[06:54:53] <Rojola> I have to use "input"
[06:56:53] <Rojola> ok, it works
[06:56:55] <Rojola> https://filebin.net/0o1gltn7ac8fljq8/checkboxes_03.html?t=vi1ekhb6
[06:57:10] <Rojola> I checked it in 3 different browsers and it seems to work
[06:57:20] <Rojola> anyway - is there anything wrong about it?
[06:58:39] <pavonia> That event llistener thingy can be removed, have a look at https://api.jquery.com/ready/
[06:58:53] <Rojola> and the rest of the script is OK?
[06:59:05] <Rojola> pavonia, I am wondering, because in pure JS, I would need _much_ more cod
[06:59:06] <Rojola> *code
[06:59:45] <pavonia> Yep, jQuery was made to remove all the boilerplate code ;)
[07:00:43] <Rojola> really nice
[07:00:45] <Rojola> thank you pavonia !
[07:01:23] <Rojola> I replaced now:
[07:01:24] <Rojola> document.addEventListener("DOMContentLoaded", function(event)
[07:01:25] <Rojola> with
[07:01:29] <Rojola> $(function() {
[07:05:14] <Rojola> sorry, me again
[07:05:18] <Rojola> so, it worked in my test-script
[07:05:29] <Rojola> now, that I implemented it in the website using jquery, I get this error:
[07:05:42] <Rojola> Uncaught TypeError: $ is not a function at ...
[07:06:50] <Rojola> https://stackoverflow.com/a/12343739
[07:24:18] <Rojola> thank you pavonia
[07:24:19] <Rojola> bye bye :)
[07:24:22] <Rojola> have a nice day!
[07:25:04] <paule32> hello
[07:25:21] <paule32> https://jsfiddle.net/m45p3c1h/
[07:25:52] <paule32> why is the text 23123 ...  not background colored in black; ?
[07:33:38] <Cork> paule32: https://jsfiddle.net/m45p3c1h/2/
[07:33:44] <Cork> cause the element isn't height enough
[07:34:10] <Cork> it is positioned behind "Project" but the text is moved
[07:36:23] <FilipNortic> paule32:  In general, opening the editor and inspecting the element tells you which css rules are used. And toggling them one after one usally lead you to the answer
[07:37:01] <paule32> thank you both guy's
[07:37:05] <paule32> it work
[07:37:55] <Cork> paule32: the change i did wasn't meant as a fix, it was to show the problem
[07:38:17] <Cork> you should fix the error correctly, but that depends on decising what you want it to actually do
[07:38:42] <paule32> learning web2 html5 jquery
[07:57:35] <paule32> is it possible to makeup a div so, that text stands left and right, not middle
[07:57:39] <paule32> e.g.:
[07:57:50] <paule32>  Help    >
[07:58:05] <paule32> the Help item is text, and > for submenu
[07:58:36] <Cork> not with one element
[07:58:41] <paule32> or should i child coding
[07:58:55] <paule32> ok
[08:26:07] <sine0> how do i get variable type
[08:44:30] <Cork> there is no type in javascript
[08:45:02] <Cork> its just name and data
[12:54:42] <ka1ser> hi all
[12:54:51] <ka1ser> ppl still live in these channels?
[12:55:12] <ka1ser> got a jquery question
[12:59:11] <cthulchu> just ask it
[13:02:11] <ka1ser> Regarding vulnerability https://nvd.nist.gov/vuln/detail/CVE-2017-16045... using old jQuery 1.11... it says `jquery.js` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm. .... how can I fix it? as it seems to imply simply any jQuery is malicious?? upgrading to latest jQuery would help??
[13:08:47] <pavonia> ka1ser: This packages is not related to jQuery in anway, as far as I understand
[13:09:00] <pavonia> *any way
[13:17:29] <ka1ser> what do you mean pavonia? can you elaborate? why I am getting this vulnerability warning then?
[13:19:03] <pavonia> Compare https://www.npmjs.com/package/jquery.js and https://www.npmjs.com/package/jquery
[13:19:12] <pavonia> These are two unrelated packages
[13:19:37] <pavonia> Also, you didn't mention where or why you got that warning
[13:20:38] <ka1ser> someone ran a vulnerability scan with Protecode
[13:21:46] <ka1ser> I see what you mean
[13:22:05] <ka1ser> then I can't still understand why Protecode detected jquery.js npm package
[13:23:16] <robertmaxrees> ka1ser jquery.js isn't jquery
[13:23:40] <robertmaxrees> the jquery.js npm module was malicious.
[13:23:56] <robertmaxrees> i assume you have a package.json, yes?
[13:24:00] <ka1ser> yes, now I understand... thanks!
[13:24:03] <ka1ser> yes, I do
[13:24:17] <robertmaxrees> make sure you're not referencing jquery.js and udpate your deps :)
[13:24:40] <robertmaxrees> that warning could be because you have something in your bundle that's pulling it in.
[13:27:33] <ka1ser> oh let me search for that! thank you sir! :)
[14:46:52] <spinningcat> do you have vbetter suggestion https://www.jqueryscript.net/demo/Daily-Schedule-Plugin-jQuery-Scheduler/
[15:07:16] <spinningcat> anyone use full calendar what is the reason of that error it is from tutorial http://jsfiddle.net/Lcdqrhnp/
[15:28:22] <Gh0st_Preacher> weeeee
[15:31:17] <robertmaxrees> spinningcat you mean the console error?
[15:32:45] <spinningcat> yeah but i fixed that
[15:32:50] <robertmaxrees> 'kay
[15:33:12] <spinningcat> do you know how can i make font resposive here
[15:33:15] <spinningcat> hmm
[15:33:19] <robertmaxrees> use css.
[15:33:29] <spinningcat> http://jsfiddle.net/eygd0m17/
[15:33:32] <spinningcat> right
[16:46:30] <MassDebates> I mean
[16:46:33] <MassDebates> if you turn off overflow
[16:46:34] <MassDebates> lol
[16:46:59] <MassDebates> fc lib has keys for making it responsive
[16:47:00] <MassDebates> iirc
[17:20:41] <jjrabbit> hello
[17:21:01] <taplar> aloha
[17:25:59] <jjrabbit> i have a strange issue
[17:26:41] <jjrabbit> i'm trying to do document.querySelectorAll('[data-group]');
[17:27:04] <jjrabbit> but it keeps returning something like {"jQuery321043915370922154362":{"position":0}}
[17:27:24] <taplar> got an example?
[17:27:27] <jjrabbit> any idea what the "jQuery5125412421...." is supposed to be?
[17:27:44] <jjrabbit> i tried replicating in jsfiddle but it doesn't show there lol
[17:27:51] <jjrabbit> something with my code i guess
[17:28:28] <jjrabbit> let me see if i can make one
[17:42:19] <jjrabbit> ok looks like somewhere else in my code i have a bunch of $('#id').attr('data-name', variable);
[17:42:35] <jjrabbit> i guess when you do that jQuery "tags" it somehow?
[17:42:59] <taplar> it will put the variable in the attribute
[17:43:06] <taplar> if the variable is not a string, it will do a toString on it
[17:43:15] <taplar> iirc
[17:43:26] <jjrabbit> yea that's what it's doing
[17:43:40] <taplar> which that's kinda a code smell, :)
[17:44:02] <jjrabbit> why's that?
[17:44:15] <taplar> well, an object isn't really a valid "name", eh?
[17:44:35] <taplar> and if you need to reference the actual object, data('name', variable) would be more appropriate
[17:44:46] <taplar> as data() doesn't turn it into a string
[17:44:55] <jjrabbit> i'm doing that to elements though, not objects
[17:45:07] <taplar> "elements"?
[17:45:19] <jjrabbit> yea, in my html
[17:45:38] <jjrabbit> i'm tracking the position of list item stuff
[17:45:49] <taplar> i'm not following.  you just said it's giving it a variable, and the variable is not a string, so it's toString'ing it
[17:46:01] <jjrabbit> ohh
[17:46:06] <jjrabbit> my bad, it's not a string
[17:46:08] <jjrabbit> it's an int
[17:46:37] <taplar> ok, then that wouldn't explain why it's setting that json on the value that you are finding
[17:46:47] <taplar> a Number would not do that
[17:46:56] <jjrabbit> hm okay you're right must be further down in my code
[17:47:11] <jjrabbit> that's the first thing that popped out at me though
[17:47:33] <jjrabbit> i'm also using .appendTo() methods
[17:47:39] <jjrabbit> it's probably from that
[17:48:02] <taplar> appendTo wouldn't affect attributes
[17:48:12] <jjrabbit> crap lol
[17:48:25] <taplar> $(newThing).appendTo(existingThing)
[17:48:30] <taplar> it's just adding elements
[17:48:49] <taplar> *child
[17:48:54] <jjrabbit> guess i need to start commenting stuff out
[17:49:14] <taplar> are you working in an IDE?
[17:49:39] <jjrabbit> i'm using vs code
[17:49:53] <jjrabbit> technically i am
[17:49:59] <jjrabbit> not doing anything fancy though lol
[17:50:15] <taplar> try Ctrl+Shift+F to bring up the global search, and try to find usages of: attr('data-name'
[17:50:50] <jjrabbit> cool i never used Ctrl+Shift+F before
[17:50:54] <jjrabbit> how's that different from Ctrl+F
[17:51:02] <taplar> *global* :)
[17:51:06] <jjrabbit> ah
[17:51:08] <jjrabbit> lol
[17:51:09] <taplar> searches all files in the project
[17:51:16] <jjrabbit> oh damn
[17:51:19] <jjrabbit> that's super cool
[17:51:35] <taplar> Ctrl+F is typically just the open file
[17:51:41] <jjrabbit> yea that's the one i always use
[17:52:35] <jjrabbit> yea it's something in this one file that's adding that long jQuery string
[17:52:48] <jjrabbit> it only comes up here
[17:52:53] <taplar> k
[17:56:46] <jjrabbit> alright well at least i know it's coming from this file
[17:57:16] <jjrabbit> i don't actually need to know what's adding it i was just confused since it's my first time playing with document.querySelectorAll
[17:57:43] <jjrabbit> anyway, thanks for the help!
[17:57:44] <taplar> well like i said it would probably be a good idea to track down what is doing that, because that's strange.
[17:58:10] <jjrabbit> yea i'm surprised you haven't seen it before
[17:58:13] <jjrabbit> i thought it was common
[17:58:22] <jjrabbit> guess not lol
[17:58:28] <taplar> not really
[17:58:38] <taplar> i dont' see attr() used much, honestly
[17:58:50] <jjrabbit> yea, i think data() is the newer method
[17:59:09] <jjrabbit> i think i came across attr() first in my search so accidentally started using that lol
[17:59:44] <taplar> it's not really that data is newer.  most of the time, imho, people change the dom properties vs the attributes
[18:00:57] <jjrabbit> what if my goal was to modify that data- attributes?
[18:01:11] <taplar> then it depends on what you are going to do
[18:01:32] <taplar> in this case, since you are intermixing jQuery and querySelectorAll, you really have to do attr
[18:01:42] <taplar> because jQuery data() doesn't update the attribute
[18:02:01] <jjrabbit> oh alright so i do use attr() here
[18:02:17] <taplar> which also begs the question of why you are intermixing vanilla and jQuery selector logic
[18:02:23] <jjrabbit> lol
[18:02:47] <jjrabbit> i feel like i'm kinda familiar with jQuery now and wanted to see if i can do things that (harder) vanilla js way
[18:03:06] <jjrabbit> harder for me, since i've only really used jQuery
[18:03:31] <taplar> that fine.  learning is always a good idea.  just potentially not a great idea to have something like that in a productional situation
[18:04:39] <taplar> since this is a prime example of bugs that could have been introduced, had you been trying to use the data() method
[18:05:31] <jjrabbit> ok so you're saying i should just stick with one or the other right?
[18:05:39] <taplar> ideally, yeah
[18:05:42] <jjrabbit> doesn't matter which one so long as i am consistent?
[18:05:45] <jjrabbit> ok yea
[18:06:02] <taplar> or have a really good reason for why you switch
[18:06:53] <jjrabbit> well my goal is to use jQuery only where there is no vanilla js alternative
[18:08:07] <jjrabbit> so stuff like find() i would use jQuery, but things like selecting elements/attributes/classes i will just us vanilla js
[18:08:15] <jjrabbit> use
[18:08:26] <taplar> vanilla has find as well
[18:08:32] <jjrabbit> oh lol
[18:08:43] <taplar> i mean that's what querySelector and querySelectorAll are
[18:08:55] <taplar> as well as the get*By* methods as well
[18:09:18] <jjrabbit> is querySelector newish?
[18:09:53] <taplar> should be as old as querySelectorAll
[18:10:01] <robertmaxrees> https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector
[18:10:07] <robertmaxrees> been around since IE8
[18:10:33] <jjrabbit> oh
[18:10:41] <jjrabbit> either way they got the idea from jQuery no doubt
[18:11:26] <robertmaxrees> http://blog.jquery.com/2014/01/15/the-jquery-foundation-and-standards/ talks about that a little :)
[18:11:55] <jjrabbit> awesome
[18:12:17] <taplar> but that's also a big consideration of using jQuery vs vanilla.  you're consideration for what is supported native or not is lessened greatly
[18:12:26] <robertmaxrees> ^
[18:12:41] <robertmaxrees> you also don't have to worry about differences between older browsers.
[18:12:47] <robertmaxrees> jquery "smooths" all that out.
[18:13:44] <taplar> Even apps that i've seen that do not use jQuery still typically throw in like lodash to smooth those things over.
[18:13:44] <jjrabbit> well don't all modern browsers pretty much support the same thing nowadays?
[18:14:01] <taplar> nope
[18:14:09] <jjrabbit> which one are you thinking of
[18:14:12] <taplar> there's still a lot of discrepencies between IE and Edge
[18:14:17] <jjrabbit> oh
[18:14:19] <taplar> and a ton of people are still on IE
[18:14:22] <jjrabbit> yea i pretty much gave up on IE
[18:14:46] <jjrabbit> btw i said modern lol
[18:15:02] <taplar> modern isn't typically the big concern.  market share is
[18:15:22] <taplar> if 40% of your potential customers use IE....
[18:15:29] <jjrabbit> then you have a use case
[18:16:34] <jjrabbit> i think maybe 1 percent of my visitors use something other than chrome/safari/edge
[18:16:37] <robertmaxrees> you also have to be careful with your analytics, as a broken experience can skew usage number.
[18:16:46] <robertmaxrees> *numbers
[18:16:54] <jjrabbit> true
[18:17:05] <robertmaxrees> check your bounce rates by browser
[18:17:24] <jjrabbit> i also think browser compatibility used to be a greater consideration prior to the release of edge
[18:17:34] <robertmaxrees> it still is a consideration.
[18:17:44] <robertmaxrees> mobile browsers can differ quite a bit.
[18:17:46] <jjrabbit> the farther we move from that time period the less relevant old browserr compatibility becomes
[18:18:02] <robertmaxrees> not necessarily true :)
[18:18:08] <jjrabbit> i know there's exceptions!
[18:18:10] <robertmaxrees> you assume everyone on windows is on windows 10.
[18:18:22] <robertmaxrees> but windows 10 just reached 50% market share.
[18:18:30] <jjrabbit> well for my visitors, the ones that aren't still download chrome
[18:18:34] <robertmaxrees> so you still have a tremendous about of users who can't use edge.
[18:18:42] <robertmaxrees> maybe :)
[18:19:56] <taplar> yeah, definitely consider analytics
[18:21:26] <robertmaxrees> and make sure you're not falling into common traps of interpreting the data.
[18:21:51] <jjrabbit> is lodash a type of jQuery library?
[18:21:57] <robertmaxrees> nope.
[18:21:59] <taplar> no, it's an independent library
[18:22:07] <robertmaxrees> what's a "jQuery library"??
[18:22:15] <jjrabbit> lol
[18:22:26] <robertmaxrees> honest question.  not sure what you mean by that.
[18:22:32] <robertmaxrees> woops
[18:22:34] <jjrabbit> sorry, meant kind of like
[18:22:57] <jjrabbit> is it supposed to be sort of like a jquery library?
[18:22:58] <taplar> https://lodash.com/
[18:23:13] <taplar> it's more logical based
[18:23:18] <robertmaxrees> you mean "a library like jquery"?
[18:23:22] <jjrabbit> yes!
[18:23:23] <jjrabbit> lol
[18:23:26] <taplar> where as jQuery is more dom operations based
[18:23:30] <robertmaxrees> ^
[18:23:38] <jjrabbit> i don't know why i didn't just say that
[18:24:05] <taplar> https://lodash.com/docs/ shows all the utility methods they offer
[18:24:08] <robertmaxrees> jquery is mostly for DOM abstraction.  lodash was originally a very slim version of underscore, both of which offer a bunch of general utilities.
[18:24:21] <jjrabbit> haven't heard of underscore either haha
[18:24:25] <robertmaxrees> heh
[18:24:47] <taplar> lodash lets you think more about conceptually what operation you are wanting to do, and you let the library figure out the most efficient way to do it.
[18:25:06] <jjrabbit> that sounds pretty cool
[18:25:58] <jjrabbit>  < robertmaxrees> and make sure you're not falling into common traps of
[18:25:58] <jjrabbit>                        interpreting the data.
[18:26:07] <jjrabbit> what did you mean here?
[18:26:25] <jjrabbit> like not checking the bounce rate for IE?
[18:27:48] <robertmaxrees> no.
[18:28:10] <robertmaxrees> for instance: say you notice conversion rate for IE is super low.
[18:28:19] <robertmaxrees> don't assume it's because IE users convert less.
[18:28:28] <robertmaxrees> It could be a result of your checkout being broken in IE.
[18:28:42] <jjrabbit> exactly
[18:28:49] <jjrabbit> it's because the checkout icon doesn't load in IE
[18:28:51] <jjrabbit> lol
[18:29:08] <taplar> or your checkout logic using arrow functions
[18:29:11] <robertmaxrees> ^
[18:29:20] <taplar> because new guy love arrow functions
[18:29:26] <taplar> all things must be arrow functions
[18:29:28] <robertmaxrees> i see engineers fall into traps with that kind of stuff all the time.
[18:29:43] <robertmaxrees> that's part of why modern.ie exists.
[18:29:48] <jjrabbit> plus, it's the only thing $('#newguy') knows how to use
[18:29:55] <taplar> yup
[18:30:00] <jjrabbit> hehe
[18:30:24] <robertmaxrees> that's also why you have automated build tools to save you from yourself ;)
[18:30:32] <c_bluntish> robertmaxrees++;
[18:31:28] <taplar> babel4tw
[18:32:20] <robertmaxrees> bbiab
[21:07:00] <jjrabbit> can you repeat the same method twice on a given selector?
[21:07:41] <jjrabbit> e.g. $('#id').attr(...).attr(...) ?
[21:31:58] <pavonia> jjrabbit: Have you tried what happens? Have you checked the documentation?
[21:37:01] * jjrabbit yawn
