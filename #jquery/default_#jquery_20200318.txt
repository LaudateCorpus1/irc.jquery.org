[07:25:30] <StyXman_> can I use $.get with async/await?
[07:47:32] <Cork> StyXman_: yes, it is compatible with promise
[07:48:05] <StyXman_> any docs about how to use it?
[07:49:06] <StyXman_> hint: I'm new to JS, jquery *and* async :)
[07:50:30] <Cork> just do var data = await $.ajax()
[07:50:47] <Cork> data will be the same data you would get in .done(function(data) {})
[07:51:10] <StyXman_> right. and I can use $.get() instead...
[07:51:28] <Cork> $.get is just a tiny wrapper around $.ajax
[07:52:04] <Cork> get: function(url) { return $.ajax(url, { type: 'get' }); }
[08:35:17] <StyXman_> Cork: I have that call on a function called 'done()'. then I use that function on a event callback (onload). I'm getting "'done' is not a function". any ideas?
[08:35:24] <StyXman_> lemme paste the relevant code
[08:38:24] <StyXman_> https://paste.ubuntu.com/p/RTwMKvggD8/
[08:41:55] <Cork> ya, you don't call done you call $.get and get the value you normally get in data in done(function(data) {})
[08:42:02] <Cork> it returns the value
[08:44:29] <StyXman_> done was not the old callback, but a functio that was alreay an event handler
[08:44:53] <StyXman_> I'm just trying to add to id get a value from the server and do stuff based on that
[08:45:33] <Cork> the old syntax done comes from is $.get().done(function(data) {})
[08:45:42] <Cork> you can use that syntax instead of await if you want
[08:46:01] <Cork> but you can't call a random "done" function and expect it to work
[08:46:16] <StyXman_> no, again, this is not the old get() callback, it's the current onload handler
[08:46:37] <StyXman_> maybe the name confuses you, but I assure you it's not
[08:46:38] <Cork> ...
[08:46:45] <Cork> you need to read up on how await works
[08:47:35] <StyXman_> my onload handler was already called done, I'm not trying to force fit some old code
[08:48:29] <StyXman_> let me change the names
[08:49:40] <StyXman_> ... is JS getting confused?
[08:49:44] <StyXman_> or am I?
[08:50:08] <Cork> no but your using an async function in a none async execution
[08:50:47] <StyXman_> none asyn execution?
[08:50:59] <StyXman_> again, I'm new to js and async...
[08:51:25] <Cork> ya, so read up on how your suppose to use async/await
[08:51:48] <Cork> can reccomend https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await
[08:52:18] <StyXman_> thanks
[08:54:20] <StyXman_> ok, so you were right and I was confused
[08:54:35] <StyXman_> the error poins to the implicit done callback, not my function
[08:54:59] <StyXman_> which was unluckily called done and provoqued my confusion
[09:11:26] <StyXman_> greit, not it says TypeError: $.get is not a function
[09:12:21] <Cork> you've most likely used the tiny version of jquery
[09:14:27] <StyXman_> slim, it says
[09:14:34] <StyXman_> ok, I'm trying with ajax
[09:14:51] <StyXman_> then what done was it complaining about before?
[09:15:13] <Cork> the one you defined at the top
[09:15:21] <Cork> async function done() {}
[09:15:32] <Cork> as there is no other in a slim version jquery page
[09:16:00] <StyXman_> $.ajax not a function. should I use another version of jqery?
[09:17:25] <StyXman_> but my done() *was* a function. an asynch one, and it still is, but a function nonetheless?
[09:45:06] <webdevb> Hey all, could anyone help with this: https://stackoverflow.com/questions/60740126/magnific-iframe-popup
[09:49:34] <StyXman_> Cork: got the non slim version, now it all works. thanks for all the help
[22:21:12] <ArcanePhoenix> Hello, all. I am relatively new to jQuery. I am attempting to get xhr progress working. In my tests, the loaded value already starts high so percentage doesn't start at zero but around 64%. Fiddle: https://jsfiddle.net/63neyp8k/ Console screenshot: https://ibb.co/z42Lw3z
[22:22:01] <robertmaxrees> What's the issue?
[22:23:20] <ArcanePhoenix> Well, when I submit the form, I expect the loaded value to count up from 0, not 9305374 as shown in the screenshot.
[22:23:57] <ArcanePhoenix> I doubt it sent 64% of that file instantly and the remaining percentage over the course of a few seconds
[22:25:41] <ArcanePhoenix> The first line of the screenshot is the first console entry after clicking submit
[22:27:56] <robertmaxrees> i mean, since it's all async it's very possible that the file gets that far before the JS hooks the event listener.
[22:30:20] <robertmaxrees> also: it likely it's firing that event listener for the start of the upload.
[22:30:46] <robertmaxrees> if I try your code with a sufficiently large image (2+ megapixels), it starts at 10%
[22:31:40] <ArcanePhoenix> Well, the image I am testing with is 14 MB. My upload is pretty trash so I know it will take more than a second to upload 9 MB of it.
[22:33:03] <robertmaxrees> :shrug: your code functions correctly.  you can stick an initial 0% value in there if you want, but it works fine from my testing :)
[22:33:22] <robertmaxrees> https://jsfiddle.net/robertmaxrees/7un3y9zb/1/ if you really care about the 0% state, you can just do that before anything else.
[22:33:30] <ArcanePhoenix> Oh, I just realized I can use /echo in jsfiddle. I tried the same image with jsfiddle and used /echo as the action and it starts at 61%
[22:34:26] <ArcanePhoenix> Wonder if it's my browser...
[22:34:36] <robertmaxrees> what browser are you using?
[22:34:44] <ArcanePhoenix> Firefox Dev
[22:34:48] <robertmaxrees> same here :)
[22:35:37] <ArcanePhoenix> https://jsfiddle.net/63neyp8k/1/ - so this starts at a low percentage?
[22:36:02] <robertmaxrees> 10% for me on a 2.1mp image
[22:36:22] <robertmaxrees> *mb image, rather.
[22:36:34] <ArcanePhoenix> Ok, then it's something on my side then
[22:36:49] <robertmaxrees> :) should be glad your code works so well!
[22:37:52] <ArcanePhoenix> Makes it difficult to make sure it is working as expected, though. :P
[22:38:00] <ArcanePhoenix> Thanks for taking a look at it with me
[22:38:04] <robertmaxrees> Absolutely!
