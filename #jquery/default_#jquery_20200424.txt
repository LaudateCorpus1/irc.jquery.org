[01:17:02] <Cork> phxheat: what you want to do is use the dom method submit() (not the jquery version)
[01:17:21] <Cork> that way you can submit the form when your done without triggering an event loop
[01:18:10] <Cork> $('form').on('submit', function(event) { var form = this; event.preventDefault(); /* do what you need to do */ form.submit(); });
[01:18:49] <Cork> and ya if you need to prevent the original event it is always async
[05:04:11] <Deusdeorum> autocomplete to dropdown list without using jquery UI, is that possible?
[05:04:48] <Cork> what do you mean?
[05:04:56] <Cork> use the plugin without jquery ui?
[05:05:05] <Cork> or if it is possible to make an autocomplete withouth it?
[05:05:12] <Deusdeorum> The latter, ye..
[05:06:28] <Cork> sure
[05:06:31] <Deusdeorum> thought I could just include a cdn of jquery ui autocomplete but throws the error 'Uncaught ReferenceError: jQuery is not defined'
[05:06:49] <Cork> you can even get rairly close with dataset form fields
[05:07:22] <Cork> jquery ui autocomplete requires jquery and jquery ui core to work
[05:07:35] <Deusdeorum> ye, jQuery works fine, both $Â and jQuery
[05:07:55] <Cork> then you're requiring them in the wrong order
[05:08:14] <Deusdeorum> included <script src="csn..../jquery.auto-complete.min.js"></script> in header
[05:08:18] <Deusdeorum> hmm let me check again
[05:08:30] <Cork> you need to first load jquery then ui core then the autocomplete
[05:08:44] <Cork> any other order will fail
[05:09:23] <Deusdeorum> yup.. you're right.. thanks Cork - im not that familiar with twig templates and apparently {{ aSurveyInfo.metas }} was loading the jquery
[05:10:13] <Cork> also note you can load jquery multiple times and if you do the plugins loaded in the first instance won't be accessable to the later
[05:10:27] <Cork> mattias@ilait.seVi9Ma4bcvwFoASu2oNJhgozwYPYMigI7GvA
[05:11:20] <Deusdeorum> Got it. Thanks Cork
[05:12:01] <Cork> Deusdeorum: np
[09:27:04] <braindead_>  e.val(t).trigger('change') <--- is this calling a fuction 'change'?
[09:27:13] <braindead_> function
[09:30:41] <braindead_> ok, seems to be an event
[11:02:01] <Cork> braindead_: trigger trigger internal jquery event processing
[11:15:10] <braindead_> sounds like a death metal song
[19:05:53] <fury__> how can I trigger a change in value on a <select> *without* a change event being fired? $(el).val('...') triggers one.
[19:25:07] <dw1> could try vanilla javascript
[19:25:32] <dw1> document.querySelector('#something').value='';
[19:25:36] <dw1> not sure that triggers the hcange
[19:26:05] <dw1> or could preventDefault in the change trigger itself based on a global variable
[19:26:06] <fury__> .unbind() maybe does what I want if I could temporarily store the event, and then re-bind it
[19:26:22] <dw1> if you have a change event you want to skip
[19:26:25] <fury__> global variable won't work - the function doing the changing returns before the change even tis actually fired
[19:27:14] <fury__> I think the change event isn't even being fired from my code, but in a library somewhere that I can't change. I think ultimately I need to temporarily unbind all events on the input
[19:27:35] <dw1> try the vanilla first
[19:27:50] <dw1> ill test it
[19:28:16] <dw1> yeah it doesnt trigger
[19:29:29] <fury__> it does for me. there's probably something else going on, so, I need some other way to prevent my own event from firing.
[19:56:52] <fury__> it was something else entirely apparently, all fixed. thanks for the help
[20:01:11] <dw1> cool
