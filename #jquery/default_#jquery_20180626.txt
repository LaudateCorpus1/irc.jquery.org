[06:08:39] <Robsdedude_> Hi, I have a problem with Jquery UI: Using draggable and a minimal distance there is no click event fired when dragging a bit but less than the minimal distance. Any idea how to fix this?
[06:09:40] <Robsdedude_> This seems like a bug to me, btw.
[07:07:02] <Cork> Robsdedude: it is very hard to get both (no click when drag and click with small drag)
[07:07:08] <Cork> so i don't think it is a bug actually
[07:41:25] <Robsdedude> in fact I'm using jquery-ui touch-punch to enable touch (it is only broken for touch). So by now I think it's a problem with that library.
[09:51:48] <sunrunner20> I assume, that if a part of the DOM is removed (say an entire table) any events registered to that table are removed? even if a table with the same ID is added back?
[10:02:35] <Cork> sunrunner20: not sure what you asking for
[10:02:46] <Cork> do you wonder if you can be notified when the table is removed?
[10:03:04] <Cork> or if the same event handler can be reused if it is added back again?
[10:03:24] <sunrunner20> no, i'm worried about my events on the table being registered twice if I remove the table and add it back and then readd the event handler
[10:04:59] <Cork> sunrunner20: depends on how you add the event listeners
[10:05:25] <Cork> sunrunner20: if you use delegated event handlers (listen for the event on a parent element) and that element isn't removed
[10:05:34] <Cork> the old event handlers will still be there
[10:05:53] <Cork> if you replace the element that the handler was bound on, then all handlers will be removed too
[10:06:03] <sunrunner20> got it
[10:06:05] <sunrunner20> thanks
[10:06:17] <Cork> (it is generally recommended to use delegated event handlers if you plan to replace the dom periodically)
[12:37:48] <Al_nz1> In each of the collapsable sections, I have "tracker" checkbox - which needs to be checked if any of the other checkboxes in the section are true. Whats the best way to acheive this in jquery? http://jsfiddle.net/x1hphsvb/5717/
[12:41:07] <pavonia> Setting it from the click/change event of the other checkboxes, I guess
[12:41:25] <robertmaxrees> backing up - why do you need that in the first place?
[12:43:00] <robertmaxrees> you already have a check in one of the three checkboxes for that "section".  shouldn't need a second checkbox to reiterate what you already know.
[12:43:15] <Al_nz1> robertmaxrees: when the form goes to the backend, I am getting the form data, injecting it into a copy of the HTML template and rendering to PDF. When I render in PDF I need to expand/collapse the sections that contain/dont contain data
[12:43:46] <robertmaxrees> "contain/dont contain data"?
[12:43:53] <robertmaxrees> you mean, which sections have checked boxes?
[12:44:22] <Al_nz1> robertmaxrees: if a given section has any of the Checkboxes checked then its deemed to contain data
[12:44:53] <robertmaxrees> great.  then why duplicate that with another checkbox?
[12:46:31] <Al_nz1> do the test (for data) in the back end rather than creeating a checkbox on the form specifically for tracking that?
[12:46:41] <robertmaxrees> yeah.
[12:48:10] <Al_nz1> hmm
[12:49:27] <robertmaxrees> also you're duplicating IDs in that fiddle.
[12:49:31] <robertmaxrees> oh nvm.
[12:49:33] <robertmaxrees> ignore me sorry,.
[12:51:56] <Al_nz1> to make all those collapsable sections part of the <form> tag where should the form tags be placed?
[12:53:30] <robertmaxrees> i mean.
[12:53:40] <robertmaxrees> anywhere that contains all of them?
[12:53:53] <robertmaxrees> think of it semantically.
[12:54:17] <Al_nz1> ok
[12:54:53] <Al_nz1> should the submit be inside the form tags?
[12:55:21] <robertmaxrees> yes.
[12:55:29] <robertmaxrees> all form controls should be in the form.
[15:40:26] <jerry> give that I have an object as such(https://paste.pound-python.org/show/Nuiq83V00IHDQ9KolANE/), how can I iterate through the properties to access the values in the arrays?
[15:41:04] <robertmaxrees> Object.keys(obj)
[15:41:57] <jerry> that gets me the keys, how can I access the array values
[15:42:04] <robertmaxrees> obk[keyname]
[15:42:14] <robertmaxrees> ^ that keys you each array,.
[15:43:04] <jerry> Becyase I tried using forEach() but because the first forEach() returns the keys as strings I can further iterate
[15:43:58] <robertmaxrees> show me?
[15:44:14] <robertmaxrees> because you just need to obj[keyname] and that's the array.
[15:45:32] <jerry> https://paste.pound-python.org/show/mYexkrLQeEjMix8Ng9xk/
[15:45:44] <jerry> thats what I used to get to the array
[15:45:49] <robertmaxrees> right, so category_erm.
[15:45:54] <robertmaxrees> category_ isn't the array.
[15:45:59] <robertmaxrees> selections[category_] would be.
[15:46:00] <jerry> because I need to iterate through the array and access each valye
[15:46:56] <robertmaxrees> selections[category_].forEach();
[15:48:32] <robertmaxrees> jerry make sense?
[15:50:51] <robertmaxrees> #welp
[15:51:00] <jerry> yes thanks. So I can just do selections[category_].forEach(function (value) { ...}
[15:51:15] <jerry> sorry that took me a second
[15:51:33] <robertmaxrees> yeah.
[16:04:57] <ahoo> why, if i submit forms by using $('#submitbutton').click() it sometimes doesn't work?
[16:05:22] <robertmaxrees> ahoo you should be doing $('#theForm').submit() instead :)
[16:06:35] <ahoo> it doesn't work that way either.
[16:06:55] <robertmaxrees> any js errors?
[16:07:27] <ahoo> no, the problem is the password field
[16:07:34] <ahoo> obviously those aren't submitted
[16:07:38] <robertmaxrees> wat
[16:07:41] <ahoo> when submitting it programmatically
[16:07:54] <robertmaxrees> so confused right now
[16:08:13] <ahoo> robertmaxrees: never mind i'll wait until somebody able is available
[16:08:17] <ahoo> robertmaxrees: thanks anyway :)
[16:08:23] <robertmaxrees> wowzer.
[16:09:21] <robertmaxrees> what makes you believe passwords aren't submitted when triggering submit via js, btw?
[16:09:30] <robertmaxrees> *as standard behavior, I mean
[16:12:21] <robertmaxrees> >.>
[16:15:21] <ahoo> the fact that chrome's F12 doesn't display it in the request payload
[16:15:31] <ahoo> but that could be a security measure too.
[16:15:57] <robertmaxrees> this a standard form or an ajax form submit?
[16:17:03] <ahoo> ajax form submit :(
[16:17:36] <ahoo> i just found out that when disabling javascript for the page, nothing works, no enter, no click on the login button
[16:17:46] <pavonia> You should also check what actually arrives at the server
[16:17:52] <robertmaxrees> ^
[16:18:03] <ahoo> so i guess there's some logic attached to the login button that somehow finds out if the button is clicked programmatically
[16:18:05] <robertmaxrees> also: that doesn't necessarily mean it's ajax.
[16:18:15] <robertmaxrees> that's a whole lotta conjecture heh
[16:18:15] <ahoo> yes it does.
[16:18:26] <robertmaxrees> uh.
[16:18:33] <ahoo> a regular form works without javascript enabled.
[16:19:04] <robertmaxrees> generally.  people do some weird things with forms though.
[16:19:07] <robertmaxrees> (shrug)
[16:20:51] <robertmaxrees> also I just confirmed on my site that submitting a form via ajax still sends the password field.
[16:21:45] <robertmaxrees> *programatically submitting, rather.
[16:24:20] <ahoo> if do a $('button').click(), will whatever is in the buttons onclick attribute is set be executed?
[16:24:31] <robertmaxrees> theoretically.
[16:24:46] <robertmaxrees> tho the presence of an onclick attribute is code smell.
[16:25:14] <ahoo> wtf
[16:25:27] <ahoo> of course it's code, unless it's empty.
[16:25:37] <robertmaxrees> huh?
[16:25:49] <ahoo> well what else would be there if not code?
[16:25:53] <robertmaxrees> ...
[16:25:55] <robertmaxrees> i said "code smell"
[16:25:57] <robertmaxrees> not just "code"
[16:26:06] <ahoo> alright.
[16:26:12] <ahoo> i don't understand what that means.
[16:26:22] <robertmaxrees> https://en.wikipedia.org/wiki/Code_smell
[16:26:39] <robertmaxrees> something that indicates there's a potentially deeper problem/flaw.
[16:27:01] <ahoo> i see. thanks.
[16:27:16] <ahoo> "Determining what is and is not a code smell is subjective, and varies by language, developer, and development methodology."
[16:27:36] <ahoo> imho, in this case, it's not code smell.
[16:27:43] <robertmaxrees> it's pretty universally accepted that using inline event handlers is a bad idea.
[16:27:58] <ahoo> because there is no alternative to code. and code is always the potential for a problem lying deeper.
[16:28:05] <robertmaxrees> *sigh*
[16:28:10] <ahoo> *sigh*
[16:28:24] <ahoo> then why are they part of html5?
[16:28:33] <robertmaxrees> legacy support.
[16:28:43] <ahoo> there's no legacy support in html5 .
[16:28:51] <robertmaxrees> lol
[16:29:00] <ahoo> that's what it makes it different from html4.
[16:29:04] <robertmaxrees> generally, you want to use js to bind your listeners.
[16:29:57] <ahoo> generally, js, in that case jquery, does nothing else than translate a function call into various dom calls
[16:30:37] <robertmaxrees> not entirely.  jquery's event subsystem is actually an abstraction on top of the native DOM one./
[16:30:55] <robertmaxrees> for instance
[16:30:55] <ahoo> yeah
[16:30:59] <ahoo> an abstraction
[16:31:09] <robertmaxrees> but this goes a bit further.
[16:31:12] <ahoo> which, in the end, leads to native calls
[16:31:17] <robertmaxrees> not always.
[16:31:22] <robertmaxrees> either way.
[16:32:10] <robertmaxrees> getting off track - jquery's event triggers should be triggering any appropriate handlers, even if they're inlined/bound via regular js
[16:51:11] <hellyeah> when you hover over the image message is displayed but other divs are expanded too. How can i avoid that? https://jsfiddle.net/er8qsw27/108/
[16:56:18] <robertmaxrees> that's a css problem.
[16:56:29] <hellyeah> hmm
[16:56:44] <robertmaxrees> https://jsfiddle.net/er8qsw27/116/
