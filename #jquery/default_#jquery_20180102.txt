[00:34:18] <evanesoteric> What's the ideal way to have a hamburger icon? Using an image/png? Using CSS spans, or something else?
[02:15:54] <hellyeah> this doesnt give me any error http://dpaste.com/2DP8Z62 but when i change a to something more than one letter. Ajax failed what can be the reason of that?
[02:19:04] <hellyeah> &jo'n web
[02:27:18] <Woet> hellyeah: does "ajax failed" have an error message
[02:28:17] <hellyeah> 500 interval server error
[02:29:25] <Woet> hellyeah: so how is that a jQuery question?
[02:30:17] <hellyeah> hmm a : "a" work but something : "a" doesnt work
[04:21:17] <SirLagz> should $('<tr>').data('user-id',userid') still append a 'data-userid' to the <tr> element?
[04:22:47] <moveax> well, i am not sure but i know that sometimes it is in the dom, but you don'
[04:22:56] <moveax> t see an attribute in the inspector
[04:23:15] <SirLagz> hmm
[04:23:44] <SirLagz> moveax: thanks. I'll try and figure out what I'm doing wrong
[04:24:14] <moveax> if you inspect the element, select properties and look for jQuery<INTEGER> in the properties
[04:24:17] <moveax> of Element
[04:26:41] <SirLagz> moveax: don't see anything that says jQuery at all unfortunately
[04:27:12] <SirLagz> moveax: oh hang on, I'm just blind
[04:27:40] <SirLagz> does indeed have jQuery<integer>: 248
[04:29:05] <moveax> SirLagz: that should hold your data attributes
[04:29:13] <moveax> just apply some data from the console and take a look there
[04:30:13] <SirLagz> moveax: turns out the data attribute was fine. I mis-typed a variable name somewhere and it didn't pass it down to the function that was called. whoops
[04:30:24] <moveax> SirLagz: :)
[04:30:27] <SirLagz> moveax: turns out the issue wasn't the .data() lol
[04:30:47] <moveax> happens to the best
[05:58:15] <Rockwood> error ----> core.min.js.map:1(file name) Uncaught SyntaxError: Unexpected toke, code is here ---->  https://gist.github.com/anonymous/a375d25cc4145deceadc3aeb23b17451
[06:01:51] <Rockwood> error ----> core.min.js.map:1(file name) Uncaught SyntaxError: Unexpected toke, code is here ---->  https://gist.github.com/anonymous/a375d25cc4145deceadc3aeb23b17451
[06:12:17] <senaps> hi all, guess i have an array, and im appending and splicing to it using jqeury ajax. after some time my browser get's so slow. should i do anything beside splice from the array?
[06:22:18] <popados> anyone active?
[06:22:39] <popados> -- help
[06:22:45] <Rockwood> me too looking for response
[06:23:26] <int_feed> ok
[06:23:49] <int_feed> i'll stick around im new to irc so maybe if anyone can help later
[06:24:41] <Rockwood> int_feed, what error or problem are you facing ?
[06:24:50] <int_feed> just trying to find a list
[06:24:56] <int_feed> i found a few programming ones
[06:25:11] <int_feed> im looking for logic and philosophy right now
[06:25:12] <Rockwood> what kind of list ?
[06:25:24] <int_feed> #irc lists
[06:26:08] <int_feed> #python has alot of people in it
[06:26:11] <int_feed> if you /join that
[06:40:47] <int_feed> anyone?
[06:40:51] <int_feed> +(
[06:40:56] <int_feed> =(
[06:48:04] <thykka> Rockwood, did you figure it out?
[06:49:05] <thykka> Rockwood, the file in question is a sourcemap, and not javascript code. Just remove that particular <script> from the HTML and it should be good.
[06:55:46] <Rockwood> ooh okay
[07:12:39] <senaps> hi all, guess i have an array, and im appending and splicing to it using jqeury ajax. after some time my browser get's so slow. should i do anything beside splice from the array?
[07:17:25] <hellyeah> b> var value = "";  var valid = value >= 8 && value <= 12 || value.value === "";
[07:17:39] <thykka> splice mutates the array, but that shouldn't inherently slow down the browser… gonna need a bit more detail here
[07:17:41] <hellyeah> b> var value = "";  var valid = value >= 8 && value <= 12 || value.value === ""; console.log(valid);
[07:17:43] <thykka> senaps, ^
[07:18:03] <hellyeah> bot is dead
[07:19:36] <hellyeah> n> var value = "";  var valid = value >= 8 && value <= 12 || value.value === ""; console.log(valid);
[07:19:39] <senaps> thykka im pasting some code that is usable.... thanks for the time, i'll provide sample code right now
[07:19:43] <hellyeah> damn you bot
[07:19:51] <shoky_> there hasn't been a working bot here for years
[07:20:07] <hellyeah> üoh
[07:20:16] <hellyeah> thşs şs jquery
[07:20:17] <hellyeah> :D
[07:20:19] <hellyeah> is*
[07:20:21] <hellyeah> sorry
[07:23:13] <senaps> thykka https://jsfiddle.net/a4bs13gj/ this code looks weird to me too, i just got assigned with this code to fix it's load on the browser, and have figured out till know that every x seconds, it's sending a request, get's about 200-300 data, does something with it(plotting on the map) and then remove the data from the array after x seconds. ( i thi
[07:23:14] <senaps> nk i haven't found the whole code doing all i said!)
[07:26:49] <thykka> not sure what you expect me to do with this
[07:26:52] <thykka> ¯\_(ツ)_/¯
[08:10:54] <hellyeah> datepicker avoid datetimepicker working
[08:11:01] <hellyeah> thats bad
[10:48:29] <Es0teric> anyone know a parse_url equivalent from PHP to jquery?
[10:48:59] <taplar> you mean to parse the query string in the url?
[10:52:29] <Es0teric> taplar http://php.net/manual/en/function.parse-url.php
[10:52:31] <Es0teric> something like that
[10:53:52] <taplar> afaik there isn't a jQuery plugin for that.  Most url parsers are vanilla js hand made
[12:06:26] <nikio_> hey taplar
[12:08:18] <nikio_> so i have been researching about React but i still dont see how it is easier to work with compared to jQuery if one just uses good OOP style with an MVC archicture ..
[12:10:36] <nikio_> im looking at this simple example.. https://reactjs.org/docs/integrating-with-other-libraries.html#replacing-string-based-rendering-with-react its obviously just adding complexity
[12:13:55] <taplar> React is the MV part of a MVC architecture
[12:14:06] <Rockwood> https://jsfiddle.net/L86y3zx4/ .change event not populating alert
[12:16:11] <taplar> Rockwood: look at your console.  you're not including jquery
[12:19:52] <Rockwood> https://jsfiddle.net/L86y3zx4/2/  still same issue
[12:19:58] <taplar> and you have a '#' in the id of the html
[12:20:00] <taplar> take that out
[12:21:23] <taplar> https://jsfiddle.net/L86y3zx4/3/
[12:23:14] <taplar_lunch> brb
[12:24:54] <Rockwood> thanks taplar_lunch
[12:24:58] <Rockwood> nite cya
[12:25:03] <nikio_> taplar i am still using the principles you taught me 3 years ago, the splitting of code into data classes and view classes with a render function
[12:25:29] <nikio_> and i dont see how React would make developing easier
[12:25:50] <nikio_> but im trying hard to find reasons i might wanna use React
[12:26:27] <nikio_> * taplar_lunch
[12:32:24] <taplar_lunch> React is useful in a few ways
[12:32:38] <taplar_lunch> it has a built in way of separating the data model from the view
[12:33:04] <taplar_lunch> so from a logical standpoint, your logic can work directly with the model.  it doesn't have to spend time looking of dom elements to get values and such
[12:33:44] <taplar_lunch> it also incorporates a virtual dom
[12:34:15] <taplar_lunch> any change to the page is first put to the virtual dom.  what this allows for is React can determine the smallest number of changes needed to be put to the dom to make your change.
[12:34:20] <taplar_lunch> which is a performance benefit
[12:34:37] <taplar_lunch> you could make 50 changes, but if the complete result would only result in 10 changes, win
[12:35:37] <taplar_lunch> And from an organizational standpoint, React is a standardized library, so if you're organization uses it, while it will be different from company to company, there will be commonality between implementation, which can make onboarding new hires easier.
[12:35:56] <taplar_lunch> Or even within a company if people move from group to group
[12:37:25] <taplar_lunch> This doesn't mean it's the be all end all of front end development.  It's just some of the things it has going for it.
[13:05:18] <nikio_> nice taplar_lunch good explanation. What do you like to use, or use a lot these days?
[13:06:29] <nikio_> im currently making SPA apps using jquery, and an API served by a webapp written in symfony, a php framework
[13:06:57] <taplar_lunch> personally i'm mainly just use jQuery.  though I've gotten into Vuejs.  Professionally Angularjs is getting more traction in my shop.
[13:06:58] <nikio_> but looking to see how i can improve the software we make. and React seems like a good candidate
[13:07:22] <nikio_> i worked with angular, but it didnt feel as comfortable to work with
[13:08:27] <taplar_lunch> yeah, they all have their learning time frame
[13:09:07] <nikio_> https://codepen.io/daniel-hayes/pen/XdOVNJ/ i like the third example that uses declarative React to write the same component
[13:09:27] <nikio_> it shows how you can write something with less code than would be needed in pure jQuery
[13:09:44] <nikio_> and it looks very clear
[13:10:02] <taplar_lunch> sure, reusable components are a big part of react/vue/angular
[13:10:20] <nikio_> but then somebody else showed me how you would write it purely functional:  https://gist.github.com/dminuoso/29e445bae8062db7ef167c09d313befe
[13:10:24] <nikio_> also in Reac
[13:10:28] <nikio_> kinda neat
[13:11:30] <taplar_lunch> which making components allows you to not only reuse code, but also to think more in terms of objects
[13:12:00] <taplar_lunch> you don't have to think about i got a div with a ul with li's that have links
[13:12:11] <taplar_lunch> just, I have a <menu>
[13:12:21] <nikio_> yes
[13:12:36] <nikio_> so why do you still prefer using pure jQuery?
[13:12:46] <grapheti> dat dependency injection lookin' sexy
[13:12:49] <nikio_> clearly React saves you writing a lot of boilerplate code
[13:12:50] <taplar_lunch> i'm just me, and most the tinkering i do is small
[13:12:53] <taplar_lunch> :)
[13:13:28] <taplar_lunch> but i did mention i've done some Vuejs, so I am doing that some
[13:14:37] <taplar_lunch> https://github.com/taplar/taplar-hiddenworld  was a small app i re-wrote with vue
[13:16:17] <grapheti> awwchea
[13:17:01] <grapheti> gj tapl
[13:17:06] <grapheti> taplar_lunch *
[13:17:20] <taplar_lunch> *shrug* it works, :)
[13:17:26] <nikio_> cool
[13:18:29] <grapheti> https://www.youtube.com/watch?v=tIpbYyR0OOI
[13:19:01] <taplar_lunch> gotta find my ear buds
[13:19:58] <taplar_lunch> hah
[13:20:10] <grapheti> haha, it was just me joking continuing the convo :P
[13:20:25] <taplar_lunch> i like the background vocals
[13:20:35] <grapheti> yeah, the lil beatboxin'
[13:20:41] <taplar_lunch> yep yep yep yep yep word w-word w-word
[13:20:46] <grapheti> hehe
[13:21:18] <taplar_lunch> one guy sounds a bit like lavine
[13:21:34] <taplar_lunch> fk, it is
[13:21:39] * taplar_lunch hides
[13:56:03] <z1haze> if I have a plain javascript element, can I pass that into jquery as the selector?
[13:56:21] <taplar> you mean a dom element?
[13:57:12] <robertmaxrees> http://api.jquery.com/jQuery/ - check out the options of what you can pass.
[13:58:02] <z1haze> yes, a dom element
[13:58:04] <z1haze> the actual object
[13:58:12] <robertmaxrees> ^ the docs tell you that you can :)
[13:58:18] <z1haze> so it seems, but not working for me
[13:58:53] <robertmaxrees> what about it isn't working?
[13:58:56] <z1haze> or maybe it is, maybe i didnt wait long enough for compiling
[13:59:59] <taplar> $(selector).each(function(){  $(this).stuff...  }); <-- common case of a dom element in $()
[14:28:57] <nikio_> i was wondering
[14:29:21] <nikio_> how do people secure the js/css/html code of their SPA
[14:29:52] <nikio_> so that people cant just download it and try to steal ideas
[14:30:03] <nikio_> in case of a commercial product
[14:31:10] <taplar> you can uglify the code so it's harder to understand
[14:31:20] <taplar> but really there isn't a way to make it theft proof
[14:39:12] <nikio_> taplar, im considering serving it with php, that way only authenticated users can access it
[14:39:47] <nikio_> and because its served with php, im looking into prerendering possibilities
[14:40:11] <nikio_> the API and the SPA are on different domains though, so i guess an SSO solution is needed
[14:40:37] <nikio_> that ways its at least secured from competing companies
[14:42:58] <robertmaxrees> nikio_ most other companies don't want your SPA.
[14:43:06] <robertmaxrees> 9/10 people get design ideas and that's about it.
[14:44:47] <MikeD_> too many TLA
[14:45:11] <nikio_> robertmaxrees, we are kinda pioneering some things
[14:45:19] <nikio_> and we are competing with some other companies
[14:45:32] <nikio_> so in our case its something to consider
[14:46:12] <taplar> what's to stop a competing company from authing with your server and then getting access?
[14:46:18] <robertmaxrees> ^
[14:46:44] <robertmaxrees> and if it was really that big of a problem, why don't we see more examples of people lifting from high-profile sites?
[14:47:04] <robertmaxrees> not saying it doesn't happen, but it's really rare.
[14:47:13] <taplar> copyrights still exist too
[14:47:30] <MikeD_> i know i'd rather write my own from scratch than try to steal your best efforts
[14:47:31] <taplar> if you are truely pioneering something
[14:47:32] <robertmaxrees> ^ easy C&D + lawsuit.  it's still pretty rate though.
[14:47:40] <robertmaxrees> *rare
[15:54:00] <phelix> I am using cheerio to try and scape some image urls.. I can't for the life of me figure out why I only get undefined returned.. https://hastebin.com/guxexicamu.js
[15:55:37] <robertmaxrees> phelix console.log(a.find('.picture img').length);
[15:55:44] <robertmaxrees> what does that give you?
[15:56:10] <phelix> 1
[15:56:30] <robertmaxrees> what if you do .prop('src') instead of .attr?
[15:56:49] <phelix> I get undefined again
[15:57:30] <robertmaxrees> i'd have to see the markup then.
[15:57:40] <robertmaxrees> 'cause that should work.
[15:58:49] <phelix> robertmaxrees,  here is the site www.coindesk.com
[15:59:01] <phelix> its the div that contains the articles on the front page
[16:01:14] <robertmaxrees> that's working fine for me.
[16:01:22] <phelix> really... wtf
[16:01:27] <robertmaxrees> (shrug)
[16:06:39] <phelix> robertmaxrees, can you show me code you used?
[16:09:40] <helloe> helllo
[16:15:35] <robertmaxrees> phelix i used the each in there.
[16:16:10] <robertmaxrees> phelix literally just https://bpaste.net/show/f7d8ea01afab
[16:19:54] <phelix> weird.. I even tried it on another server and I still get undefined.. I mean it shows undefined for as many items that there are. So I know its finding the article class
[16:20:20] <robertmaxrees> i'm just popping that into the console.
[16:20:27] <robertmaxrees> without anything else.
[16:20:57] <robertmaxrees> wait wait wait - $ is cheerio here?
[16:26:17] <robertmaxrees> phelix something tells me cheerio does things a little differently.
[16:48:54] <phelix> robertmaxrees, ya $ is cheerio
[16:49:17] <robertmaxrees> yeah, you'll need to consult their docs.
[16:49:21] <robertmaxrees> looks like it's not exactly the same.,
[16:49:35] <phelix> hmm ok
[17:37:24] <z1haze> if you do $el.find('.some-selector').click(function .... does it do that for each .some-selector it finds, or just the first one?
[17:40:55] <taplar> each
[17:41:30] <doomsday> https://api.jquery.com/find/#entry-examples
[17:42:38] <z1haze> so what is the differce between $el.find('form').submit(function .. and $el.find('form').each(function(i, el) { $(el).submit(function  ...
[17:42:54] <taplar> nothing
[17:42:57] <z1haze> interesting
[17:42:59] <z1haze> ok thanks
[17:53:16] <z1haze> is it possible to return a promise from a submit handler?
[17:53:39] <taplar> return where?
[17:54:22] <z1haze> sec gonna make a little snippet
[17:57:29] <z1haze> ok basically, I have an initForm function that makes a server call when a user submits a form to ensure there isnt an expired session, first, and it updates the form keys, etc.. once that is done, i make my actual ajax call to submit the form to the server. so far so good?
[17:58:05] <robertmaxrees> lol
[17:58:06] <z1haze> I would like to be able to return the promise to the initForm() call.. so i can do initForm.then( ... ).catch( ...
[17:58:17] <z1haze> :\
[17:58:31] <taplar> sure you can do that
[17:58:41] <z1haze> even if its in a submit handler?
[17:58:51] <taplar> hold on a sec, lol
[17:59:18] <taplar> initForm can create a deferred.  var promise = $.Deferred();  and it can return that at the end of the method.
[17:59:24] <robertmaxrees> ^
[17:59:29] <z1haze> this is extremely pseudoish http://dpaste.com/21SEABZ
[17:59:33] <taplar> then at whatever point in the method you want it to be "done", resolve that deferred.
[17:59:35] <robertmaxrees> and then you resolve/reject within the handlder.
[18:01:09] <z1haze> I  guess I just get confused when doing this from inside the handler.. because it doesnt execute until the form is submitted, but this initForm function executes on page load
[18:01:31] <taplar> wait, you lost me there
[18:01:45] <taplar> you said initForm is called on submit
[18:01:59] <robertmaxrees> initForm binds a handler.
[18:02:02] <z1haze> no, initForm is called when the form is loaded in the dialog
[18:02:04] <z1haze> yes
[18:02:06] <z1haze> exactly
[18:02:06] <taplar> ah
[18:02:21] <taplar> ok, that's still valid
[18:02:28] <z1haze> initForm binds a handler that I was to return as a promise to chain with initForm
[18:02:34] <z1haze> that doesnt seem weird?
[18:02:40] <taplar> you don't chain the handler
[18:02:45] <taplar> events are not promises
[18:03:02] <taplar> so you have to create your own that you manage yourself, as I mentioned with the $.Deferred()
[18:04:04] <taplar> however it will only work once, as the nature of promises they can only resolve/reject once
[18:04:12] <z1haze> I dont understand
[18:04:18] <taplar> so if there is the case that the user could submit twice, you'd have an error
[18:04:34] <taplar> so think of it like this
[18:04:41] <taplar> initForm executes once, right?
[18:04:47] <z1haze> yes
[18:05:04] <z1haze> well, kinda
[18:05:07] <taplar> and it creates a submit event binding, which could, logically, happen multiple times, right?
[18:05:23] <z1haze> initForm runs from initDialog.. and initDialog executes every time we open a dialog
[18:05:30] <taplar> uh
[18:05:40] <z1haze> so if you submit the form, and it errors, I replace the dialog html and call initDialog again, which again will call initForm
[18:05:48] <taplar> are you destroying the form between the open and close of the dialog?
[18:05:54] <z1haze> yep
[18:06:00] <taplar> ok that's fine then
[18:06:03] <z1haze> replacing with server reponse
[18:06:13] <taplar> in the scope of the life of the form, :D, initForm will have only ran once
[18:06:19] <z1haze> yes
[18:06:24] <taplar> ok, so you're good
[18:06:41] <z1haze> so how do i use this deferred thing in the handler like you're talking
[18:06:45] <taplar> initDialog destroys the form and creates it again?
[18:06:51] <z1haze> thats where I am confused, which is what brought me here
[18:07:01] <z1haze> actually initForm does
[18:07:06] <taplar> k
[18:07:18] <z1haze> basically in the snippet i shared
[18:07:21] <taplar> so one sec.
[18:07:45] <z1haze> the call to dialogAjax .then reloads the page, and .catch replaces the dialog contents, and reruns init dialog
[18:07:46] <taplar> i don't see a form destory in that snippet
[18:07:50] <z1haze> which starts the cycle over again
[18:08:39] <taplar> k
[18:08:53] <taplar> let me put together a small example of the concept
[18:09:20] <z1haze> we have to do this double check because our platform for whatever reason if a user submits a form with an expired session token or form token, it completely wipes their cart
[18:09:37] <z1haze> and its common for users to shop on the site all day, maybe go to the checkout page, then come back the next day, or 4 hours later, etc to finish the checkout
[18:09:45] <z1haze> so this was built to circumvent that
[18:11:06] <taplar> https://jsfiddle.net/4nq3u3vo/
[18:11:25] <Rob_Jones> hey guys got a question and i need people to be as blunt and as honest as possible as it seems like a very controversial topic
[18:11:40] <taplar> o.O
[18:11:49] <Rob_Jones> but possible is it for jquery framework to have xss vulnerabilities these days
[18:12:03] <taplar> jquery "framework"?
[18:12:19] <Rob_Jones> my tutor is really anti-jquery and has told me all the xss issues it has but from the research ive done
[18:12:37] <Rob_Jones> it seems to have been addressed since 1.6
[18:12:48] <taplar> if jquery has xss issues, then javascript has xss issues
[18:12:52] <taplar> jquery is just a library
[18:15:08] <z1haze> cool taplar, could this work if there were multiple forms
[18:15:12] <Rob_Jones> it is but i read that jquery is really susceptible against DOM manipulation based XSS
[18:15:14] <z1haze> eg in this example, multiple inputs
[18:15:55] <taplar> z1haze: it will work so long as you only reject/resolve the promise once
[18:16:13] <taplar> Rob_Jones: what are you reading?
[18:16:15] <z1haze> https://jsfiddle.net/4nq3u3vo/1/
[18:16:25] <z1haze> clicking 1 button, then another button, nothing happens the second button
[18:16:39] <taplar> right
[18:16:47] <z1haze> and i see thats probably because we return it once
[18:16:48] <taplar> as i just asked, will it only resolve once? :)
[18:16:56] <z1haze> well, each form would only resolve once
[18:17:09] <z1haze> and i might even be over engineering, currently i think theres always just 1 form
[18:17:11] <taplar> but the fiddle you have has the event happening multiple times
[18:17:12] <z1haze> but never know
[18:17:23] <taplar> but a promise only resolves/rejects once
[18:17:30] <taplar> trying to do it multiple times will not do anything
[18:17:45] <Rob_Jones> multiple things taplar, but here is one of the things
[18:17:47] <Rob_Jones> https://watchitlater.com/blog/2011/10/cross-site-scripting-vulnerability-with-javascript-and-jquery/
[18:17:47] <z1haze> right, I see what its doing. I just was wondering how we would do that for each form, (if there were multiple)
[18:18:31] <z1haze> btw, is this the same as using an actual es6 promise
[18:18:43] <taplar> ah
[18:18:45] <z1haze> same premise anyway
[18:19:22] <taplar> i need to look at my documentation.  that doesn't feel like xss to me
[18:19:45] <taplar> well, if it is, that example looks like it is showing off a stored xss vulnerability
[18:20:04] <taplar> but i get the issue
[18:20:17] <Rob_Jones> basically i am assessing a website for a module
[18:20:34] <Rob_Jones> and i am trying to see if there is any vulnerability within the jquery they are using
[18:20:41] <Rob_Jones> my tutor is heavily anti jquery though
[18:20:59] <Rob_Jones> saying there is no need to load a whole library when you only use a portion of it though
[18:21:04] <taplar> the issue there is knowing what text() does, as the user points out it converts the special characters to real characters
[18:21:08] <Rob_Jones> and saying it can speed up website times
[18:21:13] <taplar> sure
[18:21:22] <taplar> it's all relative
[18:21:25] <Rob_Jones> but from what i can see
[18:21:30] <Rob_Jones> the js is all minified
[18:21:42] <Rob_Jones> the only issue is redundant code
[18:21:45] <taplar> http://youmightnotneedjquery.com/
[18:22:10] <Rob_Jones> but heres a question, if you have a video or gif on your screen version of your website
[18:22:25] <Rob_Jones> is it recommended to use jquery to remove it for mobile devices
[18:22:39] <Rob_Jones> i cant see why they are using jquery to remove it over something like media queries
[18:22:58] <Rob_Jones> website i am talking about: http://smallerearth.com/uk/
[18:22:59] <taplar> you mean vs just hiding it?
[18:23:08] <robertBusy> they didn't know any better.
[18:23:11] <Rob_Jones> check that site out i will give you a line number now
[18:23:15] <robertBusy> or didn't think about it in course of making the site.
[18:23:27] <Rob_Jones> line 116
[18:23:58] <Rob_Jones> the video is no longer there cause a bunch of students like us kept pinging their sites
[18:24:04] <Rob_Jones> and destroyed their bandwidth
[18:24:07] <Rob_Jones> apparently
[18:24:17] <z1haze> taplar, how about this? http://dpaste.com/35T6Z5W
[18:24:28] <Rob_Jones> but i can't see why:
[18:24:39] <Rob_Jones> 1) they didnt use media queries to remove the video
[18:24:47] <Rob_Jones> 2) the code wasn't removed after the video was
[18:24:47] <robertmaxrees> also: jquery isn't responsible for xss issues - bad development practices are.  you can make the same mistakes with and without it.
[18:24:58] <Rob_Jones> i get that
[18:25:17] <Rob_Jones> like i said my tutor is heavily anti jquery so I wanted to present a researched argument
[18:25:17] <taplar> *shrug* whither or not to use jquery there is really situational
[18:25:26] <taplar> if the site was already using jquery, doesn't really hurt
[18:25:43] <taplar> but if that's the first time you pull in jquery to do that, yeah, probably a bad choice
[18:25:52] <robertmaxrees> Rob_Jones also: developers are lazy - somebody filed a ticket that said "remove this video".  so the developer did.  they probably didn't check for related code.
[18:25:58] <robertmaxrees> which is a pretty common issue within codebases./
[18:26:17] <Rob_Jones> so all i have to go on is the code there is redundant
[18:26:30] <robertmaxrees> people got lazy.
[18:26:32] <taplar> z1haze: you don't return the promise from the handler.  you return it from the method
[18:26:43] <z1haze> ah shoot
[18:26:48] <Rob_Jones> but it doesn't really provide much argument for usability as the load times without the script are probably miliseconds
[18:26:55] <z1haze> i knew that just goofed
[18:27:14] <robertmaxrees> Rob_Jones you're falling into a common loadtime argument fallacy about jquery :)
[18:27:24] <taplar> and that load time is just on the first hit, with caching
[18:27:43] <Rob_Jones> don't suppose there is any way to check if they are caching is there?
[18:27:47] <taplar> but load time !== processing time
[18:27:57] <robertmaxrees> over the wire, jquery is only like, what 35k max?
[18:28:05] <robertmaxrees> when minified/gzipped
[18:28:28] <taplar> Rob_Jones: you can look at the network tab in the developer tools to see if it caches
[18:28:30] <robertmaxrees> i'm seeing multiple images on that site that are bigger than that.
[18:29:03] <taplar> the size of jquery usually isn't the issue with performance.  it's the misuse of it
[18:29:11] <z1haze> so could I continuing chaining .then to initForm then?
[18:29:12] <robertmaxrees> ^
[18:29:20] <robertmaxrees> jquery simplifies things.
[18:29:25] <z1haze> HA ^
[18:29:26] <robertmaxrees> so much so that it's easy to make big mistakes.
[18:29:29] <taplar> z1haze: sure
[18:29:38] <Rob_Jones> the images i have covered
[18:29:46] <taplar> but all the then() will happen when that promise resolves, as normal
[18:31:25] <robertmaxrees> Rob_Jones so it sounds like part of what you're figuring out is performance issues on that site?
[18:32:40] <z1haze> taplar, initForm(...).then(...).catch is not a function
[18:32:41] <robertmaxrees> 'cause like https://i.imgur.com/LtaWKhn.png
[18:33:16] <taplar> catch may not be a deferred method
[18:33:36] <robertmaxrees> Rob_Jones granted, that's mobile-centric, but a lot of that applies to desktop as well.
[18:33:48] <z1haze> https://api.jquery.com/category/deferred-object/
[18:33:51] <taplar> well it is, but it was added in 3.0
[18:33:59] <taplar> you using 3x version?
[18:34:05] <z1haze> no 2.2.4
[18:34:08] <taplar> boom
[18:34:18] <z1haze> meh, I can just use a regular promise the same, right?
[18:34:52] <taplar> catch() is short hand for then(null, function)
[18:35:19] <taplar> "deferred.catch( fn ) is an alias to deferred.then( null, fn ). Read its page for more information."
[18:35:37] <z1haze> catch is for then, what?
[18:35:44] <taplar> it's a wrapper
[18:35:48] <taplar> a convenience method
[18:35:50] <robertmaxrees> .then(resolve, reject);
[18:35:52] <robertmaxrees> but!
[18:36:01] <z1haze> always used catch for errors
[18:36:13] <robertmaxrees> .then(resolve).catch(reject) does have subtle differences from .then(resolve, reject);
[18:36:22] <robertmaxrees> just to make it more confusing :)
[18:36:22] <taplar> oh?
[18:36:53] <robertmaxrees> so .then(resolve, reject) <- if an error happens within your resolve handler, the reject won't get triggered.
[18:37:08] <taplar> intersting
[18:37:09] <robertmaxrees> but if you use .then().catch(), it will.
[18:37:18] <robertmaxrees> which is why most folks suggest you use .then().catch()
[18:37:43] <taplar> kinda feels dirty
[18:37:45] <taplar> lol
[18:37:51] <z1haze> so is there a page that shows me how to do it in 2.2.4 if its even possible
[18:38:32] <taplar> well, not dirty.  but that approach seems to throw in some ambiguity
[18:39:04] <grapheti> "I need a dirty woman." - Pink Floyd
[18:39:35] <robertmaxrees> taplar it seems like it until you get bit by a resolve handler breaking :)
[18:39:55] <z1haze> so anyway .. reading it says .then was introduced in 1.8
[18:40:27] <robertmaxrees> z1haze yeah, but jquery's promises weren't complaint until 3.x
[18:40:53] <robertmaxrees> you could do .then().fail() maybe?
[18:40:54] <z1haze> so what should I be using if im on 2.2.4
[18:41:01] <z1haze> i will try
[18:42:41] <taplar> Rob_Jones: performance wise, without cache, the page does take me around 6 seconds to load.  so that's something
[18:42:45] <z1haze> would the same apply to $.ajax then?
[18:42:56] <taplar> $.ajax returns a promise, yup
[18:43:06] <robertmaxrees> *deferred in 2.x
[18:43:09] <robertmaxrees> which is not the same as a promise.
[18:43:19] <robertmaxrees> :)
[18:43:26] <taplar> one of those two.  was it changed to promise in 3?
[18:43:39] <robertmaxrees> jquery's deferreds were made promise-complaint in 3.
[18:44:19] <robertmaxrees> deferreds are basically jquery's promises implmentation.  but they weren't spec complaint.  it's like having malformed JSON but calling it JSON.
[18:46:01] <taplar> so it's still a jqXHR, just a promise compliant jqHXR
[18:46:07] <taplar> *jqXHR
[18:46:53] <robertmaxrees> to make it more confusing, the jqXHR object is also a deferred object, which is Promises/A+ compliant.
[18:54:38] <taplar> enough fun for me.  going to try to hang on to this after vacation euphoria for a little longer.  later all
[18:54:47] <robertmaxrees> enjoy.
[19:20:14] <robhol> any reason why this doesn't work? jQuery("...").map(() => {return $(this).text();})    the selector itself works and text() directly on the result gives all the text I want, just jumbled together
[19:20:44] <robhol> (ignore the wonky arrow+return thing, just trying something randomly :p)
[19:22:01] <robertmaxrees> do .map().get()
[19:22:07] <robertmaxrees> that'll get you your array.
[19:22:50] <robhol> but map what? is jQuery(this).text() the correct one? What gets "jq-ized" and where has always confused me
[19:23:12] <robertmaxrees> oh wait.
[19:23:18] <robertmaxrees> 'this' won't be what you think it is there.
[19:23:28] <robhol> I was wondering about that
[19:23:29] <robertmaxrees> since you're using a fat arrow, jquery can't bind the context.
[19:23:39] <robhol> ... what, seriously??
[19:24:17] <robhol> rofl. changed it to function() and it works now...
[19:24:18] <robertmaxrees> that's how fat arrows work.
[19:24:24] <robhol> jesus christ, javascript
[19:24:31] <robhol> Anyway, thanks :p
[19:24:53] <robertmaxrees> heh, that's part of the draw of fat arrows.
[19:25:34] <robhol> I just... I have no idea why it can't just be consistent
[19:25:47] <robhol> nobody expects js to be sane though, I guess
[19:25:49] <robertmaxrees> what do you mean?
[19:25:54] <robertmaxrees> huh?
[19:26:00] <robertmaxrees> fat arrows have different features to normal functions.
[19:26:08] <robertmaxrees> were you expecting them to operate the same?
[19:26:17] <robhol> Yes. Why would I not be?
[19:26:37] <robertmaxrees> because you use => instead of function
[19:26:51] <robertmaxrees> would be odd to call it something different and have them the exact same.
[19:27:30] <robhol> the whole point is syntactic sugar though
[19:27:35] <robertmaxrees> nope.
[19:27:55] <robertmaxrees> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions
[19:28:20] <skynet_> I'm noob. how do people navigate DOM without jQuery?
[19:28:56] <robertmaxrees> skynet_ ##javascript :)
[19:28:57] <robhol> robertmaxrees: well, I respectfully offer my opinion that that is dumb as hell.
[19:29:12] <robertmaxrees> robhol (shrug) dunno why you'd expect it to do the same thing with a different name.
[19:29:19] <robertmaxrees> kinda like let/const vs var.
[19:44:02] <gambl0re> hi robert
[19:44:31] <robertmaxrees> ?
[19:45:08] <gambl0re> im saying hi
[19:45:12] <robertmaxrees> k
[19:46:43] <gambl0re> whatever...you have so much pride you cant even say hi back
[19:46:54] <robertmaxrees> ... not a pride thing duder.
[19:47:11] <gambl0re> pride, arrogance, superiority call it whatever you want
[19:47:31] <robertmaxrees> Wow.  alright.
[19:47:52] <gambl0re> i didnt even pm
[19:48:06] <robertmaxrees> no need to get aggressive.
[20:02:45] <Neo1> robertmaxrees: do you know moinmoin? )
[20:02:59] <robertmaxrees> nope.
[20:03:09] <Neo1> wikipedia, you can create own
[20:03:27] <robertmaxrees> looks like a wiki engine.
[20:03:33] <robertmaxrees> yeah.
[20:03:52] <Neo1> robertmaxrees: I'm reading ubuntu server guide, there saying about it https://moinmo.in/
[20:04:00] <robertmaxrees> 'kay?
[20:04:51] <Neo1> robertmaxrees: overview web possibilities...
[20:04:59] <robertmaxrees> (shrug) it's a wiki engine.
[20:05:43] <Neo1> robertmaxrees: it's one app, there exists many aplication for web server, that you have even never listened
[20:05:51] <Neo1> robertmaxrees: like I
[20:06:01] <robertmaxrees> Neo1 huh?
[20:06:34] <Neo1> robertmaxrees: I've just impressed, can suggest you to read also, will useful
[20:06:45] <robertmaxrees> not really in the market for a wiki engine.
[20:06:46] <robertmaxrees> (shrug)
[20:06:54] <robertmaxrees> the work i do doesn't generally need that kind of thing.
[20:06:56] <robertmaxrees> but okay.
[20:08:00] <Neo1> robertmaxrees: official documentation
[20:08:00] <Neo1> https://help.ubuntu.com/lts/serverguide/serverguide.pdf
[20:08:00] <Neo1> , you are like web developer for you it can more open mind
[20:08:12] <robertmaxrees> huh?
[20:08:25] <robertmaxrees> i get the feeling you're implying something but I'm not entirely clear on what.
[20:09:41] <Neo1> no, just suggest, nothing implying, It's simply useful literature that I'm reading and very impressed now
[20:09:56] <robertmaxrees> lol
[20:09:59] <Neo1> my personal suggestions )
[20:10:07] <Neo1> everything simply
[20:10:21] <robertmaxrees> you realize that I have a lot of other stuff to work on and reading a random PDF from ubuntu about servers doesn't really apply to anything I'm doing, right?
[20:10:44] <robertmaxrees> (shrug) dunno why people are on my case today.
[20:11:51] <Neo1> robertmaxrees: you probably don't know about that all stuff. It can be good overview for you. and It's strict relate to your domain
[20:12:02] <robertmaxrees> lol
[20:12:07] <robertmaxrees> appreciate the shade duder.
[20:12:10] <robertmaxrees> classyu
[20:13:01] <robertmaxrees> i'ma PM you Neo1.  cool?
[20:13:37] <Neo1> robertmaxrees: next time, I'm going to go eat something ), sorry
[20:13:44] <robertmaxrees> lmao
[20:13:59] <Neo1> :)
