[12:14:25] <skypce> hi all, i have this form, the problem is that only send the first state of input , by example if i choose 4 kids only send always 1. can you help me please : https://codepen.io/skypce/pen/zyPqpr
[12:15:13] <skypce> i cant back the favor working in some css issue
[12:15:53] <skypce> i can back the favor working in some css issue
[13:58:41] <poikl> i want to use clone() but how do i easly change values between divs with classnames
[18:26:53] <fury__> sorry for the silly question, but I've spent way too long on this. I want to use 100% native browser validation on a form, and intercept the click before the form is actually submitted. I do not want to use jquery-validation. $('#myForm').valid() seems to always submit the form if it is valid, no matter what, and preventDefault() on the click event does not stop this.  I'm not even clear if
[18:26:53] <fury__> $('#myForm').valid() is even jquery native, or jquery-validation, or anything like that. how can I a) tell if a form is valid or not, using only native browser stuff and b) prevent the form from submitting if it is valid?
[18:33:59] <shoky> fury__: .valid() is not jquery native
[18:35:11] <fury__> thanks, that clears up some confusion. it seems I have to intercept the submit event instead
[18:35:18] <shoky> fury__: https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation#Validating_forms_using_JavaScript
[18:35:49] <shoky> fury__: yes the submit event is what you want
[18:36:24] <shoky> fury__: and to prevent the form from submitting you can call .preventDefault()  on the event argument to your submit handler
[18:36:56] <fury__> since you're here, and I really appreciate it, can $('form').submit() be called recursively? what I'm actually doing here is sort of a confirmation dialog
[18:38:41] <fury__> in other words, submit the form again in the event
[18:39:56] <shoky> i think so, but actually don't really remember for sure.  unless your confirmation is asynchronous, it's best to rely on calling .preventDefault() (or not calling it)
[18:42:20] <fury__> thanks for your help :)
[18:42:21] <shoky> fury__: but if you do need to call .submit() to submit it,  you might want to do  $('form')[0].submit()    instead
[18:42:52] <shoky> fury__: so that .submit() is called on the raw dom element, so it won't re-trigger your event handler
[18:43:02] <fury__> er, my selector isn't actually $('form'), more like 'form#myForm', ... ahh ok
[18:43:16] <fury__> that makes sense, thanks!
[18:43:24] <shoky> np
[18:44:00] <fury__> I don't often do any JS. it's usually fun when I have to though, it's just not muscle memory for me like other stuff
