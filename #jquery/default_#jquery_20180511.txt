[08:19:51] <vish93> Hey guys would someone be able to help me: https://codepen.io/vishpatel93/pen/VxQqXx my main owl carousel height is made too big, when using jquery.lazy(), without it the height is of the first image.
[08:39:49] <ahoo> hello there.
[08:40:03] <ahoo> while reading the topic, is there a designated jquery-ui chan?
[08:41:26] <ahoo> looks like there isn't.
[08:41:29] <ahoo> so...
[08:41:48] <ahoo> is it responsible to not upgrade a 1.11.2 project?
[08:41:57] <ahoo> oh, talking about jquery-ui
[09:17:39] <Cork> ahoo: what exactly are you asking?
[10:18:07] <bigode> Hello guys
[10:18:50] <bigode> How do I load jquery from a script file into a browser?
[10:19:01] <bigode> I am testing with something like var jquery = require('jquery');
[10:19:22] <bigode> Couyld someone help me please?
[10:22:07] <preference> for what purpose?
[10:23:03] <bigode> Use it as a module inside a browser isntead of node
[10:24:01] <ryan_ford> if you have included it in a script tag, can't you access it in the global namespace?
[10:26:08] <bigode> What is failing is the identification as 'Uncaught SyntaxError: Unexpected identifier'
[10:26:51] <bigode> First line on the source.js script file
[10:26:52] <ryan_ford> if you have jquery included, you jQuery and $ should both be available without having to define anything
[10:28:35] <bigode> I am not including jquery in the script tag but including a source.js file which should import or require jquery as a local installed module
[10:29:11] <bigode> I also did test import jQuery from "jquery";
[10:30:37] <ryan_ford> i think import isn't supported very well just yet
[10:30:41] <ryan_ford> are you using babel?
[10:31:34] <bigode> not using babel
[10:31:52] <ryan_ford> something like 'import jQuery from "./path/to/jquery.js"' should work if you have the means to use import
[10:32:05] <bigode> import jQuery from "..\node_modules\jquery\dist\jquery.min.js"; doesn't work as ell
[10:32:09] <bigode> well*
[10:32:56] <taplar> looks like node logic
[10:33:22] <ryan_ford> yeah it does. what are you using to bundle it?
[10:34:23] <ryan_ford> so you're including it with npm, but you're *not* using node? I'm really confused
[10:37:19] <bigode> Yes, I installed the entire module locally with npm instead of having to download just jquery.min.js manually
[10:37:46] <taplar> but where is this import statement at?
[10:38:15] <bigode> And IÂ´d like to use it from inside a source.js file which I import from the html file
[10:38:40] <ryan_ford> but import is something (for now) you can only really use in node. you need to include it the old fashioned way, you can concat everything later if your concerned about multiple requests
[10:38:46] <taplar> source.js will have to be ran through a bundler, like webpack, to understand what that import statement is trying to do
[10:38:46] <bigode> taplar: the import or require which is being tested are located at the source.ja file
[10:39:05] <taplar> afaik, native javascript does not understand the import statement
[10:39:24] <ryan_ford> ff just added support today I believe, but it's still got a long way to go
[10:39:37] <taplar> but this appears to be an OT conversation that would probably be more on topic for ##javascript
[10:40:14] <taplar> that will be cool if they start supporting it.  might make libraries like require obsolete
[10:40:53] <bigode> yes, I thought it was already a reality
[10:40:59] <ryan_ford> well require is used because it manages the order things are included right?
[10:41:36] <ryan_ford> so just do it the old way for now, or actually use node in your dev environment
[10:41:37] <taplar> it can do that too, but I would assume that an implementation of 'import' would potentially pull in the resources in order
[10:41:43] <bigode> I will keep a reference on html then
[10:41:58] <taplar> *in the order declared
[10:42:30] <ryan_ford> you can use node for dev without it running on node in production if that's a concern
[10:43:13] <ryan_ford> and in your html you can use .noConflict do your jq code in an iife if your concerned about poluting your global namespace
[10:44:33] <bigode> I don't want to use node. I just want to use npm to install a local module, in this case jquery
[10:45:36] <taplar> npm uses node as part of it's software, afaik.
[10:45:52] <taplar> node package manager
[10:45:55] <bigode> And as far as I have a node_module in my local project I was trying to load jquery from a source.js file isntead of loading it as a external reference on the thml file
[10:45:58] <ryan_ford> i bet if you look in that jquery file your pulled from npm it's not the same as the regular
[10:46:30] <ryan_ford> probably using node style exports and not just returning the jQ object like normal
[10:46:44] <ryan_ford> so it wouldn't work like you're expecting it to
[10:46:46] <taplar> so hold on, i want to work this logic
[10:47:01] <taplar> you don't want to load an external resource on the html, but you want to load an external resource in the js?
[10:47:16] <taplar> it would be loading an external resource in both cases
[10:47:21] <bigode> ryan_ford: jquery module is the entire module but the only file I would be interested is jquery.min.js
[10:48:00] <bigode> taplar: I thought it as the same thing
[10:48:16] <ryan_ford> but the cdn just returns the object, which puts it in the global namespace, the npm module isn't justy magically available like that
[10:48:16] <taplar> not without a bundler it wouldn't be
[10:48:27] <ryan_ford> and without node, you can't extract it the way you want to
[10:48:40] <taplar> the purpose of the imports with bundlers is to tell them all the resources it should take and compile into an output file
[10:48:46] <taplar> but you are saying you don't want to use a bundler
[10:48:57] <taplar> so you're kinda at odds with yourself
[10:49:26] <ryan_ford> so just fetch the resource yourself, you're laziness is creating *more* work instead of saving you
[10:49:32] <taplar> ^^^
[10:49:57] <taplar> grab the file, copy paste it into your source.js at the top, and done
[10:50:18] <bigode> Yaeh, your right.
[10:50:21] <bigode> Thank you!
[10:50:22] <ryan_ford> https://code.jquery.com/
[10:51:35] <bigode> ryan_ford: thank you ryan_ford !
[10:51:50] <ryan_ford> no problem
[11:03:19] <Levin^> hello
[11:03:42] <Levin^> https://codepen.io/anon/pen/yjjbGb?editors=1011
[11:04:12] <Levin^> I need to make this form have a simple validation, but I'm not sure if I wrote it right
[11:04:31] <Levin^> if the input text has .value, do something
[11:04:35] <taplar> you want to use val()
[11:04:39] <Levin^> hm
[11:04:49] <taplar> value is the element property, which jQuery does not directly expose
[11:04:56] <Levin^> oh
[11:04:58] <taplar> val() is the jQuery method to get this underlying property
[11:05:05] <Levin^> I see
[11:08:52] <Krimewatch> Hey guys, does anyone here know if I can see all the event details on load for Full Calendar?
[12:14:02] <Levin^> hi
[12:14:04] <Levin^> https://codepen.io/anon/pen/WJJELW?editors=0010
[12:14:19] <Levin^> for some reason my menu is acting quite buggy
[12:15:05] <Levin^> when the user scrolls through the page, the menu should highlight an item and scroll horizontally that menu to the left, to reach the beginning of the container
[12:16:05] <Levin^> but after the third item, it starts to act weirdly
[13:33:21] <Levin^> https://codepen.io/anon/pen/yjjbGb?editors=1011
[13:33:40] <Levin^> what is wrong with line 8 of my JS?
[13:33:54] <Levin^> how to make it detect the select?
[13:48:42] <taplar> not sure exactly what the issue is, but that particular line will always return a value
[13:50:16] <MikeD_> the thinking was broken
[13:50:37] <taplar> well it is a friday
[13:51:09] <MikeD_> yeah, we're just running out the clock at this point
[14:07:01] <Respect> Tadas: Hi again XD
[14:09:10] * taplar wonders if he meant taplar
[14:09:11] <Respect> oops, not Tadas, sorry. I think I was chatting with taplar last time
[14:09:18] <taplar> heh
[14:09:19] <Respect> whoops :)
[14:09:41] <Respect> my autocomplete demon followed me from the phone into here
[14:10:27] <Respect> I think I broke your solution when I removed the filter (apparently empty p tags are a thing for this app... who knows)
[14:10:43] <taplar> ah
[14:11:23] <Respect> If I wanted to remove the filter, would I just use question.ItemBodyHtml = $(question.ItemBodyHtml).find("p").attr('tabindex', 0).end().prop('outerHTML');
[14:12:09] <taplar> you could, or you could leave it as the multi step thing you were doing before to avoid the usage of end()
[14:13:35] <Respect> ok, I'll give it a shot. end is a performance hit?
[14:13:52] <Respect> I guess I'm asking if there's a good reason to avoid it?
[14:14:12] <taplar> it's sorta added complexity and makes the readability suffer a bit
[14:14:42] <taplar> Some people like to chain tons of stuff together, but that can make things hard to read/understand
[14:15:01] <taplar> its often better to error on the side of readability, since that also promotes maintainability
[14:16:18] <taplar> And you saw the other day where I missed the addition of the filter and we had to add a second end()
[14:16:28] <taplar> so it's really easy to miss stuff when you do things like that
[14:17:47] <Respect> So, just to check, this would be the readable version? https://pastebin.com/HAprn9C5
[14:18:29] <taplar> a readable version, sure
[14:18:42] <taplar> you got something, you're finding all the paragraphs, and setting the tabindex
[14:18:48] <taplar> and then you are getting the outerHTML
[14:18:56] <taplar> straight forward operations
[14:19:33] <Respect> seems good, I'll test it. fingers crossed
[14:20:33] <Respect> hm undefined.
[14:20:56] <Respect> thinking about all which you've taught me...
[14:21:53] <taplar> oh, no that's an error, hold on
[14:22:13] <taplar> store $(question.ItemBodyHtml) in your newMarkup variable
[14:22:26] <taplar> not the find of the p
[14:23:36] <taplar> https://pastebin.com/jhMKFR0H
[14:24:01] <taplar> so I should probably explain this a bit more
[14:24:36] <Respect> I feel like you touched on it last time
[14:24:51] <taplar> When you perform a selector like $(selector), or do something like $('html string'), jQuery is going to create a jQuery object that contains those elements found or created
[14:25:05] <taplar> so that's the returned value of that operation
[14:25:09] <Respect> Is it related to how you're not actually pointing to the html, so you can't set it.
[14:25:11] <Respect> I see
[14:25:34] <taplar> when you perform an operation off of that variable such as find() or filter(), that returns a brand new jQuery object containing the results
[14:25:59] <taplar> it has a reference to the jQuery object it worked off of, but it, itself, is a different element
[14:26:02] <Respect> So similar to what you were informing about last time, just being concious of whats returning, and an easy way to test would be just to see what's getting set. if it's an object, or what methods are available etc
[14:26:25] <Respect> logging the actual return would have made it easy to figure that out myself. So I can do that next itme
[14:26:27] <taplar> so when you do something like var x = $(thing).find(thing);  the value that is stored in x is the returned value of the last operation, which is the find()
[14:26:39] <Respect> Got it. Makes total sense
[14:26:50] <taplar> k
[14:27:05] <Respect> A very good primer, thanks so much.
[14:27:17] <Respect> Now I understand better how to debug it myself.
[14:27:22] <taplar> :)
[14:28:18] <taplar> which that also should give some insite into what end() actually does.  all end() does is tells the jQuery object to return the jQuery object it has a reference to that it originated from
[14:28:23] <dimi1947> https://jsfiddle.net/fiddlehunt/4ao7j5s7/7/ line 5...whenever I go to edit the word hair in the input the value update is pushed to the status array...the problem is that this happens every single time I add/remove a letter...so the array gets filled with many identical values...how to prevent that?
[14:29:32] <taplar> you could put a throttle in there to delay execution until the user stops typing for a given amount of time
[14:29:49] <taplar> or only do it on blur
[14:31:19] <dimi1947> what do you mean "on blur"?
[14:34:08] <taplar> blur is the pairing with focus.  it happens after you leave the input, but you are already binding on change so change would happen as well, so there isn't really a need for focus
[14:34:22] <taplar> err, blur
[14:37:40] <Respect> taplar: https://pastebin.com/RxcjV3Yw I think I've still got a misunderstanding, only returning one P tag :/
[14:39:54] <taplar> alright, i'm thinking it may be an issue with the element not having a shared parent
[14:40:04] <taplar> so one second
[14:41:16] <taplar> try this: https://pastebin.com/vfJzAJJq
[14:41:31] <Respect> I suppose it could be in either format, which I suppose could cause issues
[14:41:36] <Respect> yeesh
[14:41:57] <taplar> the console log for the new markup you showed was:
[14:41:59] <taplar> [p, div#aria-mth-a-3-exer-7-9-math1.visuallyhidden, br, br, p, text, div.row]
[14:42:15] <taplar> which says that there were 7 elements in the result stack
[14:42:33] <taplar> prop('outerHTML') off of that guy is most likley returning the html just for the first element, which is a p
[14:42:41] <Respect> so you're just making sure it has a parent. smart
[14:42:47] <taplar> a single parent, yep
[14:42:58] <Respect> single parent :,(
[14:43:04] <Respect> not easy
[14:43:14] <taplar> and then at the end the html() returns the innerHTML, which will be the html for all the elements you appended
[14:44:36] <Respect> Can I do a $('<span>').append(newMarkup); to make sure it's a two parent household? Single parent sound tough ;)
[14:44:53] <taplar> heh
[14:45:14] <taplar> trees are fine with a single parent, :P
[14:50:34] <Respect> TIL :) thanks, where you from maybe I'll buy you a beer sometime?
[14:53:23] <Respect> Or a slice of pizza if you don't partake, but either way, much appreciated!
[15:01:19] <taplar> it's all good
[15:09:31] <Respect> hey well digital cheers :)
[15:28:49] <gambl0re> hello?
[15:34:11] <taplar> evening
[18:57:03] <d3c0> !hi
[18:57:36] <robertmaxrees> hello
[18:58:33] <d3c0> I need set in one input only two length and  numerics
[19:00:55] <robertmaxrees> ok
[19:02:45] <robertmaxrees> d3c0 so what did you need help with?
[19:07:31] <d3c0> robertmaxrees: I need an input can only enter number and only two numbers
[19:08:46] <robertmaxrees> d3c0 what have you tried?
[19:08:58] <robertmaxrees> d3c0 show us some code in a jsfiddle with your attempts.
[19:11:00] <d3c0> http://dpaste.com/15DZSSF
[19:12:17] <robertmaxrees> $("#id_hematocrito").keypress(only_numbers(e));
[19:12:26] <robertmaxrees> remote the (e) from that.
[19:12:46] <robertmaxrees> so it's just .keypress(only_numbers)
[19:22:39] <robertmaxrees> d3c0 that work?
[19:26:35] <d3c0> what?
[19:26:49] <robertmaxrees> >.>
[19:26:52] <robertmaxrees> i showed you a fix.
[19:27:15] <robertmaxrees> did you try?
[19:47:04] <d3c0> oh excelente with out (E)
[19:47:15] <d3c0> (e)
[19:47:57] <d3c0> robertmaxrees: that work
[19:48:16] <robertmaxrees> right.
[19:54:47] <d3c0> Now I need two length numbers xD
[19:58:23] <robertmaxrees> so how do you think you'd do that?
[20:00:58] <d3c0> the inputs are dinamic from the backend, and this does not have a maximum length
[20:02:38] <robertmaxrees>  why not?
[20:04:28] <robertmaxrees> also: your current check isn't a very good way to do that.
[20:05:31] <d3c0> cause they are "django" forms, so whats is the correct way to do that??
[20:06:13] <robertmaxrees> you want to check the .val() of the input instead of the keycode
[20:11:55] <robertmaxrees> https://jsfiddle.net/joxzvya8/ this is closer to what you're looking for.
[20:11:58] <robertmaxrees> a freebie :)
[20:15:17] <d3c0> robertmaxrees: thank you :)  I'm coming back, I'm going to dinner
