[04:50:56] <ckb> good morning friends, is there an easy way for me to scroll an element if the document is trying to be scrolled?
[04:52:21] <ckb> weird question, I know. but I have a template that only has a center scrollable div, anything scroll event outside of that element, won't scroll the scrollable content
[04:53:01] <ckb> I guess I'm asking if I can redirect scroll from document to another element.
[06:56:23] <Cork> ckb: just make the document overflow: hidden, and put the focus in the scrollable element when focus is outside
[06:56:39] <Cork> should solve your problem without the lag of js scrolling
[06:57:09] <ckb> Cork, "focus" means x,y position?
[06:57:48] <ckb> it's an absolutely positioned page with the center element scrollable, so the document is never larger than the viewport
[06:58:03] <Cork> ckb: on('focus')
[06:58:17] <ckb> document.on.focus?
[06:58:26] <Cork> no
[06:58:27] <ckb> that applies to scroll?
[06:58:42] <ckb> I'm trying to scroll #element when document is scrolled
[06:58:56] <ckb> oh
[06:59:15] <ckb> but if document is hidden, it should get the next scrollable?
[06:59:17] <Cork> $(document).on('focus', function(event) { if(!$(event.target).closest('the scrollable div').length) { /* move focus to the div */ }})
[06:59:48] <Cork> ckb: ya, and my point is make the document not scrolled at all
[06:59:55] <ckb> a scroll, touch event triggers focus?
[07:00:06] <ckb> the document ISN'T scrollable
[07:00:23] <Cork> it is if you want to catch the scroll event on it...
[07:01:05] <ckb> absolute; top 0; width 100; .... absolute: top 100; bottom 100; width 100; ... absolute; bottom 0; height 100
[07:01:18] <Cork> doesn't make it not scrollable
[07:01:26] <ckb> whatever, hopefully that makes sense
[07:01:32] <ckb> got it
[07:03:35] <Cork> ckb: just to be clear, setting position absolute on the child doens't make the parent not scrollable. It just moves the element out of the page flow, so it isn't part of it
[07:03:59] <ckb> so setting the body and everything to overflow: hidden should solve it?
[07:04:20] <Cork> (also i suspect you mean positon: fixed, as absolute won't be relateve to the window size)
[07:04:52] <Cork> only old ie made position: absolute relateive to the window
[07:05:20] <Cork> ckb: yes and no, you still need to make the scrollable element the focused element
[07:05:34] <ckb> what is "move focus" in that JS?
[07:05:42] <Cork> yes
[07:05:58] <ckb> yes, how do I move that focus to the scrollable div?
[07:06:03] <ckb> on "scroll"
[07:06:08] <ckb> or "touchmove"
[07:06:13] <Cork> you can't do it on scroll
[07:06:33] <Cork> you need to ensure the focus is in the correct element BEFORE the scroll happens
[07:06:41] <Cork> https://api.jquery.com/focus/
[07:07:07] <Cork> moving focus on scroll will just make for a buggy experience where scroll sometimes work and sometimes doesn't
[07:08:11] <Cork> also, with all of this said, i would causion about using sub elements as the scrolling parents for mobile, it works bad there
[07:08:19] <Cork> some mobile browsers just plain remove them
[07:08:29] <ckb> hmmm
[07:08:31] <Cork> (overflow: hidden)
[07:09:00] <Cork> a better choice is force the height of the document to be the height of the element, and just cover all the content and let the normal scroll handle it
[07:15:46] <Cork> ckb: something like this is how i would do it: https://jsfiddle.net/jLx53bus/
[07:24:57] <ckb>  Cork: checking it out now
[09:18:03] <ckb> Cork: I'm so confused.
[09:33:56] <ckb> like can I set document.scrollingElement?
[09:39:59] <Cork> ckb: i think you can, but note that is a draft function, you will not be able to use it in anything except extreamly modern browsers
[09:40:14] <Cork> cause it isn't even a standard yet
[09:41:52] <Cork> ah, no https://drafts.csswg.org/cssom-view/#dom-document-scrollingelement
[09:42:00] <Cork> it is just a getter not a setter
[09:42:17] <Cork> though not sure what setting it would actually do as there isn't one scrolling element in the page
[11:52:41] <pycode1> hello
[11:52:46] <pycode1> i am trying to make a GET request
[11:52:52] <pycode1> but the server returns http 204
[11:52:58] <pycode1> why jquery cannot handle it ?
[11:53:04] <pycode1> it is not an error
[11:53:07] <pycode1> just no content
[11:53:32] <pycode1> i am doing $.get( url, function( data ) {   ...  }
[11:53:47] <pycode1> if i put code inside { } it is not executed
[11:58:50] <pycode1> same using $.ajax
[11:59:28] <shoky> pycode1: it should be working. maybe the server is responding with a content-type header (e.g. json) that makes jquery try to parse the request. try adding  dataType: 'text'  option to $.ajax
[11:59:39] <shoky> also add an error handler
[12:01:11] <pycode1> shoky, the server does not send any response
[12:01:15] <pycode1> ok i try with datatype
[12:01:35] <shoky> pycode1: it obviously sends a response, e.g. 204 is part of the response
[12:01:39] <shoky> and the http headers
[12:01:49] <shoky> jjust empty response body, maybe
[12:02:03] <pycode1> shoky, with {dataType: 'text'} same problem
[12:02:15] <pycode1> shoky, yeah i mean no content
[12:02:59] <pycode1> shoky, https://bpa.st/MVZA
[12:04:29] <shoky> pycode1 i donno then. show your code maybe
[12:04:41] <shoky> and add an error handler
[12:04:50] <shoky> might give some info
[12:05:04] <pycode1> my code?                 $.ajax( url , {dataType: 'text'}).done(function( data ) {  $(this).removeClass('active');     });
[12:05:52] <shoky> pycode1: and if you put a console.log(..)  first in the callback, it doesn't log?
[12:06:02] <shoky> (because using `this` there is wrong probably)
[12:06:12] <pycode1> try
[12:06:49] <pycode1> hmm
[12:06:55] <pycode1> $(this) <--- is the problem
[12:06:58] <shoky> yep
[12:06:59] <pycode1> should i put it in a var
[12:07:00] <pycode1> ?
[12:07:08] <pycode1> var x = $(this)
[12:07:13] <pycode1> and then call x inside function ?
[12:07:16] <shoky> that's one way yeah
[12:07:26] <shoky> or you could use an arrow function instead
[12:07:42] <shoky> .done((data) => { $(this).removeClass(..) })    should work
[12:08:08] <shoky> (arrow functions get the "outer" this, they dont replace it like regular function calls)
[12:08:18] <pycode1> oh interesting
[12:09:44] <pycode1> works!! thanks!
[12:10:09] <shoky> np ;)
[12:10:16] <pycode1> shoky, my code is https://bpa.st/4HNA
[12:10:31] <pycode1> entire code :D maybe i show the code first ahah
[12:11:26] <shoky> üëç
