[05:17:36] <lebarjack> Hi, I installed jquery-ui-dist with yarn. When I try to build my assets with webpack/encore, it complains about missing ui-icons images.
[05:17:53] <lebarjack> Error: Can't resolve './images/ui-icons_444444_256x240.png'
[05:19:16] <lebarjack> the images are listed as being part of the package (see https://yarnpkg.com/en/package/jquery-ui-dist?files)
[05:19:54] <lebarjack> but they aren't present anywhere after I "yarn add"ed my jquery-ui
[05:36:14] <Cork> that sounds more like a yarn/package question then a jquery one
[05:37:35] <lebarjack> Yes, you're right
[05:38:43] <lebarjack> unfortunatly, there's no yarn channel here on freenode ^^
[05:40:35] <Cork> ya, looks like they use other platforms
[05:45:47] <CuirPork> does focus bubble?
[05:46:12] <Cork> no, but focus-in does (if i remember the new name correctly)
[05:46:31] <CuirPork> Thanks. That's even better
[05:46:37] <Cork> *focusin
[05:46:46] <Cork> https://developer.mozilla.org/en-US/docs/Web/Events/focusin
[05:47:03] <CuirPork> just went there. thanks
[07:13:14] <sine`> how can i make a string be a pointer to the var of the same name
[07:13:27] <Cork> you can't
[07:13:39] <Cork> if the variable is a property on an object instead though you can
[07:14:18] <Cork> var source = { value: 123 }; source['value'] == 123
[07:15:42] <Cork> (there are some exceptions to this "you can't" but it depends on where and with what you want to use it)
[07:16:30] <sine`> I guess I need to have my data mapped properly
[07:16:41] <sine`> rather than trying to use data-values as array name pointers hah
[07:17:37] <Cork> sine`: if the string is in an element you can juse use .data()
[07:18:07] <Cork> <elm data-values="[1,2,3]"> $('elm').data('values')[2] == 3
[07:20:04] <sine`> Cork: I have form option drop down boxes, the second dropdown options select is dependant on the first dropdown
[07:20:23] <Cork> ok?
[07:20:42] <sine`> I guess i should just save it aall as K V pairs and just reference the array from the index/value
[07:21:01] <sine`> and just have one data array/dict or whatever its called in js
[07:27:50] <sine`> Cork: what is wrong with my array/data https://bpaste.net/show/c1ba0dd76ff5
[07:28:23] <Cork> you have ; in the objects
[07:31:12] <sine`> ahh thanks bro. silly me
[07:34:50] <Cork> sine`: this is how i would do it https://jsfiddle.net/amotc2wy/1/
[07:43:36] <sine`> ok bro thanks i have looked at that, but i feel im close with my way, i need to get through it and if i fail i will try your way
[07:43:50] <sine`> i dont like the idea of having all the topions in the data attr
[07:52:36] <sine`> Cork: can you see what im doing here, trying to do another foreach k,v, is this possible? https://bpaste.net/show/1d9459016cf0
[07:53:26] <Cork> sine`: don't do line 15 that risks xss
[07:53:59] <Cork> also don't use removeAttr or attr for controling disabled, use .prop('disabled', true/false)
[07:54:22] <sine`> ok
[07:54:34] <sine`> im shooting from the hip learning this jquery
[07:54:36] <Cork> apart from that, too little information
[07:54:55] <Cork> (make a working jsfiddle)
[07:55:02] <sine`> in the last part,how can i populate the options with the values from sizes
[07:55:10] <sine`> ok
[07:55:49] <sine`> ok how about this
[08:04:24] <sine`> just needed to reference it like this: testmodels[modArrayIndex].sizes
[08:04:34] <sine`> i forgot about the dots
[08:04:43] <sine`> this.sub.array.part[0]
[08:06:38] <sine`> ok can you explain how line 15 risks XSS
[08:08:37] <Cork> sine`: $('<elm>' + variable + '</elm
[08:08:47] <Cork> sine`: $('<elm>' + variable + '</elm>') parses the variable as html
[08:08:58] <Cork> so if you have a script tag in there the js will run
[08:09:20] <Cork> the safer (and cleaner) way to write it is $('<elm>', { test: 'only text' })
[08:09:41] <Cork> that will create a elm element and populate its innerText with 'only text'
[08:09:43] <Cork> so no html
[08:10:54] <sine`> but how is the script tag going to be in there when its my script doing it
[08:11:03] <sine`> those elements dont exist until that moment
[08:11:26] <Cork> sine`: ya, but unless you can guaratee that user can't ever add value to that array you have the xss
[08:11:43] <Cork> cause of that inherent risk it is better to never use that style if you can avoid it
[08:11:50] <Cork> (also the cleaner part)
[08:12:14] <sine`> ok thanks for that. there is no way anyone is going to modify the array its not going to be like that but i also understand the better way going forward
[08:12:19] <Cork> $($.parseHTML(bigHTMLValue)) is one thing
[08:12:27] <sine`> because one day i might slip into doing that
[08:12:30] <Cork> but for one element there is no reason to take the risk
[08:13:09] <sine`> var option = jQuery('<option value="'+ind+'">'+val+'</option>');
[08:13:32] <sine`> just show me the first part, how i modify it ?
[08:13:41] <Cork> sine`: the most common fault is doing $('<input name="name" value="' + name ' '">')
[08:13:45] <Cork> and then yay
[08:13:58] <Cork> just write the script tag in the input field and reload the page and BANG
[08:14:16] <thykka> var ind = '"><script> doEvilStuff(); </script><input value="'
[08:14:18] <thykka> :)
[08:14:22] <Cork> yup
[08:14:44] <Cork> sine`: <the tag name> the rest of the values you just move into the object
[08:14:56] <Cork> it isn't more complicated then that
[08:15:32] <sine`> ok so..
[08:16:20] <sine`> var option = jQuery('<option></option>',{value:'ind'},{text:'val'});
[08:16:27] <Cork> no </option>
[08:16:37] <sine`> var option = jQuery('<option>',{value:'ind'},{text:'val'});
[08:16:40] <Cork> and one object not multiple
[08:16:57] <sine`> var option = jQuery('<option>',{value:'ind',text:'val'});
[08:17:01] <Cork> yup
[08:17:16] <sine`> like a sprintf
[08:17:18] <sine`> cool
[08:17:21] <thykka> now change the 'var' to 'const' and prefix it's name with a $
[08:17:35] <Cork> thykka: no no need for the $
[08:17:36] <Cork> ...
[08:17:44] <thykka> not strictly, no
[08:17:49] <Cork> no, not at all
[08:18:11] <Cork> it is one of the most silly habbits of jquery coders, it just adds clutter
[08:18:26] <sine`> how do I add to the element without it being a attr:value
[08:18:26] <thykka> you call it clutter, I call it expressing your intent
[08:18:30] <sine`> like disabled or selected
[08:18:35] <Cork> sine`: you don't
[08:18:50] <sine`> var option = jQuery('<option selected disabled>',{value:'ind',text:'val'});
[08:18:59] <Cork> sine`: that is a disabled: true
[08:19:08] <Cork> same for selected
[08:19:14] <sine`> ok
[08:19:41] <Cork> thykka: what i see happen a lot when ppl go for that is $op = 10; $use = "something"
[08:19:45] <Cork> and then we have... php?
[08:20:07] <thykka> err
[08:20:15] <thykka> doesn't sound like much of an argument
[08:20:19] <Cork> or even better $option = $(); parent.append($option) $option = "sing";
[08:20:35] <Cork> you already state it is an option, $ doesn't clearify anything
[08:20:45] <thykka> why would you designate a non jquery collection with a $?
[08:21:14] <Cork> thykka: i've seen it, and it happens a lot as a consequense of those recommendations
[08:21:20] <thykka> ...
[08:21:31] <Cork> just hang in here for a while and you will see it a lot
[08:21:45] <Cork> also look into jquery heavy wordpress sites it happens a lot there too
[08:22:03] <Cork> and that is why i'm quite heavy against the recommendation
[08:22:05] <thykka> why should I care? incompetent devs exist whether i prefix my jqcollections or not
[08:22:25] <Cork> thykka: sure do what works for you, but don't recommend new developers to do it
[08:22:26] <sine`> so log says unexpected '-'
[08:22:29] <sine`> var option = jQuery('<option>',{value:'k', data-pgq:'v.mod', text:'v.type'});
[08:22:46] <Cork> sine`: data: { pgq: "" } if i remember correctly
[08:23:00] <thykka> I still think that's approaching the problem from the wrong end
[08:23:09] <Cork> else use 'data-pgq': ''
[08:23:38] <Cork> thykka: well i don't see what value it adds from the start
[08:23:42] <thykka> if you're worried that inexperienced devs don't understand the reasoning behind these rules, then perhaps explain the rules better?
[08:23:46] <Cork> and i see what problem it adds
[08:23:58] <Cork> so... hens i don't like the recommendation at all
[08:24:13] <thykka> same reason as I'd do const formElement; instead of const form;
[08:24:28] <sine`> its not interpreting the variables for their data just using the varaible names
[08:24:28] <Cork> thykka: it is miss used too much so i would'n ever trust it anyway unless i wrote the code my self
[08:24:35] <sine`> stop nerdwar and help
[08:24:50] <Cork> sine`: don't wrap the variable in '' if you want the content from it in the object
[08:25:08] <Cork> cause '' makes it a literal string
[08:25:32] <sine`> of course i should have know
[08:25:38] <sine`> like every other language!
[08:25:52] <Cork> :) ya
[08:26:03] <thykka> ..furthermore, if someone I wrote code with would do such a basic mistake, I'd confront them about it, perhaps even ask them to fix it
[08:26:08] <sine`> thanks for that info I have increased in jquery experience points to the next level
[08:26:25] <sine`> thykka: why const and not var
[08:26:35] <Cork> it makes the variable inmutable
[08:26:45] <Cork> also makes it not run in older browser but...
[08:26:58] <thykka> not immutable, the variable can't be reassigned
[08:27:19] <thykka> you can do this: const myObj = { foo: 1 }; myObj.foo = 2
[08:27:38] <Cork> that is acuse the variable contains the pointer to the object, not the object
[08:27:46] <Cork> so yes it is still true
[08:28:38] <thykka> immutability generally refers to an object whose state cannot be modified, which is not the case with const
[08:34:39] <thykka> ..so if inexperienced devs are using $-prefix wrong, what do you think'll happen when they read about immutability and someone tells them const makes a variable immutable
[08:34:45] <thykka> ¯\_(ツ)_/¯
[08:35:40] <Cork> it makes the variable immutable
[08:35:59] <thykka> no, it makes an immutable binding, which is very different from making a variable itself immutable
[08:36:04] <Cork> but the important part to know is that the content of an object is NEVER part of the variable
[08:36:30] <Cork> that is why you can use an object to make pointers in js
[10:47:11] <kellyindurham> hello! I've spent hours on stackoverflow trying to solve a jquery ui issue i'm having and wondering if I might find the answer here. Have I come to the right place?
[10:47:56] <thykka> depends on the issue
[10:48:02] <thykka> but probably yes
[10:49:45] <kellyindurham> i can't for the life of my get the ui-front for jquery autocomplete to work in a modal. I can see that the autocomplete functionality is working because i'm able to see my options with arrow keys but i've tried every solution on stackoverflow and still nothing
[10:53:48] <thykka> err.. okay
[10:55:21] <kellyindurham_> ya not sure this format is going to be the easiest to explain in
[10:56:34] <thykka> perhaps don't close your IRC tab every time you look at something else? :P
[11:27:25] <KnightsOfNi> Does anyone know why my hamburger menu responds fine the first time, but not the second time? https://leesmee.com (need to narrow the screen to make the hamburger show)
[11:52:34] <Horacsio> it works within safari!
[11:52:49] <Horacsio> with a second click
[11:53:50] <Horacsio> if I click one option it goes ok if I click out when I go to open the menu I need a 2nd click
