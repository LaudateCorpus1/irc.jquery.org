[02:36:30] * Tcalp gives Stoot a student grade of E-
[02:38:24] <Tcalp> That said, I do remember being on IRC back when I was trying to pick-up VB6 (~20 years ago)
[02:38:46] <Tcalp> mind you, googling answers wasn't around like it is today lol
[07:43:11] <Stoot> Tcalp I'm already far beyond that period you teenie :P
[11:43:30] <adder> hi, I'm new to jquery so excuse my noobness, I have this script https://dpaste.de/sW9n but it's not working as expected because it just duplicates the entire page instead of just creating another <select>
[11:44:15] <adder> this is my view https://dpaste.de/UMMY
[11:44:42] <adder> and this is the corresponding template https://dpaste.de/vRsL
[11:45:32] <adder> so I'm trying to add another <select> whenever a value in one <select> changes
[17:25:03] <factor> Can I do a $(window).on("get", readyFn ); Is get a thing. I am using get instead of lad.
[17:25:05] <factor> load^
[18:29:35] <adder> I'm trying to implement chained dependent dropdown combobox selection, so you start with one combobox for main category and once you select main category, another <select> appears for selecting a subcategory, and so on until the innermost (most specific) subcategory is selected. Let's say that I have two main categories, Books and Shoes, so if I go Books -> Textbooks -> Primary school, then I decide to go for Shoes instead, four <selects>s would
[18:29:35] <adder> appear. Instead, I want to clear all children subcategories of a selected (sub)category (in this scenario, two <select>s (Textbooks and Primary school)) and leave the user to chose from only main category. Or, if I chose Books -> Literature, it should remove the Primary school/High school <select> and show subcategories of 'Literature'. Here is my jQuery code in a Django template: https://dpaste.de/vNrd
[18:29:38] <adder> I'm trying to implement chained dependent dropdown combobox selection, so you start with one combobox for main category and once you select main category, another <select> appears for selecting a subcategory, and so on until the innermost (most specific) subcategory is selected.
[18:29:42] <adder> Let's say that I have two main categories, Books and Shoes, so if I go Books -> Textbooks -> Primary school, then I decide to go for Shoes instead, four <selects>s would appear. Instead, I want to clear all children subcategories of a selected (sub)category (in this scenario, two <select>s (Textbooks and Primary school)) and leave the user to chose from only main category. Or, if I chose Books -> Literature, it should remove the Primary school/High
[18:33:18] <adder> sorry about that
[18:33:22] <adder> I'm trying to implement chained dependent dropdown combobox selection, so you start with one combobox for main category and once you select main category, another <select> appears for selecting a subcategory, and so on until the innermost (most specific) subcategory is selected. Let's say that I have two main categories, Books and Shoes, so if I go Books -> Textbooks -> Primary school, then I decide to go for Shoes instead, four <selects>s would
[18:33:22] <adder> appear. Instead, I want to clear all children subcategories of a selected (sub)category (in this scenario, two <select>s (Textbooks and Primary school)) and leave the user to chose from only main category. Or, if I chose Books -> Literature, it should remove the Primary school/High school <select> and show subcategories of 'Literature'. Here is my jQuery code in a Django template: https://dpaste.de/vNrd ...and here is my view: https://dpaste.de/qrsh
[18:33:23] <adder> products/category_dropdown_list_options.html: https://dpaste.de/fDiK This currently works like this, whenever a value is changed in a combobox, an AJAX request is fired which calls a view that renders another <select> if a category has children, otherwise returns an HttpResponse which stops attaching the listener. I am using django-mptt to model my categories: https://dpaste.de/oQ4A How can I overcome the issue?
[19:07:41] <shoky_> adder: you have access to the current <select> via $(this) like you're using it. you can use that to select the next <select>s and remove them, before appending the new one
[19:08:15] <shoky_> adder: assuming they're all sibling elements,  you could  $(this).nextAll('select').remove()
[19:09:44] <shoky_> adder: and if you want to access $(this) from inside the ajax success, you'd need to store it in a variable and use that var inside the callback.  or use an arrow function instead, or other ways
[19:11:39] <shoky_> adder: also you should change $('select').change($r_)  to use event delegation instead. the way you're doing it now will call your function multiple times for each change
[19:12:39] <shoky_> adder: you can do that by changing it to:  $(document).on('change', 'select', $r_);
[19:13:02] <shoky_> adder: and removing the .change() call inside the success callback (line 22)
[19:35:45] <Stoot> How can I catch the full name of the inputfield when I know [dateStart] ? <div id="dateTimeWrapper-activity[main][dateStart]" name="activity[main][dateStart]">
[19:36:05] <Stoot> oops div in this case, but also for input
[19:37:25] <Stoot> I need to use some wildcard like $('#id[name*="timeStart"]', form) or so ?
[20:15:13] <Stoot> Fixed!
[20:49:32] <adder> hey shoky_, thanks for your input, much appreciated. I have managed to get it somewhat working
