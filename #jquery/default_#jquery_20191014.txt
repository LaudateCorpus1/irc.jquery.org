[06:55:03] <cusco> hello... I'm using a selector by placeholder, for instance: $('select[placeholder="Modal reference"]') all good, gives me the list of elements
[06:55:20] <cusco> now I'm trying to use a .on() with the same selector, and not sure how it works
[06:55:30] <cusco> can I use: $(document).on('load', $('select[placeholder="Modal reference"]'), populate_modal_choices());
[06:55:45] <cusco> or should I use: $(document).on('load', 'select[placeholder="Modal reference"]', populate_modal_choices());
[07:23:16] <Cork> cusco: depends on if the elements are added/modified (placeholder string) after you do the event binding
[07:23:53] <Cork> oh, btw none of those will work
[07:24:01] <Cork> load isn't an event for select element
[07:24:13] <Cork> and you cant give the return value from $() to .on function
[07:25:40] <cusco> ahh thats why
[07:25:52] <cusco> 'change' was working, 'load' was not
[07:26:15] <cusco> instead of load, what can I use?
[07:27:42] <cusco> I mean to append stuff to a select, that does not exist yet
[07:29:13] <Cork> events is for user actions, not script changes
[07:29:36] <Cork> provide a $.Callback() and call it when the content is replaced/updated
[07:29:41] <Cork> or similar
[07:29:48] <Cork> but the browser won't help you
[07:30:26] <cusco> I can't write the code that makes the select appear..
[07:30:26] <Cork> you can get something working with MutationObservers, but i don't recommend it; they are messy and most likely overkill for what you really need
[07:30:50] <cusco> I can only modify dom..
[07:31:07] <Cork> cusco: do you know what causes the select to be added?
[07:31:09] <cusco> ok I've stumbled on MutationObservers just before, I'll look into that
[07:31:16] <Cork> ex. a button is cliced or similar
[07:31:28] <Cork> cause it is most likely the correct solution
[07:31:34] <cusco> no.. it shows after initial page load
[07:31:48] <Cork> then find what is adding it
[07:31:56] <Cork> you can get a clean solution from there
[07:32:25] <cusco> I understand.. but I can't write the code that is making content show
[07:32:35] <Cork> didn't say you have to
[07:32:41] <Cork> you have to find what is triggering it
[07:32:44] <Cork> completely different
[07:33:05] <cusco> ok.. how?
[07:33:13] <Cork> by finding what line of code causes it?
[07:33:16] <cusco> can browser provide events happening?
[07:33:21] <Cork> no
[07:33:23] <cusco> ah..
[07:33:26] <Cork> events are for user input as i said
[07:33:31] <cusco> err yes
[07:33:45] <Cork> the website developer is meant to know what makes the site work
[07:34:14] <undefined_bob> some sites doesn't even work at all
[07:34:31] <Cork> but more plasti padding isn't the solution for those problems
[07:34:44] <Cork> adding hacks on hacks will make the site unfixable in the end
[07:34:52] <Cork> if something works, but you don't know how, figure it out
[07:34:54] <cusco> I understand and am aware, but will have to be for me
[07:34:56] <Cork> future you will thank you
[07:35:14] <cusco> I actually understand what is happening.รง.
[07:35:25] <Cork> not if you don't know what is adding the select...
[07:35:43] <cusco> this is a django cms: wagtail - and it has a admin design interface, and we're having a "chicken/egg" problem
[07:36:04] <cusco> while in the editor, stuff is not saved on the database, so it does not show on the "select"
[07:36:18] <cusco> thus this hackish way of using js, to append it there
[07:36:36] <Cork> ya, i know you know "js does it"
[07:36:43] <Cork> but you don't know where and how it does it
[07:36:46] <cusco> now, how wagtail renders the whole admin page.. thats a lot of code to understand
[07:36:49] <Cork> and that is what i have a problem with
[07:37:12] <Cork> dig into the rendered page and find where it is added, and how it does it
[07:37:19] <Cork> it is really good knowlage to have for your future
[07:37:52] <Cork> doesn't have to mean it is usefull for this problem, but you should be very interesting to know exactly how the page you administer work
[07:38:15] <Cork> else when things bug out (and they always do) you will be stranded
[08:24:33] <heyho> hi
[08:25:05] <heyho> I try to get this filter to working: https://jsfiddle.net/csornmo/hjxvoawe/218/
[08:26:00] <heyho> Filter by date working
[08:26:31] <heyho> but filter with Category not working with the dates
[08:29:05] <Cork> why do you each loop around thisInput? it is always only one element so...
[08:30:03] <Cork> i suspect you intended to do $('input:checked').each() but not sure
[08:30:21] <Cork> the entire structure is a bit weird as you loop all input element on every change of anything
[08:30:30] <Cork> something that is very wastefull...
[08:32:24] <heyho> Cork, I do an each to check if input is type="date" or type="checkbox"
[08:33:01] <Cork> heyho: line 50 isn't needed at all
[08:33:11] <Cork> thisInput is one input field, and alwys only one
[08:33:17] <Cork> no point in looping around it
[08:34:07] <Cork> and if ( $('input:checked').length > 0 ) { should be chanted to if ( thisInput.is(':checked') ) {
[08:34:11] <heyho> okey, true. its gone :)
[08:34:38] <Cork> no point in checking if another input field is checked, when it is the current one that matters
[08:35:04] <Cork> then you can use toggleClass based on if the field was checked or unchecked
[08:35:43] <Cork> also the solution you have will not work with multiple checked values
[08:35:59] <Cork> you have to build an "or" list and run thjat on the result list
[08:36:37] <Cork> ($('.result-box').filter('[data-cat="v1"], [data-cat="v2"], [data-cat="v3"]...')
[08:37:17] <heyho> build an array and put it in filter() ?
[08:38:00] <Cork> so something like var filter = $.map($(':checkbox:checked'), function(elm) { return elm.value; });
[08:38:51] <Cork> and each value in that array would be one in the v1,v2 list i showed before
[08:39:05] <Cork> else you would hide all cars when you check all mc's
[08:39:23] <Cork> and all cars and mcs when you show the bikes and so on
[08:39:41] <Cork> (so it would be radio buttons instead of checkboxes)
[09:12:23] <heyho> Cork, this worked: https://jsfiddle.net/csornmo/hjxvoawe/257/
[14:53:49] <robertparkerx> I need some help. I am trying to add to the result but it keeps appending 0.00 at the start. I don't know what I'm doing wrong. I tried to cast them as Number() but it didn't help
[14:53:51] <robertparkerx> https://gist.github.com/robertparkerx/20257f07ea2fe42e51bc590c55a68097
[14:54:15] <robertmaxrees> hCartCount?
[14:54:17] <robertparkerx> Also my hCartCount goes straight to zero when I click
[14:54:24] <robertparkerx> hCartSum
[14:54:36] <taplar> the console log is outside of the ajax call
[14:54:55] <robertmaxrees> so for starters - ajhax calls are async. so it's firing the call and then continues on.
[14:55:02] <robertmaxrees> it's not awaiting for that success to finish.
[14:55:08] <robertparkerx> :(
[14:55:26] <robertmaxrees> just put that logic in the success handler./
[14:55:28] <robertmaxrees> problem solved.
[14:56:20] <robertmaxrees> also: why are you using .attr() for setting style instead of using .css()?
[14:56:49] <robertparkerx> just trying to use it as variable storage
[14:56:50] <taplar> The usage of ".bind(this)" in the two places looks like a code smell as well
[14:56:53] <robertparkerx> data-ordernum
[14:57:01] <robertmaxrees> huh?
[14:58:04] <robertparkerx> woah
[14:58:07] <robertparkerx> That fixed it
[14:58:11] <robertmaxrees> what did?
[14:58:17] <robertparkerx> putting the logic inside of the success handler
[14:58:21] <robertmaxrees> right.
[14:58:33] <robertmaxrees> ajax is async.  that's why you have that handler.
[14:58:42] <robertmaxrees> btw - you don't want to use .attr() basically ever.
[14:58:47] <robertparkerx> I need to study more
[14:58:51] <robertparkerx> Why not
[14:59:06] <robertmaxrees> .prop() and .data() are much more appropriate.
[15:01:04] <taplar> can you give some insight into the reasons for including ".bind(this)" in the logic?
[15:01:16] <robertparkerx> I'll change that
[15:01:54] <robertparkerx> I was reusing code that was working for another shortcode
[15:02:00] <robertparkerx> I just changed it to suit this
[15:02:41] <robertmaxrees> https://bpaste.net/show/p-BP
[15:02:42] <taplar> also, a small thing, passing in the event as '$' is..... slightly confusing
[15:03:18] <robertmaxrees> ^^^
[15:03:42] <robertparkerx> Thanks for the help!!
[15:04:17] <robertmaxrees> you gonna answer taplar's question robertparkerx?
[15:06:46] <taplar> the last paste doesn't have the $ passed in.  still has the binds though
[15:07:03] <robertmaxrees> yeah, those were my tweaks.,
[15:07:11] <taplar> ah, lmao
[15:07:12] <robertparkerx> I said it was because I reuse code that was working
[15:07:18] <robertparkerx> There was no reason behind it here
[15:07:25] <robertmaxrees> what would you suggest instead of the .bind(this) calls taplar?
[15:07:28] <taplar> too many roberts...
[15:07:50] <taplar> well i'm not sure what the point of using them there is, given that the 'this' is not used inside
[15:08:07] <robertmaxrees> hah, good ctach
[15:08:09] <robertmaxrees> *catch
[15:10:26] <robertparkerx> You're right :(
[15:10:58] <robertmaxrees> robertparkerx i might spend some time trying to learn about what your code is actually doing.  copy/pasting big things around and then not understand what they're doing is a great way to introduce bugs without knowing how to fix them ;)
[15:11:38] <robertparkerx> You're right
[15:11:55] <taplar> i would also consider performing the logic you moved into your inner most success into a Promise.all or $.when().then
[15:12:05] <robertmaxrees> ^
[15:12:54] <taplar> because if hCartCount hits greater than 0 on the not-last ajax call, when future calls finish they will repeat the logic unnecessarily
[15:14:23] <robertparkerx> That explains why it's longer than I would expect
[15:21:04] <taplar> also: hCartSum = parseFloat(hCartSum).toFixed(2);
[15:21:13] <taplar> hCartSum is already a Number, no?
[15:21:56] <taplar> it starts off as 0, and then your operation on it is: hCartSum += parseInt(product.amount) * product.unit1 * product.price;
[15:40:52] <robertparkerx> I hate to keep bothering you but does this look better https://gist.github.com/robertparkerx/4d8eea97effc21b8768441b5fba04007
[15:41:15] <robertmaxrees> you're still usinbg .attr("style",
[15:41:25] <robertparkerx> crap I forgot
[15:41:38] <robertmaxrees> and you're still passing the event object as $ instead oif e.
[15:41:47] <robertparkerx> I missed that
[15:42:20] <robertmaxrees> and stuff like _this.attr('data-ordernum'); should be _this.data('ordernum');
[15:48:55] <robertparkerx> Okay I fixed those
[16:02:10] <robertparkerx> Thanks a lot
[16:02:52] <robertmaxrees> sure.
