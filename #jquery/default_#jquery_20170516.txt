[01:20:54] <ClydeSlims> I have an animation set in my CSS code. To stop it I use .stop(), but how do I start it on demand?
[01:21:36] <robertmaxrees> add/remove the class in question.
[01:21:44] <robertmaxrees> if i understand the question correctly.
[01:33:51] <ClydeSlims> Hmm stop() doesn't seem to be working: https://jsfiddle.net/28jvLbnu/
[01:34:04] <robertmaxrees> heh i was about to say...
[01:34:09] <robertmaxrees> .stop() is for jquery animations.
[01:34:38] <ClydeSlims> Oh.
[01:35:59] <robertmaxrees> https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state might be helpful here.
[01:36:45] <ClydeSlims> Ah animation-play-state
[01:36:48] <ClydeSlims> oh you linked it haha
[01:36:54] <robertmaxrees> ;)
[01:36:54] <ClydeSlims> I set it to paused and it works
[01:36:59] <robertmaxrees> there you go then.
[03:22:58] <rgr> is there a recommended channel for sass/bootstrap questions?
[03:25:25] <Cork> ##twitter-bootstrap if i remember correctly
[03:25:50] <rgr> seems invite only
[03:26:20] <Cork> uh >_>
[03:26:45] <Cork> ah, no it is changed to ##bootstrap
[03:26:52] <rgr> ah ## ok thx
[03:33:56] <rgr> v little going on there it seems.
[05:17:18] <aleray> hi, I have such a map: https://jsfiddle.net/wd7jwxg9/3/
[05:17:29] <aleray> how can I get the max children depth?
[05:18:00] <Cork> s/map/object/
[05:18:14] <Cork> you would have to recursively loop the tree
[07:17:12] <visual> hey jqueries
[07:17:31] <visual> how would you go about executing a .before() only once?
[07:21:32] <Cork> visual: uh, "only once"?
[07:21:41] <visual> for only 1 element
[07:21:57] <Cork> .first().before()?
[07:22:09] <visual> :O!
[07:22:13] <visual> thanks Cork
[07:22:18] <Cork> heh np
[07:22:28] <Cork> thought this was about to get complicated XD
[07:23:43] <visual> me too ))
[07:24:11] <Cork> thought you where about to ask for a way to be able to call .before() multiple times but not adding the content more then once .)
[07:26:36] <visual> alright, something a bit mroe complicated
[07:26:50] <Cork> yup :)
[07:27:09] <visual> adding a 3-rd party thing to every element using a each()
[07:27:45] <visual> third party thing = typeahead, added like $(multiple_elements).each( $(this).typeahead({thingsss}) )
[07:28:05] <visual> _but_ it is not added to elements that are added dynamically to the page.. a.k.a created later
[07:28:54] <Cork> ya, $() searches for element in the page unless multiple_elements is an array already (not a string)
[07:29:07] <Cork> that set of matched element is then looped by .each
[07:29:20] <Cork> so new elements added later won't be in that match set
[07:29:43] <Cork> what you need to do is run $().typeahead() on each element as you add them
[07:30:07] <Cork> (if it would have been an event it could have been delegated, but this is a plugin function and those can't be delegated)
[07:36:51] <visual> thank you very much Cork , i was just about to go the delegation way.. you saved me a lot of time :^)
[07:37:10] <visual> soo.. add those things as they're getting created.. rats! that typahead takes a lot of parameters, that's gonna be a long code
[07:38:02] <Cork> visual: na, not really; just create a function ex. myTypeahead(elm) {} and do the job there
[07:38:12] <Cork> then you just call that function from the places you need it
[07:38:57] <visual> i feel you, but in this instance ->
[07:39:18] <visual> https://kopy.io/1GzHI
[07:39:40] <visual> (btw, that's not the full function.. not by far)
[07:39:50] <visual> but line 2..
[07:40:31] <visual> how would i put that inside a function? like bindsTheThing(object) { object.typeahead...}  and then call it with bindsTheThing($(this)) inside the .each() ?
[07:40:43] <Cork> visual: https://kopy.io/0xJgx
[07:41:08] <Cork> btw $('#productName') cant ever match more then one element
[07:42:02] <visual> :O!
[07:42:02] <Cork> ids are page unique, and by spec all elements except the first in page flow is invalid and the id is ignored for them
[07:42:16] <visual> not really, you can do the $('[id=thing']) afaik right?
[07:42:25] <Cork> ya, but then you do attribute match not id
[07:42:35] <Cork> if you want to match multiple elements use classes
[07:42:40] <Cork> that is what they are there for
[07:42:46] <visual> ok lets that ids need to be unique
[07:42:48] <visual> *lets ignore
[07:42:52] <visual> and focus on the thing
[07:43:12] <Cork> the function i gave you can be reused when you add new elements
[07:43:15] <visual> nice, your way is similar to mine
[07:43:16] <visual> good way
[07:43:16] <visual> )
[07:43:40] <visual> i mean this 14:40 < visual> how would i put that inside a function? like bindsTheThing(object) { object.typeahead...}  and then call it with bindsTheThing($(this)) inside the .each() ?
[07:44:06] <Cork> you could move the each in there too
[07:44:23] <visual> thanks Cork, and for seeing that $('#Cork') would only grab the first one, saved me some time for sure
[07:44:48] <visual> move the each in where?
[07:44:57] <Cork> https://kopy.io/wL9lQ
[07:45:03] <visual> the whole point was to add the typeaheads to the dynamically added elements
[07:45:11] <Cork> it is still dynamic :)
[07:45:22] <Cork> you would just have to give it a list of the newly added elements
[07:45:29] <Cork> but now it can handle multiple
[07:45:33] <visual> but then it would iterate through all of them again
[07:45:38] <Cork> no
[07:45:42] <Cork> i said newly added
[07:45:52] <visual> oh i see what you mean
[07:45:55] <visual> that's brilliant
[07:46:06] <Cork> you could ex do something like defaultTypeahead(data.find('.products'))
[07:46:23] <visual> wait it's getting too complex and im getting angry at this point
[07:46:26] <visual> ))
[07:47:08] <visual> i dont get why you iterate through elm in your second way
[07:47:34] <Cork> cause you need to call .typeahead once for each element you give the function
[07:47:50] <visual> but you either give it all the elements, or 1
[07:47:51] <Cork> before we did $().each(function() { defaultTypeahead($(this)) })
[07:48:09] <visual> and if you only give it 1 element, the each will still execute?
[07:48:14] <Cork> now we do defaultTypeahead($()) and it loops over them in the function instead
[07:48:18] <visual> 1 element because 1 newly added element will trigger the function
[07:48:19] <Cork> sure
[07:48:20] <visual> :O!
[07:48:39] <Cork> jquery matches are always jquery collections
[07:48:43] <Cork> even if nothing is found
[07:48:56] <Cork> $().each(function() {}}; <-- this won't crash
[07:49:09] <visual> just wont execute? :^)
[07:49:14] <visual> alright well, thanks man
[07:49:18] <visual> gonna implement it now
[07:49:20] <Cork> it will, but it will loop collection.legnth == 0
[07:49:39] <Cork> so the itteration callback won't ever be called
[07:57:30] <visual> jquery matches are allways collections, eh
[07:57:44] <cannap> lol
[07:57:44] <visual> so how would you pass a javascript object to be used as a jquery thing?
[07:58:00] <cannap> oO
[07:58:00] <Cork> jquery works with dom elements
[07:58:12] <cannap> $.each
[07:58:15] <visual> var Cork = dom.object; $(Cork) ?
[07:58:16] <Cork> and that statement is only true when you work with dom elements
[07:58:16] <cannap> ah object
[07:58:38] <cannap> just use normal js to handle objects
[07:58:39] <visual> how would you apply jquery functions to a js dom object?
[07:58:52] <Cork> $(elm).each
[07:58:53] <cannap> and say jquery pu that in this
[07:58:54] <cannap> ^^
[07:59:07] <visual> i feel you, thank
[07:59:21] <Cork> $(document.createElement('div')).each(function() {}) works fine
[07:59:40] <cannap> i never used jquery like this
[07:59:48] <cannap> i think i abused jquery the whole time
[07:59:51] <Cork> well
[08:00:09] <Cork> $(document.createElement('div')).each(function() {}) is identical to $('<div>').each(function() {})
[08:00:21] <Cork> so it isn't that strange
[08:00:31] <cannap> ah
[08:00:36] <Cork> though specifically .each isn't normally useful for these cases but...
[08:00:38] <cannap> i never created elements with jquery^^
[08:00:48] <cannap> i use always template strings a append
[08:01:02] <Cork> cannap: depending on what you do that might be unsafe
[08:01:11] <cannap> its comes not from the server
[08:01:21] <cannap> and when it comes from the server i sanitize before
[08:01:22] <Cork> doesn't change the statement
[08:01:29] <cannap> ok
[08:01:35] <cannap> but atm i dont use much jquery
[08:01:38] <cannap> just for wp -.-
[08:01:42] <Cork> if it comes from the url, or user input or...
[08:01:48] <Cork> it can be xss risked
[08:01:59] <Cork> there are plenty of other risks
[08:02:03] <cannap> yea this is why i sanitize
[08:02:16] <cannap> every input
[08:02:19] <cannap> every url
[08:02:25] <cannap> everything
[08:02:41] <cannap> but there is always  a way
[08:02:45] <Cork> ya, but it is often better to use elements instead of templates in those cases, cause as you can then explicitly say "this is text not html" it can't ever be xss
[08:02:51] <Cork> sanitize can fail
[08:02:58] <cannap> yea
[08:03:20] <Cork> i use templates too, when i know the data is safe, but it is worth remembering
[08:03:46] <Cork> for example i keep the html as a string but no data
[08:03:58] <Cork> and then i convert it to dom and loop over the elements and set the data
[08:04:35] <cannap> yea
[08:07:36] <visual> Cork: remember that sneaky script with the typeahead from a few minutes ago?
[08:08:00] <visual> adding it to newly created elements is more tricky than initially assumed
[08:08:03] <Cork> uh sure? not like it was last week...
[08:08:21] <visual> :D
[08:08:31] <visual> a lot can happen in 10 minutes when you're a dev ))
[08:08:33] <visual> anyway..
[08:08:34] <visual> https://kopy.io/kUv8m
[08:09:24] <visual> first of all, yes i know it's an inefective way to add the bindings by reiterating through all elements again, but the problem is that newly created elements dont have an easily identifiable format which i can use in the bindings
[08:09:36] <visual> but the real issue is that it just doesnt bind it :I
[08:09:39] <Cork> visual: you wheren't suppose to call it with a selector
[08:09:41] <visual> no error, nothing
[08:09:54] <Cork> and again you can't match multiple elements with an id
[08:10:01] <visual> well calling it with a selector works when the page loads
[08:10:11] <Cork> ya, but it will always find all of them
[08:10:20] <Cork> (when the selector is correct)
[08:10:44] <visual> shit you're right wait ))
[08:10:57] <visual> i dont think this is the issue tho
[08:11:06] <Cork> visual: https://kopy.io/1c0xn
[08:11:25] <Cork> but again, stop using an id for that selector it won't work
[08:11:28] <visual> no, that's the problem
[08:11:38] <Cork> not only no
[08:11:43] <visual> here is my row - https://kopy.io/1PUEP
[08:11:57] <visual> i cant use as an identifiable thing, i told you earlier
[08:12:14] <Cork> sure you can, just remove productName
[08:12:30] <Cork> and .find('.typeahead')
[08:12:33] <visual> what?
[08:12:43] <Cork> and it will just work for that string
[08:12:45] <visual> row is just a string man
[08:12:47] <cannap> damn that string xD
[08:12:51] <visual> ikr
[08:12:55] <Cork> ... check https://kopy.io/1c0xn
[08:12:56] <visual> well it's a row
[08:13:06] <Cork> i already answered that problem...
[08:13:11] <visual> im looking at it mate
[08:13:24] <Cork> i meant 4 mins ago
[08:13:53] <visual> row = that ugly long string.. you're saying $(row) will work?
[08:14:15] <visual> i fucking dont understand what you wanted to say
[08:14:16] <visual> whatever
[08:14:21] <Cork> no i'm saying var newVariable = $(row); newVariable <-- dom will
[08:14:45] <visual> dom will what?
[08:14:55] <Cork> $(row).something; $(row).else; .before(row) or .before($(row)) WON'T
[08:14:55] <cannap> dance
[08:15:09] <Cork> visual: i think you need to go an cool off a bit...
[08:15:12] <visual> yeah
[08:15:53] <cannap> just use vue
[08:15:54] <cannap> :P
[08:15:56] <cannap> jk$
[08:48:17] <visual> cannap: what are you doing in /laravel/ skipper?
[08:48:29] <cannap> what
[08:48:42] <visual> how can i simplify that question?
[08:48:42] <cannap> i joined this channel since i know laravel^^
[08:48:53] <visual> cool beans
[08:48:58] <cannap> you ask the guy with the worst english in freenode
[08:48:59] <cannap> ...
[08:49:02] <visual> kek
[08:49:03] <cannap> <--
[08:49:10] <visual> at least you're not an indian
[08:49:51] <visual> Cork: The thing with your suggestion ( https://kopy.io/1c0xn
[08:50:16] <visual> is that, var dom = $(row) will return _all_ selections like that, right?
[08:50:26] <visual> assuming it works
[08:50:57] <Cork> visual: 'selector' is a placeholder for your working selector for the element you want typeahead on
[08:51:21] <Cork> dom = $(row) is to store the dom elements created from the $() command
[08:51:34] <Cork> and line 4 inserts the newly created dom elements into the page
[08:51:34] <visual> what
[08:51:41] <Cork> ...
[08:51:43] <visual> alright fuck it ))
[08:51:49] <visual> nevermind, i'll do it in some hacky way
[08:51:56] <Cork> you know how webbrowsers work with rendering right?
[08:52:11] <Cork> they don't render from html
[08:52:25] <visual> what does rendering have to do with anyhthing
[08:52:32] <visual> allright ill just close irc before i get banned again ))
[08:52:34] <visual> thanks for your time
[08:52:41] <Cork> to add scripts references to anything you need to have dom elements
[08:52:46] <Cork> as that is what the browser works with
[08:53:08] <Cork> and that is why it matters
[09:07:49] <visual> Cork: alright i give up
[09:08:01] <visual> re-read what you said, made sense
[09:08:07] <visual> but it doesnt work man
[09:09:20] <visual> https://kopy.io/Wkbax
[09:09:27] <visual> your suggestion from line 4-7
[09:10:24] <visual> thow your way _does_ _also_ append the row, it doesnt bind typeahead to it
[09:15:24] <kev999> hi - has anyone heard of formoid - having trouble integrating with JQUERY / UI on my website
[09:16:21] <kev999> ReferenceError: $ is not defined
[09:16:46] <kev999> Think it has it's own version of JQ and UI within the program
[09:17:02] <visual> might be, look up noconflict.js
[09:17:11] <visual> to have multiple jquery libraries
[09:17:18] <zampa> How would i go about removing first N amount of lines in an ul/li  (Say it has 300 items) and i want to keep 200, i want the first 100 to be removed. (not the last 100)
[09:17:38] <zampa> i tried li:gt but it removes from the wrong direction
[09:18:26] <kev999> #visual - thanks - saw that but thought it meant that I'd have to use something other than $ which is all over my site
[09:21:01] <kev999> zampa - put into an each statement with function(i,e) - then use the index (i) to find out where you are in the sequence
[09:21:30] <kev999> for eample - do $(this).remove until index is say 300 as you stated
[09:23:46] <kev999> so $('ul li').each(function(i,e) { if (i < 300) $(this).remove(); } else { exit();});
[09:25:20] <Cork> zampa: ul.children().slice(300).remove()
[09:25:27] <Cork> would remove the first 300 lis
[09:25:45] <visual> Cork: could you give it another look pls? :I
[09:25:52] <Cork> a go?
[09:25:57] <visual> or a go
[09:25:59] * Cork scrolls up
[09:26:09] <Cork> ah
[09:26:40] <visual> what's weird tho, is that $(dom).html() returns the row html
[09:26:44] <visual> suggesting that it _did_ find the element
[09:26:58] <Cork> visual: yes line 11 will bind the one element with the valid id like i've told you four times now...
[09:27:07] <visual> so maybe it's a problem in the function itself?  https://kopy.io/DCPoA
[09:27:25] <visual> Cork: but it doesnt man, that's the issue
[09:27:34] <Cork> visual: re read the responses i've given you
[09:27:44] <visual> i did 4 times now
[09:27:47] <Cork> your current problem has explicitly been answered
[09:27:50] <visual> not even exagerating
[09:28:14] <Cork> specifically: "<Cork> $(row).something; $(row).else; .before(row) or .before($(row)) WON'T"
[09:28:29] <visual> but they _do_ work
[09:28:42] <visual> $(row).html() returns the right element html
[09:28:42] <Cork> ya, except the modifications you do isn't saved
[09:28:50] <Cork> so line 5 has no effect
[09:29:04] <Cork> as those elements gets removed directly (as nothing references them)
[09:29:37] <visual> line 5 from.. this - https://kopy.io/Wkbax ?
[09:29:53] <Cork> yes
[09:30:35] <Cork> currently you create dom from the html
[09:30:44] <Cork> then you bind the typeahead to those elements
[09:31:00] <fission6> can i use PUT and DELETE in a jQuery ajax call?
[09:31:06] <Cork> then you parse the original html into a new set of elements and insert those into the page
[09:31:21] <Cork> and then the old dom valriable and those elements gets removed as they aren't used
[09:31:36] <Cork> visual: you need to .before the dom elements you have been working with
[09:31:42] <Cork> fission6: sure
[09:31:43] <visual> but i am
[09:31:46] <Cork> no
[09:31:47] <visual> line 6
[09:31:48] <Cork> you are not
[09:31:54] <Cork> inserts the html not the dom
[09:31:55] <fission6> Cork thanjs
[09:32:04] <visual> so i need to beforethe dom?
[09:32:11] <visual> i think it's clicking ))
[09:32:18] <Cork> you need to insert the dom you constructed what ever the variable is called
[09:32:41] <Cork> you can't create a new set of elements and expect them to have the behaviours of a completely different set of element you created just before
[09:33:00] <visual> i need to .before() it _after_ i bind the dom? or before?
[09:33:03] <visual> man that sounds confusing
[09:33:07] <Cork> doesn't matter
[09:33:25] <Cork> you need to insert the elements you create with $(row) not a new set parsed from row
[09:34:16] <visual> Cork: so like this - https://kopy.io/0L7Aa ?
[09:34:53] <Cork> almost
[09:35:02] <Cork> no need to do $(dom) it is already a jquery object
[09:35:13] <visual> btw, that _kind_ of works, but the typahead behaves erratically, and even returns - "app.js:4 Uncaught TypeError: Cannot read property 'toLowerCase' of undefined" in app.js (which is this line - "return e = gt.valHooks[i.type] || gt.valHooks[i.nodeName.toLowerCase()]," in the jQuery library
[09:35:46] <Cork> make sure the .find('') matches the correct element
[09:36:03] <visual> i dont use a find('')
[09:36:07] <Cork> ...
[09:36:11] * Cork gives up
[09:36:34] <visual> there is no find('') in my script man what are you talking about
[09:37:03] <visual> this is why i fucking hate javascript
[09:37:59] <visual> ambiguous inconsistent errors, combined with a library written by a 13 year old, what a joy
[09:38:03] <kev999> Does Cork mean indTypeahead(dom.find('selector'));
[09:38:24] <visual> kev999: i removed that line, and posted the updated thing - https://kopy.io/0L7Aa , Cork saw it
[09:38:32] <kev999> sorry
[09:38:55] <Cork> visual: you selectively choose to ignore comments and information given
[09:39:07] <Cork> making helping you frustrating and close to impossible
[09:39:43] <Cork> the only way i see getting it working would be to write it for you
[09:40:57] <visual> this isnt a matter of picking information, i even copy-pasted your solution and it didnt work
[09:41:07] <kev999> might be quicker - think we all need that ahhh moment
[09:41:22] <visual> re-read your explanation 5 times at this point, just doesnt stick
[09:41:44] <Cork> yes, cause you skip important relevant information
[09:42:18] <Cork> and most of all, you don't take the time to understand what it is meant to do so you understand what you're trying to do
[09:43:00] <kev999> Visual - do you want me to take a look and try to mediate :-)
[09:43:07] <visual> kev999: that would be awesome
[09:43:39] <kev999> no expert but I might be able to see what Cork means - missed the begining
[09:43:49] <kev999> post me some info
[09:44:06] <visual> so.. there's this third party library TypeAhead, which works by binding elements to it
[09:44:09] <visual> wait..
[09:44:12] <visual> it worked
[09:44:14] <visual> :D
[09:44:33] <kev999> The power of the mediator
[09:44:36] <kev999> :-)
[09:44:37] <visual> hahahaha
[09:44:49] <visual> thanks man
[09:45:21] <visual> it's awesome how a good joke can brighten up a thing
[09:45:49] <visual> btw the error was that $('#id') only selected the first element, changed it to $('[id=...]) and it selected all of them
[09:46:24] <visual> btw Cork's solution still doesnt work, i just chose a shittier approach, with parsing all elements every time an event happens, Cork's solution was much more elegant
[09:46:44] <Cork> please stop highlighting me every minute if possible
[09:46:48] <visual> ok Cork
[09:46:55] <kev999> lol
[09:46:57] <zenox> so i have a form which i want to serializeArray for, but wish to exclude all inputs inside a fieldset of class .foo. i tried $('#form-id:not(.foo) but this still throws the inputs in the fieldset into an array
[09:47:02] <zenox> pour quoi?
[09:47:38] <kev999> Move them outside of the form before submitting ???
[09:47:48] <zenox> that's ghetto nasty
[09:47:51] <shoky> #form-id:not(.foo)  means an element with id "form-id" and without class "foo"
[09:48:17] <zenox> oh sorry, #form-id *:not(.foo *)
[09:48:34] <zenox> i'm using that as the selector
[09:49:57] <zenox> oh actually on second thoughts, if i passed in the array of the form, that'd just serialize the whole thing?
[09:50:13] <shoky> the array of the form?
[09:50:54] <kev999> it's what serialize does - creates csv of whats in the form doesn't it?
[09:51:05] <Cork> zenox: $('#form :input').not($('#form .foo :input')) should work
[09:51:30] <zenox> oh interesting - thanks, i'll give it a go
[09:51:47] <Cork> zenox: you can't do :not(.foo) * cause it will match everything as every element has a parent without the .foo class
[09:51:53] <Cork> (ex. html or body)
[09:52:17] <shoky> but he did :not(.foo *)
[09:52:28] <zenox> i thought .foo * meant everything in the container element that has class foo?
[09:52:31] <Cork> you can't do complext selectors in :not() yet
[09:52:39] <Cork> it the standard isn't set yet
[09:52:57] <shoky> with jquery sure you can..
[09:53:01] <Cork> <_<'
[09:53:04] <Cork> ugg...
[09:53:12] <zenox> getting confused!
[09:53:26] <shoky> zenox: best to make a jsfiddle ;p
[09:53:53] <zenox> i think that's best! i'll have one last crack first!
[09:54:04] <Cork> shoky: i didn't know jquery supported future spec for :not...
[09:54:05] <kev999> it's not something simple like .foo isn't quoted should be ('.foo')
[09:54:29] <Cork> i should have as it reimplements them but ... >_<
[09:54:32] <shoky> Cork i doubt they did it because of future spec :p
[09:54:42] <Cork> didn't say it was
[09:55:02] <zenox> Cork wins one internet!
[09:55:11] <visual> Cork: so what you're saying is.. you can create doms, but if you dont use them, the rendering process will remove them (from memory?)
[09:55:20] <Cork> but the current spec explicitly forbids complext selectors inside :not()
[09:57:37] <kev999> Back to work - nice to see the 'old guard' still active - seeya + take care now.
[09:57:38] <zenox> what's complex about #form .foo :input?
[09:58:04] <Cork> zenox: :not() according to the current (css3) spec can not contain space
[09:58:12] <Jacabola> Hi, I have new ideas, like submitting my code for jquery evaluation
[09:58:15] <zenox> ah
[09:58:36] <Cork> complext selectors for :not() is part of the next level of the selector module
[09:58:58] <zenox> ah ok, so it's best to always break out :not to .not
[09:59:19] <zenox> also, the .not didn't need the $( ) wrapping
[09:59:32] <Cork> zenox: well not always, but if you need to do more complext filtering it normally is
[09:59:45] <Cork> zenox: true
[10:00:00] <visual> Cork: come on man, im trying to understand what you were saying with
[10:00:01] <zenox> sure, i read that .not is slightly slower... that's why i used :not instead ;)
[10:00:21] <Cork> zenox: why i use the .not() quite often is you can give it dom elements and those explicit elements will be excluded
[10:00:43] <zenox> oh nice
[10:00:44] <Cork> zenox: and that means you can very gradually exclude things, and that isn't supported at all with :not()
[10:01:06] <zenox> yeah, that's a nice thing to know! thanks
[10:01:14] <Cork> gradually... *grannually*
[10:02:09] <visual> Cork: https://kopy.io/esJfQ
[10:02:23] <visual> psl elaborate what you mean by "parse the original html into a new set of elements and insert those into the page"
[10:03:16] <visual> aside from it sounding like a lot of processing, do you really _re_-_render_ the whole page by doing that weird $() command?
[10:04:28] <zenox> Cork, finely / precisely / accurately ;)
[10:04:50] <visual> rats! i've made Cork mad enough to not respond ;-;
[10:05:16] <shoky> or perhaps you've been /ignore'd :p
[10:05:38] <visual> yeah most likely
[10:05:41] <visual> damn Cork !
[10:06:06] <shoky> that's what you get for highlighting him on purpose right after he asked you not to ;)
[10:06:08] <visual> Cork: probably didnt like me higlighting him
[10:06:15] <visual> :D
[10:07:17] <visual> gotta remember to use a different ident when talking to him next time ))
[10:17:50] <octo8> in jquery, i can set the text, modal.find('.modal-body tel').text(place); .... how can i set the href ?
[10:18:20] <Cork> octo8: .prop('href', value)
[10:20:17] <octo8> Cork: this is not working ... modal.find('.modal-body tel').prop('href', 'google.com')
[10:20:39] <Cork> "tel" is most likely wrong
[10:20:52] <Cork> that would require an element like <tel>
[10:21:01] <octo8> Cork: it works with the one mentioned before, the text
[10:21:16] <Cork> could you make a jsfiddle.net with the html your working with?
[10:23:49] <octo8> https://jsfiddle.net/ykgq2a37/ Cork
[10:24:56] <octo8> what i'm trying to do is, make the "44" as a clickable telephone number...
[10:25:29] <Cork> umm... <tel> isn't a valid dom element
[10:26:04] <Cork> you prob want to replace it with <a class="tel"></a> or something like that
[10:30:15] <octo8> thanks, worked!
[10:32:28] <octo8> worked, this is it ...  https://jsfiddle.net/ykgq2a37/5/, but now i want to add multiple phone numbers... trying...
[10:40:25] <Jacabola> Hi, I have new ideas, like submitting my code for jquery evaluation
[10:41:06] <Cork> octo8: updated to something that actually runs https://jsfiddle.net/ykgq2a37/6/
[10:41:35] <Cork> octo8: you could just add an .each loop after the find if you want to do it like that
[10:42:02] <Cork> Jacabola: are you asking a question?
[10:42:14] <Cork> and in that case: what's the question?
[10:42:26] <octo8> Cork: that doesn't work for different phone numbers
[10:42:51] <Cork> octo8: i didn't change anything except spliting the html view up into what jsfiddle wants to actually run
[10:43:06] <Jacabola> Cork: Yes
[10:43:32] <octo8> Cork: i'm trying to make it run in a way such that i can provide multiple phones
[10:44:51] <Jacabola> Cork my response ?
[10:44:52] <Cork> octo8: https://jsfiddle.net/ykgq2a37/7/ <-- what i said a few mins ago
[10:45:00] <Cork> Jacabola: what is the question?
[10:45:22] <Cork> can't answer a statement where there isn't even anything that looks like a question
[10:45:49] <octo8> Cork: nice, it works, i'm studying it...
[10:46:05] <Cork> octo8: only use .attr() if you explicitly have to
[10:46:19] <Cork> octo8: there are some cases that will break badly if you use .attr
[10:46:38] <Cork> for all other cases use .prop()
[10:49:11] <Jacabola> Cork : How can I demonstrate my idea and my code to be added in jQuery
[10:50:41] <Cork> Jacabola: you could file an issue about it in https://github.com/jquery/jquery/issues
[10:51:15] <Jacabola> no have problems =\
[10:51:19] <Jacabola> is new
[10:51:23] <Jacabola> my code
[10:51:48] <Jacabola> new function
[10:52:55] <Jacabola> Cork : I want to display my code that does a new thing, which jQuery does not do yet, implementation
[10:53:12] <Cork> Jacabola: that is what you do in issues
[10:53:28] <Jacabola> Ah
[10:53:29] <Jacabola> thk
[10:53:30] <Jacabola> =)
[10:53:33] <Cork> Jacabola: just a forwarning though, it is quite likely they will point you to plugins
[10:53:35] <Jacabola> sorry my englisgh
[10:53:42] <Cork> cause core will only take things that is very commonly used
[10:53:48] <Cork> the rest is meant for plugins
[10:53:56] <Jacabola> Okay
[10:53:56] <Jacabola> =\
[11:12:11] <ice9> i want to remove and add class for <li> by it's ID however nothing happens,  $('.item1').removeClass('active');  $('.item2').addClass('active');
[11:12:36] <ice9> <ul><li id="item1"></li></ul> etc..
[11:12:43] <Cork> . is class
[11:12:47] <Cork> # is id
[11:13:20] <Cork> ice9: also if you want to do this from a child inside it it might be cleaner to not relay on id
[11:15:21] <ice9> Cork, so is it ok to have several classes for that element and still call by class, like <li class="active item1">   then i do $('#item1').removeClass('active'):?
[11:15:44] <Cork> ice9: uh, yes but you are inverting the relation
[11:15:56] <Cork> #item1 => <li id="item1">
[11:16:05] <Cork> .item1 => <li class="item1">
[11:16:08] <ice9> oh yeah sorry
[11:17:45] <ice9> Cork, btw this isn't working as well, nothing changes
[11:18:11] <Cork> ice9: what exactly are you trying to do? (more info then "change by id")
[11:19:30] <ice9> Cork, i wanna set the active link in nav to 'active' class, i'm using flask,bootstrap, jquery
[11:19:58] <Cork> could you paste the html structure of the nav in jsfiddle.net?
[11:23:11] <ice9> element --> class="overview active"
[11:23:31] <Cork> $('.overview').removeClass('active')
[11:23:49] <ice9> that's what i'm exactly doing
[11:23:58] <Cork> or possibly even $('.overview.active').removeClass('active')
[11:24:09] <Cork> but those sould give the same result
[11:24:15] <ice9> even i'm using $(document).ready(function ()
[11:24:51] <Cork> ice9: ready runs on page load
[11:25:00] <Cork> this might be added by javascript?
[11:25:03] <Cork> or loaded through ajax
[11:26:00] <ice9> Cork, i'm setting this code at the bottom of the page that i will open from the link
[11:26:07] <ice9> but nothing is happening still
[11:26:23] <Cork> doesn't mean nothing will run later
[11:29:10] <ice9> Cork, ooh found it, i placed the js outside the body variable in the flask template ;)
[11:38:21] <whoisaCe> How can I create a regex to find the Original URL - https://reserve.example.com/bookings/591b143e5042df63cbfa3e79/summary?creation=true  (What I have: https://reserve.example.com/bookings/[a-zA-Z\d/g]/summary - but that doesn't seem to work)
[11:53:28] <Cork> whoisaCe: 'https://reserve.example.com/bookings/591b143e5042df63cbfa3e79/summary?creation=true'.match(/https:\/\/reserve.example.com\/bookings\/([a-zA-Z\d/g]+)\/summary/)[1]
[11:54:14] <Cork> or simply 'https://reserve.example.com/bookings/591b143e5042df63cbfa3e79/summary?creation=true'.match(/.*\/([a-zA-Z\d/g]+)\/summary$/)[1]
[11:54:41] <Cork> actually the .* isn't needed either
[12:12:24] <pabloledo> Hello, please I would need some assistance. Could someone help me with some day configuration in UI date picker?
[12:14:08] <pabloledo> Hello?
[12:14:26] <MikeD_> !ask
[12:14:53] <MikeD_> pabloledo: do you have a jsfiddle or other live(ish) example?
[12:17:50] <whoisaCe> Cork thanks!
[12:18:04] <whoisaCe> got it working after :D
[12:47:09] <tsukasadt> This is probably a very stupid question, but I figured I'd ask before going through the trouble of writing a function to make it work. With the .ajax() function properly handle GET variables is they are assigned to the data setting?
[12:47:27] <robertmaxrees> "with" or "will"?
[12:47:38] <tsukasadt> Will*
[12:47:47] <robertmaxrees> they should?
[12:48:34] <tsukasadt> k, I checked the documentation but I couldn't find the answer. I'm sure I just missed it though. :S
[12:48:42] <tsukasadt> ty
[12:52:43] <pavonia> The query string is actually the only option for a GET request to send the paremeters, isn't it?
[12:53:38] <robertmaxrees> pavonia yep, but they may not be aware of how that works.  i always just try those kinds of things to see (shrug)
[12:53:39] <tsukasadt> Yeah, but I wasn't sure if .ajax() would accept the data and handle it as a query string or not.
[12:54:05] <robertmaxrees> tsukasadt did you try? :)
[12:55:32] <tsukasadt> robertmaxrees, I'm still writing my code. I was going to write a function to format the query string, but I'll finish the script assuming it will work without the extra function. If it doesn't, well, at least I'll have the bulk of the script ready and just have to add the query string formatter.
[12:56:13] <robertmaxrees> i always just stub out cases like that to verify, but fair enough.
[12:58:02] <tsukasadt> Yeah, I'm probably an hour away from testing the script. I just wanted to ask now rather than assume. ^^'
[13:22:48] <QILLER> hi friends
[13:23:03] <taplar> aloha
[13:23:06] <QILLER> how can i alert only once? $(document).on('focus', 'input', function() { alert('ok'); });
[13:23:20] <taplar> one()
[13:23:20] <QILLER> if input has focused
[13:23:36] <QILLER> ok
[13:23:48] <taplar> one() works like on(), except it will unbind after the first time it executes
[13:24:36] <QILLER> taplar: if can i focus in another input, one display alert again?
[13:24:46] <taplar> yes, one time per element bound to
[13:25:01] <robertmaxrees> except in this case taplar
[13:25:06] <robertmaxrees> delegated handlers.
[13:25:12] <taplar> oh, right, because of delegate
[13:25:33] <QILLER> hmm
[13:25:37] <taplar> so do you want it globally one time, or one time per?
[13:25:49] <QILLER> one time per
[13:25:57] <robertmaxrees> if (!$this.data('alertshown')) { alert('foo') $this.data('alertshown', true) };
[13:26:03] <robertmaxrees> something like that imo.
[13:26:05] <taplar> in that case i might suggest putting a class.... ^
[13:26:16] <QILLER> ok
[13:27:24] <pavonia> taplar: Why wouldn't one() work in that case?
[13:27:39] <taplar> one will unbind from the parent after the first invocation
[13:27:42] <taplar> which is the document
[13:27:47] <taplar> not each sub child
[13:28:06] * hlve slaps taplar with a trout.
[13:28:17] <robertmaxrees> wat
[13:28:31] <pavonia> So $("input").one("focus", ...) should work?
[13:28:32] <QILLER> $(document).one('focus', '.class', function() {alert('ok');});
[13:28:40] <QILLER> display one alert only ;(
[13:28:47] <robertmaxrees> QILLER just gave you the code you want.
[13:28:52] <taplar> pavonia: that would, sure, but that's not a delegate like the one he gave
[13:29:08] <robertmaxrees> i'm personally not a fan of one
[13:29:26] <pavonia> Hhm, I don't know about delegates
[13:29:37] <robertmaxrees> $(parent).on('event', 'child'
[13:29:58] <robertmaxrees> $('ancestor').on('event', 'descendent', function() {});
[13:30:30] <pavonia> And how is that different from calling the event on the child directly?
[13:30:33] <robertmaxrees> binds a single listener to $('ancestor') that triggers for all 'event's from 'descendent'
[13:30:39] <taplar> ^
[13:30:51] <robertmaxrees> you can dynamically add child nodes and the handlers will still work, for instance./
[13:31:02] <robertmaxrees> without having to bind them manually.
[13:31:14] <pavonia> Ah, I see
[13:31:25] <robertmaxrees> also creates a tad less overhead since now there's only one handler instead of many.
[13:31:41] <QILLER> taplar robertmaxrees  can you see it?
[13:31:42] <QILLER> https://jsfiddle.net/t6k74qqs/
[13:31:47] <QILLER> please :)
[13:31:55] <robertmaxrees> QILLER....
[13:32:05] <robertmaxrees> why are you ignoring the sample I gave you?
[13:32:20] <QILLER> robertmaxrees: sry, where?
[13:32:21] <taplar> roberts suggestion wouldn't use one() it would still use on()
[13:32:27] <QILLER> ok
[13:32:28] <robertmaxrees> scroll up duder.
[13:34:08] <QILLER> When I use "on", many alerts are displayed.
[13:34:17] <taplar> update your fiddle?
[13:34:56] <robertmaxrees> QILLER did you not find my example?
[13:35:18] <robertmaxrees> if (!$this.data('alertshown'))
[13:35:18] <robertmaxrees>  { alert('foo') $this.data('alertshown', true) };
[13:35:29] <robertmaxrees> woops.  you get the idea though.
[13:36:51] <QILLER> https://jsfiddle.net/t6k74qqs/4/
[13:37:32] <QILLER> robertmaxrees
[13:37:35] <robertmaxrees> lol
[13:37:40] <robertmaxrees> gotta define $this meng
[13:37:44] <taplar> https://jsfiddle.net/t6k74qqs/5/
[13:38:05] <robertmaxrees> (shrug)
[13:38:08] <QILLER> nice
[13:38:26] <QILLER> i'm begginer :D
[13:38:26] <MikeD_> nice?
[13:38:33] <QILLER> thank you!
[13:38:36] <robertmaxrees> QILLER did you look at your console at all?
[13:38:42] <QILLER> no
[13:38:56] <robertmaxrees> should really get in the habit of thjat.
[13:38:57] <taplar> you could also optionally use a class for the control
[13:39:01] <QILLER> i forgot
[13:39:11] <QILLER> yep, thank you
[13:39:16] <MikeD_> also, never use alert()
[13:39:32] <robertmaxrees> ^
[13:39:32] <taplar> https://jsfiddle.net/t6k74qqs/6/
[13:39:45] <robertmaxrees> use console.log for debugging.
[13:40:05] <QILLER> yep, console.log
[13:40:06] <MikeD_> it's annoying enough that firefox devs built-in the "Prevent this page from creating additional dialogs" checkbox... so whatever feature your alert was providing might have been turned off
[13:40:07] <QILLER> thank you!
[13:40:24] <QILLER> taplar: good, thanks! =D
[13:44:05] <taplar> our app is looking so pretty, :D
[13:44:12] <robertmaxrees> Nice :)
[13:44:34] <taplar> i went home on friday yelling, "F*** yeah!" lol
[13:45:17] <Violinist> wait till som nub gets hired and ruins it
[13:45:28] <robertmaxrees> taplar hah - that's awesome!
[13:45:33] <taplar> he'll have to join our team to do so, and we will crush him, >:D
[13:45:35] <robertmaxrees> love days like that.
[13:45:55] <taplar> unless it gets handed off to another team,  *shrugs*
[13:46:38] <Violinist> lel
[13:46:47] <Violinist> only takes one idiot to ruin it
[13:46:55] <robertmaxrees> nah.
[13:46:55] <pabloledo> @MikeD_ sorry I was out
[13:47:18] <robertmaxrees> Violinist if you're doing any kind of QA/CR, you'll be fine.
[13:47:52] <Violinist> no im talking about ppl pulling good projects into another direction
[13:48:03] <taplar> yeah and test coverage will also be there to catch breaks
[13:48:29] <pabloledo> I'm trying to set up this Date picker in a checkout cart so customers can indicate the shipping date
[13:48:33] <pabloledo> <div class="fc-form-group">
[13:48:33] <pabloledo> 	<div class="col-sm-8 col-sm-offset-3" data-fc-error-for="date-select" data-fc-error-class="fc-alert-container--error">
[13:48:33] <pabloledo> 		<div class="fc-input-group-container fc-input-group-container--checkbox fc-input-group-container--active">
[13:48:33] <pabloledo> 			<label class="fc-input-group-container__title fc-input-group-container__title--forced fc-form-label">Shipping date</label>
[13:48:35] <pabloledo> 			<div class="fc-form-group date-select">
[13:48:37] <pabloledo> 				<input class="fc-form-control" placeholder="Select a date" type="text" id="date-select" value="{{ shipping_date }}" name="shipping_date" aria-required="true" data-fc-required>
[13:48:39] <taplar> fiddle please
[13:48:40] <pabloledo> 			</div>
[13:48:40] <robertmaxrees> woah
[13:48:42] <pabloledo> 		</div>
[13:48:44] <pabloledo> 	</div><div class="fc-form-group">
[13:48:45] <robertmaxrees> pabloledo yeah nooooo
[13:48:46] <pabloledo> 	<div class="col-sm-8 col-sm-offset-3" data-fc-error-for="date-select" data-fc-error-class="fc-alert-container--error">
[13:48:49] <pabloledo> 		<div class="fc-input-group-container fc-input-group-container--checkbox fc-input-group-container--active">
[13:48:51] <taplar> don't paste raw code into the chat please
[13:48:52] <pabloledo> 			<label class="fc-input-group-container__title fc-input-group-container__title--forced fc-form-label">Shipping date</label>
[13:48:55] <pabloledo> 			<div class="fc-form-group date-select">
[13:48:56] <Violinist> wow nice html
[13:48:57] <pabloledo> 				<input class="fc-form-control" placeholder="Select a date" type="text" id="date-select" value="{{ shipping_date }}" name="shipping_date" aria-required="true" data-fc-required>
[13:49:00] <pabloledo> 			</div>
[13:49:04] <pabloledo> 		</div>
[13:49:06] <pabloledo> 	</div>
[13:49:08] <pabloledo> </div>
[13:49:10] <pabloledo> {% if context == "checkout" %}
[13:49:12] <taplar> i think we're stuck at the end of a paste
[13:49:12] <pabloledo> <script>
[13:49:14] <pabloledo> FC.client.on("render.done", initDatePicker);
[13:49:16] <pabloledo>  
[13:49:18] <pabloledo> function initDatePicker() {
[13:49:25] <robertmaxrees> *sigh*
[13:53:52] <robertmaxrees> welp
[13:57:37] <taplar> look at all that bs
[13:58:18] <taplar> and some kind of twb
[13:59:47] <Violinist> i told u he would come and ruin it
[14:00:11] <taplar> lol
[14:00:31] <taplar> you would play yourself
[14:00:55] <taplar> odd violin joke, i'm aware
[14:01:59] <taplar> do you think people who are up to no good are typically hairless?
[14:02:20] <taplar> i mean they are nair do wells
[14:07:20] <Violinist> no ive seem some heary no gooders
[14:36:35] <Es0teric> whats the equivalent of live
[14:36:38] <Es0teric> since its deprecated
[14:37:15] <robertmaxrees> http://api.jquery.com/live/ -> https://i.imgur.com/QI7noQA.png
[14:37:30] <robertmaxrees> see the bottom examples where they use .on() ?
[15:06:10] <hlve> ( ͡° ͜ʖ ͡°)
[15:25:01] <taplar> that looks like a painful hemmy
[15:39:31] <Es0teric> ok so i have this js that loads on pageload but when an ajax call happens and it loads the dynamic content, the content that loads doesnt update according to whats before it.. for example -- i have a list of emoji's that are in their hex value till a jquery plugin converts them to their proper emoji
[15:39:54] <Es0teric> but when the "load more" occurs which brings ajax content from the server, the hex values dont turn into their emoji's.. how do i fix that?
[15:40:16] <taplar> re-run the logic that does the convert on the new markup
[15:40:36] <robertmaxrees> ^
[15:40:41] <robertmaxrees> using the .then() from the ajax call
[15:43:53] <Es0teric> robertmaxrees which ajax call?
[15:44:10] <robertmaxrees> the one you mentioned...?
[15:44:15] <Es0teric> taplar the problem is that i have a .start() method that acts as a constructor
[15:44:26] <Es0teric> robertmaxrees both contain ajax calls
[15:44:44] <Es0teric> the one that loads the emoji's does a ajax call to bring the count
[15:44:56] <robertmaxrees> "ajax call happens and it loads the dynamic
[15:44:56] <robertmaxrees> content,
[15:45:01] <robertmaxrees> that one.
[15:45:01] <Es0teric> ah that one
[15:45:03] <Es0teric> ok
[15:47:16] <impliednude> https://jsfiddle.net/ph1np68h/1/ - I am trying to using ajax change data-quantity="insert updated value here" but it isn't working. please assist. 8th day in here needing assistance with this matter. thanks
[15:47:27] <Es0teric> robertmaxrees the problem is that when i call bp.react.start() twice, it breaks the whole functionalitty
[15:48:17] <taplar> impliednude: i don't see any ajax in this fiddle
[15:48:28] <robertmaxrees> impliednude also: define "isn't working"
[15:48:53] <impliednude> should I do var currentQty = this.data-quantity;
[15:49:14] <taplar> are you expecting an ajax call to change the value and it to fire that event handler?
[15:49:35] <impliednude> this was taken from  a woocommerce how to add quantity fields to category.
[15:49:50] <Es0teric> taplar pretty much
[15:49:54] <robertmaxrees> impliednude so give us more to work with - what isn't working here?
[15:50:00] <taplar> i have no clue as to what your issue is man.  you mentioned ajax and there is none.  so it's very confusing
[15:50:10] <Es0teric> taplar there is ajax
[15:50:14] <impliednude> okay, When the form submits it doesn't target data-quantity like it should
[15:50:14] <taplar> where?
[15:50:28] <impliednude> instead data-quantity is still 1
[15:51:04] <robertmaxrees> impliednude try using .data('quantity') instead.
[15:51:20] <robertmaxrees> maybe the ajax call is using .data() instead of .attr()
[15:53:31] <impliednude> nopers.
[15:53:42] <Es0teric> ok lets say for instance i have a bunch of child divs in a container that are .activity right? now, after x amount of divs, there is a "load more" button that can either be pressed or upon hitting the last .activity div, loads more .activity items... now within these .activity divs there is a reaction functionality within each .activity div that is triggered on page load.. my problem is that the "load more" functionality that loads
[15:53:42] <Es0teric>  more .activity items (via AJAX) is not converting the hex values of the emoji's that are already converted on pageload
[15:53:46] <Es0teric> taplar
[15:54:04] <robertmaxrees> impliednude dunno then.  super hard for us to help without more context.
[15:54:34] <taplar> Es0teric: right, cause the logic that runs to convert only runs on page load, as you've said
[15:54:47] <taplar> which is why i said you have to be able to re-run that logic against your new markup
[15:55:00] <Es0teric> taplar but how would i do that?
[15:55:07] <Es0teric> .then() does not achieve the desired result
[15:55:17] <taplar> first figure out how to be able to invoke that logic at will
[15:55:30] <taplar> which may mean refactoring the logic out into a callable function
[15:55:44] <robertmaxrees> ^^^^^
[15:56:10] <Es0teric> wait
[15:56:16] <Es0teric> i think i am on to something here
[15:57:27] <impliednude> robertmaxrees> http://dev.sporkabowl.com/product-category/choose select any of the sizes.
[15:59:47] <impliednude> you'll see in what context I am attempting to achieve
[16:01:05] <Es0teric> ok maybe this is an easier question to answer -- why would $(this).text() be returning NaN on a div that exists and the content does hav e text?
[16:01:12] <Es0teric> after an ajax load
[16:02:03] <Es0teric> robertmaxrees , taplar ?
[16:08:56] <robertmaxrees> woops
[16:11:47] <impliednude> robertmaxrees> did you get a chance to check it out?
[16:12:06] <robertmaxrees> no...  sorry.  was looking for more of like... documentation or something.
[16:23:23] <taplar> impliednude: did you ever answer where in your fiddle it was using ajax?
[16:23:31] <robertmaxrees> heh
[16:25:15] <taplar> site is blocked at work so i can't go to the real place even if i wanted to dig. :/
[16:25:54] <robertmaxrees> heh
[16:26:11] <impliednude> taplar> the ajax is handled by wordpress and woocommerce.
[16:26:32] <impliednude> taplar> add_to_cart along with the data bindings all get sent to a fragment.
[16:26:51] <impliednude> thing is, prior to 3.0. that code worked
[16:27:02] <taplar> so i'll ask this again.  by you doing that on binding in that fiddle, are you expecting the events to fire if the ajax changes the values?
[16:27:39] <taplar> i guess it is a delegate
[16:28:10] <impliednude> I am just looking for a shortcut to change data-quantity directly within that area rather than on submit and not know if the value will actually change or not
[16:28:34] <taplar> is the logic changing the value or is the user changing the value?
[16:29:16] <impliednude> logic should change the value but it doesn't appear to be.
[16:29:46] <impliednude> So I am just trying to update the dom value from frontend. so onsubmit it gets the correct value regardless
[16:29:58] <robertmaxrees> but .attr() doesn't work the way you need it to?
[16:30:02] <impliednude> nope
[16:30:15] <impliednude> and the theme developers code is horrendous
[16:30:15] <taplar> if the logic is changing the value, then that will not result in an input or change event firing
[16:30:20] <taplar> which would not cause your binding to fire
[16:31:11] <impliednude> which is why I am needing to just on user input to update the dom value of data-quantity="w/e"
[16:31:21] <impliednude> from the frontend
[16:31:59] <taplar> so if the user makes a change
[16:32:33] <taplar> then first of all, put a console.log as the first line of that event handler and verify that it is being executed
[16:36:54] <Es0teric> damn i am still stuck on this
[16:36:55] <Es0teric> =_=
[16:53:11] <thxffo> where can i get more information about outputting my jq to a csv
[16:53:53] <robertmaxrees> "my jq to a csv"?
[16:54:02] <robertmaxrees> thxffo what sort of info are you looking for?
[16:54:58] <thxffo> i have some ids logs
[16:55:23] <robertmaxrees> what sort of data do you need?
[16:57:08] <robertmaxrees> thxffo i ask because I'd probably use .map() to generate an array of arrays and then go from there.
[16:57:20] <thxffo> my jq is grabbing anything with _type=="alert" from my json file and i am doing a sort | uniq -c
[16:57:57] <thxffo> i would like to output to a csv if possible
[16:58:13] <thxffo> ok thx, i will look at .map()
[16:58:21] <robertmaxrees> that'll get you an array.
[16:59:02] <robertmaxrees> why CSV
[16:59:02] <robertmaxrees> ?
[16:59:47] <thxffo> just to make it easy to export to excel
[17:00:56] <robertmaxrees> heh, why excel?  trying to get at the root of what you're trying to do.
[17:02:34] <cannap> windows
[17:02:42] <taplar> flowers
[17:02:47] <taplar> ???
[17:02:48] <cannap> beer
[17:03:49] <thxffo> take extracted information from logs on my linux server and put on excel for people on windows
[17:03:59] <thxffo> the information  is related to security events
[17:04:12] <thxffo> i might not be the best at explaining :(
[17:04:23] <robertmaxrees> thxffo ah.  i probably wouldn't just wholesale grab elements in that case.
[17:04:39] <thxffo> the raw json files are hundreds of gigs and i only need specific info that i pull with jq
[17:04:59] <robertmaxrees> wait woah - are you trying to use jquery to parse JSON?
[17:05:00] <cannap> oO
[17:05:11] <thxffo> i am doing it
[17:05:16] <robertmaxrees> woah.
[17:05:18] <cannap> sure?
[17:05:18] <taplar> i'm more concerned with a single log file being hundreds of gigs
[17:05:21] <robertmaxrees> that explains a lot.
[17:05:39] <thxffo> these are intrusion detection systems that see 5-10 gigabits a second
[17:05:50] <cannap> wiat you just use jquery ajax to get the file='?
[17:06:02] <taplar> usually loggers have the ability to create new files as they reach a size threshold
[17:06:04] <robertmaxrees> thxffo that's going to really quickly become a bottlenext.
[17:06:10] <robertmaxrees> *bottleneck
[17:06:28] <robertmaxrees> that should really be an async job into a DB or something else.
[17:06:50] <thxffo> they output to a high availability splunk server
[17:07:06] <thxffo> but the people who sit in front of monitors from zombies looking at dashboards miss things
[17:07:15] <thxffo> the data needs to be correlated
[17:07:25] <taplar> splunk can generate reports
[17:07:28] <robertmaxrees> jq is the wrong tool for that job imo.
[17:07:36] <thxffo> ok
[17:08:39] <cannap> virtualscroll
[17:08:59] <taplar> we run splunk in shop.  we get reports based on time frames or in the event of something happening.  i'd think it can do what you want already.
[17:09:05] <cannap> but i dont know what you want
[17:09:49] <cannap> virtualscroll for big lists of data
[17:09:59] <robertmaxrees> cannap that's not what he needs heh
[17:13:46] <cannap> i know
[17:14:03] <impliednude> yeah. it's not executing the jquery at all. and it's not giving me any errors
[17:14:19] <taplar> ok, so next question
[17:14:31] <robertmaxrees> impliednude you sure the element in question exists when you try to bind to it?
[17:14:32] <taplar> the elements that you are binding that event on.  are they being generated by ajax?
[17:14:44] <robertmaxrees> haha
[17:15:11] <cannap> what
[17:15:19] <robertmaxrees> ?
[17:15:22] <taplar> because if so, then you will need to move that delegate binding up higher to something that always exists and is never replaced
[17:15:34] <cannap> nvm i was confused
[17:15:37] <robertmaxrees> ^ just still needs to be an ancestor.
[17:31:40] <impliednude> robertmaxrees> add_to_cart_button is def there.
[17:31:50] <impliednude> and not being generated by ajax
[17:32:21] <robertmaxrees> what was the binding again?
[17:32:24] <taplar> you are binding on .post-type-archive-product
[17:33:20] <taplar> if the event is not happening then 1) the selector is incorrect, 2) the element doesn't exist yet, 3) the element is replaced after bound to
[17:33:57] <robertmaxrees> or 4) the binding is in reverse or otherwise not setup right.
[17:34:13] <taplar> oh true
[17:35:05] <taplar> so your goal now is to rule out those possibilities one by one
[17:35:35] <impliednude> gotcha
[17:36:25] <taplar> and when doing your verification make sure to do it in code.  sticking a console log in the browser console will often be too late to catch the issue
[17:37:13] <taplar> you can also stick debugger; statements in there to poke around.  which if you are unfamiliar with you should get up to speed on in any case
[17:38:12] <impliednude> taplar> 2 weeks "trying" to learn js and barely any further ahead. but I have tolearn this %#*@
[17:38:22] <impliednude> at least enough to repair stuff like this that other people have done
[17:38:40] <taplar> i would highly recommend giving this site a read then: http://fixingthesejquery.com/#slide1
[17:38:54] <taplar> pretty good intro into js debugging
[17:40:26] <impliednude> 1st problem) it says inspector show you the errors. mine has none showing up
[17:40:40] <taplar> which is a good thing
[17:40:45] <robertmaxrees> likely because there are no programmatic errors.
[17:40:57] <taplar> there may be logical errors though
[17:41:25] <taplar> it's doing what you tell it to.  it just may not be what you want it to do, ;)
[17:44:32] <impliednude> php, missing something or not pointing somewhere it should be. no such thing, etc..
[17:44:47] <impliednude> javascript, oh syntax is right. However, we really are not verbose
[17:44:51] <robertmaxrees> what's the code for the binding again?
[17:45:13] <impliednude> I changed it to .product-wrap
[17:45:23] <robertmaxrees> i don't have anything in front of me.
[17:45:32] <robertmaxrees> coudl yopu share an updated version please?
[17:52:55] <impliednude> https://jsfiddle.net/ph1np68h/2/
[17:53:49] <robertmaxrees> https://jsfiddle.net/robertmaxrees/ph1np68h/3/
[17:53:52] <robertmaxrees> try doing this.
[17:54:11] <robertmaxrees> https://jsfiddle.net/robertmaxrees/swqx9pet/ or this.
[17:57:07] <robertmaxrees> what do you get trying those?
[17:57:29] <cannap> nothing
[17:57:31] <cannap> :D
[17:57:36] <cannap> jk sry
[17:58:22] <impliednude> nets slow
[17:59:45] <impliednude> 8 and 0 for 1st ones log
[17:59:54] <robertmaxrees> so what does that tell you?
[18:00:28] <robertmaxrees> .quantity .qty is not a descendent of .product-wrap
[18:00:42] <robertmaxrees> do you mean quantity, .qty maybe?
[18:02:02] <impliednude> tried, nopers
[18:02:56] <robertmaxrees> assuming the markup in your fiddle is at all accurate, .product-wrap is not an ancestor of .quantity
[18:02:59] <robertmaxrees> it's a sibling.
[18:03:26] <robertmaxrees> that's why that bninding doesn't work.
[18:04:52] <impliednude> just realized
[18:07:53] <taplar> .product would probably be the one you want, since that's the li around the whole shabang as far as i can see
[18:12:17] <robertmaxrees> lol
[18:12:36] <impliednude> yes, now works
[18:12:42] <impliednude> THANKS!!!
[18:13:16] <taplar> so in retrospect, if you run into something like this again.  what are some things you can do?
[18:13:35] <robertmaxrees> ~*teaching moments*~
[18:13:42] <taplar> la lala la
[18:22:25] <taplar> hmm, the conversation goes well until what is sought is got, and then for not.  i feel used by the possibly nude gentleman.
[18:25:09] <impliednude> nopers
[18:25:22] <robertmaxrees> wut
[18:25:26] <impliednude> and sorrry, just celebrating
[18:25:40] <impliednude> Well, try every possible combination out while not sleep deprived
[18:25:54] <impliednude> and maybe, just maybe I will get it right?
[18:26:06] <robertmaxrees> learn your console
[18:26:08] <Violinist> probly not
[18:26:11] <robertmaxrees> and check evben basic assumptions.
[18:26:17] <taplar> ^^^^^^
[18:26:21] <impliednude> okay
[18:26:26] * impliednude sheepishly grins
[18:26:41] <Violinist> lelel
[18:26:54] <Violinist> u guys use docker
[18:26:59] <taplar> nope
[18:27:02] <Violinist> good
[18:27:04] <robertmaxrees> my company does.
[18:27:08] <Violinist> its like the worst invention
[18:27:15] <taplar> we could one day.  just not a lot of push in shop to do so
[18:27:20] <robertmaxrees> Violinist wut
[18:27:24] <robertmaxrees> docker is great.
[18:27:26] <Violinist> jkjk
[18:27:51] <Violinist> do u use it?
[18:27:56] <robertmaxrees> our company does.
[18:28:01] <robertmaxrees> i'm not using it personally.
[18:28:17] <Violinist> u dont know how to set it up?
[18:28:27] <impliednude> robertmaxrees> we lost our frontend dev a little over a week ago. And I don'tknow shit really about javascript
[18:28:32] <robertmaxrees> i don't have a need for it personally Violinist
[18:28:37] <robertmaxrees> impliednude okay?
[18:28:51] <Violinist> ok coz im messing w it now
[18:29:35] <impliednude> robertmaxrees> I guess I am justnot used to having a learning curve these days in terms of debugging.
[18:29:45] <impliednude> I thank you very much for your assistance and hand holding
[18:30:07] <cannap> lol
[18:30:35] <taplar> tis a teaching room
[18:30:39] <cannap> why you lost the front end dev
[18:31:07] <robertmaxrees> heh
[18:31:35] <robertmaxrees> fow what it's worth that happened to me at my last company and I wound up making a career out of it.
[18:33:24] <taplar> lol, sadly i'm more concerned with the singularity of that frontend dev statement
[18:33:49] <impliednude> cannap> they became ill. In hospital now.
[18:34:01] <impliednude> and we are a startup (7 of us total including her)
[18:34:06] <taplar> bus factor 100%
[18:34:24] <Violinist> i bed the guy was like i know what she did
[18:34:28] <Violinist> i can do that
[18:34:39] <Violinist> its just javascripts
[18:35:35] <impliednude> nopes.
[18:35:51] <taplar> best wishes to her though from some random guy in the jquery chat room.  hope she gets better
[18:36:53] <cannap> from jquery room
[18:36:55] <cannap> guy ...
[18:37:00] <cannap> he will die now
[18:37:00] <impliednude> I do too. I am not a frontend at all. you sit me down with php and I am great. Just all that freaking js confuses the heck out of me. it's foreign to me honestly
[18:37:38] <taplar> cannap: huh?
[18:38:55] <taplar> impliednude: php and js as far as logic go are pretty similar.  you just have to familiarize yourself with some additional concepts of js like events and it's method of scoping.  but a lot of it is just figuring out how to translate the logic that you know how to do in php into js
[18:39:47] <cannap> jk sry
[18:40:35] <Violinist> naw js is just weird
[18:40:41] <taplar> lol
[18:40:43] <Violinist> i know it pretty well
[18:40:51] <Violinist> and many other langs
[18:41:15] <robertmaxrees> js is actually pretty okay.  the DOM api is the wart imo.
[18:41:16] <Violinist> thats why they made typescript
[18:41:30] <Violinist> the nesting got out of control
[18:41:35] <robertmaxrees> "the nesting"?
[18:41:39] <robertmaxrees> as in callback hell?
[18:41:43] <impliednude> this is like how it was when I was doing non oop into oop/mvc
[18:41:49] <taplar> i've done a few languages myself.  js is one of my favs
[18:41:49] <impliednude> in php
[18:42:11] <Violinist> no not the callbaks
[18:42:18] <robertmaxrees> what nesting are you referring to?
[18:42:32] <Violinist> the retun { function { return function { [ 1
[18:42:40] <Violinist> wtf is that
[18:42:45] <Violinist> valid js
[18:42:46] <taplar> invalid syntax
[18:42:46] <robertmaxrees> invalid.
[18:42:49] <Violinist> no valid
[18:42:52] <robertmaxrees> invalid.
[18:42:54] <cannap> lol
[18:42:55] <taplar> function {} is invalid
[18:42:59] <Violinist> ill show u my code
[18:43:18] <Violinist> oh i forgot to throw a new in there
[18:43:22] <Violinist> lel
[18:43:34] <taplar> function has to follow with () afaik
[18:43:38] <taplar> or a name
[18:43:44] <cannap> )( )Y>
[18:45:16] <taplar> but even then, any approach to nesting would be a coding practice.  you can make any language unbearable with shit code
[18:45:47] <robertmaxrees> heh
[18:45:48] <taplar> as a general statement
[18:46:40] <robertmaxrees> jss just relatively forgiving which means it enables people who don't know how to code to write something that runs.
[18:46:49] <robertmaxrees> which is part of why it gets a bad rap.
[18:47:01] <Violinist> yes but no
[18:47:30] <robertmaxrees> lol
[18:47:40] <Violinist> take angular fe
[18:47:56] <robertmaxrees> sure.  the world's best java web framework written in js ;)
[18:47:57] <Violinist> $scope.lol = function() { // };
[18:48:00] <Violinist> ?
[18:48:10] <robertmaxrees> angular was created by a bunch of java devs.
[18:48:10] <Violinist> its just funky looking
[18:48:18] <robertmaxrees> that's not really that weird.
[18:48:25] <Violinist> how bout lol.prototype?
[18:48:36] <robertmaxrees> javascript's prototypes are poorly named.
[18:48:44] <robertmaxrees> better described as behavior delegation.
[18:49:12] <Violinist> i like js but it has outgrown its syntax
[18:49:29] <robertmaxrees> erm,
[18:49:34] <robertmaxrees> the language is changing pretty fundamentally
[18:49:51] <Violinist> its also the fastest lang now
[18:49:54] <Violinist> almost
[18:50:12] <Violinist> due to v8
[18:50:17] <robertmaxrees> speed has gotten pretty irrelevant.
[18:54:26] <Violinist> are you guys using webpack
[18:54:34] <cannap> yes
[18:54:36] <robertmaxrees> my company is looking to move to it.
[18:54:39] <Violinist> nice huh
[18:54:47] <cannap> it sawesp,e
[18:54:48] <cannap> omg
[18:54:48] <robertmaxrees> sure.
[18:54:50] <cannap> awesome
[18:55:00] <Violinist> u can minify css
[18:55:01] <cannap> since tree shaking
[18:55:01] <Violinist> and js
[18:55:06] <robertmaxrees> yep.
[18:55:14] <cannap> no
[18:55:17] <robertmaxrees> the bundling is what i care about more.
[18:55:19] <cannap> liesss liessss
[18:55:21] <Violinist> i think its minifying images too
[18:55:29] <cannap> wait
[18:55:30] <robertmaxrees> it can, but we don't use that
[18:55:37] <cannap> yes we dont use
[18:55:37] <Violinist> yeah it puts everything into 1 file
[18:55:44] <cannap> no
[18:55:58] <cannap> -.-
[18:56:11] <Violinist> ya im bundling
[18:56:15] <robertmaxrees> err, it outputs multiple files.
[18:56:21] <Violinist> even puts the css in there
[18:56:25] <Violinist> thats a setting
[18:56:30] <cannap> no
[18:56:47] <cannap> when you use js with inline css then yes
[18:56:56] <cannap> but extract will put that in one file
[18:56:56] <Violinist> no
[18:57:01] <cannap> sure
[18:57:03] <Violinist> omg
[18:57:12] <cannap> what
[18:57:22] <Violinist> ur not doing it rite
[18:57:37] <cannap> yes stop trolling now
[18:58:15] <robertmaxrees> moving on now...
[19:01:59] <Violinist> ok then wahat is this?
[19:02:00] <Violinist> 2a074e92d4c65bdb83e2bc5c48404edc.svg    9.33 kB          [emitted]
[19:02:07] <robertmaxrees> drop it.
[19:02:09] <robertmaxrees> thx
[22:39:18] <bigLanky> for a select element, on change, how do I get the data params to come back?
[22:39:43] <bigLanky> http://prntscr.com/f8pqu1
[22:39:48] <bigLanky> that's what I am trying to access
[22:39:58] <bigLanky> https://jsfiddle.net/991L8rey/1/
[22:47:18] <Grobo> how can I make a button to append text in one div (hidden) to another div?
