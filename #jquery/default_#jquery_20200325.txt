[02:43:45] <sfdebug> hi, when retrieving an audio element by document.getElementById() i can call .load() method that reloads the audio tag (after i changed the src attrribute). how can i call this same method using a jquery element, that is, getting the audio element by $("#...")?
[02:51:19] <Cork> sfdebug: [0].load()
[02:51:45] <Cork> sfdebug: jquery  $() wraps dom elements in a jquery object, [index] gives you the raw dom element so you can call dom methods directly
[02:52:36] <sfdebug> Cork i tried it already... the error i receive is: Uncaught TypeError: $audio[0].load is not a function
[02:53:14] <Cork> then you either haven't targeted the correct element, or $audio is empty or something
[02:53:53] <Cork> $('#audio')[0].load() === document.getElementById('audio').load()
[02:53:57] <sfdebug> i think i targeted the correct element and it isnt empty because "$audio.attr('src', URL.createObjectURL(file));" works fine
[02:55:03] <Cork> sfdebug: you might want to use prop instead of attr, not sure how uri objects work with setAttribute
[02:55:37] <Cork> remember that attr is mapped to setAttribute not obj[properyName]
[02:56:52] <sfdebug> Cork, its working fine but if i just set the attr it doesnt work, i have to call .load(), but it doesnt work on the jquery object, i have to get the element again using getElementById and then call .load()
[02:57:11] <Cork> sfdebug: $()[0] is not a jquery object
[02:58:34] <Cork> sfdebug: if you want help figuring out why things don't work the same make a jsfiddle with the docuemnt.getElementById and jquery reference and the matching dom
[02:58:34] <sfdebug> i know that. because of it i'm calling $().attr instead of $()[0].attr
[02:59:03] <Cork> what i meant is you can do $()[0].src = ''
[02:59:20] <Cork> it isn't jqeury after the index accessor it is just plain dom objects
[02:59:41] <Cork> so if you get errors it is cause you're not working with the same dom element you think your working with
[03:00:37] <sfdebug> $audio[0].src = URL.createObjectURL(file); worked fine
[03:00:48] <Cork> doesn't prove anything
[03:01:03] <Cork> again make a jsfiddle showing the problem you have
[03:01:19] <sfdebug> idk what a jsfiddle is, let me search it here
[03:01:33] <Cork> jsfiddle.net
[03:02:02] <Cork> make an example with the working raw dom code
[03:02:17] <Cork> and another one with the none working jquery equivalent
[03:03:32] <sfdebug> i'll do that
[03:11:51] <sfdebug> is there a way i share it here? i cant see a link where i can do it
[03:12:12] <sfdebug> and i cant figure out why in pure js works bu with jquery dont
[03:14:00] <sfdebug> i got it
[03:14:04] <sfdebug> https://jsfiddle.net/w0pqce8L/
[03:14:15] <sfdebug> look, this is by using pure javascript, no jquery
[03:27:44] <Cork> hmm the fiddle doesn't load...
[03:28:28] <sfdebug> i figured out what was wrong...
[03:28:56] <sfdebug> i was getting the "source" element instead the "audio" element. it worked fine using the audio element instead the source element
[03:29:38] <sfdebug> that's a little weird because i should can modify a "src" atrribute from an audio tag... but.
[03:30:17] <Cork> sfdebug: ya, some properties are delegated
[03:30:26] <sfdebug> shoudnt*
[03:30:34] <sfdebug> Cork cool
[03:30:37] <Cork> and ya reloading a source element won't do anything as it isn't an active element
[03:31:09] <Cork> it is actually documented in the audio whatwg page
[03:32:47] <sfdebug> well, my windows stopped working...... :( but the code is working now :)
[03:32:51] <sfdebug> tnks Cork
[03:33:10] <Cork> np
[03:36:08] <sfdebug> i'll reboot here
[09:47:56] <goose2345> is anyone here familiar with handsontable?
[13:19:23] <kittonian> hi all. i'm having a real problem with a small script and safari.
[13:19:43] <kittonian> i have a very simple page with a form that is being validated by parsley js
[13:20:12] <kittonian> the small javascript adds css classes to the submit button if the form is valid
[13:20:32] <kittonian> it works perfectly in firefox and chrome but in safari it does not
[13:21:01] <ExtraSteve> Safari is the new Internet Explorer for compatability, I swear
[13:21:02] <kittonian> i've nailed it down to the return true; statement. if I set return true; to return false; safari works perfectly, except that the form doesn't submit
[13:21:19] <kittonian> ExtraSteve, ha. exactly. but it's a necessity since everyone has an iphone
[13:21:37] <kittonian> here's the code I currently have https://bpaste.net/UH6Q
[13:22:12] <kittonian> from everything I've been reading for the past two days, it seems you have to write javascript differently to be truly cross browser compatible, whereas firefox and chrome work just fine
[13:22:35] <kittonian> i'm just not sure how to rewrite this to do the same thing but work everywhere
[13:22:56] <ExtraSteve> I wish I could help on this one - I write code for a chrome-only environment (yaaay)
[13:23:06] <ExtraSteve> So it's not my forte
[13:23:30] <ExtraSteve> I just thought I'd pipe up to complain about Safari with you :p
[13:23:32] <kittonian> understood. happy for you to take a look and get your thoughts :)
[13:24:13] <ExtraSteve> Get a working example going in codepen and I'll fiddle around with it (or jsfiddle)
[13:24:27] <ExtraSteve> I'm always happy to waste my time on someone else's problems
[13:24:30] <kittonian> i did that last night, but here's the strange part
[13:24:33] <ExtraSteve> Wish I could waste some time on my own...
[13:24:44] <kittonian> it works in the jsfiddle interface but not when you directly load it in safari or on iOS
[13:24:56] <kittonian> so it's not really a good environment it seems
[13:26:37] <ExtraSteve> When it's loaded directly in the browser, are you doing it in a vacuum (no other scripts/assets loaded)? Or is it on a full version of your website/project?
[13:26:58] <ExtraSteve> Because often times what we think is a "clean" envornment is not so
[13:28:01] <kittonian> it's a full version of the website, which is only a single page at the moment, however, I built the entire thing with external calls and the entire stylesheet in jsfiddle last night. works fine in their frame but not when you go to the url
[13:35:42] <kittonian> anyone else around that could give me a hand with this?
[15:47:25] <kittonian> ExtraSteve, I solved it
[15:47:37] <kittonian> it was something stupidly simple of course
[15:48:15] <kittonian> in the element I was specifying .loginbutton which is the class of button. safari didn't like that and instead it just wanted button as the elemtn
[15:48:17] <kittonian> *element
[15:48:43] <kittonian> but now I have another issue because of how safari processes forms and I need to adjust the code
[15:49:15] <kittonian> i know what I need to do but not exactly how to do it
[15:50:22] <Enissay> In the context of Uberscript, is there a way to check if a link in a webpage is visited or not ?
[16:30:06] <shoky_> tf is uberscript
[16:30:48] <kittonian> can anyone help me with a code modification? right now I have a button that submits a form but when I try to use e.preventDefault (); the form still submits
[16:32:19] <shoky_> kittonian: make sure you're preventing the <form>'s submit event, not a button's click event
[16:32:41] <kittonian> shoky_, yes, that is what I'm trying to do and I don't understand how
[16:32:47] <shoky_> otherwise, make a jsfiddle showing the problm
[16:33:10] <kittonian> no need for a fiddle. how do you prevent a form submit event?
[16:33:52] <shoky_> by calling event.preventDefault() on the event argument, to the form's submit event handler
[16:34:37] <kittonian> ok, specifically how do I do that?
[16:35:00] <shoky_> e.g. $('form').on('submit', function(e) { e.preventDefault(); });
[16:37:34] <kittonian> yes, that prevents the form from submitting
[16:37:46] <kittonian> now, how do I then run the other code I need and submit the form?
[16:39:08] <shoky_> either only call .preventDefault() in the case where you really want to prevent.. or to submit it later you can call  this.submit()  (assuming `this` is the <form> element)
[16:40:08] <shoky_> important to not call .submit()  on a jquery object, but on the native DOM element (so that it doesn't re-trigger your submit handler)
[16:41:19] <kittonian> i'm trying that but it doesn't seem to be working to submit the form
[16:41:38] <kittonian> i'm doing this to solve a safari issue where on submit all animations, etc. cease immediately
[16:41:58] <kittonian> so i need to prevent the form from submitting, run my css addclass statements and then submit the form
[16:43:00] <shoky_> either that, or if the code you're running is all synchronous (not something that takes time) there is no need to prevent the submit at all
[16:43:08] <shoky_> e.g.  addClass is synchronous
[16:44:05] <kittonian> here's my code
[16:44:06] <kittonian> https://codepen.io/kittonian/pen/LYVXNwN
[16:45:01] <kittonian> you have to prevent the submit so that the removeClass and addClass can work and then the form submits, thus the animation will play properly. this is documented on stackoverflow as a safari issue with submit button animations
[16:45:27] <shoky_> no idea what this parsley() is or  that 'form:submit' event..
[16:45:36] <kittonian> parsley is a js form validator
[16:45:39] <shoky_> and, you didnt follow what i said here
[16:45:45] <shoky_> <shoky_> important to not call .submit()  on a jquery object, but on the native DOM element (so that it doesn't re-trigger your submit handler)
[16:45:53] <shoky_> you're calling .submit()  on the jquery object
[16:46:06] <kittonian> ok, this is where I don't know how to do this
[16:46:11] <shoky_> $('#login-form')[0].submit()  would call it on the native element
[16:46:13] <kittonian> it's not that I'm not trying to follow your advice
[16:47:19] <kittonian> can you show me how to make this work? i'm sorry i'm just not that good at javascript but i am really trying
[16:47:50] <shoky_> again - i have no idea what parsely is or that form:submit event, and how those relate to the native form submit event...
[16:47:58] <shoky_> so no i cannot show you how to work with those properly
[16:48:09] <kittonian> i just explained what parsley is. it's a js form validator
[16:48:16] <shoky_> that doesn't help me
[16:49:10] <kittonian> https://parsleyjs.org/doc/examples/simple.html
[16:49:53] <shoky_> yeah i'm not gonna learn this library for you now, sorry ;)
[16:51:16] <kittonian> you don't need to
[16:51:24] <shoky_> without any library it'd be as simple as   $('#login-form').on('submit', function(e) {  $('#button').addClass('foo'); ... })
[16:51:30] <shoky_> no need to prevent any form submit
[16:51:42] <shoky_> if all you're doing is adding classes
[16:52:30] <kittonian> apparently i do because safari works differently. check out this article that explains it https://stackoverflow.com/questions/32713877/safari-animation-on-form-submit
[16:55:05] <shoky_> with preventing the form, it'd be   $('#login-form').on('submit', function(e) { e.preventDefault(); $('#button').addClass('foo'); ...;  this.submit(); })
[16:56:28] <kittonian> i tried that and it doesn't work. the form still submits
[16:56:50] <shoky_> yes, it submits the form
[16:57:07] <kittonian> no, i mean it doesn't run the animation
[16:58:30] <shoky_> shrugs. got no safari here to test with and try to fix, sorry
[16:58:30] <kittonian> you also put #button but i don't have the # to signify a css id, just 'button' as there is no css id of button
[16:58:42] <shoky_> it was just an example.
[16:59:49] <shoky_> maybe you want to wrap the  this.submit()  in a setTimeout,  i donno
[17:00:04] <shoky_> e.g.    setTimeout(() => this.submit(), 0)
[17:00:28] <shoky_> maybe that'll make safari will behave , no idea
[17:00:39] <shoky_> -will
[17:07:46] <jax> hello
[17:08:44] <jax> i got an input like <input name="all_objects" value="[1,2,3,4,5,6,7,8,8,....9000]"/> i would like to convert that to a multi-valued input like <input name="all_objects" value="1"> <input name="all_objects" value="2"> ...
[17:08:50] <jax> is there an efficient way to do that for 9000 items?
[17:09:12] <jax> or can i somehow say "on form submit, take the values in all_objects and send them as a multi-value input"?
[17:09:18] <shoky_> you want 9000 <input>s ..?
[17:09:23] <jax> i don't really
[17:09:27] <jax> i think the browser will die
[17:09:35] <shoky_> yeah, wont be nice
[17:09:57] <shoky_> yes you can do the 2nd thing you said
[17:10:15] <shoky_> well
[17:10:28] <shoky_> yeah
[17:10:40] <jax> i can also generate that [1,2,3,...9000] list differently
[17:10:50] <jax> currently it is just json
