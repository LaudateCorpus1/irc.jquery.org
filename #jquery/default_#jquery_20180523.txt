[07:18:42] <preference> i have a page where a user inputs some data, then clicks a checkbox. selecting one of the checkboxes refreshes the page, but i want to save the input so that it's still there when the page is refreshed. what's the best way of doing this?
[07:19:10] <preference> i'm guessing this isn't something very simple to achieve without experience
[07:19:19] <Cork> preference: why are you refreshing the page when the input is checked?
[07:19:49] <preference> not by choice, and it's not something i can change. it's how the platform adds the data, i know it's not ideal.
[07:20:25] <Cork> preference: well then it would be best if the server got the checked checkbox in the post data and marked the checkbox based on that data
[07:20:44] <preference> i don't understand what that means
[07:20:54] <Cork> the alternative is to store it local, but then you can get out of sync states and that is messy
[07:21:14] <preference> the input is a simple text box, if that makes any difference
[07:21:38] <Cork> preference: have <input type="checkbox" name="something" value="1"> and on the server side check if something == 1 and if it is create the checkbox with <input type="checkbox" name="something" value="1" checked>
[07:22:08] <Cork> then when the new html is rendered the checkbox will have the same state it had before
[07:23:13] <preference> not sure if i'm misunderstanding you or if i've misrepresented the situation. there's a textbox which they can optionally put information into. then there is a set of 4 possible checkboxes, each one of which will refresh the page and thus lose the text that the user has put into the text box above. the text box input is not related to the checkbox at all, they just happen to be on the same page.
[07:24:04] <Cork> preference: yes, and the reload should send the form data you currently have
[07:24:14] <Cork> and then the server can just render the new page
[07:25:47] <preference> i'm sorry, i'm rather lost by what you're saying. i appreciate the help. do you happen to know of a guide for doing something like this?
[07:26:11] <Cork> preference: not really, as i don't know what server language you're using
[07:26:37] <Cork> the solution is mostly server side, as the server reloads the page on changes it isn't really something javascript should handle
[07:27:13] <preference> which is why i thought this might just be a case of temporary local storage. but i'm not sure if that's going to make things a lot more complex
[07:27:18] <Cork> preference: it might be better to ask the question in a channel for what ever server framework you're using
[07:27:33] <Cork> preference: that is an option, but a very unstable one
[07:27:38] <preference> tbh, i'm not even sure if i have access to the server in the context you're using it
[07:27:54] <Cork> cause javascript can't distinguished between when the data should be used
[07:28:04] <Cork> so visiting the page a few days later would still load the old state
[07:28:06] <preference> the platform only allows me to edit the pages of the website using javascript, html, css.
[07:28:08] <Cork> for example
[07:28:13] <preference> right
[07:28:20] <preference> and i can't clear?
[07:28:25] <preference> or put an expiry?
[07:28:44] <Cork> you can clear, but as the page reloads, how would you know you should?
[07:28:49] <Cork> javascript gets unloaded
[07:28:53] <Cork> so only the server knows
[07:29:00] <Cork> that is why i said what i did
[07:29:11] <preference> by date?
[07:29:29] <Cork> by date can't tell if the page was reloaded cause of the checkbox or f5
[07:29:36] <preference> that doesn't matter
[07:29:38] <Cork> or copy the link to a new tab
[07:29:47] <preference> the problem is that the page refreshes, not that the checkbox is ticked
[07:30:04] <Cork> ya, but with this solution you would leak state between tabs
[07:30:18] <Cork> the list of problems are almost endless
[07:31:16] <preference> so there's no effective way to do this without access to the server?
[07:31:36] <Cork> you can hack around it, but it will be buggy with window.sessionStorage
[07:32:04] <Cork> but again, the page will break in different use cases and the only way to fix that is to store it in the url or have the server handle it
[07:32:24] <Cork> https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage
[07:32:32] <Cork> but again, i strongly recommend against it
[07:33:26] <preference> got it. thanks a lot for your help as always
[07:34:21] <Cork> preference: for clarity, the problem is when the server reloads you lose the pages local state, and there is no other local per tab state
[07:34:45] <Cork> so the only alternative is none tab local state, and meaning as long as that assumption breaks you get a bug
[07:35:01] <preference> honestly, this data should only be stored for about 30 mins at most
[07:35:20] <Cork> ya, but again you don't have a good way to tell that
[07:35:40] <preference> but if it's simply a matter of the data being unstable (i.e. not being available after closing the tab), that's ok
[07:35:41] <Cork> localstorage doens't have a per tab way of storing when you set it
[07:35:52] <Cork> it isn't after the tab is closed
[07:36:04] <preference> that might be fine for this
[07:36:10] <Cork> it is ex. opening the page in two tabs and the tabs leaking data between them
[07:36:27] <preference> i'm more worried about impact on the rest of the website and security if i fuck it up
[08:25:19] <baaaam> exit
[08:29:34] <albks> Why I'm getting thiserror : SyntaxError: "" string literal contains an unescaped line break atline 17 when I do this : https://pastebin.com/Q9KZjKkF
[08:29:58] <albks> I'm Trying to make an Add to cart
[08:32:52] <preference> what happens if you try to run line 19?
[08:33:42] <Cork> albks: you're inserting unescaped url data in a javascript string
[08:33:52] <Cork> that isn't safe
[08:34:29] <Cork> example.com?id=');evilCode();'
[08:35:30] <albks> Cork this is why I'm gettint this error ?
[08:35:34] <Cork> so look at what the php script actually generates and it will be obvious why you get the javascript error
[08:35:41] <Cork> albks: well, yes and no
[08:35:47] <Cork> your looking at the wrong code
[08:35:49] <preference> Cork: so you can inject malicious code through this?
[08:36:08] <Cork> look at code php generates (and preferably don't dynamically generate js)
[08:36:12] <Cork> preference: yes
[08:36:30] <Cork> this is one of the examples of xss
[08:36:34] <albks> Cork <form action="categories.php?add&id='.$row['id'].'" method="post" id="form1"> <input type="text" placeholder="Quantity"> </form>
[08:36:47] <albks> in dataSelect.php
[08:36:52] <Cork> albks: you do that sure, but other don't have to
[08:36:59] <Cork> that is client side
[08:37:10] <Cork> and currently you expect the client to do the right thing
[08:37:28] <Cork> if it doesn't your server will happily send what ever it sent to the new page for execution
[08:38:58] <Cork> a safer solution is data(<?php echo json_encode(array('id' => $_GET['id'] )); ?>);
[08:41:27] <preference> so that would put the code into JSON and it would be read as a string from an input with an id, so it couldn't be executed as code Cork?
[08:41:51] <preference> not the code, i mean the input. potentially malicious code
[08:46:00] <albks> getData(<?php echo json_encode(array('id' => $_GET['id'] )); ?>); ???
[08:46:06] <albks> Cork getData(<?php echo json_encode(array('id' => $_GET['id'] )); ?>); ???
[08:46:31] <albks> I don't know how to use Json  i'm just trying to make my code works
[08:48:36] <Cork> albks: json_encode encodes the data in $_GET['id'] so it can be safely passed over to javascript
[08:48:48] <Cork> you need to handle this in javascript a little differently
[08:49:53] <Cork> but actually
[08:50:16] <Cork> albks: you can try getData('<?php echo json_encode($_GET['id']) ?>')
[08:50:27] <Cork> opps
[08:50:34] <Cork> albks: * you can try getData(<?php echo json_encode($_GET['id']) ?>)
[08:50:48] <Cork> but the point is, NEVER echo into javascript strings from server scripts
[08:54:23] <AdamPDotty> <script src="data.php"></script> :-)
[08:55:43] <Cork> AdamPDotty: if you do echo $_GET['what-ever']; that won't help
[08:55:59] <Cork> cause you can still perform xss
[08:56:08] <AdamPDotty> yep
[08:56:13] <albks> Cork I know it's not safe what i'm doing the website will not be online. https://pastebin.com/MERdDwzT I'm getting  SyntaxError: expected expression, got '<'[En savoir plus]  in console : https://pastebin.com/1tX3ihWX
[08:56:29] <Cork> albks: just do what i gave you as the last option
[08:56:47] <Cork> it should give the same (but correct) end result and won't be exploitable
[08:56:59] <Cork> no reason to make it unsafe when there is no reason to do so
[08:57:12] <AdamPDotty> I still remember how I found out injection with $_SERVER['PHP_SELF']
[08:57:24] <Cork> heh
[08:57:27] <AdamPDotty> should not use it
[08:57:33] <Cork> true
[08:58:41] <albks> Cork I'm getting  SyntaxError: expected expression, got '<'[En savoir plus]
[08:59:10] <Cork> albks: check what javascript the server generates
[08:59:16] <Cork> cause it sounds like php isn't executing
[09:02:32] <albks> Cork you mean this https://pastebin.com/1tX3ihWX ?
[09:02:53] <Cork> yes
[09:03:09] <Cork> btw, don't forget to fix line 17 too
[09:03:25] <Cork> (as it has the same security hole)
[09:04:21] <albks> Really whats going on
[09:06:51] <albks> Cork yes  if(a != "")   getData(<?php echo json_encode($_GET['t']) ?>);       else         getData(<?php echo json_encode($_GET['id']) ?>);
[09:08:12] <Cork> yup, but also you need to make sure id is in $_GET
[09:08:23] <albks> Cork what should be the condition if to check if t is not anymore defined when we come from categories.php?t=Furnitures to categories.php?add&idd=1
[09:08:56] <Cork> to doesn't matter
[09:09:04] <Cork> $_GET only reflects the current request
[09:09:10] <albks> this is why the server js tells me SyntaxError: expected expression, got '<'
[09:09:28] <albks> for getData(<?php echo json_encode($_GET['id']) ?>); because if(a != "") doesn't work
[09:09:31] <Cork> albks: no, the server gives you error cause the get request doesn't have id
[09:09:32] <albks> oh
[09:09:58] <Cork> if you checked the last paste you showed it was printed right in there
[09:10:12] <Cork> it was actually the error output causing the js crash
[09:11:32] <albks> Cork yes
[09:12:37] <albks> Cork I'm getting from categories.php?t=Furnitures to categories.php?add&id=1
[09:12:49] <Cork> ...
[09:13:07] <Cork> from and to doesn't matter as i just said
[09:13:13] <Cork> it is what url was requested
[09:14:42] <albks> Cork tell me how should I do it really I don't get it
[09:14:53] <Cork> => ##php
[11:56:56] <haroldjfks> hello, in a div there is html but that's showed as text. So, how to run that as html, instead, by jQuery? thanks
[12:31:42] <taplar> haroldjfks: got an example of what you are talking about?
[12:33:23] <haroldjfks> taplar: here https://pastebin.com/nrWLVC91
[12:33:56] <taplar> what does _setElementText(consentText, cookieText); do?
[12:35:17] <haroldjfks> taplar: here https://pastebin.com/7QtyJ2tm
[12:35:41] <taplar> ok, so try changing innerText to innerHTML
[12:36:55] <taplar> it looks like you are using textContent and innerText, both of which will render the data you set to them as text nodes, which is why the html is appearing as text
[12:37:14] <haroldjfks> ok, I think that's clear now...thanks
[14:41:07] <nitrospectide> Can anyone tell me why this regex search/replace would blow up another bit of jQuery which doesn't seem to relate to it at all? Is there a better way to do this search/replace? https://jsfiddle.net/kecjqnto/
[14:41:55] <taplar> is there a reason you are trying to escape the character?
[14:43:09] <taplar> https://jsfiddle.net/kecjqnto/1/
[14:51:04] <nitrospectide> taplar: I'm not familiar with everything going on in here. This is on a site I'm working on. What do you recommend? I tested your change, and the console shows a clean removal of the ®
[14:51:28] <taplar> right, i just removed the escape character really
[14:51:45] <taplar> you only need to escape character in regex if they are special to regex and you want them to be treated as literals
[14:51:55] <taplar> that character you are replacing is not a special character to regex
[14:52:28] <nitrospectide> ah. ok
[15:02:10] <haroldjfks> hello, how to preserve the original css of a div when using innerHTML?
[15:02:52] <taplar> can you elaborate?
[15:04:06] <haroldjfks> taplar: eg. there is a loaded css, then you with js change a div content, but it seems that using innerHTML on the element the css is ignored...is it?
[15:04:26] <taplar> not if it is a style sheet rule
[15:04:43] <taplar> otherwise, the css against an element will be whatever you have inlined
[15:06:25] <haroldjfks> I don't know, i'm changing properties on the .css but they are ignored
[15:06:46] <taplar> got a fiddle?
[15:07:25] <haroldjfks> eg. the div on .css should be 400px in height...but after the innerHTML the content is always more than that...
[15:07:59] <taplar> are you expecting it to restrict the height to only 400?
[15:09:09] <haroldjfks> precisely, so how to do it?
[15:09:22] <taplar> i would suggest asking in #css
[15:09:38] <haroldjfks> ok, thanks
[16:00:34] <robertmaxrees> weeeeeeee
[16:00:53] <taplar> yup
[16:12:41] <ramba> anyone here?
[16:12:45] <ramba> or this is dead
[16:13:03] <robertmaxrees> there are people here.
[16:13:56] <robertmaxrees> ooookay.
[16:14:00] <taplar> i'm dead
[16:14:10] <robertmaxrees> lol
[16:14:18] <taplar> rawr
[16:14:40] <robertmaxrees> YAR
[16:37:45] <taplar> damn!  just had the context thing with service workers bite me again
[16:37:52] <robertmaxrees> hah
[16:38:50] <taplar> lol, i was staring at it just screaming at myself that i've done this error before
[16:50:12] <inthl> I have several forms and buttons on a page, where submitting the form is being triggered by different buttons. now when one presses enter on a form I would like the form to be submitted by pressing another button than the one the browser choses for type="submit"
[16:50:24] <inthl> I have solved this with adding a class to the form, followed by:
[16:50:57] <inthl> $('.form_submit input').keypress(function(event) { if(event.keyCode == 13) {  event.preventDefault(); $('.form_submit .thedesired_button').click(); ..
[16:51:32] <inthl> this works pretty much fine. the only issue I have: if an <input> is known to the browser, then it offers autocomplete in a dropdown selection
[16:51:42] <inthl> selecting something there...and pressing enter, then submits the form automatically
[16:52:19] <inthl> any idea on how to evade this submit on the autocomplete suggestions?
[17:03:49] <robertmaxrees> inthl depends on the library.
[17:03:55] <robertmaxrees> maybe it has an option for that?
[17:04:36] <inthl> what library? this is written on my own. it is just a <form class="form_submit" ..> having multiple buttons of type submit, one which shall be the submit button 'to continue'
[17:04:54] <robertmaxrees> your autocomplete?
[17:05:05] <robertmaxrees> ooooh
[17:05:09] <robertmaxrees> derp - reread your wall
[17:05:20] <robertmaxrees> hummm
[17:05:55] <gambl0re> anyone here have experience with socketio?
[17:06:34] <robertmaxrees> inthl are you submitting the form via ajax?
[17:06:51] <robertmaxrees> 'cause if so, there's an easy way to handle this :)
[17:07:00] <inthl> yes, I am
[17:07:05] <robertmaxrees> awesome!
[17:07:24] <inthl> $('body').on('submit', 'form', function(event) { ..
[17:07:28] <robertmaxrees> i'd just bind a listener to the submit event and then preventDefault() it at all times.
[17:07:53] <robertmaxrees> and then let your keypress handler call the ajax submit logic.
[17:08:04] <inthl> what listener would that be..?
[17:08:17] <robertmaxrees> your submit one.
[17:08:46] <robertmaxrees> the one you just shared :) .on('submit', 'form', function(event) { event.preventDefault(); });
[17:10:48] <robertmaxrees> gambl0re i might try ##javascript - might have better luck there :)
[17:11:02] <taplar> or #socket.io as i mentioned the other day
[17:11:11] <robertmaxrees> ^ or there :)
[17:11:25] <gambl0re> hey tap, is there a socketio channel?
[17:11:38] <robertmaxrees> there is!  he just mentioned it again :)
[17:11:43] <inthl> uhm
[17:11:47] <gambl0re> 20 people...
[17:11:59] <taplar> who are potentially informed on socketio
[17:12:03] <robertmaxrees> ^
[17:12:06] <robertmaxrees> inthl sup?
[17:12:14] <inthl> I'm not following you. How or what would exaclty prevent the autocomplete suggestion-enter-keypress from submitting the form, but the normal enterkeypress still submit it?
[17:12:29] <gambl0re> no activity whatsoever i see going on
[17:12:37] <robertmaxrees> gambl0re they may just be waiting for a question.
[17:12:47] <robertmaxrees> inthl you would simply prevent all submits since you don't need it anyway.
[17:12:56] <taplar> you have to push out your question.  they are not going to poll for one
[17:12:58] <taplar> ha ha ha
[17:13:07] <gambl0re> was that pun?
[17:13:14] <gambl0re> that a..
[17:13:37] <robertmaxrees> hahahahaha
[17:13:54] <inthl> robertmaxrees, but I want the form to be sumitted by pressing enter on any <input> ..?
[17:14:21] <robertmaxrees> inthl your keypress handler can do that for you instead.
[17:14:41] <robertmaxrees> it's hacky, but probably your safest bet.
[17:14:51] <robertmaxrees> since you're submitting via ajax anyway.
[17:15:06] <gambl0re> is vuejs supposed to replace jquery or do they server two different purposes?
[17:15:07] <inthl> okay, but then how does the keypress handler know whether one pressed enter in the <input> or enter in the input's autocomplete suggestions?
[17:15:14] <taplar> vuejs is like react
[17:15:19] <robertmaxrees> gambl0re two different purposes
[17:15:19] <taplar> they are compariable
[17:15:23] <inthl> I have if(event.keyCode == 13) { there
[17:15:25] <inthl> that is enter
[17:15:42] <gambl0re> so vuejs and reactjs are suppoesd to replace jquery?
[17:15:53] <taplar> not replace
[17:15:54] <gambl0re> ive never used vuejs before
[17:16:06] <gambl0re> i know you're not supposed to mix jquery and react together
[17:16:07] <robertmaxrees> inthl you can check the event.target maybe?
[17:16:11] <taplar> well a lot of the funcitonality they offer replaces jQuery
[17:16:12] <robertmaxrees> i'd have to play around.
[17:16:44] <inthl> phew
[17:16:53] <robertmaxrees> gambl0re jquery is more of a DOM manipulation library.  Vue and React are comprehensive view libraries
[17:16:55] <inthl> that's a little to advanced for me
[17:16:58] <inthl> too
[17:17:04] <robertmaxrees> inthl hrm?
[17:17:10] <taplar> and not everyone needs a view library
[17:17:14] <robertmaxrees> ^
[17:17:26] <robertmaxrees> console.log($(event.target)) <- you can stick this in your handler.
[17:17:34] <gambl0re> so vuejs and react, vue and jquery are view libraries?
[17:17:46] <robertmaxrees> jquery is not a view library.
[17:17:57] <inthl> I have pasted all the code that is there, the form_submit listener that submits and the ajax listener. now how would one implement your suggestion..? I don't get it exactly
[17:18:05] <taplar> view and react are developed to make rendering your view part of your MVC application.
[17:18:16] <taplar> jQuery isn't meant to do that
[17:18:27] <gambl0re> where does jquery fit in mvc then?
[17:18:36] <taplar> in the cracks
[17:18:38] <robertmaxrees> gambl0re depending on your view library, it may or may not.
[17:18:46] <gambl0re> what do you mean cracks
[17:18:49] <robertmaxrees> inthl since i don't have a complete, functioning example in front of me, it's hard to be more specific.
[17:19:03] <taplar> typically applications have defined layouts and logic and such
[17:19:14] <taplar> jQuery, typically, is used to 'enhance' it
[17:19:34] <robertmaxrees> ^ especially when using something like backbone.
[17:19:36] <gambl0re> enhance view libraries?
[17:19:45] <taplar> enhance the view
[17:19:53] <taplar> like, take an ajax request
[17:20:00] <taplar> maybe all you need is to make an ajax request
[17:20:04] <gambl0re> can i mix jquery with react?
[17:20:14] <robertmaxrees> you can, but I wouldn't.
[17:20:16] <taplar> choosing to implement vue or react just for an ajax request is over kill
[17:20:21] <robertmaxrees> ^^
[17:20:36] <gambl0re> but isnt it overkill to use jquery just for ajax calls also?
[17:20:48] <taplar> possibly
[17:20:48] <gambl0re> they have dedicated libraries for ajax requests
[17:20:54] <robertmaxrees> not if you need to support a lot of browsers.
[17:21:01] <taplar> ^
[17:21:03] <robertmaxrees> also if you want to do some DOM manipulation when it's done.
[17:21:46] <robertmaxrees> it's all about the pros and cons based on the project.
[17:23:55] <taplar> i do love data models though, :)
[17:24:57] <inthl> https://codepen.io/anon/pen/PevNOg
[17:25:02] <inthl> robertmaxrees, there you go :)
[17:25:18] <inthl> it shows exaclty the problem, doesn't even matter that there are 2 buttons
[17:25:28] <inthl> write something into the input ...press submit, you see the alert
[17:25:36] <inthl> write something into the input...press enter, you see the alert
[17:25:52] <robertmaxrees> right.
[17:25:55] <robertmaxrees> so then where's the bug?
[17:25:58] <inthl> now delete your input, click into it until the autocomplete comes up, select it with your mose - nothing happens
[17:26:03] <robertmaxrees> ah.
[17:26:17] <robertmaxrees> ern.
[17:26:18] <inthl> delete it again, press arrow key down to select it, and enter to take it into the input - you see the alert.
[17:26:22] <inthl> that's the problem
[17:26:25] <robertmaxrees> oh, oh oh oh
[17:26:29] <inthl> I selected the autocomplete, I did not want to submit!
[17:28:59] <robertmaxrees> except that's not what's happening heh
[17:29:10] <robertmaxrees> it's your keypress logic that's busted.
[17:29:53] <robertmaxrees> okay so.
[17:30:08] <inthl> you are not seeing the alert when pressing enter on the autocomplete..?
[17:30:12] <robertmaxrees> i am.
[17:30:20] <robertmaxrees> but i'm seeing some flawed logic here :)
[17:30:27] <inthl> tell me more :>
[17:30:52] <robertmaxrees> so why do you have that keypress handler in the first place?
[17:32:34] <inthl> I don't know? that was my straightforward idea
[17:32:42] <inthl> you have a better one?
[17:32:45] <robertmaxrees> but what problem is it solving?
[17:32:47] <robertmaxrees> that's what i'm asking.
[17:33:07] <inthl> it is telling the listener that someone pressed enter on the input, hence a form submit is desired in most cases
[17:33:13] <robertmaxrees> err.,
[17:33:17] <robertmaxrees> you don't need that though :)
[17:33:31] <inthl> I do - when I want submit2 to submit the form, instead of submit1
[17:33:43] <robertmaxrees> what's the difference between the two buttons?
[17:33:47] <inthl> browsers take the very first type="submit" usually, I need to have this defined by class
[17:33:53] <inthl> the one is class="form_submit", the other is not
[17:34:14] <robertmaxrees> becuase to me it sounds like you want the submit event to call a particular function
[17:34:25] <robertmaxrees> what makes the two buttons actually different?
[17:34:32] <robertmaxrees> (trying to wrap my head around what's going on)
[17:35:04] <inthl> the one might have a value doing something different in the backend. imagine a back-button and a forward-button. both have to be type=submit
[17:35:21] <robertmaxrees> are they back and forward buttons though?
[17:35:47] <inthl> mostly. not always. as mentioned: i need to have that button submit the form which has the class button_submit
[17:36:02] <inthl> that's why the keypress listener .click()s it
[17:36:09] <robertmaxrees> because it's sounding more and more like really what you want to do is build functions to handle each of these cases and then directly call them
[17:37:17] <robertmaxrees> have the basic submit event handler do the right "default" and then add in a click handler for the submit 1 button
[17:38:33] <inthl> uhm
[17:38:43] <inthl> so what exactly is the suggestion?
[17:38:52] <robertmaxrees> https://codepen.io/anon/pen/bMypOd?editors=0010
[17:38:54] <robertmaxrees> basically thisd.
[17:38:59] <robertmaxrees> *this
[17:43:50] <robertmaxrees> inthl basically, you want to invert your logic a little :)
[17:45:18] <inthl> hm
[17:45:43] <inthl> besides that approach, do you see no way to ignore the autocomplete-enter-keypress?
[17:46:02] <inthl> because I am not sure whether this one might cause problems, since not all forms are the same, I'd have to play around a little
[17:46:13] <robertmaxrees> check out the html change, as well.
[17:46:17] <robertmaxrees> that's integral to the fix.
[17:46:46] <robertmaxrees> this is also a bit clearer than trying to hack around browser autocomplete.
[17:47:46] <inthl> I can't help it, but I see a problem there: pressing enter in the input, where the dont_want_this prevents it and quits ...what exactly hauses submit2 then to be submitted?
[17:48:10] <inthl> I mean, the browser shall submit that once, on the first button, why does it submit it a second time on submit2 ?
[17:48:33] <inthl> this sounds like something almost browser-specific to me and raises the question whether it works on any browser
[17:57:32] <robertmaxrees> it should work fine in all.
[17:57:36] <robertmaxrees> i tested ff and chrome.
[17:57:57] <robertmaxrees> it works because i changed the html of one of the buttons to be button type="button" instead of submit.
[18:00:27] <inthl> oh
[18:00:41] <inthl> but as mentioned: both need type=submit
[18:00:50] <inthl> haven't noticed that change there
[18:00:53] <robertmaxrees> but you're submitting the form via ajax, right?
[18:00:56] <inthl> yes
[18:00:58] <taplar> ^^^
[18:01:10] <robertmaxrees> so then this is what you want.
[18:01:16] <robertmaxrees> you bind to the click handler of that special case.
[18:01:46] <inthl> but where is the submit process happening when pressing submit1 ..?
[18:02:38] <robertmaxrees> huh?
[18:03:46] <inthl> https://codepen.io/anon/pen/yjWJaz
[18:04:26] <inthl> back does not issue a form submit - also please note: it does not necessarily have any class at all, there might be multiple submit buttons
[18:04:40] <inthl> all of type=submit, but only one is class="button_submit"
[18:05:16] <inthl> all of them doing something different with their name/value combination, but only one should be the <input>-enterpress submitting one
[18:08:04] <robertmaxrees> okay so
[18:08:13] <robertmaxrees> why do you care about the form submitting for that back button?
[18:08:31] <robertmaxrees> do you want to sync back to the server?
[18:10:41] <robertmaxrees> (this is where i'm getting confused :) )
[18:13:39] <taplar> i think i saw "submit2" and confused it with select2 and my brain fried
[18:13:50] <robertmaxrees> hahahahaha
[18:15:57] <gambl0re> is there a quick way to clear all the input fields in a form?
[18:16:16] <robertmaxrees> https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/reset this is one way gambl0re
[18:16:19] <taplar> $(':input').val('') probably
[18:16:24] <robertmaxrees> ^ this is another.
[18:16:45] <taplar> reset would be better if they originally were blank
[18:16:50] <gambl0re> what does :input do
[18:17:00] <taplar> pseudoselector for jquery to select all input fields
[18:17:06] <robertmaxrees> https://api.jquery.com/input-selector/
[18:17:23] <gambl0re> but if what if i have input fields in other areas of my page that i dont want cleared
[18:17:35] <spaces> robertmaxrees has jquery future ? I think it has and 4.0 will be awesome or am I wrong ?
[18:17:35] <taplar> then use a contextual lookup
[18:17:38] <robertmaxrees> $('#myForm :input').val('')
[18:17:48] <gambl0re> what do you mean contextual lookup
[18:18:01] <robertmaxrees> gambl0re ^ look at my last example
[18:18:02] <taplar> what robert just showed.  you scope down the selector to only target what yo uwant
[18:18:14] <gambl0re> i blocked robert...
[18:18:14] <robertmaxrees> spaces i mean, i'm not sure.
[18:18:18] <robertmaxrees> lol
[18:18:19] <gambl0re> he was making me mad
[18:18:24] <taplar> lol, wut?
[18:18:27] <gambl0re> i got tired of him
[18:18:33] <robertmaxrees> that explains a lot.
[18:18:56] <gambl0re> he wasnt man enough to block me so i did it myself
[18:19:03] <gambl0re> anyways. he's the past
[18:19:13] <taplar> yep, this is definitely my favorite gif of the day now http://media2.giphy.com/media/COO13FZ1ktabS/giphy.gif
[18:20:01] <robertmaxrees> *sigh*
[18:20:02] <gambl0re> taplar, thanks for the help
[18:20:14] <taplar> robertmaxrees: $('#myForm :input').val('')
[18:20:25] <taplar> that's an example of a contextual lookup
[18:20:31] <spaces> robertmaxrees ok, but you like it more then over native JS ?
[18:20:39] <gambl0re> taplar, cool thanks
[18:20:42] <robertmaxrees> spaces not more or less.
[18:20:49] <robertmaxrees> spaces it serves its particular job well
[18:21:25] <spaces> robertmaxrees which is as this moment in your opinion ?
[18:21:53] <robertmaxrees> huh?
[18:21:57] <robertmaxrees> you mean what's jquery's job?
[18:22:14] <taplar> spaces: i think the question you need to ask yourself is does jquery help you in your development
[18:22:18] <spaces> yes because people say native JS does the same... I think it's more work to do default JS
[18:22:18] <taplar> if it does, use it
[18:22:27] <spaces> taplar it does and I love it
[18:22:43] <spaces> s/default/native
[18:22:59] <taplar> so what's the concern?
[18:23:11] <robertmaxrees> it sounds like you've made up your mind :)
[18:23:29] <inthl> uh sry was afk
[18:24:08] <inthl> it might not be a back button as mentioned, this was just an example. it is just: button 1 do one thing, button 2, do something different, button 3, do something else again - where button2 shall be the default submitting one when one presses enter
[18:24:20] <inthl> and only button2 has that class, that's how it is identified
[18:24:27] <robertmaxrees> inthl right, so the other 2 aren't submitting.
[18:24:35] <robertmaxrees> they're special cases.  so they shouldn't trigger the form submit.
[18:24:38] <spaces> taplar robertmaxrees sure I love it but for the future if it will vanish  it's nicer to go native JS... but I think 4.0 will be a real JS framework 2.0 if I'm right
[18:24:39] <inthl> they are, when you press them
[18:24:41] <inthl> not via enter
[18:24:45] <robertmaxrees> right.
[18:24:58] <taplar> you're expecting jQuery to turn into a framework?
[18:25:12] <robertmaxrees> inthl since you're using ajax, you want to treat them explicitly via click handlers
[18:25:29] <spaces> more or less, I think 4.0 will be some sort of ?
[18:25:35] <robertmaxrees> spaces that's a lot of conjecture without much evidence.
[18:25:36] <taplar> what is causing you to think that?
[18:25:52] <robertmaxrees> jquery isn't a framework.  afaik there's no desire to turn it into one either.
[18:26:01] <spaces> ok
[18:26:14] <robertmaxrees> it's job is as a dom manipulation library
[18:26:21] <spaces> I thought because it needs to be 3.x compatible for a while and plugins will be there as well
[18:26:33] <robertmaxrees> huh?
[18:26:39] <inthl> robertmaxrees, that's what I thought I did
[18:26:47] <inthl> which works out fine, until that autocomplete joins the game
[18:27:01] <robertmaxrees> inthl your code wasn't very clear about that :)
[18:27:13] <robertmaxrees> inthl that's why my changes make a lot of sense
[18:27:24] <robertmaxrees> you only want one of the buttons to be the actual submit.
[18:27:29] <taplar> "it needs to be 3.x compatible"  what is "it"?
[18:27:41] <robertmaxrees> the others have different actions, so you should treat them explicitly.
[18:27:41] <spaces> anyways will read more about it tomorro
[18:27:42] <spaces> w
[18:27:45] <robertmaxrees> wat
[18:27:58] <spaces> taplar 4.0
[18:28:05] <robertmaxrees> spaces huh?
[18:28:12] <taplar> what are you reading that talks about 4.0?
[18:28:15] <spaces> 4.0 will be a full rewrite
[18:28:21] <taplar> what are you reading?
[18:28:25] <taplar> lol
[18:28:38] <spaces> it was on the jquery github page
[18:28:44] <spaces> read it last week
[18:29:10] <taplar> https://github.com/jquery/jquery  this?
[18:29:47] <robertmaxrees> https://github.com/jquery/jquery/issues/3886
[18:29:52] <robertmaxrees> this is what he's likely referring to.
[18:30:35] <spaces> https://github.com/jquery/jquery/issues/3886#issuecomment-350880747
[18:30:37] <spaces> yes
[18:31:31] <taplar> "A rewrite of our speed framework, to keep track of performance regressions in common operations."
[18:31:45] <robertmaxrees> "A complete rewrite using next generation JavaScript."
[18:31:55] <spaces> ok, yes
[18:31:58] <taplar> as I'm reading this, I don't see anything about making jQuery a framework.  Just re-writing it to use newer javascript functions
[18:32:07] <robertmaxrees> ^
[18:32:32] <spaces> but will jquery still be some valid addition instead of native JS ?
[18:32:43] <spaces> as it was for a gap between the browsers in the past
[18:32:46] <robertmaxrees> spaces that's where you're getting confused
[18:32:51] <robertmaxrees> it's not "instead of native JS"
[18:33:01] <robertmaxrees> it's a complement to "native js"
[18:33:09] <taplar> and is completely circumstantial
[18:33:14] <robertmaxrees> ^
[18:33:32] <taplar> it depends entirely on what user base you want to cater your application to
[18:33:52] <taplar> and what your user base actually is
[18:33:56] <robertmaxrees> and also what needs your devs have.
[18:34:05] <taplar> that too
[18:34:34] <robertmaxrees> jquery has some really convenient ways to do things like, say, enumerate over nodes.
[18:34:35] <spaces> yes i agree with it's complement to JS but is that gap still there ?
[18:34:43] <robertmaxrees> spaces absolutely.
[18:34:44] <taplar> i just answered that
[18:34:52] <robertmaxrees> spaces lots of sites still need to support older browsers.
[18:35:10] <taplar> but maybe you are running an intranet site
[18:35:11] <spaces> yes because they have that gap but for newer ones
[18:35:25] <taplar> and your company controls what browsers its employees use and update frequently
[18:35:28] <robertmaxrees> and setting up babel is a pretty large commitment for small projects.
[18:35:32] <taplar> jQuery may not be necessary
[18:35:38] <robertmaxrees> i mean
[18:35:44] <robertmaxrees> technically jquery was never necessary
[18:35:49] <robertmaxrees> it's just an easier API
[18:36:01] <spaces> ^ that
[18:36:02] <spaces> I like that
[18:36:17] <taplar> jQuery had some methods implemented before native had them implemented, yes?
[18:36:19] <spaces> so that is a valid reason to use ?
[18:36:28] <robertmaxrees> spaces is what?
[18:36:32] <robertmaxrees> spaces the API?
[18:36:55] <spaces> robertmaxrees easier API... I mean they say angular it but they are nuts :P
[18:37:01] <robertmaxrees> lol
[18:37:02] <spaces> anguals is...
[18:37:21] <taplar> we use angular in the shop.  it's just a learning curve
[18:37:21] <robertmaxrees> spaces the "easier api" is why you'd literally use any lib/framework.
[18:37:31] <robertmaxrees> moment, angular, react, vue, riot, express...
[18:37:39] <robertmaxrees> it simplifies something over doing it yourself.
[18:37:46] <spaces> yes
[18:37:58] <spaces> ok, then I will ditch the fancy JS boys "native" opinion
[18:38:06] <robertmaxrees> hrm?
[18:38:07] <taplar> it's not fancy, lol
[18:38:17] <robertmaxrees> and jquery is not a panacea
[18:38:19] <spaces> taplar what is ?
[18:38:27] <robertmaxrees> there are times it's appropriate to use react, anguilar, vue, etc.
[18:38:41] <spaces> yeah but I like to stick with one
[18:38:42] <taplar> look, the point i'm trying to get at is as time goes on, native adds more and more functionality that before, libraries like jQuery were writing for you
[18:39:01] <taplar> given different business situations, using those native solutions may be enough
[18:39:15] <spaces> ok
[18:39:20] <taplar> there is no one size fits all solution
[18:39:23] <robertmaxrees> ^^^^^^^^^^^^^
[18:39:43] <spaces> meh I cannot follow anymore, I'm in bed and my eyes are closing and my dog is already in dreamland next to me
[18:39:47] <robertmaxrees> heh
[18:40:08] <spaces> yes 3rd day she is able to sleep on the blanchet :)
[18:40:08] <robertmaxrees> basically, the answer isn't "jquery is the right option always", it's "jquery is always an option" :)
[18:40:16] <taplar> sounds about right
[18:40:21] <spaces> yes
[18:40:26] <spaces> that is what I like
[18:40:30] <spaces> OK, I will keep using it!
[18:40:40] <taplar> my parents had a chiwhawha that they got a bed for, and it ended up in the bed really fast
[18:40:52] <taplar> chihuahua?
[18:40:59] <taplar> whatever
[18:41:15] <spaces> we call it a c*nt-licker in eu :P
[18:41:21] <robertmaxrees> :|
[18:41:22] <robertmaxrees> yikes
[18:41:29] <spaces> it has a reason
[18:41:34] <taplar> i'm not asking
[18:41:39] <taplar> :P
[18:41:42] <robertmaxrees> moving on.
[18:42:05] <spaces> yeah it's more that lots of (alone) women have such dogs because they like them
[18:42:14] <nitrospectide> Is there a reason NOT to put an onClick directly on a link for Google Analytics event tracking? I thought I had read at one point that it was better do do it some other way, like attach it via javascript/jQuery.
[18:42:15] <spaces> so they are positioned wrong
[18:42:17] <robertmaxrees> please drop the subject spaces
[18:42:23] <robertmaxrees> that was inappropriate
[18:42:26] <taplar> lmao
[18:42:27] <robertmaxrees> thanks
[18:42:48] <robertmaxrees> nitrospectide keeps your html and js cleanly separated.
[18:42:56] <spaces> yeah.. but this is the 3rd day she may sleep here, she sleeps @ foto end but I dragged her stretched nect to me :D
[18:42:58] <spaces> next
[18:43:05] <spaces> footend
[18:43:11] <spaces> I need sleep
[18:43:27] <spaces> thanks guys! cus tomorrow or after it
[18:43:36] <spaces> cu
[18:44:22] <taplar> adios
[18:44:45] <spaces> bye!
[18:45:41] <nitrospectide> robertmaxrees: Well, I fiddled around, and my solution involves butting a data- attrib on the link, that jQuery then reads and turns into the params. So, I guess that doesn't help anything.
[18:45:52] <robertmaxrees> huh?
[18:46:47] <taplar> data elements are a potential way of allowing the separation of markup and logic
[18:47:05] <robertmaxrees> ^ that's specifically what data elements are for.
[18:47:15] <robertmaxrees> non-display metadata
[18:47:34] <robertmaxrees> it's pretty common for people to conflate metadata and logic
[18:47:43] <robertmaxrees> s/metadata/data
[18:50:44] <nitrospectide> Well, somewhere, somehow, I had come under the impression that it was best not to slap an onClick onto a link for tracking a GA event. So fiddled a bit, and I put my 3 GA event params into a data attrib on my link, using separators… data-ga="form-subscribe|submit|Newsletter". jQuery looks for any anchors with that data-ga, and then splits those three items into my params, and attaches the event.
[18:50:58] <taplar> <div class="sendToAnalytics" data-type="event" data-category="login" data-action="clickedOnLogin" data-label="Existing User Login">
[18:51:03] <taplar> nothing wrong with something like that
[18:51:50] <taplar> data-ga="form-subscribe|submit|Newsletter" is really weird
[18:51:56] <taplar> and pretty much an anti-pattern
[18:52:04] <nitrospectide> the one thing I do that is kind of cool, is that if I have a special keyword in my data, like "ebook-current|cta-click|PAGETITLE", PAGETITLE gets swapped for the actual page title in the event creation.
[18:52:31] <taplar> if you find yourself setting a data element, and then your logic splits that element to get sub elements, that's an anti-pattern
[18:53:12] <taplar> you want your data elements to be at a granular enough level that they, on their own, represent what they are
[18:54:08] <nitrospectide> Well, I was just looking to make something compact and simple that could be hand-created by a non-geek very quickly. It seemed cleaner to do a delimited set of values, than the normal attr/value pairing which is more cumbersome to type, and potentially easier to gunk up.
[18:54:28] <nitrospectide> I realize what I'm doing is completely un-semantic.
[18:54:37] <nitrospectide> non-semantic?
[18:55:30] <taplar> less readable?
[18:55:45] <nitrospectide> taplar: So, I'm doing what you showed, but in a compacted, non-semantic , "weird" way.
[18:56:20] <taplar> it's not all about semantics.  look at it this way
[18:56:24] <nitrospectide> Yes, though my goal was compactness, and ease of. creation/management. Easier to mis copy/paste with 3 attribs, than just a delimited string?
[18:56:36] <taplar> if you are creating data that is X
[18:56:45] <taplar> composed of A, B, and C
[18:56:59] <taplar> and your logic, for the majority of the time, -needs- A, B, and C
[18:57:07] <taplar> you are creating more work for yourself by making X
[18:58:02] <taplar> it's not just a potential loss of readability
[18:58:12] <nitrospectide> Yeah.. split() is having to parse it, rather than it being natively 1:1 granular.
[18:58:33] <taplar> and you have to remember it has to be in that pattern
[18:58:42] <nitrospectide> true
[18:58:45] <taplar> and not just you.  anyone else who works on the application
[18:58:51] <robertmaxrees> ^
[18:59:09] <nitrospectide> true
[18:59:14] <robertmaxrees> part of why explicit is better than implicit in a lot of cases.
[18:59:44] <nitrospectide> Though, this is simple enough that the data- attr can be traced back to this one snippet very easily.
[18:59:53] <taplar> why do i have to trace it though?
[18:59:55] <nitrospectide> Your ppints are all well taken. I will ruminate.
[18:59:58] <taplar> that's the point
[19:00:01] <nitrospectide> I appreciate your feedback.
[19:00:17] <taplar> "it works if you understand how it is working"
[19:00:27] <taplar> don't make that part harder!
[19:00:28] <taplar> :)
[19:00:37] <nitrospectide> Well, even if the data were separate, you'd have to go over to the snippet to se what they are for and how they are used
[19:01:03] <taplar> data('name')
[19:01:03] <robertmaxrees> this is over a single tracking string over three attributes, right?
[19:01:17] <taplar> oh, something has a name.  And by it's key, I know what it should represent
[19:01:18] <nitrospectide> Though a long, semantic name on each attr could make it more evident from that end, without seeing the code
[19:01:25] <robertmaxrees> ^^^
[19:01:49] <nitrospectide> OK. Thanks.
[19:02:02] <robertmaxrees> from my experience, it's much easier to say "the data-name should be the name, the data-someotherthing is someotherthing, and data-pagetitle is optional, but if you use it, that's what the pagetitle will be reported as"
[19:02:03] <robertmaxrees> :)
[19:02:24] <taplar> data-X, X should tell you what X represents
[19:03:19] <taplar> this concept is fairly pervasive in lots of different subjects, like returning responses from endpoints, and naming database columns
[19:03:24] <taplar> a name should tell you what something is
[19:03:46] <taplar> and if it is a common practice of breaking a value down, the data model should be re-evaluated
[19:04:17] <nitrospectide> Thanks
[19:04:52] <taplar> i think the rain stopped here.  i'll catch you cats later
[19:05:01] <robertmaxrees> enjoy
[19:33:51] <sam-lap> hi guys, anyone could give me an example how to download an xlsx via ajax call ? excel is generated with PHPExcel in php and it works fine, just the download via jquery isnt working
[19:34:30] <robertmaxrees> http://www.henryalgus.com/reading-binary-files-using-jquery-ajax/
[19:42:04] <robertmaxrees> sam-lap that help?
[20:21:29] <spaces> oh my I woke up
