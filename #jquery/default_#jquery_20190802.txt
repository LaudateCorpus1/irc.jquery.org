[08:01:16] <Khin> Is there anyone who could help out with this jquery?
[08:01:33] <Khin> $(document).on('click', '.copy', function(e) {  var serialized = $(this.form).serializeArray()  var text = serialized.map(function(field) {    return (field.name !== "hidden" ? field.name + ": " : "") + field.value  }).join("\n")  $("#copy").show().val(text)[0].select();  document.execCommand("copy");  $("#copy").hide();  alert("Successfully copied
[08:01:33] <Khin>  to clipboard!");  return false})
[08:01:57] <Khin> Is there any way to delete the data being copied if the field is empty?
[08:13:28] <xhoy> Khin: .destroy()? or .delete()?
[10:41:37] <paule32> hello
[10:42:03] <paule32> give it a "pointer" that refers to a function or class or string in js?
[14:06:57] <robertmaxrees> weeeeeee
[14:12:36] <taplar> weeee indeed
[14:13:39] <paule32> hello
[14:13:49] <paule32> how can i import module?
[14:14:02] <robertmaxrees> ##javascript is a better place for that question :)
[14:29:41] <skizu> Hi, it's been a long time since I used jquery, and I wanted a little help. I wanted to look up what  `$(function () { codehere })` does
[14:29:55] <taplar> that's a document ready
[14:30:31] <skizu> Ah awesome, this is jQuery 1.10 code I'm looking at
[14:30:48] <skizu> So basically, on document ready, invoke that function?
[14:30:50] <taplar> afaik, that's a document ready in all versions
[14:31:00] <robertmaxrees> https://api.jquery.com/jQuery/
[14:31:01] <robertmaxrees> yep.
[14:31:13] <robertmaxrees> https://api.jquery.com/jQuery/#jQuery3 specifically.
[14:31:42] <skizu> Awesome, thank you. With only the syntax, it was hard to research the definition
[14:32:03] <skizu> Fun fact, this does not work with Nitro JavaScript engine :)
[14:33:42] <robertmaxrees> isn't nitro not for web browsers tho?
[14:34:35] <skizu> Nitro is used in Safari and iOS
[14:34:40] <robertmaxrees> hrm.
[14:34:47] <robertmaxrees> doc ready should work just fine for those.
[14:34:47] <taplar> yeah, that's what i was reading
[14:35:06] <skizu> Specifically I'm working on iOS so it could also be a race condition I'm experiencing
[14:35:15] <robertmaxrees> or an invalid page.
[14:35:18] <skizu> 5ms timeout resolves my issue
[14:35:39] <taplar> keep in mind, 3X jQuery made document ready a promise or something
[14:36:06] <skizu> 3X? Sorry not used jQuery for maybe 5 years, is 1.10 3X?
[14:36:20] <skizu> 3.x?
[14:36:21] <taplar> no, 3.#.# something is 3X
[14:36:56] <robertmaxrees> skizu what exact issue are you having?
[14:37:47] <skizu> robertmaxrees it's not really a jQuery issue, I believe it's an issue with jQuery 1.10 mixed with WKWebView from iOS which is providning a ready response before ready
[14:38:07] <robertmaxrees> doc ready handles that case for you though.
[14:38:22] <skizu> I just needed to know what `$(function () {} );` did.
[14:38:58] * taplar just read the blog and didn't know they planned to remove Sizzle...
[14:39:19] <skizu> robert, simply putting a timeout of 50ms hints to me that there's a race condition or WKWebView isn't playing nicely with jQuery 1.10 document ready implementation. But thank you for the information, back to debugging
[14:40:05] <robertmaxrees> i think your page is invalid :)
[14:41:00] <skizu> Define invalid, as it works fine in a UIWebView, but simlpy switching to WKWebView results in this issue
[14:41:24] <robertmaxrees> if doc ready doesn't fire at the correct time, that's likely your issue.
[14:41:32] <robertmaxrees> as in, invalid HTML.
[14:42:03] <skizu> I can confirm the HTML is valid, the HTML renders without issue
[14:42:12] <skizu> Welcome back
[14:42:13] <robertmaxrees> that doesn't mean it's valid.
[14:42:33] <taplar> browsers do all kinds of things to make invalid html "work"
[14:42:36] <robertmaxrees> ^^^
[14:42:51] <skizu> I mean the raw markdown is HTML1.1 compliant
[14:43:40] <robertmaxrees> markdown or markup.
[14:43:47] <skizu> I'll look into it, I've been dumped an upgrade project so, could be anything. Oh but why would invalid HTML result in not firing or firing document complete too early?
[14:44:05] <skizu> markup haha
[14:44:48] <robertmaxrees> huge difference between the two heh
[14:45:18] <robertmaxrees> and the browser tries to "fix" things, which can cause the doc ready to fire at the wrong time.
[14:45:20] <skizu> Indeed, was writing a document in markdown regarding the upgrading process
[14:45:29] <robertmaxrees> huh?
[14:46:08] <robertmaxrees> oh you were writing a document using markdown for your docs.
[14:46:09] <robertmaxrees> got it.
[14:47:21] <skizu> Thank you for the pointers, I guess I'll look into seeing if the document ready is being fired too early or not fired at all
[14:48:00] <robertmaxrees> :)
[14:48:11] <robertmaxrees> either case points to a broken page, either way.
[15:30:10] <skizu> Ah shame robertparkerx has left, I'd found the issue
[15:30:28] <taplar> ?
[15:31:41] <skizu> My issue was that the way the way WKWebView and WebView work now, it does not establish a IPC connection before document loaded, so it executed after a required injection
