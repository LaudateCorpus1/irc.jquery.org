[12:44:32] <robertmaxrees> weeeeee
[12:44:53] <taplar> another slow day?
[12:47:11] <robertmaxrees> you know it.
[12:47:22] <robertmaxrees> really wish we didn't need to set +r
[12:47:28] <taplar> tried a -r lately?
[12:47:41] <robertmaxrees> let's give it a shot.
[12:48:21] <robertmaxrees> >.>
[12:52:18] <Alex`2> https://www.youtube.com/watch?v=ADn2IJnTRyM
[12:52:44] <robertmaxrees> *sigh*
[12:53:21] <taplar> I was actually expecting more blank messages
[12:54:40] <robertmaxrees> this has reached a new level of absurdity.
[12:55:00] <robertmaxrees> hopefully come september the influx of n00bs will drown out the spam.
[14:02:18] <sine0> taplar: are you here
[14:02:32] <sine0> you normally escape on the weekend
[14:04:29] <taplar> not the weekend yet, :)
[14:06:07] <robertmaxrees> >:)
[17:17:34] <sine0> taplar: what about now
[17:17:54] <taplar> hmm?
[17:17:58] <sine0> ahh you are here
[17:18:02] <sine0> I have a question, hold
[17:18:11] <taplar> 1:42 until freedom
[17:19:22] <robertmaxrees> wtf
[17:19:24] <robertmaxrees> lol
[17:19:39] <sine0> https://paste.pound-python.org/show/YKImM4y1v1ILqmTwxjDd/
[17:20:24] <taplar> sup?
[17:20:25] <sine0> basically I am doing a form with lots of dropdowns. each selection could possible change the next set of options drop downs. is this the right way to have the data
[17:21:14] <sine0> the options have like a related array that is used to populate the options of the next set
[17:21:21] <taplar> looks valid to me
[17:21:56] <taplar> except for the bottom two methods
[17:22:16] <taplar> oooooh, nvm
[17:22:21] <sine0> ok yea i was trying out something there anyway
[17:22:32] <taplar> you need to do not(e.target) before the trigger
[17:22:42] <taplar> otherwise you'll keep triggering a change on the same element
[17:23:07] <sine0> what line number
[17:23:12] <taplar> though if you change two, and it triggers a change on one, which triggers a change on two, which...
[17:23:15] <sine0> and so I need to remove the e
[17:23:26] <taplar> you only want to trigger a change on sub elements, no?
[17:23:31] <sine0> correct
[17:23:39] <taplar> yeah, so you're going to have to rethink that part
[17:23:48] <sine0> well I am glad that this seems like the right direction for forms
[17:24:19] <taplar> one way you might make that easier would be to put a data-element on the selects
[17:24:25] <taplar> like data-trigger=""
[17:24:44] <taplar> so op_one would have a data-trigger="op_two"
[17:24:57] <taplar> then you can use that in your change handler to know which one to trigger a change on
[17:25:08] <sine0> I have not used attributes so far
[17:25:52] <taplar> if you put data-* attributes on elements, you can grab them with $(theelement).data('theDataKey') and use them
[17:26:00] <taplar> so data-trigger would be data('trigger')
[17:26:07] <sine0> ahh cool
[17:26:31] <sine0> when inspecting jquery stuff i see lots of non usual data-stuff so now I understand why
[17:27:47] <taplar> https://paste.pound-python.org/show/0ELZhsljkquVs1uR7vKh/
[17:49:07] <taplar> and actually you could use some data attributes to not have to do that index lookup stuff
[17:56:41] <sine0> so like you said
[18:01:53] <sine0> how would you know what array to use
[18:02:02] <sine0> just from using the attr
[18:02:08] <taplar> tinkering currently, :)
[18:02:51] <sine0> would have to give the array a key and place that in the attr on update so the others can read
[18:06:19] <taplar> https://paste.pound-python.org/show/xXtyN06kyn4rmbL2txJA/
[18:06:44] <taplar> Ok, so what this does is, on run, it creates all the options for the first select
[18:07:04] <taplar> and it puts the parent as "children" on the options, and the child as 'subChildren"
[18:07:34] <taplar> when op_one changes, it will grab the data-target="op_two" to know it should change the second select
[18:07:43] <taplar> It will empty it out to reset it
[18:08:04] <taplar> Then build the options based on what the "children" is, in this case, the "parent" array
[18:08:36] <taplar> since we did put the "child" on the options as the "subChildren", it will put those on the second selects options as their "children"
[18:08:47] <taplar> and then it will trigger a change on the second select
[18:09:03] <taplar> Then when op_two changes
[18:09:17] <taplar> it will find the data-target="op_three"
[18:09:21] <taplar> empty it
[18:09:46] <taplar> and then create all the options for it for the "children" that were put on it, which will be the "child" array
[18:10:12] <taplar> and since we didn't put a "subChildren" on that, the options for the third select will not have "children" as a data element
[18:10:27] <taplar> once we build all those, and append them, we also trigger a change on the second select
[18:10:55] <taplar> err, third select
[18:11:12] <sine0> wow looks great, just have to speak to my girl, shes calling, will be back
[18:11:14] <taplar> changing the first, triggers a change on the second, and a change to the second triggers a change to the third
[18:11:20] <taplar> np
[18:37:09] <taplar> i, want, to, get a way!  i wanna flyyyyyyyyy awwwwaaaaayyyy
[18:37:52] <sine0> ok im back, im gonna check out that code now
[18:37:56] <sine0> if you gone then thanks bro
[18:38:06] <sine0> its 23:30 here on friday
[18:38:16] <taplar> 22 more minutes
[18:38:38] <sine0> what time where you?
[18:38:45] <taplar> 17:38
[18:38:51] <sine0> usa ?
[18:38:54] <taplar> yeah
[18:40:01] <sine0> im still amazed at how i can type into my keyboard here in front of me and it can travel through fibre optics to you in america in a second or less
[18:40:42] <taplar> does it go wired all the way?  i'd imagine some hop of the journey might be sattelite
[18:41:24] <sine0> some of it is through 2 yogurt pots and some string
[18:41:46] <taplar> 8|  how do you know my setup?
[18:44:54] <sine0> tanks for the code, I dont understand all of it but im going to work it out
[18:46:34] <taplar> interesting, it is all cables now
[18:48:57] <sine0> I can see that it maps out the data
[18:53:05] <sine0> im having to use jQuery. so do I have to change these ? var $this = jQuery(e.target);
[18:53:16] <sine0> or is the $this different
[18:53:31] <taplar> take a look at your document ready statement
[18:53:48] <sine0> yea i know it subs with the ($)
[18:53:54] <sine0> so you can use $ inside
[18:53:58] <taplar> yeah
[18:54:10] <sine0> but if i could not all over, how would I do $this would it be jQuerythis
[18:54:37] <taplar> just replace the $ with jQuery, wherever it represents jquery.
[18:54:46] <taplar> You wouldn't on the variable names, as that's not a reference to jquery
[18:54:56] <sine0> thats what im asking, in that moment
[18:55:03] <sine0> is $this a variable name like php
[18:55:09] <taplar> $variableName is just a practice some developers use to signify that a variable should already contain a jQuery object
[18:55:35] <taplar> other than that, it doesn't have any language meaning
[18:56:35] <taplar> if it doesn't fit your coding practices you can hack it off
[18:56:54] <sine0> you see this
[18:56:56] <sine0> return jQuery('<option value="' + k + '">' + v.model + '</option>').data('children', v.parent).data('subChildren', v.child);
[18:57:06] <taplar> yep
[18:57:13] <sine0> im still only getting this: <option value="0">RED</option>
[18:57:18] <sine0> no special attr
[18:57:37] <taplar> When you attach a data attribute to an element with jQuery, it will not show in the DOM
[18:57:52] <taplar> jQuery stores data attributes that it makes in a cache that it associates with the element
[18:58:08] <taplar> The reason for this is that the data attributes can be things other than strings
[18:58:14] <taplar> if you use jquery
[18:58:24] <sine0> ok well, it does not update the op_two when i change then, i thought it was due to that
[18:59:04] <taplar> yeah i just threw it together so there may be some bugs in it.  not having some html to make a live example.
[18:59:18] <taplar> but it's time for me to run!  :D
[18:59:48] <sine0> laters have a good one thanks dude
[18:59:57] <sine0> how do i debug/see the dom
[19:00:21] <taplar> you can see the dom by the inspector.  If you want to see what jQuery has as the data attributes, you have to run console logs against it
[19:00:23] <taplar> or
[19:00:33] <taplar> you can put "debugger;" statements in your code
[19:00:48] <taplar> crack open your developer tools and when the code hits one of those, it will pause in the browser debugger
[19:01:20] <taplar> http://fixingthesejquery.com/#slide4  <= site with some handy slides detailing some intro debugging stuff
[19:01:31] <sine0> thanks
[19:01:38] <taplar> np.  later!
[19:01:51] <taplar> also bug robertmaxrees, he's dieing to talk
[19:02:09] <taplar> :D
[19:02:11] * taplar runs
[19:03:26] <robertmaxrees> hahahaha
[22:22:22] <spaces> ok, someone want to be able to work for 3 days straight ?
[22:33:02] <pavonia> Are you selling pills?
[22:34:12] <spaces> no, something on 1Kb https://js1k.com/2016-elemental/demo/2552
[22:34:20] <spaces> *of
[22:34:34] <spaces> that will keep your eyes open for a while
[22:34:35] <spaces> wtf
[22:35:03] <spaces> pavonia ^
