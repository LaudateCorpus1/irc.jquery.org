[02:59:18] <trailtron> Hello
[02:59:29] <trailtron> Can someone help me with a task?
[02:59:42] <robertmaxrees> if you have a question, just ask.  if somebody can help, they will.
[03:01:16] <trailtron> I want to select all first level elements from a given page and then loop through each of it to number of loops in each of it.
[03:01:33] <trailtron> The problem is I can't figure out how to select only first level elements
[03:01:43] <robertmaxrees> "first level elements"?
[03:01:47] <robertmaxrees> also: why would you want to do that?
[03:02:05] <trailtron> I mean the the parents at first level only
[03:02:23] <robertmaxrees> can you make a jsfiddle showing the markup at least?
[03:02:28] <robertmaxrees> or an example of the markup.
[03:02:33] <trailtron> Okay
[03:05:52] <trailtron> Here
[03:05:53] <trailtron> https://jsfiddle.net/0z2bxre5/
[03:06:05] <trailtron> Here there are 2 first level elements
[03:06:24] <trailtron> For each it should show only show the total links in that first level elements
[03:06:36] <robertmaxrees> mind claryfing why you want to do that?
[03:07:26] <trailtron> I need to make a plugin that requires to count the number of links in a site
[03:07:39] <robertmaxrees> so you just want to count all a tags on the page?\
[03:08:28] <trailtron> I did that but now I want to count the number of links for each parent node
[03:10:26] <robertmaxrees> i might do something like $('body').children();
[03:10:35] <robertmaxrees> that'll get you all direct descendents of the body tag.
[03:11:24] <trailtron> Okay thanks
[03:11:27] <trailtron> Let me try
[03:11:51] <Cork> $.map($.get($('body > div'), function(elm) { return $(elm).find('a').length; }) ?
[03:12:06] <Cork> opps, a stray $.get...
[03:12:11] <Cork> $.map($('body > div'), function(elm) { return $(elm).find('a').length; }) ?
[03:15:16] <trailtron> Can I use find with it
[03:15:18] <trailtron> Like this
[03:15:19] <trailtron>     $("body > div").find('*').each(function() {
[03:15:20] <trailtron>         countLinks($(this));
[03:15:20] <trailtron>     });
[03:15:30] <robertmaxrees> hey avoid pasting multiline code int he channel pls :)
[03:15:38] <trailtron> Oh sorry
[03:15:45] <Cork> also if you want links you don't want to use find('*')
[03:15:58] <robertmaxrees> and divs aren't always the first children :)
[03:16:07] <robertmaxrees> hence $('body').children()
[03:16:31] <trailtron> Okay
[03:16:41] <Cork> they are in the example though, but ya
[03:16:52] <trailtron> Thanks
[03:17:17] <Cork> trailtron: if you just want to count the existance you don't want to loop on every node
[03:17:26] <Cork> that is a gigantic waste of cycles
[03:23:10] <trailtron> Okay
[03:23:29] <trailtron> I am kind of new to JS so thanks for help :)
[03:24:12] <robertmaxrees> check out https://learn.jquery.com/ for some jq basics btw
[03:25:40] <trailtron> Thanks
[04:25:38] <Jeroenpc> Hi all. I have a question: i am using jquery sortable with two linked lists that are both longer than the screen is high. If i drag a list item that is not visible on the initial page (so i first had to scroll down the page in the browser and then drag the item. The browser basically scrolls down all the way to the bottom of the page. Any ideas what i can do? Using Firefox 88 64b
[04:28:24] <Cork> Jeroenpc: you think you could make a jsfiddle?
[04:28:30] <Robdgreat> Jeroenpc: https://stackoverflow.com/questions/41171495/jquery-ui-sortable-scroll-to-bottom-of-the-page "Simply add scroll:false in the conf object"
[04:28:45] <Cork> The problem sounds familiar but haven't used sortable in years so not sure what the cause is
[04:28:58] <Robdgreat> untested. Give it a try
[04:46:40] <Jeroenpc> oh wow... that is a fast answer. That does work. Thank you very much!
[05:15:02] <Robdgreat> Google is a hell of a drug :)
[05:15:18] <Robdgreat> I think I've used sortable before, but it would have been many years ago
[05:15:42] <Robdgreat> so I sure didn't have any idea what it would have been
