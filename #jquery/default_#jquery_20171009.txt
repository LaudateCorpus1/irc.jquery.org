[01:57:14] <jcarpenter2> what's the best way to create an element in jquery?  would it be $('<tag></tag>')?
[01:58:18] <jcarpenter2> or $(document.createElement('tag'))
[01:58:34] <jcarpenter2> or is there a JQuery method for it, especially one that's shorter than either of those two options?
[02:18:41] <Cork> jcarpenter2: just $('<tag>') (no closing tag)
[02:19:01] <Cork> jquery will substitute it with $(document.createElement('tag'))
[02:19:48] <jcarpenter2> oh cool
[02:21:46] <Cork> $('<tag></tag>') gets parsed like html so it is not the same as createElement
[02:22:46] <jcarpenter2> is there a way to cause it to use createElementNS, for creating SVG elements?
[02:23:02] <Cork> same as my first comment
[02:23:28] <Cork> svg is a separate document though so you will have to use the svg:s document and not the default one
[02:23:48] <jcarpenter2> what do you mean?
[02:24:35] <Cork> $('<g>', [svg document object])
[02:24:49] <jcarpenter2> hmm okay
[02:24:56] <Cork> svg is not html it is svg so it is a different document
[02:25:07] <Cork> (until we get svg2)
[02:26:26] <jcarpenter2> what if all I have is an SVG string?
[02:27:10] <jcarpenter2> var svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
[02:27:12] <jcarpenter2> might be the answer
[02:28:46] <Cork> ya, that is to create the svg element, child elements can be done shorter
[02:28:55] <Cork> but ya you need to use createElemenetNS for the svg element
[02:29:07] <Cork> (to create the reference to the svg document)
[02:29:15] <jcarpenter2> when i do var $clipPath = $('<clipPath>', svg), clipPath gets downcased
[02:29:37] <jcarpenter2> and doesn't work in the svg picture
[02:29:38] <Cork> ya, it shouldn't be svg
[02:29:56] <Cork> it should be the svg document
[02:30:33] <Cork> svg[0].ownerDocument i THINK it is don't remember
[02:31:20] <jcarpenter2> that is the html document
[02:31:24] <Cork> hmm
[02:31:34] <Cork> one min let me start up my system for the day
[02:41:02] <Cork> jcarpenter2: hmm looks like i was thinking of when the svg was loaded in an iframe
[02:41:12] <Cork> jcarpenter2: so ya you need to use document.createElementNS
[02:41:24] <Cork> (or one of the many svg plugins for jquery)
[02:41:39] <jcarpenter2> it seems like object or embed tags will also create svg documents, but i'm having trouble getting it to work
[02:42:10] <Cork> jcarpenter2: depends on what you want to do with it
[02:42:37] <Cork> if you want it to behave like an <img> tag you most likely want a pure <svg> tag
[04:51:28] <Duikb00t> https://kopy.io/yk88U  prety easy question
[04:51:36] <Duikb00t> why is this not showing me the value?
[04:52:14] <Cork> Duikb00t: make a jsfiddle with the affected html and js
[04:56:06] <Duikb00t> Cork:  I am able to send you ap roduction example
[04:56:17] <Duikb00t> in a PM if that's ok? Might be better to see the whole flow.
[04:56:22] <Duikb00t> If that is ok for you?
[04:56:41] <Cork> should be fairly simple to just add the two html tags to a jsfiddle
[04:56:52] <Duikb00t> Yeah but that's not just 'it'  :D
[04:57:09] <Duikb00t> If it was that simple I had done that :D
[04:57:43] <Cork> the reason i prefer a jsfiddle is 1. you have to look at your own code (often means you can solve it your self) 2. it makes it simpler to give you an answer (as i can modify it) 3. much less code to look through
[04:58:04] <Cork> if you can't reproduce it sure i can look at the site, but i would prefer a fiddle if you can
[04:58:16] <Duikb00t> Its hard to reproduce
[04:58:20] <Duikb00t> because it's dynamic
[04:58:55] <Cork> then it moste likely mean you a are modifying an old element and the new one doesn't hold the value cause it isn't the one you changed
[04:59:49] <Duikb00t> Exactly that's the problem.
[05:00:12] <Cork> then make sure you don't use cached elements and the problem should go away
[05:00:28] <Duikb00t> I can perfectly show it with  a link in PM :D
[05:01:00] <Cork> don't need it if that is the problem
[05:01:39] <Duikb00t> The proble mis that I grab the value of a default radio.
[05:01:58] <Duikb00t> But when I print the value i get the whole html of that hidden field where Im trying to add it to
[05:02:04] <Duikb00t> why not just the value
[05:02:22] <Cork> cause you console.log(elm.val(newValue))
[05:02:27] <Cork> it returns the jquery object
[05:02:49] <Cork> val() returns the value .val(newValue) dosen't
[05:03:43] <Duikb00t> .val(assigns? )
[05:04:06] <Cork> if you give it an argument it assigned ya
[05:04:30] <Duikb00t> Ok in simple 2 lines { Don't think I need to fiddle this   }
[05:04:47] <Duikb00t> If I do: var brand = $('#brand');   Which is a hidden input field with value="";
[05:04:54] <Duikb00t> When I do: brand.val($('input[type=radio]:checked').val());
[05:05:06] <Duikb00t> Then  I Assign the value of the checked radio button
[05:05:08] <Duikb00t> right
[05:05:53] <Cork> yup
[05:08:25] <Duikb00t> so so so
[05:08:30] <Duikb00t> console.log( $('input[type=radio]:checked') );  === empty line what a bitch
[05:08:54] <Cork> define "empty line"
[05:09:00] <Duikb00t> white line in console :D
[05:10:00] <Cork> console.log($('input[type=radio]:checked').length) gives you?
[05:10:08] <Duikb00t> I think I See what's going wrong
[05:10:13] <Duikb00t> fml
[05:10:33] <Duikb00t> It's simply not chcekced.
[05:11:30] <Cork> not sure why you store a radio button value in a hidden field
[05:11:42] <Cork> just give the radio buttons a name and you will get it server side
[05:16:44] <undefined_bob> hello
[05:18:24] <Duikb00t> fixed thanks x
[09:49:00] <ph88_> i'm placing a new <img> into the DOM with jQuery.after() how can i execute a callback after the image has been placed ?
[09:55:02] <AdamPDotty> now "how" but "why"
[09:55:27] <MassDebates> interesting
[09:55:28] <AdamPDotty> callback();
[09:55:33] <MassDebates> ph88_:  I'm curious as to why, too
[09:56:41] <ph88_> because i want to scroll
[09:56:54] <AdamPDotty> scroll();
[09:58:19] <ph88_> ye scroll after image has been placed
[09:58:29] <ph88_> https://stackoverflow.com/a/24201249 this worked for me
[09:59:46] <AdamPDotty> ah, so you are concerned about the time the image takes to load?
[10:20:18] <hlve> Dolphils OL coach resigns after video surfaces of him snorting powdered substance
[10:20:24] <hlve> Dolphins
[10:20:25] <hlve> rather
[10:20:25] <hlve> lol
[10:20:55] <hlve> er
[10:20:57] <hlve> wrong channel
[10:20:59] <hlve> holy shit I'm sorry.
[10:32:49] <taplar> i thought that was the quickest way to take asprine
[12:47:34] <robertmaxrees> gooooooooood morning #jquery
[12:47:47] <taplar> yo
[12:48:28] <robertmaxrees> how goes?
[12:48:46] <taplar> so so, you?
[12:48:59] <robertmaxrees> about the same hahaha
[13:25:59] <taplar> someone killed all the guests it seems
[14:20:50] <Al_nz1> Hi guys
[14:21:09] <taplar> yo
[14:22:31] <Al_nz1> I am using the Eonasdan date picker ( https://eonasdan.github.io/bootstrap-datetimepicker/Events/ ) and I need to make some descsions about what to display hide at load time. I assume I don't need to use a load event for the picker itself but simply $('.someselector.for.dates').on('load', function() { } would work?
[14:32:13] <taplar> when you say 'at load time', what is being loaded?  the page, or the date picker?
[14:36:54] <Al_nz1> taplar: the page
[14:37:36] <taplar> so you could either make a load event binding on the page, or you could stick a call to your logic at the bottom of the page
[14:38:22] <Al_nz1> load event like $('.someselector.for.dates').on('load', function() { } ?
[14:38:29] <taplar> on the page
[14:38:40] <taplar> $(document).on('load', ...
[14:38:50] <Al_nz1> ok.
[14:39:42] <Al_nz1> i try it
[15:07:07] <Al_nz1> if I need something to be loaded first - where should I put it?
[15:07:19] <Al_nz1> I have an array that I think is undefined because its not being loaded at the right time
[15:07:40] <taplar> where is the array being loaded from?
[15:08:53] <Al_nz1> the array is hardcoded
[15:08:56] <Al_nz1> in the javascript
[15:09:08] <taplar> so it's not being 'loaded'
[15:09:29] <taplar> it'll be there once the logic that contains it is ran
[15:11:53] <Al_nz1> moving it from above the function that calls it to the first lline after doc ready seemed to fix it
[15:12:29] <jcrawford> hey everyone, I need to find an a element by data attribute so i have $('.channel').find("[data-channel-slug='" + room + "']") which gives me the proper element.  However I then need to get the span (child) with a class of badge.  I am trying to update the value of the badge.  I cannot seem to get at the span only the a element when using find, any suggestions how i can accomplish this?
[15:13:08] <taplar> $('.channel').find("[data-channel-slug='" + room + "']").find('.badge') ?
[15:13:21] <jcrawford> ah i can chain find :) thanks
[15:13:30] <taplar> spans don't have values though
[15:13:45] <Al_nz1> taplar: should that $(document).on('load', ... be inside doc ready or outside?
[15:13:51] <taplar> outside
[15:13:59] <jcrawford> they have text() though :)
[15:14:12] <taplar> yup
[15:14:48] <taplar> Al_nz1: question though, why do you care if it happens on load?
[15:15:17] <taplar> why must it wait for all images and videos and such to load before running?
[15:16:50] <jcrawford> seems chaining didn't work but this worked for me: $(".channel[data-channel-slug='" + room + "'] .badge")
[15:16:52] <jcrawford> thanks
[15:17:12] <taplar> oh
[15:17:15] <taplar> cause find() is children
[15:17:28] <taplar> $('.channel').filter("[data-channel-slug='" + room + "']").find('.badge')
[15:17:36] <taplar> the data element is on the channel, not a child
[15:17:38] <Al_nz1> taplar: well $(document).on('load', function() { console.log('load event'); } <- cant get this to print to console atm
[15:17:50] <taplar> Al_nz1: that's not an answer to my question
[15:19:11] <Al_nz1> I want to show/hide something to stop it being presented to the user, I thought it was best done at page load
[15:19:46] <taplar> ok, so do you understand what the 'load' event signifies?
[15:19:52] <taplar> vs what a document ready does
[15:20:05] <Al_nz1> the page being loaded? document ready is after its loaded?
[15:20:09] <taplar> no
[15:22:17] <taplar> so there are various 'loads' for a page
[15:22:44] <taplar> document ready will execute once the markup of the page has been "loaded" into the DOM
[15:23:21] <taplar> a 'load' event, however, only happens once all resources for the page have been loaded.  this includes things like the images, and videos.
[15:23:43] <taplar> so by saying your logic must wait for the 'load' event, you are saying it depends on those things to have been loaded
[15:23:49] <taplar> which is what i am questioning
[15:23:54] <Al_nz1> where does js files and things like moment.js fit in?
[15:24:10] <Al_nz1> that are loaded from CDN's?
[15:24:12] <taplar> those will be downloaded before the document ready happens
[15:24:24] <taplar> the DOM will not be complete until those are retrieved
[15:24:41] <Al_nz1> so doc ready is first, doc load later?
[15:24:44] <taplar> yes
[15:24:46] <MassDebates> well
[15:24:47] <taplar> typically
[15:25:01] <MassDebates> There's exceptions to that, no?
[15:25:05] <taplar> sure
[15:25:16] <MassDebates> okay.
[15:29:38] <taplar> async script loading may also be an exception to that as well
[15:30:28] <Al_nz1> so, if I have a event like $('.someselector').on('load', callsomefunction());
[15:30:41] <taplar> is an error
[15:30:59] <taplar> the () on the callsomefunction will make it be invoked immediately
[15:31:13] <Al_nz1> and then function callsomefunction() { uses this } does 'this' still get 'passed' ?
[15:31:18] <taplar> and the load event will be bound with the result of that method, not the method itself
[15:31:18] <Al_nz1> oh - take out the ()
[15:31:55] <taplar> but again, taking into account what i said about what 'load' means, is it necessary to wait for the load event?
[15:32:14] <taplar> can you not perform this logic in the document ready?  which is seems you already have one
[15:32:22] <taplar> r/is/it/
[15:32:33] * taplar eyes Uhkis
[15:33:11] <Al_nz1> it is in doc ready
[15:33:33] <taplar> so why do you need the load binding?
[15:33:57] <Al_nz1> with the benefit of what you told me i dont
[15:33:58] <taplar> what about your logic needs to wait on images and videos and such?
[15:34:39] <taplar> so yay
[15:34:42] <taplar> :)
[15:35:01] <Al_nz1> but now I have two events (one fired by doc ready, and one on a picker change) that both need to use a function, so I have defined the function seperatly so they can both call it.
[15:35:17] <Al_nz1> but the function being called uses $(this)
[15:35:51] <taplar> uhhh, can you make a fiddle or pastie of what you're doing?
[15:35:57] <Al_nz1> yeah sure
[15:38:16] <Al_nz1> taplar: would it be sufficent to just see the code?
[15:38:29] <taplar> sure
[15:38:36] <robertmaxrees> s'why he asked for a fiddle or a paste ;)
[15:38:57] <Al_nz1> i meant without all the html as well
[15:39:13] <Al_nz1> https://jsfiddle.net/bigalnz/curv89hr/
[15:39:17] <Al_nz1> thats just the js
[15:40:05] <taplar> so, what were you talking about with the two events?
[15:41:32] <taplar> btw, the way you are invoking the method on line 5, 'this' inside that method will be the Window
[15:41:59] <Al_nz2> soz, back
[15:42:09] <taplar> so, what were you talking about with the two events?
[15:42:11] <taplar> btw, the way you are invoking the method on line 5, 'this' inside that method will be the Window
[15:42:36] <robertmaxrees> and what's with your thing about the two handlers calling the same function?
[15:43:59] <Al_nz2> ok, let me try to explain this without using the word load. the showChildRisk funciton needs to run when the user first sees the page to decide what to show/hide (if the page has existing data on it) - the show/hide also needs to run whenever a date field is changed
[15:44:25] <copyjosh> Using a selector like this, $('#accordion > .card > .collapse').on(...) .. my understanding is that it should just be selecting the <div#accordion><div#card><div#collapse> .. but it's also hitting other <div#collapse> elements that are great-great-etc-grandchildren of that initial collapse element.. how do I avoid that?
[15:44:41] <Al_nz2> so it runs showChildRisk() at the top of doc ready - there is also the dp.change event
[15:44:57] <taplar> Al_nz2: ok, so first off.  the showChildRisk appears to be written assuming the 'this' references some element on the page
[15:45:13] <robertmaxrees> copyjosh you mean div.car > div.collapse?
[15:45:19] <Al_nz2> taplar: well when it was an anonymous function that worked
[15:45:27] <taplar> but calling showChildRisk() does not bind 'this' to anything
[15:45:28] <robertmaxrees> copyjosh and yeah, those work like CSS.  you can chain .children() calls instead.
[15:45:31] <Al_nz2> as it was part of the dp.change event
[15:45:51] <Al_nz2> taplar: right - so how to deal with this
[15:46:05] <taplar> personally, i'd probably just trigger a 'dp.change' event
[15:46:26] <Al_nz2> taplar: you mean when the user first sees the page?
[15:46:29] <taplar> $('.form-control.dob.person').on('dp.change', showChildRisk).trigger('dp.change');
[15:46:46] <taplar> it adds the binding, and then dummy creates an event to force it to execute once
[15:46:47] <Al_nz2> i see
[15:46:47] <copyjosh> robertmaxrees: yeah, like div.card > div.collapse.. i'll look at children.. I may have to post the code out in a moment because my page is not "just" selecting the first .collapse child element.. but descendents that share that .collapse class as well
[15:46:54] <robertmaxrees> Al_nz2 is there more than one .form-control.dob.person on the page?
[15:47:00] <Al_nz2> taplar: yeah I get it
[15:47:07] <Al_nz2> robertmaxrees: yes there it
[15:47:08] <Al_nz2> is
[15:47:28] <robertmaxrees> copyjosh right - if you chain .children() calls it'll get the child that matches that, but it would nneed to be a direct descendent.
[15:47:58] <Al_nz2> taplar: so when the user first sees the page it needs to be each
[15:48:08] <taplar> right
[15:48:13] <Al_nz2> taplar: when the event fires it just wants to check that date picker
[15:48:22] <taplar> yup
[15:48:36] <Al_nz2> taplar: but the trigger doesn't do a each
[15:48:37] <Al_nz2> ?
[15:48:40] <taplar> it does
[15:49:13] <taplar> unless stated otherwise, $().method will typically perform the method upon the entire result stack of the $() object
[15:49:37] <robertmaxrees> except that $(this) in a handler is the element that triggered the event,.
[15:50:12] <taplar> are you saying the trigger() wouldn't set that?
[15:50:44] <robertmaxrees> trigger would.  just making sure that it's understoond that .on() only reacts to the specific element that triggered the event.
[15:51:04] <taplar> gotcha
[15:51:09] <robertmaxrees> which means that .on() implicitly doesn't really do an .each()  .trigger() would fire that handler on many elements.
[15:51:16] <taplar> right
[15:51:34] <taplar> well, on() does though, if your $() before hand had many elements
[15:51:42] <taplar> it'd put the event handler on each of them
[15:51:48] <robertmaxrees> sure - it binds to many events.
[15:51:51] <robertmaxrees> err, elements.
[15:51:57] <robertmaxrees> but the handler only fires for the one.
[15:52:48] <Al_nz2> I have another issue, it shows html if if finds age under 17, but then hides it again if it finds an age over 17
[15:53:02] <Al_nz2> I either need to track a counter
[15:53:07] <Al_nz2> or break out of that loop
[15:53:15] <Al_nz2> if it finds a under 17
[15:54:15] <taplar> i would suggest a filter on the elements then
[15:54:48] <Al_nz2> hmmmm
[15:55:12] <taplar> and a part of me would kinda suggest breaking that out of that method too
[15:55:15] <taplar> and making it it's own thing
[15:55:40] <taplar> since that logic doesn't depend on one individual element
[15:56:10] <robertmaxrees> ^^^
[15:57:05] <Al_nz2> something like $('.selector').filter(function() { a function that returns????? }
[15:57:10] <kim366> Why does $('.dropdown.student') give me a javascript object, but $('.dropdown.student')[0] gives me raw html?
[15:57:25] <taplar> cause jQuery object are array like objects
[15:57:31] <robertmaxrees> kim366 because the first returns a jquery object, the second one the raw dom node
[15:57:34] <taplar> and [#] will return the element at that position
[15:57:45] <kim366> Why does it? Isn't the jquery object an array?
[15:57:48] <robertmaxrees> nope.
[15:57:49] <taplar> no
[15:58:03] <kim366> How do I get the individual ones then? .each is not working for me
[15:58:10] <taplar> eq(#)
[15:58:19] <robertmaxrees> erm.
[15:58:27] <taplar> if you mean get one and retain it as a jquery object
[15:58:30] <robertmaxrees> do you want each element as a jquery object?
[15:58:33] <kim366> Because .each gives me an even different thing that does not have a .children for example
[15:58:41] <robertmaxrees> kim366 are you using 'this'?
[15:58:55] <kim366> I want to iterate over both and get the children of both and handle them individually
[15:59:04] <kim366> I am. Wait a sec, I'll give you the code
[15:59:09] <taplar> 'both'?
[15:59:18] <Al_nz2> $('.selector').filter(function() { return ((moment().diff(moment($(this).val(), 'DD/MM/YYYY'), 'years')<17) }
[15:59:26] <Al_nz2> that would return true for only the people under 17
[15:59:34] <taplar> looks like it
[15:59:52] <Al_nz2> so if that selector .length > 0 then there is someone under 17?
[15:59:56] <taplar> yup
[16:00:00] <kim366> https://hastebin.com/ovawafeloh.js
[16:00:18] <robertmaxrees> kim366 you want functionm
[16:00:20] <robertmaxrees> not a fat arrow.
[16:00:26] <taplar> heh
[16:00:26] <kim366> And the top console.log gives me a completely different thign
[16:00:30] <robertmaxrees> fat arrows can't be bound, so your 'this' is the wrtong thing.
[16:00:32] <robertmaxrees> brb
[16:00:41] <kim366> That's the same thing, isn't it?
[16:00:47] <taplar> no
[16:00:48] <kim366> Ohhh
[16:00:51] <kim366> Interesting
[16:00:59] <taplar> the whole purpose of => is to not change 'this'
[16:01:04] <kim366> I once changed it to function and I got something else
[16:01:09] <kim366> Oh, I see
[16:01:19] <kim366> I thought it was just shorter syntax for the same thing
[16:01:23] <taplar> nope
[16:01:25] <taplar> :)
[16:01:39] <robertmaxrees> heh
[16:01:40] <kim366> 'fat arrow' is a funny way of calling it :)
[16:01:52] <taplar> -> skinny arrow
[16:01:56] <robertmaxrees> or just "arrow function"
[16:02:00] <robertmaxrees> either or.
[16:02:08] <kim366> Yeah, the latter is how I know it.
[16:02:32] <kim366> I must say, this channel is a lot nicer and more active than #node.js, even though there are half as many users here
[16:02:37] <robertmaxrees> heh
[16:02:39] <robertmaxrees> we try to be.
[16:02:57] <kim366> Yay, it's working!
[16:03:17] <Al_nz2> Stink , its not working!
[16:03:17] <kim366> Could someone explain to me the difference between a javascript object and a jquery object?
[16:03:28] <robertmaxrees> kim366 jquery objects are javascript objects.
[16:03:41] <kim366> Ok, why do you call them differently, then?
[16:03:42] <robertmaxrees> but jquery objects get a bunch of special methods.
[16:03:47] <kim366> Alright, I see
[16:03:50] <robertmaxrees> like ,each and .on
[16:03:54] <kim366> Ok
[16:04:58] <kim366> Now comes the hardest part about programming: naming a variable
[16:05:02] <robertmaxrees> hahaha
[16:05:08] <taplar> what's it store?
[16:05:09] <kim366> At 10pm when I have no creativity left
[16:05:23] <kim366> That's the thing, I don't know how to put it :)
[16:05:33] <taplar> bigger issue right there
[16:05:36] <robertmaxrees> sounds like it needs abstraction ;)
[16:05:58] <kim366> The id of another element I'm referencing
[16:06:00] <Al_nz2> console.log('age filter length : ' +$('.selector').filter(function() { return ((moment().diff(moment($(this).val(), 'DD/MM/YYYY'), 'years'))<17) })); <- prints [Object object] to the console
[16:06:09] <taplar> what is that other element?
[16:06:37] <taplar> Al_nz2: right, you're not doing .length or whatever so it's a jQuery object
[16:06:50] <Al_nz2> return statement should return a True False?
[16:06:57] <taplar> objects are truthy
[16:07:00] <Al_nz2> because of the test <17 ?
[16:07:04] <taplar> you have to do the length check
[16:07:10] <taplar> for a jquery object that is
[16:07:35] <Al_nz2> well its always returning 0 with length, even though I am printing ages 17 and 19 to console
[16:07:59] <taplar> so you gotta figure out what's wrong with that statement
[16:08:10] <taplar> either the selector is wrong, or the filter is wrong
[16:08:22] <taplar> step by step, rule things out
[16:08:34] <robertmaxrees> you can console log inside the filter.
[16:08:44] <kim366> Another dropdown. 'classDropdownId' is what it ended up as currently
[16:08:49] <Al_nz2> surely : return ((moment().diff(moment($(this).val(), 'DD/MM/YYYY'), 'years'))<17) returns a T/F ?
[16:08:53] <Al_nz2> as its a test
[16:08:56] <taplar> what is a classDropdown?
[16:09:01] <kim366> But class is confusing, since this is about a student class
[16:09:13] <taplar> take off your developer hat for a second, and think like a user
[16:09:18] <taplar> what are these things?
[16:09:22] <kim366> It's a dropdown in which you select a school class :)
[16:09:32] <taplar> so it's a class id?
[16:09:37] <kim366> :D
[16:09:38] <kim366> Yes
[16:09:41] <taplar> so there ya go
[16:10:07] <Al_nz2> sorry guys, I dont know where to from here to debug this line
[16:10:14] <Al_nz2> you said console.log inside filter?
[16:11:36] <kim366> What even is `this` in JS? It is quite different from C++/Java, isn't it?
[16:11:58] <taplar> there is 'this' in java
[16:12:13] <taplar> but it's different in js, yes
[16:12:26] <taplar> 'this' typically references the context of the method
[16:12:36] <taplar> but it doesn't have to be, as it can be modified logically
[16:13:00] <Al_nz2> I tried to print to console in the filter like so : https://jsfiddle.net/bigalnz/3kfyq214/
[16:13:02] <kim366> Ok. I myself could modify 'this'?
[16:13:02] <Al_nz2> but nothing prints
[16:13:10] <taplar> kim366: sure
[16:13:18] <kim366> Ok
[16:14:13] <kim366> Also, it actually was a class, I confused it with another id. So now it's called 'classDropdownClass' :P
[16:14:22] <taplar> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind
[16:14:35] <taplar> there's also the call() and apply() methods that can set the 'this' iirc
[16:15:26] <kim366> Ok, thanks for the link
[16:15:46] <taplar> Al_nz2: nothing at all prints?
[16:18:53] <kim366> If I want to select <div class="myClass" id="myId"></div>, do I do $(.myClass#myId)?
[16:19:09] <taplar> just use the id
[16:19:14] <taplar> id's can't be repeated
[16:19:20] <kim366> But then it's ambiguous
[16:19:26] <taplar> ?
[16:19:28] <kim366> Oh, they can't?
[16:19:30] <kim366> That's bad
[16:19:31] <taplar> no
[16:19:32] <taplar> lol
[16:19:34] <taplar> they're ids
[16:19:40] <taplar> like driver's licenses, ;)
[16:19:42] <kim366> Yeah, alright
[16:20:04] <Al_nz2> taplar: https://jsfiddle.net/bigalnz/3kfyq214/1/ - the console.log('age') prints 13, 19 and NaN. the second console.log prints Object object. The third one doesntprint anything
[16:20:34] <kim366> But when I want to select an element that has two classes, I do $(.classOne.classTwo), right?
[16:20:50] <taplar> yep
[16:20:56] <kim366> O
[16:20:57] <kim366> k
[16:21:47] <taplar> Al_nz2: first off, take care of that NaN.  Sounds like one of them doesn't have a value
[16:22:01] <Al_nz2> taplar: one of them doesnt - correct
[16:22:10] <taplar> so you should handle for that case
[16:22:25] <Al_nz2> put the handler in where?
[16:22:41] <Al_nz2> after age calc
[16:22:49] <taplar> how should one of the inputs not having a value affect your logic?
[16:23:15] <Al_nz2> if (age===number) {continue
[16:23:39] <taplar> so, if the value is not set you want to ignore it?
[16:23:45] <Al_nz2> age!=isNaN ?
[16:23:58] <Al_nz2> taplar: yes sometimes there will be no date
[16:23:59] <taplar> nothing === NaN
[16:24:55] <Al_nz2> soo, typeof ?
[16:25:00] <taplar> https://jsfiddle.net/3kfyq214/2/  one option
[16:36:16] <kim366> I have a string and I would like to get the value of an object, of which the key is the string. How do I do that?
[16:36:24] <kim366> myObject.myString seems incorrect
[16:36:55] <kim366> Oh, it's myObject[myString], isn't it?
[16:37:34] <Al_nz1> ok nice,that trim statement works
[16:37:46] <kim366> Ok, it works
[16:37:46] <Al_nz1> now I just need to sort out that filter
[16:38:22] <taplar> kim366: ya, you can use array notation on objects
[16:39:01] <Al_nz1> taplar: still not printing 'something : ' even to console though : https://jsfiddle.net/bigalnz/3kfyq214/3/
[16:39:42] <taplar> "$('.selector')" is that accurate?
[16:39:51] <taplar> you put the class of 'selector' on things?
[16:40:21] <Al_nz1> taplar: wait Im a dork
[16:40:27] <Al_nz1> taplar: yes spotted that too
[16:40:41] <taplar> :|
[16:41:03] <Al_nz1> it should this
[16:41:10] <Al_nz1> should be this?
[16:41:18] <kim366> Can I define a function like this: function myFunction() within a function or only with the = function() syntax?
[16:41:40] <taplar> function(){} is an anonymous function
[16:41:51] <taplar> which can be put in a variable if you choose
[16:41:57] <kim366> Yeah, but I want it non-anonymously
[16:42:06] <taplar> so name it or put it in a variable
[16:42:14] <kim366> Yeah, but is the first notation avaliable also?
[16:42:18] <kim366> ok
[16:42:32] <taplar> function mymethod () {}
[16:42:36] <taplar> var mymethod = function(){}
[16:42:38] <taplar> either one
[16:42:42] <kim366> I thought there would be some js magic, but it's the same like in C++
[16:42:52] <kim366> But the first is not possible within another function, is it?
[16:42:56] <taplar> oh yeah
[16:43:07] <taplar> js don't ker
[16:43:17] <Al_nz2> sorry internet here is rubbihs
[16:43:20] <Al_nz2> rubbish
[16:43:33] <Al_nz2> ok, now I am returning ages inside the filter
[16:43:45] <Al_nz2> but the test against 17 is always false
[16:43:45] <Al_nz2> sigh
[16:44:27] <taplar> so what are the left sides of the argument?
[16:44:54] <Al_nz2> console.log('something : '+(moment().diff(moment($(this).val(), 'DD/MM/YYYY'), 'years'))<17 ); <- always returns false
[16:45:03] <taplar> take off the < 17
[16:45:07] <taplar> what does it pring
[16:45:09] <taplar> print
[16:45:30] <Al_nz2> something : 13
[16:45:33] <Al_nz2> something : 19
[16:46:05] <taplar> so the 13 should result in true
[16:46:10] <Al_nz2> exactly
[16:46:17] <kim366> Thanks for all the help! Turned out to be easier than I expected
[16:46:34] <taplar> kim366: np
[16:47:09] <taplar> Al_nz2: put "typeof" in front of the second part
[16:47:39] <Al_nz2> undefined
[16:47:54] <taplar> where did you put it?
[16:47:58] <Al_nz2> console.log('something : '+(moment().diff(moment($(this).val(), 'DD/MM/YYYY'), 'years')).typeof );
[16:48:05] <Al_nz2> in front
[16:48:17] <taplar> uh, read what i said again
[16:48:28] <Al_nz2> console.log('something : '+(typeof.moment().diff(moment($(this).val(), 'DD/MM/YYYY'), 'years')) );
[16:48:30] <Al_nz2> like that?
[16:48:36] <taplar> no period
[16:48:50] <taplar> typeof moment(). ...
[16:49:01] <kim366> I forgot how awesome the js console was, so I always put in code and refresed, but I could've just played around with the syntax in the console
[16:49:26] <Al_nz2> taplar: undefined
[16:49:27] <taplar> kim366: oh sure.  and how familiar with js debugging are you?
[16:49:46] <taplar> console.log('something : '+ typeof (moment().diff(moment($(this).val(), 'DD/MM/YYYY'), 'years')) );
[16:49:47] <taplar> ?
[16:49:55] <Al_nz2> taplar: sorry I take that back. its number
[16:49:58] <taplar> k
[16:49:59] <kim366> Not at all. Apparently there's nice ides, but I've not looked into them yet. console.log is enough for me currenly :)
[16:50:12] <taplar> kim366: you don't really need an ide
[16:50:24] <taplar> give this side a gander when you get a chance.  fixingthesejquery.com
[16:50:29] <kim366> Ok, what tools are there, then?
[16:50:30] <taplar> *site
[16:50:37] <taplar> just your browser, :)
[16:51:14] <kim366> Does the browser support breakpoints too?
[16:51:19] <taplar> yep
[16:51:30] <taplar> chrome, firefox do
[16:51:32] <taplar> not sure about ie
[16:51:52] <kim366> Oh, plugins, I see
[16:52:09] <taplar> you don't have to use a plugin
[16:52:32] <kim366> Yeah, just noticed. I thought those funky names were plugins, but they were just the built-in developer tools :)
[16:52:58] <kim366> Ok, gotta go now; school's tomorrow.
[16:52:59] <kim366> gn
[16:53:06] <taplar> l8r man
[16:53:36] <taplar> Al_nz2: if that is printing number then I'm not sure why you are seeing a false
[16:55:09] <kim366> I find it interesting how I have not had to use classes yet, and my code still looks clean
[16:56:03] <taplar> all things in their own time and place, :)
[16:58:21] <poboy> So this code works (click on the shield and a menu appears) but is there a way to make the code less ugly?  https://jsfiddle.net/qvcg03x1/
[16:58:50] <taplar> poboy: you could put the html in the page as a template
[16:59:09] <poboy> I'm still trying to understand why we need to build somethings in javascript instead of doing it in our php files.  bossman said do this in js so I did...
[16:59:39] <poboy> oh, I see.  just add the stuff inside the anchor tags in JS?
[17:00:22] <taplar> you can put stuff inside a <script type="text/template">...</script> and then your logic can access the html() of that guy
[17:00:30] <taplar> instead of having it inside your *.js
[17:03:02] <Al_nz2> taplar: i will take another look
[17:03:19] <poboy> thanks taplar
[17:05:32] <Al_nz2> taplar: ok I am getting true and false now
[17:05:34] <Al_nz2> https://jsfiddle.net/bigalnz/3kfyq214/4/
[17:05:41] <Al_nz2> need to put in length
[17:06:18] <taplar> awesome
[17:07:20] <Al_nz2> ok, so that length statement is working
[17:08:14] <Al_nz2> so I need to work out where that statement needs to go in terms of the overall logic
[17:09:14] <taplar> yep, preferably some where that doesn't get re-ran multiple times when it doesn't need to be
[17:09:28] <Al_nz2> well currently I have this:
[17:09:55] <Al_nz2> https://jsfiddle.net/bigalnz/3kfyq214/6/
[17:10:21] <taplar> yeah you don't want it in that method
[17:10:33] <Al_nz2> so the $('select').filter needs to go outside the function in doc ready?
[17:10:46] <taplar> i would think so
[17:11:02] <taplar> are you going to want to run that when any of the elements change?
[17:11:27] <Al_nz2> whenever a date of birth picker changes, and when the document is first displayed to user
[17:11:51] <Al_nz2> save the result to a var for use in other places?
[17:15:33] <taplar> wait, why are you filtering on 'this' in that method?
[17:16:26] <Al_nz2> yeah, change it to '.selectpicker.dob'
[17:17:19] <Al_nz2> ahh, im soo los
[17:17:21] <Al_nz2> lost
[17:18:09] <Al_nz2> I have this in doc ready : https://jsfiddle.net/bigalnz/3kfyq214/7/
[17:19:31] <taplar> something like this perhaps: https://jsfiddle.net/3kfyq214/8/
[17:19:50] <gambl0re> hello?
[17:20:00] <taplar> aloha
[17:20:10] <gambl0re> where's robert
[17:20:24] <taplar> dunno
[17:22:14] <Al_nz2> taplar: thats probably really elegant, but I dont follow it
[17:22:18] <Al_nz2> its too complex
[17:22:36] <taplar> which part confuses you?
[17:22:59] <Al_nz2> taplar: I am trying to following all the functions and what calls what
[17:24:15] <taplar> if you have a question about something, just ask
[17:24:30] <taplar> it's all good
[17:25:28] <Al_nz2> when is showChildRisk ever called?
[17:25:42] <Al_nz2> oh on dp.change
[17:25:55] <Al_nz2> so wait
[17:26:13] <taplar> it gets called after the binding of the db.change
[17:26:14] <Al_nz2> filterDateOfBirth() <- when is that called? Once during doc ready?
[17:26:20] <taplar> ^ yes
[17:26:30] <taplar> and inside the handler, provided that the conditional is true
[17:26:54] <Al_nz2> yeah I am forgetting about that skip option at the moment
[17:32:12] <Al_nz2> can you have (some condition returning value ) < 17 && > 4
[17:32:17] <Al_nz2> in that syntax?
[17:32:31] <taplar> no, you have to do them one at a taime
[17:32:32] <taplar> time
[17:33:03] <Al_nz2> bugger
[17:34:17] <Al_nz2> like : https://jsfiddle.net/bigalnz/3kfyq214/9/
[17:34:35] <taplar> no, store it in a variable and use that variable
[17:36:11] <Al_nz2> https://jsfiddle.net/bigalnz/3kfyq214/10/ ?
[17:36:38] <taplar> yep
[17:38:01] <Al_nz2> ok that works good
[17:39:29] <Al_nz2> so from the top I have : https://jsfiddle.net/bigalnz/3kfyq214/11/
[17:40:04] <Al_nz2> i guess I need to add that second trigger
[17:40:11] <Al_nz2> oh wait thats already there
[17:40:18] <taplar> uh, why did you take that out of the method i setup?
[17:40:44] <Al_nz2> take what out?
[17:41:02] <taplar> https://jsfiddle.net/3kfyq214/8/
[17:41:09] <taplar> you completely removed all of those changes
[17:41:35] <Al_nz2> yes, but I understand and can follow it the way I did it
[17:41:43] <Al_nz2> even if parts of it arent so elegant
[17:41:48] <taplar> which is why i said to ask if you don't understand something
[17:41:50] <Al_nz2> but I did grab parts of your code
[17:41:55] <taplar> there's a reason it's doing it like that
[17:42:16] <Al_nz2> why do I need a function for the filter?
[17:42:26] <taplar> because you are performing the same logic in two places
[17:42:35] <taplar> on load and any time one changes
[17:42:39] <taplar> you don't repeat logic
[17:42:45] <taplar> you reuse logic
[17:43:41] <Al_nz2> ok, so I can wrap both my var childpresent, var schoolpresent in a function?
[17:43:48] <taplar> yes
[17:44:05] <taplar> and -should-
[17:45:25] <Al_nz2> so step 1 : https://jsfiddle.net/bigalnz/3kfyq214/12/
[17:45:28] <Al_nz2> ok?
[17:46:06] <taplar> sure
[17:46:43] <Al_nz2> dont those vars need to be decalred outside the function otherwise they go out of scope?
[17:47:10] <taplar> why do they need to be outside?
[17:49:05] <Al_nz2> because I refer to them elsewhere - isnt there lifecycle only limited inside the filter function?
[17:49:51] <taplar> right now they are, which is why i'm asking why you need them outside the method
[17:50:08] <taplar> you're going to find them, see if any are of a certain age, and if so, change the thing to show/hide or whatever you were doing
[17:50:10] <Al_nz2> because I use them in showChildRisk
[17:50:12] <taplar> all that can be done in that method
[17:50:16] <taplar> ???
[17:50:32] <taplar> no
[17:50:34] <Al_nz2> https://jsfiddle.net/bigalnz/3kfyq214/11/
[17:50:36] <taplar> that part will go in that method
[17:50:50] <Al_nz2> huh?
[17:51:17] <taplar> https://jsfiddle.net/3kfyq214/13/
[17:51:27] <Al_nz2> i need childrenPresent and schoolPresent in showChildRisk
[17:51:28] <taplar> there's no reason not to do it in that method
[17:51:31] <taplar> why?
[17:51:36] <Al_nz2> not to do what in what method?
[17:51:43] <taplar> look at that fiddle
[17:51:48] <Al_nz2> which fiddle
[17:52:00] <taplar> . /13
[17:53:38] <Al_nz2> right so you moved up the show and the hide into the filter function?
[17:54:43] <taplar> yes
[17:54:54] <taplar> cause all the work to do the show/hide can be done in there
[17:55:21] <taplar> all showChildRisk has to do is conditionally call that method
[17:55:45] <Al_nz2> right, but then I am stuck with the school age show hide, because that refers to the this.nearest school
[17:56:50] <Al_nz2> arrrgh, im lost again
[17:56:56] <Al_nz2> when is the filter function called?
[17:57:33] <Al_nz2> because now the .on('dp.change' only calls showChildRisk() function - filter function is never explicitly called except on load
[17:57:48] <Al_nz2> or except on doc ready rather
[17:59:18] <Al_nz2> taplar ?
[17:59:22] <taplar> if you look back at /8 you'll see where i had it inside the showChildRisk
[18:03:23] <Al_nz2> hmm,ok
[18:03:31] <Al_nz2> one question left (I think)
[18:04:38] <Al_nz2> taplar: line 5 of your /8 you have trigger - which calls showChildRisk?
[18:04:49] <Al_nz2> on doc ready right?
[18:05:07] <taplar> yes
[18:05:08] <Al_nz2> but then on line 6 you call it again on doc ready?
[18:05:13] <Al_nz2> why twice?
[18:05:48] <taplar> line 5 binds the handler and triggers it, but provides additional options so it will know to skip it
[18:05:58] <taplar> then line 6 calls it for the initial execution
[18:06:15] <taplar> the additional options are for line 21 to skip it
[18:06:32] <taplar> because if you are triggering the event, and there are 50 of those guys, it will do it 50 times
[18:06:35] <taplar> you don't want that
[18:07:08] <taplar> by skipping it the first time, you let it do it once by line 6 on load
[18:07:23] <taplar> then, later, when the user changes one element at a time, it will re-do it, for each of those
[18:08:02] <Al_nz2> arrgh, this is so hard to follow
[18:08:12] <taplar> what's confusing you?
[18:08:17] <Al_nz2> what you just said
[18:08:22] <taplar> so ask about it
[18:08:30] <taplar> heh, i can't make it clear if you don't ask, :)
[18:08:32] <Al_nz2> the trigger calls it on load
[18:08:36] <taplar> yes
[18:08:41] <taplar> for each element
[18:08:47] <Al_nz2> I dont get how its any differnet to line 6 which calls it again
[18:09:00] <taplar> because you are triggering the event on -all- of your elements
[18:09:08] <taplar> 16 elements, your handler happens 16 times
[18:09:08] <Al_nz2> when am I triggering on all?
[18:09:20] <taplar> $().trigger() happens on all elements inside the $()
[18:10:09] <Al_nz2> so why not forget trigger and just have filter() as per line 6
[18:10:21] <taplar> cause it's an event binding that is setting up logic for events later
[18:10:41] <taplar> you're saying -when- this event happens, not now, but later, do this logic
[18:11:02] <taplar> BUT, we are using trigger to make it go through that logic at the start so we don't have to write a separate peice to do the same thing
[18:11:02] <Al_nz2> when am I saying that
[18:11:10] <taplar> that's what on() does
[18:11:27] <taplar> $people.on('dp.change', showChildRisk)
[18:11:36] <Al_nz2> this shouldnt be so hard. when form loads I need to check all the dates of birth
[18:11:40] <taplar> for all the people, when the 'dp.change' event happens, do showChildRisk
[18:11:50] <taplar> that's what that logic is doing
[18:11:51] <Al_nz2> when a particular date of birth changes I need to check just it
[18:11:59] <taplar> that's what you are doing
[18:12:15] <Al_nz2> taplar: but I dont understand, why trigger and filter() are both needed
[18:12:36] <taplar> one at a time.  you don't understand why trigger?
[18:13:03] <Al_nz2> taplar: i dont understand how trigger is different to filter()
[18:13:07] <Al_nz2> lin 5 vs 6
[18:13:24] <taplar> trigger creates an event and sends it to be processed for the elements
[18:13:30] <taplar> filter() is a method off of a result set
[18:13:35] <taplar> entirely different operations
[18:14:02] <Al_nz2> didnt understand any of what you just said
[18:14:06] <taplar> http://api.jquery.com/trigger/
[18:14:16] <taplar> http://api.jquery.com/filter/
[18:14:27] <Al_nz2> trigger('.dp.change') calls showChildRisk right?
[18:14:36] <Al_nz2> and it calls it when doc ready is run
[18:14:41] <taplar> only because that's what you have setup in the on()
[18:14:45] <taplar> no
[18:14:52] <taplar> doc ready does not call the showChildRisk
[18:15:06] <taplar> the trigger() is what is causing showChildRisk to execute
[18:15:07] <Al_nz2> no,trigger calls the change which calls showChildRisk?
[18:15:14] <taplar> yes
[18:15:32] <Al_nz2> and that trigger (of showChildRisk) runs when doc is ready
[18:15:37] <taplar> yes
[18:16:03] <grapheti> that method should be BANNED
[18:16:05] <Al_nz2> and that showChildRisk calls filter()
[18:16:07] <grapheti> TRIGGER!
[18:16:24] <taplar> Al_nz2: not with how we will have it setup with the options to skip it
[18:16:36] <taplar> because, like i said, you only want it to happen once on load
[18:16:55] <taplar> the filter that is
[18:17:14] <taplar> performing it more than once on load would be redundant
[18:18:05] <Al_nz2> so, lemme check this then. trigger results in the execution of showChildRisk and doc ready but doesnt allow showChildRisk to call filter()
[18:18:23] <Al_nz2> I mean
[18:18:30] <Al_nz2> so, lemme check this then. trigger results in the execution of showChildRisk at doc ready but doesnt allow showChildRisk to call filter()
[18:18:37] <taplar> correct
[18:18:48] <Al_nz2> then the next line does run filter() ?
[18:18:52] <taplar> as it was in /8, yes
[18:18:58] <taplar> yes, line 6 runs it
[18:19:16] <Al_nz2> so why didnt we let filter() run when it would have been called in the line abobe
[18:19:19] <Al_nz2> above
[18:19:31] <taplar> because you only want it to run once
[18:19:48] <Al_nz2> no i need it to run once on trigger
[18:19:54] <taplar> dude
[18:19:59] <Al_nz2> oh you mean it already run on doc ready
[18:20:05] <taplar> yes
[18:20:10] <Al_nz2> then it runs again in trigger but hasnt cheaged from the first doc ready
[18:20:44] <taplar> which the trigger logic will run for each $('.form-control.dob.person') that you have on your page
[18:20:50] <taplar> which i assume is > 1
[18:21:34] <Al_nz2> ok, so at worst without using that option that you setup I run it twice?
[18:21:51] <taplar> on load you run it the number of $('.form-control.dob.person') you have
[18:22:21] <Al_nz2> yes
[18:22:26] <taplar> === bad
[18:23:17] <Al_nz2> because the filter takes care of checking each one?
[18:23:25] <taplar> yes
[18:23:36] <taplar> because your logic looks for the existance of things
[18:23:44] <taplar> you can't check the existance by checking only one
[18:24:11] <taplar> which is why your initial issue of seeing it show up or hide oddly was having issues
[18:24:29] <taplar> you were checking each of them, completely ignoring the others
[18:26:23] <Al_nz2> so from the top : https://jsfiddle.net/3kfyq214/14/
[18:27:36] <taplar> shoot
[18:27:54] <Al_nz2> ?
[18:28:09] <taplar> i thought you were getting ready to review the logic
[18:28:25] <taplar> shoot == go ahead
[18:29:21] * taplar wonders if he used that slang subconsciously because we are dealing with a trigger()
[18:29:40] <Al_nz2> bang!
[18:38:02] <Al_nz2> so I have a few other tabs that I show/hide. Is it better to hide default and then show and visa versa or doesnt matter?
[18:38:26] <Al_nz2> At the moment, depending on whats being loaded I find things are shown, then as doc ready complete they are hidden
[18:38:28] <taplar> probably hide by default, to avoid the flash
[18:38:32] <Al_nz2> but you see them for a second
[18:44:00] <Al_nz2> taplar: is the $('[href="#iprisk"]').closest('li').show(); using a class to show/hide?
[18:44:19] <taplar> no, it's using an attribute selector
[18:45:05] <Al_nz2> the source when loaded shows <li class="hide"
[18:45:07] <taplar> which if there is a class or something that you can use instead, i'd recommend using it
[18:45:52] <taplar> show/hide methods change the inline css display property
[18:47:33] <taplar> https://jsfiddle.net/rk18xc84/
[18:56:27] <Al_nz2> taplar: another nightmare!
[18:56:35] <taplar> hmm?
[18:58:29] <Al_nz2> https://jsfiddle.net/3h63t7g6/
[18:58:40] <Al_nz2> it correctly enters the if loop
[18:58:49] <Al_nz2> but doesnt show the li
[18:59:44] <taplar> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match
[18:59:56] <Al_nz2> ahh needs to be closest
[19:00:52] <taplar> result will never be undefined
[19:01:13] <taplar> look at that doc page for what the return value can be
[19:01:20] <Al_nz2> ok
[19:01:32] <Al_nz2> i need some lunch
[19:01:34] <Al_nz2> back soon
[19:01:37] <Al_nz2> thanks for all your help
[19:02:05] <taplar> it's cool.  i'm fixing to head out for the night though
[19:05:04] <Al_nz2> no prob
[19:05:13] <Al_nz2> my frontal lobe is really hurting anyway
[19:05:24] <taplar> heh
[19:09:19] <WhirledPress> I need to select either the "current" section element $("section.current") or if none exists the first section element, $(sections).eq(0); Is there a "preferred way" to handle this?
[19:10:24] <WhirledPress> var curr=$("section.current"); if (curr.length<1) curr=$("section").eq(0);
[19:12:43] <WhirledPress> var curr=$("section").filter(".current",":first");   ?
[19:17:12] <WhirledPress> Is it official? Has everyone foresaken JQuery?
[20:18:27] <Al_nz1> is null == undefined in javascript
[20:20:34] <jcarpenter2> it's true in my browser
[20:20:45] <jcarpenter2> i mean, use ===
[20:24:13] <hye> Hi
[20:24:19] <hye> Can someone share a good simple plugin for styling forms?
[23:54:38] <d3m0n> How can I go about parameterizing a part of an object key to determine what data I want to pull from a JSON file? https://codepen.io/jstn/pen/YrLNpq
