[15:27:25] <ahiru> hello there
[15:27:30] <ahiru> https://codepen.io/felipemotand/pen/bGqwpmW?editors=1010
[15:28:05] <robertmaxrees> hello
[15:28:12] <ahiru> I need help with my code
[15:28:25] <robertmaxrees> trying to figure out why it's changing all of them? :)
[15:28:45] <ahiru> what I need it to do: when you click on "click to watch", the "youtube play button" should change the text to "clicked"
[15:28:52] <ahiru> yeea
[15:29:06] <robertmaxrees> so first up, no need to .each() this - .on() will take care of that for you.
[15:29:16] <ahiru> I'm trying to make each button unique by adding a class with a number to each of them there
[15:29:28] <robertmaxrees> why does it need the class?
[15:29:49] <ahiru> no particular reason really
[15:30:07] <ahiru> my thought is that I could make them unique by addind the classes
[15:30:20] <robertmaxrees> why do they need to be unique tho? :) just so you can find them later?
[15:30:30] <ahiru> so I could make only one button to be changed
[15:30:35] <robertmaxrees> yeah, no need.
[15:31:25] <robertmaxrees> ditch the .each and all that logic - in the handler, use $(this), get the closest shared ancestor (looks like .assista-linha), then find the .play-button from there.
[15:32:30] <robertmaxrees> err, *.play_button.  dunno why you're swapping between hyphens and underscores :|
[15:32:50] <ahiru> the source code ends to do that sadly
[15:34:47] <robertmaxrees> yeah so either way, instead of generating unique classnames, just traverse the DOM relative to the clicked button.
[15:36:02] <ahiru> I updated the code
[15:36:07] <ahiru> but it's not working
[15:36:33] <robertmaxrees> because .parent() only goes up toi the closest parent.   use .closest('.assista-linha') instead.
[15:37:26] <ahiru> oh! it's working!
[15:37:31] <ahiru> look! :D
[15:37:34] <robertmaxrees> that's why i mentioned that class earlier :)
[15:37:45] <robertmaxrees> wait
[15:37:51] <robertmaxrees> don't use .parent().parent()
[15:38:01] <robertmaxrees> use .closest('.asista-linha')
[15:38:09] <ahiru> ohh
[15:38:14] <ahiru> I didn't knwo that one
[15:38:18] <robertmaxrees> lol
[15:38:49] <ahiru> good! thanks so much!
[15:39:02] <robertmaxrees> ;)
[16:59:19] <sydbarret> robertmaxrees you there? I succesfuly created the conditional menu
[16:59:27] <robertmaxrees> cool
[16:59:39] <sydbarret> now it needs to grab the customer id
[16:59:41] <sydbarret> from the url
[16:59:47] <sydbarret> to send to the flask method
[16:59:53] <sydbarret> that is with jquery innit
[17:00:17] <sydbarret> and do i have to place it on my layout.html or in the customer.html?
[17:00:18] <robertmaxrees> "to send to the flask method"
[17:00:25] <robertmaxrees> can't use jquery to do that.
[17:00:28] <robertmaxrees> since that's your backend.
[17:00:40] <robertmaxrees> once the server renders, it's off to the browser.  server's done at that point.
[17:00:58] <sydbarret> what i mean is
[17:01:10] <sydbarret> the a tag for example has  href="{{ url_for('billing') }}"
[17:01:22] <sydbarret> that means it will call the billing method
[17:01:27] <robertmaxrees> in flask, right?>
[17:01:36] <sydbarret> but for the customers methods
[17:01:39] <sydbarret> i need to pass the id
[17:01:46] <robertmaxrees> in your backend though, right?
[17:01:49] <robertmaxrees> or what?
[17:01:55] <sydbarret> yes to the backend
[17:02:03] <sydbarret> but i need to grab the id from the url
[17:02:06] <robertmaxrees> your server should be able to read the request.
[17:02:32] <sydbarret> so menu a tags will be for example   href="{{ url_for('billing',id) }}"
[17:02:39] <sydbarret> i need to pass that id
[17:03:06] <robertmaxrees> within flask?
[17:03:30] <sydbarret> yes but i dont see how to get that id value other than using jquery
[17:03:58] <robertmaxrees> so user clicks that URL and you need to know, on the server, what the ID was?
[17:05:06] <sydbarret> so i have 3 more options in my menu right?
[17:05:11] <sydbarret> those 3 menus
[17:05:15] <robertmaxrees> that's not going to answer my question.
[17:05:26] <sydbarret> only should work by sending the customer id
[17:05:27] <robertmaxrees> lol
[17:05:35] <sydbarret> and the only place to grab it its in the url
[17:05:47] <robertmaxrees> so what's the url that gets generated?
[17:05:58] <robertmaxrees> an example one.
[17:06:17] <sydbarret> yes it will be
[17:06:42] <robertmaxrees> "yes it will be" what??  the customer ID is in the url?
[17:06:49] <sydbarret> wait i will grave it
[17:06:51] <sydbarret> grab it
[17:07:06] <sydbarret> url will be like http://localhost:5000/customer/2814
[17:07:40] <robertmaxrees> sure.  so in flask you need to parse out the url or however it handles routes and get the ID there.
[17:07:42] <robertmaxrees> not from jquery.
[17:07:45] <sydbarret> so when clicking say menu option 4 it should call the flask method with that 2814 id
[17:07:54] <robertmaxrees> that's not how that works.
[17:08:12] <robertmaxrees> https://flask.palletsprojects.com/en/1.1.x/quickstart/#routing
[17:09:02] <sydbarret> i had it that way when the link was in the same a.html but now its on the layout.html
[17:09:03] <robertmaxrees> ah or for the current version https://flask.palletsprojects.com/en/2.0.x/quickstart/#variable-rules
[17:09:06] <sydbarret> or the menu
[17:09:13] <robertmaxrees> sounds like you need to learn how to properly use jinja/flask.
[17:09:31] <sydbarret> i know what you mean
[17:09:33] <robertmaxrees> javascript can't "call" your backend like you think.
[17:09:38] <sydbarret> what you dont understand is that
[17:09:46] <sydbarret> now the links are in layout.html
[17:09:52] <sydbarret> not in customer.html
[17:09:56] <robertmaxrees> lol
[17:10:17] <robertmaxrees> that doesn't change what i'm saying.
[17:10:33] <sydbarret> so say my layout has
[17:10:44] <robertmaxrees> you can try to keep repeating your explanation over and over.
[17:10:46] <sydbarret>  {% if menus=="menu" %} then it shows 3 ul li
[17:10:54] <sydbarret> else shows 5 ul li
[17:10:56] <robertmaxrees> it's not going to change anything i'm telling you.
[17:11:38] <sydbarret> what youi dont understand is that the id is not captured anymore
[17:12:08] <robertmaxrees> "the id is not captured anymore" doesn't make any sense.  user clicks the url, url contains the ID.
[17:12:15] <robertmaxrees> read id from url.  problem solved.
[17:12:47] <sydbarret> you mean i can read it using jinja?
[17:13:32] <robertmaxrees> so long as it's a var available to it, should be able to just fine.
[17:13:40] <robertmaxrees> how have you defined your route?
[17:14:11] <robertmaxrees> (this is the only help i'll try to give you here since this really isn't jquery)
[17:15:16] <sydbarret> @app.route('/customer/<id>/history')
[17:15:49] <robertmaxrees> so the id is stored in a var named 'id'.  just need to pass it as part of the render_template call.
[17:15:54] <robertmaxrees> https://flask.palletsprojects.com/en/2.0.x/quickstart/#rendering-templates
[17:17:54] <sydbarret> im not rendering nothing,its a contextual menu only. I know how to do what you are saying when the render template has been called it. Im not calling it
[17:18:17] <sydbarret> menu option should be smart enough
[17:18:23] <robertmaxrees> huh?
[17:18:24] <sydbarret> to know that im on the customer page
[17:18:40] <robertmaxrees> are you trying to, like, fetch the menu on click or something?
[17:18:53] <sydbarret> yes
[17:18:58] <robertmaxrees> that doesn't make any sense.
[17:19:01] <sydbarret> im dealing with the menu
[17:19:04] <robertmaxrees> just render it out on pageload and then show/hide it.
[17:19:11] <sydbarret> not with a button inside the rendered template
[17:19:12] <robertmaxrees> don't dynamically fetch it on click.
[17:21:13] <sydbarret> im trying to fetch the flask method when clicking the contextual menu regarding customer
[17:21:21] <robertmaxrees> correct.
[17:21:25] <robertmaxrees> and i'm saying you shouldn't do that.
[17:21:29] <sydbarret> the other works fine because they dont need id
[17:21:46] <robertmaxrees> you should render out the page with the proper menu in the first place.
[17:23:17] <sydbarret> cant just use ajax?
[17:23:27] <robertmaxrees> why would you do that here?
[17:23:27] <sydbarret> because i dont understand what you are saying
[17:24:00] <robertmaxrees> maybe there's a big gap in your explanation.  why can't the menu just be properly rendered out in the first place?
[17:24:08] <robertmaxrees> why would you need to use ajax for this?
[17:37:06] <sydbarret> Let me show you a sample here https://datatables.net/. Do you see that menu options are "manual, dawnload, login" right?
[17:37:22] <sydbarret> Ok so now when user clicks on Ashton Cox row. Flask will pull customer.html but now the menu has options "manual,download, login, history,profile"
[17:37:23] <robertmaxrees> lol, yes.
[17:37:36] <sydbarret> and when user
[17:37:47] <sydbarret> clicks history menu option
[17:37:58] <sydbarret> it should call flask method with
[17:38:02] <sydbarret> ashton cox id
[17:38:11] <sydbarret> and load history.html
[17:38:15] <robertmaxrees> why not fetch that data when the user clicks the row then?
[17:38:34] <robertmaxrees> have flask respond with JSON of the data you need instead of an html file.
[17:38:36] <robertmaxrees> render client-side?
[17:39:03] <robertmaxrees> (thanks for clarifying that missing piece by the way - didn't realize the user wasn't already on a customer-specific page)
[17:39:03] <sydbarret> because my boss wants that in the menu
[17:39:07] <sydbarret> not in any button
[17:39:41] <sydbarret> customer.html will have the id in the url
[17:40:01] <sydbarret> so far i managed to have the contextual menu
[17:40:06] <robertmaxrees> you mean in a URL contained with in the html file?
[17:40:30] <sydbarret> so when user clicks Ashton Cox row it will render customer.html
[17:40:39] <sydbarret> and the url at the top has the form
[17:40:47] <sydbarret> http://localhost:5000/customer/2801
[17:41:05] <robertmaxrees> the smarter way to do this is to move those templates to the client side and then have the server respond with JSON.  then you can render out that information however you need.
[17:41:12] <robertmaxrees> including the menu you're looking to do./
[17:42:48] <sydbarret> what do you mean to the "client side"
[17:43:04] <robertmaxrees> just that - as templates in your js.
[17:43:25] <sydbarret> what do you call template? customer.html?
[17:43:40] <robertmaxrees> you're currently using that as a flask template, yes.
[17:44:26] <sydbarret> still dont know what you are trying to show me
[17:44:47] <sydbarret> i only need the menu to call the flask method
[17:44:51] <robertmaxrees> okay.
[17:44:52] <sydbarret> but with the id that lives in the url
[17:45:13] <sydbarret> menu profile option behaves similar way
[17:45:29] <robertmaxrees> okie.  to do it your way, setup a flask route and send an ajax request via jquery.
[17:45:47] <robertmaxrees> i'll need a jsfiddle of what you have now to help more.
[17:45:52] <sydbarret> ok but the script needs to be in the customer.html?
[17:45:57] <sydbarret> or in layout.html?
[17:46:09] <robertmaxrees> which script?
[17:46:16] <robertmaxrees> the click handler for the ajax?
[17:46:18] <sydbarret> the ajax call
[17:46:27] <sydbarret> i think needs to be in customer.html innit?
[17:46:38] <robertmaxrees> why???
[17:46:54] <robertmaxrees> without seeing your page, i'm super lost lol.
[17:47:08] <robertmaxrees> i'd need to actually see it - describing it makes it hard to understand what you're actually doing :/
[17:47:35] <sydbarret> let me try ajax myself and if i have question i will comeback to you
[17:47:58] <robertmaxrees> sure, if you have any questions be sure to make a fiddle showing the code :)  fine if it doesn't fully function.
[21:50:52] <sydbarret> https://jsfiddle.net/d1ugo40s/
[21:51:20] <sydbarret> server logs shows
[21:51:34] <sydbarret> psycopg2.errors.InvalidTextRepresentation: invalid input syntax for integer: "history"
[21:51:34] <sydbarret> LINE 1: SELECT name FROM customers WHERE id='history'
[21:52:05] <sydbarret> its sending 'history' string instead of the customer id
[21:58:16] <sydbarret> I will try to send the id in the render_template instead so that it will be available in my menu file
[21:58:26] <sydbarret> and the i just can do href  url_for
[22:09:02] <robertmaxrees> generating the JS using flask is a great way to get bugs fwiw.
[22:09:21] <robertmaxrees> expose stuff via data attributes and whatnot.
