[03:51:49] <linux_daemon> hello guys, i have an object that has multiple properties like: data.areainfo.text, data.areainfo.text_en, data.areainfo.text_nl etc. now, the en/nl part is what i cant figure out to get: the var is : lang, and i want to get it dinamically, to avoid switch or multiple if else. how to get it like this: lang = 'en'; text = data.areainfo.text[lang] ?
[03:52:09] <linux_daemon> i want the lang part to get it dinamically, if you understand me what i wanna do
[03:53:14] <linux_daemon> tried with backticks, with ${lang}, but no success
[03:53:21] <Cork> linux_daemon: you can't that is in the name of the key
[03:53:47] <linux_daemon> so i must do a switch?
[03:54:07] <Cork> you can do something like look over the areainfo key values and check with regex if there is a lang in the key name
[03:54:33] <Cork> personally i would try to change the data structure if possible
[03:54:49] <Cork> so it is text: { en: "", nl: "" } instead
[03:55:44] <linux_daemon> ok, then how to access the object property dinamically? something like: data.areainfo.${lang} , but this approach doesnt work
[03:56:05] <linux_daemon> even with backticks it wont work
[03:56:22] <Cork> Object.keys(data.areainfo) <-- gives you an array or $.each(data.areainfo, function(key, value) {})
[03:56:53] <Cork> you can also do something like data.areainfo['text_' + lang]
[03:57:01] <Cork> but then you have to know what the key name would be
[03:58:27] <linux_daemon> ok, thanks, i will try this approach
[07:03:56] <anli> Seems chrome does not autofill passwords, am I right?
[07:16:12] <Cork> no
[09:12:05] <cusco> looping trough several <select> with .each, how can I access $(this + ' option:selected) ?
[09:12:19] <cusco> $(this) is the select, how do I get the selected option ?
[09:20:00] <cusco> ok got it via .find('option:selected')
[09:26:50] <anli> $(this).find(":option:selected");
[09:27:15] <anli> Or $("option:selected", $(this)), I think
[09:27:42] <anli> I am not sure you need to wrap this, maybe $("option:selected", this) is ok
[09:42:00] <Gudddu> Can a form input field accept multiple values and have that in the post data as a list?
[10:06:51] <Cork> Gudddu: some of them
[10:06:58] <Cork> select and file pickers can
[10:07:00] <Cork> but not other
[10:07:51] <Cork> <select multiple> support multiple options selected
[10:08:19] <Cork> and <input type="file" multiple> can upload more then one file
[10:09:11] <Cork> cusco: for most selects just do this.value
[10:09:17] <Cork> or $(this).val()
[10:09:36] <Cork> unless you expecility want to modify the selected options visible value that is
[10:41:37] <Gudddu> Thanks Cork
[10:43:58] <cusco> Cork: I wanted to know the text of the selected value at that time
[10:44:29] <cusco> anli
[10:44:33] * Cork nods
[10:45:04] <Cork> ya, those cases when that is of interest .find is the correct solution, but many use that for just finding the selected value
[13:02:50] <rocketmagnet> hi everyone
[13:03:23] <rocketmagnet> what's wrong with $("header>script[href='js/jscode.js']"); ?
[13:03:46] <robertmaxrees> "header"?
[13:03:52] <robertmaxrees> think you might mean "head"
[13:03:59] <robertmaxrees> but also: why are you trying to select a script tag?
[13:04:01] <rocketmagnet> ups
[13:04:20] <robertmaxrees> also: href??
[13:07:19] <robertmaxrees> rocketmagnet your script tag shouldn't have an href.
[14:01:31] <Cork> and ya, to complete the sentence, you can't do much by selecting a script tag
[14:01:39] <Cork> removing it won't remove the code it added to the page
[14:02:40] <robertmaxrees> heh, they've moved on.
[14:03:11] <Cork> well they haven't left so... :)
[14:03:24] <robertmaxrees> nah, they just moved over to ##javascript lol
[14:03:34] <Cork> heh oh
[14:04:17] <Cork> well with a completely different question
[14:04:22] <robertmaxrees> still ;)
[14:04:33] <Cork> and i start to suspect what they are trying to do :)
[14:04:42] <robertmaxrees> ?
[14:05:09] <Cork> a workadound userscript for something like adfly, adblocker blocker, or similar
[14:05:15] <robertmaxrees> ew
[14:05:55] <Cork> i actually wrong one of those (for firefox) a few years ago
[14:06:03] <Cork> firefox has a really nifty event for that
[14:06:11] <Cork> beforeScriptEvaluation or something like that
[14:06:27] <Cork> lets you modify a script before the text is gives to the js engine
[14:06:29] <Cork> really nifty
[14:06:38] <Cork> i think they have removed it now though
[14:08:23] <Cork> https://developer.mozilla.org/en-US/docs/Web/API/Element/beforescriptexecute_event
[16:08:18] <rocketmagnet> i've the following problem: i'm loading parts of my page with xmlhttprequests and want to set a custom .js file for each page i insert, but when i insert the .js file in my .ready() function the <script> tags that are in the html file do not recognize the .js functions from the .js file i insert, is there a way i can reload the .js script so it's functions are available ??
[16:13:16] <Cork> rocketmagnet: note that scripts you load thought xhr won't "unload" until the page reloads
[16:13:26] <Cork> if the script tag is in the page or not doesn't matter
[16:14:09] <Cork> rocketmagnet: but to answer the question, you need to wait for the script to load and eval
[16:14:26] <rocketmagnet> how to add a script dynamically and execute it ? i tried $.getScript() but that doesn't work
[16:14:27] <Cork> script tags injected after page load doesn't halt code execution
[16:14:47] <Cork> rocketmagnet: it works, you just have to wait for the script to be loaded
[16:15:10] <rocketmagnet> the problem is i've to wait for the page to be loaded to insert the script
[16:15:31] <Cork> ya, and all the scripts depending on the script you load have to wait for the callback from $.getScript
[16:15:45] <rocketmagnet> so i can be sure the <div> tag is loaded already.
[16:17:47] <Cork> also note, $.getScript uses eval, so if you plan on using csp to prevent script injection it won't work
[16:18:38] <rocketmagnet> i've the following: https://paste.debian.net/1110293/
[16:18:59] <rocketmagnet> but the problem is that the js code inside the html code does not know the functions from the js file i insert
[16:19:26] <Cork> ya, cause you don't wait for the script to load
[16:19:31] <Cork> line 8 is async
[16:20:10] <rocketmagnet> how can i change that ? the loadPage function is inside a $("document").ready() function
[16:20:25] <Cork> tno
[16:20:41] <Cork> when you inject script tags after the page has loaded it is always async
[16:21:01] <Cork> script tags stops the page scripts only if they exist before the page starts parsing
[16:21:22] <rocketmagnet> but how can i insert the script and insert my content when the file is beeing loaded ? isn't there a way around that ?
[16:21:31] <rocketmagnet> like reloading the js tags ?
[16:22:07] <Cork> you can not have js add it, or you can provide a callback from the script you load and have the inpage scripts wait for that callback
[16:22:21] <Cork> there isn't really a third option
[16:23:06] <Cork> rocketmagnet: i would recommend having a look at https://api.jquery.com/jQuery.Callbacks/
[16:23:27] <Cork> basically create your own onload event :)
[16:24:16] <Cork> just make sure you define the callback variable outside the script you want to wait for :)
[16:24:25] <Cork> so the variable always exists
[16:26:39] <rocketmagnet> so outside of the ready() function i should create a callback function ?
[16:27:13] <Cork> the scripts that depend on the script you load after the fact should use this INSTEAD of ready
[16:27:33] <Cork> you need to wait for the script to be done
[16:28:02] <rocketmagnet> but how can i be sure that <head> is not already loaded ?
[16:28:29] <Cork> uh, you load a full html page with ajax?
[16:28:39] <rocketmagnet> most parts of it
[16:28:48] <rocketmagnet> i just keep the header and the footer
[16:28:50] <Cork> well it should only contain what is in body
[16:29:20] <Cork> and you said you called the xhr to inject the script and load the extra html from ready
[16:29:29] <Cork> that should still be like that
[16:29:57] <Cork> but the html that depends on the script you inject needs to have an extra delay to wait for the script
[16:30:04] <Cork> and that is where the callback comes in
[16:30:10] <rocketmagnet> https://paste.debian.net/1110312/
[16:31:08] <Cork> and where is the code that depends on $("head").append("<script type='text/javasript' src='js/" + page + ".js'>"); ?
[16:31:41] <rocketmagnet> inside of the part i load with xhr
[16:31:55] <Cork> then that is where you need to use the callback variable
[16:32:34] <Cork> the xhr is in race with the script load
[16:32:50] <rocketmagnet> so you mean i have to insert the <script> tag when the xhl is done ?
[16:32:56] <Cork> you need to make sure the script is loaded and executed before you start parsing the html in the xhr response
[16:33:04] <Cork> no, not at all
[16:33:22] <Cork> you need to define a $.Callbacks before you call either of them
[16:33:37] <Cork> have the script file call the callback the last thing it does
[16:33:51] <Cork> and then have the callback hooks used in the html file scripts
[16:34:03] <Cork> so they can know when the script is loaded
[16:36:02] <rocketmagnet> so what do i do in the callback ? i'm still confused a bit, sry
[16:36:43] <Cork> what the script does right now
[16:37:23] <Cork> the callback is to delay the scripts so they don't run before there dependencies are loaded
[16:38:04] <rocketmagnet> i see, but how can i make this variable for different pages ?
[16:38:14] <Cork> it isn't different pages
[16:38:32] <Cork> it is just one page that you load a script into and some extra html tags
[16:38:51] <Cork> the script will stay and the html will replace what is in the place where you replace it
[16:39:24] <Cork> (more specifically, the script will stay as long as anything is referencing it)
[16:39:57] <rocketmagnet> so first i wait until the file is loaded, then i xhr my page and then i call the callback doing the scipt execution ?
[16:40:29] <Cork> first you define the callback variable as a global
[16:40:41] <Cork> then you inject the script reference
[16:40:56] <Cork> then you request the html and inject it in the dom
[16:41:19] <Cork> the script should at the end fire the global callback variable you defined
[16:41:30] <Cork> and the html should wait for that callback
[16:41:38] <Cork> (or rather the scripts in the html)
[16:42:48] <rocketmagnet> how do i execute a .js file ?
[16:43:07] <Cork> you don't
[16:43:30] <Cork> you load it and the browser will execute the content of the script reference
[16:43:50] <Cork> alternatively you load the script as text
[16:43:55] <Cork> and then eval the entire text string
[16:44:04] <Cork> (that is basically what $.getScript does)
[16:47:10] <rocketmagnet> https://paste.debian.net/1110324/
[16:47:52] <Cork> rocketmagnet: that won't do what you expect
[16:48:03] <Cork> rocketmagnet: line 77 will just remove the script tag
[16:48:17] <Cork> it WILL NOT remove the parsed script from the page
[16:48:17] <rocketmagnet> i see, i'm confused
[16:48:35] <rocketmagnet> i know
[16:49:11] <rocketmagnet> can't you give me a simple example ? i still don't get it right
[16:49:28] <Cork> i think your confution comes from the basis that you think you can load and unload scripts from the page
[16:49:38] <Cork> and you really can't
[16:49:58] <Cork> thing as javascript as one big container
[16:50:15] <Cork> and every script you load gets pored into that container
[16:50:25] <Cork> mixing together with what is already there
[16:50:59] <Cork> after the load there isn't anything to differentiate where it came from
[16:51:33] <rocketmagnet> and that's where the callback comes in ?
[16:52:00] <Cork> no, the callback comes in from the fact that after the initail page is parsed
[16:52:23] <Cork> each script you load isn't waiting for "what was just added before it" to complete loading
[16:52:37] <Cork> so you have to add that handling
[16:57:03] <Cork> anyway it is getting late, i'm off
[16:57:13] <rocketmagnet> thanks for your help
[16:58:01] <Cork> np
