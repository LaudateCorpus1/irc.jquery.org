[06:40:25] <jperrault> Using '../pointerevents', with for the intern tests is returning "SyntaxError: modules are not implemented yet", and pointing at PEP.js says that pep isn't defined.  This was formerly pep = window.PointerEventsPolyfill before the ES6 commit.
[06:56:31] <scott_gonzalez> Using '../pointerevents' is definitely wrong, since that's and ES6 source file.
[06:56:54] <scott_gonzalez> Using '../dist/PEP' should provide window.PointerEventsPolyfill.
[06:57:14] <scott_gonzalez> So if `pep = window.PointerEventsPolyfill` existed before, it will still need to exist.
[06:57:35] <scott_gonzalez> Or simple defined pep as the module that's loaded in your define().
[07:42:43] <jperrault> I'm looking at the changes between boot.js and targeting.js
[07:52:10] <scott_gonzalez> jperrault: The contents didn't change, other than removing the external object.
[07:52:28] <scott_gonzalez> boot.js didn't actually boot anything.
[07:53:01] <scott_gonzalez> The only "booting" it did was setting window.PointerEventsPolyfill to an empty object if it didn't already exist.
[07:53:19] <scott_gonzalez> Assigning window.PointerEventsPolyfill is the job of the UMD wrapper.
