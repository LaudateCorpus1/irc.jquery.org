[09:47:24] <scott_gonzalez> snover: So, the Page object...
[09:47:55] <scott_gonzalez> How would we expose the remote API and the custom API on the same level?
[09:48:15] <scott_gonzalez> Is it ok to just augment the remote instance?
[09:50:17] <snover> a new command is returned on every call so you actually have to modify the prototype. you can risk it and modify the prototype of `remote`, or you can create a command subclass
[09:50:39] <snover> http://theintern.github.io/leadfoot/Command.html scroll to ‚ÄúCommands can be subclassed‚Äù
[09:51:40] <snover> so an instance of that subclass would be what you return from the hypothetical w3cTest call I showed earlier
[09:52:38] <snover> and function w3cTest(remote, url) { return new CustomCommand(remote).get(url).executeAsync(loadThePepScriptHal); }
[09:55:43] <scott_gonzalez> And then w3cTest(remote, 'foo.html').findById('x').click().end().checkResults() will have checkResults() resolve to the custom Command instance?
[09:55:51] <scott_gonzalez> or an instance of the custom Command
[09:56:04] <scott_gonzalez> Not an instance of the base Command?
[09:58:37] <snover> CustomCommand.prototype.checkResults = function () { return new this.constructor(this, function () { return this.parent.then(pollUntil(‚Ä¶)); }); }
[09:59:14] <scott_gonzalez> And all the built-in commands are written like that, correct?
[09:59:27] <scott_gonzalez> So when you call .end() you'll get back a CustomCommand.
[09:59:32] <snover> yes
[09:59:40] <scott_gonzalez> Thanks.
[10:30:02] <pep-commit> [PEP] scottgonzalez closed issue #186: Spec no longer says Mouse is pointerId 1 http://git.io/vJL2K
