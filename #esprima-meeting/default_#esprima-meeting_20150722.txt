[11:00:35] <mikesherov_> hi
[11:01:15] <jlast> hey
[11:01:49] <mikesherov_> any ariya?
[11:19:08] <ariya> hello folks
[11:19:10] <ariya> sorry I'm late
[11:20:20] <ariya> anyone is still here?
[11:21:30] <jlast> no worries
[11:21:31] <jlast> hello
[11:21:44] <ariya> hi jlast
[11:22:01] <jlast> will be back in a minute
[11:23:32] <ariya> jlast: your https://github.com/jquery/esprima/pull/1248 looks really good!
[11:23:42] <ariya> let me see if I can spend some time looking at the test failures
[11:25:34] <ariya> JSCS reports coding style errors, but it should be easy for you to fix them
[11:25:55] <ariya> and make sure to rebase off master, to exclude failing downstream JSCS tests
[11:29:17] <jlast> thanks ariya - just got back
[11:29:41] <jlast> i actually hunted down the test errors this morning
[11:30:12] <jlast> (most of them were from not eval'ing `var source = "foo"`
[11:30:58] <ariya> looks like it is easy to fix :-)
[11:31:15] <ariya> we could also skip it for the browser tests
[11:31:28] <jlast> yup, they're all fixed. one of them was source-element which was empty and the other was the invalid-yield
[11:31:28] <ariya> I'm not sure those tests are highly critical (for the browser-based tests)
[11:31:39] <jlast> sure
[11:32:29] <jlast> I'm dropping some notes in the PR so that it's more digestable. To be clear, I'll do a code quality pass before i consider it ready per se...
[11:33:42] <ariya> sounds good
[11:34:08] <ariya> on a general topic, I got the final PR to close our ES6 support. yay!
[11:34:25] <ariya> once it's reviewed and landed, we can say that we cover ES6 more or less (notwithstanding defects)
[11:34:30] <jlast> wow
[11:34:44] <jlast> by the way, it's crazy how many more tests es6 adds
[11:34:50] <ariya> I have prepared Release 2.5 umbrella ticket: https://github.com/jquery/esprima/issues/1246
[11:34:51] <jlast> and i'm sure it's true for complexity as well.
[11:35:13] <gibson042> argh; I switched networks and didn't realize I was disconnected
[11:35:17] <gibson042> what'd I miss?
[11:35:32] <ariya> gibson042: we just started :-)
[11:35:40] <ariya> gibson042: and I got your email, ready to write something soon
[11:35:48] <ariya> thanks for that reminder
[11:36:02] <gibson042> np
[11:37:07] <ariya> jlast: let me know when you feel confident about your PR so that we can land it asap
[11:37:23] <jlast> will do.
[11:37:33] <ariya> of course, assuming that your karma runner doesn't reveal any browser-specific issues :-)
[11:37:38] <jlast> also, do you have any opinions on the parseFunction work?
[11:37:51] <ariya> jlast: yeah, that one is bit tough after the yield complication
[11:37:53] <jlast> haha
[11:38:06] <jlast> what do you mean?
[11:38:12] <jlast> is the yield work still pending?
[11:38:17] <ariya> jlast: it's complete
[11:38:28] <ariya> jlast: but the idea unifying both happened before that
[11:38:40] <ariya> and the two functions looked extremely identical back then
[11:39:24] <ariya> I don't have any strong opinion, let me think about this a bit more
[11:39:36] <ariya> more likely it's OK to refactor it as you propose in that PR
[11:40:52] <jlast> alright - happy to try a different approach too. also, i meant to ask if there's another ticket you think i could look at
[11:41:24] <ariya> let me check
[11:41:48] <ariya> https://github.com/jquery/esprima/issues/1159, if mike is busy and can't take that
[11:41:53] <ariya> https://github.com/jquery/esprima/issues/1215
[11:42:08] <ariya> coveralls.io is flaky, hence the experiment with other coverage service
[11:42:18] <jlast> #1159 would be nice w/ a little more context
[11:42:33] <ariya> https://github.com/jquery/esprima/issues/1048 if you want
[11:42:52] <ariya> it will be fun since you need to walk through the grammar, feel free to poke me if you need some hints
[11:43:02] <jlast> coverage is interesting, but i've got a decent amount of tools work on the horizon :P
[11:43:13] <ariya> https://github.com/jquery/esprima/issues/1006 if you fancy extending the ast node
[11:43:25] <jlast> var let looks like a lot of fun
[11:43:31] <ariya> for this, you may need to complete https://github.com/estree/estree/issues/6 as well
[11:43:37] <jlast> like `var let = 2;` should work?
[11:43:54] <ariya> see also https://github.com/dherman/estree/commit/70ba4ab1fd8de48ca9dfd94a79820d3fe65d4009
[11:44:09] <ariya> jlast: only in non strict mode, yes
[11:44:22] <jlast> yes, ofcourse
[11:45:00] <ariya> https://github.com/jquery/esprima/issues/1164 is good if you want to understand fancy feature
[11:45:01] <jlast> Alright, i'll see what I can do with these. I'll try and use the issues to answer some questions
[11:45:06] <ariya> probably you can start by writing test cases
[11:45:21] <ariya> we have over 1200 tests already, hopefully we'll reach 1337 at some point and stop there!
[11:45:35] <jlast> yea, that's what i was thinking. haha at that point every test you add you have to remove one
[11:45:51] <jlast> ^ test cases and pseudo expected output
[11:46:21] <ariya> jlast: I think those tickets should keep you busy for a while :-)
[11:46:32] <jlast> by the way, i wrote two "intro" blog posts on esprima internals as i was starting http://jasonlaster.github.io/
[11:46:58] <jlast> my style is to keep a journal as i'm going, and i don't spend too much time on post-production value... so take it w/ a grain of salt
[11:47:30] <ariya> someday, it will be useful to fold the content into esprima.org
[11:47:37] <ariya> I also plan to add some videos there
[11:47:38] <jlast> I looked for some other "esprima getting started material" and couldn't find any. Are there other good resources?
[11:48:18] <ariya> there is
[11:48:23] <ariya> not specific to esprima, though
[11:48:26] <ariya> let me check
[11:49:41] <ariya> https://www.youtube.com/watch?v=XA8_hZfVecI
[11:49:55] <ariya> would be nice to collect those videos in one place
[11:50:27] <ariya> https://www.youtube.com/watch?v=UqTlToUYK1E is another good one
[11:50:58] <jlast> yea, you and mike and one recently too
[11:51:32] <ariya> that's a bit more practical :-)
[11:51:39] <ariya> one day I also like to explain parseBinaryExpression
[11:52:02] <ariya> the rest of the parser is recursive descent, but that one is stack based, for performance and to reduce recursion
[11:52:50] <ariya> in all cases, I need to leave soon
[11:53:05] <ariya> jlast: glad to have you helping us with this!
[11:53:14] <ariya> don't hesitate to open issues/PR and discuss more stuff
[11:53:18] <jlast> nice talking. Happy to.
[11:53:30] <jlast> thanks for all the help so far
[11:53:42] <ariya> thanks for your participation!
[11:53:45] <ariya> see you next week folks
[11:53:47] * ariya waves
