[03:32:06] <jq-jenkins> Project jQuery Mobile Latest build #182: FAILURE in 21 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/182/
[04:36:30] <jq-jenkins> Yippie, build fixed!
[04:36:30] <jq-jenkins> Project jQuery Mobile Latest build #183: FIXED in 4 min 45 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/183/
[06:39:16] <toddmparker_> great johnbender
[06:40:41] <toddmparker_> did you see he responded with a Q: https://github.com/jquery/jquery-mobile/issues/3592
[06:40:42] <socialhapy> ★ Issue #3592 on jquery-mobile, reported by evgenyneu (20h, 40m ago): Incorrect hash url in toPage variable passed to pagebeforechange event
[06:40:55] <toddmparker_> and added this new issue - https://github.com/jquery/jquery-mobile/issues/3600
[06:40:56] <socialhapy> ★ Issue #3600 on jquery-mobile, reported by evgenyneu (2h, 22m ago): Inconsistency of toPage parameter in pagebeforechange handler between click and hashchange events
[06:41:03] <toddmparker_> mind following up and closing if needed?
[06:45:05] <jzaefferer> hey johnbender, you should join #jqueryui-dev
[06:45:43] <jzaefferer> toddmparker_: will you set up the hangout?
[06:45:53] <toddmparker_> yep, was just going to post a link
[06:46:54] <jzaefferer> cool
[06:50:34] <toddmparker_> jzaefferer: can you try this link? https://plus.google.com/hangouts/1bc03937f890703bbff4d5b041682cf379d94abd?authuser=0&hl=en-US#
[06:52:27] <toddmparker_> just posted this to the Basecamp too
[06:57:54] <scott_gonzalez> toddmparker_: Can you add me to the existing thread again?
[06:58:02] <scott_gonzalez> When I changed accounts, I got dropped :-)
[06:58:20] <scott_gonzalez> I see now that I missed a bunch of messages :-P
[08:02:26] <maxlynch> The new flow transition is awesome :)
[08:12:49] <johnbender> scott_gonzalez: I think that issue link gets to the heart of the issue
[08:13:02] <johnbender> it's pretty much exactly as you guys pointed out, something before domready but after page create
[08:13:23] <johnbender> and after talking with ajpiano I was hesitant to override _init
[08:13:36] <johnbender> scott_gonzalez: https://github.com/jquery/jquery-mobile/issues/2217
[08:14:11] <johnbender> certainly confusing though :/
[08:44:40] <jzaefferer> hey johnbender, got a few minutes to hop on Skype and talk about testing?
[08:46:42] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/mt-FdQ
[08:46:42] <jqmobilecommit> [jquery-mobile/master] quick refactor for ingnore content checks - John Bender
[08:51:50] <jzaefferer> apparently johnbender is busy pushing code
[08:52:11] <jzaefferer> too late for today, let's do it early next week then
[08:55:27] <johnbender> jzaefferer: agh sorry
[08:55:29] <johnbender> lets do that
[08:55:48] <jzaefferer> quick
[08:56:02] <jzaefferer> johnbender: get on Skype!
[08:56:16] * johnbender is signing in to skype
[09:20:16] <Wilto> Hello (again), folks.
[09:45:00] <jqm-jenkins-bot> Project jqm-master build #493: SUCCESS in 29 min: http://10.59.19.240:8080/job/jqm-master/493/
[09:48:05] <toddmparker_> hi all
[09:48:20] <toddmparker_> thanks for being on the call this morning. felt productive
[09:50:07] <johnbender> toddmparker_: yar
[09:50:18] <johnbender> toddmparker_: talked with jzaefferer a couple minutes ago about the test swarm setup
[09:50:25] <toddmparker_> cool
[09:50:28] <toddmparker_> progress?
[09:50:40] <johnbender> toddmparker_: oh no he just wanted to know what the plan was
[09:51:07] <toddmparker_> k
[09:51:08] <johnbender> so we talked about it and there's an additional action item but it's mostly the same plan that we had yesterday
[09:51:50] <toddmparker_> good
[09:53:58] <johnbender> toddmparker_: wrt the vmouse stuff, I'd imagine that if scott_gonzalez wasn't excited about mobile development before he must be now! :/
[09:54:21] <toddmparker_> yeah, it is so wacky
[09:54:33] <toddmparker_> be good to get more people helping out with normalization
[09:55:02] <toddmparker_> kin list of all the junky implementations is helpful
[09:55:21] <toddmparker_> we need to capture that somewhere
[10:08:32] <johnbender> toddmparker_: https://github.com/jquery/jquery-mobile/issues/3154#issuecomment-4013963
[10:08:32] <socialhapy> ★ Issue #3154 on jquery-mobile, reported by jblas (2m, 3w ago): Need a way to tell the framework not to enhance any markup in a specific container
[10:08:47] <johnbender> getting started on grid, but I'm wondering if we should bother
[10:09:16] <johnbender> I don't think we've documented that as public
[10:09:42] <Wilto> Any time “grid” is mentioned, I go straight to TRON in my head.
[10:10:46] <johnbender> :D
[10:10:57] <toddmparker_> grid? as in the layout grids?
[10:11:01] <johnbender> toddmparker_: I'm proceeding under the assumption that I should trim the working set
[10:11:10] <johnbender> toddmparker_: there's a $.fn.grid that's used by the navbar
[10:11:16] * johnbender was also surprised
[10:11:19] <toddmparker_> right
[10:11:23] <toddmparker_> sure
[10:12:13] <toddmparker_> so what would this mean?
[10:13:00] <johnbender> toddmparker_: the only reason I even bothered asking is that it adds a dependency for this grid plugin
[10:13:03] <johnbender> it depends on core
[10:13:12] <johnbender> for the .mobile.enhanceable helper
[10:13:45] <toddmparker_> but doesn't most everything already depend on core?
[10:14:11] <toddmparker_> actually, let me just sk a dumb question: what is the impact if you don't support this?
[10:14:39] <johnbender> developers who have found and are using this grid thing might run into issues with data-enhance false
[10:14:43] <johnbender> it's a trivial addition
[10:14:47] <johnbender> just double checking
[10:34:44] <jqmobilecommit> [jquery-mobile] johnbender pushed 2 new commits to master: http://git.io/ws_l7Q
[10:34:44] <jqmobilecommit> [jquery-mobile/master] exclude ignored elements from the $.fn.grid working set - John Bender
[10:34:44] <jqmobilecommit> [jquery-mobile/master] grid test suite, and tests for data-enhance=false - John Bender
[10:42:44] <johnbender> Wilto: toddmparker_: gseguin: I could use a quick opinion here
[10:42:52] <johnbender> for the $.fn "widgets"
[10:43:01] <johnbender> eg, controlgroup
[10:43:20] <johnbender> I'm pruning the working set when the element resides in a data-enhance-false
[10:44:01] <johnbender> the question is, should I return the original working set (ie all elements regardless of whether they have a data-enhance=false parent or not) or should I returned the pruned set
[10:44:07] <johnbender> would you
[10:44:24] <Wilto> When you say “working set…”
[10:45:06] <johnbender> as a developer expect the $.fn.foo method in $(".my-super:cool(selector)").controlgroup().foo()  to get all the elements from that selector
[10:45:16] <johnbender> or only the elements enhanced by the controlgroup widget
[10:45:18] <johnbender> hmm
[10:45:22] <Wilto> Oh, oh, I get you.
[10:45:25] <johnbender> maybe this is a question for scott_gonzalez
[10:45:31] <Wilto> I would return the non-pruned set, me.
[10:45:46] <johnbender> wondering if there's an analog for widgets
[10:45:53] <Wilto> I’d expect my selector to still be… uh, actionable, in any case.
[10:45:57] <johnbender> though I don't think you can prune the working set
[10:46:12] <johnbender> alright
[10:46:19] <johnbender> one vote for returning the full working set
[10:46:59] <johnbender> Wilto: the only counter argument is that if you chain after running on of those the expectation is that foo will be working with an "enhanced" version of the selectors right?
[10:47:19] <johnbender> err rather the elements gathered by the selectors
[10:47:54] <Wilto> Mm, I dunno. Given $('.sel').foo().css('border', '1px solid red'), I would expect whatever foo does to happen in a vacuum.
[10:48:09] <Wilto> I get where you’re at, though.
[10:48:54] <Wilto> I just feel like, either way, .sel should be getting a red border there. Otherwise you’ve introduced this weird black hole after which selectors might stop working, y’know?
[10:51:31] <jqmobilecommit> [jquery-mobile] toddparker pushed 1 new commit to master: http://git.io/leCCvw
[10:51:31] <jqmobilecommit> [jquery-mobile/master] Merge pull request #3598 from jakeboone02/loading-spinner-opacity - Todd Parker
[10:51:38] <johnbender> Wilto: this actual raises another question, should I really be going around to the callsites and filtering the working set there,
[10:51:52] <johnbender> $("foo").jqmEnhanceable().controlgroup();
[10:52:08] <johnbender> that fits with the explicit nature of the enhance and enhanceWithin
[10:53:55] <johnbender> arg
[10:53:56] <johnbender> ok
[10:54:01] <johnbender> it looks like I'm going to do that instead
[10:54:06] <johnbender> luckily I don't think that's a big deal
[10:54:16] <johnbender> in terms of code change
[10:54:21] <johnbender> just need to move the tests around :(
[10:54:34] <Wilto> Who needs tests!
[10:56:13] <Wilto> Just delete those suckers. That’s what I always do.
[11:00:27] <Wilto> Alright, putting the blinders back on. Keep me posted on the general consensus, yeah?
[11:42:28] <jqm-jenkins-bot> Project jqm-master build #494: SUCCESS in 26 min: http://10.59.19.240:8080/job/jqm-master/494/
[11:43:12] <_|Nix|_> Wilto: Thanks for merging my stuff! I will close the PR. OK?
[11:43:25] <Wilto> Oh, yeah, my bad _|Nix|_.
[11:43:33] <Wilto> I always forget to close PRs after manual merges.
[11:43:53] <_|Nix|_> Wilto: NP. It's now closed.
[11:43:57] <Wilto> Thanks, man.
[11:44:45] <_|Nix|_> This is great! Now I can implement on-the-fly options for buttons and select menus.
[11:50:41] <_|Nix|_> Wilto: So, I'm noticing that links are not eligible for re-markup. How come?
[11:51:06] <Wilto> We wouldn’t want to double-wrap the markup, y’know?
[11:51:27] <Wilto> Why would you be looking to re-enhance? Just to refresh the manually-written markup?
[11:51:54] <_|Nix|_> Wilto: I know a guy who wrote an app where, when you click on a button, it loses its corners.
[11:52:06] <_|Nix|_> Wilto: A way to mark a link as visited.
[11:52:19] <_|Nix|_> Wilto: So, he'd ideally call buttonMarkup with corners = false on it.
[11:52:19] <Wilto> Hm.
[11:52:44] <_|Nix|_> I mean it loses its rounded corners.
[11:52:46] <Wilto> So what you’re saying is that double-enhancement would… De-enhance first then re-enhance, basically.
[11:52:59] <johnbender> Wilto: _|Nix|_: just a quick word of warning (late I know) the buttonMarkup plugin is used everywhere so keep performance in mind
[11:53:04] <Wilto> Because before calling enhance again would just append all the same markup all over again.
[11:53:28] <Wilto> Yeah, no doubt. I mean, I’m thinking it would only involve one additional check…
[11:53:52] <Wilto> We have it in there somewhere already, actually. The re-enhancing issue was addressed at one point.
[11:54:15] <Wilto> So instead of returning as it does now, this new logic would kick off.
[11:54:16] <johnbender> Wilto: _|Nix|_: gseguin: the filtering at the top can be fused with the for loop can't it?
[11:54:30] <johnbender> gseguin: the filtering in buttonMarkup
[11:54:42] <johnbender> I'm taking out the enhanceable stuff as a side note
[11:54:51] <johnbender> from buttonMarkup at least
[11:56:10] <Wilto> The workingSet filtering, johnbender?
[11:56:27] <johnbender> Wilto: yes
[11:57:17] <Wilto> Oh, oh, do that in the for loop, you’re saying.
[11:57:18] <johnbender> Wilto: if( el.hasClass("ui-btn") ) { continue; }
[11:57:23] <Wilto> Yeah, I don’t see why not.
[11:57:29] <_|Nix|_> Wilto, johnbender: Upon subsequent calls to buttonMarkup I avoid the creation of new elements.
[11:57:47] <johnbender> _|Nix|_: right, and thats fine, but that plugin is _really_ perf sensitive
[11:58:10] <johnbender> especially for listviews
[11:58:19] <Wilto> True that.
[11:58:46] <_|Nix|_> johnbender: I understand, but it sounds to me like Wilto thinks that I remove the inner diffs and re-create them on every call. Just want to be absolutely sure that it's clear that this is not happening.
[11:58:54] <Wilto> Oh, no no.
[11:59:00] <_|Nix|_> johnbender: Otherwise, all I do is set the .className for the inner elements.
[11:59:01] <Wilto> No, I know that isn’t happening now.
[11:59:07] <johnbender> _|Nix|_: I'm talking about something different
[11:59:13] <Wilto> I think everybody is.
[11:59:15] <johnbender> but I'm glad you're having the discussion at least
[11:59:26] <_|Nix|_> Wilto, johnbender: Sorry, I was rocking the baby to sleep - kinda missed out.
[11:59:32] <johnbender> ah no worries
[11:59:55] <johnbender> _|Nix|_: I was just pointing out, as an example, that we can fust the $workingSet loop in with the for loop below
[12:00:41] <_|Nix|_> johnbender: Yeah - continue on non-enhanceable, I assume, right?
[12:01:34] <johnbender> _|Nix|_: I'm taking that out
[12:02:02] <Wilto> We need to lock Mathias Bynens in a room with jquery.mobile.buttonMarkup.js and check back in a few hours, once he’s got it down to like twenty characters total.
[12:02:29] <johnbender> Wilto: _|Nix|_ and buttonMarkup should return the original set of elements imo.
[12:02:42] <johnbender> not $workingSet
[12:02:47] * johnbender has sided with Wilto
[12:03:04] <johnbender> it's not intuitive that a "widget" helperon $.fn will filter objects from the collection
[12:03:05] <_|Nix|_> johnbender: I never touched the return value.
[12:03:09] <Wilto> Famous last words.
[12:03:47] <_|Nix|_> johnbender: I merely changed the ignore-if-already-enhanced to re-do-the-classes-if-already-enhanced.
[12:04:07] <johnbender> _|Nix|_: yah, I'm just making the note if you guys end up in there working with it
[12:04:13] <johnbender> I made the original change
[12:04:32] <johnbender> ah
[12:04:34] <johnbender> nevermind
[12:04:37] <johnbender> it does return `this`
[12:06:47] <_|Nix|_> johnbender: I still don't get why links are skipped though - the first time you enhance a link it behaves exactly as before. So, if you call buttonMarkup in a tight loop for lots of links, and then you never do it again, then there's no diff from the previous behaviour ...
[12:19:03] <johnbender> _|Nix|_: I don't know enough about the topic to answer your question
[12:19:14] <johnbender> is there an place that it explicitly skips the links in the loop?
[12:19:22] <johnbender> toddmparker_: https://github.com/jquery/jquery-mobile/issues/3154#issuecomment-4027156
[12:19:23] <socialhapy> ★ Issue #3154 on jquery-mobile, reported by jblas (2m, 3w ago): Need a way to tell the framework not to enhance any markup in a specific container
[12:20:32] <toddmparker_> reading johnbender
[12:21:44] <johnbender> toddmparker_: just added an example for clarity
[12:22:09] <_|Nix|_> 	        return !self.eq( i ).hasClass( "ui-btn" );
[12:22:09] <_|Nix|_> 	    });
[12:22:16] <_|Nix|_> Gah! Sorry
[12:23:39] <toddmparker_> that seems to make sense to me but I'd like to have wilto or gseguin or jblas weigh in
[12:24:04] <Wilto> I dunno if I dig the .jqmEnhanceable() thing.
[12:24:06] <_|Nix|_> gseguin: Hey! Just wondering why you added that filter to buttonMarkup that skips over elements that have "ui-btn"?
[12:24:15] <toddmparker_> if this requires that you touch all the plugins, might make sense to post this to BC to get their eyes on it
[12:24:30] <Wilto> I mean, the only time we skip enhancement of something is when the user specifies that something shouldn’t be enhanced, yeah?
[12:24:45] * gseguin catches up
[12:25:09] <toddmparker_> _|Nix|_: I think that was added to prevent buttonMarkup from re-adding the button classes if the element is already enhanced into a button
[12:25:14] <gseguin> hey guys sorry it's hackday here
[12:25:33] <Wilto> At #jquerymobile-dev, every day is hack day.™
[12:25:40] <johnbender> toddmparker_: not all the plugins just the ones that are parents to the $.fn extensions
[12:25:40] <gseguin> :D
[12:25:46] <johnbender> toddmparker_: but I'll post on the button markup
[12:25:56] * johnbender is a hack
[12:25:56] <johnbender> ?
[12:25:58] <gseguin> _|Nix|_: to prevent re-enhancing
[12:26:17] <_|Nix|_> gseguin: But that's the whole point of the PR! To /correctly/ re-enhance!
[12:26:33] <gseguin> _|Nix|_: I didn't read your PR
[12:26:40] <Wilto> Alright, here’s my thinking, johnbender:
[12:26:41] <gseguin> I'm completely out of it today
[12:26:51] <_|Nix|_> gseguin: I remove the old classes first, so, after I'm done, the button looks as though you just created it, but with the options you have passed in.
[12:26:59] <gseguin> I can try to catch up over the weekend
[12:27:09] <Wilto> Adding that intermediary “enhanceable” dealie might just stand to confuse people.
[12:27:57] <Wilto> If they specify something shouldn’t be enhanced but leave that off, it is enhanced anyway. Otherwise, they’re just kind of adding .jqmEnhanceable() to get the behavior they were expecting from the outset, yeah?
[12:28:35] <johnbender> Wilto: the reverse is true though
[12:28:44] <johnbender> Wilto: why isn't my X being enhanced
[12:28:48] <_|Nix|_> gseguin: So, nowadays you can call buttonMarkup any number of times with the same element and different options, and it will not add new divs and stuff and make the button really, really fat. Instead, it will find the divs it created the first time and change their classes to reflect the new set of options.
[12:28:53] <johnbender> it's easier to deal with the problem your describing
[12:28:57] <Wilto> “Cause they said not to,” though, yeah?
[12:29:07] <johnbender> Wilto: in the markup though
[12:29:09] <Wilto> Is there a case where we skip enhancement on something for them?
[12:29:13] <johnbender> which is ancilary to the javascrip
[12:29:17] <gseguin> sorry guys I have to get back to it. Don't hesitate to rollback my changes
[12:29:45] <gseguin> _|Nix|_: that sounds like a good thing, I say rollback my changes if they're in the way
[12:29:54] <gseguin> my logic was plain dumb
[12:30:01] <Wilto> I dunno… Seems like a “doctor it hurts when I do this/well stop doing that” situation.
[12:30:09] <johnbender> Wilto: it is either way though
[12:30:11] <johnbender> lol
[12:30:19] <johnbender> but the way your describing is not obvious when looking at the javascript
[12:30:20] <Wilto> STOP USING THE INTERNET
[12:30:30] <johnbender> only obvious when looking at the markup
[12:30:40] <gseguin> it's the internets that are using me
[12:30:46] <Wilto> Eh, I know, but I feel like that applies to a lot of stuff we’re doing.
[12:30:51] <Wilto> You’re telling me, gseguin.
[12:30:59] <Wilto> johnbender: Don’t get me wrong, I get both sides of it.
[12:31:14] <johnbender> Implicit is only great until it sucks
[12:31:20] <johnbender> and then it _REALLY_ sucks
[12:31:20] <Wilto> I just figure, which bug report would I rather respond to: the one where I explain our reasoning, or the one where I can very literally point to the thing they got wrong.
[12:31:38] * gseguin is signing off and goes back to the code factory
[12:31:48] <Wilto> They plant a flag that says ‘don’t enhance me,’ I don’t lose much sleep when that thing don’t enhance.
[12:32:01] <johnbender> Wilto: what do you mean? "Q: Why did this enhance when I put it in the container? A: you chose to enhance it manually in the javascript your wrote"
[12:32:29] <johnbender> "You called $("foo").mywidget()
[12:32:40] <johnbender> the reverse
[12:32:56] <Wilto> That’s what I’m saying: if they want one thing to enhance inside of a container with no-enhance on it, it shouldn’t enhance.
[12:33:07] <johnbender> "Q: Why didn't this enhance when I called $("foo").mywidget(), A: you put a container around it"
[12:33:35] <Wilto> “It’s in an enhancement-proof box,” yeah.
[12:34:09] <Wilto> They can nonenhance on a per-widget level as well as per-container, yeah?
[12:34:27] <johnbender> It's the indentical issue, except for the fact that when someone will NEVER ask "Q: Why, when I call $("foo").jqmEnhanceable().mywidget(), doesn't it enhance"
[12:34:36] <Wilto> If they have eight things in a div and one should be enhanced, it shouldn’t go on the container. You gotta put that Enhancement Force Field on each thing.
[12:35:21] <Wilto> This bikesheddery is most likely my recent time on the WHATWG list bleeding into my brain.
[12:35:23] <johnbender> Wilto: I guess this is proof it should go on basecamp
[12:35:28] <johnbender> :D
[12:35:31] <johnbender> we agree then :D
[12:35:33] <Wilto> We could just slap that sucker together and see what goes down.
[12:35:37] <johnbender> to the basecamps!
[12:35:42] <Wilto> Doing > Talking, says I.
[12:36:01] <Wilto> That too; sharing with the class can’t hurt. Just saying, don’t put on the brakes on my account.
[12:36:53] <_|Nix|_> OK, so I removed the already-enhanced filter: https://github.com/jquery/jquery-mobile/pull/3604
[12:36:53] <socialhapy> ★ Pull request on jquery-mobile by gabrielschulhof (1m, 52s ago): [buttonMarkup] Correctly re-enhance links
[12:57:43] <johnbender> Wilto: toddmparker_: sent
[12:58:46] <Wilto> I narrowly resisted the urge to respond with “I HAVE STRONG OPINIONS ABOUT THIS.”
[12:58:59] <Wilto> I don’t, honestly—I get either approach.
[13:07:32] <johnbender> Wilto: it's totally a trade off
[13:08:03] <johnbender> I happen to think that the pain of wondering why something isn't enhancing is worse than wondering why something _is_ enhancing
[13:13:57] <Wilto> I like being able to yell at people, me. “LOOK YOU DID THIS YOURSELF.”
[13:14:23] <Wilto> That may be more “critical character flaw” than “approach to development,” however.
[13:17:23] <jqmobilecommit> [jquery-mobile] toddparker pushed 2 new commits to master: http://git.io/heXkPw
[13:17:23] <jqmobilecommit> [jquery-mobile/master] Update docs/toolbars/docs-headers.html - Anne-Gaelle Colom
[13:17:23] <jqmobilecommit> [jquery-mobile/master] Merge pull request #3605 from agcolom/patch-59 - Todd Parker
[13:28:24] <johnbender> toddmparker_: responded
[13:28:40] <toddmparker_> heh
[13:29:04] <johnbender> toddmparker_: :D
[13:29:20] <johnbender> toddmparker_: I won't wait too much longer to just switch it over to the implicit approach
[13:29:34] <johnbender> I don't want to waste too much time
[13:29:39] <toddmparker_> I will admit I'm way over my head here
[13:29:55] <toddmparker_> so what is the level of effort between the two?
[13:30:22] <toddmparker_> if explicit will take a lot more time or add significantly more code...meh
[13:30:48] <toddmparker_> but if you think it's the right way to go and both of those are pretty negligible, I'm good with it
[13:31:03] <toddmparker_> did gseguin have an opinion?
[13:31:32] <Wilto> Yeah, honestly, I never want to be one of those dudes who keeps stuff from getting done by being all “I HAVE OPINIONS.” johnbender, power ahead with whichever way you think is best, honestly.
[13:32:04] <Wilto> Double Honesty Bonus. I’m bad at English.
[13:39:42] <johnbender> toddmparker_: Wilto: alright I'm going to roll with the implicit approach and provide the $.fn.jqmEnhanceable for plugin devs
[13:47:15] <johnbender> toddmparker_: another rinkle lol
[13:47:19] <johnbender> wrinkle
[13:53:22] <toddmparker_> are you ok with that?
[13:53:50] <toddmparker_> i trust your opinion here way more than mine
[13:54:01] <toddmparker_> johnbender ^
[13:56:41] <johnbender> toddmparker_: I'm going to go implicit and we can make it _more_ dev friendly later
[13:56:45] <johnbender> we can't do the reverse
[13:56:47] <johnbender> err
[13:56:49] <johnbender> sorrty
[13:56:54] <johnbender> I'm going to go more explicit
[13:57:04] <johnbender> and we can make it more dev friendly later
[13:57:12] <johnbender> we can't do the reverse
[13:58:47] <Wilto> The $("foo").jqmEnhanceable().mywidget() way, you mean
[13:58:48] <Wilto> ?
[14:00:22] <johnbender> yes
[14:00:35] <johnbender> we can always make mywidget do the check later
[14:00:37] <johnbender> and that won't break
[14:00:46] <Wilto> S’cool with me.
[14:00:47] <johnbender> the reverse is not true
[14:01:29] <Wilto> Ahh, gotcha. Yeah, that makes sense, then.
[14:02:56] <Wilto> Yeah—if that put us in a better position to swap the approaches if people should gripe for whatever reason, I’m into it. Wouldn’t want to end up back-tracking, if we went with the other approach.
[14:06:34] <johnbender> toddmparker_: sorry this is taking so long :(
[14:07:18] <toddmparker_> we're in no rush
[14:07:32] <toddmparker_> trying to figure out the right thing is always good
[14:07:37] <toddmparker_> gotta live withit
[14:08:35] <Wilto> DAMMIT, BENDER
[14:21:51] <Wilto> Is the test suite busted?
[14:28:18] <jqmobilecommit> [jquery-mobile] Wilto pushed 4 new commits to master: http://git.io/iVkWFg
[14:28:18] <jqmobilecommit> [jquery-mobile/master] Fixes #3589 — added percentage-based padding to text inputs within header/footer toolbars. - Mat Marquis
[14:28:18] <jqmobilecommit> [jquery-mobile/master] Fixes #3586 — Scopes set fieldcontain width (25%) in header/footer toolbars to fieldcontains with ui-fieldcontain-left/right classes (the addition of which is still in progress). - Mat Marquis
[14:28:18] <jqmobilecommit> [jquery-mobile/master] Fixes #3580 — Fixes radio/checkbox rendering inside dialogs when not wrapped in fieldcontain. Also addresses some general brokenness for radio/checkboxes in dialogs. - Mat Marquis
[14:28:29] <jq-jenkins> Project jQuery Mobile Latest build #197: FAILURE in 0.82 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/197/
[14:28:44] <Wilto> Screw you, Jenkins.
[14:28:55] <Wilto> I should set up a bot to say that whenever Jenkins pops up.
[14:33:51] <jq-jenkins> Yippie, build fixed!
[14:33:51] <jq-jenkins> Project jQuery Mobile Latest build #198: FIXED in 2 min 6 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/198/
[14:33:52] <jq-jenkins> * mat: Fixes #3589 ��� added percentage-based padding to text inputs within header/footer toolbars.
[14:33:53] <jq-jenkins> * mat: Fixes #3586 ��� Scopes set fieldcontain width (25%) in header/footer toolbars to fieldcontains with ui-fieldcontain-left/right classes (the addition of which is still in progress).
[14:33:53] <jq-jenkins> * mat: Fixes #3580 ��� Fixes radio/checkbox rendering inside dialogs when not wrapped in fieldcontain. Also addresses some general brokenness for radio/checkboxes in dialogs.
[14:33:54] <jq-jenkins> * mat: Fixes #3566 ��� Removes default margin from enhanced selects.
[14:40:41] <Wilto> Jenkins, if you have a problem with emdashes in commit messages, you have a problem with _me_.
[15:46:08] <jqmobilecommit> [jquery-mobile] johnbender pushed 11 new commits to master: http://git.io/zPJ7rw
[15:46:08] <jqmobilecommit> [jquery-mobile/master] switch control group to explicit call site exclusion - John Bender
[15:46:08] <jqmobilecommit> [jquery-mobile/master] defer to explicit jqmEnhanceable calls to respect data-enhance=false - John Bender
[15:46:08] <jqmobilecommit> [jquery-mobile/master] make sure that the navbar's call to grid respects data-enhance false - John Bender
[15:46:17] <johnbender> toddmparker_: Wilto: gseguin: BAM! ^
[15:46:30] <Wilto> I HATE IT I AM QUITTING THIS PROJECT
[15:46:34] <Wilto> ?flip
[15:46:34] <bot-t> (╯‵Д′)╯彡┻━┻
[15:46:37] <johnbender> haha
[15:46:38] <Wilto> ?comboflip
[15:46:38] <bot-t> ┻━┻ ︵ヽ( ` Д ´ )ﾉ︵ ┻━┻
[15:46:42] <johnbender> I used that in my presentation
[15:46:52] <Wilto> Todd still doesn’t see it/
[15:46:57] <johnbender> toddmparker_: should I close the issue after I put the docs in?
