[02:21:28] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #151: STILL FAILING in 19 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/151/
[03:12:33] <jqmobilecommit> [jquery-mobile] uGoMobi pushed 3 new commits to css-corner-styling: http://git.io/SCctTg
[03:12:33] <jqmobilecommit> jquery-mobile/css-corner-styling 07aa6a8 Jasper de Groot: Restored left/right border on list dividers
[03:12:33] <jqmobilecommit> jquery-mobile/css-corner-styling 058aeed Jasper de Groot: Added option corners for dialogs
[03:12:33] <jqmobilecommit> jquery-mobile/css-corner-styling fab9b3f Jasper de Groot: Added option corners and shadow for listviews
[03:40:54] <doesallmagic> Yippie, build fixed!
[03:40:54] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Old build #70: FIXED in 1 hr 19 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Old/70/
[06:33:22] <_|Nix|_> uGoMobi: Ping!
[06:33:32] <uGoMobi> hey _|Nix|_
[06:33:36] <_|Nix|_> Hey!
[06:33:46] <_|Nix|_> So, controlgroup has an option "ignoreInvisible"
[06:33:57] <_|Nix|_> However, with this setup that option is always false.
[06:34:11] <uGoMobi> what is that option about?
[06:35:10] <_|Nix|_> I'm assuming that, when set to false, the first child gets rounded corners even if it's invisible, meaning that the control group will appear to have sharp corners at the top/left.
[06:35:54] <uGoMobi> excludeInvisible
[06:35:57] <_|Nix|_> ... and right now, I believe that the only possible value for the option is false, because the first child always gets the rounded corners, whether it is visible or not.
[06:36:04] <_|Nix|_> Yeah, that, sorry.
[06:36:23] <_|Nix|_> So, we can no longer set excludeInvisible to true ...
[06:36:41] <uGoMobi> first time I hear about that option to be honest
[06:36:47] <_|Nix|_> Well, it's there.
[06:36:55] <_|Nix|_> I think we should remove it.
[06:37:02] <_|Nix|_> ... but that's an API break.
[06:37:08] <_|Nix|_> Some people might be using it.
[06:37:43] <_|Nix|_> I mean, if you hide the first button, what happens to the controlgroup? The top/left corners become sharp, because the first visible child is actually the second child present.
[06:38:21] <_|Nix|_> However, if we keep this option and it's set to true, we need to find a way to give the first /visible/ child rounded corners.
[06:38:37] <_|Nix|_> ... and I dunno if :visible is a HTML5 option ...
[06:39:09] <_|Nix|_> Chapter 12: Danger Looms Once More
[06:39:22] <_|Nix|_> s/HTML5/css/
[06:40:10] <uGoMobi> no it's not in the CSS3 specs as far as I know
[06:41:30] <_|Nix|_> toddmparker: A new wrinkle with controlgroup. It has an option called excludeInvisible. When true, and the first button in the group is hidden, the second button gets the rounded corners. If the first two are hidden, the third gets the rounded corners, etc.
[06:42:02] <_|Nix|_> toddmparker: This is not possible with a purely CSS-based implementation of controlgroup.
[06:42:31] <_|Nix|_> ?tell toddmparker A new wrinkle with controlgroup. It has an option called excludeInvisible. When true, and the first button in the group is hidden, the second button gets the rounded corners. If the first two are hidden, the third gets the rounded corners, etc. This is not possible with a purely CSS-based implementation of controlgroup.
[06:42:32] <bot-t> _|Nix|_, Okay.
[06:46:09] <_|Nix|_> uGoMobi: Personally, I think the simplification is worth sacrificing this option.
[06:46:11] <uGoMobi> _|Nix|_: how did you resolve the no icons for horizontal checkbox/radio controlgroups?
[06:46:38] <uGoMobi> _|Nix|_: yeah I am in favor of deprecate this option
[06:46:39] <_|Nix|_> Wha ... ? There's an issue with that?
[06:46:52] <uGoMobi> no not an issue
[06:47:04] <uGoMobi> but I am made a change to checkboxradio.js
[06:47:31] <uGoMobi> I fixed the problem that you couldn't set option mini programmatically
[06:47:56] <uGoMobi> while doing that I found out checkboxradio also has an option icon position
[06:49:03] <uGoMobi> if you set the iconpos on a horizontal checkbox/radio controlgroup (useless, I know) the text is positioned wrong
[06:49:36] <uGoMobi> so I made a change that set iconpos to undefined is horizontal
[06:49:52] <uGoMobi> so I thought, maybe your fix for that isn't needed anymore
[06:50:10] <_|Nix|_> Wait, where are these changes? On master?
[06:50:21] <uGoMobi> _|Nix|_: I was about to push to master
[06:50:25] <uGoMobi> but....
[06:51:01] <uGoMobi> there is one unit test that checks if iconpos is correct if the data-iconpos is set on the label element ?!?
[06:51:10] <uGoMobi> and that one fails now
[06:51:45] <uGoMobi> the whole iconpos thing isn't documented
[06:52:17] <_|Nix|_> uGoMobi: You can set mini on controlgroup at runtime on master even now ...
[06:52:17] <uGoMobi> so we also never said that you can set a data- attribute on the label element
[06:52:29] <uGoMobi> _|Nix|_: yeah that's great
[06:52:55] <uGoMobi> so I was thinking about deleleting that test
[06:53:28] <uGoMobi> but first want to find out why that use to work, but doesn't work with my changes
[06:53:29] <_|Nix|_> uGoMobi: Sorry. I just woke up. You're talking about checkboxradio ...
[06:53:36] <uGoMobi> _|Nix|_: yes
[06:54:37] <uGoMobi> <input type="checkbox" name="bottomicon" id="bottomicon" class="custom" />
[06:54:37] <uGoMobi> 		<label for="bottomicon" data-nstest-iconpos="bottom">I agree</label>
[06:55:19] <uGoMobi> the test checks if this ^^^ results in the correct class ui-btn-icon-bottom
[06:56:12] <_|Nix|_> I don't get it. If the text is positioned wrong, why not just fix the position of the text?
[06:56:17] * _|Nix|_ is still confused ...
[06:56:29] <uGoMobi> sorry
[06:56:43] <uGoMobi> was talking about two different things
[06:57:08] <uGoMobi> first about the text positioning...
[06:59:01] <uGoMobi> if you set iconpos to "right" for checkboxradio in a horizontal controlgroup there is no icon visible but the text will be positioned according to .ui-btn-icon-right and that's wrong
[06:59:43] <_|Nix|_> Really, weird ...
[06:59:58] <_|Nix|_> That's in css-corner-styling?
[07:00:17] <uGoMobi> no, on master
[07:00:23] <uGoMobi> _|Nix|_: it's simple to fix
[07:00:45] <uGoMobi> I already did that, but can't push because one test fails
[07:01:01] <uGoMobi> and that's the second thing I was talking about
[07:01:36] <_|Nix|_> But why is the icon not visible? Was it visible before I made the changes to controlgroup?
[07:02:30] <uGoMobi> ah wait, you added this to checkboxradio.js.... icon = input.parents( ":jqmData(type='horizontal')" ).length ? undefined : uncheckedState,
[07:02:57] <_|Nix|_> uGoMobi: That's right. Icon
[07:03:11] <uGoMobi> the icon is not supposed to be visible, so you fixed that with that line
[07:03:21] <_|Nix|_> uGoMobi: Yeah, the checkbox icon is not supposed to be visible.
[07:03:24] <uGoMobi> and I copied that line for iconpos
[07:03:34] <uGoMobi> iconpos = input.parents( ":jqmData(type='horizontal')" ).length ? undefined : inheritAttr( input, "iconpos" ) || o.iconpos,
[07:05:01] <_|Nix|_> uGoMobi: The funny thing is, this doesn't work dynamically.
[07:05:21] <_|Nix|_> uGoMobi: So, if I change the value of the option later, it will be incorrect.
[07:06:16] <uGoMobi> hmm
[07:06:35] <_|Nix|_> On tests/functional/controlgroup.html: Checkbox, Prepend, Prepend, Prepend, Horizontal
[07:07:02] <_|Nix|_> Bam ... horizontal control group where checkboxes have icons.
[07:07:15] <_|Nix|_> On-the-fly options have lots of implications.
[07:08:08] <_|Nix|_> OTOH, when you set the option, I could go through the children and make sure checkboxes don't have icons ...
[07:08:49] <_|Nix|_> What we need though is an option for checkbox to show an icon or not.
[07:09:11] <_|Nix|_> So checkboxradio needs an option like "iconvisible" ...
[07:09:39] <frequent> uGoMobi: <_|Nix|_>: controlgroups are a drag... Curious to see how you do this CSS only.
[07:10:03] <_|Nix|_> OTOH, I could change checkboxradio to accept icon=true/false and then, when set to false, it removes the icon, and when set to true, it calculates which icon to show.
[07:10:08] <uGoMobi> frequent: see branch css-corner-styling
[07:10:11] <_|Nix|_> frequent: So much for css-only.
[07:10:53] <uGoMobi> _|Nix|_: I am not sure if iconpos needs to be an on-the-fly option
[07:11:05] <_|Nix|_> uGoMobi: Not talking about iconpos.
[07:11:11] <_|Nix|_> uGoMobi: Talking about icon.
[07:11:27] <_|Nix|_> uGoMobi: If you have checkboxes inside a vertical controlgroup, they have icons.
[07:11:30] <frequent> I just wrote a custom script that skins all corners when the controlgroups loads and re-ads corners after I added/removed buttons. Just to much hassle with invisble/added/removed buttons :-) . Branch-Checking...
[07:11:50] <uGoMobi> _|Nix|_: yes
[07:11:51] <_|Nix|_> frequent: I did the same a while back.
[07:11:56] <_|Nix|_> frequent: It's on master.
[07:12:25] <frequent> I'm still on 1.1. Afraid to upgrade my application...
[07:12:43] <_|Nix|_> uGoMobi: ... but if you then convert the vertical controlgroup into a horizontal control group, the icons are supposed to disappear, but they don't.
[07:13:01] <_|Nix|_> uGoMobi: They don't disappear, because the check as to whether to display an icon or not is only made during _create.
[07:13:18] <uGoMobi> _|Nix|_: ok I get it
[07:13:24] <_|Nix|_> uGoMobi: ... and the checkboxradio receives no information about when the controlgroup turns into a horizontal one.
[07:14:52] <_|Nix|_> uGoMobi: But, there is a solution. Since setting an initially vertical controlgroup to a horizontal one requires one to run JS code (.controlgroup( "option", "type", "horizontal" )), we can take that opportunity to tell all the checkboxradio widgets to show/hide their icons.
[07:15:48] <_|Nix|_> uGoMobi: Of course, a CSS-based solution would still be better, because, if I create a checkboxradio and then I insert it into a horizontal controlgroup, it will have an icon.
[07:16:14] <_|Nix|_> uGoMobi: The question is, do we want to handle all these corner cases?
[07:16:33] <uGoMobi> _|Nix|_: we could also do this with CSS... .ui-controlgroup-horizontal .ui-icon-selector(s) { display: none; }
[07:16:35] <uGoMobi> :)
[07:16:59] <_|Nix|_> uGoMobi: Yeah, but we don't want to turn off button icons, only checkboxradio icons.
[07:17:26] <_|Nix|_> uGoMobi: Things like ui-icon-grid, ui-icon-icon-arrow-d or whatever are supposed to still work.
[07:17:35] <uGoMobi> .ui-controlgroup .ui-radio/checkbox ...
[07:17:43] <_|Nix|_> uGoMobi: OK. Bring it on.
[07:18:20] <uGoMobi> but there would still be a problem with iconpos... but I can probably negate that with CSS
[07:18:45] <_|Nix|_> uGoMobi: I agree.
[07:20:04] <_|Nix|_> uGoMobi: I think a generic problem with our widget code is that it does too many things during _create(). It would be better if _create() would simply create and arrange the divs, hook up the event listeners, and call _setOption() for every widget option. Then, the options will be honoured in the right place.
[07:20:56] <_|Nix|_> uGoMobi: The only disadvantage is that, if one option depends on another, you have a problem with the order in which you have to set the initial options.
[07:21:50] <_|Nix|_> uGoMobi: To fix this problem, we could give every widget an internal (not public) refresh method, which would be run once during _create() and then again whenever someone calls _setOption().
[07:22:33] <arschmitz> Morning _|Nix|_: uGoMobi:
[07:22:34] <uGoMobi> _|Nix|_: yes I am in favor of using _setOption()
[07:22:40] <uGoMobi> morning arschmitz
[07:22:43] <_|Nix|_> Hey!
[07:23:32] <uGoMobi> _|Nix|_: right now we aren't consistent between widgets in how we handle options
[07:23:40] <_|Nix|_> uGoMobi: Of course, interdependencies like hide-checkboxradio-icon-whenever-controlgroup-is-horizontal would still be best expressed in CSS, I think.
[07:24:49] <uGoMobi> _|Nix|_: I removed my fix for the iconpos issue and will just push my fix for the option mini problem
[07:24:55] <arschmitz> uGoMobi: i know your in the middle of stuff right now with _|Nix|_ but when you have a few minutes i finally sent the pull request for the workarounds extension if you can take another look to make sure nothing crazy jumps out (I think everyone already looked and approved last week) and merge that for me it would be super lol!
[07:25:09] <uGoMobi> going to work on CSS solution for horizontal checkbox/radio controlgroups
[07:25:23] <_|Nix|_> uGoMobi: Awesome!
[07:25:34] <_|Nix|_> uGoMobi: You can test with tests/functional/controlgroup.html
[07:26:54] <jqmobilecommit> [jquery-mobile] uGoMobi pushed 3 new commits to master: http://git.io/PPPwOg
[07:26:55] <jqmobilecommit> jquery-mobile/master 827bec3 Jasper de Groot: Textinput: Allow to set option mini programmatically. Fixes #4070.
[07:26:55] <jqmobilecommit> jquery-mobile/master 6e1194b Jasper de Groot: Added checkbox and Radio buttons demo page
[07:26:55] <jqmobilecommit> jquery-mobile/master c7dd675 Jasper de Groot: Checkboxradio: Allow to set option mini programmatically. Fixes #4070.
[07:28:03] <uGoMobi> _|Nix|_: in what branch shall I work on the CSS solution for horizontal checkbox/radio controlgroups
[07:28:18] <kpepin> I won't be around for the meeting today at 2PM due to a conflict here at work, but I'll keep my chat client running and review everything later.
[07:28:49] <uGoMobi> toddmparker: ^^^
[07:28:58] <uGoMobi> hey kpepin !
[07:29:40] <uGoMobi> arschmitz: sure will take a look
[07:29:47] <_|Nix|_> uGoMobi: Up to you ...
[07:29:58] <uGoMobi> arschmitz: let's ask johnbender to take a look too
[07:30:00] <_|Nix|_> uGoMobi: But it should probably be off css-corner-styling ...
[07:30:16] <uGoMobi> and make sure we push the green merge button before the end of the day :)
[07:30:36] <uGoMobi> _|Nix|_: yeah thought so too
[07:30:44] <arschmitz> Cool yeah cant be too carefull even though everyone checked already id hate to break anything
[07:31:24] <arschmitz> kpepin: The meeting notes and channel are always logged too
[07:33:25] <_|Nix|_> arschmitz: Are you sure you want to add the workarounds to index.php? That means it will be included for sure.
[07:33:36] <_|Nix|_> arschmitz: Including the workaround should be optional.
[07:34:16] <arschmitz> Toddparker: decided he wanted it by default because of android 2.3
[07:34:18] <_|Nix|_> arschmitz: Otherwise, looks good.
[07:34:24] <_|Nix|_> arschmitz: Oh, OK.
[07:34:43] <arschmitz> _|Nix|_: and give the option to exclude in build
[07:35:35] <arschmitz> _|Nix|_: Kinda sucks to include workarounds by default but 2.3 is just too big still not to over 80% :(
[07:35:45] <_|Nix|_> arschmitz: So, how do you tell the download builder that, although fixedToolbar does not depend on the workaround, the workaround should be included by default whenever someone chooses fixedToolbar?
[07:36:17] <_|Nix|_> arschmitz: Debian has a fiekd for this: "Recommends"
[07:36:23] <_|Nix|_> s/fiekd/field/
[07:37:01] <arschmitz> _|Nix|_: i dont really know the download builder well but i **Belive if i did it right its in the meta for the builder at the top of the file that it depends on fixedToolbar
[07:37:06] <arschmitz> now i need to check lol
[07:38:31] <_|Nix|_> arschmitz: That's fine. But, if the workarounds are to be included by default, the workaround must also depend on fixedToolbar - resulting in a circular dependency.
[07:39:14] <_|Nix|_> arschmitz: Sorry, I meant fixedToolbar must depend on workaround, resulting in the circular dep.
[07:39:24] <arschmitz> _|Nix|_: just because its a default dosent make it a dependiency does it?
[07:39:32] <arschmitz> ack spelling
[07:39:44] <_|Nix|_> arschmitz: Well, no, but what does it make it then? A recommendation ...
[07:40:29] <arschmitz> _|Nix|_: essentially because in the builder you can include or exclude what ever pieces you want
[07:40:41] <_|Nix|_> arschmitz: I dunno if it would be possible to add metadata to the top of fixedToolbar to make that recommendation for the workaround.
[07:40:46] <arschmitz> _|Nix|_: i think we need someone that knows more about the builder then me!
[07:40:57] <_|Nix|_> gseguin: Ping!
[07:42:16] <uGoMobi> arschmitz: the PR looks good to me. Really nice work!!
[07:42:33] <gseguin> _|Nix|_: pong
[07:42:33] <arschmitz> _|Nix|_: i tried to follow johnbenders: instructions for the meta for the builder but may have messed it up
[07:43:16] <arschmitz> gseguin: Hi needs some builder help lol
[07:43:19] <gseguin> what's going on? I didn't do it, it wasn't me
[07:43:25] <_|Nix|_> gseguin: We wish to express in the download builder that whenever someone chooses fixedToolbar, they should also choose the fixed toolbar workaround from PR#5260, but the workaround depends on fixedToolbar.
[07:43:34] <gseguin> oh that, yeah maybe I can help with that
[07:43:50] <toddmparker> Good morning
[07:43:50] <bot-t> (1 hour 1 min 10 secs ago) <_|Nix|_> tell toddmparker A new wrinkle with controlgroup. It has an option called excludeInvisible. When true, and the first button in the group is hidden, the second button gets the rounded corners. If the first two are hidden, the third gets the rounded corners, etc. This is not possible with a purely CSS-based implementation of controlgroup.
[07:43:53] <_|Nix|_> gseguin: So, short of a circular dependency, what can we do?
[07:43:58] <arschmitz> well its optional when they chose fixedtoolbars
[07:44:13] <arschmitz> but if they chose the workaround fixedtoolbars MUST be included
[07:44:14] <_|Nix|_> arschmitz: Right, but toddmparker wanted it included by default.
[07:44:20] <arschmitz> right
[07:44:28] <_|Nix|_> arschmitz: That part is easy, because it has a dependency.
[07:44:35] <arschmitz> right
[07:44:46] <gseguin> ah, not really handled
[07:44:54] <arschmitz> im not nearly familier enough with the builder
[07:44:55] <gseguin> could put a comment in the description
[07:45:22] <arschmitz> toddmparker: thoughts here?
[07:45:26] <_|Nix|_> gseguin: Good point.
[07:45:35] <arschmitz> and Goomorning
[07:45:53] <arschmitz> good morning i cant type this morning!
[07:48:26] <uGoMobi> have to figure out what time the meeting is today... arschmitz what's the time at your place now?
[07:49:37] <arschmitz> we are back to normal
[07:49:45] <arschmitz> so its 10:49
[07:49:48] <arschmitz> now
[07:50:14] <arschmitz> uGoMobi: so meeting time should be back to normal for you
[07:50:18] <toddmparker> catching back up arschmitz, looks of conversation!
[07:50:40] <uGoMobi> arschmitz: ok so meeting is in 3 hours
[07:50:43] <uGoMobi> thanks
[07:50:44] <uGoMobi> :)
[07:50:47] <arschmitz> toddmparker: no problem its not a rush
[07:50:59] <arschmitz> uGoMobi: yup and no problem
[07:51:45] <toddmparker> Re: ignoreInvisible, that was an artifact of the JS base classes, I'm fine with dropping that in 1.3. Just add it to the release notes.
[07:51:58] <_|Nix|_> toddmparker: Nice!
[07:52:02] <uGoMobi> _:)
[07:52:03] <_|Nix|_> Consider it done.
[07:52:29] <gseguin> _|Nix|_: so is putting a recommendation in the description enough?
[07:52:44] <uGoMobi> I will add it to 1.3 release notes wiki page
[07:52:56] <_|Nix|_> gseguin: I think so. Maybe in ALL CAPS, just to drive the point home.
[07:52:58] <_|Nix|_> arschmitz: ^
[07:53:08] <gseguin> k
[07:53:10] <arschmitz> Im good with that
[07:53:41] <gseguin> alright
[07:53:49] <gseguin> arschmitz: you know where to edit that?
[07:54:37] <arschmitz> gseguin: I think so but im really unfamilier with the builder so id love to know lol
[07:55:05] <gseguin> in the header of each source files there are comments that start with //>>
[07:55:17] <gseguin> these are meta data markers for the builder
[07:55:46] <arschmitz> gseguin: yeah ok thats what i thoughti had made the ones for it already ill just add that too it Thank you
[07:55:56] <gseguin> ```//>>description:``` will end up in the description field
[07:56:10] <gseguin> you're welcome
[07:57:14] <arschmitz> _|Nix|_: "Browser specific workarounds for "fixed" headers and footers HIGHLY recommend if supporting Android 2.x or iOS 5" ?
[07:57:29] <arschmitz> _|Nix|_: sound good to you?
[07:57:37] <_|Nix|_> Browser-specific
[07:57:50] <arschmitz> ok
[07:58:22] <_|Nix|_> arschmitz: Sure, as long as 'Browser-specific workarounds for "fixed" headers and footers' is the description of your source file.
[07:58:51] <_|Nix|_> arschmitz: That way, you're doing an ln -s in English :)
[07:59:25] <arschmitz> _|Nix|_ : lol ok
[08:00:37] <_|Nix|_> toddmparker: If we drop that option, and people hide the first button in their controlgroup, the top/left corners of the controlgroup will be sharp.
[08:01:32] <_|Nix|_> toddmparker: So, people can no longer show/hide first/last buttons in their controlgroups.
[08:01:40] <_|Nix|_> toddmparker: Thus spake the unit tests.
[08:02:35] <_|Nix|_> toddmparker: Do we care? Do we just tell people "well sorry, buddy, just remove the button, or move it elsewhere in the DOM, or something".
[08:02:58] <uGoMobi> _|Nix|_: did you remove option "excludeInvisible" in css-corner-styling branch?
[08:04:13] <uGoMobi> _|Nix|_: I suggest put a small note in the 1.3 change log about dropping this option, below the announcement of Controlgroup is now a widget
[08:10:55] <toddmparker> _|Nix|_ and uGoMobi - if we hide the first list item, the first child selector won't catch and add corners to the second li - is that the issue?
[08:11:34] <toddmparker> are we hiding with display: none;
[08:11:59] <_|Nix|_> toddmparker: That is the issue.
[08:12:30] <_|Nix|_> uGoMobi: I have made the change on master, and I will push it and merge the change into css-corner-styling.
[08:12:46] <_|Nix|_> uGoMobi: However, the unit tests have uncovered the problem of sharp corners.
[08:12:56] <_|Nix|_> So, I cannot push/merge just yet.
[08:13:08] <_|Nix|_> We need to decide how we're going to address the problem.
[08:13:21] <uGoMobi> right
[08:13:28] <_|Nix|_> toddmparker: In the unit tests, we are hiding with .hide()
[08:13:57] <uGoMobi> one solution is to remove the unit test :)
[08:14:02] <_|Nix|_> toddmparker: ... and in the existing code, which I removed, we were filtering via ":visible".
[08:14:29] <_|Nix|_> uGoMobi: Clearly, but we still need to decide about what we do.
[08:14:39] <uGoMobi> as long as the element is in the code the browser will see it as :first-child
[08:15:18] <toddmparker> uGoMobi: right, so the corners won't work with the filter using CSS
[08:15:28] <toddmparker> unless we can figure out a better selector
[08:16:10] <toddmparker> could we write a selector to say find the first item that doesn't have the hidden class
[08:16:28] <uGoMobi> :visible isn't a CSS selector, can't really think of a way to do this without JS
[08:16:45] <toddmparker> but the hidden ones have a class, right?
[08:16:59] <uGoMobi> no, not that I know  of
[08:17:30] <_|Nix|_> toddmparker: There are many ways to hide things.
[08:17:36] <uGoMobi> this is about someone setting diplay: none for a button in a controlgroup
[08:18:16] <_|Nix|_> uGoMobi: In particular, for the first/last button in a controlgroup.
[08:18:22] <uGoMobi> we used jQuery's :visible selector to detect
[08:18:29] <uGoMobi> _|Nix|_: yes
[08:18:38] <toddmparker> ui-screen-hidden is added to each hidden LI
[08:19:24] <_|Nix|_> toddmparker: We could recommend that people hide things inside a controlgroup a certain way.
[08:19:33] <toddmparker> are we talking about list views or control groups?
[08:19:38] <_|Nix|_> toddmparker: We might even provide a .hide() method ..
[08:19:46] <toddmparker> seems like we have 2 different scenarios
[08:19:50] <_|Nix|_> toddmparker: .controlgroup( "hide", childIndex )
[08:19:51] <uGoMobi> yes the listview.filter widget adds class ui-screen-hidden
[08:20:05] <toddmparker> ok, so let's look at that first
[08:21:04] <_|Nix|_> Of course, then we also need a .controlgroup( "show", idx ) method as well ...
[08:23:49] <_|Nix|_> uGoMobi: OK, so, assuming the showing/hiding of widgets is under our control, is there some class we can apply to a button to both hide it and help the CSS identify the correct first child?
[08:24:06] <toddmparker> Wilto is looking to see if we could find a selector for list views, but that seems tricky.
[08:24:17] <toddmparker> We may need to use JS for the filter
[08:24:35] <toddmparker> _|Nix|_: that's the goal
[08:24:42] <toddmparker> css is a fickle beast
[08:25:09] <_|Nix|_> toddmparker: They should just make it Turing-complete and be done with it.
[08:25:15] <uGoMobi> .ui-screen-hidden:first-child + .ui-li should fix it for listviews
[08:26:02] <uGoMobi> that selects the the ui-li directly after the the hidden li that is the original first child
[08:26:19] <uGoMobi> toddmparker: ^^
[08:26:20] <_|Nix|_> uGoMobi: What if the first 19 children are hidden?
[08:26:43] <uGoMobi> hmm
[08:29:07] <toddmparker> uGoMobi: cool, that is similar to what Wilto was tinkering with
[08:29:46] <uGoMobi> _|Nix|_: I think it should work
[08:30:01] <_|Nix|_> uGoMobi: Let's do it then.
[08:30:06] <uGoMobi> oh wait
[08:30:13] <uGoMobi> nono too soon
[08:30:15] <toddmparker> yessss
[08:30:17] <uGoMobi> :)
[08:32:12] <arschmitz> uGoMobi: i put us back over 300 issues :(
[08:32:34] <uGoMobi> arschmitz: no problem if you fix them as well  ;-)
[08:32:41] <arschmitz> i did!
[08:33:20] <arschmitz> uGoMobi: if we merge those 2 prs i just did it will put us down to 295 :)
[08:33:53] <uGoMobi> arschmitz: oh yeahhh!! :D
[08:33:58] <_|Nix|_> uGoMobi: http://jsbin.com/egozad/1/edit
[08:34:05] <_|Nix|_> toddmparker: ^
[08:34:07] <_|Nix|_> Wilto: ^
[08:34:34] <Wilto> Yeah; messing with http://codepen.io/Wilto/pen/cqAnm
[08:38:26] <Wilto> I don’t think it’s gonna be doable on the last item, is all.
[08:38:50] <Wilto> Ain’t no “previous” selector.
[08:41:54] <_|Nix|_> WTF?! No difference between + and ~
[08:42:07] <uGoMobi> how about doing it the other way round... corners on all LI's and unset it
[08:43:06] <uGoMobi> you can select the last one by ui-li:last-child, ui-li + ui-screen-hidden:last-child
[08:43:30] <uGoMobi> and while I type I realize it ain't working if multiple ui-li's are hidden at the end
[08:43:31] <Wilto> ~ will target every sibling.
[08:43:59] <uGoMobi> _|Nix|_: http://www.w3.org/TR/selectors/#selectors
[08:45:54] <_|Nix|_> uGoMobi: "corners on all LI's and unset it" unset what?
[08:46:37] <uGoMobi> _|Nix|_: sorry, set border-radius 0 for li's that shouldn't get corners
[08:46:46] <uGoMobi> but forget about that
[08:47:20] <uGoMobi> was a bit to eager to come up with the winning CSS-only solution ;-)
[08:49:11] <Wilto> No dice, I’m afraid.
[08:53:52] <_|Nix|_> OK, so ... refresh()?
[08:54:09] <_|Nix|_> ... or do we document that items-to-be-hidden should now be removed?
[08:54:43] <_|Nix|_> Does .hide() cause things to emit signals?
[08:56:02] <_|Nix|_> ... but forget it ... refresh() would mean having to re-introduce ui-corner-left/right/top/bottom ...
[08:56:59] <_|Nix|_> So, in css-corner-styling we've completely lost the ability to hide things ... ?
[08:57:21] <uGoMobi> _|Nix|_: for listview filter we need to fix it in the JS (after we gave up on CSS-only)
[08:57:28] <gseguin> JasonDScott: ping
[08:57:37] <_|Nix|_> uGoMobi: But if we fix it in the JS, we'll need the corner classes again.
[08:57:54] <_|Nix|_> uGoMobi: Unless you wanna add the corner inheritance via inline style.
[09:05:14] <uGoMobi> _|Nix|_: no, we would only have the JS add a class like .ui-fix-for-listview-filter-corner-styling to the first visible list item
[09:05:25] <uGoMobi> and we add that to the selectors in the CSS
[09:05:37] <uGoMobi> same for the last visible item
[09:08:19] <_|Nix|_> uGoMobi: OK. That's much like ui-controlgroup-last ....
[09:08:32] <uGoMobi> _|Nix|_: yes
[09:08:51] <_|Nix|_> How come we didn't need ui-controlgroup-first before?
[09:10:41] <_|Nix|_> Oh, right ... we needed it for the border.
[09:10:43] <_|Nix|_> Nevermind.
[09:10:46] <uGoMobi> probably because the function that added the corner classes was looking for the first visible itm
[09:10:48] <_|Nix|_> The corners were done by hand.
[09:10:58] <uGoMobi> s/itm/item
[09:11:03] <_|Nix|_> uGoMobi: OK, got it.
[09:11:57] <_|Nix|_> uGoMobi: OK, so, we add the refresh() back in, and we might as well add the option excludeInvisible back in ...
[09:12:22] <_|Nix|_> uGoMobi: We're gonna need both a .ui-controlgroup-first and .ui-controlgroup-last class now, right?
[09:12:37] <_|Nix|_> uGoMobi: ... to replace :first-child and :last-child ...
[09:13:37] <uGoMobi> _|Nix|_: yes
[09:14:09] <uGoMobi> maybe use .ui-first-child and .ui-last-child
[09:14:20] <uGoMobi> we can use same for listview filter
[09:14:26] <_|Nix|_> uGoMobi: Yeah, I guess they're widget-independent.
[09:14:45] <_|Nix|_> uGoMobi: ... and what about collapsible? I guess we need this there too, right?
[09:15:05] <uGoMobi> _|Nix|_: I was thinking about that too
[09:15:21] <uGoMobi> do people show/hide a collapsible in a collapsible set?
[09:15:40] <_|Nix|_> uGoMobi: They surely might.
[09:15:46] <uGoMobi> :(
[09:15:52] <_|Nix|_> uGoMobi: If it can be done, it will be done.
[09:16:09] <uGoMobi> yeah that makes me sad sometimes
[09:16:25] <_|Nix|_> LOL :)
[09:27:28] <toddmparker> sorry i dropped off…meeting
[09:28:07] <_|Nix|_> NP.
[09:30:51] <toddmparker> so seems like we have a list view plan by tacking on a class. nice thing is this can just be for the filter plugin, not the core list view?
[09:31:12] <toddmparker> so what other widgets need touch up?
[09:31:22] <toddmparker> do we have a jsbin showing the issue?
[09:31:50] <_|Nix|_> toddmparker: I think we need this for the core listview.
[09:31:53] <uGoMobi> I give up on CSS-only fix... like Wilto said, no way to do this for the last item http://jsbin.com/egozad/2/edit
[09:31:56] <_|Nix|_> toddmparker: I mean, people can hide list items.
[09:32:34] <toddmparker> but we don't explicitly support hiding via the list view api, right?
[09:32:57] <toddmparker> could we just document how to work with the classes we use for the filter?
[09:33:11] <uGoMobi> toddmparker: I know that we mention in the docs that you should use class "ui-screen-hidden" if you want to hide anything in a list
[09:33:17] <toddmparker> working towards parity with current functionality, just ail less code
[09:33:29] <toddmparker> i see
[09:33:57] <uGoMobi> toddmparker: see bottom of this page http://jquerymobile.com/test/docs/lists/docs-lists.html
[09:34:01] <toddmparker> so the idea is to have the code to tack on the class for first and last visible LI as part of listview
[09:34:33] <ryanneufeld> toddmparker were you able to find any code you could share w/ me?
[09:34:39] <uGoMobi> yeah but same problem for controlgroups and collapsible sets if people hide items
[09:34:49] <_|Nix|_> uGoMobi: OK, so the code is in place. Pushing ...
[09:35:01] <toddmparker> if we need to use JS for these classes, it's still lighter than what we do currently?
[09:35:10] <uGoMobi> _|Nix|_: ok.... (I cry inside)
[09:35:25] <_|Nix|_> C'est la vie!
[09:35:29] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 2 new commits to css-corner-styling: http://git.io/axLJbQ
[09:35:29] <jqmobilecommit> jquery-mobile/css-corner-styling dab9bf9 Gabriel Schulhof: [controlgroup] Re-introduce refresh() method, to mark first and last visible child
[09:35:29] <jqmobilecommit> jquery-mobile/css-corner-styling 263e908 Gabriel Schulhof: [controlgroup functional test] Add option to hide instead of removing
[09:36:14] <_|Nix|_> uGoMobi: Probably need to do the same for listview and collapsibleSet ...
[09:36:20] <uGoMobi> toddmparker: yes it is still much lighter
[09:36:24] <_|Nix|_> uGoMobi: Did listview even have a refresh method?
[09:36:31] <uGoMobi> _|Nix|_: yes
[09:36:47] <toddmparker> _|Nix|_:
[09:36:49] <toddmparker> http://jquerymobile.com/test/docs/lists/lists-methods.html
[09:36:54] <uGoMobi> the refresh method called the function that handled the corner styling
[09:37:19] <_|Nix|_> uGoMobi: OK, well, we don't need that big of a method anymore.
[09:37:46] <_|Nix|_> uGoMobi: We can probably do what we do in controlgroup.
[09:37:46] <toddmparker> all this does is update those two classes, right?
[09:37:53] <_|Nix|_> toddmparker: Yep.
[09:38:17] <_|Nix|_> toddmparker: But it does need to assemble a jQuery object with all the children, and then filter out the invisible ones.
[09:38:33] <toddmparker> so in the end, did we end up simplifying?
[09:38:41] <uGoMobi> _|Nix|_: I will revert the border bottom on last item in the CSS
[09:39:07] <uGoMobi> toddmparker: oh yes
[09:39:21] <uGoMobi> like with collapsible set I could delete half the code
[09:39:37] <uGoMobi> (and it is still working ;-) )
[09:40:36] <_|Nix|_> toddmparker: Yeah, we still got rid of a lot of code, just not as much as we'd hoped.
[09:40:56] <_|Nix|_> toddmparker: It can't be done entirely in CSS.
[09:42:02] <_|Nix|_> Yikes ... I dunno enough about listviews to make the change.
[09:47:30] <toddmparker> _|Nix|_:
[09:47:33] <toddmparker> right
[09:47:48] <toddmparker> _|Nix|_:
[09:48:12] <toddmparker> Do you need another set of eyes on those changes? maybe uGoMobi or Wilto can help out
[09:48:47] <uGoMobi> I can make the change for listview
[09:50:02] <uGoMobi> _|Nix|_: was looking at the change in controlgroup
[09:51:03] <uGoMobi> if ( !create ...
[09:51:42] <_|Nix|_> uGoMobi: Yeah. During _create(), all children are invisible, so if you use the :visible filter it will return nothing.
[09:51:43] <uGoMobi> doesn't that mean we don't check for hidden items at all when the controlgroup is created
[09:51:55] <_|Nix|_> uGoMobi: No, because all items are hidden.
[09:52:07] <uGoMobi> _|Nix|_: I see
[09:52:26] <_|Nix|_> uGoMobi: This also means we can't have items that are initially hidden.
[09:52:29] <uGoMobi> but what if I create a controlgroup with one hidden button at the beginning or end?
[09:52:38] <_|Nix|_> uGoMobi: ^
[09:52:43] <uGoMobi> yes, that's what I noticed
[09:52:49] <_|Nix|_> *shrug*
[09:53:22] <_|Nix|_> uGoMobi: collapsible is also gonna have to do this pattern of if ( !create ) ...
[09:53:29] <_|Nix|_> uGoMobi:  ... and listview ...
[09:53:57] <uGoMobi> listview with filter has an option filterReveal to hide all items on init
[09:54:30] <uGoMobi> so that would be problematic
[09:55:33] <_|Nix|_> uGoMobi: Nono.
[09:55:52] <_|Nix|_> The classes ui-first-child and ui-last-child will be applied whether or not the items are visible.
[09:56:10] <_|Nix|_> uGoMobi: ... but their application will not affect whether or not the items are visible thereafter.
[09:56:36] <_|Nix|_> uGoMobi: ... and if all items are invisible, it doesn't really matter which one is marked ui-first-child and which one is marked ui-last-child.
[09:57:04] <_|Nix|_> uGoMobi: ... and when the filter is used, some items will become visible, the listview will refresh, and ui-first-child and ui-last-child will be re-applied correctly.
[09:57:09] <uGoMobi> right, and refresh is called as soon as you start typing
[09:57:16] <_|Nix|_> uGoMobi: Exactly.
[09:57:19] <uGoMobi> k
[09:58:38] <_|Nix|_> uGoMobi: For controlgroup and collapsible I'm applying this pattern: _create: function() { ... this._refresh( true ); }, _refresh: function( create ) { /* the real work */ }, refresh: function() { this._refresh( false ); }
[09:58:58] <_|Nix|_> uGoMobi: That way we don't have a public refresh function that takes parameters intended for private use.
[09:59:15] <_|Nix|_> uGoMobi: I dunno if listview can be modified to be like that.
[10:00:25] <_|Nix|_> uGoMobi: The alternative is to do _create: function() { ...; this._insideCreate = true; ... }, refresh: function() { if ( this._insideCreate ) { this._insideCreate = false; /* do some work */ } /* continue as normal */ }
[10:05:58] <_|Nix|_> uGoMobi: OK, there it is for collapsible.
[10:06:06] <_|Nix|_> uGoMobi: Pushed, I mean.
[10:06:07] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 2 new commits to css-corner-styling: http://git.io/ia9ykg
[10:06:07] <jqmobilecommit> jquery-mobile/css-corner-styling 4d22d47 Gabriel Schulhof: [collapsibleset] Maintain ui-first-child and ui-last-child during refresh()
[10:06:07] <jqmobilecommit> jquery-mobile/css-corner-styling 6b8d322 Gabriel Schulhof: [listview] Whitespace
[10:06:41] <uGoMobi> _|Nix|_: to be honest I am still thinking very hard how we can avoid all this
[10:08:07] <_|Nix|_> uGoMobi: Good. Very good. However, let's have working code in the meantime, even if less elegant.
[10:08:24] <_|Nix|_> uGoMobi: It'd be nice if parents were notified whenever their children become invisible.
[10:08:24] <uGoMobi> _|Nix|_: yes you're right
[10:08:42] <_|Nix|_> uGoMobi: ... but there's no good way.
[10:08:57] <toddmparker> I really wish there was a better way...
[10:09:11] <toddmparker> if we're 100% CSS, no need for refreshing
[10:09:13] <uGoMobi> I think it would be nice if :visible would be a CSS selector
[10:09:26] <toddmparker> but i agree…it's close to impossilbe
[10:09:41] <_|Nix|_> toddmparker: Packing away some of this complexity is the job of a framework such as jQM. So is overcoming the shortcomings of CSS.
[10:09:41] <toddmparker> uGoMobi: agreed
[10:10:21] <_|Nix|_> toddmparker: With this work we are ultimately influencing standards which should eventually obviate the need for such code.
[10:11:10] <_|Nix|_> toddmparker: ... and we've still gained a significant benefit from getting rid of all those corner classes.
[10:15:11] <agcolom> Hi, just to let you know I'm now attending the content meetings which are 1h before the mobile meetings (i.e. now)
[10:17:45] <_|Nix|_> toddmparker: https://gist.github.com/4040538
[10:20:21] <toddmparker> agcolom: great!
[10:20:29] <toddmparker> speaking of which, I need an agenda
[10:20:56] <agcolom> indeed ;-)
[10:21:08] <toddmparker> _|Nix|_: cool, that's some good savings…120+ lines shaved off
[10:21:22] <_|Nix|_> toddmparker: Yeah. I don't think it's been in vain.
[10:21:53] <toddmparker> uGoMobi: you also removed the permutations of corners classes in the css, right (ui-corner-left)
[10:22:01] <_|Nix|_> toddmparker: Yep.
[10:22:18] <uGoMobi> toddmparker: you mean in the theme CSS? yes
[10:22:49] <_|Nix|_> Funny! 128 out of the 139 lines gone are that theme CSS :)
[10:23:04] <_|Nix|_> We've only made 11 lines of difference with everything else :()
[10:23:06] <_|Nix|_> :)
[10:23:40] <uGoMobi> _|Nix|_: I also had to add many lines of CSS
[10:23:54] <_|Nix|_> uGoMobi: I know, of course ...
[10:24:13] <uGoMobi> I am curious what the difference is in Kb in the minified build
[10:24:28] <uGoMobi> if any
[10:24:51] <_|Nix|_> uGoMobi: I'll check,
[10:25:33] <toddmparker> so not a huge improvement
[10:25:34] <uGoMobi> even more interesting is a perfomance test
[10:25:41] <toddmparker> yeah
[10:25:58] <uGoMobi> I remember an issue about collapsibles not responding well
[10:26:44] <toddmparker> yeah
[10:27:02] <uGoMobi> I removed quite a lot JS there so it would be interesting to compare on a device with an average processor
[10:27:23] <toddmparker> yeah? great.
[10:27:46] <_|Nix|_> uGoMobi: https://gist.github.com/4040587/2dee5314e7b12ca0c17ee9a7c604bd62058f2fbf
[10:27:57] <_|Nix|_> You can click on each of the two revisions to see the changes.
[10:28:27] <_|Nix|_> uGoMobi: About 1.5KB on the .zip ...
[10:28:35] <_|Nix|_> uGoMobi: wrt. master ...
[10:28:55] <uGoMobi> well that's something :)
[10:29:10] <_|Nix|_> uGoMobi: Absolutely. Look at the non-zipped stuff.
[10:29:18] <_|Nix|_> uGoMobi: 3KB on the minified theme.
[10:29:35] <toddmparker> that's great
[10:29:54] <toddmparker> we need to definitely mention that those classes are being dropped in the release notes if not already captured
[10:30:01] <toddmparker> agenda for today: https://docs.google.com/document/d/1t269eKFSzBGy354FS310V5lrvI4aSwyBy3pl-m1-U-4/edit#
[10:31:29] <_|Nix|_> uGoMobi: Where did we leave off with the checkboxradio icon problem? Were you gonna try an all-CSS solution?
[10:31:47] <uGoMobi> _|Nix|_: yes
[10:31:51] <_|Nix|_> uGoMobi: OK.
[10:37:34] <_|Nix|_> uGoMobi: I just realized. If you find a CSS solution to the checkboxradio icon problem we no longer need to do that ugly check for a controlgroup parent.
[10:39:36] <uGoMobi> _|Nix|_: I already know how to do it
[10:39:49] <uGoMobi> just not sure sure in what branch to make the changes
[10:40:25] <uGoMobi> I made changes in controlgroup on master and we have made changes in css-corner-styling
[10:41:01] <_|Nix|_> uGoMobi: Then let's merge master into css-corner-styling ...
[10:41:26] <_|Nix|_> uGoMobi: I'll do it.
[10:41:26] <uGoMobi> _|Nix|_: ok, can you do that? you are experienced with that :)
[10:41:35] <uGoMobi> _|Nix|_: cool, thanks!
[10:44:43] <toddmparker> uGoMobi: that horizontal check/radio seems straightforward to do with css since we have the classes for the h control group to scope the alignment stuff against.
[10:45:04] <toddmparker> looks like you're already done with that?
[10:45:05] <uGoMobi> toddmparker: yes it is a simple CSS fix
[10:45:18] <toddmparker> if you're a css whiz like yourself :)
[10:45:26] <uGoMobi> :)
[10:46:44] <toddmparker> has anyone seem MauriceG around?
[10:46:50] <toddmparker> he seems to have disappeared
[10:47:01] <toddmparker> hope we didn't make him mad :-/
[10:47:06] <_|Nix|_> Unfortunately.
[10:47:40] <toddmparker> He was a huge help generating change logs for releases
[10:47:47] <uGoMobi> haven't seen him for like 3 weeks
[10:47:49] <toddmparker> looks like that's back on me
[10:48:06] <toddmparker> I'll start working on that so we can do a 1.1.2  and 1.2.1
[10:48:49] <arschmitz> johnbender: When you have a minute could you look at https://github.com/jquery/jquery-mobile/pull/5260https://github.com/jquery/jquery-mobile/pull/5260 Its essentially the same as the one last week but updated the meta data like you asked.
[10:49:36] <toddmparker> uGoMobi: do we have a demo for the new list view filter feature to start w/all hidden?
[10:49:57] <uGoMobi> toddmparker: yes
[10:50:15] <uGoMobi> toddmparker: http://jquerymobile.com/test/docs/demos/listviews/listview-filter-autodividers.html
[10:50:39] <toddmparker> sweet
[10:51:16] <uGoMobi> at some point we could probably clean up those demos, don't need inset/non-inset examples for everything
[10:51:28] <uGoMobi> but it comes handy for testing
[10:54:15] <toddmparker> sure
[10:54:48] <clam> join #jquery-meeting
[10:56:51] <johnbender> arschmitz: looks fine though I would change the label to "Fixed Toolbar Workaround" and the description to include just a bit more information about which browsers so that people using the builder can make the decision right there
[10:56:59] <johnbender> arschmitz: definitely merge it though
[10:57:01] <toddmparker> I still am having ops issues. Can someone unmoderated -meeting
[10:57:29] <arschmitz> johnbender: Yeah i was already updateing the discription for something else ill add that too
[10:58:35] <arschmitz> johnbender: i have a second pr for a seperate issue id like you to look at after the meeting if you have a sec its very simple and short
[11:02:13] <toddmparker> johnbender: are you an op in -meeting now? gseguin
[11:02:40] <gseguin> I am
[11:03:11] <gseguin> toddmparker: the lights are on
[11:03:31] <gseguin> oops
[11:03:32] <gseguin> nope
[11:03:36] <gseguin> there not
[11:04:19] <gseguin> s/there/they're/
[11:04:31] <gseguin> I guess we need gnarf, I can't op myselg
[11:04:40] <uGoMobi> I got a flashlight if that helps
[11:04:41] <gseguin> s/myselg/myself/
[11:04:45] <gseguin> hehe
[11:05:05] <uGoMobi> are you typing in the dark gseguin ?
[11:05:20] <gseguin> uGoMobi: totally
[11:05:29] <gnarf> gseguin: um you couldn't op?
[11:05:29] <gseguin> I have no idea what I'm doing
[11:05:35] <gnarf> gseguin: /msg chanserv op #jquery-meeting
[11:05:37] <gseguin> gnarf: nope
[11:05:44] <johnbender> toddmparker: no I'm not
[11:06:32] <gseguin> gnarf: duh, I was trying to use the GUI
[11:06:39] <gseguin> that'll teach me
[11:06:53] <gnarf> :) - yeah chanserv holds yer keys
[11:07:00] <gnarf> once you have the @ then you can use your client
[11:07:12] <gnarf> also, most clients have /cs as an alias for /msg chanserv
[11:07:13] <gnarf> so
[11:07:18] <gnarf>  /cs op #jquery-meeting
[11:08:15] <uGoMobi> arschmitz: joining the meeting?
[11:08:27] <arschmitz> im in there
[11:08:34] <arschmitz> im ALWAYS there lol
[11:13:34] <gseguin> cool, thanks gnarf
[11:26:33] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to css-corner-styling: http://git.io/WkXejQ
[11:26:33] <jqmobilecommit> jquery-mobile/css-corner-styling 3e37ebb Gabriel Schulhof: Merge branch 'master' into css-corner-styling
[12:05:25] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 3 new commits to master: http://git.io/cp_x-Q
[12:05:25] <jqmobilecommit> jquery-mobile/master d687da5 Alexander Schmitz: FixedToolbar: Added extension with browser specific workarounds Fixed: …...
[12:05:25] <jqmobilecommit> jquery-mobile/master b8833d9 Alexander Schmitz: Fixedtoolbar: Fixed typo in filename for workaround extension
[12:05:25] <jqmobilecommit> jquery-mobile/master 0290cf0 Gabriel "_|Nix|_" Schulhof: Merge pull request #5260 from arschmitz/master...
[12:06:40] <doesallmagic> Project jQuery Mobile Phantom Master build #831: FAILURE in 24 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/831/
[12:13:34] <johnbender> arschmitz: lint issues
[12:14:02] <johnbender> arschmitz: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/831/console
[12:14:03] <arschmitz> damn it i swear i linted it first ill check it again
[12:14:13] <johnbender> arschmitz: no worries
[12:14:19] <johnbender> that's what it's there for :)
[12:14:31] <arschmitz> yeah lucky for me ha ha
[12:16:29] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to master: http://git.io/UFrKYQ
[12:16:29] <jqmobilecommit> jquery-mobile/master 6c822f6 Gabriel Schulhof: [fixedToolbar] Updating description metadata with reference to new workarounds extension
[12:17:02] <doesallmagic> Project jQuery Mobile Phantom Master build #832: STILL FAILING in 25 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/832/
[12:17:10] <arschmitz> johnbender: whats the best way to fix just send another pr?
[12:17:17] <johnbender> arschmitz: yah
[12:17:28] <arschmitz> ok ill do it right now
[12:17:36] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to master: http://git.io/gn54YA
[12:17:36] <jqmobilecommit> jquery-mobile/master 23322e7 Gabriel Schulhof: [fixedToolbar workarounds] De-linting
[12:18:05] <_|Nix|_> arschmitz: Done. Don
[12:18:10] <_|Nix|_> 't worry about it.
[12:18:18] <arschmitz> damn you ha ha !
[12:18:22] <_|Nix|_> It was truly minor.
[12:18:28] <arschmitz> i just commited and was filling out the pr lol
[12:19:10] <_|Nix|_> arschmitz: ... and I updated the description of fixedToolbar to include a reference to the description of the workaround.
[12:19:54] <arschmitz> _|Nix|_: just go and do all my work for me ha ha
[12:20:25] <_|Nix|_> arschmitz: Don't worry - I won't :) It was fresh in my mind, so I pounced on it.
[12:21:16] <_|Nix|_> Gah! This is insane! 43 test runs and still no spontaneous timeout :-S ... this really looks like it won't time out ...
[12:24:43] * _|Nix|_ go home now ...
[12:24:53] <uGoMobi> good night _|Nix|_
[12:25:17] <uGoMobi> _|Nix|_: just quick question....
[12:25:31] <uGoMobi> did you already merge master in css-corner-styling?
[12:26:14] <scott_gonzalez> toddmparker toddmparker_ toddmparker__: Need help generating changelogs?
[12:27:39] <johnbender> highlight carpet bomb
[12:29:04] <scott_gonzalez> If he'd learn how to just log one once... :-P
[12:29:11] <scott_gonzalez> s/one/on/
[12:31:24] <_|Nix|_> uGoMobi: I merged master into css-corner-styling.
[12:31:26] <arschmitz> uGoMobi: i updated the pull request for 5262 should be good now sets padding to ""
[12:31:42] <uGoMobi> _|Nix|_: great, thanks!
[12:31:56] <uGoMobi> arschmitz: ok I'll take a look
[12:32:37] <arschmitz> uGoMobi: awesome thank you
[12:32:57] <uGoMobi> arschmitz: but actually I am not sure if that just removes the style that was set on the element or if also removes the style set in the stylesheet
[12:33:51] <arschmitz> it works i tried it in a jsbin
[12:34:08] <uGoMobi> arschmitz: ok great! :)
[12:34:15] <arschmitz> it maintains the style sheet and just removes from style tag
[12:34:33] <uGoMobi> I love it when a plan comes together :)
[12:34:55] <arschmitz> uGoMobi: yup love learning new tricks to i didnt know you could do that!
[12:37:35] <doesallmagic> Yippie, build fixed!
[12:37:36] <doesallmagic> Project jQuery Mobile Phantom Master build #833: FIXED in 19 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/833/
[12:46:36] <agcolom> scott_gonzalez: I think the answer to your question (i.e. changelog) is yes
[12:48:35] <uGoMobi> arschmitz: that PR looks good.... did you run the unit test?
[12:50:08] <arschmitz> Yes
[12:50:13] <arschmitz> they all pass
[12:50:14] <uGoMobi> arschmitz: one tiny little small comment :) ...  $el.closest( '.ui-page' ) ... can you change the single quotes into double quotes?
[12:50:18] <uGoMobi> arschmitz: ok cool
[12:50:42] <arschmitz> no prob just one sec
[12:51:26] <uGoMobi> arschmitz: sorry, I am a consistency / code style guidelines freak :)
[12:51:57] <arschmitz> No absolutely its important. iv been trying to get in the habbit of using double because of that but missed it on that one
[12:53:28] <arschmitz> uGoMobi: Done!
[12:53:42] <uGoMobi> arschmitz: great, thanks!
[12:54:23] <jqmobilecommit> [jquery-mobile] uGoMobi pushed 4 new commits to master: http://git.io/slhk2w
[12:54:23] <jqmobilecommit> jquery-mobile/master 43eddf2 Alexander Schmitz: fixedToolbar: added logic to set page padding back to 0 on destroy. Fixed #5261 - When you call destroy on the fixedToolbar widget it does not restore page padding
[12:54:23] <jqmobilecommit> jquery-mobile/master f90f7e7 Alexander Schmitz: fixedToolbar: changed to reset padding Vs. setting to 0 to maintain user set page padding.
[12:54:23] <jqmobilecommit> jquery-mobile/master 97e6504 Alexander Schmitz: Fixedtoolbar: Switched to double quotes for consistency
[12:55:15] <uGoMobi> I probably need to cherry-pick this
[12:55:48] <arschmitz> i was thinking that meant to mention in meeting but forgot
[13:01:11] <arschmitz> uGoMobi: back down to 296 Much better!
[13:02:15] <uGoMobi> arschmitz: oh yeah! and a month ago we were at 380
[13:02:25] <johnbender> you guys are amazing
[13:03:40] <arschmitz> yeah i think thats what we were at when the conference started!
[13:03:47] <arschmitz> \err summit
[13:05:43] <toddmparker> scott_gonzalez:
[13:05:48] <toddmparker> yes, I do
[13:06:08] <toddmparker> I've been copy/pasting from the GH commit logs manually
[13:08:16] <jqmobilecommit> [jquery-mobile] uGoMobi pushed 4 new commits to 1.2-stable: http://git.io/1Ug7ug
[13:08:16] <jqmobilecommit> jquery-mobile/1.2-stable 26cb01f Jasper de Groot: Listview: make it possible to set option filter programmatically. Fixes #5245.
[13:08:16] <jqmobilecommit> jquery-mobile/1.2-stable 320cbf4 Jasper de Groot: Checkboxradio: Allow to set option mini programmatically. Fixes #4070.
[13:08:16] <jqmobilecommit> jquery-mobile/1.2-stable fc15e83 Jasper de Groot: Textinput: Allow to set option mini programmatically. Fixes #4070.
[13:09:06] <uGoMobi> arschmitz: FYI - I picked your PR as well, what shows up in here is limited to the first 3
[13:09:37] <arschmitz> uGoMobi: ok cool thank you!
[13:09:40] <uGoMobi> next question... should I also cherry-pick into 1.1-stable
[13:10:07] <toddmparker> was mini 1.1?
[13:10:22] <uGoMobi> yeah the options were already there
[13:10:32] <arschmitz> hmm for mine its def a problem in all so if it goes to 1.2.1 i would think 1.1.2 as well?
[13:10:36] <uGoMobi> but not sure about listview filter
[13:11:09] <toddmparker> the filter stuff was 1.2
[13:11:16] <scott_gonzalez> toddmparker: Do you guys have a common commit message format?
[13:11:32] <toddmparker> so pick to 1.1-stable if it's just a fix for features already there
[13:11:53] <toddmparker> scott_gonzalez: I think we're not as standardized as we should be
[13:11:53] <scott_gonzalez> Heh, guess not.
[13:12:19] <toddmparker> https://github.com/jquery/jquery-mobile/commits/master
[13:12:26] <toddmparker> yeah, we can improve that for next time
[13:12:30] <uGoMobi> toddmparker: just checked and we already had listview filter in 1.1
[13:12:39] <uGoMobi> will cherry-pick and change milestones
[13:12:39] <toddmparker> is there a format that works best for parsing?
[13:13:08] <toddmparker> if this is too messy, i can go manual
[13:13:13] <scott_gonzalez> {component}: {what}. Fixes {issue-ref} - {issue-summary}.
[13:13:21] <toddmparker> and just get a good format in for future changelogs
[13:13:40] <toddmparker> makes sense
[13:13:44] <scott_gonzalez> For now, the best you can do is:
[13:13:54] <toddmparker> we do that except for the last bit w/description
[13:13:56] <scott_gonzalez> {commit message} ({link-to-commit})
[13:14:16] <scott_gonzalez> Well, you can also get a link to the issue when those are referenced.
[13:14:24] <toddmparker> that is a good start
[13:15:06] <scott_gonzalez> The best way to do this is in node with a standard format, but we can probably get something sorta close in a few lines with sed.
[13:16:23] <uGoMobi> toddmparker: if it helps we could also add labels fixed / won't fix / duplicate / no issue at the issue tracker
[13:16:57] <scott_gonzalez> toddmparker: This is what I used to run: https://github.com/jquery/jquery-ui/blob/1-8-stable/build/release/prepare-release#L85
[13:17:14] <scott_gonzalez> If you just throw that block into a .sh file, you should be able to run it.
[13:17:40] <scott_gonzalez> Just change line 90's `$version...` to whatever commit range you want.
[13:18:00] <scott_gonzalez> like `1.2...` for 1.2 until now or `1.2.1..1.2.2` for 1.2.1 through 1.2.2
[13:18:20] <scott_gonzalez> If you want to filter the directories you care about, change line 91
[13:18:27] <scott_gonzalez> If you want all directories, just drop line 91
[13:19:07] <scott_gonzalez> Also, drop line 96 and remove the trailing slash from line 95, then it'll just spit the output into the terminal.
[13:19:24] <scott_gonzalez> Or you can `| pbcopy` to get it onto your clipboard
[13:19:46] <scott_gonzalez> And change line 87 to have the format for GitHub issues instead of UI's Trac.
[13:24:16] <scott_gonzalez> toddmparker: Does that shell script help?
[13:24:22] <scott_gonzalez> Does it make sense to you?
[13:25:00] <scott_gonzalez> The new implemetation in node is more sophisticated, but is tied quite heavily into our release process.
[13:25:13] <scott_gonzalez> I can work on a node version for future mobile releases though.
[13:29:15] <jqmobilecommit> [jquery-mobile] uGoMobi pushed 4 new commits to 1.1-stable: http://git.io/tpeNMQ
[13:29:15] <jqmobilecommit> jquery-mobile/1.1-stable 5b537ca Jasper de Groot: Listview: make it possible to set option filter programmatically. Fixes #5245.
[13:29:15] <jqmobilecommit> jquery-mobile/1.1-stable 7f6c0ac Jasper de Groot: Checkboxradio: Allow to set option mini programmatically. Fixes #4070.
[13:29:15] <jqmobilecommit> jquery-mobile/1.1-stable 15129eb Jasper de Groot: Textinput: Allow to set option mini programmatically. Fixes #4070.
[13:32:30] <gseguin> what'd I miss?
[13:35:23] <uGoMobi> toddmparker: in case you keep notes... the last 3 closed issues will all be fixed in 1.1.2 ... https://github.com/jquery/jquery-mobile/issues?page=1&sort=updated&state=closed
[13:38:52] <toddmparker> scorr scott_gonzalez
[13:39:01] <toddmparker> sorry, had to hop off for a quick call
[13:39:16] <scott_gonzalez> no problem
[13:40:06] <toddmparker> that's very helpful, I'll see what I can do to get this baby working
[13:41:40] <agcolom> scott_gonzalez: do you have any methods returning "Undefined" in ui?
[13:46:09] <scott_gonzalez> agcolom: I don't think so.
[13:46:39] <agcolom> scott_gonzalez: ok, thanks
[14:27:13] <agcolom> toddmparker: I'm going to add a guide for getting started with jQuery Mobile on the learn site. I'll use http://jquerymobile.com/test/docs/about/getting-started.html as a starting point. Is there anything specific you'd like me to mention in it?
[14:43:16] <toddmparker> agcolom: that's great
[14:43:34] <toddmparker> we should really push people to use the download builder and themeroller
[14:43:53] <toddmparker> and explain how to add a stylesheet for overrides
[14:44:25] <toddmparker> we should touch on how to load scripts and styles per page, how you can't use ready()
[15:06:51] <johnbender> toddmparker: hashchange based nav tests passing :)
[15:07:12] <johnbender> well
[15:07:16] <johnbender> except for the scrolling one
[15:07:25] <johnbender> but that's trivial in the face of all the other crap
[15:07:43] <johnbender> this nightmare is almost over
[15:15:50] <jqmobilecommit> [jquery-mobile] toddparker pushed 1 new commit to master: http://git.io/BQq76w
[15:15:50] <jqmobilecommit> jquery-mobile/master 2930d9b Todd Parker: Added a RWD basics and stacked grid demo page...
[15:23:42] <toddmparker> johnbender: great news!
[15:23:44] <toddmparker> :)
[15:23:53] <toddmparker> keep plugging away, this is needed
[15:24:06] <toddmparker> ok, heading home. g'night all
