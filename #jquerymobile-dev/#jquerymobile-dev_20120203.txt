[00:37:06] <jqmobilecommit> [jquery-mobile] scottjehl pushed 2 new commits to master: http://git.io/u9nnqw
[00:37:06] <jqmobilecommit> [jquery-mobile/master] opted meego out as well. - scottjehl
[00:37:06] <jqmobilecommit> [jquery-mobile/master] Merge remote branch 'origin/master' - scottjehl
[00:54:53] <jqmobilecommit> [jquery-mobile] scottjehl pushed 1 new commit to master: http://git.io/KZMz_g
[00:54:53] <jqmobilecommit> [jquery-mobile/master] ensure toolbars can hide on Android when in fullscreen mode. Regular fixed mode toggling still doesn't work on Android. - scottjehl
[01:02:18] <jqmobilecommit> [jquery-mobile] scottjehl pushed 1 new commit to master: http://git.io/Litm1w
[01:02:18] <jqmobilecommit> [jquery-mobile/master] undid that last change. The real culprit preventing toolbar hide and show in Android was this transform property. After testing, it doesn't seem to be needed in iOS5 now that we're using position: fixed anyway though. - scottjehl
[01:10:24] <jqmobilecommit> [jquery-mobile] scottjehl pushed 1 new commit to master: http://git.io/N1ihcA
[01:10:24] <jqmobilecommit> [jquery-mobile/master] toolbar height calculation needed to use outerHeight - scottjehl
[01:41:18] <jqm-jenkins-bot> Project jqm-master build #439: SUCCESS in 26 min: http://10.59.19.240:8080/job/jqm-master/439/
[07:54:26] <toddmparker_> I didn't see a message from Scott to you guys so I wanted to pass this along...
[07:54:52] <toddmparker_> "after hours of banging my head against failures in the fixed toolbars, I realized that require.js was causing the test to fail in different places, due to the timing when it asynchronously loads scripts."
[07:55:26] <toddmparker_> ...Are we working on getting that out of our dev files? It creates an unnatural environment for testing - definitely thrown me off a few times now."
[08:45:44] <gseguin> Good morning
[08:47:40] <gseguin> toddmparker_: the answer to that question is no we aren't planning to, should we? Maybe we can talk with Scott and see what the cause of his frustration is and address it.
[08:47:58] <johnbender> gseguin: toddmparker_:
[08:48:00] <johnbender> ?
[08:48:35] <gseguin> toddmparker_: there is still js/index.php that's there for back compat
[08:49:20] <gseguin> so if Scott gets to frustrated with RequireJS he can do it the old fashion too
[08:50:18] <gseguin> s/to frustrated/too frustrated/
[08:50:42] <gseguin> hey johnbender
[08:51:17] <gseguin> I took care of the temporary 403 on /test while building
[08:54:50] <johnbender> gseguin: temporary 403?
[08:55:09] <johnbender> I thought i removed all the cleanup stuff from the build targets
[08:55:28] <gseguin> init target was still a dependency of docs
[08:55:35] <gseguin> and init was cleaning
[08:55:43] <johnbender> gseguin: ah
[08:56:02] <johnbender> gseguin: so much for removing it from the latest build target :/
[08:56:03] <gseguin> so I moved the clean up tasks to the clean target
[08:56:15] <johnbender> gseguin: I think we should just remove it from everything and use clean
[08:56:29] <johnbender> gseguin: that's the convention I'm used to
[08:56:37] <gseguin> yeah done
[08:56:39] <johnbender> cool
[08:56:43] <johnbender> cleanup is manual
[08:56:43] <gseguin> clean cleans
[08:56:48] <gseguin> init inits
[08:56:53] <johnbender> rm should never be implicit :)
[08:57:21] <gseguin> except for when we move the demos dir to compiled
[08:58:14] <gseguin> so that plus using node (if available) for the build, /test is back, toddmparker_ is going to be happy
[09:03:49] <johnbender> gseguin: if we move a dir isn't it just a `mv`?
[09:03:54] <johnbender> or am I missing something
[09:05:49] <gseguin> compiled/demos already exists
[09:05:56] <gseguin> johnbender: ^
[09:06:54] <gseguin> we need to remove it before doing the `mv tmp/demos compiled`
[09:38:06] <toddmparker_> hey guys
[09:38:33] <toddmparker_> so scott could change pretty easily to the php version when developing?
[09:39:05] <toddmparker_> guess the question is if the current system makes development a more tricky, is that something should discuss
[09:39:14] <gseguin> yeah although not using requirejs means that dependencies will not be checked
[09:39:31] <toddmparker_> i thought johnbender said that we're using the current system to shake out order dependencies
[09:39:41] <gseguin> so you can introduce a problem in the dependencies
[09:39:49] <toddmparker_> but that we'd maybe go back to a simpler system
[09:39:57] <toddmparker_> i see gseguin
[09:40:18] <gseguin> did johnbender say that?
[09:40:34] <toddmparker_> i thought it was discussed a little while ago
[09:40:40] <toddmparker_> maybe i mis-heard
[09:40:58] <gseguin> hmm ok, maybe I misunderstood
[09:41:21] <gseguin> I'm curious to know what problems Scott was having
[09:41:30] <toddmparker_> but if the current system introduces async issues that won't really be issues in real life, are we complicating our work?
[09:41:40] <gseguin> it is a little different to develop in that environment
[09:42:01] <gseguin> but if you ask me it makes much more sense
[09:42:03] <toddmparker_> i think unit tests were failing with recent changes
[09:42:23] <toddmparker_> and it turns out it was his code, but the async loading
[09:42:34] <toddmparker_> so he burned a few few hours tracking that down
[09:42:49] <toddmparker_> so this may be more of an issue with the unit tests?
[09:43:08] <gseguin> do you know which unit tests that was?
[09:44:37] <johnbender> toddmparker_: gseguin: that was my thinking, if it's really painful once we get the current deps sorted out we could rely on people building the new widgets to define their dependenicies while working
[09:45:01] <johnbender> toddmparker_: that's important though
[09:45:31] <johnbender> if the async load is causing bugs it might be because there are dependency issues
[09:45:35] <johnbender> which is important for the builder
[09:45:41] <johnbender> I guess it depends on what the bugs were
[09:45:42] <gseguin> exactly
[09:46:20] <toddmparker_> yeah
[09:46:23] <johnbender> toddmparker_: wrt to switching back to /js/ I would be ok with that for the docs but not for the tests
[09:46:25] <gseguin> that's my point, I think there may be a misunderstanding of how the system works causing a burnt cycles
[09:46:42] <toddmparker_> i just emailed Scott and asked him to try and hop on IRC and chat with you guys when he can
[09:47:04] <johnbender> toddmparker_: I think the only other option is to not do the builder
[09:47:05] <toddmparker_> playing telephone again
[09:47:13] <gseguin> so if we get everyone to understand how it works maybe everyone will agree that this is the way to go... or not
[09:47:18] <toddmparker_> agree that he may be missing something
[09:47:35] <johnbender> gseguin: I don't see how we can do the builder without verifying that our deps are correct
[09:47:35] <toddmparker_> sort of needs to be a conversation here to sync up IMHO
[09:47:42] <johnbender> toddmparker_: I agree
[09:48:09] <toddmparker_> i don't know specifics on the last issue
[09:48:12] <toddmparker_> anyhoo
[09:48:13] <gseguin> johnbender: it's doable but subject to breakage when new comp comes in or out
[09:48:23] <johnbender> gseguin: "comp" ?
[09:48:29] <gseguin> component
[09:48:31] <toddmparker_> sounds like test is in better shape?
[09:48:32] <johnbender> ah
[09:48:49] <gseguin> toddmparker_: /test ?
[09:48:58] <toddmparker_> fixed toolbars are still a bit wonky...going to need to keep refining next week
[09:49:01] <toddmparker_> ya
[09:49:12] <gseguin> yeah it's in an awesome shape!
[09:49:12] <toddmparker_> tricky stuff
[09:49:23] <johnbender> toddmparker_: yah the makefile has previously done a lot of cleanup, which I thought I removed
[09:49:24] <johnbender> but there were some more hiding in there
[09:49:25] <toddmparker_> cool, thanks guys. that is a huge help
[09:49:34] <toddmparker_> gotcha
[09:49:55] <gseguin> you get your change like a minute after your push now
[10:35:24] <johnbender> toddmparker_: gseguin: alright my presentation is pretty well polished, I'm going to get down to addressing the 1.1 bugs
[10:35:48] <toddmparker_> cool
[10:36:04] <toddmparker_> speaking of which, i need to *start* a preso for tomorrow on jQM
[10:36:06] <toddmparker_> tikes
[10:52:12] <johnbender> toddmparker_: kinblas: https://github.com/jquery/jquery-mobile/issues/3154
[10:52:13] <socialhapy> â˜… Issue #3154 on jquery-mobile, reported by jblas (2m, 1w ago): Need a way to tell the framework not to enhance any markup in a specific container
[10:52:31] <johnbender> Aren't the widgets opt in?
[10:52:40] <johnbender> I'm sure there's something that isn't but I can't think of it
[10:52:54] <kinblas> johnbender: what do you mean?
[10:53:25] <kinblas> johnbender: in theory if a developer wanted to use a 3rd party widget, they would do so in a container (or the contain is the widget) and mark that as "don't touch"
[10:53:55] <johnbender> kinblas: things like links then?
[10:54:07] <kinblas> johnbender: I purposely separated the 2
[10:54:20] <johnbender> what specifically aside from links
[10:54:47] <kinblas> johnbender: the developer could have a plugin where he wanted to control the enhancement and behavior attachment ... but maybe still leverage some automatic link handling
[10:55:07] <kinblas> and other times they want to say don't handle any clicks on this link or within this container
[10:55:39] <kinblas> johnbender: note that isn't the link-related bug
[10:55:52] <johnbender> kinblas: in the first case wouldn't they just not annotate anything with a data role within the container?
[10:55:54] <kinblas> johnbender #3154 is strictly about enhancement
[10:56:00] <johnbender> kinblas: no I know there are two
[10:56:31] <kinblas> johnbender: consider a 3rd party widget that contained buttons, links and other things
[10:56:42] <kinblas> we auto-enhance some of those elements
[10:56:56] <kinblas> for example buttons, selects, etc
[10:57:06] <johnbender> thats what I was looking for
[10:57:08] <kinblas> they may not want/need that since their widget does something completely different with them
[10:57:29] <johnbender> I just couldn't think of the things we auto enhance
[10:57:42] <johnbender> that seems odd to me
[10:58:15] <johnbender> that is field containers and forms maybe should be opt in?
[10:58:30] <johnbender> kinblas: it seems weird to be doing this the other direction
[10:58:37] <johnbender> obviously we don't have a choice now
[10:59:26] <johnbender> that is we're blacklisting when it seems like we want to be whitelisting
[11:00:25] <johnbender> s/want to be/maybe should be/
[11:01:17] <kinblas> johnbender: we auto-enhance form inputs/selects/textareas etc
[11:01:27] <kinblas> as well as links
[11:02:01] <kinblas> What I was trying to do was give the user a convenience attribute so they didn't have to tag *EVERY* element they didn't want enhanced
[11:02:28] <kinblas> usually widgets are confined underneath a single element so that seemed like the ideal approach
[11:02:43] <kinblas> it's a black-list right now since we auto-enhance everything in a page container
[11:05:47] <johnbender> kinblas: I don't see how else we would do it right now, and we do something similar with keep-native
[11:05:58] <johnbender> kinblas: that's not what I'm thinking
[11:06:11] <johnbender> just wondering if we could sanely whitelist the things we auto-enhance
[11:06:51] <johnbender> excluding links
[11:06:59] <johnbender> ie at the form level
[11:07:15] <johnbender> although again, we have the keep-native stuff for forms
[11:07:21] <johnbender> err
[11:07:34] <johnbender> rather the jqm "page" containing the form
[11:17:12] <johnbender> kinblas: something for later
[11:20:34] <kinblas> johnbender: when folks use jqm, they buy into the fact that we provide all this automatic enhancement, etc ... that is what makes this framework attractive to most folks ... we just need an exception mechanism, which I guess you are calling a black-list that allows them to bring in functionality that fills in feature gaps.
[11:21:00] <johnbender> kinblas: hmm that's a good point
[11:21:30] <johnbender> we only annotate when we have to I guess
[11:22:05] <johnbender> kinblas: well that's enough talking, I keep hacking
[11:22:12] <johnbender> kinblas: thanks for answering my questions though :D
[11:24:06] <johnbender> toddmparker_: kinblas: is there anything else this affects directly besides for elements? I've already got the "enhanceWithin" which I can modify to support this
[11:24:19] <johnbender> s/for elements/form elements/
[11:24:49] <johnbender> or do we want to ignore stuff with annotations in this case too
[11:26:16] <kinblas> johnbender: I guess the way I view it is that all our component plugins that enhance and attach behavior
[11:26:31] <kinblas> need to call something to figure out whether they should operate on that element/node or not
[11:26:54] <kinblas> today every element does their own traversal through the page to figure out what they think they should operate (enhance) on
[11:27:03] <johnbender> kinblas: so the annotated stuff would skip the enhance then too
[11:27:09] <kinblas> I meant every component (not element)
[11:27:56] <kinblas> what do you mean by annotated stuff?
[11:28:09] <johnbender> kinblas: stuff that is explicity designated as "jqm"
[11:28:14] <johnbender> with the data-role attr
[11:28:18] <kinblas> do mean the container with the data-enhance="false" ( or whatever)
[11:28:52] <kinblas> johnbender: I guess the way I see it is an all or nothing
[11:29:05] <kinblas> if something inside one of those data-enhance="false" containers has a data-role on it
[11:29:09] <kinblas> it does NOT get enhanced
[11:29:15] <kinblas> and is left as an exercise for the developer
[11:29:18] <toddmparker_> catching up...
[11:29:23] <toddmparker_> i agree with kinblas
[11:29:40] <kinblas> johnbender: remember they may be doing some specialized component/behavior
[11:29:55] <johnbender> kinblas: the only reason I ask is that i don't htink it's out of the question to ask devs to know what they are puting in the "don't enhance" container
[11:29:55] <kinblas> *OR* they may be using some non-jqm type widget thingie
[11:30:10] <toddmparker_> just having a simple way to say "hands off everything in this container" would be most convenient
[11:30:40] <toddmparker_> well, if it's a live, interactive widget the contents may change
[11:30:43] <kinblas> johnbender: heh I had trouble parsing your last sentence
[11:30:53] <johnbender> kinblas: it was poorly formed :(
[11:31:00] <kinblas> if they use that don't enhance attribute, they should know what they are doing
[11:31:11] <toddmparker_> think of a 3rd party weather widget with forecast w/ links to switch views and a form that is pulle din via ajax to manage cities
[11:31:22] <johnbender> right so my thinking is that we only have to prevent the "auto enhance" widgets from doing anything right?
[11:31:30] <toddmparker_> right
[11:31:35] <johnbender> that was my question
[11:31:42] <toddmparker_> plus ignore links in the nav model
[11:31:45] <johnbender> that's a lot easier than adding to _every_ widget
[11:31:55] <kinblas> johnbender: sorry, that's what I was trying to say above, but obviously not very well
[11:32:02] <kinblas> I think I mentioned it better in the issue
[11:32:12] <toddmparker_> communications breakdown
[11:32:17] <kinblas> components that automatically identify content to enhance (out built-in components)
[11:32:39] <kinblas> need to check if that element *IS* or *LIVES* in a don't enhance container
[11:32:44] <johnbender> toddmparker_: kinblas: so right now I think the only things we auto enhance are forms, form elements, links, and .... anything else?
[11:32:59] <kinblas> data-role elements
[11:33:06] <johnbender> kinblas: hah
[11:33:07] <toddmparker_> right
[11:33:14] <johnbender> so we're still missing each other here
[11:33:27] <johnbender> if a dev wants content to not be enhanced why would he add a data-role?
[11:33:31] <johnbender> that's what I'm asking
[11:33:43] <toddmparker_> we have a consistent way to identify the enhancement whether it be markup (button) or role or whatever
[11:33:43] <johnbender> do we really have to bother with ALL the widgets that enhance things?
[11:33:46] <kinblas> johnbender: because maybe they have a specialized component
[11:33:58] <kinblas> where they want to do something different, but keep consistent semantics
[11:34:01] <toddmparker_> so maybe we can tie into that
[11:34:24] <johnbender> kinblas: toddmparker_: alright, I'll concede that there must be some use case I'm not thinking of
[11:34:27] <toddmparker_> for select...
[11:34:28] <toddmparker_> initSelector: "select:not(:jqmData(role='slider'))"
[11:34:58] <johnbender> I'll get to work on the nuclear "don't do anything" option
[11:35:09] <johnbender> regardless of data-role or element type
[11:35:18] <johnbender> and then I'll do the links
[11:35:19] <toddmparker_> so could we add *:not(parent with data-role of "dont-enhance")
[11:35:46] <toddmparker_> (pardon the crap pseudo code0
[11:54:39] <gseguin> https://skitch.com/ghislain_seguin/g6tua/jquery-mobile-2012-02-03
[11:55:12] <gseguin> looks like that blog: http://www.lafermeduweb.net/billet/concours-3-livres-sur-jquery-mobile-d-eric-sarrion-a-gagner-1284.html is generating a nice little trend
[11:57:27] <toddmparker_> gseguin: what is that a trend chart of?
[11:57:40] <gseguin> Jive Fathom
[11:57:55] <toddmparker_> eric sarrion was the author who was trying to donate that manuscript to the project
[11:58:05] <toddmparker_> prolly better it's in french
[11:58:11] <gseguin> :D
[11:58:27] <toddmparker_> what does that measure? just internal stuff?
[11:58:56] <gseguin> mostly twitter's firehose
[12:12:26] <toddmparker_> gotcha
[12:12:31] <toddmparker_> lot more buzz
[12:12:55] <toddmparker_> johnbender: does this comment you landed this fix? https://github.com/jquery/jquery-mobile/issues/3276#issuecomment-3802012
[12:12:56] <socialhapy> â˜… Issue #3276 on jquery-mobile, reported by toddparker (1m, 2w ago): Add support for data-role="dialog"
[12:13:04] <toddmparker_> should we close
[12:14:06] <toddmparker_> guess not...just checked my test page
[12:14:07] <toddmparker_> http://jsbin.com/uyinaf/2
[12:14:23] <toddmparker_> so this should look like a dialog with the inset appearance
[12:14:29] <toddmparker_> that is what this ticket is about
[12:14:41] <toddmparker_> you don't get a blank page, we fixed that a while back
[12:15:17] <toddmparker_> blank page at 1.0 - http://jsbin.com/uxeduj/5
[12:15:37] <johnbender> toddmparker_: yep, just making note of it there for the folks who are tracking that issue
[12:15:40] <toddmparker_> fixed at 1.0.1 - http://jsbin.com/uxeduj/4/
[12:15:44] <toddmparker_> ah, ok
[12:16:20] <johnbender> toddmparker_: addressing it to you was confusing though :(
[12:16:26] * johnbender sighs
[12:16:32] * johnbender needs to work on his communication skills
[13:54:47] <gseguin> what did I miss?
[14:37:20] <_|Nix|_> Hey! Now that all the files in js/ have the "define" thing, does that not break trying to use them individually?
[14:38:28] <gseguin> _|Nix|_: you have to use an AMD loader to use them individually
[14:39:13] <gseguin> we use RequireJS, but there are a bunch out there: curl.js, bdLoader, etc...
[14:41:21] <gseguin> _|Nix|_: were you using them individually?
[14:42:00] <_|Nix|_> gseguin: It seems to work if I also include jquery.mobile.define.js ...
[14:42:42] <gseguin> yeah that's a shim
[14:42:48] <_|Nix|_> gseguin: I'm working on #3218, helping out imaginethepoet ...
[14:43:01] <gseguin> but then you don't benefit the dependency management of AMD
[14:44:06] <_|Nix|_> True, but in this case it looks like a pretty simple use case ... and it's merely for a jsfiddle illustration ...
[14:44:44] <gseguin> ok
[14:45:48] <gseguin> I'm curious to know how the raw code is used
[14:46:04] <gseguin> are you pointing at jquerymobile.com/test ?
[14:55:20] <_|Nix|_> gseguin: No, to the raw blobs on github.
[14:55:40] <_|Nix|_> gseguin: http://jsfiddle.net/9C4EW/5/
[14:56:22] <_|Nix|_> gseguin: I'm trying to figure out how come the contents of the popup is being rendered below the bottom of the page. I've seen this before, and it's usually due to missing stylesheets ...
[14:56:36] <_|Nix|_> gseguin: However, I can't seem to figure out which one is missing this time ...
[14:58:15] <johnbender> anyone know why 3 files in js/ are +x ?
[14:59:53] <johnbender> corrected
[15:00:01] <johnbender> hopefully that wasn't important for anyone :/
[15:00:17] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/Wtcv4A
[15:00:17] <jqmobilecommit> [jquery-mobile/master] removed execute permissions on 3 files in js/ - John Bender
[15:03:17] <jqmobilecommit> [jquery-mobile] toddparker pushed 2 new commits to popup-widget: http://git.io/nPBCmg
[15:03:17] <jqmobilecommit> [jquery-mobile/popup-widget] [popup] Restrict scope for a given button's popup to the page under enhancement - Gabriel Schulhof
[15:03:17] <jqmobilecommit> [jquery-mobile/popup-widget] Merge pull request #3536 from gabrielschulhof/popup-widget-fix-scope - Todd Parker
[15:05:35] <jqmobilecommit> [jquery-mobile] johnbender pushed 2 new commits to master: http://git.io/QIxvlw
[15:05:35] <jqmobilecommit> [jquery-mobile/master] core whitespace - John Bender
[15:05:35] <jqmobilecommit> [jquery-mobile/master] setup mobile.widget's enhanceWithin for all widgets not just those that require keep native support - John Bender
[15:07:56] <_|Nix|_> This is weird: If I open https://raw.github.com/jquery/jquery-mobile/popup-widget/css/structure/jquery.mobile.popup.css I see the contents as expected. However, if I add it as a <link href=.../> to a page, google chrome's debugging thing shows it to me as empty ...
[15:08:34] <_|Nix|_> I mean, I go to "Resources" -> "Stylesheets", and there I find jquery.mobile.popup.css and it's empty ...
[15:14:02] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/TMjjPw
[15:14:02] <jqmobilecommit> [jquery-mobile/master] switch to parameter for keepNative support in enhanceWithin - John Bender
[15:30:11] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/em9a7w
[15:30:11] <jqmobilecommit> [jquery-mobile/master] undeclared var - John Bender
[15:31:21] <gseguin> _|Nix|_: the content-type is text/plain
[15:31:33] <gseguin> would that be the reason?
[15:42:32] <jqm-jenkins-bot> Project jqm-master build #440: SUCCESS in 27 min: http://10.59.19.240:8080/job/jqm-master/440/
[16:05:03] <johnbender> lawl @ 27 min build time for a javascript project
[16:05:11] <johnbender> go go integration tests!
[16:05:42] <gseguin> that includes the tests, right?
[16:06:01] <johnbender> oh yah
[16:06:03] <johnbender> ugh
[16:06:10] <johnbender> nomenclature issues
[16:06:15] <johnbender> test run
[16:06:17] <johnbender> is what I should say
[16:06:39] <gseguin> oh, well that's sill a little long but it's not too bad
[16:07:54] <johnbender> if it were actual unit tests it would be much faster
[16:08:02] <gseguin> true
[16:08:22] <johnbender> this is one of the downsides to the user acceptance/integration level testing strategy I used initially
[16:08:29] <johnbender> and continue to use
[16:08:32] <johnbender> it takes longer
[16:08:46] <gseguin> we could have a set of unit tests
[16:08:51] <johnbender> we have unit tests
[16:09:03] <gseguin> yeah yeah
[16:09:03] <johnbender> but because of the way it's built we would have skads of mocking
[16:09:16] <johnbender> and stubbing
[16:09:23] <johnbender> _SKADS_
[16:09:27] <gseguin> but we could have that split so unit tests run in their own jenkins job
[16:09:43] <johnbender> gseguin: yah a build waterfall
[16:09:43] <gseguin> and if successful that triggers the longer integration suite
[16:09:54] <gseguin> 'xactly
[16:10:09] <johnbender> gseguin: that would be nice but I don't know if we have enough of those to be of value
[16:10:17] <johnbender> and they are rarely the tests that fail :(
[16:10:45] <johnbender> gseguin: I secretly wish we were using buildbot
[16:10:55] <johnbender> I would like to learn it and get away from jenkins
[16:11:01] * johnbender is made nervous by jenkins
[16:12:03] <gseguin> what's wrong with jenkins?
[16:12:35] * johnbender looks around to make sure no one is listening
[16:13:05] <johnbender> I don't think it's built super well
[16:13:18] <johnbender> and having everything run through a web interface is frustrating
[16:13:43] <johnbender> keep in mind this is sort of a vague, shapeless disquiet that I'm describing
[16:36:47] <johnbender> toddmparker_: kinblas: https://github.com/jquery/jquery-mobile/commit/13ed270cf5e574c871b55d5e1edb1a207a76db26#commitcomment-932345
[16:36:48] <socialhapy> â˜… Commit on jquery-mobile by johnbender (1h, 32m ago): setup mobile.widget's enhanceWithin for all widgets not just those that require keep native support
[16:41:37] <jqm-jenkins-bot> Project jqm-master build #441: SUCCESS in 26 min: http://10.59.19.240:8080/job/jqm-master/441/
[17:24:40] <scottjehl> heyo
[17:25:10] <scottjehl> gseguin johnbender - still around?
[17:56:56] <funandlearning> Hi...anyone available to answer a question on jquerymobile?
[21:38:17] <gseguin> scottjehl: ping
