[08:40:36] <_nickel> scottjehl: no dice with the chrome forward button last night or this morning
[08:40:50] <_nickel> scottjehl: we're caught between the refresh bug and no forward button it seems
[08:41:31] <_nickel> driving into the office shortly so I'll bbl
[09:59:10] <_nickel> scottjehl: another fun rinkle
[10:02:16] <_nickel> scottjehl: weird rinkles
[10:02:57] <_nickel> wrinkles
[10:03:29] <_nickel> scottjehl: I can get the forward button to appear in certain cases
[10:03:36] <_nickel> scottjehl: nothing deterministic at this point
[10:40:23] <_nickel> scottjehl: alright
[10:40:33] <_nickel> sigh
[11:52:03] <_nickel> scottjehl: if you're around let me know
[12:08:23] <_nickel> toddparker: kinblas: scottjehl: gseguin: I've gotten absolutely no where on this issue
[12:08:47] <_nickel> it appears to be balanced on the fact that we replaced state on the intial load
[12:08:49] <kinblas> _nickel: which?
[12:09:02] * kinblas notes he's in his own little world
[12:09:05] <_nickel> the chrome forward button being broken when going back to the initaly loaded page
[12:09:15] <_nickel> with replace state
[12:09:17] <_nickel> only in chrome
[12:09:50] <kinblas> _nickel: but in chrome? Or is it one of those ambiguities in the spec in terms of behavior?
[12:10:08] * kinblas doesn't remember typing "but in chrome?"
[12:10:19] <kinblas> oh I meant "bug"
[12:10:22] <kinblas> lol
[12:12:16] <_nickel> kinblas: I'm actually not sure thats my next step is to try and distill this issue after lookng into the spec
[12:12:36] <kinblas> _nickel: yeah, I was going to suggest with a basic test case
[12:12:51] <kinblas> to filter out any wierd-ness we're introducing
[12:12:51] <_nickel> yessir
[12:14:49] <_nickel> kinblas: scott did
[12:15:00] <_nickel> kinblas: but the weirdness we're introducing is deliberate
[12:16:03] <kinblas> _nickel: is the wierdness the double replacestate?
[12:16:29] <_nickel> specifically in this case
[12:16:34] <_nickel> we do a replace state on the intial url
[12:19:18] <_nickel> kinblas: we do a replace state on the intial url so that we get a popstate when going back to the initial page
[12:23:47] <kinblas> _nickel: but replace state isn't supposed to create a history entry?
[12:23:52] <kinblas> it's just supposed to replace the current one
[12:23:57] <kinblas> http://www.w3.org/TR/html5/history.html#dom-history-replacestate
[12:24:04] <_nickel> right
[12:24:24] <_nickel> are you suggesting is a chrome bug?
[12:24:28] <_nickel> it works fine in FF
[12:24:52] * kinblas notices that slider animation and fixed header/footer fading is broken on the transitions branch ... *sigh* ... they expect key-frame animation
[12:25:16] <_nickel> kinblas: don't bother with my issues go ahead and focus
[12:25:25] <kinblas> _nickel: no I'm just trying to understand the problem ... I haven't been paying attention like I should to help out
[12:25:34] <_nickel> same ere
[12:25:43] <_nickel> I'm useless with the animation issues right now
[12:26:14] <kinblas> eh, but they are easy to understand ... pushstate/replacestate is something new folks/browsers are trying to use/implement
[12:26:28] <_nickel> pfft
[12:26:31] <_nickel> matter of opinion
[12:26:35] <_nickel> you're having the same issues
[12:26:45] <_nickel> browsers acting like crap
[12:27:02] <kinblas> _nickel: so if you walk me through the use case, then the expectation, I can think about it ... in the background :-)
[12:27:03] <_nickel> kinblas: honestly I'm ok with the forward button being gone in this one case
[12:27:07] <_nickel> kk
[12:27:20] <_nickel> kinblas: I can give you the steps to repro would that be helpful?
[12:27:25] <kinblas> yeah
[12:27:42] <_nickel> if you have the replacestate-external branch
[12:27:46] <_nickel> load the docs
[12:27:58] <_nickel> go forward a page
[12:27:59] * kinblas loads in chrome
[12:28:15] <_nickel> then go back a page
[12:28:21] <_nickel> no forward button
[12:28:22] <_nickel> ...
[12:28:40] <kinblas> ah ok I see it
[12:28:47] <kinblas> the dimmed out forward
[12:29:04] <_nickel> ...
[12:29:08] <_nickel> not a problem in FF
[12:29:23] <_nickel> there are some interesting rinkles
[12:29:26] <kinblas> _nickel: what about safari
[12:29:27] <_nickel> *wrinkles
[12:29:34] <_nickel> haven't tried it
[12:29:36] * kinblas tries
[12:30:21] <kinblas> yeah it works in Safari
[12:30:32] <_nickel> sigh
[12:30:35] <kinblas> so I would do a real basic use case
[12:30:39] <_nickel> yes
[12:30:44] <_nickel> and log a bug?
[12:30:51] <_nickel> see what they come back with?
[12:31:07] <kinblas> one that does hashchange, window.location.back() ... but outside of any jqm page
[12:31:23] <kinblas> if it works in all browsers except chrome then yes it's a bug to be filed
[12:31:39] <kinblas> _nickel: then we need to figure out if we disable pushstate/replacestate for chrome
[12:32:03] <_nickel> kinblas: scott had built one in chrome that worked but it didn't replace the initial url
[12:32:31] <kinblas> _nickel: something to try
[12:32:37] <kinblas> is it only on the initial URL?
[12:32:43] <kinblas> that is ... ifyou go 2 pages/levels in
[12:32:46] <kinblas> and backout one
[12:32:52] <_nickel> yes
[12:32:55] <_nickel> only the initial url
[12:33:00] <_nickel> even weirder
[12:33:03] <kinblas> hmmm interesting
[12:33:19] <_nickel> if you hit a data-ajax=false
[12:33:28] <_nickel> and then go back it doesn't work
[12:33:38] <_nickel> then if you do it again and go back the forward button is there
[12:33:49] <_nickel> steps to repro
[12:33:53] <_nickel> load docs
[12:33:59] <_nickel> click Pages and Dialogs
[12:34:07] <_nickel> click multi page template
[12:34:09] <_nickel> click back twice
[12:34:20] <_nickel> repeat
[12:34:33] <_nickel> notice that the forward button works but is broken on the Pages and Dialogs page
[12:34:34] * kinblas notes the pushstate branch doesn't render in opera desktop
[12:34:43] <_nickel> kinblas: have you updated?
[12:34:49] <_nickel> kinblas: fetched
[12:34:59] <_nickel> that should have been corrected yesterday
[12:35:12] <kinblas> _nickel: I did a pull when we started
[12:35:15] <kinblas> talking today
[12:35:22] <_nickel> hmm
[12:35:24] <kinblas> version 11.10
[12:35:35] <_nickel> checking
[12:36:34] <kinblas> do folks really like this new trend in UI where everything is under a single faux button in the corner?
[12:59:37] <scottjehl> hey
[13:00:11] <scottjehl> kinblas - example?
[13:00:48] <scottjehl> _nickel I saw you just pushed something up?
[13:05:26] <kinblas> scottjehl: example UI?
[13:05:28] <_nickel> scottjehl: nothing worth being excited about
[13:05:40] <_nickel> kinblas: opera desktop is working fine for me
[13:05:48] <kinblas> scottjehl: I meant the new FF, Opera, Chrome, where things are just tabs
[13:06:04] <_nickel> kinblas: less chrome == more web
[13:06:09] <_nickel> I prefer a minimal chrome
[13:06:19] <_nickel> sorry, thats the idea I think at least and I like it
[13:06:24] <kinblas> _nickel: I just find myself searching for features now
[13:06:39] <kinblas> maybe it's just re-orienting/re-familiarizing myself with new stuff
[13:06:49] <_nickel> scottjehl: I'm going to boil down our issue and post a bug to chrome dev
[13:07:43] <_nickel> toddparker: scottjehl: I think we should ship it as either now or later, but I'm biased because of all the testing setup work :/
[13:09:10] <scottjehl> no I agree - I think we're so close
[13:11:47] <scottjehl> I have a question/suggestion
[13:12:16] <scottjehl> so, I added pushState to that demo site I sent you by email yesterday (did you see it?).
[13:13:49] <_nickel> no
[13:13:57] <scottjehl> hang
[13:13:57] <_nickel> scottjehl: which email
[13:15:35] <scottjehl> "dConstruct Sample App"
[13:15:37] <_nickel> scottjehl: ah
[13:15:40] <_nickel> yes I did get it
[13:15:42] <_nickel> looking now
[13:16:30] <_nickel> scottjehl: do you mean you added a new module that uses pushState or you are using the replaceState branch?
[13:16:42] <scottjehl> k. Anyway, I added the replaceState plugin to that demo site externally, on top of a minified version of jQM.
[13:16:55] <scottjehl> in order to get it to work, I had to bind init to window.load
[13:16:56] <_nickel> ah
[13:17:11] <scottjehl> because it was after registerInternalEvents already
[13:17:29] <scottjehl> then I wondered if that'd be a smarter approach anyway.
[13:17:30] <_nickel> ok so that monkeypatch won't work
[13:17:53] <_nickel> yah we can just init whenver we want
[13:17:57] <_nickel> so long as its after jqm
[13:18:01] <scottjehl> like, maybe we could init the plugin on domready for instance
[13:18:23] <_nickel> less monkeypatch is mo-betta
[13:18:26] <scottjehl> yeah
[13:18:40] <scottjehl> and it'd work better when loaded dynamically that way
[13:18:45] <scottjehl> if one were to do such a thing
[13:19:28] <_nickel> scottjehl: certainly appears to work just fine here
[13:19:48] <scottjehl> what? domready?
[13:19:56] <_nickel> scottjehl: yah
[13:20:02] <scottjehl> awesome. I say go then
[13:20:14] <_nickel> yah
[13:20:18] <scottjehl> I didn't like the monkey stuff anyway
[13:20:20] <scottjehl> my bad
[13:20:45] <_nickel> I was complicit
[13:21:12] <_nickel> scottjehl: the only thing that worries me is a problem with event driven everything anyway
[13:21:30] <_nickel> which is that the timing is not obvious which could result in people doing weird things
[13:21:41] <scottjehl> well, my original intention was that this script would drop into navigation.js, which is why I'd monkey'd it into there
[13:21:47] <scottjehl> but then, I like it this way now
[13:21:55] <scottjehl> OH I remember why now
[13:22:03] <_nickel> yah if people find some problem we didn't think of its easy to get rid of
[13:22:29] <scottjehl> registerIntEvents only runs after qualification. That's why I tied it in.
[13:22:39] <_nickel> qualification?
[13:22:42] <scottjehl> so the events wouldn't bind unless gradeA passes
[13:22:48] <_nickel> ah!
[13:23:15] <scottjehl> anyway.. that's pretty minor, since I can't imagine a browser that isn't grade A but does support pushState
[13:23:20] <scottjehl> but hmm... not sure
[13:24:03] <_nickel> I think what you're describing is an example of what i was talking about
[13:24:13] <scottjehl> I do think it's important that this thing doesn't need to monkey its way into our codebase
[13:24:21] <_nickel> domready doesn't represent the "when" for binding these events
[13:24:27] <_nickel> scottjehl: agreed
[13:24:46] <scottjehl> registerIntEvents should be an event
[13:25:27] <scottjehl> or... better yet. We have an event that triggers once a device is qualified
[13:25:44] <_nickel> what would you call that though?
[13:25:53] <scottjehl> doc.trigger( "enhancing" ) or something
[13:26:14] <scottjehl> it's basically the point when we either stop in our tracks or continue
[13:27:10] <_nickel> if you include it externally that won't work right?
[13:27:30] <_nickel> sorry I went back to think about your original issue
[13:27:49] <scottjehl> hmm so mobileinit fires, then we run the qualifier test, we should have an event right then
[13:28:19] <scottjehl> right now, it won't work when loaded externally, right
[13:28:35] <_nickel> scottjehl: right because it has dependencies on the nav code
[13:28:44] <_nickel> unless you did it on some external event
[13:29:05] <_nickel> so the first question to answer is how badly do you want it to be available as an external bit of the library
[13:29:16] <_nickel> another script tag
[13:35:01] <scottjehl> that part is less important than generally not having to monkeypatch
[13:35:37] <scottjehl> although, it'd allow people to add this plugin to their live codebase very easily if it ran on its own
[13:39:23] <_nickel> scottjehl: is there any reason that mobileinit is triggered before the grade check?
[13:39:40] <scottjehl> yep. so you can do whatever you want with the grade check
[13:39:48] <_nickel> thats hwat i was going to say
[13:39:52] <_nickel> you can monkey with it
[13:40:35] <scottjehl> $(document).bind( "mobileinit", function(){ $.mobile.gradeA = function(){return true'; } }); //RELEASE THE HOUNDS
[13:40:47] <_nickel> right
[13:42:05] <_nickel> scottjehl: beforeenhance?
[13:42:29] <scottjehl> sure. that'd work
[13:42:48] <scottjehl> then registerIntEvents could bind to that too
[13:43:03] <scottjehl> I think
[13:43:14] <_nickel> indeed
[13:43:29] <scottjehl> hmm. This still won't solve the problem with replaceState
[13:43:53] <scottjehl> the ability to add replacestate plugin AFTER jqm is what I was looking for
[13:44:25] <scottjehl> I think that'd require domready or something
[13:47:45] <_nickel> scottjehl: we could bind to both so it would work in either case
[13:47:53] <_nickel> any only init once
[13:47:59] <_nickel> kind of ghetto
[13:48:04] <_nickel> but best of both worlds
[13:48:15] <scottjehl> if it was a widget, we'd get that naturally
[13:48:26] <_nickel> assuming binding to dom ready isn't just a crappy idea all together
[13:48:45] <scottjehl> well honestly, I'd start there
[13:48:54] <_nickel> bind to both
[13:48:56] <_nickel> ?
[13:50:45] <scottjehl> well if domready works, it gets us off the monkey
[13:50:52] <_nickel> indeed it does
[13:52:46] <scottjehl> nobody likes a monkey patcher
[14:21:56] <kinblas> heh
[14:22:05] <kinblas> there's a t-shirt
[14:43:01] <kinblas> scottjehl: _nickel: for Beta2 did we add documentation regarding the domCache?
[14:44:42] <_nickel> kinblas http://jquerymobile.com/demos/1.0b2/#/demos/1.0b2/docs/pages/page-cache.html
[14:44:55] <kinblas> _nickel: thanks
[14:45:07] <_nickel> kinblas: I actually wasn't sure so I ack'd
[14:45:31] <_nickel> having a spectacularly hard time focusing today
[15:20:25] <scottjehl> so _nickel, you think this is a Chrome bug then?
[15:20:46] <scottjehl> are you able to produce a JSbin that reproduces it?
[15:20:48] <_nickel> scottjehl: on kinblas's advice I'm trying to build a minimal example that demonstrates the issue
[15:20:54] <_nickel> scottjehl: working on that now
[15:21:05] <_nickel> I'm slowly rebuildng the pushstate plugin without jquery / helpers
[15:21:21] <scottjehl> k.
[15:21:39] <scottjehl> oh. for the jsbin?
[15:21:47] <_nickel> scottjehl: yah
[15:21:50] <scottjehl> sounds complicated.
[15:22:03] <_nickel> scottjehl: pain in the arse but we need to report it
[15:22:06] <_nickel> good web citizens etc
[15:22:06] <scottjehl> can't it be proven with a simple contrived example?
[15:22:12] <_nickel> scottjehl: no
[15:22:32] <scottjehl> I was just thinking the plugin just does a ton of irrelevant stuff
[15:22:38] <_nickel> and we'll have to explain why we're doing the hash and state juggling too because I'm sure that will raise some eyebrows
[15:22:44] <_nickel> scottjehl: not really
[15:22:52] <scottjehl> ok :)
[15:23:10] <scottjehl> if it's definitely a Chrome bug though, let's move forward on landing this
[15:25:18] <_nickel> scottjehl: I'm really struggling to pinpoint what exactly is causing it and so I'm not super confident in calling it a chrome bug
[15:25:29] <_nickel> scottjehl: I still think we should land it in the meantime
[15:25:35] <_nickel> and I'll keep trying to sort this out
[15:25:38] <_nickel> its a small nit
[15:28:17] <scottjehl> yeah. agreed. I'm so freaking excited about this addition. Probably my favorite change so far
[15:28:36] <_nickel> scottjehl: certainly been a long time coming eh?
[15:29:00] <scottjehl> well I just feel like this removes all caveats
[15:29:15] <scottjehl> without pushstate, we do all this stuff, but we leave a trail of bad urls
[15:30:43] <_nickel> scottjehl: ugh, if the damn browser would just fire SOME event when we hit that back button from the second page we wouldn't have this problem
[15:31:08] <_nickel> dong that very first replace state so theres a opstate fired when returning home is what borks the back button in this case
[15:31:18] <_nickel> err
[15:31:19] <scottjehl> yeah...
[15:31:20] <_nickel> forward button
[15:33:08] <_nickel> scottjehl: also I realized we don't have the enable the popstate listening with that boolean
[15:33:14] <_nickel> we just have to check that there
[15:33:26] <_nickel> *that the state is not null
[15:34:17] <scottjehl> is it still null even when you refresh a page that has had a replaceState called on it?
[15:34:30] <scottjehl> good thinking, btw. just wondering
[15:34:57] <_nickel> meaning the "click a link, refresh, go back" issue?
[15:35:16] <scottjehl> no like... chrome's native popstate event that it fires at load
[15:35:29] <_nickel> yah its null
[15:35:37] <_nickel> that initial popstate ... has no state lol
[15:35:40] <_nickel> wtf is that thing anyway
[15:35:58] <scottjehl> is it always stateless? Even if that url had been replaced before?
[15:36:18] <scottjehl> the whole history api is a love / hate thing for me
[15:36:26] <scottjehl> I love that it works. That's about all I love
[15:36:36] <_nickel> don't know if you saw my tweet
[15:36:54] <_nickel> objs/fns should be last params in an api
[15:37:21] <_nickel> setTimeout/(push|replace)State are annoying in this regard as well
[15:37:45] <scottjehl> yeah, agreed on your tweet
[15:38:02] <scottjehl> the timeout's our own fault, right? I tried to use something else but came up empty
[15:38:42] <_nickel> scottjehl: ok no I just mean the function sig
[15:38:53] <_nickel> and I believe my change removes that
[15:39:05] <_nickel> well the one in the init at least
[15:39:37] <_nickel> setTimeout( function() { }, 1000) should really be setTimeout(1000, function() { });
[15:39:42] <_nickel> cleaner design
[15:40:10] <_nickel> same with the object literal on push and replace state
[15:40:20] <_nickel> state should be at the end of the function signature
[15:42:51] <scottjehl> oh oh
[15:42:53] <scottjehl> yeah
[15:43:08] <scottjehl> I thought you meant timeouts in our replacestate plugin
[15:43:14] <scottjehl> anyways...
[15:43:15] <_nickel> oh no
[16:10:20] <_nickel> scottjehl: ok I've got the minimum thats required to repro the issue at the root /
[16:10:27] <_nickel> but I need to tweak it to work in jsbin
[16:29:30] <scottjehl> cool!
[16:29:43] <_nickel> scottjehl: nightmares
[16:30:16] <_nickel> scottjehl: it does in fact require the hashchange handling along with the popsate functionality it appears
[16:30:28] <_nickel> I basically stole that part and ghettoed the url handling
[16:30:51] <scottjehl> huh.
[16:51:03] <kinblas> jbender: ping
[16:51:11] <kinblas> I gots a select menu doozy
[16:51:12] <kinblas> https://github.com/jquery/jquery-mobile/issues/2329#issuecomment-1884513
[16:51:21] <kinblas> :-)
[16:55:09] <kinblas> whoops, I meant _nickel: ^^^
[16:56:28] <_nickel> kinblas: yah I'm gonna have to think that one through lol
[16:56:50] <_nickel> kinblas: there's actually a change to that too
[16:56:57] <_nickel> though I don't think its relevant
[16:57:10] <_nickel> it only binds that if the pages settings are domCache == false
[16:58:22] <_nickel> kinblas: scottjehl: http://jsbin.com/ejifav/3/
[16:58:24] <_nickel> jesus
[16:59:01] <_nickel> scottjehl: kinblas: I'll log that issue with the chromium team tomorrow
[17:00:21] <_nickel> kinblas: so the page thats brought up from the listview is the one with the selects on it/
[17:00:24] <_nickel> ?
