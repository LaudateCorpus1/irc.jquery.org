[02:11:41] <_|Nix|_> Hey! Is there a place where I can upload a script?
[02:12:13] <_|Nix|_> Until I get babulina.go-nix.ca back up and running I have a hard time creating scripts for jsperf.com because I have no place to upload them ...
[02:12:47] <_|Nix|_> I suppose I could set up some hosting for myself ...
[02:13:13] <uGoMobi> _|Nix|_: how about a github repo?
[02:13:46] <uGoMobi> _|Nix|_: I have ugomobi.github.com
[02:14:14] <uGoMobi> oh it's on the .io domain now
[02:14:26] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #336: STILL FAILING in 10 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/336/
[02:15:09] <_|Nix|_> uGoMobi: Not bad ... one of those that creates a Web site ...
[02:15:16] <uGoMobi> _|Nix|_: yeah
[02:15:44] <uGoMobi> I use it to test custom builds too
[02:17:58] <uGoMobi> _|Nix|_: they call it Github Pages
[02:32:20] <_|Nix|_> uGoMobi: Suppose I follow the instructions at https://help.github.com/articles/creating-project-pages-manually and I clone https://github.com/gabrielschulhof/jquery-mobile. Will that create gabrielschulhof.github.io/jquery-mobile?
[02:32:50] <_|Nix|_> I guess I should wait those ten minutes it says it takes for the first-time publication.
[02:34:09] <uGoMobi> _|Nix|_: yeah, I think it should work like that
[02:34:43] <uGoMobi> _|Nix|_: I never cloned jQM there, just uploaded custom builds
[03:26:56] <_|Nix|_> uGoMobi: OK, I must've done something wrong, because it doesn't show up either at http://gabrielschulhof.github.io/ or at http://gabrielschulhof.github.io/jquery-mobile
[03:27:14] <_|Nix|_> It says up to 10 minutes ... well, it's been a lot longer ...
[03:30:56] <uGoMobi> _|Nix|_: yeah, maybe it doesn't work with a forked repo
[03:33:11] <uGoMobi> _|Nix|_: you could setup a new repo, put an index page in there and then clone JQM in the same folder as you use for the new repo
[03:33:33] <_|Nix|_> uGoMobi: Maybe it's because I don't have an index.html ...
[03:33:47] <uGoMobi> _|Nix|_: yes, probably
[03:34:45] <uGoMobi> _|Nix|_: and I don't think it should be a forked repo, see the difference.... https://github.com/gabrielschulhof?tab=repositories vs. https://github.com/uGoMobi?tab=repositories
[03:35:35] <_|Nix|_> uGoMobi: Indeed ... I'll try that.
[03:35:39] <uGoMobi> _|Nix|_: but I think you should still be able to clone JQM in the new repo
[03:36:09] <_|Nix|_> uGoMobi: Yeah, I don't actually need to clone anything. I just need a place to put files.
[03:36:09] <uGoMobi> _|Nix|_: not sure if you then still have "upstream"
[03:36:21] <uGoMobi> _|Nix|_: yes exactly
[03:36:27] <_|Nix|_> uGoMobi: OK. I'll try that.
[03:36:30] <_|Nix|_> uGoMobi: Thanks!
[03:36:41] <uGoMobi> _|Nix|_: np!
[03:41:54] <_|Nix|_> OK ... here goes nothing ...
[03:42:24] <_|Nix|_> uGoMobi: BTW: I got some preliminary results for buttonMarkup performance: http://jsperf.com/buttonmarkup-master-vs-next
[03:42:41] <_|Nix|_> uGoMobi: One of the scripts is localhost, so you can't run it. That's what I'm working on ...
[03:43:14] <_|Nix|_> uGoMobi: addClass is the fastest, but buttonMarkup is not that much slower.
[03:43:32] <_|Nix|_> uGoMobi: Perplexingly, if I tell it not to look at existing classes, it's slower O_o
[03:44:01] <uGoMobi> _|Nix|_: Interestinggg
[03:44:16] <_|Nix|_> I know, eh? Weird ...
[03:44:54] <uGoMobi> _|Nix|_: that is "firstCall" ?
[03:45:06] <_|Nix|_> uGoMobi: .buttonMarkup( options, firstCall );
[03:45:10] <uGoMobi> ok
[03:45:21] <_|Nix|_> uGoMobi: Basically, do not process existing classes and assume it's the first time you're enhancing.
[03:45:34] <_|Nix|_> uGoMobi: So, all it does is assemble and set .className.
[03:45:37] <uGoMobi> _|Nix|_: gotcha
[03:46:08] <_|Nix|_> uGoMobi: Weird that it's slower than parsing existing classes + removeClass + setting className.
[03:46:40] <_|Nix|_> uGoMobi: I'll re-run the tests when my computer is not crazy I/O-bound backing stuff up :)
[03:46:59] <uGoMobi> _|Nix|_: good luck with that
[03:47:19] <_|Nix|_> uGoMobi: It's going well. I ran out of space while doing an rsync, so now I have to do it again.
[03:47:35] <uGoMobi> aii
[03:47:45] <_|Nix|_> The essential stuff is backed up.
[03:48:15] <_|Nix|_> *sigh* ... I may run out of space again ...
[03:48:16] <uGoMobi> that's most important
[03:49:43] <uGoMobi> _|Nix|_: we do have an issue with buttons in "next" though. See http://view.jquerymobile.com/next/demos/widgets/accordions/
[03:51:22] <uGoMobi> _|Nix|_: the "navigation" link in the header should be auto enhanced as button (.ui-header > a)
[04:07:07] <_|Nix|_> uGoMobi: I got rid of that based on what arschmitz said.
[04:07:15] <_|Nix|_> uGoMobi: It was actually in the code before.
[04:07:30] <_|Nix|_> uGoMobi: So, when we merge it all, it should be fine.
[04:07:36] <uGoMobi> _|Nix|_: ah ok
[04:07:41] <uGoMobi> perfect
[04:08:06] <uGoMobi> didn't see that commit, sorry
[04:10:16] <_|Nix|_> uGoMobi: I did it when I re-introduced buttonMarkup.
[04:12:38] <uGoMobi> _|Nix|_: could it be that the original classes are removed from a link?
[04:12:58] <uGoMobi> _|Nix|_: see the API docs button http://view.jquerymobile.com/next/demos/widgets/accordions/
[04:13:59] <uGoMobi> I think it has class "jqm-api-link" in the markup, but it's removed
[04:16:28] <_|Nix|_> uGoMobi: Really? Weird ...
[04:18:10] <_|Nix|_> uGoMobi: OK. I'll check.
[04:18:19] <uGoMobi> _|Nix|_: ok, thanks
[04:21:24] <jqmobilecommit> [13jquery-mobile] 15derhansen opened issue #5938: Input fields not accessible when using JQuery Mobile in a webview on a Samsung Galaxy S3  02http://git.io/fPvR-A
[04:52:28] <_|Nix|_> uGoMobi: OK ... I was clobbering existing classes ... heh ... *blush* ...
[05:21:38] <arschmitz> Morning _|Nix|_: uGoMobi:
[05:30:48] <uGoMobi> morning arschmitz 
[06:21:20] <uGoMobi> _|Nix|_: Ping!
[07:04:32] <toddmparker> morning
[07:05:08] <arschmitz> Morning toddmparker:
[07:05:14] <toddmparker> hey arschmitz 
[07:06:52] <arschmitz> toddmparker: with how easy it was to integrate tabs im wondering if there are any other ui widgets i should see if we can just drop in the same way?
[07:09:03] <toddmparker> arschmitz: good idea, but i'm not sure what else
[07:10:04] <toddmparker> date picker isn't going to be easy
[07:11:23] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 2 new commits to 06next: 02http://git.io/5hBs3Q
[07:11:23] <jqmobilecommit> 13jquery-mobile/06next 14155ff69 15Jasper de Groot: Select: Adjusted button classes.
[07:11:23] <jqmobilecommit> 13jquery-mobile/06next 14acc80cd 15Jasper de Groot: Select: Don't remove the multiple select count bubble when setting button text.
[07:20:14] <toddmparker> arschmitz: how about http://jqueryui.com/autocomplete/
[07:20:32] <toddmparker> http://jqueryui.com/spinner/
[07:21:02] <jqmobilecommit> [13jquery-mobile] 15didiergm opened issue #5939: demos - leads to a 404  02http://git.io/zEaMKQ
[07:21:40] <toddmparker> both of those could fit into our UI easily
[07:22:38] <arschmitz> toddmparker: yeah my first thought was datepicker but i think the css will be tough and they are working on a rewrite if im not mistaken
[07:22:54] <arschmitz> but datepicker and autocomplete are both good ideas
[07:22:57] <toddmparker> yeah, date picker isn't going to be easy and it's being re-written
[07:23:12] <arschmitz> yeah thats what i thought
[07:23:15] <toddmparker> we had a hacked autocomplete, but  theirs is way better
[07:23:26] <arschmitz> yeah i think ill take a look
[07:24:40] <arschmitz> im looking at the interactions branch too for their pointer events see what we can do with that
[07:25:17] <arschmitz> i think one way or another we MUST support pointer events for 1.4
[07:30:32] <toddmparker> be good to see if those are baked enough to use. they seemed really solid
[07:31:04] <toddmparker> for the UI interactions, if they work with touch/pointer events there is n't a ton we need to do on our side to 'add' them since there is no UI
[07:31:06] <arschmitz> chrome already yeah tried to catch scott_gonzalez or korchers about them yesterday but missed them going to try again today
[07:31:33] <arschmitz> yup just add an autoinit shim like for tabs basicluy
[07:31:42] <toddmparker> gseguin|away or gnarf - we're having a lot of complaints about the stability of view.jquerymobile.com
[07:31:57] <scott_gonzalez> arschmitz: What's up?
[07:32:29] <arschmitz> Hi scott_gonzalez: was just wondering about the interactions and interactions-pointer branches in ui
[07:33:01] <arschmitz> we need to add pointer support to mobile and it seems like you guys have already done a lot of work on making the touch and pointer and mouse all work together
[07:33:17] <scott_gonzalez> So we've got three things going on right now.
[07:33:39] <scott_gonzalez> 1) The interactions branch which does the mouse/touch/pointer normalization in a base widget called interaction.
[07:34:08] <scott_gonzalez> 2) The interactions-pointer branch where we synthesize pointer events and then build on top of just pointer events.
[07:34:28] <scott_gonzalez> 3) Reviewing hand.js (comparison against interactions-pointer).
[07:34:38] <scott_gonzalez> http://aka.ms/handjs
[07:35:47] <arschmitz> cool
[07:36:09] <arschmitz> right now we have a bunch of virtual events that attempt to normalize mouse and tocuh events
[07:36:28] <arschmitz> but honestly the more time goes on the more problems we find with them and the less we recomend using them
[07:36:58] <arschmitz> so now that we need to add pointer too it might be time to rethink our approach 
[07:37:33] <arschmitz> so thought it might be good to see what you guys are working on and thinking the best approach is
[07:38:19] <toddmparker> right, we'll just take whatever you end up with in UI
[07:38:36] <toddmparker> but it would be nice to start encouraging people to use these events soon
[07:38:46] <toddmparker> was going to mention hand.js
[07:39:20] <toddmparker> scott_gonzalez: is that a microsoft plugin? it's on msdn
[07:39:41] <arschmitz> yeah i think we should share what ever we end up with for sure 
[07:39:56] <scott_gonzalez> Yeah, it's written by MS.
[07:40:11] <scott_gonzalez> They're trying to make sure it works for all of our environments.
[07:40:21] <arschmitz> scott_gonzalez: if there is anything we can do to help with interactions stuff please let me know 
[07:40:47] <toddmparker> be ideal if msft did a good job with this and would actively maintain it
[07:40:52] <toddmparker> one less thing for us to own
[07:41:11] <scott_gonzalez> If you guys want to do some testing of hand.js, that'd be helpful.
[07:41:15] <scott_gonzalez> See if you can find any problems.
[07:41:25] <toddmparker> seems like it's in their best interest to get people using this, otherwise pointer events won't be well supported by devs for a while
[07:41:29] <scott_gonzalez> DaveMethvin and I have another call with them on Monday evening.
[07:41:50] <toddmparker> be good to set up a solid test page where we can put this thru it's paces and resort results
[07:41:54] <toddmparker> happy to do some testing
[07:41:59] <toddmparker> cool
[07:42:14] <toddmparker> report results, not resort :p
[07:43:43] <arschmitz> ill take a look and see what i can do today / this weekend to put a test page together and try on a bunch of devices
[07:43:58] <scott_gonzalez> We can also try running it through the Pointer Events test suite.
[07:44:26] <scott_gonzalez> There are probably some things that'll fail which we don't care about.
[07:44:48] <scott_gonzalez> Some of the low-level stuff, like is the event object an instance of PointerEvent.
[07:45:51] <arschmitz> yeah stuff specific to the implementation
[07:47:09] <didiergm> arschmitz - can't help with dev per se but it that helps I am happy to help testing & report. I have 3 tablets & a smartphone. Am I am willing to help at my level
[07:47:33] <didiergm> s/Am I am/and I am/
[07:48:03] <arschmitz> didiergm: Cool what do you have for devices?
[07:49:18] <didiergm> arschmitz : one Ipad 2, a Galaxy note 10.1 and Nexus 7" and a wicko phone - Had to buy these when I started using JQM to show potential customers what could be achieved
[07:50:18] <didiergm> so it is time to give alittle back to this project
[07:50:24] <arschmitz> didiergm: cool i will keep that in mind 
[07:50:41] <arschmitz> not familier with a wicko phone?
[07:50:53] <didiergm> I am always on IRC (Europe/paris time) send me a nudge whenever. 
[07:51:47] <didiergm> Wicko is a "French" brand or so they say. China Build, dual Sim card. pretty cheap. Seems solid enough, fairly fast & responsive 
[07:52:11] <arschmitz> awesome thank you i dont think we have a galaxy note 10.1 
[07:52:18] <arschmitz> hmm ok android based?
[07:52:30] <didiergm> Yes android 4.0
[07:52:47] <arschmitz> cool will keep that in mind i know we dont have one of those lol!
[07:52:56] <didiergm> :)
[07:53:28] <didiergm> JQM runs really well on it. Easier to use than a 7" Nexus.
[07:53:52] <arschmitz> nice android 4.0 is a little buggy in general but a whole lot better then 2.3 
[07:55:17] <arschmitz> good to know it runs well on there though we have run into a lot of device specific android bugs
[07:56:09] <didiergm> to be fair. I asked my clients to download Chrome( even on Ipad).  At least I get more or less the same bugs everywhere. But will be happy to test on native browsers
[07:56:32] <didiergm> and Firefox mobile too
[07:57:33] <didiergm> Using Chrome - I get the same experience on Desktop & Mobile - users love it.
[08:08:42] <johnbender> today I deal with `loadPage` 
[08:08:50] * johnbender cracks his knuckles
[08:10:33] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 2 new commits to 06next: 02http://git.io/qIZYCA
[08:10:33] <jqmobilecommit> 13jquery-mobile/06next 14163a43c 15Jasper de Groot: Select: Updated CSS for the select button.
[08:10:33] <jqmobilecommit> 13jquery-mobile/06next 14972da62 15Jasper de Groot: Select: text-overflow ellipsis for the span to make it work on Chrome and Safari.
[08:17:49] <uGoMobi> toddmparker: how do you feel about switching to em values for all those left/right padding rules?
[08:18:06] <toddmparker> worth trying that
[08:18:07] <uGoMobi> and ui-content { padding: 1em; }
[08:18:21] <toddmparker> i'd just do some testing with nested elements to see if issues pop up
[08:18:31] <toddmparker> we use ems for all that stuff on client work
[08:19:24] <uGoMobi> toddmparker: ok, I'll switch them on "next" so we can see how it works out
[08:19:33] <toddmparker> perfect
[08:19:46] <uGoMobi> rem isn't supported by all platforms I think
[08:23:42] <arschmitz> uGoMobi: yeah sadly no oldIE support and opera only supports in new est version
[08:24:17] <uGoMobi> arschmitz: right, that's a no go
[08:24:42] <arschmitz> yup
[08:24:59] <arschmitz> uGoMobi: someday .....
[08:52:25] <toddmparker> yeah, rem is out
[08:58:09] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 4 new commits to 06content-widget: 02http://git.io/C4hQfg
[08:58:09] <jqmobilecommit> 13jquery-mobile/06content-widget 14c9199cd 15John Bender: remove scroll position, duplicate enhancePage, and _bindPageRemove from content widget todo list
[08:58:09] <jqmobilecommit> 13jquery-mobile/06content-widget 1496ea0ca 15John Bender: loadPage moved to content widget as loadContent, global method is an alias
[08:58:09] <jqmobilecommit> 13jquery-mobile/06content-widget 14a82a4f6 15John Bender: move loadPage defaults to _loadContentDefaults
[09:10:11] <gseguin> toddmparker: what do you mean by stability?
[09:10:11] <bot-t> (131 hours ago) <johnbender> tell gseguin my first pass at the perf stuff left the recording of times across versions as a manual excercise
[09:10:11] <bot-t> (131 hours ago) <johnbender> tell gseguin I think we should start there because the last time I did this and set something up for the recording it ended up being a huge waste of time
[09:10:28] <johnbender> sigh
[09:10:29] <gseguin> is the site reported to be down?
[09:11:00] <gseguin> johnbender: got it, will look at that branch and talk with DaveMethvin next week or so
[09:11:37] <gseguin> toddmparker: I just pulled view.jquerymobile.com and it seems to be live
[09:11:45] <uGoMobi> gseguin: https://github.com/jquery/jquery-mobile/issues/5937
[09:11:52] <uGoMobi> gseguin: https://github.com/jquery/jquery-mobile/issues/5939
[09:12:06] <uGoMobi> gseguin: seems to be on and off
[09:12:12] <gseguin> hmm
[09:12:17] <toddmparker> gseguin: i see a few tweets a day complaint that the docs are down so view isn't as stable as our last setup
[09:12:22] <toddmparker> cc: gnarf 
[09:12:37] <gseguin> I think that would be more an issue for gnarf or ryanneufeld if it's the machine going down
[09:13:32] * gseguin is going back to his vacation
[09:14:04] <gseguin> toddmparker: I can bounce the services if needed. Ping me here or by email
[09:14:10] <gseguin> later
[09:38:30] <johnbender> gseguin|away: sorry those messages were from long long ago
[09:38:37] <johnbender> well
[09:38:48] <johnbender> gseguin|away: 131 hours obviously
[09:38:58] <johnbender> gseguin|away: but a long time ago by my internal clock
[09:50:00] <toddmparker> agcolom: you around?
[10:36:50] <agcolom> toddmparker: I am a bit now
[10:38:46] <_|Nix|_> uGoMobi: Pong!
[10:39:15] <uGoMobi> hey _|Nix|_ 
[10:39:30] <uGoMobi> _|Nix|_: let me think why I pinged you ;)
[10:39:45] <_|Nix|_> :)
[10:40:07] <uGoMobi> _|Nix|_: ah I remember...
[10:40:48] <uGoMobi> _|Nix|_: I saw that we add all the classes of the select and options elements to the span in the select button
[10:41:06] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 2 new commits to 06next: 02http://git.io/RFZ-rQ
[10:41:06] <jqmobilecommit> 13jquery-mobile/06next 1491b1415 15Gabriel Schulhof: buttonMarkup: Provide option to simply add the markup without attempting to identify existing button state.
[10:41:06] <jqmobilecommit> 13jquery-mobile/06next 14a1a8f21 15Gabriel Schulhof: buttonMarkup: Do not clobber existing classes either during enhancement or during subsequent calls.
[10:41:12] <uGoMobi> _|Nix|_: I felt like removing that, but wanted your opinion
[10:41:41] <_|Nix|_> uGoMobi: Lemme have a look ...
[10:42:22] <uGoMobi> _|Nix|_: https://github.com/jquery/jquery-mobile/blob/next/js/widgets/forms/select.js#L253
[10:43:09] <_|Nix|_> uGoMobi: Weird, because that doesn't seem to be happening in the demos ...
[10:43:28] <_|Nix|_> uGoMobi: Oh, wait, you mean if the original select has any classes ...
[10:43:35] <uGoMobi> _|Nix|_: because we don't have classes on the native select and its option elements there
[10:43:40] <uGoMobi> _|Nix|_: yup
[10:44:02] <_|Nix|_> uGoMobi: Weeeeell ...
[10:44:27] <uGoMobi> _|Nix|_: we should add the class of the select to the ui-select wrapper (issue #3577)
[10:44:49] <_|Nix|_> Well, OK, yeah ... in that sense, sure!
[10:44:52] <uGoMobi> but I don't see the use of adding this to the span
[10:45:08] <_|Nix|_> Agreed. The outermost element is the logical place for it.
[10:45:24] <_|Nix|_> uGoMobi: Does select have an implementation of widget()?
[10:45:32] <uGoMobi> yes, and classes of the selected options??
[10:45:44] <uGoMobi> _|Nix|_: no, not yet
[10:46:12] <_|Nix|_> uGoMobi: Then you should probably add that and have it return the div.ui-select
[10:46:43] <_|Nix|_> uGoMobi: I don't even know where to begin for the options ... what's the point of adding a class to an option?
[10:46:44] <uGoMobi> _|Nix|_: yes, we have to add that and also look at the disable/enable methods
[10:46:56] <uGoMobi> _|Nix|_: exactly... I dunno
[10:47:25] <_|Nix|_> uGoMobi: Don't get carried away. That's part of the widget review. We will do it. For now, let's concentrate on widget() and this class copying business.
[10:47:44] <uGoMobi> _|Nix|_: ok, you are right
[10:48:10] <uGoMobi> _|Nix|_: I think we should look at the class copying thing for all widgets with wrappers at once
[10:48:22] <_|Nix|_> uGoMobi: widget() is relevant here, because we're designating a div as the "representative" of the widget.
[10:48:33] <_|Nix|_> uGoMobi: Are we doing a lot of class copying?
[10:49:17] <uGoMobi> _|Nix|_: we should do this for input type button, checkboxradio, slider, textinput and select
[10:49:32] <uGoMobi> those get a wrapper div
[10:50:31] <uGoMobi> _|Nix|_: for checkboxradio I made widget() return the label/btn to make disable/enable work
[10:50:39] <uGoMobi> like you suggested
[10:50:48] <uGoMobi> but they have a wrapper
[10:50:58] <uGoMobi> that's something to look at
[11:02:33] <_|Nix|_> Yep.
[11:09:34] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 2 new commits to 06content-widget: 02http://git.io/AbtK2Q
[11:09:34] <jqmobilecommit> 13jquery-mobile/06content-widget 1407c880a 15John Bender: move first page references to initialContent and base to _getBase calls
[11:09:34] <jqmobilecommit> 13jquery-mobile/06content-widget 14f943732 15John Bender: break out existing page logic
[11:29:05] <johnbender> FFFFFUUUUUUUUUUUU loadPage!
[11:29:07] <johnbender> lololol
[11:29:12] <johnbender> splitting this thing up is going to be a nightmare
[11:29:29] <johnbender> _|Nix|_: arschmitz: the tests have been passing for every single commit I've made
[11:29:50] <johnbender> _|Nix|_: arschmitz: hopefully that means that bisecting should be easier, and it should be easier to jump in at any point
[11:29:55] <johnbender> that is, I'm not leaving it in a broken state
[11:30:03] <johnbender> per the "hit by a bus" contingency
[11:32:23] <johnbender> some of the intermediate states are ugly but in terms of code quality but that's part of refactoring
[11:32:31] <johnbender> s/states/commits/
[11:38:40] <arschmitz> johnbender: thats awesome and good to know
[11:40:34] <_|Nix|_> johnbender: Good work!
[11:42:05] <arschmitz> _|Nix|_: one thing about using widget() vs class copy is class copying works for css where widget() is of course only useful in js
[12:08:19] <_|Nix|_> arschmitz: Yes, but the destination of the copy should coincide with the element returned by widget() just so as to keep consistent our concept of just what constitutes the widget (vs. the native element).
[12:08:56] <_|Nix|_> arschmitz: So, it's mostly for consistency.
[12:09:51] <arschmitz> yes i totaly agree it should be consistant between widget() and the class destination
[12:15:51] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 2 new commits to 06next: 02http://git.io/5pn96A
[12:15:51] <jqmobilecommit> 13jquery-mobile/06next 145114673 15Gabriel Schulhof: Demos: Accordion: Oops! Accidentally removed most of the file.
[12:15:51] <jqmobilecommit> 13jquery-mobile/06next 1448dcd7d 15Gabriel Schulhof: buttonMarkup: Re-write. Separate DOM-accessing functions from non-DOM-accessing functions, use strict, and remove reusable jQuery object hack.
[13:11:30] <jqmobilecommit> [13jquery-mobile] 15jwatkin opened issue #5940: Bug in JQM API documentation for checkboxradio refresh()  02http://git.io/rYh5kQ
[13:29:36] <toddmparker> uGoMobi and _|Nix|_ - for input type button, checkboxradio, slider, textinput and select (things we wrap), are we going to recommend that people wrap these in a div in their markup in 1.4
[13:30:25] <uGoMobi> toddmparker: I am not sure yet
[13:30:47] <uGoMobi> toddmparker: we need to add the logic to check if there is already a wrapper or not
[13:31:52] <uGoMobi> toddmparker: I saw arschmitz and _|Nix|_ were discussing widget() ... that should return the outer element if I am not mistaken
[13:32:39] <_|Nix|_> Yeah ... we should decide one where or the other: either we wrap and don't check, or they wrap and we assume it's wrapped.
[13:32:52] <_|Nix|_> Checking for a wrapper during _create() is a perf hit.
[13:33:01] <uGoMobi> not sure if it's going to give problems if the widget in some cases ads the wrapper and in other cases doesn't
[13:33:17] <arschmitz> _|Nix|_: problem is a lot of backend frame works make it near impossible to wrap
[13:33:37] <_|Nix|_> arschmitz: Then I guess we have to do it - just as we do now.
[13:33:38] <arschmitz> but at the same time a lot of people are going to want to wrap them selves to improve performance
[13:33:53] <arschmitz> maybe a global option?
[13:34:35] <_|Nix|_> arschmitz: I guess ... and then we have an if-statement in all our form widgets' _create()
[13:34:41] <arschmitz> _|Nix|_: i think we need to support both scenerios in some way because both are very common
[13:35:06] <arschmitz> _|Nix|_ yeah pretty much i think thats how it would have to work
[13:35:37] <arschmitz> could also do a data-wraped option in the widget
[13:35:49] <arschmitz> or somethin of that nature
[13:46:25] <toddmparker> hmm
[13:46:38] <toddmparker> well, for backcompat, we'd need to support the current markup for 1.4
[13:46:59] <toddmparker> so i guess we leave it as-is and wrap with js
[13:47:24] <arschmitz> it would be good to give the options though
[13:47:25] <_|Nix|_> toddmparker: ... but we can add a global option like $.mobile.assumeWrap or something.
[13:47:33] <toddmparker> that does mean that we should look at the idea of copying classes or id's up to the generated wrapper to make styling easier
[13:47:42] <_|Nix|_> toddmparker: In which case instead of wrapping we just grab the .parent().
[13:47:55] <toddmparker> _|Nix|_: right, if we went this way we could surface that
[13:48:04] <arschmitz> yeah i know its an option i would use if it existed
[13:48:17] <toddmparker> the assumeWrap?
[13:48:30] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/RiVh4g
[13:48:30] <jqmobilecommit> 13jquery-mobile/06next 14a71bb8f 15Gabriel Schulhof: buttonMarkup: Code readability improvement and de-lint. Also, an excuse to mention perf results....
[13:48:30] <arschmitz> yup i would put the wrappers in my self
[13:48:37] <toddmparker> or just a don't decorate markup at all flag
[13:48:51] <arschmitz> i generate markup serverside so its easy to do it there and improve performance
[13:48:54] <arschmitz> both really
[13:49:01] <toddmparker> yeah
[13:49:03] <_|Nix|_> Got some perf stats for buttonMarkup: http://jsperf.com/buttonmarkup-master-vs-next/2
[13:49:21] <_|Nix|_> On desktop, .addClass() still takes the cake, but on mobile it's not a lot better than the new buttonMarkup.
[13:49:21] <arschmitz> thing is like rails aps dont have that option with the form builder they use
[13:50:08] <arschmitz> _|Nix|_ yeah that sounds about what i would have expected i think
[13:50:16] <_|Nix|_> So, we could, theoretically start using buttonMarkup again internally, but deprecate it externally and eventually go $.fn.buttonMarkup -> $.mobile._buttonMarkup
[13:50:31] <_|Nix|_> arschmitz: You mean re: buttonMarkup?
[13:50:42] <arschmitz> yes the performance your seeing
[13:51:01] <arschmitz> thats about what i expected 
[13:51:14] <_|Nix|_> arschmitz: Yeah. I really massaged it. It's basically x = el.className; massage( x ); el.className = x;
[13:51:35] <_|Nix|_> That's buttonMarkup thanks to uGoMobi's work.
[13:52:01] <arschmitz> and as typical firfox has to be all weird with perf
[13:52:33] <_|Nix|_> arschmitz: It's actually similar to Chrome but addClass is much worse.
[13:52:59] <_|Nix|_> arschmitz: FF always tends to accentuate differences. It's like it really appreciates your efforts to improve performance.
[13:53:14] <_|Nix|_> arschmitz: Conversely, of course, it frouns that much harder on your failures :)
[13:53:26] <arschmitz> near identical on mobile where it matters though
[13:53:31] <_|Nix|_> Yep.
[13:53:35] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 6 new commits to 06next: 02http://git.io/6p9A9Q
[13:53:35] <jqmobilecommit> 13jquery-mobile/06next 14c7594ef 15Jasper de Groot: Select: ui-state-disabled instead of ui-disabled.
[13:53:35] <jqmobilecommit> 13jquery-mobile/06next 14c74159d 15Jasper de Groot: Selected: CSS clean up.
[13:53:35] <jqmobilecommit> 13jquery-mobile/06next 1497a9c4f 15Jasper de Groot: Theme: Moved disabled style for select button to theme CSS where it belongs.
[13:54:28] <arschmitz> i think considdering speed is not an issue in chrome or firefox and mobile is the concern this is viable
[13:54:45] <_|Nix|_> arschmitz: Wow! It's a huge improvement over master on Android.
[13:55:01] <_|Nix|_> Android shows the biggest disparity.
[13:55:04] <arschmitz> yeah and about double on WP and iOS
[13:55:29] <_|Nix|_> Android's like, what? 4 times? Man ... that's two orders of magnitude ... in binary ... ;)
[13:56:04] <uGoMobi> nice stats _|Nix|_ 
[13:56:18] <arschmitz> _|Nix|_ actually 5 times faster on android
[13:56:27] <arschmitz> like EXACTLY 5 times pretty much lol
[13:56:29] <_|Nix|_> :)
[13:56:47] <arschmitz> thats big 
[13:57:14] <uGoMobi> maybe even Android Webview will have decent performance
[13:57:26] <arschmitz> crazyer things have happened lol
[13:57:30] <uGoMobi> :)
[13:57:37] <arschmitz> well webview = 1/2 spped
[13:57:39] <arschmitz> speed 
[13:58:09] <arschmitz> so thats still over double as fast as non webview with a 5 times improvement
[13:58:51] <arschmitz> thats crazy to make it be twice as fast as browser current browser but in a webview
[13:59:23] <_|Nix|_> Oh, and BTW: totally reusable. You can call buttonMarkup as many times as you like on the same elements, and it will always respect the fact that it's already enhanced.
[13:59:35] <arschmitz> nice
[13:59:44] <uGoMobi> cool
[13:59:58] <arschmitz> this is going to be big for large listviews and stuff like that
[14:00:06] <_|Nix|_> arschmitz: Well, not really.
[14:00:14] <_|Nix|_> arschmitz: Listviews do not call buttonMarkup anymore :)
[14:00:19] <arschmitz> oh yea
[14:00:20] <uGoMobi> I think toddmparker's 1.4 blog post should open with a jsperf stat :)
[14:00:26] <arschmitz> ha ha
[14:00:50] <_|Nix|_> ... but I was thinking that we might want to go back to buttonMarkup so we don't add these classes by hand in so many places.
[14:01:13] <_|Nix|_> That'll give us a chance to change the implementation without having to make changes in all those places.
[14:01:17] <arschmitz> yeah i think with the jsperf you put together it makes sense
[14:01:53] <arschmitz> the only place it was a big diff was chrome and im not concerned about speed in chrome in the slightest lol
[14:01:57] <_|Nix|_> I still think we should cross-check. Create a listview or checkboxradio or whatever with buttonMarkup and then run it agains the existing one.
[14:02:06] <arschmitz> of course
[14:02:14] <uGoMobi> _|Nix|_: when we are going to make adding classes to containers work for listview, controlgroup, navbar, collapsible sets, etc. it might be a difference case
[14:02:30] <_|Nix|_> uGoMobi: Definitely. That would be the ultimate solution.
[14:02:34] <uGoMobi> style and icon classes
[14:02:43] <arschmitz> uGoMobi: yeah you were talking about doing list view all off the ul
[14:02:44] <uGoMobi> _|Nix|_: I am already on it
[14:03:00] <uGoMobi> arschmitz: yes in default situations
[14:03:09] <arschmitz> yeah of course 
[14:03:13] <_|Nix|_> uGoMobi: For sure. Ideally, listviews should look like this /after enhancement: ...<li><a href="#">Link</a></li>...<li><a href="#">Link</a></li>...
[14:03:21] <uGoMobi> I mean if you want to override for one specific LI you need to add something
[14:03:35] <uGoMobi> _|Nix|_: yes indeed
[14:03:46] <arschmitz> that will be AWESOME 
[14:06:12] <uGoMobi> oh oh I think Gabriel his system crashed again :(
[14:09:53] <arschmitz> oh no 
[14:09:58] <uGoMobi> welcome back _|Nix|_ 
[14:10:09] <arschmitz> _|Nix|_: is having it rough with his server
[14:10:11] <uGoMobi> crash again?
[14:17:59] <arschmitz> well guys im out of here for the night
[14:18:02] <arschmitz> have a good one
[14:18:35] <uGoMobi> have a great weekend arschmitz 
[14:18:47] <arschmitz> uGoMobi: you too
[14:18:52] <uGoMobi> thanks
[14:30:29] <_|Nix|_> uGoMobi: Nono. I thought I was going to reboot.
[14:30:34] <_|Nix|_> arschmitz: L8$
[14:30:42] <_|Nix|_> >8R
[14:30:45] <_|Nix|_> Gah!
[14:30:50] <_|Nix|_> That's my brain crashing :)
[14:31:03] <_|Nix|_> Things are not well up north :)
[14:32:12] <uGoMobi> _|Nix|_: good thing the weekend started :)
[14:32:58] <_|Nix|_> Yeah ... Hopefully I'll have some time to put the drive back in business.
[14:33:10] <_|Nix|_> OK ... /Now/ I think I'm going to reboot for real ...
[15:20:50] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 3 new commits to 06next: 02http://git.io/6y22ZQ
[15:20:50] <jqmobilecommit> 13jquery-mobile/06next 14f9a1c98 15Jasper de Groot: Button: Increased specificity of ui-btn-left/right margin 0 rule to make it override default margins on controlgroups, etc.
[15:20:50] <jqmobilecommit> 13jquery-mobile/06next 14f58166c 15Jasper de Groot: Button: Fixed different height of button elements on Firefox.
[15:20:50] <jqmobilecommit> 13jquery-mobile/06next 144e3da22 15Jasper de Groot: Controlgroup: Fixes focus style for controlgroup buttons.
[15:26:40] <toddmparker> _|Nix|_: wow, so we're 2-3x faster?
[15:26:45] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 11 new commits to 06content-widget: 02https://github.com/jquery/jquery-mobile/compare/f943732349c6...f3e4f82baee5
[15:26:45] <jqmobilecommit> 13jquery-mobile/06content-widget 14e7d7f4f 15John Bender: wrap external ns reference in a method
[15:26:45] <jqmobilecommit> 13jquery-mobile/06content-widget 14fc6fa64 15John Bender: move reload page check out of _getPage
[15:26:45] <jqmobilecommit> 13jquery-mobile/06content-widget 1465b208b 15John Bender: remove dupCachedPage check always set to existing page
[15:28:28] <toddmparker> speed will be the headline for 1.4 for sure
[15:28:44] <toddmparker> that's what it's all about: faster, cleaner, more consistent
[15:29:33] <toddmparker> those perf #'s show how much slower mobile devices are. cray.
[15:29:35] <toddmparker> anyway, heading out
[15:29:44] <toddmparker> everyone, have an awesome weekens
[15:29:46] <toddmparker> weekend
[15:29:48] <toddmparker> gah
[15:34:04] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 1 new commit to 06content-widget: 02http://git.io/kBvFjw
[15:34:04] <jqmobilecommit> 13jquery-mobile/06content-widget 143f04cf5 15John Bender: test fallback to first page url check
[15:34:19] <johnbender> best part about this refactor is that i'm unit testing the pewp out of the methods
[15:37:32] <toddmparker> niiice
[15:37:40] <toddmparker> have a good one johnbender 
[15:37:48] <johnbender> toddmparker: you too man, enjoy your weekend!
