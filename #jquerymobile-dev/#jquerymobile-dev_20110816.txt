[06:15:12] <danzik17> It doesn't look like I've got privs to re-open this, but I don't think https://github.com/jquery/jquery-mobile/issues/490 is fixed yet - another person has commented saying the same thing
[07:07:39] <toddparker> good morning all
[08:54:56] <_nickel> gmorning all!
[08:55:32] <gseguin> good morning _nickel and all
[08:56:43] <_nickel> replaceState yah buddy!
[09:19:43] <_nickel> toddmparker: I'm ready to chat with Scott on the replacestate testing whenever he's around
[09:20:14] <_nickel> I've got at least one solution to offer to a small part of our testing conundrum here
[12:15:29] <rwaldron> toddparker yt/
[12:15:31] <rwaldron> ?
[12:18:03] <_nickel> I'm wondering the same
[12:18:15] <_nickel> this scott jehl guys said he wanted to talk with me today
[12:18:19] <_nickel> nothin!
[12:18:20] <_nickel> :P
[12:59:38] <toddparker> sorry, he's hopping on now _nickel
[12:59:44] <_nickel> toddmparker: good timing
[12:59:56] <_nickel> I just finished up altering some tests
[13:00:57] <_nickel> toddmparker: https://github.com/jquery/jquery-mobile/commit/1a4dd41293dfc4af41ceedd7cdc562122eadd1e4
[13:01:09] <_nickel> hopefully this won't take too long
[13:01:13] <_nickel> I'm starving
[13:02:14] <toddparker> scottjehl is having technical difficulties
[13:07:44] <_nickel> :(
[13:08:11] <_nickel> toddparker: maybe pass him the link and we can chat later?
[13:08:49] <_nickel> the short and the long of it is that for nav we need to alter all the tests :(
[13:09:19] <_nickel> because we need to preserve the content based tests ie "is this button in the page that just loaded"
[13:09:23] <_nickel> in both cases
[13:09:26] <_nickel> and we don't want to duplicate
[13:09:50] <_nickel> but we need to "duplicate" or handle both types of testing for the urls
[13:10:25] <_nickel> so we'll probably include the test source files twice and force the support flag
[13:10:47] <_nickel> in the case where both are supported that is
[13:12:05] <danzik17> It doesn't look like I've got privs to re-open this, but I don't think https://github.com/jquery/jquery-mobile/issues/490 is fixed yet - another person has commented saying the same thing (re-post from this morn, don't think anyone was in here yet)
[13:13:15] <_nickel> danzik17: I think that perf is most likely seperate issue
[13:13:53] <_nickel> I believe we're going to address performance issues before 1.0 (don't quote me)
[13:14:25] <_nickel> toddparker: toddmparker: ^ see above, I need to eat. My body is consuming itsellf
[13:14:25] <danzik17> _nickel:  Gotcha.  Should I look around / file a bug, or is this one of those "yea, we know..." kinda things
[13:14:34] <_nickel> danzik17: definitely look around and file
[13:41:52] <scottjehl> okay what the heck. irc cloud is just not updating at all today
[13:42:10] <scottjehl> _nickel you around?
[13:42:21] <_nickel> scottjehl: indeed!
[13:42:24] <scottjehl> hey
[13:42:28] <scottjehl> so I just got your email
[13:42:29] <scottjehl> thanks
[13:42:32] <_nickel> :D
[13:42:41] <_nickel> hopefully I haven't gotten too much wrong there
[13:42:53] <scottjehl> I thought those were already preserved in the initial implementation
[13:43:09] <_nickel> embedded pages?
[13:43:39] <scottjehl> ohhh okay you mean like multipage
[13:43:41] <scottjehl> not like http://filamentgroup.com/examples/pushstate/docs/lists/lists-nested.html#&ui-page=0-8
[13:43:43] <_nickel> for my test page at the root /foo.html it was being replaced with /first or /second for #first and #second
[13:43:55] <scottjehl> yep okay sorry, yeah that makes good sense
[13:44:00] <_nickel> cool cool
[13:44:08] <_nickel> as for the testing
[13:44:10] <_nickel> ... ugh
[13:44:10] <_nickel> lol
[13:44:14] <scottjehl> as for the organization of the file, whatever works, really
[13:44:19] <_nickel> ahh ok cool
[13:44:20] <scottjehl> if it's easier for you in that order, no probs
[13:44:38] <scottjehl> just hoping to keep in lightweight in the end
[13:44:45] <_nickel> you mean jquery.mobile.navigation.pushstate.js wrt the organization?
[13:45:06] <scottjehl> yep
[13:45:08] <_nickel> ah
[13:45:08] <scottjehl> looks fine
[13:45:16] <_nickel> the refactor was purely for my comprehension
[13:45:23] <_nickel> we can revert that if you like
[13:45:24] <scottjehl> it's clean. looks good
[13:45:33] <_nickel> thanks
[13:45:49] <_nickel> so my next step is to update the nav test suite
[13:46:00] <scottjehl> is this checking out across the demos yet?
[13:46:06] <scottjehl> double dialogs and such?
[13:46:24] <_nickel> I have to fix that and the initial hash load
[13:46:30] <_nickel> but I can take care of that np
[13:47:04] <_nickel> I haven't run into anything else testing manually
[13:47:08] <scottjehl> there's a bug in Chrome that disables the forward button when arriving back to home
[13:47:19] <_nickel> :(
[13:47:24] <scottjehl> for some reason, it kills forward history only when arriving back at that initial start page
[13:47:33] <scottjehl> not other forward history though
[13:47:41] <_nickel> that kind of stuff makes me wonder if we shouldn't just wait on supporting this
[13:47:52] <scottjehl> also, not an issue in FF
[13:48:04] <_nickel> yay ff
[13:48:13] <scottjehl> well, yeah I agree it sucks, but our URLs without this are one of our biggest drawbacks, IMO
[13:49:43] <_nickel> yah they can be clumsy
[13:49:53] <_nickel> ahh cross browser support
[13:49:57] <_nickel> we love you
[13:50:54] <_nickel> scottjehl: so is linkedin using jqm?
[13:51:15] <scottjehl> well, now it appears they're only using our theming
[13:51:16] <scottjehl> so yes
[13:51:18] <scottjehl> sorta
[13:51:22] <_nickel> lawl
[13:51:25] <_nickel> toddparker ++
[13:57:05] <scottjehl> anyway, so the tests
[13:57:07] <scottjehl> coming along?
[13:58:20] <_nickel> scottjehl: thats the start
[13:58:29] <_nickel> I wanted to try it out before doing to see how it felt
[13:58:32] <_nickel> pretty dirty
[13:58:53] <_nickel> but I think the ideal here is the preserve the tests as they are without pushState
[13:59:03] <_nickel> and then duplicate them where pushstate is supported
[13:59:21] <_nickel> because the only difference is the url
[13:59:26] <_nickel> *should*
[13:59:37] <_nickel> so as along as we handle that I want all the tests we have
[13:59:37] <scottjehl> sounds about right
[14:00:05] <_nickel> the only side note is that the delay between the hash being there and the replaceState change *may* cause fragility issues
[14:00:08] <_nickel> I'm not sure
[14:00:14] <_nickel> I certainly haven't seen that yet
[14:00:31] <scottjehl> I guess we might consider having two possible correct answers in many tests
[14:00:40] <_nickel> thats basically what I did
[14:00:47] <_nickel> actually thats exactly what I did
[14:01:02] <_nickel> it makes a different url assertion depending on $.support.pushState
[14:01:04] <scottjehl> ah cool - so push state supporting browsers that get it wrong (ios4.3) are passing
[14:01:24] <scottjehl> that's what  i mean
[14:01:32] <scottjehl> likeâ€¦ don't even check for push state support
[14:01:47] <scottjehl> just check if url is either A or non-hashed version of A
[14:01:50] <_nickel> well it would be good to test both in our test browsers
[14:02:05] <_nickel> our test browsers in the ci right now both support it
[14:02:12] <_nickel> so we wouldn't get coverage from the CI on those that don't
[14:02:37] <_nickel> and that won't change until I can get testswarm setup
[14:03:19] <scottjehl> k yeah
[14:03:22] <_nickel> the idea is that for those browsers that do support it, the tests will be run twice
[14:03:26] <_nickel> for those that don't once
[14:03:52] <_nickel> that way too, if people don't care (ie phonegap) they can leave that bit off too and they'll be covered
[14:05:06] <_nickel> too many "too"s in that one
[14:05:08] * _nickel is bad
[14:05:36] <_nickel> scottjehl: I'm under the impression that phonegap obscures the url
[14:05:57] <_nickel> and doesn't really provide a way to display it
[14:06:05] <_nickel> so they can save the wireweight
[14:06:13] <scottjehl> yeah.
[14:07:16] <_nickel> ok I'll get back to work and see how ugly this gets
[14:13:31] <kinblas> _nickel: yo
[14:13:40] <kinblas> _nickel: regarding your last email about pushstate
[14:13:42] <_nickel> kinblas: heyo
[14:13:44] <kinblas> sorry late to the party
[14:13:49] <_nickel> kinblas: np np
[14:13:54] <kinblas> we still preserve the hash for internal pages?
[14:14:02] <kinblas> in a multi-page document?
[14:14:17] <_nickel> I'm not sure how else we would accomplish that
[14:14:42] <kinblas> ok just wanted to make sure the pushstate code handled that case
[14:14:50] <kinblas> and wasn't blindly changing
[14:14:56] <_nickel> added the change
[14:15:06] <kinblas> okie dokie
[14:15:08] <kinblas> carry on :-)
[14:16:06] <_nickel> :D
[14:16:15] <kinblas> scottjehl: placing a data-rel="back" on a link is sufficient for it to act like a back button and do a reverse transition right?
[14:16:39] <scottjehl> yeah, that'll cancel its default href and call history.back()
[14:16:59] <kinblas> yeah I'm wondering why I do a fade (forward), then a window.back and I'm getting a slide
[14:17:15] * kinblas debugs unit test
[14:23:16] <_nickel> ahh sweet!
[14:23:22] <_nickel> my pathing tests are all content based I think
[14:23:27] * _nickel praises the lord.
[16:12:34] <_nickel> man
[16:12:49] <_nickel> running the same suite twice is proving to be a *bitch*
[16:12:52] <_nickel> but I will prevail
[16:43:11] <kinblas> _nickel: ping
[16:43:18] <_nickel> kinblas: pong
[16:43:26] <kinblas> https://github.com/jquery/jquery-mobile/blob/master/tests/unit/navigation/navigation_transitions.js#L87
[16:43:47] <_nickel> sweet jesus
[16:43:52] <kinblas>  "explicit transition preferred for page navigation reversal (ie back)"
[16:43:59] <kinblas> I don't get the "back" reference
[16:44:08] <kinblas> don't worry I've re-written it
[16:44:13] * _nickel is relieved
[16:44:15] <kinblas> sans timeouts
[16:44:24] <_nickel> thank moses
[16:44:25] <kinblas> I'm trying to figure out intent
[16:44:34] <_nickel> I have a feeling that test was marged in
[16:44:42] <kinblas> if you click links you only go forward
[16:44:45] <kinblas> in the stack
[16:44:46] <kinblas> not back
[16:45:19] <kinblas> so is this test just checking to make sure you can specify different transitions going forward more than one time?
[16:47:14] <_nickel> lookin
[16:48:13] <_nickel> kinblas: can't links have rel="back"
[16:48:15] <_nickel> or some suc
[16:48:16] <_nickel> *such
[16:48:18] <kinblas> I just noticed we *ALWAYS* get the default transition when going back to the first page in the history stack
[16:48:28] <kinblas> _nickel: yeah but none of the links being clicked have that
[16:48:32] <_nickel> hmm
[16:48:50] <kinblas> hence my question :-)
[16:49:10] <kinblas> ... or was that the intent ... anyways, that's what I thought at first
[16:49:13] <kinblas> so my test is doing that
[16:49:28] <kinblas> that's how I discovered the bug I mentioned above
[16:49:29] <_nickel> kinblas: based on the test description I would just verify that the transition defined on the link is used over the default when going back
[16:49:45] <kinblas> aha!
[16:49:50] <kinblas> ok so that's what I thought
[16:49:55] <_nickel> outside of that there's nothing we can do
[16:50:03] <_nickel> makes a good case for good test descriptions :(
[16:50:06] <kinblas> ok so I'll test going forward twice, verifying the transitions on back
[16:50:11] <_nickel> I know I'm guilty of making them hard to understand
[16:50:14] <kinblas> and do the back twice
[16:50:28] <kinblas> to catch the going to first page in stack situation too
