[08:18:22] <gseguin> Good morning
[09:43:30] <toddparker> morning all
[09:44:08] <toddparker> so the global cache feature: seems like a few people are staying we should rely on the browser cache to handle this stuff: https://github.com/jquery/jquery-mobile/issues/1555#issuecomment-1447506
[09:44:24] <toddparker> makes sense to me, but like scott said, we need to test this
[09:45:10] <toddparker> we should create a test page to see how mobile browsers handle caching. if it works well, we could sidestep the need for the max # pages guess we're proposing
[09:45:44] <toddparker> kinblas and gseguin - you guys have an opinion on this?
[09:49:21] * gseguin is catching up
[09:57:51] <gseguin> toddparker: yeah, I agree, we should leverage the browser cache if it does work well
[09:58:11] <gseguin> testing is going to be the hard part here
[09:59:48] <toddparker> yeah. if someone wanted to create a branch to test this, we could run it thru it's paces here.
[10:18:38] <kinblas> by leveraging the browser cache, I'm assuming you guys are talking about always pruning a page out of the DOM that isn't showing?
[10:20:50] <kinblas> If so .. the one thing that I was always harping on was that there may be cases where folks may want to temporarily navigate to a page (help/dialog/etc) and want to return to the previous page which may have some state on it ... if we always prune, that state will have to be restored somehow
[10:22:05] * kinblas likes unit tests, but grumbles that they are sometimes sooooo tedious to write
[11:39:29] <toddparker> kinblas, think how happy that test will make _nickel
[11:39:47] <toddparker> agree on the trickiness of the page preuning
[11:40:06] <toddparker> but maybe this covers the "don't cache" and "max # page" ideas
[11:40:36] <toddparker> we could just have a "keep this" flag to not prune a page, otherwise, it's toast if loaded in via ajax
[11:49:14] <_nickel> kinblas: they are epecially tedioius with really weird state to manage
[11:49:20] <_nickel> *especially
[11:49:50] <_nickel> kinblas: after a while though I just got used to it as a part of completing a task or fixing a problem
[11:50:00] <_nickel> it just wasn't finished until I tested it
[12:42:28] <kinblas> toddparker: Did you install iOS 5 on a real device?
[12:42:51] <kinblas> I meant the latest beta2 ... that supposedly has momentum scrolling in overflow elements
[13:27:34] <toddparker> i'm going ot do that tonight
[13:27:41] <toddparker> iOS 5 beta 1 is BUGGY
[13:27:51] <toddparker> time for an upgrade
[13:28:00] <toddparker> i needed to renew my ADC license
[13:28:10] <toddparker> just did that today
[13:28:21] <toddparker> so i'll be able to test tomorrow'
[13:28:24] <kinblas> ok cool
[13:28:26] <kinblas> let me know how it is
[13:28:32] <kinblas> I'm curious if they handle nested cases
[13:28:46] <kinblas> and if the momentum is the same as for the entire page
[13:28:52] <toddparker> so why do you think my iOS 5 was so flky with the fastclick branch you posted?
[13:28:58] <toddparker> ah
[13:29:02] <kinblas> yeah I just noticed it was flaky too
[13:29:06] <kinblas> on iPad
[13:29:10] <toddparker> feel free to whip up a test page for me to run through
[13:29:16] <kinblas> maybe it's because I was testing on my sloooow ipod
[13:29:20] <toddparker> ...running iOS 4.3?
[13:29:25] <kinblas> 4.2
[13:29:28] <toddparker> right
[13:29:46] <kinblas> so I'll switch contexts back to that in a few
[13:29:56] <toddparker> ok, cool
[13:30:03] <kinblas> I was trying to purge what I had going already
[13:30:04] <toddparker> lemme know if i can test anythign for you today
[13:30:07] <kinblas> before I forgot to check it in
[13:30:09] <toddparker> heh, ok
[13:30:15] <kinblas> reminder: I'm out friday
[13:30:16] <toddparker> i know the feeling
[13:30:19] <toddparker> i KNOW
[13:30:24] <toddparker> :/
[13:30:34] <toddparker> and next friday, and nexxt...
[13:30:36] <kinblas> I'll check in ... hopefully ... here and there
[13:31:07] <toddparker> maybe we should give you a crazy thorny problem for you to mull over on vacation
[13:31:20] <toddparker> like the meaning of life, in JS
[13:31:29] <gseguin> :)
[13:31:50] <toddparker> i'm so happy that overflow will work in iOS and that it's a new property
[13:31:54] <toddparker> easier to target
[13:31:55] <kinblas> lol ... heh I got a few of those problems I'm looking forward to working on during the plane flight
[13:32:40] <toddparker> i think if we can nail down a decent approach for the fastclick stuff before you go, that is prolly the most important thing
[13:32:42] <kinblas> toddparker: what was the property again? I saw it briefly from someone on twitter
[13:33:13] <kinblas> I'm just curious why they didn't leverage the existing properties to make it transparent
[13:33:19] <toddparker> http://www.iphonehacks.com/2011/06/ios-5-beta-2-brings-native-style-momentum-scrolling-to-iphone-web-apps.html
[13:33:25] <toddparker> -webkit-overflow-scrolling
[13:33:35] <toddparker>  When this property has the value 'touch' the web page will implement native-stype scrolling.
[13:33:46] <kinblas> great
[13:33:46] <toddparker> kinda odd name/value but whatever
[13:33:53] <kinblas> adobe's blocking that website
[13:33:58] <toddparker> heh, really?
[13:34:10] <toddparker> google translate the the rescue
[13:34:15] <kinblas> yeah "Web Filter has blocked your access to this website"
[13:34:24] <toddparker> i don't get those filters
[13:35:11] <toddparker> at filament group, we have software that *pushes* your browser to facebook, groupon, farmville, etc. every few minutes automagically
[13:35:11] <kinblas> I'll have to check it from home
[13:35:23] <kinblas> lol
[13:35:30] <toddparker> Mobile Safari in iOS 5 has an updated WebKit engine and brings the CSS property "-webkit-overflow-scrolling" to developers. When this property has the value 'touch' the web page will implement native-stype scrolling. This move should put an end to all the speculation around Apple trying to cripple web apps.
[13:35:30] <toddparker> Here's a snippet from the release notes under the WebKit section that provides the details of this feature:
[13:35:30] <toddparker> In iOS 5.0 beta 2, a new inherited CSS property, -webkit-overflow-scrolling, is available. The value touch allows the web developer to opt in to native-style scrolling in an overflow:scroll element. The default value for this property is auto.
[13:35:42] <toddparker> that's the nut of it
[13:35:58] <toddparker> do google cache links towk at adobe? http://webcache.googleusercontent.com/search?q=cache:cRp4xw0DtasJ:davidbcalhoun.com/2011/new-mobile-safari-stuff-in-ios5-position-fixed-overflow-scroll-new-input-type-support-web-workers-ecmascript-5+ios+5+beta+2+overflow&cd=3&hl=en&ct=clnk&gl=us&source=www.google.com
[13:37:15] <kinblas> heh
[13:37:16] <kinblas> that worked
[13:39:46] <kinblas> toddparker: according to that site there is no momentum (aka inertia)
[13:40:07] * kinblas is disappointed if that's the case
[14:03:13] <toddparker> really?
[14:08:58] <toddparker> i'm hearing it is momentum
[14:09:00] <toddparker> http://johanbrook.com/browsers/native-momentum-scrolling-ios-5/
[14:09:07] <toddparker> says so in the title
[14:10:47] <toddparker> nice little article on documentation
[14:10:48] <toddparker> http://zachholman.com/posts/documentation/
[14:43:46] <kinblas> toddparker: ok got the skinny, turns out my friend is the one that did the fixed positioning and scrolling stuff in iOS5
