[01:10:44] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof created 06lazy-widgets-via-accessors (+5 new commits): 02http://git.io/NC-Xfw
[01:10:44] <jqmobilecommit> 13jquery-mobile/06lazy-widgets-via-accessors 14c19798d 15Gabriel Schulhof: Widget factory: Add accessor definition function.
[01:10:44] <jqmobilecommit> 13jquery-mobile/06lazy-widgets-via-accessors 14bb82e69 15Gabriel Schulhof: Widget factory: Move selector defintion into "expensive" section.
[01:10:44] <jqmobilecommit> 13jquery-mobile/06lazy-widgets-via-accessors 14bdbe27b 15Gabriel Schulhof: Widget factory: Do not assign the constructor to the namespace initially.
[01:40:09] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06lazy-widgets-via-accessors: 02http://git.io/MRmNVg
[01:40:09] <jqmobilecommit> 13jquery-mobile/06lazy-widgets-via-accessors 14535d9fe 15Gabriel Schulhof: Travis: Add branch lazy-widgets-via-accessors to the build.
[01:52:18] <frequent> arschmitz: morning. you there?
[01:53:35] <_|Nix|_> frequent: I believe it's too early for him. He usually shows up about 3-4 hours from now.
[01:53:55] <frequent> ok. thanks. 
[01:54:00] <_|Nix|_> NP.
[01:54:59] <travis-ci> [travis-ci] jquery/jquery-mobile#139 (lazy-widgets-via-accessors - 535d9fe : Gabriel Schulhof): The build passed.
[01:54:59] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/a9c8c25f849f...535d9fe81d5e
[01:54:59] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5804073
[02:15:10] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #307: STILL FAILING in 1 min 0 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/307/
[03:02:22] <jqmobilecommit> [13jquery-mobile] 15prafullyeole opened issue #5813: Data-position-Fixed="True" not unfix the panel in android 4.0x  02http://git.io/wJuasg
[07:27:31] <gates_> :o
[08:12:06] <arschmitz> frequent you still here
[08:12:08] <arschmitz> ?
[08:15:18] <frequent> arschmitz: yup
[08:15:29] <arschmitz> whats up?
[08:15:50] <frequent> I'm fighting with the controlgroup widget
[08:16:07] <frequent> reminds me of IE6.... nothing works out of the box... 
[08:16:20] <frequent> question:
[08:16:56] <frequent> is there any other way to access the "data(mobile-controlgroup)" object than adding a listener to controlgroupcreate? 
[08:17:27] <arschmitz> what exactly in there are you trying to get to and change?
[08:17:31] <frequent> because controlgroupcreate seems to trigger awfully late compared to all other widget create(s)
[08:17:35] <frequent> I wanted to 
[08:17:48] <frequent> run a filter on a controlgroup
[08:18:02] <arschmitz> its one of the last because it has dependencies
[08:18:14] <arschmitz> and best way to change stuff in there is with an extension
[08:18:17] <frequent> I see
[08:18:37] <frequent> I "fixed" selects, by putting the filter-widget at the end of the JQM code
[08:18:59] <frequent> but controlgroup did not seem to bother
[08:19:06] <frequent> 1sec
[08:19:14] <arschmitz> do $.widget( "mobile.controlgroup", $.mobile.controlgroup, { });
[08:20:01] <arschmitz> anytime your trying to modify a widget like that you should do it through an extension
[08:20:18] <frequent> hm
[08:21:07] <frequent> right now I added this, but ...
[08:21:27] <frequent> $(document).on('controlgroupcreate.tss', 'div:jqmData(role="controlgroup")', function () {
[08:21:28] <frequent>     container = self.element.data("mobile-" + tag );
[08:21:30] <frequent>     container.options.filterCallback = defaultFilterCallback;
[08:21:31] <frequent>     $(document).off('.tss');
[08:21:33] <frequent>    });
[08:21:34] <frequent> ups
[08:21:59] <frequent> which works, but is ... crap
[08:22:03] <arschmitz> yeah you shouldnt do stuff like that 
[08:22:08] <arschmitz> use the widget extension method
[08:22:16] <frequent> ok
[08:22:31] <frequent> thanks for the pointer.
[08:23:16] <frequent> Other than that, how much Javascript can/should be used vs. Jquery?
[08:24:32] <frequent> getAttribute("data-some") vs. jqmData("some")
[08:24:39] <toddmparker> Hi all
[08:24:46] <frequent> Hey
[08:25:07] <arschmitz> as long as its nothing that potentially breaks in different browsers its fine
[08:25:18] <arschmitz> like getAttribute is fine as long as its not for class
[08:25:41] <frequent> ok. Thanks.
[08:25:45] <arschmitz> and make sure you account for namespace because it can change
[08:26:23] <frequent> yes, the namespace always seems to be the extra degree of difficulty :-)
[08:30:28] <toddmparker> is uGoMobi around?
[09:41:40] <uGoMobi> toddmparker: I am here
[10:40:21] <agcolom> Hi!
[11:01:38] <jqcommit> 01[13api.jquerymobile.com01] 15scottgonzalez pushed 2 new commits to 06master: 02http://git.io/kjdcsA
[11:01:38] <jqcommit> 13api.jquerymobile.com/06master 144253520 15Scott Gonz√°lez: data-attributes: Remove custom styles.
[11:01:39] <jqcommit> 13api.jquerymobile.com/06master 14b154be7 15Scott Gonz√°lez: data-attributes: Outdent.
[11:44:49] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06master: 02http://git.io/Egt2NQ
[11:44:49] <jqmobilecommit> 13jquery-mobile/06master 1478a21fd 15Gabriel Schulhof: Table: Reflow: Convert to proper extension.
[12:00:41] <travis-ci> [travis-ci] jquery/jquery-mobile#140 (master - 78a21fd : Gabriel Schulhof): The build was broken.
[12:00:41] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/2151fc163ad1...78a21fd188fb
[12:00:41] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5818966
[12:43:24] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 2 new commits to 06master: 02http://git.io/EwdFfg
[12:43:24] <jqmobilecommit> 13jquery-mobile/06master 146e11fc8 15Gabriel Schulhof: Table: Cleanup.
[12:43:24] <jqmobilecommit> 13jquery-mobile/06master 14a45edfa 15Gabriel Schulhof: Table: Columntoggle: Convert to proper extension.
[12:58:33] <travis-ci> [travis-ci] jquery/jquery-mobile#141 (master - a45edfa : Gabriel Schulhof): The build was fixed.
[12:58:33] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/78a21fd188fb...a45edfa7b172
[12:58:33] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5820505
[13:09:03] <toddmparker> @rdavid from rim has working on jQuery Mobile top/bottom panels rigged up some JS to make the panels work with varying height content (ugly test page) https://dl.dropbox.com/u/15518861/test.html
[13:09:24] <toddmparker> be cool to get this in for 1.4. great feature
[13:10:19] <toddmparker> _|Nix|_: thanks for making those proper extensions
[13:10:33] <_|Nix|_> toddmparker: Yeah. It helps with making widgets lazy.
[13:11:01] <toddmparker> cool. nice to see some progress on the 1.4 stuff. 
[13:11:10] <toddmparker> you're holding down the fort
[13:11:19] <toddmparker> i'm starting work on 1.3.1 release notes
[13:11:27] <_|Nix|_> toddmparker: I want to see if I can get to the point where the whole library is executed, but none of the widgets are actually even defined until they're used.
[13:11:59] <_|Nix|_> toddmparker: So, like, no popups on the page? Fine! $.widget( "mobile.popup", $.mobile.widget, ... ) hasn't even run.
[13:12:54] <_|Nix|_> toddmparker: That's as close (in terms of performance) as we can get to doing a custom build with popups absent without doing a custom build with popups absent.
[13:13:59] <_|Nix|_> toddmparker: Background: Yanking various parts of the library via custom builds (√† la download builder) is the best way to improve library (and page) load times.
[13:14:21] <toddmparker> that would be ideal
[13:14:42] <toddmparker> i want to push people hard on using custom builds
[13:14:42] <_|Nix|_> toddmparker: Delaying widget definition until an instance of the widget actually needs to be created is second best.
[13:14:57] <toddmparker> the library is big now
[13:15:07] <toddmparker> right, but still good
[13:15:26] <_|Nix|_> toddmparker: The problem with a custom build is this: What if you need a slider on the second page? The second page is AJAXed in, so scripts are not executed. So, you need to add slider to the first page. Bad.
[13:15:45] <_|Nix|_> toddmparker: This good: https://docs.google.com/spreadsheet/ccc?key=0Au8wFOs7WWDUdE9fYWg3dURhcjJGN3ZSUGlBenVwakE#gid=0
[13:16:27] <_|Nix|_> toddmparker: The good news is that with lazy widget loading, the bigger the library, the bigger the benefit.
[13:16:43] <_|Nix|_> toddmparker: Correction: The more widgets in the library, the bigger the benefit.
[13:17:18] <_|Nix|_> toddmparker: Avoid the unnecessary loading of 75 widgets is a bigger benefit than avoiding the unnecessary loading of 38 widgets.
[13:17:32] <toddmparker> _|Nix|_: yeah, you'd build a custom build based on what you site/app uses across all views
[13:17:35] <toddmparker> not per page
[13:17:44] <_|Nix|_> toddmparker: That's the problem/
[13:17:51] <_|Nix|_> toddmparker: Ideally you'd want per-page.
[13:18:01] <_|Nix|_> toddmparker: So, you tack on additional pieces of the library later.
[13:18:15] <toddmparker> yeah, but that's a much gardner nut to crack
[13:18:17] <_|Nix|_> toddmparker: However, you have to figure out how to keep dependencies satisfied.
[13:18:21] <toddmparker> harder
[13:18:25] <toddmparker> right
[13:18:41] <toddmparker> so how does lazy loading work?
[13:18:43] <jqmobilecommit> [13jquery-mobile] 15stanleystanev opened issue #5815: listview problem with 1.2.1 that worked just fine with 1.2.0  02http://git.io/iOygSQ
[13:18:57] <toddmparker> if i have a homepage with just a list view, only the list view code loads and runs
[13:19:08] <_|Nix|_> toddmparker: That's right.
[13:19:24] <toddmparker> when i nav to page 2 via ajax, does this figure out what additional widgets are present and spin those up?
[13:19:31] <_|Nix|_> toddmparker: Yes.
[13:19:35] <toddmparker> cool
[13:19:50] <_|Nix|_> toddmparker: However, we must change the way we do enhancement.
[13:20:10] <toddmparker> the custom builds can only reduce the file size coming down the wire but the lazy loading can help with spin up times
[13:20:13] <_|Nix|_> toddmparker: Currently, on pagecreate we ping every widget, asking it to check whether there are any on the page that need to be enhanced.
[13:20:13] <toddmparker> both are important
[13:20:34] <_|Nix|_> toddmparker: That's bad, because if you ping a widget, it will get created.
[13:20:45] <_|Nix|_> toddmparker: So, all we've achieved is to delay definition until pagecreate.
[13:20:55] <_|Nix|_> toddmparker: The solution is to move initSelector out of the prototype.
[13:20:58] <toddmparker> right. we need a registry that is light enough to know what to look for and then init the necessary widgets
[13:21:35] <_|Nix|_> toddmparker: Exactly. The registry uses initSelector to decide whether a given widget class's enhanceWithin needs to get called at all.
[13:21:50] <_|Nix|_> toddmparker: So, only those widget classes end up getting defined that are actually on the page.
[13:22:05] <toddmparker> cool
[13:22:16] <toddmparker> what are the downsides?
[13:22:36] <_|Nix|_> toddmparker: An even bigger benefit is that, after the first page has done loading, we can ping the rest of the widgets asynchronously to get them defined in the background.
[13:22:48] <_|Nix|_> toddmparker: We need to modify the widget factory.
[13:23:12] <_|Nix|_> toddmparker: I might be able to do it outside, but doing it inside has the absolute lowest impact.
[13:23:15] <frequent> toddmparker: <_|Nix|_>: hey. Good read (just switched back on) 
[13:23:47] <_|Nix|_> toddmparker: Then there's the fact that initSelector is no longer an option.
[13:23:50] <arschmitz> _|Nix|_: i dont think thats going to fly with scott_gonzalez at all and means every time a new version comes out manually editing it
[13:24:13] <_|Nix|_> arschmitz: I can try to move it outside the widget factory by overwriting $.widget.
[13:24:21] <arschmitz> _|Nix|_: not really good for ui merge either
[13:24:40] <scott_gonzalez> _|Nix|_ arschmitz: Is there emperical data showing amazing benefits now?
[13:24:55] <_|Nix|_> scott_gonzalez: https://docs.google.com/spreadsheet/ccc?key=0Au8wFOs7WWDUdE9fYWg3dURhcjJGN3ZSUGlBenVwakE#gid=0
[13:25:30] <scott_gonzalez> _|Nix|_: What are these numbers?
[13:25:41] <_|Nix|_> scott_gonzalez: The time it takes to execute the library.
[13:25:53] <scott_gonzalez> Where are the numbers for full page load?
[13:26:04] <scott_gonzalez> These numbers don't mean anything to me on their own.
[13:26:47] <_|Nix|_> scott_gonzalez: I'm not there yet. First I need to make the library stop unnecessarily defining widgets.
[13:27:18] <_|Nix|_> scott_gonzalez: Like, for example, our table and listview widgets are getting defined because their extensions refer to their prototypes' options.
[13:27:35] <_|Nix|_> scott_gonzalez: ... instead of going through $.widget, like they should.
[13:28:45] <scott_gonzalez> _|Nix|_: And to confirm, the problem you're trying to solve is "I'm loading way more widgets than I need, and it's slow." correct?
[13:29:00] <arschmitz> yes
[13:29:05] <_|Nix|_> Yes.
[13:29:16] <scott_gonzalez> Ok, so that on its own makes me not want to solve this problem.
[13:29:24] <uGoMobi> toddmparker: any chance we are going to release a 1.2.2? in other words, should we cherry-pick fixes?
[13:29:34] <scott_gonzalez> But I still want to see numbers for full page load time
[13:29:35] <_|Nix|_> scott_gonzalez: Why not?
[13:29:56] <scott_gonzalez> Because it's easy to solve. Load what you need.
[13:30:04] <scott_gonzalez> There are like a million blog posts about this.
[13:30:06] <arschmitz> scott_gonzalez: problem with doing custom build here is subsequent pages are ajax loaded in jqm so still need to load them all on every page
[13:30:24] <arschmitz> if you use them anywhere in app / site
[13:30:27] <_|Nix|_> scott_gonzalez: There's no reason to do all that looping over prototypes and defining and extending until somebody actually attempts to access the prototype, the selector, or the constructor.
[13:30:27] <scott_gonzalez> So we're talking about start up time on a single page app.
[13:30:49] <_|Nix|_> scott_gonzalez: Not necessarily.
[13:30:57] <_|Nix|_> scott_gonzalez: It could be the first page of a multipage app.
[13:31:10] <scott_gonzalez> So don't load what you don't need.
[13:31:22] <arschmitz> scott_gonzalez: but what if you need it on second page
[13:31:28] <arschmitz> that is pulled in with ajax
[13:31:33] <arschmitz> so no chance to then load
[13:31:42] <_|Nix|_> scott_gonzalez: Yes, but if you have a complicated app with a very simple splash screen, you're loading the whole widget set just to display 3 paragraphs and a abutton.
[13:32:02] <toddmparker> we encourage people to make a custom build with the full of widgets they will need on their site/app
[13:32:23] <toddmparker> since we use ajax nav, the first view may only need a subset of those widgets
[13:32:32] <toddmparker> think that's what _|Nix|_ is trying to improve
[13:32:45] <scott_gonzalez> There are two choices that I'm fine with and we support both today.
[13:32:46] <_|Nix|_> toddmparker: What devs should ideally do is create custom builds for every page, such that dependencies already loaded because of previous pages are not loaded again on subsequent pages.
[13:32:48] <toddmparker> assume the dev has been responsible and loads what they need
[13:32:53] <scott_gonzalez> Load everything up front, ajax the shit out of your app.
[13:33:12] <toddmparker> we're in that camp
[13:33:13] <scott_gonzalez> Users don't really care about load time for single page apps.
[13:33:31] <scott_gonzalez> Or, load what you need as you need it.
[13:33:40] <toddmparker> dunno about that. i never use the linked in web app because it takes forever to load up
[13:33:56] <scott_gonzalez> Where forever = 100ms?
[13:34:06] <toddmparker> no, like 10+ seconds
[13:34:14] <scott_gonzalez> We're not talking about 10+ seconds.
[13:34:20] <toddmparker> i sully get pissed off and nav away :)
[13:34:25] <toddmparker> no, talking about linked in
[13:34:26] <scott_gonzalez> The charts that I was just presented with show 170ms as the slowest load.
[13:34:38] <_|Nix|_> scott_gonzalez: Lazy widgets will allow you to load what you need as you need it without having you go into the library and trying to create partitions of it.
[13:34:52] <_|Nix|_> scott_gonzalez: Saves a pile of requests, too.
[13:35:13] <scott_gonzalez> Pile is relative, it depends how well you design your asset bundles.
[13:35:23] <toddmparker> _|Nix|_: when you say "load" you aren't talking about download. you mean execute JS‚Ä¶right?
[13:35:32] <_|Nix|_> toddmparker: Both.
[13:35:33] <scott_gonzalez> _|Nix|_: What code breaks as a result of your lazy init?
[13:35:44] <_|Nix|_> scott_gonzalez: Nothing in jQM.
[13:35:52] <_|Nix|_> scott_gonzalez: There's the widget unit tests in UI.
[13:36:10] <_|Nix|_> scott_gonzalez: But obnly because they assume $[ namespace ][ widgetname ] is a function.
[13:36:19] <scott_gonzalez> Which it must be.
[13:36:23] <_|Nix|_> scott_gonzalez: In my implem it's an object until you access the prototype.
[13:36:28] <scott_gonzalez> So you're breaking our constructor API?
[13:36:32] <_|Nix|_> scott_gonzalez: No.
[13:36:49] <scott_gonzalez> You just said that it's not a function.
[13:36:53] <_|Nix|_> scott_gonzalez: The function is assigned to the namespace as soon as you access any of the public APIs.
[13:37:02] <scott_gonzalez> The function IS public API
[13:37:05] <scott_gonzalez> new $.ui.dialog()
[13:37:49] <_|Nix|_> scott_gonzalez: Well, yeah ... that's gonna break ... 
[13:38:13] <_|Nix|_> scott_gonzalez: I've only covered $.ui.dialog.prototype, el.dialog(), and $( ":ui-dialog" );
[13:38:34] <_|Nix|_> scott_gonzalez: If you use any of those, the namespace will be created properly before those accessors even return.
[13:38:38] <scott_gonzalez> How are you handling $.ui.dialog.prototype?
[13:39:05] <_|Nix|_> scott_gonzalez: $.ui.dialog.__defineGetter__( "prototype", function() { /* actually define the widget */ } );
[13:39:46] <_|Nix|_> scott_gonzalez: I would've kept the constructor, but custom accessors are not called for a function's prototype.
[13:39:57] <_|Nix|_> scott_gonzalez: That really sucks.
[13:40:15] <_|Nix|_> scott_gonzalez: That's the only reason for the workaround with using an object instead of the constructor itself.
[13:40:15] <scott_gonzalez> _|Nix|_: So that means no oldIE support, right?
[13:40:37] <toddmparker> scott_gonzalez: what vintage is oldIE
[13:40:38] <_|Nix|_> scott_gonzalez: I guess not. oldIE doesn't need to have lazy widgets. Let it be slow.
[13:40:53] <scott_gonzalez> toddmparker oldIE = <9
[13:41:08] <scott_gonzalez> So 6/7/8, though we only care about 7/8
[13:41:09] <toddmparker> we may be improving our c grade styling and pushing older IE into that
[13:41:47] <toddmparker> not 100% on where the line will be for that. 8 is a maybe, 7 will be c
[13:42:14] <scott_gonzalez> We don't have a grading system for UI.
[13:42:21] <scott_gonzalez> 7 and 8 are full support
[13:42:59] <toddmparker> is there a plan to ramp them down over time
[13:43:14] <toddmparker> 7/8 is still depressingly common on desktop
[13:43:25] <arschmitz> 8 is super common
[13:43:38] <frequent> true
[13:43:44] <toddmparker> arschmitz: have you been following along
[13:43:50] <scott_gonzalez> We have "drop support for IE7" on our roadmap for 1.13.
[13:43:51] <arschmitz> yes
[13:43:55] <toddmparker> cool
[13:43:57] <scott_gonzalez> Which is 3 major versions away.
[13:44:11] <toddmparker> you are a brave should scott_gonzalez 
[13:44:15] <toddmparker> soul
[13:44:32] <arschmitz> dont think any sooner would make sense though with usage numbers how they are
[13:44:45] <arschmitz> not for ui anyway
[13:44:49] <toddmparker> agreed
[13:45:13] <toddmparker> we're lucky that WP7 is now all on IE9 for the most part
[13:45:17] <arschmitz> that will roughly line up with m$ ending support for ie7 im going to guess
[13:45:31] <toddmparker> so it's just a matter of how good an experience we want for old IE on desktops for mobile
[13:46:11] <toddmparker> but back to the original convo
[13:46:13] <arschmitz> toddmparker one think to keep in mind is we are pushing responsive in mobile 
[13:46:35] <arschmitz> which encourages use on desktop 
[13:47:09] <toddmparker> we are.
[13:47:23] <toddmparker> too bad IE doesn't support MQs
[13:47:26] <toddmparker> heh
[13:47:44] <arschmitz> so at least ie8 seems pretty important 
[13:47:48] <toddmparker> just saying that our c grade experience needs to be better which will go a long way
[13:48:03] <toddmparker> yeah and i don' think ie8 will be much trouble
[13:48:04] <arschmitz> yeah problem with c is no js
[13:48:11] <arschmitz> so widgets are dead
[13:48:13] <toddmparker> right
[13:48:25] <arschmitz> and most widgets will work perfectly fine in ie
[13:48:37] <arschmitz> well all currently actually
[13:48:44] <toddmparker> but our c now looks pretty weak. we can still apply a fair amount of styling. you wouldn't get all the wizzy bits tho
[13:49:12] <toddmparker> arschmitz: they do, but in order to clean up our markup, we're going to want to use more advanced css selectors and such
[13:49:19] <arschmitz> yeah
[13:50:19] <arschmitz> its hard because i know if i was building a site that was suposed to be responsive mobile - desktop and was going to use jqm lack of ie8 support would make me not use jqm
[13:50:22] <toddmparker> it may turn out that 7 is workable too
[13:50:44] <arschmitz> 7 and 8 really have very little difference besides like inline-block
[13:51:02] <arschmitz> personally i would make 7 and 8 b
[13:51:20] <arschmitz> no js at all seems like a harsh step
[13:51:21] <frequent> if I may chip in: I'm currently fighting with getting my app to run on IE8. It works, but painfully slow.
[13:51:45] <arschmitz> frequent are you doing ajax nav?
[13:51:49] <frequent> yes
[13:52:16] <arschmitz> have you tried without too see difference?
[13:52:22] <frequent> and actually I'm running into a lot of clients, still using IE8
[13:52:27] <frequent> no, haven't
[13:52:27] <toddmparker> that is a real concern too. we can make stuff work, but will it be fast
[13:53:14] <_|Nix|_> scott_gonzalez: I can bracket the code with if ( !!( {}.__defineGetter__ ) ) { ... } ...
[13:54:39] <arschmitz> frequent what would your thoughts be for your own work if we made ie8 c grade meaning no js at all?
[13:55:16] <frequent> couldn't use it. 
[13:55:20] <frequent> IE7 ok. 
[13:55:24] <arschmitz> see thats what im afraid of
[13:55:27] <frequent> IE8. I have to support
[13:55:33] <arschmitz> im in the same boat for my own client work
[13:55:58] <frequent> yup. IE8 everywhere
[13:56:15] <mspisars> makes my eyes bleed reading this.
[13:56:19] <_|Nix|_> That's OK. It just won't be lazy.
[13:56:41] <frequent> There's worse if you care to know :-)
[13:57:48] <arschmitz> Hey i gota run now but will catch up in a bit
[13:58:40] <mspisars> frequent: I am sick of seeing projects become bloated because they support shitty browsers
[13:58:45] <frequent> mspisars: for example -  http://bit.ly/16Wk9KK - I can't believe how many peopel still use this "browser"... 
[13:59:05] <frequent> me, too, but they are the ones who pay the bills... 
[14:00:45] <mspisars> install Chrome frame
[14:00:55] <mspisars> on all IE installs :)
[14:01:34] <mspisars> on all old ones
[14:01:40] <frequent> usually the people still running IE8 and below are the ones most reluctant to "install" anything :-)
[14:02:01] <mspisars> get the speed of V8 and everything else chrome has to offer
[14:02:09] <mspisars> eh
[14:03:11] <frequent> anyway, so to answer: IE8 I would like to see not being downgraded to C
[14:03:46] <frequent> I'd rather chip in, trying to see if and how to improve performance
[14:04:52] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06master: 02http://git.io/R-GQAQ
[14:04:52] <jqmobilecommit> 13jquery-mobile/06master 143f7a788 15Gabriel Schulhof: Listview: Filter: Convert to extension.
[14:20:20] <travis-ci> [travis-ci] jquery/jquery-mobile#142 (master - 3f7a788 : Gabriel Schulhof): The build passed.
[14:20:20] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/a45edfa7b172...3f7a78871db1
[14:20:20] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5822664
[14:43:23] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06master: 02http://git.io/EzdH7g
[14:43:23] <jqmobilecommit> 13jquery-mobile/06master 14dfcc6a5 15Gabriel Schulhof: Listview: Autodividers: Converting to extension.
[14:58:31] <travis-ci> [travis-ci] jquery/jquery-mobile#143 (master - dfcc6a5 : Gabriel Schulhof): The build passed.
[14:58:31] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/3f7a78871db1...dfcc6a53df26
[14:58:31] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5823459
[15:20:31] <frequent> _|Nix|_: quick question?
[15:36:24] <_|Nix|_> frequent: What's up?
[15:36:59] <frequent> I'm still fighting with trying to add a filter to a controlgroup. 
[15:37:20] <frequent> per controlgroup comments: "For now, we wait until dom-ready to attach the controlgroup's enhancement hook, because by that time, all the other widgets"
[15:38:05] <frequent> so I cannot call   self.element.data("mobile-controlgroup") until controlgroupcreate fires?
[15:38:21] <frequent> (pardon my widget-white-belt-questions)
[15:39:00] <_|Nix|_> frequent: That's why it's best to create an extension. Functions inside the extension prototype will have access to that data item via "this".
[15:39:26] <_|Nix|_> frequent: I've just gotten rid of a bunch of implementations that were using your approach.
[15:39:41] <frequent> ah. so let me add new ones :-)
[15:39:45] <_|Nix|_> frequent: That is, wait until "<widgetname>create" and grab .data( "mobile-widgetname" )
[15:39:48] <_|Nix|_> :)
[15:40:06] <frequent> hm. ok.
[15:40:23] <frequent> more or less what I have been doing (I guess...)
[15:40:39] <_|Nix|_> The correct way to do an extension: $widget( "mobile.widgetname", $.mobile.widgetname, { _create: function() { this._super(); /* Do extensiony stuff */ } } );
[15:41:33] <frequent> I c
[15:41:57] <_|Nix|_> frequent: Oh, and the file that contains the extension AMD-depends on the file that contains the base.
[15:42:13] <_|Nix|_> frequent: ... but that's if you're into that whole AMD thing.
[15:42:25] <frequent> naa... give me some time...
[15:42:28] <_|Nix|_> frequent: ... otherwise, you can just include it in a <script> after JS ...
[15:43:13] <frequent> ok. I think I have enough to continue. 
[15:43:16] <frequent> Thx!
[15:43:45] <_|Nix|_> frequent: NP.
[16:00:42] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 3 new commits to 06lazy-widgets-via-accessors: 02http://git.io/xWkVWA
[16:00:42] <jqmobilecommit> 13jquery-mobile/06lazy-widgets-via-accessors 14e033953 15Gabriel Schulhof: Merge branch 'master' into lazy-widgets-via-accessors
[16:00:42] <jqmobilecommit> 13jquery-mobile/06lazy-widgets-via-accessors 1455ca3f4 15Gabriel Schulhof: Widget factory: Do not allow a placeholderClass to slip into actuallyDefineWidget() when creating extensions.
[16:00:42] <jqmobilecommit> 13jquery-mobile/06lazy-widgets-via-accessors 14a14deb4 15Gabriel Schulhof: Table: Move value for "classes" option out of the prototype.
[16:16:39] <travis-ci> [travis-ci] jquery/jquery-mobile#144 (lazy-widgets-via-accessors - a14deb4 : Gabriel Schulhof): The build passed.
[16:16:39] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/535d9fe81d5e...a14deb4a5b0d
[16:16:39] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5825353
