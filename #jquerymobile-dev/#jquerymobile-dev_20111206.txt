[04:39:41] <toddmparker_> early morning all
[04:44:09] <toddmparker_> geez johnbender, you are a patient man - https://github.com/jquery/jquery-mobile/issues/3222
[05:35:09] <jqmobilecommit> [jquery-mobile] toddparker pushed 1 new commit to dialog-refactor: http://git.io/Xk6PQw
[05:35:09] <jqmobilecommit> [jquery-mobile/dialog-refactor] Linked up fetch links and popups from the pages index page - toddparker
[07:35:34] <jqmobilecommit> [jquery-mobile] toddparker pushed 2 new commits to master: http://git.io/LYZuMA
[07:35:34] <jqmobilecommit> [jquery-mobile/master] Update docs/about/features.html - Anne-Gaelle Colom
[07:35:34] <jqmobilecommit> [jquery-mobile/master] Merge pull request #3225 from agcolom/patch-46 - Todd Parker
[07:58:15] <toddmparker_> we get a lot of Q's with pages submitting to themselves. https://github.com/jquery/jquery-mobile/issues/3226
[07:58:20] <toddmparker_> and the nav model
[07:58:35] <toddmparker_> i'd like to add something to the docs for this
[07:58:44] <toddmparker_> what's our advice?
[07:58:57] <Wilto> “Stop submitting yourself.”
[07:59:20] <Wilto> I picture this advice being issued while holding their arms and forcing the users to smack themselves around.
[08:04:58] <Wilto> I uh I’ll see myself out.
[08:24:38] <jqm-jenkins-bot> Project jqm-master build #329: SUCCESS in 13 min: http://10.59.19.240:8080/job/jqm-master/329/
[08:24:39] <jqm-jenkins-bot> coloma: Update docs/about/features.html
[08:29:31] <jqmobilecommit> [jquery-mobile] toddparker pushed 1 new commit to dialog-refactor: http://git.io/yPNCuQ
[08:29:31] <jqmobilecommit> [jquery-mobile/dialog-refactor] Updated docs - toddparker
[08:38:33] <kinblas> toddmparker_: ping
[08:45:28] <toddmparker_> hey kinblas
[08:45:41] <kinblas> toddmparker_: I have some BaseCamp questions for you
[08:45:49] <toddmparker_> NO
[08:46:00] <toddmparker_> well, ok
[08:46:03] <kinblas> if I create a message, do I have to check the boxes below for folks to get the message in their email every time?
[08:46:14] <kinblas> otherwise, they only see it if they log on right?
[08:46:27] <toddmparker_> yes, should have mentioned that
[08:46:36] <toddmparker_> always check all FG and jQ
[08:46:47] <toddmparker_> when composing a message
[08:46:54] <toddmparker_> wish is was checked by default
[08:47:30] <kinblas> ok that explains why I never saw Anne's messages
[08:47:45] <toddmparker_> kinblas: i think if you just email to the project, everyone is notified
[08:47:54] <kinblas> toddmparker_: so I'm going to reply to Sergey's email but change the 'to' to that email address you sent out yesterday
[08:47:55] <toddmparker_> ah
[08:48:04] <kinblas> toddmparker_: question #2
[08:48:06] <toddmparker_> ok, cool
[08:48:14] <kinblas> why didn't we just use the old jqm basecamp group?
[08:48:22] <kinblas> there's some useful stuff there too
[08:48:30] <kinblas> is it because you couldn't manage it yourself?
[08:48:48] <toddmparker_> did we already have on on filament's account?
[08:48:49] * kinblas wonders if there's a way to suck in those threads/posts
[08:48:59] <toddmparker_> the jQ project had a BC
[08:49:02] <toddmparker_> but nobody usedit except us
[08:49:03] <kinblas> toddmparker_: no, it was on jquery.basecamphq
[08:49:15] <toddmparker_> yeah. deleted unfortunately
[08:49:18] <kinblas> doh
[08:49:27] <toddmparker_> wish i remembered we had stuff there
[08:49:30] <kinblas> by you/us
[08:49:31] <kinblas> ??
[08:49:39] <kinblas> or did the org stop using basecamp?
[08:49:48] <toddmparker_> i *may* be able to find it in my email archives
[08:49:54] <toddmparker_> yeah, they did
[08:51:18] <kinblas> doh ... ok ... some of our plans/thoughts were in there :-)
[08:52:09] <kinblas> toddmparker_: doh, that email forward to basecamp got seriously munged in the format department
[08:52:10] <kinblas> :-)
[08:52:26] <toddmparker_> yeah
[08:52:36] <toddmparker_> that formatting is a bit limited
[08:52:41] <toddmparker_> you can use markdown
[08:52:50] <toddmparker_> but not so good for tables
[08:52:55] <kinblas> so what is this Doc Style split that Anne-Gaelle speaks of?
[08:53:10] <toddmparker_> she was asking about documenting the left nav pattern
[08:53:20] <kinblas> ah ok
[08:53:24] <toddmparker_> i want to make something more flexible
[08:53:26] <toddmparker_> less one off
[08:53:29] <kinblas> your little responsive touches
[08:53:33] <toddmparker_> thus the fetch links and such
[08:53:50] <kinblas> btw, thatnks for talkin' to us the other day
[08:53:56] <kinblas> that room was seriously packed
[08:59:13] <toddmparker_> no problem
[08:59:16] <toddmparker_> happy to do it
[08:59:36] <toddmparker_> i'm sort of opinionated. if you all want to listen, more power to ya
[08:59:51] <toddmparker_> would be cool to have better tools for this
[09:00:01] <toddmparker_> still feel like we're in the dark ages
[09:06:56] <toddmparker_> hey johnbender
[09:07:15] <toddmparker_> kin - can you reply to this disgruntled guy
[09:07:16] <toddmparker_> https://github.com/jquery/jquery-mobile/issues/1746#issuecomment-3034520
[09:08:06] <toddmparker_> johnbender - can you help with this submitting to a dialog issue? https://github.com/jquery/jquery-mobile/issues/3227#issuecomment-3034568
[09:08:18] <toddmparker_> i need to doc this - constraints, etc.
[09:08:33] <toddmparker_> heading out for a lunch....be back in a bit!
[09:19:18] <johnbender> toddmparker_: lookingnow
[09:36:43] <kinblas> toddmparker_: Are they talking about swipe-left/swipe-right or Android's Swype keyboard?
[09:36:56] <kinblas> I think folks are confused. :-)
[09:43:59] <johnbender> toddmparker_: Wilto: did your bada phone come in a wood box?
[09:44:09] <johnbender> luckily I have a hammer and a chisel
[09:48:35] <kinblas> johnbender: can't get the package open?
[09:49:53] <johnbender> kinblas: oh no I got it open
[09:49:58] <johnbender> hammer was sufficient
[09:50:01] <johnbender> nails
[10:02:03] <Wilto> Hah, yeah.
[10:02:11] <Wilto> I had to pry it open with a screwdriver.
[10:20:52] <toddmparker_> yeah, the bada phone came in a huge crate
[10:21:02] <toddmparker_> thought it might have a mummy inside
[10:21:11] <toddmparker_> it got all scooby doo up in here
[10:25:45] <johnbender> toddmparker_: I lawld on seeing that that browser is better than androids
[10:27:15] <toddmparker_> yeah, it's pretty good right?
[10:27:22] <toddmparker_> scrolling is smooth
[10:27:28] <toddmparker_> does yours look like a prototype?
[10:27:37] <johnbender> toddmparker_: yah
[10:27:39] <toddmparker_> ours is missing all kinds of trim
[10:32:25] <Wilto> “it got all scooby doo up in here.” Brb; Twitter.
[10:38:16] <toddmparker_> kinblas, johnbender, gseguin - does this seem like a decent way to handle anchor links?
[10:38:18] <toddmparker_> http://jsfiddle.net/agcolom/v9x9U/11/show
[10:38:25] <toddmparker_> (from BC)
[10:38:40] <toddmparker_> data-rel="anchor" is prolly best to trigger this
[10:38:58] * gseguin looks
[10:39:06] <toddmparker_> or we could first look to see if there is a local page with that ID and, if not, assume it's an anchor
[10:39:24] <toddmparker_> gseguin: reply here for posterity
[10:39:26] <toddmparker_> http://jsfiddle.net/agcolom/v9x9U/11/show
[10:39:29] <toddmparker_> oops
[10:39:34] <toddmparker_> https://filamentgroup.basecamphq.com/projects/8580955-jquery-mobile-team/posts/55213066/comments
[10:39:38] <gseguin> oh basecamp
[10:39:39] <toddmparker_> ^^
[10:39:44] <gseguin> s/oh/on/
[10:39:48] <toddmparker_> ya, this is more of a nudge
[10:42:38] <toddmparker_> i'd like to figure out a solution for sure
[10:43:15] <gseguin> it looks good to me (with a data-rel)
[10:43:42] <gseguin> but I would also love to be able to deep link to a section of a page
[10:46:36] <Wilto> Whoa, hey, guys:
[10:46:37] <Wilto> http://my.opera.com/dragonfly/blog/style-profiler-preview
[10:46:45] <Wilto> CSS performance testing.
[10:48:12] <gseguin> that looks good! That would have saved a lot of time to kinblas
[10:51:41] <Wilto> Should be interesting to mess around with, at the very least.
[10:52:14] <Wilto> So, hey, question for y’all.
[10:52:26] <johnbender> Wilto: gseguin: that seems lkely to be platform specific eh? to the rendering engine?
[10:52:35] <johnbender> it would be nice on mobile too
[10:53:00] <johnbender> platform => browser
[10:53:02] <gseguin> johnbender: agreed but it can give you a clue at least
[10:53:06] <Wilto> johnbender: Oh, yeah. Not something I think we should get heavily into, but it 1) might be worth a cursory look as an indicator of overall CSS performance, and 2) would be cool to see other browsers follow suit.
[10:53:14] <Wilto> I bet it would turn up a few surprising things.
[10:53:32] <johnbender> gseguin: and I wonder if it isn't the same as the js profiling on the desktop, it just won't show the same issues because of the horsepower
[10:54:28] <kinblas> johnbender: right, we don't see the same things on the different platforms
[10:54:41] <kinblas> different things are slower on the different devices .. wp7 being a prime example
[10:55:20] <Wilto> Yeah, don’t get me wrong—not sayin’ we should get on that. Might be interesting, is all.
[10:56:25] <Wilto> In other news, question:
[10:56:37] <johnbender> Wilto: I dunno sounded like you were shilling pretty hard for Opera there ... sold out eh?
[10:56:41] <Wilto> So, say I want to fetch something on a remote page using the namespaced page role as a selector.
[10:56:43] <johnbender> :P
[10:56:49] <Wilto> johnbender: OPERA IS THE FUTURE AND YOU KNOW IT
[10:57:01] <Wilto> (Invoice is in the mail, miketaylr.)
[10:57:50] <miketaylr> (cash it quick, Wilto)
[10:58:16] <johnbender> (Am I now part of the side conversation)
[10:58:30] <miketaylr> besides, we all know innovation doesn't count until webkit does it first ;P
[10:58:32] <Wilto> (I’m not even sure I am.)
[10:58:38] <johnbender> (I like this convention, when two sets of people are talking we should wrap responses)
[10:58:44] <miketaylr> (((hugs)))
[10:58:46] <Wilto> Anyway! Namespaced roles.
[10:58:49] * miketaylr hides
[10:58:56] <Wilto> how i do?
[10:59:17] <johnbender> Wilto: data-your-namespace-role ?
[10:59:34] <Wilto> This ":jqmData(role='page')" business.
[11:00:06] <Wilto> I guess I’m more looking for a quick run through of how that works. It’s new to me.
[11:00:43] <johnbender> Wilto: it handles the namespace for you
[11:00:49] <johnbender> so your selectors don't have to change
[11:00:59] <Wilto> But where I’m AJAXing in a chunk of the page, does that still work?
[11:01:05] <johnbender> so you can alter the namespace to other-ns- and it'll just work
[11:01:15] <johnbender> Wilto: so long as the namespace is consistent
[11:01:26] <Wilto> Oh, cool.
[11:01:29] <Wilto> My bad, then.
[11:46:21] <kinblas> toddmparker_: hey so if we email to that basecamp address you gave us ... it appears to take on Todd's persona :-)
[12:41:31] <johnbender> kinblas: need to run something by you here
[12:42:39] <johnbender> submitting forms back to the same page (common in the case of validations) appears to cause issues with history
[12:42:58] <johnbender> that is, it will add new entries each time for the same page
[12:43:46] <johnbender> it seems like it should squash previous history entries from the same url on form submission since going back ends up as a noop due to the url
[13:06:50] <kinblas> johnbender: sample?
[13:07:15] <johnbender> kinblas: annecdotal or code
[13:07:28] <johnbender> kinblas: rails forms submit back to themselves after the first submission for validation
[13:07:33] <johnbender> that's one sample
[13:07:44] <johnbender> hrm
[13:07:46] <johnbender> wait
[13:07:51] <johnbender> man it's been a long time
[13:08:55] <kinblas> johnbender: so are you talkin about the case where someone submits, but the page returned has the same form because something didn't validate, and the user needs to enter or fix something in the form?
[13:09:05] <johnbender> yes
[13:09:22] <kinblas> even in the normal browser, that is a new history entry
[13:12:44] <johnbender> kinblas: true but by default we reap pages, and then no-op on back because the url on the page div is the same
[13:13:01] <johnbender> s/,//
[13:13:31] <johnbender> so we don't actually retain the history because the page is gone
[13:13:39] <kinblas> yeah, reloading a form-submit is tricky
[13:13:44] <kinblas> it might do bad things on the server
[13:13:59] <johnbender> maybe we should prevent the reaping by default on form submissions
[13:14:09] <johnbender> ugh
[13:14:16] <johnbender> saying that out loud makes me worry lol
[13:14:51] <kinblas> johnbender: yeah I was going to say that we used to have the reverse problem
[13:15:07] <kinblas> we would cache things, and just show you the old page generated
[13:15:09] <johnbender> the pages were retain in history so people went back
[13:15:15] <kinblas> and folks would be upset that it was showing stale stuff
[13:15:16] <johnbender> yar
[13:15:28] <johnbender> hmm
[13:15:45] <johnbender> I wonder if in this case it make sense to just apply the data-dom-cache=true to the form page then
[13:15:49] * johnbender goes to try it
[13:15:57] <kinblas> johnbender: I guess so what I don't get
[13:16:05] <kinblas> if I submit ... let's say with GET
[13:16:33] <kinblas> the URL for the new page is unique to that form post
[13:16:46] <kinblas> so if you went back
[13:16:57] <kinblas> the URL for the previous page should/would be different yes?
[13:17:09] <kinblas> hmmm unless they kept submitting without making a change
[13:22:56] <johnbender> kinblas: correct
[13:23:13] <johnbender> and I think the vast majority of form submissions are post anyhow
[13:23:58] <johnbender> I took a detour to make some trader joes "sipping chocolate" so now I'm going to try my dom caching theory
[13:24:08] <kinblas> lol
[13:27:55] <johnbender> arg duplicate cached page
[14:08:17] <johnbender> kinblas: so it looks like there are kind of two solutions
[14:08:22] <johnbender> both of which suck
[14:08:25] <johnbender> squash the history
[14:08:37] <johnbender> or retain it and find a way to differentiate between the duplicate urls
[14:08:50] <eddiemonge> toddmparker_: you around
[14:08:53] <johnbender> both of which would have to be explicit options
[14:09:11] <johnbender> since I shan't be foisting this on the entire userbase
[14:10:33] <kinblas> johnbender: squash meaning form submits to the same location (minus query params?) don't increment the history?
[14:13:59] <johnbender> kinblas: yah
[14:17:15] <eddiemonge> ?eval var a = 0, b = 10; while ( ++a, b>=a ); a, b
[14:17:16] <bot-t> eddiemonge: 10
[14:17:23] <eddiemonge> ?eval var a = 0, b = 10; while ( ++a, b>=a ); a; b;
[14:17:24] <bot-t> eddiemonge: 10
[14:17:49] <eddiemonge> ?eval var a = 0, b = 10; while ( ++a, b>=a ); a;
[14:17:50] <bot-t> eddiemonge: 11
[14:17:56] <eddiemonge> johnbender: does that help?
[14:18:08] <eddiemonge> its basically a for loop
[14:20:22] <johnbender> eddiemonge: I understand the code you've pasted here but that doesn't help me understand the snippet, it does an assignment and then uses the array index operator
[14:20:24] <eddiemonge> create a div, fill it with IE conditional tags, and when all[0] (which is looking for a tag in that div) when returns false, you have your IE version
[14:21:12] <johnbender> so div.all is a browser builtin then
[14:21:17] <johnbender> that answer's my question
[14:21:42] <johnbender> err
[14:21:52] <johnbender> all is a builtin
[14:22:01] <johnbender> ugh
[14:22:18] <eddiemonge> all is the variable referencing the array of elements tagged as "i"
[14:23:28] <eddiemonge> im assuming the getElementsByTagName is updated when the divs innerhtml gets updated
[14:23:41] <johnbender> the original doesn't care about the external dom though, yours is dependent on there being no i's before the script is loaded eh?
[14:23:47] <johnbender> ahh
[14:23:49] <johnbender> nevermind
[14:23:53] <johnbender> div.getElemenets
[14:24:08] <johnbender> any reason why you changed it?
[14:24:47] <eddiemonge> it was updated and since we are referencing the original, we should maybe keep it up to date at some point
[14:24:51] <eddiemonge> more efficiency and stuff
[14:25:02] <johnbender> fair enough,
[14:25:25] <johnbender> is there a test somewhere for that?
[14:25:41] <johnbender> not super excited about breaking something like this
[14:25:45] <eddiemonge> i think the div.all was trying to reference a var but was failing
[14:26:35] <eddiemonge> would the test for that check the UA string and then compare the values? is that even reliable?
[14:27:03] <johnbender> we'd have to run it on ie too
[14:27:04] <johnbender> sigh
[14:27:11] <johnbender> but no
[14:27:17] <eddiemonge> thats the only place its affected
[14:27:22] <eddiemonge> or should be
[14:27:26] <johnbender> you wouldn't have to check against the ua
[14:27:31] <johnbender> just verify that it sets some version
[14:27:34] <eddiemonge> chrome and firefox return 4 for me which is less than ie.
[14:27:50] <eddiemonge> and it only works for IE up to and including 9
[14:28:03] <johnbender> thats not good
[14:29:57] <eddiemonge> yeah, MS trying to fake their own UA lol
[14:31:02] <johnbender> eddiemonge: so I guess in that case it hopefully behaves in a fashion where it's unnecessary to know what version of ie it is
[14:32:05] <eddiemonge> hopefully but it doesnt seem to be the case for all things. as long as the IE check isnt really exposed or promoted to the users it should be fine
[14:32:54] <eddiemonge> the codes up to paulirish's standard: https://github.com/SlexAxton/yepnope.js/blob/master/prefixes/yepnope.ie-prefix.js#L53
[14:33:36] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/VJs-ug
[14:33:36] <jqmobilecommit> [jquery-mobile/master] Merge pull request #3172 from eddiemonge/issue_3169.1 - John Bender
[14:34:20] <johnbender> eddiemonge: http://paulirish.com/2011/11-more-things-i-learned-from-the-jquery-source/
[14:34:26] <johnbender> as is ternary operator cascading
[14:34:43] <johnbender> which I think is possibly the least readable logic implementation possible
[14:34:49] <johnbender> to each their own though
[14:34:54] <johnbender> its just a personal preference
[14:36:33] <johnbender> eddiemonge: https://github.com/jquery/jquery/blob/master/src/data.js#L332
[14:36:43] <johnbender> the sample he references in the screencast
[14:38:09] <eddiemonge> ugh yeah i hate those those
[14:38:21] <eddiemonge> single operation ternary operator or buzz
[14:39:19] <eddiemonge> readability a switch is probably better there but switches are just so slow
[14:41:21] <johnbender> switches are also notoriously buggy because of the requried break; to get normal semantics
[14:41:28] <johnbender> in otherwords fallthrough is bad
[14:41:39] <johnbender> if/else if/else is not a sin :/
[14:42:18] <eddiemonge> no but if/elseif/elseif/elseif/elseif/elseif/else is so ugly
[14:42:45] <eddiemonge> i wish there was a better switch type statement
[14:42:49] <johnbender> I'll take ugly + readable without bugs over elegant and buggy any day
[14:43:18] <eddiemonge> rwaldron: whats your opinion?
[14:44:17] <johnbender> eddiemonge: alternately you could create your own solution, though it's arguably not much better than the ternary https://gist.github.com/40f8224e02bf2fc94687
[14:45:20] <eddiemonge> wtf is that? double the code for questionable more readable? lol
[14:45:45] <eddiemonge> and you didnt cache pairs.length either :gasp:
[15:24:56] <jqm-jenkins-bot> Project jqm-master build #330: FAILURE in 14 min: http://10.59.19.240:8080/job/jqm-master/330/
[15:24:56] <jqm-jenkins-bot> eddie: Update IE checker code for compiler
[15:27:51] <johnbender> eddiemonge: ^
[15:28:08] <johnbender> mind taking a look there?
[15:31:03] <eddiemonge> is there any kind of error message?
[15:31:19] <johnbender> eddiemonge: if you run the tests you'll see it
[15:31:25] <johnbender> /tests/unit/support
[15:31:54] <johnbender> sorry should have pointed out where the failure was
[15:34:15] <eddiemonge> the test is broken
[15:35:32] <johnbender> eddiemonge: can you fix it?
[15:35:47] <eddiemonge> where is $.browser.msie coming from?
[15:36:03] <johnbender> eddiemonge: http://api.jquery.com/jQuery.browser/
[15:36:57] <eddiemonge> i think if you drop the !! from https://github.com/jquery/jquery-mobile/blob/master/tests/unit/support/support_core.js#L80 it will pass
[15:39:27] <eddiemonge> https://github.com/jquery/jquery-mobile/pull/3229
[15:42:08] <johnbender> eddiemonge: I'd rather revert to returning false for two reasons
[15:42:22] <johnbender> one, if someone out there is checking for false explicitly this will break their code
[15:42:34] <johnbender> two, undefined is not the same thing as false semantically
[15:42:41] <johnbender> the first one makes more sense
[15:42:46] <johnbender> err
[15:42:47] <johnbender> rather
[15:42:49] <johnbender> is more important
[15:45:05] <johnbender> although on #2 the browser version shouldn't really be a number or false, I'd rather not randomly break people's code
[15:45:07] <eddiemonge> i think a more important question is why is that check even there when there is one in core?
[15:47:54] <johnbender> eddiemonge: no idea
[15:47:55] <johnbender> lol
[15:48:14] <johnbender> but I've found that generally things aren't done for no reason
[15:48:18] <johnbender> at least on this project
[15:49:30] <eddiemonge> i think it should return undefined since it could be an IE, but an unknown version
[15:49:50] <eddiemonge> and if people are finding that method, then they are either browsing the source or they are looking at some documentation
[15:49:52] <johnbender> you're probably right but we shipped it this way
[15:50:00] <eddiemonge> either case they should see what it returns
[15:50:28] <eddiemonge> it didnt return false before, it returned a negative number
[15:51:11] <johnbender> arg
[15:51:12] <eddiemonge> which makes it seem like there is a bug in qunit that is evaluating a negative number and false as equal, and not similiar
[15:51:12] <johnbender> ok
[15:51:17] <johnbender> reverting that pr then
[15:51:20] <johnbender> this is silly
[15:51:44] <eddiemonge> reverting the pull to change the code or to update the test?
[15:52:05] <johnbender> reverting the pull, we don't need the update and I'm not interested in making a breaking chane in something so trivial
[15:52:30] <eddiemonge> where is scott when you need him
[15:53:11] <eddiemonge> what was my reason for the pr in the first place?
[15:53:23] <johnbender> warnings in closure compiler
[15:53:34] <eddiemonge> oh. right
[15:53:34] <johnbender> which I think can be addressed without changing the functionality
[15:54:15] <eddiemonge> i think the only code that breaks is test since if people were checking for true or less than one their code will still pass
[15:54:40] <eddiemonge> if they were explicitly testing for === false, that should have failed before
[15:54:51] <eddiemonge> ?eval undefined == false
[15:54:52] <bot-t> eddiemonge: false
[15:54:55] <johnbender> I think the closure compiler echo's my sentiment on the while construct but I added the braces
[15:55:01] <eddiemonge> oops, nevermind
[15:57:21] <jqmobilecommit> [jquery-mobile] johnbender pushed 2 new commits to master: http://git.io/JCozzg
[15:57:21] <jqmobilecommit> [jquery-mobile/master] Revert "Merge pull request #3172 from eddiemonge/issue_3169.1" - John Bender
[15:57:21] <jqmobilecommit> [jquery-mobile/master] fixed closure compiler warning for missing while block - John Bender
[16:01:31] <eddiemonge> wow the grammer in that email was not up to par
[16:02:00] <eddiemonge> johnbender: what rebase discussion are you talking about?
[16:02:30] <johnbender> eddiemonge: teaching people when to use rebase so we can avoid all the merge commits we see
[16:03:16] <eddiemonge> arent those mostly from hitting the automerge button in gh or pulling from upstream after having committed things in a branch?
[16:05:09] <johnbender> no
[16:05:13] <johnbender> that's from merge branches
[16:05:20] <johnbender> whenever there's a conflict
[16:05:35] <johnbender> it ends up shoving the entire change set into a single commit
[16:05:40] <johnbender> which is to be avoided
[16:05:47] <johnbender> wherever possible
[16:06:55] <eddiemonge> what? svn solved my biggest gripe with it and one of the first things i loved about git??? https://subversion.apache.org/docs/release-notes/1.7.html#single-db
[16:07:52] <johnbender> eddiemonge: it's entirely avoidable with rebase in a lot of situations
[16:08:07] <johnbender> which means you get fast forward merges and clean linear history
[16:08:34] <eddiemonge> yeah thats nice
[16:11:10] <jqmobilecommit> [jquery-mobile] johnbender pushed 2 new commits to master: http://git.io/x6ZeXQ
[16:11:10] <jqmobilecommit> [jquery-mobile/master] test that the link title value is the selected option text - John Bender
[16:11:10] <jqmobilecommit> [jquery-mobile/master] Merge branch 'eugenb1-patch-1' - John Bender
[16:23:36] <jqm-jenkins-bot> Yippie, build fixed!
[16:23:36] <jqm-jenkins-bot> Project jqm-master build #331: FIXED in 12 min: http://10.59.19.240:8080/job/jqm-master/331/
[16:23:37] <jqm-jenkins-bot> * eugen.bolz: Slider: use also option text as title
[16:23:37] <jqm-jenkins-bot> * john.m.bender: Revert "Merge pull request #3172 from eddiemonge/issue_3169.1"
[16:23:38] <jqm-jenkins-bot> * john.m.bender: fixed closure compiler warning for missing while block
[16:23:38] <jqm-jenkins-bot> * john.m.bender: test that the link title value is the selected option text
[16:36:50] <eddiemonge> yup, that check fails in IE10 so it hopefully doesnt need it
[16:37:44] <eddiemonge> johnbender: have you ran the tests in 10?
[17:11:29] <johnbender> eddiemonge: I haven't
[17:12:27] <eddiemonge> i would advise you not to then.
[17:12:38] <eddiemonge> its better to not know right?
[17:12:45] <johnbender> ?
[17:13:12] <johnbender> I'll download it now and it give it a whirl
[17:14:38] <eddiemonge> its actually not that bad. only a few failed tests
[17:15:56] <johnbender> it's hard to keep ie up to date without getting ci support
[17:16:21] <johnbender> eddiemonge: do I need windows 8?
[17:17:10] <eddiemonge> windows 8 comes with it
[17:17:24] <johnbender> but to run ie 10 it looks like I need windows 8
[17:17:24] <eddiemonge> i think you can download it for win vista/7 too though
[17:17:31] <johnbender> I just tried
[17:17:32] <eddiemonge> but not XP
[17:18:04] <eddiemonge> oh wow i guess so
[17:18:13] <eddiemonge> no 10 for windows 7 even? thats ballsy
[17:18:28] * johnbender is over it
