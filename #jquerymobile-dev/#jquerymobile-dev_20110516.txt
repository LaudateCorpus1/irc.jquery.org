[08:58:03] <todd_> stevenblack - can you create a ticket for adding some of these helper classes in? We need to decide which are useful/applicable here
[08:58:40] <StevenBlack> k
[09:08:56] <StevenBlack> toddparker, kinblas: did you see my overnight comment about pathjs: https://github.com/mtrpcic/pathjs  -- just kick me if so.  With IRC you never know who's seen what.
[09:09:19] <kinblas> StevenBlack: I wasn't logged in so no, I didn't see
[09:11:01] <StevenBlack> kinblas: I'm thinking pathjs is a really nice abstraction for specialty url handling.  Something for us to consider.
[09:11:26] <kinblas> StevenBlack: are you suggesting that we integrate that into JQM? From what I can see, folks can leverage that library externally by triggering it from notifications?
[09:13:45] <StevenBlack> kinblas: for now I'm suggesting we look at this because we need to do some things similar internally.  Namely: separate-out and ignore user data from the URL.  Also the AOP aspects are brilliant for exposing framework hooks around URLs before and after we process them.
[09:14:17] <kinblas> AOP?
[09:14:24] <StevenBlack> kinblas: Then there's 'routes' which is a whole other conversation.
[09:14:42] <StevenBlack> Aspect-Oriented Programming.
[09:15:17] <StevenBlack> The systematic exposure of pre-, replace-, and post- hooks around junctures.
[09:16:58] <StevenBlack> (btw core meeting is on now in #jquery-meeting
[11:49:33] <StevenBlack> A user over in #jquerymobile reports that the jQuery Mobile repo is 97M in size and is rightfully asking, WTF?  Time for some remote repo maintenance?
[11:50:57] <toddparker> maybe
[11:51:13] <toddparker> there were some design assets on there, but i removed most of 'em
[11:51:22] <toddparker> can you track down where the bloat is?
[11:52:41] <StevenBlack> k; I'm on it.
[11:55:32] <toddparker> thanks!
[11:57:57] <StevenBlack> Question: who "owns" the jquery/jquery-mobile repo?   I need to ask them to check https://github.com/account/repositories to see what the space usage is for jQuery Mobile.  In essence, checking the veracity of the user's report first.  In my account, my up-to-the-minute fork is 4.06M, not the 97M reported by the user.
[11:59:05] <StevenBlack> ajpiano: any insight ^^^
[11:59:40] <ajpiano> hrm, i'd imagine john is
[11:59:49] <ajpiano> but danheberden might have access to check out the information you're after
[12:06:39] <StevenBlack> Update: I've got 113.2M on disk here, of which 103M is in the .git/objects folder.
[12:17:21] <StevenBlack> Update: git prune and git gc are our friends here.   On my local fork, git prune -v -n  (-v to just report) reports nothing.  THEREFORE I sumize that there are no unreachable objects in the jQuery Mobile repo.  So let's consider deleting obsolete remote branches.
[12:17:40] <StevenBlack> toddparker: Agenda item for tomorrow's call?  ^^^
[12:19:30] <StevenBlack> ftp://82.96.64.7/pub/software/scm/git/docs/v1.5.1.4/git-prune.html
[12:19:38] <StevenBlack> http://www.kernel.org/pub/software/scm/git/docs/git-gc.html
[12:22:56] <StevenBlack> =======
[12:24:21] <StevenBlack> I just ran git gc on a hairy old repository here, one in which I had aborted a mistaken commit and remote-push of image and video files.  Ugh.  "git gc" cleaned it up good.
[12:33:41] <StevenBlack> Update: running [git gc] on a hairy-assed repo and then pushing to remote saved me 400+ MB of space up on GitHub.com.  [git gc] on jQuery Mobile saves 2M on the 113M used locally.  Hardly worthwhile.  THEREFORE, looks like deleting obsolete remote branches is the next step.
[13:49:05] <danheberden> StevenBlack do you still need any repo info?
[13:49:06] <bot-t> (65 hours 40 mins ago) <gnarf> tell danheberden hey sexy - can you chat with me regarding effects/color docs soon?
[13:49:18] <danheberden> bot-t, you're back!
[13:49:19] <bot-t> danheberden, Very doubtful.
[13:49:22] <danheberden> oh
[14:47:04] <StevenBlack> danheberden: No, I think we're good.  The jQuery Mobile repo's large and it may be due to obsolete branches.
[16:47:36] <kinblas> StevenBlack: ping
[16:48:49] <kinblas> StevenBlack: regarding you "main problem" with my last checkin ... is it that you want opts to remain accessible even though we never will use the original passed in?
[17:03:52] <kinblas> Or are you more concerned about naming?
[17:33:51] <StevenBlack> hi kinblas: reworded it to "concern" :-)  It's mainly about semantics.  Options aren't options anymore once we've augmented them with defaults.  They are settings.  Secondly, it's weird to pass-in say a 3-key option object to a function and, as a byproduct of the function call, your option object turns into, say, an 8-key object.
[17:34:47] <StevenBlack> In short, we use options to set the running state of the function, its settings, for the upcoming pass.
[17:36:45] <StevenBlack> ?tell kinblas hi! reworded it to "concern" :-)  It's mainly about semantics.  Options aren't options anymore once we've augmented them with defaults.  They are settings.  Secondly, it's weird to pass-in say a 3-key option object to a function and, as a byproduct of the function call, your option object turns into, say, an 8-key object.
[17:36:46] <bot-t> StevenBlack, Okay.
