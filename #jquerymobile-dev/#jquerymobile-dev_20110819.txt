[09:25:24] <toddmparker> Hey guys!
[09:36:26] <toddmparker> That looks like a tricky bug ^^
[09:37:17] <toddmparker> Seems like we're SO close on the pushState stuff. Great work _nickel and scottjehl!
[09:37:42] <toddmparker> Just need to figure out that last issue now? Seems like testing is in good shape?
[09:58:03] <kinblas> todd_: toddmparker: scottjehl: _nickel: fyi, I can't connect to AIM from behind the adobe firewall today ... not sure if it's an AOL problem or an Adobe problem
[09:58:11] <kinblas> fyi I fixed the flashing on iPad
[09:58:18] <_nickel> kinblas: thats ok! we have IRC right?!?!
[09:58:21] <kinblas> testing on Android/BB now
[09:58:21] * _nickel loves IRC
[10:04:18] <kinblas> bah ... transitions suck
[10:05:09] <kinblas> the fix to stop the flashing on iOS was to delay the setting of the transition-duration till the actual animation start ... but that causes flashing on Android
[10:05:25] <kinblas> the fix for Android is to set it immediately
[11:44:18] <toddmparker> gotta love these browsers
[11:44:32] <toddmparker> is it safe to say that transitions are impossible cross-platform :)
[11:49:48] <kinblas> toddmparker: hmmm the flashing is bad only on some android platforms HTC and XOOM
[11:49:56] <kinblas> on my Droid X I see no difference
[11:49:58] * kinblas sighs
[12:10:18] <scottjehl> hey
[12:10:23] <scottjehl> sorry I was away
[12:11:27] <scottjehl> Kinblas sounds like you're getting close
[12:11:57] <kinblas> scottjehl: that sound you here is hair being pulled
[12:12:08] <scottjehl> ouch
[12:12:34] <kinblas> I've pushed 3 trees external for testing (HEAD, transitions branch, transitions branch with ipad fixes)
[12:12:46] <kinblas> testing across all 3 and writing down results
[12:12:52] <kinblas> for every device I have
[12:13:02] <kinblas> then we can compare with the devices Todd has
[12:22:51] <scottjehl> great. fine work, as always!
[12:27:55] <scottjehl> _nickel how goes the pushstate stuffs
[13:28:30] <_nickel> scottjehl: I'm actually just finishing up
[13:28:36] <_nickel> we're green so far as I can tell
[13:28:59] <_nickel> toddmparker: I would like to suggest a huge header in the next blerg post about why we have to use replace state
[13:29:11] <_nickel> we're going to be explaining that one billion times as it is
[13:29:31] <_nickel> scottjehl: running the test suite now
[13:30:34] <scottjehl> well, it's also nice to let people exclude it easily if it conflicts with their app
[13:30:45] <scottjehl> another benefit that it's external
[13:30:51] <_nickel> yes
[13:30:54] <_nickel> jqm is winning
[13:31:32] <_nickel> scottjehl: toddmparker: http://twitter.github.com/bootstrap/
[13:31:34] <_nickel> thoughts?
[13:31:44] <_nickel> other than every website looking like twitter
[13:31:48] <_nickel> obviously thats lame
[13:32:00] <scottjehl> heh. At a glance I think it's a nice little CSS framework
[13:32:16] <scottjehl> though, the columns should really be percentage-based
[13:32:28] <scottjehl> very desktop-centric in layout
[13:32:58] <_nickel> scottjehl: are there grid systems that are built to work in percentages?
[13:33:36] <_nickel> scottjehl: according to hacker news it doesn't work well in a lot of browsers either
[13:33:39] <_nickel> ... wtf
[13:34:35] <scottjehl> yeah there are. we usually create our own. CSS itself is pretty concise for making layout grids
[13:34:43] <scottjehl> this one was released this week though:
[13:35:04] <scottjehl> http://goldengridsystem.com/
[13:35:29] <scottjehl> I'm actually not sure what kind of code is behind it. I get the sense it's got JS driving the layout. boo...
[13:36:24] * _nickel sighs
[13:36:41] <scottjehl> but it's fluid and responsive
[13:36:44] <scottjehl> both good things
[13:56:39] <toddmparker> hey guys
[13:57:03] <toddmparker> _nickel and scottjehl - I agree that we need to explain the replaceState vs. pushState differerence
[13:57:12] <toddmparker> and why we went with RS
[13:57:17] <scottjehl> hey toddmparker
[13:57:23] <toddmparker> can you guys jot down some notes for me?
[13:57:31] * _nickel wants to punch ios 4.x in the balls
[13:57:33] <toddmparker> i'll be working on the blog post later today
[13:57:49] <toddmparker> and i don't really have anything to talk about
[13:58:01] <toddmparker> unless the RS stuff will land today
[13:58:04] <toddmparker> which would be awesomw
[13:58:27] <scottjehl> I'm open to ideas for using regular pushstate, btw. we just have to check if it worked whenever we use it, then redo the action with hashchange
[13:58:27] <scottjehl> and it won't be able to be external
[13:58:27] <toddmparker> LOL
[13:58:40] <toddmparker> no ball punching _nickel
[13:59:07] <toddmparker> i need help understanding pros/cons
[13:59:48] <toddmparker> unless pushState is better supported, I don't see why a switch is needed
[13:59:52] <toddmparker> esp. if it can't be external
[14:00:13] <toddmparker> BTW - https://irccloud.com
[14:00:20] <toddmparker> it's a really nice IRC web client
[14:00:28] <toddmparker> and it keep history if you log off/on
[14:00:42] <toddmparker> i might just switch to this instead of colloquy
[14:03:36] <scottjehl> yeah i'm using it now
[14:04:07] <scottjehl> umm pushState and replaceState = 2 parts of same API. both seem to be supported the same
[14:04:37] <scottjehl> it's more that both of them do nothing most of the time in iOS4 because of security restrictions
[14:04:55] <scottjehl> so if we just tested for pushstate and then used it, the url would never update in ios4
[14:05:16] <scottjehl> instead, we're letting the url update to a usable hash url, then trying to replace it with replacestate
[14:05:42] <scottjehl> ..which does nothing in ios4, but it's okay
[14:08:15] <toddmparker> ok, got it
[14:08:39] <toddmparker> so iOS4 doesn't work with either
[14:08:58] <toddmparker> or it sometimes works?
[14:09:33] <scottjehl> right. on the 7th attempt, I decided to stop trying to use pushstate for a clean change and just see if we could listen & react with replacestate instead
[14:09:36] <scottjehl> :/
[14:10:02] <scottjehl> umm both work, but only when they're triggered in the callback of a user event, like a click
[14:10:50] <scottjehl> so something like we do wouldn't work, especially when calling $.mobile.changePage() at a random time
[14:13:21] <rwaldron> toddmparker do you have a min for a question about column grids?
[14:14:21] <_nickel> scottjehl: ok all the tests are passing
[14:14:34] <scottjehl> rockstar ^
[14:14:41] <_nickel> scottjehl: did you address the bug that guy raised on twitter last night?
[14:14:47] <scottjehl> I did not
[14:15:01] <scottjehl> it's interesting though. I got close, but then broke the forward button again
[14:15:06] <scottjehl> not sure what's worse
[14:15:11] <_nickel> can you lay that out for me so I can take a look?
[14:15:29] <scottjehl> yep. go to homepage, click somewhere, hit refresh
[14:15:29] <_nickel> scottjehl: unless you want to take a look
[14:15:33] <scottjehl> then hit back button
[14:15:39] <scottjehl> nah I tried last night a bit
[14:15:43] <scottjehl> fresh eyes :)
[14:15:55] <_nickel> hahah
[14:15:57] <_nickel> fair enough
[14:16:13] <_nickel> how bizarre
[14:17:08] <toddmparker> gotta duck off for a bit
[14:17:22] <toddmparker> i'll bug you guys with questions later
[14:17:33] <toddmparker> awesome _nickel
[14:18:59] <_nickel> scottjehl: it looks like I'm in a sort of infinite loop here
[14:19:07] <_nickel> god save me
[14:19:10] <scottjehl> huh
[14:19:21] <_nickel> one sec
[14:19:24] <scottjehl> watch out, they might take your thinkpad away
[14:19:40] <_nickel> lol
[14:19:42] <_nickel> nevermind
[14:19:49] <_nickel> I was inspecting a test page
[14:20:23] <scottjehl> <-- currently generating jQM pages from JSON server responses
[14:20:39] <scottjehl> uuber contrived demo
[14:21:32] <_nickel> :D
[14:30:40] <_nickel> scottjehl: maybe this is my lack of (push|pop)state understanding
[14:30:57] <_nickel> but why would popstate be fired when you refresh the page
[14:31:03] <scottjehl> heh. me too. I've read the docs a ton of times :)
[14:31:33] <scottjehl> in Chrome?
[14:31:35] <_nickel> yah
[14:31:48] <scottjehl> chrome fires popstate at onload
[14:31:54] <scottjehl> no other browsers do this
[14:32:12] <scottjehl> which is why I had that timer in there to enable popstate listening after onload
[14:32:22] <scottjehl> is that the part you're talking about?
[14:32:30] <_nickel> in our case it doesn't matter
[14:32:33] <_nickel> yah
[14:32:41] <_nickel> in our case it doesn't matter though because the state is null
[14:32:47] <scottjehl> yep
[14:33:04] <_nickel> wtf
[14:33:13] <scottjehl> amazing how complicated that little 70 line block is huh?
[14:33:15] <_nickel> totally random back button
[14:33:20] <scottjehl> i keep getting completely confused
[14:33:41] <_nickel> it must be making some sort of arbitrary decision based on previous state and the domain
[14:34:18] <_nickel> scottjehl: wait
[14:34:50] <scottjehl> well, it may be firing popstate before the unload
[14:34:52] <scottjehl> ?
[14:35:04] <scottjehl> because you're leaving a pushed state
[14:36:07] <_nickel> one sec
[14:36:19] <_nickel> I may not actually be seeing anything wrong here
[14:38:58] <scottjehl> huh
[14:44:06] <_nickel> scottjehl: ok
[14:44:12] <_nickel> scottjehl: steps to reproduce
[14:44:17] <_nickel> rather
[14:44:19] <_nickel> steps I'm taking
[14:44:47] <_nickel> copy http://33.33.33.10/docs/pages/index.html into the clipboard
[14:44:53] <_nickel> open a new incognito window
[14:44:56] <_nickel> paste
[14:45:00] <_nickel> <return>
[14:45:14] <_nickel> back button takes me back to the "new tab" page
[14:45:22] <_nickel> was it does with every other website on the planet
[14:45:46] <_nickel> *what
[14:50:52] <scottjehl> that IT doesn't load for me
[14:51:08] <scottjehl> IP
[14:51:47] <scottjehl> but hmm not sure. I think the one I'm referring to more is if you go to a page within jQM, then refresh, then click back
[14:52:09] <scottjehl> where you'd be going back to the homepage
[14:52:14] <scottjehl> which has a popstate
[14:58:59] <_nickel> scottjehl: sorry thats my local vm :P
[14:59:20] <_nickel> 33.33.33.* is the dod :D
[14:59:23] <_nickel> DOD
[15:02:10] <_nickel> scottjehl: yah it goes back to itself
[15:04:51] <_nickel> scottjehl: ... and now I'm not having the issue ...
[15:05:06] <_nickel> there it is
[15:05:08] * _nickel sighs
[15:05:15] <_nickel> user error
[15:05:56] <scottjehl> oh?
[15:06:08] <_nickel> scottjehl: that is, I'm a moron
[15:06:22] <_nickel> I think I see the problem
[15:06:26] <scottjehl> yeah?
[15:06:28] <_nickel> or at least a part of it
[15:06:30] <scottjehl> that's great
[15:06:32] <_nickel> the initialFilePath
[15:06:35] <_nickel> on refresh
[15:06:45] <_nickel> is set to the new pathname
[15:06:52] <_nickel> but chrome still retains the state
[15:07:23] <_nickel> so we replaceState with the initialFilePath
[15:07:30] <_nickel> so it looks like it did nothing
[15:07:37] <_nickel> but to chrome we're at the homepage in the history stack
[15:07:43] <_nickel> thus
[15:07:48] <scottjehl> oh. hmm yeah
[15:08:10] <_nickel> when you click the back button again it dumps your onto a different page where there's nothing to replace the state and make it look like were still in jqm
[15:08:17] <_nickel> *dumps you
[15:10:06] <scottjehl> hmm ok yeah
[15:10:10] <scottjehl> so what to do
[15:14:27] <_nickel> thinking
[15:17:55] <scottjehl> rwaldron could I have helped with your question at all?
[15:18:14] <rwaldron> actually, i figured out the issue
[15:18:16] <rwaldron> but thanks!
[15:18:37] <scottjehl> okay sure
[15:19:02] <scottjehl> hey _nickel so I made a contrived demo for extensibility hooks , just for talking points
[15:19:08] <scottjehl> kinblas - you around?
[15:20:17] <scottjehl> here's the commit. It's a simple filter callback that's called in navigation.js immediately when the ajax success comes through
[15:20:19] <scottjehl> https://github.com/jquery/jquery-mobile/commit/d4f84f97b2a7cc9c6e1e4f454d21e258982dbd2c
[15:20:20] <socialhapy> ★ Commit on jquery-mobile by scottjehl (15m, 21s ago): For discussion purposes, this is a very simple example of one way we could provide a filtering mechanism for data-based  (JSON) server responses. The demo php page responds as html or json depending on whether it's requested via regular http or Ajax.
[15:20:51] <scottjehl> the demo page that explains and uses it is here: http://filamentgroup.com/examples/jqm-extensibility/docs/pages/pages-dynamic-data.html
[15:21:04] <kinblas> scottjehl: I'm around
[15:21:15] <scottjehl> hey Kin
[15:21:28] <kinblas> fresh from a 1.5 hour meeting
[15:21:31] <kinblas> :-)
[15:21:36] <_nickel> why in gods name to the put object literals/functions as the first arguments
[15:21:38] <scottjehl> just wondering if you wanted to take a glance at that at some point and give it a yay/nay for what you were thinking we'd do for this
[15:21:44] <scottjehl> eesh
[15:21:59] <_nickel> hanging anon functions is third grade api design
[15:22:03] <_nickel> </rant>
[15:24:38] <kinblas> scottjehl: yeah that works just fine
[15:24:57] <kinblas> I thought you were trying to figure out how to encode/decode the URL :-P
[15:25:08] <scottjehl> is this along the lines of what you were expecting?
[15:25:37] <kinblas> scottjehl: well, what does the success callback get as args?
[15:25:59] <kinblas> if it's non-html does it pass the request object?
[15:26:01] <scottjehl> oh no, I thought this was mostly about giving people a hook for serving JSON via ajax
[15:26:11] <scottjehl> well, I was wondering that too
[15:26:26] <scottjehl> especially so I wouldn't have had to do that stupid type inference with the {
[15:26:27] <scottjehl> hehe
[15:26:33] <kinblas> scottjehl: well this was definitely one of the pending hooks
[15:26:55] <scottjehl> so maybe passing additional args to the filter would be ideal
[15:27:49] <kinblas> scottjehl: ideally we would give them the request since it would have the content-type on it right?
[15:27:49] <scottjehl> however, this whole thing can already be done with regular jQuery if you use $.ajaxSetup.dataFilter
[15:28:09] <scottjehl> sorry $.ajaxSetup({ dataFilter: function(data, type){...
[15:28:35] <scottjehl> of course, that's not just jQM ajax, but all ajax. I still wonder if it's useful enough that we don't need to do more in jQM...?
[15:28:39] <kinblas> yeah but that's too global
[15:28:55] <scottjehl> k. I wonder if we might match the API for that then
[15:29:09] <kinblas> I think what you have is good ... it's for pages, not for any other data the app might load
[15:29:26] <scottjehl> here's the problem: we specify type: "html" explicitly in changePage
[15:29:29] <scottjehl> loadPage
[15:29:50] <scottjehl> so it'll always say it's text/html in the response data right?
[15:29:51] <kinblas> ah yes, didn't I make that type passable via the loadPage config?
[15:30:03] <kinblas> if not, we should
[15:30:14] <kinblas> oh now I'm remembering what I was thinking
[15:30:27] <scottjehl> doesn't look like it
[15:30:29] <kinblas> sorry it's been a long day
[15:30:37] <scottjehl> no prob!
[15:30:53] <kinblas> I may have been over-engineering in my thinking ... but anyways here goes
[15:31:10] <kinblas> what I was thinking was a way for folks to register content-type handlers
[15:31:37] <kinblas> the reason was this
[15:31:45] <kinblas> we always assume we are using ajax
[15:31:55] <kinblas> but what if everything was already in a data structure (JSON) in memory
[15:32:50] <kinblas> I was thinking we needed some way for folks to hook in to bypass this assumption that everything was ajax loaded
[15:34:33] <scottjehl> ah, okay yeah that too.hmm.
[15:34:49] <scottjehl> that'd make for one not-at-all usable C Grade app :/
[15:35:01] <scottjehl> I guess for phonegap..?
[15:35:31] <kinblas> yeah
[15:35:47] <kinblas> well it doesn't have to be just for phonegap
[15:36:14] <kinblas> but in any case that's what I was thinking
[15:36:26] <kinblas> maybe we can do baby steps?
[15:37:02] <scottjehl> my ideology of what should be expected of a public website is clouding my thinking here ;)
[15:38:01] <scottjehl> anyway, the change you're talking about sounds interesting but also more involved. Do you agree
[15:39:13] <scottjehl> I'm guessing it'd sortof act as a replacement for the call to $.ajax, instead calling some other method, and then same logic could be used to handle the return, whether it came from ajax or not.
[15:47:10] <_nickel> scottjehl: firefox 6 does the same thing
[15:47:17] <_nickel> scottjehl: we're doing something wrong
[15:47:21] <scottjehl> that's good!
[15:47:33] <_nickel> scottjehl: so
[15:47:42] <scottjehl> so I gotta jet, but I'll be around alllll weekend prepping slides...
[15:47:54] <_nickel> my initial solution which appears to be naive was to store the initialFilePath on the state object
[15:47:58] <_nickel> scottjehl: kk
[15:48:01] <_nickel> we'll chat later
[15:48:05] <_nickel> I'll keep working
[15:48:11] <scottjehl> cool. thanks guys!!
[16:57:39] <toddmparker> just catching up. gone for a few hours and i missed a lot
[16:57:44] <toddmparker> you guys are cranking
[18:22:49] <toddmparker> hey all
[18:23:23] <toddmparker> does anyone have an android phone that they could install the latest FF beta and test the transitions branch?
[18:23:51] <toddmparker> I tested this with what I though was the latest beta recently and saw no transitions
[18:24:07] <toddmparker> odd thing is the release notes don't mention support: http://blog.mozilla.com/futurereleases/2011/05/20/firefoxbetaformobile/
[18:24:26] <toddmparker> but this engadget post does: http://mobile.engadget.com/2011/05/25/firefox-5-for-android-adds-css-animation-support-for-do-not-tra/
[18:24:44] <toddmparker> just second guessing myself. i don't have access to an android device ATM
[18:42:55] <_nickel> scottjehl: toddmparker: I've solved our last *known* issue with the pushstate
[18:43:41] <_nickel> the solution sucks though
[18:43:43] <_nickel> so I'm noodling
[18:46:53] <_nickel> toddmparker: I take that back
[18:46:55] <_nickel> my solution rocks
[19:00:44] <_nickel> toddmparker: scottjehl: solution pushed
[19:08:02] <toddmparker> woo hoo _bender!
[19:08:02] <toddmparker> pushed to the branch or master?
[19:19:12] <_nickel> toddmparker: branch
[19:19:22] <_nickel> toddmparker: a merge should be pretty painless
[19:19:45] <_nickel> toddmparker: once scottjehl gets on I can ask him to go over it and if he's happy I can land it tonight
[19:23:20] <toddmparker> coolie-o
[19:23:25] <toddmparker> so excited to announce that!
[19:23:35] <toddmparker> working ona  blog post about transitions now
[19:23:53] <toddmparker> trying to explain why they won't be perfect, even after this change
[19:24:26] <toddmparker> anyway, seems like we're close on all the big ticket items: transitions, pushstate, extensibility hook
[19:28:21] <toddmparker> maybe you can send an email around, scott may not check irc, but will see email
[19:37:14] <_nickel> toddmparker: will do
