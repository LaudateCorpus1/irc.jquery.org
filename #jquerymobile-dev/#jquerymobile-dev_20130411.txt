[00:12:13] <_|Nix|_> uGoMobi: I'm looking at the "next" branch, and I've noticed that you've moved the theme portion of the popup arrow into structure. That stuff really isn't structural though.
[00:12:33] <_|Nix|_> uGoMobi: It's all about widths and heights.
[01:23:23] <jqmobilecommit> [13jquery-mobile] 15mrextreme opened issue #5873: Bad link on landing page  02http://git.io/kXnCFw
[01:46:44] <jqmobilecommit> [13jquery-mobile] 15mrextreme opened issue #5874: Minified CSS is sub-optimal  02http://git.io/6_5KtQ
[02:15:23] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #321: STILL FAILING in 11 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/321/
[02:42:01] <uGoMobi> _|Nix|_: but many things in structure are about width and heights
[02:42:32] <uGoMobi> _|Nix|_: the thing is that if you don't use those widgets (download builder) you don't need that CSS
[02:43:10] <uGoMobi> _|Nix|_: and you can't edit it in the theme roller
[02:44:04] <uGoMobi> _|Nix|_: maybe we have to look for another solution, but because we will be hacking on theme it was easier to move them out for now
[04:16:23] <frequent> uGoMobi: morning 
[04:36:09] <uGoMobi> frequent: good afternoon
[04:36:49] <frequent> did you have a chance to check the input CSS?
[04:37:01] <frequent> in between your "regular version upgrade" ;-)
[04:37:29] <frequent> if it's something worth exploring, I would try my hands on list and select
[04:37:47] <uGoMobi> frequent: yeah I looked at it
[04:38:45] <uGoMobi> I am not sure if we can do it like this in the framework
[04:38:58] <uGoMobi> because of the theme roller
[04:39:26] <frequent> themeroller needs all the elements?
[04:40:11] <uGoMobi> the problem might be combining the icon and gradient in the background image
[04:40:34] <uGoMobi> also, this  is more for PNG icons
[04:40:54] <frequent> I think you could get rid of one background-image, by making it the default background, but still leaves 2
[04:41:14] <uGoMobi> for SVG font icons we have to use the "content" property
[04:41:28] <frequent> so you will offer both PNG/SVG?
[04:41:48] <uGoMobi> depends what we are going to use
[04:41:55] <frequent> ic
[04:42:08] <uGoMobi> for SVG icons we need a fallback to PNG
[04:42:19] <uGoMobi> for font icons that isn't necessary I think
[04:42:45] <frequent> a lot of complexity for a little icon :-)
[04:43:41] <uGoMobi> I think we can simply use :before/:after
[04:43:58] <uGoMobi> and just make an exception for input type is button
[04:44:03] <frequent> ok.
[04:44:05] <uGoMobi> wrap it in a div
[04:44:35] <uGoMobi> we have to make things easier to customize
[04:45:21] <uGoMobi> that's why I am not sure about a complex rule to get the icon in the input 
[04:46:11] <uGoMobi> people will add a custom background for the button in their CSS and then notice the icon is gone
[04:46:15] <frequent> yes. I would probably be pretty gruesome to set all the options on it.
[04:46:24] <frequent> true
[04:46:45] <uGoMobi> we have all kind of users... not everyone understands CSS that well
[04:47:19] <frequent> so keep it simple
[04:47:29] <uGoMobi> as simple as possible
[04:48:09] <uGoMobi> at the other hand... preventing the need to wrap the native element in a div is also part of keeping things simple :/
[04:49:04] <uGoMobi> people set inline styles on elements and expect them to work after enhancement
[04:49:30] <frequent> like style="foo:bla"
[04:49:36] <uGoMobi> yes
[04:50:06] <frequent> well they are probably working - on the input JQM is hiding away
[04:53:50] <frequent> still reducing the number of extra-elems already is a good step forward. I will play around with it some more. Maybe there is another way to iconize, which is easier to handle.
[04:54:09] <frequent> but probably :before/:after should be the way to go
[04:57:14] <uGoMobi> frequent: we are using branch "next" to hack on theming, buttonMarkup, icons, etc
[04:57:34] <uGoMobi> frequent: you can pull that if you like to play with it
[04:57:46] <frequent> cool. will play along.
[04:58:19] <uGoMobi> didn't break buttonMarkup yet so at the moment it still wraps in ui-btn-inner and -text
[04:59:13] <uGoMobi> frequent: on the demo center homepage there is a menu at the bottom with links to a few test pages
[05:00:01] <frequent> let me check
[05:02:44] <frequent> uGoMobi: in the "next" branch that is?
[05:02:51] <uGoMobi> frequent: yes
[05:03:15] <frequent> ok. I clone later.
[05:56:35] <arschmitz> Morning _|Nix|_: uGoMobi:
[06:27:31] <uGoMobi> morning arschmitz 
[06:27:45] <uGoMobi> arschmitz: how was the concert?
[06:28:04] <arschmitz> pretty terrible actually
[06:28:26] <uGoMobi> ohw :(
[06:28:39] <uGoMobi> how come? bob dylan on his return?
[06:28:42] <arschmitz> played for 2 hours but only played 3 songs older then like 1995
[06:28:51] <uGoMobi> aha
[06:29:28] <arschmitz> and those 3 he changed so much you could barely recognize them
[06:29:29] <frequent> last millenium songs :-)
[06:30:07] <arschmitz> ah well i didnt pay for the tcket lol my little brother took me for my birthday
[06:30:20] <uGoMobi> oh cool
[06:30:25] <uGoMobi> when was your bday?
[06:30:35] <arschmitz> tuesday
[06:31:02] <uGoMobi> ohh... happy birthday! (sorry, bit late)
[06:31:15] <arschmitz> Thank you
[06:32:42] <frequent> congrats from me, too
[06:32:49] <arschmitz> thanks frequent
[06:33:06] <arschmitz> one more year before i hit 30 and am over the hill ha ha ha
[06:33:42] <frequent> there is another hill waiting behind the one your talking about...
[06:34:09] <uGoMobi> lol
[06:34:11] <arschmitz> ha ha
[06:34:20] <uGoMobi> and then you buy a Porsche
[06:34:50] <uGoMobi> (or something else that helps you out of your mid-life crisis)
[06:34:56] <uGoMobi> :)
[06:36:29] <_|Nix|_> uGoMobi: OK. That's cool. I was just thinking that the basic size should be themeable.
[06:38:11] <_|Nix|_> uGoMobi: I did figure it wouldn't fit into themeroller because it's a whole new degree of freedom.
[06:39:47] <uGoMobi> _|Nix|_: maybe it is something we should put in the theme.css
[06:40:25] <uGoMobi> _|Nix|_: maybe also general rules for padding on buttons, etc. 
[06:40:55] <_|Nix|_> uGoMobi: Yeah. I think specific numbers should be part of the theme.
[06:40:59] <uGoMobi> and add a panel in the themeroller where you can set those things
[06:41:06] <_|Nix|_> Definitely.
[06:42:01] <uGoMobi> then we should also make it possible to build theme CSS in the download builder
[06:42:05] <_|Nix|_> uGoMobi: I was even thinking that I could make the angle of the arrow themeable, because I could use a skewing transform. However, that's waaay too much work right now.
[06:42:29] <uGoMobi> nice, but yeah.. first things first
[06:43:02] <_|Nix|_> uGoMobi: I was actually thinking about modifying the build to generate two JS files: One that needs to be loaded so the page displays correctly, and the other that represents the rest of the library, that needs to be loaded so subsequent pages load correctly.
[06:43:21] <_|Nix|_> uGoMobi: Then, if we do the same thing for CSS, the front page could be made really light.
[06:43:25] <uGoMobi> _|Nix|_: yeah, I saw that the other day
[06:43:31] <_|Nix|_> uGoMobi: ... loading everything else asynchronously.
[06:43:44] <uGoMobi> I really like that idea
[06:43:46] <_|Nix|_> uGoMobi: It makes 120ms difference in Tizen - and that's just the JS.
[06:43:55] <_|Nix|_> uGoMobi: And it should be easy to do with requirejs.
[06:44:15] <uGoMobi> but like I said... we would have to see if we can do that for any first page
[06:44:23] <_|Nix|_> I know.
[06:44:44] <_|Nix|_> Tizen is special because the target there is locally deployed apps, not apps loaded off the Web.
[06:44:51] <_|Nix|_> So the start page is fixed.
[06:45:11] <uGoMobi> right, different case
[06:45:39] <_|Nix|_> It's a good start though, because developers can manually create two-three combinations that cover most of their app.
[06:46:42] <uGoMobi> can we add a data- attribute to the html tag that tells the framework what is required for that specific page or something?
[06:46:48] <_|Nix|_> uGoMobi: And you gotta keep in mind that, while it /is/ possible to access an app starting from any page, there is likely a vast majority of times when you access it from a certain page.
[06:46:59] <uGoMobi> true
[06:47:14] <_|Nix|_> uGoMobi: No, because the framework has to be pre-compiled.
[06:47:44] <_|Nix|_> uGoMobi: ... although we could create a server-side solution, but that'd probably be too slow to make a difference.
[06:47:52] <uGoMobi> I see
[06:47:55] <_|Nix|_> I mean, you build the library on the server for each page. But that's insane :)
[06:48:09] <uGoMobi> yeah, that won't work
[06:48:27] <frequent> _|Nix|_: but doesn't requireJS cache everything pulled in?
[06:48:52] <frequent> so first time I run into a widget, requireJS loads it, caches it and it will be available on subsequent requests?
[06:49:07] <frequent> at least that's how I'm handling my non-JQM javascript stuff
[06:49:14] <frequent> and text-templates
[06:49:55] <_|Nix|_> frequent: I think over HTTP you wanna minimize the number of requests, so you'll want to precompile the lib with requirejs via the build step.
[06:50:07] <frequent> yeah, true
[06:51:03] <_|Nix|_> frequent: In a local app though, it may make sense to use requirejs in the app itself. However, accessing flash repeatedly to grab lots of small files may also incur a penalty in the end,.
[06:52:25] <frequent> _|Nix|_: i have been playing around with binary data and range requests a bit... so this might be a totally stupid idea, but
[06:53:01] <frequent> same as when skipping on a movie file on youtube, I'm trying to see whether I can pull binary ranges from a regular file
[06:53:34] <frequent> so when my page needs range byte 0-123, 250-590, etc. I can pull the parts I want in a single request
[06:54:00] <frequent> so in theory, I could request the widgets I want per page
[06:54:23] <frequent> "in theory" as in = far from working, but I like the idea
[06:54:35] <arschmitz> right now i think our biggest gain to be had is in minimizing dom manip on startup
[06:54:53] <arschmitz> for widgets
[06:55:01] <arschmitz> and btnmarkup of course
[06:56:37] <frequent> arschmitz: yup
[06:56:37] <_|Nix|_> arschmitz: Amen!
[06:57:46] <_|Nix|_> arschmitz: Nevertheless, I'll look into this because, while jQM may have bigger fish to fry, it might benefit Tizen since Tizen has a lot more ui-factory-based widgets than jQM, and the bigger the  library, the more it benefits from such splitting.
[06:58:26] <_|Nix|_> arschmitz: ... and I might as well do it in jQM, because it already has all the pieces in place.
[06:58:32] <arschmitz> yeah i think for native aps vs sites it makes more sense
[06:58:53] <arschmitz> but honestly for websites it makes little sense i think
[06:59:10] <didiergm> Sorry to chime in out of the blue, just wanted to say thank you for your continuous hard work & efforts and the 1.3.1 release. I won't interrupt again :)
[06:59:23] <_|Nix|_> arschmitz: Well, the goal in tizen is to provide an experience indistinguishable from native, so any little bit helps.
[06:59:41] <arschmitz> not a problem didiergm thank you we all appreciate it
[06:59:45] <_|Nix|_> didiergm: Good to know it's appreciated :)
[07:00:14] <arschmitz> _|Nix|_: yeah i was basicly considdering tizen ~= native
[07:00:47] <arschmitz> _|Nix|_ seems like ti might be a good download builder option for people building apps 
[07:00:53] <_|Nix|_> arschmitz: I dunno how much jQM is getting bundled like this though. I know Chrome has a packaging system for apps, and phonegap apps might also benefit.
[07:01:23] <arschmitz> _|Nix|_ yeah native probably was not right word i meant any like app store app type deal
[07:01:26] <_|Nix|_> arschmitz: "seems like ti might be ... " ... "ti"?
[07:01:34] <_|Nix|_> arschmitz: Oh, IO got it. "it"
[07:01:35] <arschmitz> it soory
[07:01:47] <arschmitz> yeah got a new keyboard yesterday still getting used to it
[07:01:58] <_|Nix|_> aaaah ... NP.
[07:02:33] <_|Nix|_> arschmitz: Consider - I'm typing on a Finnish KB with US layout superimposed on it :) If I can get used to this, you should have no problems :)
[07:03:03] <arschmitz> yeah lol
[07:03:13] <_|Nix|_> arschmitz: Letters like å are first class citizens :)
[07:03:14] <arschmitz> this is just one of the tiny little apple bluetooth ones
[07:03:40] <_|Nix|_> Oh ... yeah ... BT KBs ... ergonomy incorporate :)
[07:04:18] <arschmitz> im in the process of setting up to be able to use my MBPr as my desktop
[07:04:39] <arschmitz> but will still need the pc some so i decided to go with one of these because i can switch back and forth seamlessly
[07:05:10] <_|Nix|_> arschmitz: 21st century KVM switch :)
[07:05:19] <arschmitz> yeah
[07:06:33] <arschmitz> like working on the mac so much better spend most of my time in terminal 
[07:06:42] <arschmitz> and i feel much more at home in the terminal
[07:06:55] <_|Nix|_> arschmitz: You should look into Linux ... :)
[07:07:04] <arschmitz> i run a bunch of linux servers
[07:07:33] <arschmitz> and underthe hood OSX is pretty much linux
[07:08:00] <arschmitz> have not run linux with a gui in years though
[07:09:02] <jqmobilecommit> [13jquery-mobile] 15renatosousafilho opened issue #5875: There's how to slide a panel like a sidebar nabigation for the facebook's native app?  02http://git.io/zC_vJQ
[07:09:32] <_|Nix|_> arschmitz: Waaay under the hood, and unfortunately, AFAICT mutilated beyond recognition ... and BSD ...
[07:10:08] <_|Nix|_> arschmitz: OSX is what you get when you release BSD under a BSD license ... *sigh*
[07:10:36] <arschmitz> yeah
[07:10:54] <arschmitz> i use centOS mostly
[07:11:05] <_|Nix|_> I for one cannot tolerate any UI other than GNOME 2.
[07:11:23] <arschmitz> i have 5 centOS servers
[07:11:30] <arschmitz> and no gui on any of them lol
[07:11:30] <_|Nix|_> That's cool ... nice and stable.
[07:12:11] <arschmitz> 3 are production web servers so stability is a must
[07:12:17] <_|Nix|_> arschmitz: I have a server running on a Nokia N810 with an externally attached USB HDD and Debian in a Chroot inside Maemo 4 :)
[07:12:36] <_|Nix|_> arschmitz: Not quite production-ready :)
[07:12:44] <arschmitz> lol
[07:12:57] <_|Nix|_> arschmitz: I still don't have enough money to justify a UPS :)
[07:13:08] <arschmitz> yeah 
[07:13:26] <arschmitz> mine are all in data centers so i dont have to worry
[07:13:54] <_|Nix|_> arschmitz: I dread to see the day the HDD crashes ... I keep telling myself I'll get one of those super-duper Intel SDDs with my employee discount, but I can't justisfy that either :)
[07:14:27] <arschmitz> yeah solid state stuff is still a bit over the top on price
[07:14:42] <_|Nix|_> arschmitz: Meanwhile I just gotta keep sacrificing goats to the Gods of Western Digital.
[07:15:12] <arschmitz> yeah iv always had pretty good luck with the western digital black stuff
[07:16:01] <arschmitz> i think iv only bought one non western didgital HDD since i was 10 and the damn thing died on me so never again lol
[07:16:05] <_|Nix|_> arschmitz: The funniest bit: The whole setup is sitting underneath my daughter's trampoline :) Not where she jumps on it, so it wouldn't hurt her if the trampoline were to break, but it might get hit in the process :)
[07:16:18] <arschmitz> ha ha
[07:18:32] <_|Nix|_> arschmitz: Keep that in mind next time you visit http://babulina.go-nix.ca/ ... don't visit too many links in too quick a succession or you might set my house on fire :)
[07:18:45] <arschmitz> lol
[07:19:09] <arschmitz> well feel free to do as much as you want on uglymongrel.com it can take it lol
[07:19:40] <arschmitz> though i had to kill jenkins on there the other day it went mad and consumed all server resources 
[07:20:50] <arschmitz> jenkins is a major resource hog in my experience
[07:22:04] <_|Nix|_> arschmitz: I've never tried running it ... I don't think I have enough juice for even MySQL ...
[07:22:25] <arschmitz> so _|Nix|_: i think we are both pretty happy with the options concept now right?
[07:22:56] <arschmitz> use setoptions for all of it basicly call from _create and refresh as needed
[07:22:58] <_|Nix|_> arschmitz: yep. Looks good.
[07:23:04] <arschmitz> ok so next thing
[07:23:20] <arschmitz> i think we should move initSelector to the widget prototype
[07:23:20] <gseguin> mornin'
[07:23:30] <arschmitz> out of options
[07:23:46] <arschmitz> it makes not sense to be part of options
[07:23:47] <_|Nix|_> arschmitz: Yeah. Create should do exactly 4 things: Instantiate, arrange, and insert the divs, extend the instance with instance variables, call _setOptions() and attach event handlers.
[07:24:14] <_|Nix|_> arschmitz: Amen. Along with a bunch of other things that don't really need to be widget options.
[07:24:21] <_|Nix|_> arschmitz: I have that document somewhere ...
[07:24:28] <arschmitz> initSelector makes not sense anywhere else
[07:24:38] <arschmitz> changng it on the fly would do nothing
[07:24:52] <arschmitz> and it it cant be different for different instances
[07:25:03] <arschmitz> and is currently only accessed from the prototype anyway
[07:25:23] <_|Nix|_> arschmitz: Exactly. The only place where changing it has an effect is in the prototype. But the only purpose of the prototype is to serve as a template for instances, not as a configuration information storage location.
[07:25:24] <arschmitz> so doing .options is both misleading and ads exrtra bytes lol
[07:25:53] <_|Nix|_> arschmitz: I was thinking $.ns.widgetname.defaults.
[07:26:11] <arschmitz> even defualts makes no sense to me for initselector
[07:26:22] <arschmitz> defualts implies it can still be changes on a per widget basis
[07:26:25] <_|Nix|_> arschmitz: True.
[07:26:31] <arschmitz> defaults makes sense for some other stuff though
[07:26:56] <arschmitz> defualts should be things that can change per widget but only be set on initalization
[07:26:57] <_|Nix|_> arschmitz: You're right. We can have two additional properties: initSelector and defaults.
[07:27:11] <arschmitz> thats exactly what i was thinking
[07:27:22] <_|Nix|_> arschmitz: If they can change per widget then that's an options and it's in the prototype already.
[07:27:30] <_|Nix|_> s/options/option/
[07:27:53] <arschmitz> if it can only be set on mobile init is hsould be directly on the prototype
[07:28:08] <arschmitz> if it can be set durring init only it should be defualts
[07:28:16] <arschmitz> if it can change any time thats an option
[07:28:38] <_|Nix|_> I don't understand the second one.
[07:28:52] <arschmitz> example
[07:29:09] <arschmitz> if we dont want to support chaning table mode via dynamic options
[07:29:20] <arschmitz> make it part of defaults
[07:29:32] <arschmitz> so it can be set when the widget is initalized
[07:29:34] <_|Nix|_> arschmitz: Good idea.
[07:29:43] <arschmitz> but after that it cant be changed
[07:30:09] <_|Nix|_> arschmitz: ^H^H^H^H^H^H^H^H^H^HAwesome idea!
[07:30:55] <_|Nix|_> arschmitz: In the absence of an option, the value of the default is used unless there's a data-* option on the div itself.
[07:31:13] <arschmitz> im thinking we modify our data-attribute option handeling so things thata are data-defualts-... go to defualts everything else goes to options
[07:31:22] <_|Nix|_> arschmitz: OTOH, this presents a problem: AFAIK the widget factory renders data-* as options during _create.
[07:31:40] <arschmitz> _|Nix|_ thats part of mobile.widget
[07:31:46] <arschmitz> so we can change that
[07:32:07] <arschmitz> the actual widget factory does not handle data- options at all
[07:32:14] <_|Nix|_> arschmitz: I see that.
[07:32:25] <_|Nix|_> Oh, man!
[07:32:41] <_|Nix|_> Optimization idea! s/jqmData/getAttribute/g
[07:32:51] <arschmitz> yeah
[07:32:55] <_|Nix|_> Holy cow!
[07:33:06] <_|Nix|_> That's huge! Every widget instantiation!
[07:33:15] <arschmitz> yeah i noticed that the other day 
[07:33:18] <_|Nix|_> How did Changsuk miss that?!
[07:33:23] <arschmitz> not sure lol
[07:33:32] <arschmitz> but its one we should change
[07:33:47] <arschmitz> i was just holding off to see if and how we wanted to handle the defualts 
[07:33:52] * _|Nix|_ jumps on the opportunity to run the perf tests.
[07:34:21] <arschmitz> _|Nix|_ so if we create a data-defualts name space and copy these to the defualts object and everything else to options object 
[07:34:28] <_|Nix|_> arschmitz: I'm OK with keeping it as is. It's OK if options and defaults are merged during _create.
[07:34:49] <_|Nix|_> arschmitz: In a way, defaults are read-only options.
[07:34:51] <arschmitz> either way i just thought it would give us a nice clear division
[07:35:04] <arschmitz> and make it clear to devs what we are doing
[07:35:22] <arschmitz> thought merging could be confusing to devs
[07:35:29] <_|Nix|_> arschmitz: That's gonna add a lot of "-defaults" to a lot of Web pages.
[07:35:49] <_|Nix|_> arschmitz: We can clarify in the docs which options are runtime-changeable, and which are defaults.
[07:35:52] <arschmitz> you think so i dont think we have many things that would land in defaults?
[07:36:04] <_|Nix|_> arschmitz: GObject options are like that too. You need to read the docs for each option to know.
[07:36:31] <_|Nix|_> arschmitz: Yeah, I think it's fine, /especially/ because they are so few.
[07:36:56] <arschmitz> we can discuss in meeting today it has no real performance impact its just about logical division of options
[07:37:18] <_|Nix|_> OK. That's a good plan.
[07:37:32] <arschmitz> something else that we could look at is
[07:37:44] <arschmitz> using a flag to say wether to read data options at all
[07:38:07] <arschmitz> would reduce initalizeation time
[07:38:30] <arschmitz> like if data-config is set read in all data- options
[07:38:33] <_|Nix|_> arschmitz: You mean it would short-circuit _getCreateOptions?
[07:38:37] <arschmitz> if not just use defaults
[07:38:41] <arschmitz> yup
[07:38:47] <toddmparker> morning
[07:38:55] <toddmparker> uGoMobi: the next branch is up?
[07:39:26] <uGoMobi> toddmparker: yes
[07:39:28] <_|Nix|_> arschmitz: I dunno ... I would imagine that would be used very rarely.
[07:39:42] <_|Nix|_> arschmitz: ... unless you're talking per-widget-class.
[07:39:51] <arschmitz> yes per widget
[07:40:05] <_|Nix|_> arschmitz: So, if for a given widget class you never modify the defaults, then for that class the function would short-circuit.
[07:40:25] <_|Nix|_> arschmitz: I'd make implementing that dependent on the performance improvement it gives us.
[07:40:39] <_|Nix|_> arschmitz: ... especially after moving _getCreateOptions over to getAttribute.
[07:40:53] <arschmitz> basicly just in _getCreateOptions add if(this.getAttribute("data-config") ... and wrap it around the whole thing
[07:41:42] <_|Nix|_> arschmitz: I see, so if you plan on modifying the defaults for any widget, you must also tack on a data-config attribute or else your modifications will be ignored?
[07:41:50] <arschmitz> yes
[07:42:03] <arschmitz> it avoides the whole each loop checking attributes
[07:42:14] <_|Nix|_> arschmitz: I was thinking more along the lines of setting $.ns.widgetname.defaults.config = true during mobileinit.
[07:42:30] <arschmitz> yeah i think that would be less usefull
[07:42:33] <_|Nix|_> arschmitz: That way you don't needlessly pollute the DOM.
[07:43:00] <arschmitz> because theres a good chance you could use the same widget as jusr defualts and then again modified
[07:43:05] <_|Nix|_> arschmitz: I dunno ... I can't help but think that a lot of the widgets get attributes set.
[07:43:27] <arschmitz> ok so lets do it opptisit
[07:43:35] <arschmitz> data-ignore-config
[07:43:48] <arschmitz> if its set dont check the attributes
[07:44:01] <_|Nix|_> arschmitz: What's the savings for a single widget?
[07:44:12] <arschmitz> i have not run tests
[07:44:19] <arschmitz> something i saw being done elsewhere
[07:44:34] <arschmitz> also will depend on the number of options the widget has to check
[07:44:38] <_|Nix|_> arschmitz: *sigh* ... I guess the numbers need to do the talking here.
[07:44:50] <arschmitz> more options the widget has the more savings
[07:45:09] <arschmitz> this is an easy one to perf can fake the whole thing
[07:45:11] <_|Nix|_> arschmitz: So we'll have a lot of savings by just cleaning up the options.
[07:45:47] <arschmitz> yes less options means less interations of that each loop and less checking the attributes in the dom
[07:46:42] <_|Nix|_> That's it ... I'm so performance-testing popup with jqmData vs. getAttribute ...
[07:47:20] <arschmitz> im going to set up some tests for skippng all together
[07:47:29] <_|Nix|_> Cool!
[07:48:36] <arschmitz> i know its a savings obviously just need to quantify it
[07:49:50] <jqmobilecommit> [13jquery-mobile] 15renatosousafilho opened issue #5876: Slide the main content to close a panel  02http://git.io/a5tXYw
[07:53:10] <jqmobilecommit> [13jquery-mobile] 15evilripper opened issue #5877: loadPage Cannot read property 'prefetch' of undefined  02http://git.io/SYSTlg
[07:58:19] <_|Nix|_> arschmitz: Found that doc: https://docs.google.com/document/d/1n7ozvhQTLhBj6sPR-LYxuev3p8kcbHjlAM8EBMlQ8GE/edit
[07:58:28] <arschmitz> ah yes remember that one
[07:59:13] <_|Nix|_> arschmitz: If we fill that one out we can then grab our shovels and start partitioning.
[07:59:17] <toddmparker> uGoMobi: great. client stuff has managed to take over our hack times
[07:59:31] <toddmparker> i'm on a call for 2 hours
[07:59:41] <toddmparker> then we can start looking at this and have our meeting
[08:00:51] <_|Nix|_> toddmparker: Our meeting is in three hours, right?
[08:03:09] <gseguin> _|Nix|_: that's right
[08:03:37] <_|Nix|_> OK. Confused about the time zones.
[08:04:34] <_|Nix|_> gseguin: Thanks!
[08:04:51] <arschmitz> _|Nix|_: can you look at this feel lke im missing something and if not DAMN!
[08:04:53] <arschmitz> http://jsperf.com/data-ignore
[08:07:03] <_|Nix|_> arschmitz: Wow!
[08:07:24] <arschmitz> yeah will i mean chekcing attributs in a loop
[08:07:33] <arschmitz> not exactly the most effecient opperation 
[08:08:15] <arschmitz> thats why i was thinking if we add this flag to be able to ignore them if you just want defualts it would improve init a lot
[08:08:17] <_|Nix|_> arschmitz: No, but adding data-ignore to every div you want ignored is not efficient either ...
[08:08:48] <arschmitz> what other option is there
[08:08:56] <_|Nix|_> arschmitz: I'm thinking hard :)
[08:08:59] <arschmitz> it needs to be per widget
[08:09:06] <arschmitz> per widget instance i mean
[08:09:22] <_|Nix|_> arschmitz: I guess you could plaster your front page with these attributes to make it as fast as possible.
[08:09:40] <arschmitz> and i mean its not required
[08:09:54] <_|Nix|_> arschmitz: Not bad ... not too bad at all ...
[08:10:13] <arschmitz> yeah 99% improvement
[08:10:15] <arschmitz> lol
[08:10:18] <_|Nix|_> arschmitz: After all, your front page should not have a ton of widgets ...
[08:10:32] <arschmitz> and its not just front page
[08:10:49] <arschmitz> any widget using 100% defualt options will benefit
[08:10:52] <_|Nix|_> arschmitz: I know, but that's where your motivation is greatest.
[08:10:57] <arschmitz> yea
[08:11:10] <arschmitz> i took popups option set
[08:11:14] <arschmitz> it has a lot of options
[08:11:23] <_|Nix|_> arschmitz: A lot of them unnecessary, too.
[08:11:28] <arschmitz> yeah
[08:11:53] <arschmitz> this just seems like such an easy win to me
[08:11:59] <arschmitz> add one if statement and done
[08:12:11] <frequent> arschmitz: can it be done the other way around?
[08:12:12] <_|Nix|_> yeah, for sure.
[08:12:24] <_|Nix|_> frequent: No, because that would break API.
[08:12:31] <frequent> pity
[08:12:40] <arschmitz> also i think most of the time sadly you will be setting at least one option
[08:12:45] <_|Nix|_> frequent: All of a sudden we're ignoring all data-* options unless you go back and change all your pages.
[08:12:50] <_|Nix|_> arschmitz: Yeah.
[08:13:00] <frequent> :-D
[08:13:13] <_|Nix|_> arschmitz: We could add a global config flag to ignore options by default.
[08:13:34] <arschmitz> yes but right now thats the only way to set options at all
[08:13:45] <arschmitz> since everything autoinits
[08:14:11] <arschmitz> so you would have to have one VERY vanilla page to use that flag
[08:14:18] <_|Nix|_> arschmitz: Then if ( $.mobile.processWidgetOptions && !this.element.getAttribute( "data-ignore" ) ) { /* read options from DOM */ }
[08:14:34] <arschmitz> _|Nix|_: yeah i mean easy enough to add
[08:14:43] <arschmitz> just not sure if i could see a real use case
[08:15:04] <_|Nix|_> arschmitz: I think people are always looking at ways to save.
[08:15:10] <arschmitz> yeah
[08:15:21] <arschmitz> its 1 extra line to add it so i have no issue at all lol
[08:15:22] <_|Nix|_> arschmitz: Although you're right. I mean, how much could they possibly save like that.
[08:15:55] <arschmitz> ok so i think we should add this for sure though
[08:16:07] <arschmitz> the perf speaks for it self 
[08:16:19] <_|Nix|_> arschmitz: Yeah.
[08:16:34] <arschmitz> the tizen guys should like this too
[08:16:35] <_|Nix|_> arschmitz: I'd add the global option too.
[08:16:39] <arschmitz> yeah
[08:16:40] <_|Nix|_> arschmitz: I think so.
[08:16:48] <arschmitz> i will its only 1 line
[08:17:13] <arschmitz> if you can manage to use all defualt options on your front page it will make a pretty good difference
[08:17:15] <_|Nix|_> arschmitz: Well, there're a few more lines in core for the global option, and then we need to document the global option.
[08:17:29] <arschmitz> 1 line in core
[08:17:35] <arschmitz> thats the line i was talking about 
[08:17:43] <arschmitz> does not add any lines to mobile.widget
[08:17:49] <arschmitz> just extends the one if line
[08:18:17] <_|Nix|_> arschmitz: Right, but the if-line is not in yet, either, or is it?
[08:18:28] <_|Nix|_> arschmitz: Anyway, Nitpicking here.
[08:18:35] <arschmitz> i meant adding the global config only adds one line :)
[08:18:36] <_|Nix|_> arschmitz: Good idea. Yes, please! :)
[08:19:21] <arschmitz> between this and switching to getAttribute option setting can be smoking fast :)
[08:19:26] <_|Nix|_> There's a little snag with using getAttribute though - we need to move getAttrFixed out of buttonMarkup.
[08:19:37] <arschmitz> yeah
[08:19:56] <arschmitz> im ok with that
[08:20:12] <arschmitz> i think we should avoide jqmdata internally as much as possible
[08:20:28] <arschmitz> kinda hits two performance points on the new checklist
[08:20:31] <_|Nix|_> arschmitz: I can only imagine there was a time in the distant past when it was faster ...
[08:20:52] <_|Nix|_> Yeah, for sure!
[08:21:02] <arschmitz> avoide convience methods
[08:21:12] <arschmitz> and prefer native methods when possible
[08:21:27] <_|Nix|_> "avoide", eh? Speaking of the distant past :)
[08:21:34] <arschmitz> ha ha
[08:22:14] <arschmitz> so if you want to move getAttrFixed ill make the getCreateOptions changes after
[08:22:39] <arschmitz> im excited about this change too major but easy wins for performance
[08:23:31] <arschmitz> _|Nix|_: another area we should keep in mind is for performance is being smart about our selectors we use
[08:25:15] <arschmitz> i want to keep evloving the performance section of the google doc as we move forward 
[08:26:08] <_|Nix|_> +1
[08:26:18] <arschmitz> remeber you can edit it too
[08:26:23] <_|Nix|_> I'm doing the test for getAttrFixed vs. jqmData based on yours.
[08:26:32] <arschmitz> cool
[08:32:41] <arschmitz> i want to make this library smoking fast lol i actually use JQM for a lot of pages and page initalization speed really is a big issue
[08:33:46] <_|Nix|_> arschmitz: http://jsperf.com/data-ignore/2
[08:33:49] <_|Nix|_> So far, so good.
[08:35:00] <_|Nix|_> Wow! This is like getting rid of a thorn in your side.
[08:35:10] <arschmitz> yeah
[08:35:27] <arschmitz> this is looking really good
[08:35:48] <arschmitz> and its pure win we are not adding any real complexity or lossing any functionality
[08:36:29] <arschmitz> damn look at my results i just ran
[08:36:41] <arschmitz> chrome 27 = HUGE WIN
[08:37:31] <_|Nix|_> *clunk* ... the sound of my jaw hitting my kitchen tiles.
[08:38:07] <arschmitz> ok so apparently _getCreateOptions was a perfromance black hole 
[08:38:41] <arschmitz> as if we never noticed or thought of any of this before
[08:39:47] <arschmitz> so _|Nix|_ i think we have some stuff to talk about for the meeting today lol
[08:41:08] <arschmitz> short and sweet version ....
[08:41:10] <arschmitz> OPTIONS!
[08:42:01] <toddmparker> interesting stuff guys
[08:42:08] <_|Nix|_> Yeah, new and improved. Now with actual performance!
[08:42:42] <_|Nix|_> We didn't have any other option but to fix the option getter.
[08:42:57] <toddmparker> so we might have a config option to globally not use data-config
[08:43:09] <toddmparker> and we should try and speed this up if used
[08:43:11] <arschmitz> toddmparker i dont think there should be any might about it
[08:43:12] <_|Nix|_> toddmparker: Yeah, we need an option to ignore options.
[08:43:19] <_|Nix|_> toddmparker: Too many options.
[08:43:32] <toddmparker> sure
[08:43:37] <arschmitz> checking options against data-attributes is expensive
[08:43:56] <arschmitz> ignoreing them when checking is not needed yields a 99% improvment
[08:44:28] <toddmparker> wondering if there is a way to make that process more efficient too
[08:44:30] <_|Nix|_> ... and doing so per-widget gives the highest possible granularity.
[08:44:43] <_|Nix|_> toddmparker: What process?
[08:44:48] <arschmitz> and switching to get attribute instead of jqm data yields 70 % improvment
[08:44:58] <_|Nix|_> Yep.
[08:45:06] <_|Nix|_> Huge on top of huge.
[08:45:20] <toddmparker> cool
[08:45:45] <arschmitz> _|Nix|_ and my test was using getAttribute already so really really huge
[08:46:29] <arschmitz> i feel like we would break jsperf if we tested ignore with jqm data lol couldnt handle the speed difference lol
[08:46:42] <_|Nix|_> :)
[08:46:56] <_|Nix|_> It would run into rounding erros.
[08:47:13] <arschmitz> chrome IS a rounding error lol
[08:47:31] <_|Nix|_> Error message: "What do I look like to you ? A bignum library?! GTFO!"
[08:47:59] <arschmitz> ha ha right
[08:48:55] <toddmparker> can we not use jqm data?
[08:49:04] <toddmparker> need to handle namespacing
[08:49:35] <_|Nix|_> toddmparker: "data-" + $.mobile.ns
[08:49:37] <arschmitz> toddmparker: jqmdata is very inneffecient we can handle namespace still using getAttribute
[08:49:45] <toddmparker> ok, cool
[08:49:59] <arschmitz> we should not use jqmData anywhere in the library really
[08:50:09] <arschmitz> it should be a convience method for devs
[08:50:09] <toddmparker> so why do we have it?
[08:50:25] <_|Nix|_> toddmparker: Because we still need to sometimes attach arbitrary data to things.
[08:50:44] <_|Nix|_> toddmparker: We can't store such data in the DOM, so we use $.data wrapped as .jqmData ...
[08:50:46] <toddmparker> ok, so we should reduce use of that as much as possible
[08:50:55] <arschmitz> yup
[08:51:07] <arschmitz> also its a convience method for people using the library
[08:51:12] <_|Nix|_> toddmparker: The point is, whenever you're about to write .jqmData( you should /really/ think about what you're doing.
[08:51:15] <arschmitz> think of it like $.get
[08:51:32] <toddmparker> gotcha.
[08:51:34] <_|Nix|_> toddmparker: Like, doing it in _create() ... that's a paddlin' ... doing it in refresh() ... that's a paddlin' ... etc.
[08:51:52] <arschmitz> lol
[08:52:07] <_|Nix|_> toddmparker: Doing it in response to a click ... that's ... well, arguable.
[08:52:08] <toddmparker> since most people now are still going to be using data- config in some places, are there ways of improving perf on that?
[08:52:16] <_|Nix|_> toddmparker: Doing it on mousemove ... that's a paddlin' ...
[08:52:22] <toddmparker> heh
[08:53:15] <_|Nix|_> toddmparker: Use native js's getAttribute, or the soon-to-be-committed $.mobile.getAttribute to retrieve stuff from DOM attrs.
[08:53:43] <_|Nix|_> toddmparker: That works for data-attrs, but not necessarily for others, like value, and especially not class.
[08:53:51] <arschmitz> like any "convience method" there is an inherant performance hit from using it
[08:54:13] <arschmitz> yeah class and getAttribute will get you worse then a paddlin
[08:54:24] <arschmitz> it will get you a broken page
[08:54:25] <_|Nix|_> arschmitz: Yeah, but this is especially big, since it sets up a ton of caching and arbitrary data storage and stuff all for one teentsy access.
[08:55:19] <arschmitz> _|Nix|_ yeah absolutly i was just saying people should understand ( and perhaps we should document) that it is a convience method and there for has in inherant performance impact
[08:55:54] <arschmitz> this is just an espically bad one compared to some others
[08:55:57] <frequent> "inherant" sounds so diminishible, when it really isn't...
[08:56:10] <arschmitz> which is why maybe we should document it
[08:56:19] <frequent> +1
[08:58:25] <_|Nix|_> arschmitz: Running unit+integration tests on this puppy. The getAttribute portion I mean. The ignore portion is yours.
[08:58:42] <_|Nix|_> arschmitz: Pushing pending successful completion.
[08:58:57] <arschmitz> sounds good ill take care of my part once your done
[09:16:15] <_|Nix|_> arschmitz: OK ... test all green ... *shrug* ...
[09:16:18] <_|Nix|_> tests
[09:16:32] <arschmitz> nice
[09:16:44] <arschmitz> cant imagine these changes would break anything
[09:16:54] <arschmitz> though should write a test for data-ignore
[09:17:32] <_|Nix|_> arschmitz: ... unless I neglected somthing in getAttrFixed.
[09:17:38] <arschmitz> yeah
[09:17:47] <arschmitz> i wasent saying they shouldnt be run
[09:18:00] <arschmitz> just that if properly implemented they should not break anything
[09:18:02] <_|Nix|_> arschmitz: core has a version of getAttrFixed that's more complete, but it's not public :(
[09:18:21] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 2 new commits to 06master: 02http://git.io/4A0EOw
[09:18:21] <jqmobilecommit> 13jquery-mobile/06master 148113b4a 15Gabriel Schulhof: buttonMarkup: Move getAttrFixed to core.
[09:18:21] <jqmobilecommit> 13jquery-mobile/06master 142e48c7b 15Gabriel Schulhof: Widget: Use new $.mobile.getAttribute function instead of jqmData for a 70% perf improvement....
[09:18:53] <doesallmagic> Yippie, build fixed!
[09:18:53] <doesallmagic> Project jQuery Mobile Git build #5060: FIXED in 43 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Git/5060/
[09:18:54] <doesallmagic> * gabriel.schulhof: Controlgroup: Whitespace fix.
[09:18:55] <doesallmagic> * gabriel.schulhof: buttonMarkup: Move getAttrFixed to core.
[09:18:55] <doesallmagic> * gabriel.schulhof: Widget: Use new $.mobile.getAttribute function instead of jqmData for a 70% perf improvement.
[09:21:25] <_|Nix|_> arschmitz: The floor is yours.
[09:21:49] <arschmitz> nice
[09:22:11] <arschmitz> heaing to lunch in just a min so will be a little bit before i get to it
[09:22:16] <arschmitz> heading
[09:23:04] <_|Nix|_> NP
[09:23:09] <_|Nix|_> Bon apétit!
[09:23:28] <arschmitz> Thanks be back in an hour or so
[09:24:50] <uGoMobi> toddmparker: https://github.com/jquery/jquerymobile.com/issues/17
[09:27:34] <uGoMobi> JasonDScott___: do you use slide-drag for panels in the BB10 jQuery Mobile theme?
[09:28:06] <uGoMobi> JasonDScott ^^
[09:29:27] <gseguin> 10 files to go and https://github.com/jquery/jquery-mobile/issues/5870 is addressed
[09:36:17] <travis-ci> [travis-ci] jquery/jquery-mobile#291 (master - 2e48c7b : Gabriel Schulhof): The build was broken.
[09:36:17] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/916efdaaf364...2e48c7ba7055
[09:36:17] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/6254511
[09:51:10] <toddmparker> uGoMobi: fixed that link. was driving me crazy yesterday. i just re-typed the /" and it fixed it. 
[09:51:24] <uGoMobi> pfff
[09:51:42] <uGoMobi> toddmparker: the href seemed totally fine
[09:51:48] <uGoMobi> weirdness
[09:51:51] <toddmparker> i was
[09:51:54] <toddmparker> it was
[09:52:09] <uGoMobi> wordpress adding stuff to the link or something
[09:53:00] <toddmparker> yep
[09:53:39] <gseguin> toddmparker: is there an agenda for today's meeting?
[09:54:30] <toddmparker> i can create one
[09:57:28] <toddmparker> agenda: https://docs.google.com/document/d/1mv2TYnavN_pehG802dso46T3Ww0t_qb5IDvPDfcxFBU/edit#
[09:57:40] <toddmparker> gseguin, _|Nix|_, arschmitz, uGoMobi, johnbender 
[09:57:47] <toddmparker> agcolom, RWhitbec- 
[09:57:50] <toddmparker> etc.
[10:18:06] <JasonDScott> uGoMobi: No, I would have liked to though. Legal said no. 
[10:18:55] <uGoMobi> JasonDScott: ah ok, thanks
[10:19:54] <uGoMobi> it works pretty nice on the Z10
[10:20:07] <uGoMobi> legal didn't want you to share that code or something?
[10:23:22] <toddmparker> uGoMobi: looking thru "next" and that pre-processor Q
[10:23:37] <toddmparker> be good to have you walk us thru next right after the call
[10:24:13] <uGoMobi> toddmparker: sure
[10:25:35] <toddmparker> great
[10:25:56] <toddmparker> what are the main changes in this branch so far?
[10:26:30] <JasonDScott> uGoMobi do you have a link?
[10:26:36] <uGoMobi> reduced default theme to 2 swatches, set all options “*theme” to “a”, pseudo classes for button states, active and focus state themeable
[10:26:54] <uGoMobi> toddmparker: ^^
[10:27:05] <uGoMobi> JasonDScott: sorry, a link to what?
[10:27:13] <JasonDScott> uGoMobi slide-drag
[10:27:22] <toddmparker> uGoMobi: nice
[10:27:54] <toddmparker> so we're not using JS for button states at all?
[10:29:09] <toddmparker> not too broken, considering. nice
[10:29:16] <toddmparker> no slider track bg
[10:29:28] <uGoMobi> JasonDScott: well there is a feature request for this, but I was referring to the panels in the Z10 UI which are using CSS as well, right?
[10:30:24] <toddmparker> uGoMobi: a generic drag utility would be good
[10:30:38] <toddmparker> we have something we may be able to abstract from our carousel
[10:30:42] <uGoMobi> toddmparker: I didn't touch buttonMarkup that much yet so the button state classes are still added but  we don't use them in the JS anymore
[10:30:52] <toddmparker> ok, cool
[10:31:09] <JasonDScott> uGoMobi: the browser UI is using css, yes. Other apps use native
[10:31:14] <toddmparker> did you drop the inner wrapper we used for the button highlight
[10:31:17] <uGoMobi> in the CSS anymore I mea
[10:31:19] <toddmparker> that is cruft too
[10:31:21] <uGoMobi> mean*
[10:31:59] <uGoMobi> toddmparker: yes ui-btn-inner highlight is gone, so you see a one pixel issue in lists
[10:32:29] <uGoMobi> toddmparker: slider track uses ui-btn-down so that's why it is gone
[10:32:30] <toddmparker> nice
[10:33:45] <uGoMobi> first break everything and then go thru the widgets to fix it
[10:34:59] <uGoMobi> but first we have to discuss how theme inheritance should work and what we do with icons
[10:36:21] <toddmparker> right
[10:36:24] <toddmparker> ok, cool
[10:39:51] <uGoMobi> JasonDScott: toddmparker : I really thought I saw a draggable panel demo somewhere some time ago
[10:40:16] <uGoMobi> thought it was the BB10 JQM theme
[10:40:50] <uGoMobi> curious if that will work smooth
[10:42:48] <JasonDScott> uGoMobi: Unfortunately no it was not the BB10 JQM theme…  it should work smoothly though… Our browser does use a similar effect and it is great there 
[10:44:58] <uGoMobi> JasonDScott: yeah, I noticed the BB10 browser panels work great
[10:49:08] <arschmitz> toddmparker: that agenda doc link isnt working for me
[10:49:45] <toddmparker> it's public
[10:58:08] <_|Nix|_> toddmparker: Doesn't UI have drag?
[10:58:35] <arschmitz> ui does indeed
[10:58:50] <_|Nix|_> Well, another opportunity to line up ...
[10:59:04] <arschmitz> and it works with jqm using either touch punch or the new ui interc\actions branch
[10:59:19] <arschmitz> the interactions branch also has ms pointer event support
[11:00:13] <_|Nix|_> Well, we should just pull it in then.
[11:00:46] <toddmparker> we ready to meet?
[11:01:07] <gseguin> totally
[11:07:57] <gseguin> johnbender: meeting?
[11:08:43] <johnbender> gseguin: note sure how that slipped my mind
[11:18:13] <paul_irish> _|Nix|_ arschmitz: http://paulirish.com/i/4bfcb0.png
[11:19:03] <paul_irish> thats for chrome on android on galaxy nexus
[11:19:11] <paul_irish> there is some layout thrashing, but not too bad.
[11:25:19] <_|Nix|_> paul_irish: I don't quite know how to read that timeline. What does the thrashing look like?
[11:25:37] <paul_irish> it's not visible on here actually
[11:25:37] <paul_irish> but
[11:25:50] <paul_irish> http://kellegous.com/j/2013/01/26/layout-performance/
[11:26:29] <paul_irish> _|Nix|_: do you have an android with chrome beta?
[11:26:59] <jqmobilecommit> [13jquery-mobile] 15renatosousafilho opened issue #5878: drag the page content to slide to close a panel  02http://git.io/uRraKw
[11:27:11] <_|Nix|_> paul_irish: No. I only have a Galaxy SII with 2.3.5 ... I intentionally do not upgrade it.
[11:44:08] <gseguin> _|Nix|_: tough life to be a mobile dev :(
[11:47:40] <_|Nix|_> arschmitz: I think a pair of initSelector/defaults for each constructor is fairly light and consistent.
[11:49:58] <_|Nix|_> Hey, does anyone know how to catch when a window I create is done loading its document? I have newWindow = window.open(); $( newWindow.document ).on( "load", function() { alert( "Blah" ); } ); newWindow.location.href = "path/to/file.html";
[11:57:55] <arschmitz> scott_gonzalez: currently we have an option initSelector
[11:58:13] <arschmitz> on all widgets that is a selector for autoenhancement
[11:58:39] <arschmitz> but we are thinking this makes no sense as an option since it cant be set per widget and chaning it with option would have no effect
[11:59:09] <arschmitz> so we are thinking moving it out of options and idrectly onto the widget makes more sense
[11:59:17] <scott_gonzalez> Right, so generally options shouldn't be init-only, but sometimes it makes sense.
[11:59:38] <arschmitz> this is init only for the whole library not even per instance
[12:00:14] <scott_gonzalez> Ah, yeah, so those definitely shouldn't be in the options.
[12:00:34] <arschmitz> ok that was my thought also
[12:00:47] <scott_gonzalez> Give me a second to look at this, there might be a better way to consolidate this.
[12:00:57] <arschmitz> sure want an example link?
[12:01:46] <scott_gonzalez> hmm...where does this get processed?
[12:01:56] <scott_gonzalez> I'm looking at the button source.
[12:02:00] <arschmitz> https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.widget.js#L43
[12:02:31] <arschmitz> and enhancewithin is accessed via the prototype at the bottom of each widget for the autoinit
[12:03:35] <scott_gonzalez> So, what you can do is have something like $.mobile.autoInit = {};
[12:03:46] <uGoMobi> brb for hangout... need coffee
[12:03:51] <scott_gonzalez> The keys would be widget names, and the values would be selectors.
[12:04:07] <scott_gonzalez> I assume all of the enhanceWithin calls are listening to the same events?
[12:04:14] <arschmitz> yes
[12:04:25] <scott_gonzalez> Yeah, so just have a hash of auto-init selectors.
[12:04:36] <scott_gonzalez> Bind once and loop.
[12:04:55] <scott_gonzalez> Then the button widget can just do: $.mobile.autoInit.button = ...
[12:05:02] <_|Nix|_> Some of this is already happening on the enhancement-order branch ...
[12:05:04] <arschmitz> then we can get rid of the whole autoinit at the bottom of each widget too 
[12:05:10] <scott_gonzalez> yup
[12:05:23] <arschmitz> i like it
[12:05:42] <arschmitz> _|Nix|_ then that avoides copying to each widget instance too
[12:05:48] <_|Nix|_> Yep.
[12:05:58] <toddmparker> sounds good to me
[12:06:42] <arschmitz> sounds like a plan!
[12:06:49] <_|Nix|_> arschmitz: The structure scott_gonzalez described also lends itself well to storing enhancement-time dependencies such as the ones controlgroup has.
[12:07:09] <arschmitz> yup i think this is a good move
[12:07:16] <_|Nix|_> arschmitz: ... and the single enhancer can resolve the dependencies as it loops over the structure.
[12:07:51] <arschmitz> it removes a lot of unnessasarry event bindings too
[12:07:57] <_|Nix|_> arschmitz: Yep.
[12:08:00] <arschmitz> centeralizes the autoinit
[12:08:10] <arschmitz> i like having things like this centralized
[12:08:23] <_|Nix|_> Too bad we don't have a signal that gets fired when a call to $.widget completes.
[12:09:19] <_|Nix|_> Nah ... NM ...
[12:09:27] <scott_gonzalez> Anything else?
[12:09:44] <toddmparker> ideally, we'd have a script that handles the auto init stuff. if you don't want that business, you skip it
[12:10:05] <toddmparker> you guys have any other Q's for scott_gonzalez 
[12:10:05] <arschmitz> toddmparker: totally possible
[12:10:09] <toddmparker> _|Nix|_ and arschmitz 
[12:10:11] <arschmitz> we could make this an extension
[12:10:21] <_|Nix|_> arschmitz: An extension? To what?
[12:10:22] <arschmitz> no i think im good i can catch him later if we come up with anything else
[12:10:31] <arschmitz> the mobile base widget
[12:10:40] <arschmitz> so that it can be excluded in builder
[12:11:23] <toddmparker> interesting
[12:11:26] <_|Nix|_> arschmitz: Not sure how we'd do that, because code inside $.mobile.widget only runs during instantiation, not during widget definition.
[12:11:33] <toddmparker> scott_gonzalez: sounds like we're good
[12:11:54] <arschmitz> nix the binding can live in the same file outside the extenson
[12:12:07] <scott_gonzalez> Ok, just ping me if you need anything else (though I'll be AFK for a while again)
[12:13:03] <_|Nix|_> arschmitz: What does the extension do?
[12:13:05] <toddmparker> ok, thanks!
[12:13:14] <toddmparker> uGoMobi: give me a shout when you're back
[12:13:20] <uGoMobi> toddmparker: I am back
[12:13:31] <toddmparker> oh, hai
[12:13:34] <arschmitz> _|Nix|_ sorry not an extension in the widget sense
[12:13:42] <arschmitz> bad wording
[12:13:48] <_|Nix|_> arschmitz: You mean an AMD module?
[12:14:04] <arschmitz> essentially yes
[12:14:19] <_|Nix|_> arschmitz: Oh yeah - /that/ I'm totally down with.
[12:14:24] <arschmitz> was just meaning an extension of functionality not thinking how confusng that wording was :)
[12:15:50] <toddmparker> theme hangout in a few...
[12:15:57] <arschmitz> ok i think we are digressing from meeting to dev though
[12:15:59] <arschmitz> :)
[12:16:20] <_|Nix|_> arschmitz: I think we should look at lazy-widgets-with-registry  ...
[12:16:27] <_|Nix|_> arschmitz: I did a lot of this work there.
[12:16:33] <arschmitz> sounds good
[12:16:34] <_|Nix|_> arschmitz: AMD module and everythingl
[12:16:53] <_|Nix|_> arschmitz: The lazy widget part is confined to the widget factory. We don't need to use that part.
[12:17:03] <arschmitz> still not 100% sold on lazy load after changsuks analysis but the registry is important
[12:17:08] <arschmitz> sounds good
[12:17:08] <_|Nix|_> arschmitz: The registry though is exactly what scott_gonzalez was talking about.
[12:17:18] <_|Nix|_> arschmitz: Nono. lazy load is dead.
[12:17:25] <_|Nix|_> arschmitz: Widget registry is not.
[12:17:40] <arschmitz> yeah absolutly im down with that
[12:17:58] <_|Nix|_> arschmitz: 30 - 40 ms improvement for a huge increase in complexity.
[12:18:17] <toddmparker> right -1
[12:18:28] <jqmobilecommit> [13jquery-mobile] 15JechoJekov opened issue #5879: Popups are not scentered on screen in landscape mode when the page is scrolled horizontally  02http://git.io/LEKqag
[12:18:42] <arschmitz> yeah thats why i said i was not sold on it :)
[12:19:11] <_|Nix|_> Yep. However, the good news is that I was able to centralize the enhancement into one place and even avoid calling enhanceWithin for those widgets whose initSelector returns empty anyway.,
[12:19:39] <arschmitz> nice yeah lets look at that since it sounds like we can re-purpose most of it
[12:19:51] <_|Nix|_> I'll revisit that branch and re-focus it.
[12:20:12] <_|Nix|_> arschmitz: The key feature there was moving initSelector to the constructor.
[12:20:23] <arschmitz> yup
[12:20:35] <_|Nix|_> arschmitz: But I did it for a different reason, namely to avoid accessing the prototype.
[12:20:41] <arschmitz> right
[12:21:22] <arschmitz> _|Nix|_ ok i need to drop off for a few minutes
[12:21:33] <_|Nix|_> NP.
[12:21:43] <arschmitz> just set up my new dual monitor stand and need to re do some cables :)
[12:21:44] <_|Nix|_> I'll listen in on the hangout.
[12:22:39] <arschmitz> ha wow i had not realized id switched to dev
[12:22:46] <arschmitz> i thought we were still in meeting this whole itme
[12:22:49] <arschmitz> :(
[12:23:17] <arschmitz> teaches me for multitasking putting my stand together
[12:23:41] <arschmitz> anyway brb
[12:29:01] <toddmparker> uGoMobi: looking thru your commits, you got a lot done
[12:29:56] <uGoMobi> yeah, think it's a good start
[12:30:44] <toddmparker> seriously
[12:33:12] <toddmparker> https://plus.google.com/hangouts/_/eba768eaa8ea4533473a1cbfad8ea3a5bd0c6808
[12:33:22] <toddmparker> uGoMobi: we can start if you want
[12:33:32] <uGoMobi> sure
[12:33:34] <toddmparker> scott and matt will lurk for a bit
[12:39:32] <jqmobilecommit> 01[13jquery-mobile01] 15toddparker pushed 1 new commit to 06next: 02http://git.io/xgazXQ
[12:39:32] <jqmobilecommit> 13jquery-mobile/06next 1474eff58 15Todd Parker: Fixed b swatch focus
[12:42:26] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 48 new commits to 06master: 02http://git.io/P0uVFA
[12:42:26] <jqmobilecommit> 13jquery-mobile/06master 143030fa7 15Ghislain Seguin: Quality: Linting
[12:42:26] <jqmobilecommit> 13jquery-mobile/06master 142363568 15Ghislain Seguin: Quality: Linting
[12:42:26] <jqmobilecommit> 13jquery-mobile/06master 14c5717cc 15Ghislain Seguin: Quality: Linting
[12:42:39] <gseguin> ?BOOM
[12:42:40] <bot-t> "Did you are unimpressed? and now?"
[12:43:11] <gseguin> uGoMobi: you probably want to refresh the "next" branch with these changes
[12:45:01] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 06master: 02http://git.io/Hnj-wA
[12:45:01] <jqmobilecommit> 13jquery-mobile/06master 14c39429e 15Ghislain Seguin: Quality: Added jshint as the first step of the test target
[12:49:51] <jqmobilecommit> [13jquery-mobile] 15scyrizales opened issue #5880: Refresh method from tables doesn´t update recently added columns  02http://git.io/QUlhBA
[12:59:37] <travis-ci> [travis-ci] jquery/jquery-mobile#292 (master - 75105fa : Ghislain Seguin): The build was fixed.
[12:59:37] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/2e48c7ba7055...75105fa523ad
[12:59:37] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/6260706
[13:09:38] <arschmitz> _|Nix|_ back
[13:14:28] <travis-ci> [travis-ci] jquery/jquery-mobile#293 (master - c39429e : Ghislain Seguin): The build was fixed.
[13:14:28] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/75105fa523ad...c39429e2842e
[13:14:28] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/6260795
[13:52:11] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 12 new commits to 06enhancement-order: 02http://git.io/Sq-SbA
[13:52:11] <jqmobilecommit> 13jquery-mobile/06enhancement-order 145c52522 15Gabriel Schulhof: Merge branch 'master' into lazy-widgets-with-registry...
[13:52:11] <jqmobilecommit> 13jquery-mobile/06enhancement-order 141f35e75 15Gabriel Schulhof: Revert "Widget factory: Do not assume that existingConstructor is either base or undefined."...
[13:52:11] <jqmobilecommit> 13jquery-mobile/06enhancement-order 14a616f92 15Gabriel Schulhof: Revert "Widget factory: Simplify lazy initialization code."...
[13:56:48] <_|Nix|_> arschmitz: Have a look at enhancement order. I've reverted all of the widget-factory-related stuff and some of the implications. I'll BBIAB ...
[13:58:01] <gseguin> PSA: Don't forget to lint before you push as it will now break the build on master
[13:59:01] <_|Nix|_> arschmitz: Haven't tested the result ... I'll run the unit tests ...
[13:59:08] <arschmitz> _|Nix|_: nice ill check it out
[14:00:00] <arschmitz> _|Nix|_ any good irssi tips short cuts etc you use i have been using it on laptop at home for a while but havent actually used much
[14:00:11] <arschmitz> but since im replacing desktop going 100% irssi now
[14:14:37] <_|Nix|_> arschmitz: Not really. I pretty much use it as is.
[15:09:11] <_|Nix|_> arschmitz: Ping!
[15:13:01] <doesallmagic> Project jQuery Mobile Git build #5063: FAILURE in 1.4 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Git/5063/
[15:13:05] <doesallmagic> Project jQuery Mobile Phantom 1.1-stable build #291: FAILURE in 3.4 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%201.1-stable/291/
[15:13:15] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06enhancement-order: 02http://git.io/p6Zr9w
[15:13:15] <jqmobilecommit> 13jquery-mobile/06enhancement-order 1412c9422 15Gabriel Schulhof: Travis: Re-adding build for branch enhancement-order
[15:29:12] <travis-ci> [travis-ci] jquery/jquery-mobile#294 (enhancement-order - 12c9422 : Gabriel Schulhof): The build passed.
[15:29:12] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/6b739e7e94a9...12c942263b4b
[15:29:12] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/6264995
[16:40:57] <travis-ci> [travis-ci] jquery/jquery-mobile#288 (1.3-stable - 576714f : Ghislain Seguin): The build is still failing.
[16:40:57] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/a152a8f18496...576714f4b865
[16:40:57] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/6231784
[18:02:03] <travis-ci> [travis-ci] jquery/jquery-mobile#288 (1.3-stable - 576714f : Ghislain Seguin): The build is still failing.
[18:02:03] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/a152a8f18496...576714f4b865
[18:02:03] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/6231784
