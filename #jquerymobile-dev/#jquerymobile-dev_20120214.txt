[09:16:50] <toddmparker_> hi
[09:31:58] <Wilto> Hey toddmparker_, question.
[09:31:58] <bot-t> (16 hours 10 mins ago) <coldhead> tell wilto happy valentine's http://upload.offensivex.com/images/tumblrlz71.gif
[09:32:04] <Wilto> oh god what is this gonna be
[09:33:05] <Wilto> …
[09:33:07] <Wilto> MOVING ON
[09:39:27] <jzaefferer> hey Wilto, toddmparker_, kinblas, johnbender, when could we discuss the CSS framework between jQuery UI and jQuery Mobile?
[09:40:34] <johnbender> jzaefferer: that sounds like a long conversation
[09:40:42] <johnbender> I'll defer to toddmparker_ and Wilto
[09:40:49] <johnbender> :D
[09:41:48] <jzaefferer> johnbender: yeah, Todd said a few people should be involved in that, I think you were on that list :-)
[09:42:47] <johnbender> jzaefferer: I'd only be able to pariticpate in the bike shed crap like naming most likely though I hope there's a correspondence I can read
[09:42:54] <johnbender> jzaefferer: I'll make sure to participate :D
[09:56:56] <johnbender> gseguin: question for you when you have a second
[09:57:04] <gseguin> shoot
[09:57:15] <johnbender> gseguin: the docs specific js has to go before jqm
[09:57:30] <johnbender> gseguin: it looks like that's not the case in jquery.mobile.docs.js
[09:57:33] <gseguin> no, after I think
[09:57:48] <johnbender> it binds to mobile init
[09:58:22] <gseguin> OH
[09:58:36] <johnbender> gseguin: so that's not a big deal for the build
[09:58:40] <johnbender> just switch the order
[09:58:53] <johnbender> but I need it to go before js/ in the "reverted" docs
[09:59:00] <johnbender> so the define is an issue
[09:59:13] <johnbender> trying to figure out the least crappy way of dealing with that
[09:59:27] <johnbender> ie, I don't want to include the define stub twice I guess
[09:59:39] <johnbender> if there's nothing obvious I'll just do that and move on with my life
[09:59:59] * gseguin takes a look
[10:01:09] <gseguin> johnbender: we can actually remove the define in jqm-docs.js
[10:01:27] <gseguin> and wherever we want to include it with AMD we can use the depend plugin
[10:01:58] <gseguin> depend!docs/_assets/js/jqm-docs[jquery]
[10:02:06] <johnbender> lol
[10:02:10] <johnbender> what's the trailing syntax
[10:02:12] <johnbender> []
[10:02:30] <gseguin> the dependencies of the non AMD module
[10:02:34] <johnbender> ah
[10:02:35] <johnbender> sweet
[10:02:42] <johnbender> gseguin: so that would go in the jquery.mobile.docs
[10:02:49] <gseguin> exactly
[10:02:49] <johnbender> and in reverse order to how it is now correct?
[10:02:49] <Wilto> toddmparker_: Ping.
[10:03:02] <gseguin> yup
[10:03:05] <johnbender> gseguin: you are gentleman and a scholar, thank you
[10:03:23] <gseguin> you're welcome
[10:03:53] <gseguin> johnbender: let me know if you run into problems
[10:03:56] <toddmparker_> hey Wilto
[10:04:08] <toddmparker_> (i'm on a call so if I drift off...)
[10:04:26] <gseguin> I'm Jiving today but I can help out
[10:04:57] <Wilto> toddmparker_: No worries. Just wanted to iron out some of the details of making form stuff respect the left and right classes in headers/footers.
[10:05:11] <toddmparker_> sure, go for it Wilto
[10:05:34] <toddmparker_> ideally, those classes would behave as slots that you could put anything into
[10:08:26] <Wilto> I’m just a little worried about how many widget-specific styles we’ll need.
[10:09:24] <Wilto> Like, say you wanted to slap a slider in there—it’s gonna need a width that accommodates the label and input somehow, and it will probably need to drop to a second line at smaller breakpoints.
[10:10:14] <Wilto> Same with a controlgroup of buttons or text input.
[10:10:51] <Wilto> Should we limit it to button-y things? buttonMarkup links, form buttons, and selects?
[10:22:56] <johnbender> Wilto: thanks again for answering my questions about the image/js stuff
[10:23:19] <Wilto> Anytime, dude. Don’t hesitate, if there’s anything else I can do.
[10:24:10] <Wilto> Also, feel free to chime in on the demands I’m making on the WHATWG mailing list, if you’re down with that new proposed element.
[10:24:57] <toddmparker_> wilto - i think the widgets can be dumb
[10:25:17] <toddmparker_> the left slot is just a box that is X pixels/% wide
[10:25:42] <toddmparker_> so the widets should fit width wise
[10:25:57] <toddmparker_> with slider, if i hid the label + input, does it fit?
[10:27:19] <Wilto> It could be made to, for sure.
[10:29:52] <Wilto> What if we just used fieldcontains with left/right classes?
[10:30:28] <Wilto> That way we’re not updating a ton of styles; we just position the fieldcontain and give it a max-width of 20% or somesuch.
[10:31:22] <johnbender> toddmparker_: Wilto: I'm about push the revert to js/ if you could test locally quickly to make sure things are sane on your end I would appreciate it
[10:31:35] <Wilto> johnbender: Will do.
[10:32:29] <jqmobilecommit> [jquery-mobile] johnbender pushed 3 new commits to master: http://git.io/nvuegw
[10:32:29] <jqmobilecommit> [jquery-mobile/master] revert to old method of javascript include - John Bender
[10:32:29] <jqmobilecommit> [jquery-mobile/master] fix the js refs in the compiled docs - John Bender
[10:32:29] <jqmobilecommit> [jquery-mobile/master] remove docs define and use the depends plugin for external dep in jquery.mobile.docs.js - John Bender
[10:35:30] <Wilto> Seems solid from here.
[10:35:39] <Wilto> I’ll keep an eye out for any weirdnesses.
[10:35:56] <johnbender> Wilto: cool yah I tested pretty thoroughly, just need to check that test behaves properly
[10:38:31] <toddmparker_> i'd be ok with that mat
[10:38:41] <toddmparker_> the fieldcontain thing
[10:39:28] <toddmparker_> but we do need to support having a button in the old skool way and a form element on the other side
[10:39:40] <Wilto> Sweet. And I’ll make sure the existing ui-btn-left/right stuff applies to form buttons and selects as well.
[10:41:24] <Wilto> Yeah, no reason they wouldn’t work together.
[10:51:42] <johnbender> gseguin: you mentioned that we would be changing the css in your response to scott in the "loading" thread
[10:51:55] <johnbender> gseguin: is there a specific reason that's necessary?
[10:53:15] <gseguin> johnbender: reduce the number of HTTP requests
[10:53:20] <gseguin> one per @import
[10:53:23] * johnbender over it
[10:53:27] * johnbender is over it
[10:53:42] <johnbender> gseguin: I think his main complaint was the loading issues unless I missed something
[10:53:45] <johnbender> I'll ping him about it
[10:53:48] <gseguin> but don't change the css thought
[10:53:57] <gseguin> s/thought/though/
[10:54:12] <johnbender> gseguin: I'm going to leave it unless he wants to have a single request for the css
[10:54:18] <gseguin> ok
[10:58:23] <toddmparker_> wilto - yeah, if I could use a the btn classes for as many elements as i can so it "just works", cool
[10:58:40] <Wilto> Yes indeed.
[10:58:46] <Wilto> It’s just the weird ones that… would be weird.
[10:58:47] <toddmparker_> we can document the fieldcontain stuff as the way to use any widget
[10:58:57] <toddmparker_> (the weird ones)
[11:00:38] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/2jv3cQ
[11:00:38] <jqmobilecommit> [jquery-mobile/master] test unit index doesn't need to be php - John Bender
[11:34:01] <johnbender> toddmparker_: Wilto: gseguin: another heads up
[11:34:14] <gseguin> yes sir?
[11:34:41] <johnbender> I'm merging in serge's perf fixes for checkbox and select, all the tests are passing but the conflicts were pretty nasty :(
[11:34:59] <Wilto> Pref fixes, you say.
[11:35:08] <gseguin> :D
[11:35:08] <Wilto> Got a link to the PR handy?
[11:35:25] <johnbender> Wilto: I can push a branch for you to look at the merge commit if you like
[11:35:31] <johnbender> the pr is a bit out of date
[11:35:38] <gseguin> wrong window sorry
[11:35:47] <Wilto> Oh, no worries—just curious about the nature of the changes.
[11:35:54] <johnbender> Wilto: all perf
[11:36:01] <Wilto> Oh!
[11:36:09] <johnbender> things like $( <span> ) to document.createElement("span")
[11:36:10] <Wilto> Hurr. s/pref/perf
[11:36:21] <johnbender> and setAttribute
[11:36:41] <toddmparker_> fingers cross this doesn't break stuff
[11:36:47] <johnbender> toddmparker_: it should be fine
[11:36:52] <Wilto> What Could Go Wrong?™
[11:36:52] <johnbender> we've been pretty thorough about it
[11:37:00] <Wilto> But yeah, not too worried on this one.
[11:37:00] <johnbender> toddmparker_: and breaking things is the nature of software :D
[11:37:03] <toddmparker_> yeah, this PR has been in the works for a long time
[11:38:06] <johnbender> Wilto: would you still like to take a look?
[11:38:13] <Wilto> Nah, fire away.
[11:38:27] <Wilto> I thought it was _pref_ changes—like, messing with the attr that control stuff.
[11:38:41] <Wilto> I’m full of Dayquil; go ahead and write off anything I’m sayin’ in here.
[11:38:47] <johnbender> done
[11:39:14] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/j_WpBg
[11:39:14] <jqmobilecommit> [jquery-mobile/master] merge conflict resolved for checkbox radio and select tests - John Bender
[11:39:27] <johnbender> toddmparker_: he also had some perf test page additions which I moved over to the jquerymobile.com site
[11:39:38] <Wilto> Well done, sir.
[11:39:41] <johnbender> might have to figure something out for that if we're getting regular contributiosn
[11:41:43] <toddmparker_> yeah? the mobile wp site?
[11:42:16] <johnbender> yah
[11:42:20] <johnbender> well
[11:42:48] <toddmparker_> interesting
[11:42:56] <johnbender> toddmparker_: it lives _next to_ the wp files
[11:43:02] <johnbender> the wp files aren't in source control
[11:43:12] <johnbender> toddmparker_: https://github.com/jquery/jquerymobile.com
[11:43:21] <jqm-jenkins-bot> Project jqm-master build #472: SUCCESS in 27 min: http://10.59.19.240:8080/job/jqm-master/472/
[11:53:51] <toddmparker_> right
[12:20:03] <Wilto> QUESTION TIME.
[12:20:08] <toddmparker_> yes sir
[12:20:50] <toddmparker_> johnbender, kinblas, gseguin...gather 'round
[12:21:06] <Wilto> Story time.
[12:21:08] <gseguin> 'sup?
[12:21:17] <Wilto> So, in making this these .ui-btn-left/right classes apply to all the button-ish elements (submit buttons, selects), I have to grab the class on the original element and move it up to the “enhanced” element that wraps it. Which is no big.
[12:21:50] <Wilto> But, should I set it up where _all_ user-entered classes get moved up to the enhanced element?
[12:22:05] <toddmparker_> this is sort of a larger issue we've all been kicking aroudn forever
[12:22:07] <Wilto> It makes sense, and I know there have been complaints about it.
[12:22:43] <toddmparker_> since we wrap a lot of elements around the original, there isn't any way to put styling on a link, button, select, etc.
[12:22:52] <gseguin> yeah I think the enhanced element should 'inherit' the classes of the original markup
[12:22:52] <Wilto> Short of wrapping that in something.
[12:23:00] <Wilto> Which is a little too “Drupal-style CSS” for me.
[12:23:22] <toddmparker_> so you end up doing ugly things like this: <div class="styleIt"><button>Hi</button></div>
[12:23:29] <Wilto> I’m definitely leaning that way too, gseguin.
[12:23:41] <toddmparker_> right, agreed
[12:23:51] <Wilto> But it’s sort of a big change, for people who upgrade to 1.1. Suddenly classes are flying all over the place.
[12:24:06] <toddmparker_> so it could do <button class="styleIt">Hi<button>
[12:24:17] <toddmparker_> and that class would get moved up the wrapper
[12:24:23] <toddmparker_> right
[12:24:34] <Wilto> Yessir.
[12:24:44] <Wilto> And there’s precious little to the code itself.
[12:25:04] <gseguin> or maybe not move the class but bubble up a prefixed version of them
[12:25:11] <toddmparker_> right, another ide
[12:25:13] <toddmparker_> idea
[12:25:21] <Wilto> Oh, yeah, that makes sense.
[12:25:35] <gseguin> so if user set class foo
[12:26:01] <gseguin> you put ui-custom-foo on the enhancement wrapper
[12:26:15] <toddmparker_> then the wrapper would get a class of "foo-parent" or "foo-enhanced" or whatever
[12:26:28] <toddmparker_> right whatever the naming convention
[12:26:30] <Wilto> Or somesuch, yeah.
[12:26:36] <Wilto> Alright, I dig that.
[12:26:39] <toddmparker_> i sort of feel like that is better
[12:26:49] <Wilto> Yeah. I’m sold.
[12:26:52] <Wilto> Thanks, gseguin.
[12:26:53] <toddmparker_> because moving the original class seems to be overreaching
[12:27:27] <toddmparker_> but if that class is meant to set the width to 25% or whatever, if you don't move it and the class is on the parent and original, that's bad
[12:27:37] <gseguin> no problem Wilto
[12:27:45] <toddmparker_> this will require some 'splaining but it is reasonable
[12:27:54] <toddmparker_> johnbender or kinblas?
[12:28:10] <toddmparker_> we'd want to add this to every widget that wraps the child
[12:28:19] <gseguin> yeah I would like to get these guys' opinion
[12:28:19] <toddmparker_> or do it across the board maybe
[12:28:43] <toddmparker_> so this would be the way to target the enhanced version
[12:29:16] <toddmparker_> ui-[class]-enhanced?
[12:29:34] <toddmparker_> so we don't get into whether it wrapped or not
[12:29:42] <toddmparker_> this could be cool tho
[12:30:05] <toddmparker_> you could set .foo { width:25% } for the non-enhanced experience
[12:30:37] <toddmparker_> then .ui-foo-enhanced { width:50% } or whatever to override rules once enhanced
[12:31:17] <Wilto> “.ui-foo-enh?”
[12:31:27] <toddmparker_> figure adding the ui-namespace plus some other thing lilke "enhanced" will mean this is pretty unique
[12:31:47] <toddmparker_> enh= cryptic?
[12:31:55] <toddmparker_> ideas?
[12:32:04] <Wilto> Yeah, I was thinking that, too. “Enhanced” is cool.
[12:34:19] <gseguin> -brought-to-you-by-the-fine-folks-at-jqm
[12:34:26] <Wilto> ?shipit
[12:34:27] <bot-t> http://wil.to/_/button.gif
[12:35:05] <gseguin> no seriously, -enhanced is good
[12:36:16] <Wilto> Actually, do you think the ui- makes sense, there? I might be okay with just “.customclass-enhanced”
[12:36:34] <Wilto> Eh, either way. I also think the bike shed should be green.
[12:36:37] <gseguin> you're right
[12:36:57] <johnbender> toddmparker_: so for existing classes, alter them automatically?
[12:37:01] <gseguin> we shouldn't put ui- in front
[12:37:07] <Wilto> I’m just thinking that “ui” kinda means “jQM-specific stuff.”
[12:37:40] <johnbender> gseguin: is this related to folks who might use the containers or js failing?
[12:37:45] <johnbender> sorry
[12:37:49] <johnbender> directed that at the wrong person
[12:38:01] <johnbender> toddmparker_: is this related to folks who might use the containers or js failing?
[12:38:15] <Wilto> johnbender: If the input has class="awesome greenish" set, the enhanced version of that element will have all the usual classes as well as "awesome-enhanced greenish-enhanced" attached.
[12:39:19] <Wilto> Since right now, altering an enhanced element’s styles means wrapping it in something, or targeting it by position in the outline. You can’t style anything based on a class you chucked on the original, y’know?
[12:40:19] <Wilto> I mean… Styling, JS, anything involving targeting an enhanced thing based on a class.
[12:41:20] <toddmparker_> yeah, what wilto said :)
[12:41:47] <toddmparker_> it's really just a way to get a class onto something we automagically style
[12:42:06] <toddmparker_> if we wrap the original, you're stuck with needed to put it in a container which is ugly
[12:42:29] <johnbender> Wilto: wouldn't they just extend the enhancement classes, and then have the default styling in their pre enhance classes?
[12:42:37] <toddmparker_> but since js is creates these classes, they are also helpful for styling basic vs. enhanced
[12:42:39] <johnbender> or is that just a pain in the ass/not very descriptive
[12:43:01] <toddmparker_> by entend, what are you thinking?
[12:43:54] <johnbender> toddmparker_: I'm assuming the general case here is that people add extra classes to when they want to customize enhanced markup?
[12:44:01] <toddmparker_> the scenario we're suing this on now is good: we have ui-btn-left/right classes in the header for the button slots
[12:44:14] <toddmparker_> these only work with link buttons
[12:44:35] <toddmparker_> so if I put a select in the header with a ui-btn-rigth class, I expect it will sit in that slot
[12:44:38] <toddmparker_> but it won't
[12:44:57] <Wilto> Right. ui-btn-right will be on the original select, within the enhanced element.
[12:45:04] <toddmparker_> if we had this generic mechanism, we could write a generic style
[12:45:27] <toddmparker_> .ui-btn-right-enhanced { float/width/etc. }
[12:45:29] <johnbender> can the default classes remain the same and then let them set configure extra enhancement classes per widget?
[12:45:47] <toddmparker_> that would get predictably added to whatever widget
[12:45:54] <toddmparker_> yeah, exactly
[12:46:04] <toddmparker_> the normal classes are unaffected
[12:46:05] <Wilto> Oh, we wouldn’t be removing their classes from the original, if that’s what you mean.
[12:46:14] <johnbender> Wilto: ah, I thought you wanted to change them
[12:46:21] <toddmparker_> this just allows extra classes to be tacked on
[12:46:27] <Wilto> They set “customclass” on the select, and it stays. The enhanced version just gets “customclass-enhanced.”
[12:46:43] <johnbender> ok that makes sense
[12:46:48] <toddmparker_> nope, we'd leave that ui-btn-class on the select menu or whatever
[12:46:48] <johnbender> its just a convention for what I was  thinking
[12:47:23] <toddmparker_> we already do this is a hacky way just for those classes on link buttons in the header
[12:47:30] <toddmparker_> this makes it a real convention
[12:47:34] <toddmparker_> right wilto?
[12:47:42] <Wilto> Yessir.
[12:47:56] <toddmparker_> a lot of this stuff is just taking the hard coded exception and making it consistent
[12:48:32] <toddmparker_> we can make the library so powerful just by doing stuff like this, not really adding new stuff just making the stuff we have easier to mix and match
[12:48:42] <toddmparker_> and removing hard-coded crap
[12:49:21] <toddmparker_> we need to expose an easy way to config the default swatch classes we set in our plugins...but that's a discussion for later
[12:50:21] <Wilto> Yeah, I’m dying to get rid of the “first button in a header goes here, second button in a header goes here” logic.
[12:50:37] <Wilto> Styling based on source order gives me the creeps.
[12:50:53] <toddmparker_> yeah
[12:51:22] <toddmparker_> we can update our docs to not talk about source order anymore and encourage use of classes
[12:54:06] <johnbender> toddmparker_: when do you want to accomplish that
[12:54:24] <toddmparker_> this change we're discussing now?
[12:54:31] <johnbender> toddmparker_: yah, it touches pretty much everything
[12:54:36] <toddmparker_> not sure.
[12:55:00] <toddmparker_> i think we've decided on a good change, but for 1.1 I think it's too late
[12:55:09] <toddmparker_> this will touch most plugins
[12:56:06] <Wilto> I mean… I think it’s doable pretty quickly.
[12:56:24] <toddmparker_> good news is that this is a pretty dumb feature: grab the classes on the element, tack on the naming convention, chuck it into the class
[12:56:34] <johnbender> Wilto: yes but there are bugs and usability issues that go with every change
[12:56:49] <johnbender> toddmparker_: right I don't think the implementation of the part that does the work will break
[12:56:50] <toddmparker_> in theory it won't break anything
[12:56:50] <jqm-jenkins-bot> Project jqm-master build #473: SUCCESS in 41 min: http://10.59.19.240:8080/job/jqm-master/473/
[12:56:55] <Wilto> Oh, no, for sure. Not something I’d want to rush out the door.
[12:56:59] <johnbender> but we're going to use it in a ton of random places
[12:57:23] <johnbender> because the places where we enhance the markup is different everywhere
[12:57:32] <johnbender> s/is/are/
[12:57:51] <Wilto> Right. The “enhanced” element being targeted for the new classes will vary.
[12:58:04] <toddmparker_> wilto - why don't you give this a crack in a branch?
[12:58:17] <Wilto> For sure.
[12:58:27] <toddmparker_> sometimes it the original, other times it's the outermost container in the wrap
[12:58:36] <toddmparker_> those are the two scenarios
[12:58:41] <toddmparker_> most are the latter
[12:58:58] <toddmparker_> the former is just text inputs me thinks
[13:00:24] <johnbender> toddmparker_: if we have a goal for the bugs for 1.1
[13:01:29] <toddmparker_> yep, that's why this will be a 1.2 thing
[13:01:56] <toddmparker_> unfortunately. i gotta resist the urge to fix everythign and ship
[13:02:55] <johnbender> toddmparker_: I was thinking if Wilto has free cycles he could continue/jump in on the bugs
[13:03:12] <Wilto> Yeah, makes sense.
[13:03:26] <johnbender> toddmparker_: up to you
[13:03:43] <johnbender> toddmparker_: we've got a ton and I keep getting tied up on other stuf
[13:03:57] <Wilto> No, I’m with you there, johnbender.
[13:04:45] <Wilto> I’ve managed to address a couple of issues with buttons in headers/footers without making any radical changes like we discussed just now—I’ll commit that stuff and jump back in on various and sundry bugs.
[13:05:12] <toddmparker_> sounds like a plan
[13:05:21] <toddmparker_> glad we reached a solid plan on this
[13:05:26] <toddmparker_> so do we keep the ui-
[13:05:36] <Wilto> For the enhanced things?
[13:05:40] <toddmparker_> or just [class]-enhanced
[13:05:42] <toddmparker_> ya
[13:05:45] <toddmparker_> i'll make a ticket
[13:05:47] <Wilto> Just the latter, I think.
[13:05:49] <Wilto> Sweet.
[13:17:38] <_|Nix|_> Hey! So, I'm trying master right now and the select-based slider is dying in _create (line 78) with NOT_FOUND_ERROR: DOM Exception 8 ... the line in question: domSlider.appendChild(handle);
[13:18:02] <_|Nix|_> Actually it's not specific to the select-based slider, but the slider in general.
[13:18:55] <Wilto> …In any one browser specifically, _|Nix|_?
[13:19:03] <_|Nix|_> Wilto: Chrome.
[13:19:25] <Wilto> http://wil.to/_/for-your-shock.gif
[13:20:49] <Wilto> Whoop, yes, something is broken.
[13:21:02] <_|Nix|_> Wilto: Could it be because handle is declared as handle = $( document.createElement('a') )? That makes it a jQuery object, not a DOM element, right?
[13:21:25] <Wilto> Ah-hah, yes.
[13:21:33] <_|Nix|_> Wilto: So, it should be domSlider.appendChild(handle[0]), or something.
[13:21:50] <Wilto> Odds are. One sec.
[13:28:09] <johnbender> :( :(
[13:28:46] <Wilto> …Something is amiss.
[13:28:50] <Wilto> DAMMIT, BENDER
[13:30:35] <johnbender> _|Nix|_: hmm it strait doesn't work
[13:30:36] <johnbender> fixing
[13:30:51] <johnbender> this is what I get for not merging that thing more quickly
[13:30:52] <Wilto> There are a bunch of shenanigans around that area.
[13:31:15] <Wilto> Oh, cool. You’d know at a glance better than I would. Thanks, johnbender.
[13:31:35] <_|Nix|_> johnbender: Yeah ... real weird ...
[13:32:06] <johnbender> _|Nix|_: not weird it's just my fault
[13:32:40] <Wilto> Eh, c’est la vie.
[13:33:26] <_|Nix|_> johnbender: Well, looking forward to the fix ... since when does .appendTo(x) modify the object it's being called upon?
[13:34:49] <_|Nix|_> 			handle = $( document.createElement('a') ) //"<a href='#' class='ui-slider-handle'></a>" )
[13:34:56] <johnbender> jesus
[13:35:00] <johnbender> shit has gone pear shaped
[13:35:00] <_|Nix|_> Results in [ <a></a> ]
[13:35:18] <_|Nix|_> 			handle = $( document.createElement('a') ) //"<a href='#' class='ui-slider-handle'></a>" )
[13:35:21] <_|Nix|_> 				.appendTo( slider )
[13:35:26] <_|Nix|_> Results in [] ... WTF ?!
[13:35:42] <johnbender> therer we go
[13:35:58] <Wilto> wat
[13:36:02] <johnbender> _|Nix|_: it moves the element but yah I that's odd
[13:36:07] <johnbender> it appears to be fixed
[13:36:14] <Wilto> johnbender. Did you just break _all of JavaScript_, just now?
[13:36:37] <Wilto> Dammit, now I gotta learn Dart.
[13:36:40] <_|Nix|_> johnbender: Why are you mixing plain DOM manipulation and manipulation via jQuery? Just curious ...
[13:37:11] <_|Nix|_> johnbender: Like, $( document.createElement('a') ) ... why not just $("<a></a>")?
[13:37:24] <Wilto> The former is mo’ quicker.
[13:37:32] <johnbender> _|Nix|_: perf
[13:37:34] <johnbender> parsing takes forever
[13:37:37] <_|Nix|_> Aaaah, OK ...
[13:37:49] <johnbender> the price of overloading the first arg of $
[13:37:52] <_|Nix|_> Good point ...
[13:41:52] <johnbender> _|Nix|_: Wilto: should be at least partially fixed, if either of you feel like testing it out to be sure it wouldn't hurt
[13:41:55] <johnbender> phones too :( :(
[13:42:01] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/0ebPlw
[13:42:01] <jqmobilecommit> [jquery-mobile/master] post merge fix for slider - John Bender
[13:43:20] <Wilto> Wooyeah.
[13:43:58] <Wilto> Oh, I’m out of the office today. I don’t see where there would be phone issues moving to createElement and such, though… I can have a look tomorrow, just in case.
[13:45:14] <johnbender> Wilto: yah I think if it looks right it should be fine
[13:45:22] <johnbender> my hackles are up now though :)
[13:45:31] <Wilto> I been there.
[13:50:08] <Wilto> Looking good from here, though.
[13:51:04] <_|Nix|_> johnbender: O_o http://babulina.go-nix.ca/nix/slider-weirdness.avi (that's on Chrome) ...
[13:51:15] <Wilto> Woah, wait, no.
[13:51:23] <Wilto> Yeah. The slider is well and proper boned right now.
[13:51:32] <_|Nix|_> Indeed ...
[13:52:15] <_|Nix|_> For me it's only the select/option-based one, though ... the normal range-based one is OK.
[13:52:53] <Wilto> Oh, ditto—sorry, “boned” isn’t especially specific.
[13:52:53] <johnbender> sigh
[13:53:04] <johnbender> hahah
[13:53:07] <johnbender> that is fucked
[13:53:21] <Wilto> Yessir. Looks like… Something is left open, or being appended in the wrong place?
[14:01:34] <johnbender> _|Nix|_: reverted, I'm going to take a closer look here
[14:01:53] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/SmIzSA
[14:01:53] <jqmobilecommit> [jquery-mobile/master] revert slider changes, for further review - John Bender
[14:03:40] <ajpiano> johnbender: got a guy who's trying to work with the tests  and having trouble defining his own override for some QUnit methods, mind if i direct him in here for a bit?
[14:03:45] <ajpiano> in #jquery.
[14:04:28] <johnbender> ajpiano: sure thing
[14:04:32] <johnbender> hopefully I can help :D
[14:04:50] <ajpiano> cheers!!
[14:06:05] <_|Nix|_> johnbender: K ...
[14:14:41] <johnbender> _|Nix|_: working ?
[14:16:36] <Wilto> DAMMIT, AJPIANO
[14:17:09] <ajpiano> WIL...TOOOOOOOOOOOOOOOOOOOOOOOOOO
[14:21:22] <Wilto> http://wil.to/_/hulkbear.gif
[14:21:34] <newtonianb> ahah
[14:25:56] <mrassi> Hi
[14:27:38] <Wilto> Yo.
[14:28:05] <mrassi> Where should I define my new behavior for the QUnit.done trigger from jquery.testHelper.js ? I tried right below QUnit.Start it seems to get picked up the issue is it halts execution of the next module
[14:29:16] <mrassi> I tried to alias it using var prevQ = QUnit.done; QUnit.done = function(obj) { alert("module testing done"); prevQ.call( obj ); } but that only works for teh first module, everyone there after skips my overload
[14:29:50] <johnbender> mrassi: heyo, reading your question
[14:30:20] <mrassi> https://github.com/jquery/jquery-mobile/blob/master/tests/jquery.testHelper.js
[14:31:49] <johnbender> mrassi: you want to run something after a given page's test suite is done?
[14:32:16] <mrassi> I'd like to dump/POST the results to my web server where I'll parse it
[14:32:25] <johnbender> mrassi: are you working at nokia :D
[14:32:36] <mrassi> yes john! we were in touch
[14:32:51] <johnbender> mrassi: super nice I'm glad ajpiano sent you over here
[14:33:15] <johnbender> mrassi: gimme one sec I'll pull something out of our whole test suite runner
[14:33:19] <mrassi> yes I thought of bugging the crowd first :)
[14:34:11] <ajpiano> mrassi: see i told you johnbender was your man :)
[14:34:39] <mrassi> I was actually bugging you about an implementation he had originally suggested
[14:35:42] <ajpiano> LOL
[14:38:20] <johnbender> mrassi: so if you looks in runner.js under tests/unit/
[14:38:41] <johnbender> you'll see that it replaces done
[14:38:59] <johnbender> it waits for tests to finish in an iframe
[14:39:26] <johnbender> hmm
[14:39:36] <johnbender> if QUnit.done isn't working for you I'd have to look at what you have in place
[14:39:36] <mrassi> ah there it is
[14:39:39] <johnbender> :(
[14:40:18] <johnbender> so in that case what I do is setup an async test in the parent document
[14:40:48] <johnbender> and then when the tests in the iframe finish it fires frame.QUnit.done which records the results in the parent document and starts the parent QUnit tests back up
[14:41:55] <mrassi> i see
[14:42:24] <johnbender> mrassi: when you say you have other modules running after the done callback is called, what do you mean?
[14:43:12] <jqm-jenkins-bot> Project jqm-master build #474: SUCCESS in 27 min: http://10.59.19.240:8080/job/jqm-master/474/
[14:43:13] <johnbender> mrassi: do you mean that the done callback is called before all the test and asyncTest method calls have been made?
[14:43:14] <mrassi> I meant testing directory by "module" essentially the ones in tests/unit
[14:43:57] <johnbender> mrassi: I think my suggestion was to just dump something at the bottom of the jquery.testHelper right?
[14:44:04] <johnbender> mrassi: let me see if I can get that to work
[14:44:20] <mrassi> johnbender: yes that's what I was trying to get working
[14:44:22] <johnbender> where "that" is an action that takes place after all the tests are finished
[14:44:28] <johnbender> kk
[14:44:30] <johnbender> gimme a sec
[14:44:47] <mrassi> johnbender: I tried to define this at the bottom but QUnit was "undefined"
[14:47:44] <mrassi> our ultimate goal is to get a dump and post of the test page after each test has executed so we can process it on our server that will convert it to an xml document, we will be able to contribute that script back once it's done
[14:48:26] <johnbender> mrassi: yep, that was my understanding of the approach
[14:48:56] <johnbender> mrassi: so wrapping the done definition in a document ready callback appears to work, but it fires twice for some reason so you'll want to account for that
[14:49:53] <mrassi> mrassi: technically we could clean up the dump on the browser before the post but we are running on mobile devices with moderate processing power so just posting is your solution
[14:49:55] <mrassi> ok
[14:50:06] <mrassi> *note to self :)
[14:50:16] <johnbender> mrassi: $(window).load(fn(){}) also works and is probably better since it's earlier in the proceess
[14:51:02] <johnbender> I think qunit waits until document ready  to start the tests but if you switch the order then that would be binding and might run the tests before your callback to reassign done would run
[14:51:09] <johnbender> so window load is probably better
[14:51:35] <johnbender> mrassi: does that work for you?
[14:51:43] <mrassi> trying
[14:52:38] <mrassi> johnbenrder: where did you suggest injecting this for minimal future conflict
[14:53:11] <johnbender> mrassi: at the bottom of jquery.testHelper, outside if ifee
[14:53:27] <johnbender> that seems the least likely to cause conflicts
[14:53:49] <johnbender> mrassi: sorry for the chicanery
[14:53:57] <mrassi> whatever works :)
[14:54:18] <johnbender> btu that's technically what test swarm does too, they just expect you to drop an include in head :D
[14:58:58] <mrassi> heh
[15:08:31] <mrassi> it's incredible how caching can become the most frustrating feature! I test on chrome incognito but I still have to clear the cache often
[15:09:00] <_|Nix|_> Wilto: When you fixed the regression to buttonMarkup after the merge of my PR, you also completely neutralized the feature I added. Check the functional test (tests/function/button-markup.html) - it doesn't work anymore. What exactly was the regression?
[15:09:14] <johnbender> mrassi: in the dev tools you can turn it off
[15:09:25] <_|Nix|_> Oh, sorry: s/Wilto/johnbender/
[15:09:31] <johnbender> mrassi: bottom right click the gear when you bring them up
[15:09:50] <johnbender> mrassi: there's a disable cache option in there
[15:10:05] <johnbender> "bottom right, when you bring up the developer tools, there's a gear"
[15:10:10] <johnbender> once you click that there's a cache option
[15:10:22] <_|Nix|_> Oh, NM, it was Wilto ...
[15:10:24] <Wilto> You mean https://github.com/jquery/jquery-mobile/commit/a469907dade0c28a482d646638dd7d4402e802df , _|Nix|_?
[15:10:38] <_|Nix|_> Wilto: Yeah.
[15:11:23] <mrassi> ah nice thanks
[15:11:39] <Wilto> Sorry, should’ve noted somewhere—I noticed that turned up some issues, and I wanted to get things back to normal before digging into it.
[15:11:48] <Wilto> One sec.
[15:12:52] <mrassi> fyi doing some research I found a relevant thread on jquery forum  http://forum.jquery.com/topic/qunit-and-automated-testing  they talk about couple interesting tools if interested, in our case we don't need extra layer of complexity, I think post will do just fine
[15:12:59] <toddmparker_> heading home, talk to you tomorrow
[15:13:51] <johnbender> mrassi: cool, right now we're using selenium but at some point we'll get test swarm and browserstack working together
[15:15:58] <mrassi> good stuff!
[15:16:03] <ajpiano> mrassi: out of curiousity, did you do the thing where you went into a big public channel with a nicknamey-nick and then into a smaller one with your real name ?
[15:16:36] <ajpiano> one of my best friends loves that move, but i've never seen it in the wild besides him :p
[15:16:39] <mrassi> ajpiano: I just used my personal laptop for work purposes so I changed it
[15:16:43] <ajpiano> ah :)
[15:17:04] <Wilto> Oh, right, I know what it was, _|Nix|_.
[15:18:15] <Wilto> If you drop that custom removeClass business back into place and click around in the docs, it’s doing away with ui-btn-left and ui-btn-right classes on those header links.
[15:18:51] <Wilto> I wanted to roll it back so nothing was busted on /test for now, but since I’m in that neighborhood anyway I planned to get it sorted today.
[15:19:08] <_|Nix|_> Wilto: Aaaah, OK. In that case, I was thinking about recording all the classes I've added into the structure I attach to all the button elements, so I know which classes to remove next time.
[15:20:03] <Wilto> That’s what I had in mind, yeah. More flexible that way, for when I inevitably start slapping weird classes all over everything. As I am wont to do.
[15:20:20] <_|Nix|_> Wilto: Weird classes named ui-btn-* :)
[15:20:28] <Wilto> ui-erry-thang
[15:20:30] <_|Nix|_> Wilto: OK. Can do.
[15:20:37] <Wilto> Oh, awesome. Thanks, dude.
[15:27:14] <mrassi> johnbender: what would you use to identify the current running test so I can distinguish POSTS to the server
[15:27:28] <jqmobilecommit> [jquery-mobile] Wilto pushed 2 new commits to master: http://git.io/WrkdxQ
[15:27:28] <jqmobilecommit> [jquery-mobile/master] Ensured link buttons, form buttons, and selects obey ui-btn-left/right classes. - Mat Marquis
[15:27:28] <jqmobilecommit> [jquery-mobile/master] Should probably ensure that selects don’t burst into flames when .ui-btn-left/right aren’t specified. Just a thought. - Mat Marquis
[15:27:53] <johnbender> mrassi: hrm, fast solution is the header
[15:27:58] <Wilto> Spoiler: I am bad at my job.
[15:28:36] <johnbender> mrassi: location.href
[15:28:42] <johnbender> that's what I do with selenium
[15:29:17] <Wilto> And on that note, I’m off to gnaw on thermometers and wear hot water bottles on my head and other such sick-as-a-dog clichés.
[15:29:22] <Wilto> Talk to you guys tomorrow.
[15:45:14] <mrassi> johnbender: doesn't this load function get called before the test run?
[15:46:32] <johnbender> mrassi: which load function do you mean?
[15:46:45] <mrassi> the line we added
[15:46:52] <mrassi> *function
[15:47:02] <johnbender> mrassi: it might why?
[15:47:37] <mrassi> johnbender: well I was starting to query the html to fetch the content but realised it's empty of course
[15:48:10] <johnbender> mrassi: the done callback you define should run after the tests finish and that should be after the dom has finished loading
[15:48:37] <johnbender> mrassi: also the done callback gets arguments for pass/fail if that's what you're looking for
[15:48:59] <johnbender> onDone = function( failed, passed, total, runtime )
[15:49:05] <mrassi> ok, btw what's the actual arguments to the done function
[15:49:13] <mrassi> because when I debug it seems to pass an object
[15:49:29] <johnbender> mrassi: hmm
[15:49:53] <johnbender> and you're not altering the version of qunit right?
[15:51:06] <mrassi> johnbender: not that I know of
[15:52:09] <mrassi> actually, I just realised it's not catching the done! is this what you were suggesting
[15:52:09] <mrassi>     $(window).load( function() {
[15:52:09] <mrassi> 		QUnit.done = function ( failed, passed, total, runtime ) { 	
[15:52:09] <mrassi> 			alert("test");
[15:52:09] <mrassi> 		};	
[15:52:10] <mrassi>     });
[15:52:10] <mrassi> })(jQuery);
[15:52:45] <mrassi> http://pastebin.com/1NdjVdj3
[15:53:45] <johnbender> mrassi: and the last three arguments are nil?
[15:54:57] <johnbender> mrassi: hah it's the same here
[15:55:08] <mrassi> when I originally had that function in the body of loadSeq http://pastebin.com/XXMgVND7 yes
[15:55:20] <mrassi> where it is now inside window load I have not been able to try as Done isn't getting caught
[15:55:24] <johnbender> mrassi: you're right, I think that's a hold over from the old verion
[15:55:39] <johnbender> I record the results in the runner for each test completion instead
[15:55:48] <johnbender> that object has what you need though
[15:56:34] <mrassi> yes but I won't really be using that anyways
[15:56:47] <mrassi> we are parsing the entire html to keep track of everything not just the failures
[15:56:56] <johnbender> mrassi: it has the pass and fail in there too
[15:57:00] <johnbender> they are just properties
[15:57:05] <johnbender> did you need something else?
[15:57:20] <johnbender> all those arguments are just rolled into that object
[15:57:39] <mrassi> ya it's fine these are just details anyhow I'm not using this information, I'll be parsing the html itself
[15:57:44] <johnbender> kk
[15:57:48] <mrassi> but I still have the problem of
[15:58:05] <mrassi> being able to parse that html at the end of execution
[15:58:09] <johnbender> mrassi: any dom manip you want to do should be fine inside that done function
[15:58:19] <mrassi> the QUnit.done isn't getting caught inside window load
[15:58:47] <mrassi> I thought it did but I wasn't testing it the right way
[15:59:43] <johnbender> I guess I'm not clear on what's going wrong
[15:59:49] <johnbender> that alret isn't running?
[15:59:53] <mrassi> http://pastebin.com/ZmGP3kY3
[16:00:00] <mrassi> is this what you were suggesting?
[16:00:15] <johnbender> yah
[16:00:35] <mrassi> it doesn't seem to get triggered, I even got a breakpoint on the alert and it doesn't get hit
[16:01:14] <johnbender> mrassi: what page are you testing on
[16:01:22] <johnbender> mrassi: I tested on test/unit/core/
[16:01:31] <johnbender> *tests/unit/core/
[16:01:35] <mrassi> ah! that's the misunderstanding ok
[16:01:46] <mrassi> I was testing on the /test/unit/ directly hoping it would work there too
[16:02:12] <johnbender> mrassi: yah therer are two relevant QUnit's there the one in the current iframe and the one in the parent document
[16:02:25] <johnbender> mrassi: you have to reference it as a member of the iframe is you want that one
[16:02:51] <johnbender> mrassi: I would avoid it anyway, there are some tests that don't seem to play well with the iframes that we need to smooth out
[16:03:00] <mrassi> I see
[16:03:01] <johnbender> so you'll end up getting false negatives
[16:03:22] <johnbender> once I get that set up we'll be able to test the whole suite with testswarm and browser stack with eas
[16:03:26] <johnbender> *ease
[16:04:13] <mrassi> ah wait it's not free?
[16:04:33] <johnbender> ??
[16:05:25] <mrassi> nm I need a refresh on all the tools we are dealing with
[16:06:11] <mrassi> John are you in Boston?
[16:06:25] <johnbender> mrassi: LA
[16:06:31] <mrassi> ah no way
[16:06:35] <mrassi> my sister just moved there
[16:06:50] <mrassi> she crashed her car there two weeks after moving ahahhah
[16:07:21] <mrassi> "apparently" someone hit her and people drive crazy
[16:07:56] <johnbender> terrible drivers here
[16:08:02] <johnbender> mrassi: it's a function of lane size
[16:10:10] <mrassi> you mean there are too many lanes or each lanes are too narrow?
[16:10:23] <johnbender> mrassi: the later is caused by the former
[16:10:33] <johnbender> _|Nix|_: can you check the toggle switches again?
[16:10:50] <johnbender> _|Nix|_: moved the changes over to the performant version
[16:11:40] <johnbender> _|Nix|_: I lied
[16:11:45] <johnbender> _|Nix|_: let me push it first
[16:12:08] <mrassi> johnbender: thanks for the help! need to catch up on couple things but will be back on this tomorrow
[16:12:35] <johnbender> mrassi: cool, sorry my "help" wasn't easier to understand
[16:12:42] <johnbender> mrassi: do let me know if you need anything else
[16:12:47] <johnbender> we appreciate what you're doing over there
[16:13:25] <mrassi> johnbender: thanks, we hope to contribute something back if we can, maybe that html to xml parser could be a little something, seems we were not the only ones trying to achieve this setup
[16:13:28] <johnbender> _|Nix|_: ok perf improvements in place
[16:13:29] <mrassi> thanks again, ttyl
[16:13:49] <jqmobilecommit> [jquery-mobile] johnbender pushed 2 new commits to master: http://git.io/ymzjrQ
[16:13:49] <jqmobilecommit> [jquery-mobile/master] fix qunit done callback args (unused) - John Bender
[16:13:49] <jqmobilecommit> [jquery-mobile/master] reinstate perf improvements for slider - John Bender
[16:27:35] <Wilto> Hey _|Nix|_: while I was messing around with it, I accidentally committed your previous code—so, the buttons in the docs headers are busted again.
[16:27:53] <Wilto> Are you still on the clock, or should I roll it back?
[16:28:27] <johnbender> Wilto: I saw that email and got worried it was my borkage
[16:28:36] <Wilto> No, sorry, 100% my bad.
[16:37:32] <Wilto> Re-reverted.
[16:37:55] <jqmobilecommit> [jquery-mobile] Wilto pushed 1 new commit to master: http://git.io/5nMxpw
[16:37:55] <jqmobilecommit> [jquery-mobile/master] Fixes regression accidentally committed in 954820. - Mat Marquis
[16:38:02] <jq-jenkins> Project jQuery Mobile Latest build #98: FAILURE in 0.81 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/98/
[16:38:27] <Wilto> …Say what, Jenkins?
[16:38:59] <Wilto> Oh, looks like it’s just flaking out.
[16:40:10] <johnbender> Wilto: that's the latest build, I'd imagine it's the java again
[16:40:20] <johnbender> yerp
[16:40:22] <johnbender> it is
[16:43:12] <jqm-jenkins-bot> Project jqm-master build #475: SUCCESS in 27 min: http://10.59.19.240:8080/job/jqm-master/475/
[16:43:25] <johnbender> test are pasing
[16:43:31] <johnbender> *passing
[16:43:34] <johnbender> that's always good
[17:43:11] <jqm-jenkins-bot> Project jqm-master build #476: SUCCESS in 27 min: http://10.59.19.240:8080/job/jqm-master/476/
