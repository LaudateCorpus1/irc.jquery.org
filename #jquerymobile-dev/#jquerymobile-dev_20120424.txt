[08:30:30] <tbenzige> hey toddparker
[08:47:28] <deAtog> hey guys
[09:05:15] <deAtog> Can anyone tell me why the current page is stored in the hash?
[09:05:57] <deAtog> The only thing I can come up with is for bookmarking purposes..
[09:08:23] <gseguin> Good morning
[09:08:33] <deAtog> good morning gseguin
[09:08:53] <gseguin> deAtog: that's right, deep linking and back button support
[09:13:43] <deAtog> gseguin: I think the deep linking might be a little over sold.. I doubt it's a feature a lot of apps would care ever existed.. IE.. how often do you want a user to bookmark a page deep within the app itself? As for back button support.. I've recently found it to be severely lacking
[09:15:27] <deAtog> once the history chain gets long enough to where a page repeats in the history multiple times, it becomes very difficult to track exactly where you're at in the history based on that hash alone
[09:16:03] <gseguin> deAtog: Actually deep linking is a key feature which used by a lot of our users
[09:17:42] <deAtog> gseguin: I don't doubt there are uses for it.. IE jQM's docs is a perfect example of where it works well.. but there are also a lot of cases where users shouldn't ever bookmark anything but the main page
[09:17:55] <gseguin> the hash can actually get a lot more complex than a simple id. Some of our users have leveraged the pagebeforechange to read a querystring in the hash to pass arguments to a page
[09:19:03] <gseguin> deAtog: for that use case you can use changePage programatically with the hashChange option set to false
[09:20:36] <deAtog> gseguin: that's a lot of additional work.. IE every button on every page needs specific instructions on how to go forward and back.. and you lose the ability to use the browser's back button
[09:22:37] <deAtog> gseguin: I don't have a good solution yet.. but the more I look at this stuff.. the more it seems like the entire page tracking system needs a complete overhaul.. with a selectable page tracking module
[09:26:31] <deAtog> gseguin: each module would have different features and limitations.. IE with the current page tracking system.. something as simple as selecting a prior page in history makes it possible for jQM's history to easily get out of sync with the browser's history
[09:28:52] <gseguin> feel free to create a ticket and or a pull request
[09:31:03] <deAtog> gseguin: take a look at issue #4005.. I've provided a hack to try and address the issue.. but the more I think about it.. the less confident it'll produce the right results
[09:34:18] <deAtog> the only reliable way it can ever work.. is if each page change creates a unique hash in the browser's history.. right now.. that isn't the case and searching the history for the now current page is very suspect
[09:56:53] <jqmobilecommit> [jquery-mobile] toddparker pushed 2 new commits to master: http://git.io/i_oCQw
[09:56:53] <jqmobilecommit> [jquery-mobile/master] Adjusted explanation about default theme. - Jasper de Groot
[09:56:53] <jqmobilecommit> [jquery-mobile/master] Merge pull request #4192 from uGoMobi/patch-4 - Todd Parker
[10:05:13] <deAtog> gseguin: something as simple as page1.html->page1.html#/page2.html->page1.html#/page1.html breaks the history in jQM if the just jumps from the last entry to the first. If you build this out a little more you can make jQM get completely lost in it's attempt to track page history. In other words, page1.html stores (/page1.html in urlHistory's stack), page1.html#/page2.html stores (/page2.html) and page1.html#/page1.html stores (/page1.
[10:06:52] <deAtog> If you consider that in regards to page2.. IE going back to page1.html#/page2.html.. from the next hash change it's impossible to know if it was due to a forward or a backwards transition
[10:35:16] <johnbender> deAtog: for the vast majority of cases it's possible to assume the back button when there are two states on either side of a history entry that oculd match the hash change
[10:35:29] <johnbender> we're aware of the fact that we can't know "the truth"
[10:35:46] <johnbender> and there's an outstanding issue to change the rather simple algo that determines forwardness or backwardness
[10:35:57] <johnbender> the current implementation prefers forwardness which doesn't make sense
[10:38:52] <toddparker> nice little date picker: http://code.gautamlad.com/glDatePicker/#examples
[10:39:09] <toddparker> like the minimal API.the only non-bloated calendar API I've seen
[10:45:30] <jqmobilecommit> [jquery-mobile] toddparker pushed 2 new commits to master: http://git.io/HazzHA
[10:45:30] <jqmobilecommit> [jquery-mobile/master] Docs: Make the example a-themed-list to an a-themed-list as described (list-themes) - Maurice Gottlieb
[10:45:30] <jqmobilecommit> [jquery-mobile/master] Merge pull request #4189 from MauriceG/patch-75 - Todd Parker
[11:14:41] <johnbender> toddparker: I vote, for our own sanity, that we don't include that in core :D
[11:14:49] <johnbender> though I can totally see where it woud make sense
[11:14:59] <johnbender> just seems like a real bear
[11:54:03] <deAtog> johnbender: the current implementation could probably be fixed via the same way dialogs are handled.. IE adding a history index of sorts to help maintain the jQM's history and the browser's history
