[07:04:04] <scottjehl> kinblas _nickel - agreed. The pagecreate bindings don't use live for that reason too.
[08:35:24] <Hemebond> Anyone awake?
[08:36:06] <Hemebond> I'm having a big problem with the trigger("create") stuff.
[08:38:49] <Hemebond> Curses https://github.com/jquery/jquery-mobile/issues/1793
[08:46:48] <Hemebond> Oh. Solved it. Needed to put a data-url="" attribute on the page.
[08:50:13] <Hemebond> That should probably go into the documentation.
[09:26:03] <toddparker> hemebond - is that issue #1793 the right one you were referring to?
[09:26:24] <toddparker> anyway, if you want to make a pull with the suggested doc tweak, please do!
[10:39:25] <_nickel> alright
[10:39:38] <_nickel> time to get rid of the shared file and roll it into the default native
[11:14:46] <_nickel> scottjehl: kinblas: had to take care of some stuff this morning with my setup so I didn't have time to work on the refactor just yet, running out to grab an early lunch and then I should get to finishing it up
[11:14:53] <_nickel> I have it mapped out in my head at least
[13:02:16] <kinblas> fyi I've been having network issues today :-)
[14:37:25] <Hemebond> toddparker: It looks to be a bug; static markup doesn't need that attribute to get "mobilised".
[14:37:51] <Hemebond> I will add a comment to that bug.
[14:40:46] <Hemebond> Oh wait, I'm not sure it's the same problem.
[14:59:45] <_nickel> scottjehl: kinblas: gseguin: single file extension is pretty much done for decoupled select
[14:59:57] <_nickel> it could use some organization love
[14:59:59] <_nickel> link incoming
[15:00:58] <_nickel> https://github.com/johnbender/jquery-mobile/blob/decoupled-select/js/jquery.mobile.forms.select.js
[15:01:01] <_nickel> native/base
[15:01:07] <_nickel> https://github.com/johnbender/jquery-mobile/blob/decoupled-select/js/jquery.mobile.forms.select.custom.js
[15:01:11] <_nickel> custom extension
[15:02:06] <_nickel> if you guys have pressing needs let me know otherwise we can probably land it today or tomorrow
[15:02:15] <_nickel> I'm going to try and do some more cleanup and testing where its lacking
[16:11:13] <_nickel> kinblas: scottjehl: restarted, did you guys get a chance to look at the links I posted?
[16:23:57] <Hemebond> Why does this project not seem to share anything with the jQueryUI project?
[16:25:54] <_nickel> Hemebond: I'll bite. What do you mean?
[16:26:11] <Hemebond> Well, activating controls is completely different.
[16:26:20] <_nickel> Hemebond: hows that?
[16:27:03] <Hemebond> Well, take the slider widget for example. In jQueryUI you call .slider() on it and you're done. jQm uses completely different markup.
[16:27:11] <Hemebond> Wait...
[16:27:20] <Hemebond> I think I figured out why last night as I was falling asleep.
[16:27:35] * _nickel is waiting
[16:27:38] <Hemebond> jQueryUI is about enabling widgets on existing pages for all browsers.
[16:28:01] <Hemebond> jQm is built specifically for mobile platforms and so doesn't need extra compatibility?
[16:28:43] <_nickel> Hemebond: so lets go back to your original assertion which was "Well, activating controls is completely different."
[16:28:45] <Hemebond> Though jQm is a little annoying by requiring all new markup.
[16:28:54] <_nickel> this is false
[16:29:08] <_nickel> jqm is built on the jquery ui widget factory
[16:29:16] <Hemebond> False? So I didn't need to recode my markup to get widgets?
[16:31:17] <_nickel> Hemebond: you can use the jqm slider widget just as you described above $("input#my-slider").slider()
[16:31:33] <_nickel> Hemebond: the default selector is "input[type='range'], :jqmData(type='range'), :jqmData(role='slider')"
[16:31:45] <Hemebond> Whaaaaaaaaaaaaat
[16:32:03] <_nickel> so jqm "does the right thing" for you when you are writting your application and you can build the new markup
[16:32:32] <Hemebond> So I didn't need all those fieldcontains? Gah!
[16:33:08] <_nickel> Hemebond: https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.forms.slider.js#L320
[16:33:16] <_nickel> it uses the method internally
[16:33:57] <_nickel> Hemebond: as for the fieldContainer, that I'm not sure about
[16:35:17] <Hemebond> Odd. Before I changed the markup my scripts were failing on the calls to jQUI.
[16:35:57] <Hemebond> Does jQm use the .button() method?
[16:36:11] <Hemebond> Does it have jQui icon buttons?
[16:37:17] <_nickel> Hemebond: you don't need the field container but it is recommended I blieve
[16:37:47] <Hemebond> I see.
[16:38:06] <Hemebond> Found that someone else has already raised a ticket for the bug I saw earlier https://github.com/jquery/jquery-mobile/issues/2223
[16:38:43] <Hemebond> Is there any way to stop jQm creating a "fake" page when the user goes to an #anchor that doesn't exist?
[16:39:16] <_nickel> Hemebond: For support questions please as in #jquerymobile this is channel for library development
[16:39:24] <Hemebond> Ah, yes. Sorry.
[16:39:26] <_nickel> *ask
[16:40:18] <Hemebond> #jquery points to #jquerymobile-dev in its title. I didn't realise there was a support channel.
[16:48:29] <kinblas> _nickel: ping
[16:56:02] <_nickel> kinblas: pong
[16:56:23] <_nickel> kinblas: did get much time to play around with the servers today :(
[16:56:29] <_nickel> kinblas: mostly cleaning up the refactor
[16:56:36] <kinblas> _nickel: ok
[16:56:42] <_nickel> kinblas: I should focus on trying to get that unblocked tomorrow
[16:56:51] <_nickel> though I get the impression I won't get very far
[16:56:51] <kinblas> _nickel: i was just pinging you to tell you i did look a little bit at your branch
[16:56:57] <_nickel> kinblas: ah cool
[16:57:22] <kinblas> _nickel: I still dislike the live() thing ... but just on a perf basis
[16:58:21] <_nickel> kinblas: right I'm not attempting to solve that here
[16:58:26] <kinblas> ok
[16:59:49] <kinblas> _nickel: I was wondering if you and scottjehl thought it was a bit more hacky to just have the plugin override the _create() such that it executed its code prior to calling the original _create() method
[17:00:29] <kinblas> that would save us the event trigger (and propagation), the live selector resolution (sizzle), and extend copy of the extensionAttributes() funciton
[17:01:07] <kinblas> of course I'm always thinking performance so, that could be done later ... the separation looks fine with me
[17:03:35] <_nickel> kinblas: I haven't thought about how to override the original create and still have both on the same page
[17:03:49] <kinblas> the custom version of _create
[17:03:52] <_nickel> kinblas: we'd have to monkey with the widget factory?
[17:04:17] <kinblas> _nickel just $.mobile.widget.select.prototype._create
[17:04:36] <kinblas> in the custom create it does the check for the attribute
[17:04:52] <kinblas> and executes the extra code you are doing already, then follows it with the call to the original _create function
[17:05:00] <kinblas> equivalent, exection ordering
[17:05:02] <_nickel> kinblas: thats basically what I had originally
[17:05:04] <kinblas> just without all the extras
[17:05:16] <kinblas> event trigger, propagation, selector resolution, extend
[17:05:21] <_nickel> kinblas: I was just delegating out to two widgets instead of the extra
[17:05:42] <kinblas> _nickel: the difference was that in your prior patch, native knew about custom
[17:05:43] <_nickel> *instead of the single custom widget
[17:06:04] <_nickel> kinblas: actually they didn't know anything other than the common code in the shared file
[17:06:04] <kinblas> what I'm saying is that it doesn't have to know, since custom monkey patches _create()
[17:06:32] <kinblas> _nickel: but you had an if attr() check if I recall
[17:06:36] <kinblas> in the native _create()
[17:07:19] <kinblas> _nickel: keep in mind I'm just throwing out ideas ... not trying to force you down some road
[17:07:25] <kinblas> or back up the road where you were :-)
[17:07:43] <_nickel> kinblas: yah no worries
[17:07:50] <_nickel> I think its just two approaches
[17:08:06] <_nickel> event delegation + selector
[17:08:10] <_nickel> which is slower
[17:08:22] <_nickel> or widget registration
[17:08:35] <_nickel> the registration mechanism is still unclear to me
[17:09:03] <kinblas> eh, monkey patching is less formal than a registration mechanism which would probably be overkill
[17:09:13] <kinblas> the last patch I saw prior to the event dispatch was this:
[17:09:14] <kinblas> https://github.com/johnbender/jquery-mobile/blob/ff8a1ceefa94e8a100fee0aefd715c32482db663/js/jquery.mobile.forms.select.js#L31
[17:10:05] <_nickel> so in that case it grabs the widget instance from the data
[17:10:08] <_nickel> and extends it
[17:11:12] <_nickel> kinblas: I guess I'm unclear on exactly how you'd go about doing it now that I've reread what you were saying
[17:11:14] <kinblas> right but it was attaching the native/custom component
[17:11:20] <kinblas> before the data call
[17:11:38] <kinblas> basically something like:
[17:12:03] <Hemebond> Can anyone tell me if they have a problem with sliders being automatically initialised/created twice? Once with the page and once again when the page is viewed?
[17:12:17] <Hemebond> Looks like a bug, but it might be the dynamic page creation.
[17:12:32] <kinblas> function customCreate() { if (hasAttr) { do what you do to extend } _originalCreate.apply(this, arguments);
[17:12:44] <_nickel> ah
[17:13:04] <kinblas> the point is at the tie the native constructor is called, you already have the element in hand
[17:13:05] <_nickel> so the expectation would be that "plugin authors" (emphasized quotes) would alter that function on the proto
[17:13:13] <kinblas> so there's no need to do the event triggering, etc
[17:13:34] <kinblas> we're just doing all that for a true decoupling but we're paying a perf price
[17:13:46] <_nickel> alright
[17:13:54] <_nickel> then its just a discussion about performance
[17:13:55] <kinblas> I'm just wondering out loud :-) what you guys think of a monkey patch approach
[17:14:17] <kinblas> if its hacky, then move on, if its worth a look ok we can save some cpu ccycles
[17:14:29] <_nickel> kinblas: so just to clarify, plugin authors would have to alter that customeCreate on the proto yes?
[17:14:37] <kinblas> remember the less we do, the less we battery we consume on a mobile device
[17:15:35] <kinblas> basicaly plugin author creates his on custom _create() method so he gets a hook to figure out if he should handle it or not, and then calls the original _create
[17:15:49] <kinblas> ... I meant creates, and replaces the original _create with his own.
[17:16:07] <_nickel> method chain
[17:16:22] <_nickel> I'm very very averse to method chains as an api
[17:16:29] <kinblas> I dont think we expect folks to be adding their own custom select plugins ... if we did, then perhaps something more formal is in order
[17:16:33] <_nickel> I'd want to come up with something sane
[17:16:45] <kinblas> but we're just talking about letting folks leave out the custom stuff if they want to save some bandwidth
[17:16:54] <_nickel> kinblas: maybe I'll think about what the formal version would look like
[17:16:57] <_nickel> so we can have both
[17:17:45] <kinblas> anyways, as a first decoupling step, I think what you have works
[17:17:47] <kinblas> fine
[17:17:52] <_nickel> kinblas: let me think about it tonight and I'll let you know
[17:17:55] <kinblas> ok
[17:18:02] <kinblas> damn I'm late
[17:18:04] <kinblas> have to run home
[17:18:23] <kinblas> see ya
[17:18:55] <_nickel> peace me too!
[17:26:18] <gseguin> _nickel: you there?
[19:15:18] <_nickel> scottjehl: toddparker: have we thought about doing perf/mem profiling and reduction before the 1.0?
[19:15:35] <_nickel> scottjehl: toddparker: just picking off low hanging fruit
[19:15:58] <_nickel> I was doing some looking and the docs hover around 40mb when moving around in there
[23:32:59] <gseguin> _nickel: still up?
[23:33:09] <_nickel> gseguin: indeed sir!
[23:34:16] <gseguin> hey I've been contacted by Packt Pub to author a book on jQuery Mobile
[23:35:17] <gseguin> I don't think I would have the time / dedication / eloquence to take up the task
[23:35:39] <gseguin> _nickel: would you be interested?
[23:37:10] <_nickel> gseguin: whoa
[23:37:42] <_nickel> gseguin: I think it would only be fair to give that honor to Scott/Todd first given how hard they've worked but I would indeed
[23:37:55] <gseguin> oh absolutely
[23:38:08] <gseguin> or Kin for that matter
[23:38:58] <_nickel> maybe we could all colab on it or something
[23:39:00] <_nickel> that would be hot
[23:39:22] <gseguin> hawt!
[23:39:56] <_nickel> :D
[23:40:05] <gseguin> I would definitely be interested in collaborating but taking that myself, don't think I'll make
[23:40:06] <gseguin> it
[23:40:14] <_nickel> gseguin: https://github.com/johnbender/jquery-mobile/tree/decoupled-select/js
[23:40:26] <gseguin> alright I'll ping scott/todd tomorrow
[23:40:27] <_nickel> latest from my refactor is in select and select.custom
[23:40:34] <gseguin> a'right code!
[23:40:36] * gseguin looks
[23:40:46] <_nickel> gseguin: the extension bit is still up for debate, ie
[23:40:54] <_nickel> how we do extension of widgets in general
[23:41:00] <_nickel> but we might not want to solve that problem just yet
[23:44:20] <gseguin> so who triggers "selectmenubeforecreate" ?
[23:44:35] <gseguin> is that one of these _trigger ?
[23:44:41] <gseguin> _nickel: ^^^
[23:45:08] <_nickel> gseguin: yah its at the top of the _create in the select base
[23:45:15] <_nickel> jquery.mobile.forms.select.sj
[23:45:18] <_nickel> *js
[23:45:42] <gseguin> gotcha
[23:47:46] <_nickel> gseguin: thats the part thats up for debate right now
[23:48:14] <gseguin> yeah, I'm not sure about it
[23:48:34] <gseguin> something's bothering me but I can't come up with something much cleaner
[23:48:40] <_nickel> I'm on Kin's side in the long run in that running those selectors for every plugin seems uncesseary, and I like the idea of "registering" a plugin for consultation when the object is initialized
[23:49:35] <gseguin> yeah we should have sort of a widget registry
[23:50:42] <_nickel> that was my task tonight was to think about what that would look like for the two major use cases
[23:50:42] <gseguin> when widgets are imported they declare themselve to the registry with what selector to trigger them
[23:50:50] <_nickel> yes
[23:50:53] <_nickel> thats my initial thinking
[23:51:02] <_nickel> a map between selector and widget ref
[23:51:14] <_nickel> err widget callback
[23:52:19] <_nickel> in terms of the page enhancement that we talked about on Thursday I think the only advangtage is a bit of scoping for the selector
[23:52:26] <_nickel> perf wise that is
[23:52:28] <_nickel> well
[23:52:34] <_nickel> and event handling I suppose
[23:53:50] <_nickel> the more complex case to support though has an example in the custom select
[23:54:22] <_nickel> where the callback will actually alter the calling object by replacing methods or some such
[23:54:27] <_nickel> at least thats how we have it now
[23:55:09] <_nickel> I actually had native as a seperate plugin that was a child of the vanilla select along with the custom select
[23:55:29] <_nickel> but that does make for a clumsier set of files
[23:55:34] <_nickel> so it was changed
[23:57:04] <gseguin> oh I see
[23:58:40] <gseguin> if we want the widgets extensible we should have some stub functions in the $.widget code itself
[23:59:08] <gseguin> that build function could be a postCreate in $.widget, no?
