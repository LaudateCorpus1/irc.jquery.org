[03:51:37] <aaronmcadam> is there a simple way to just refresh the page?
[03:51:51] <aaronmcadam> using $.mobile.changePage( '/', { reloadPage : true } ); is re-creating the page in the DOM
[03:54:43] <aaronmcadam> "Used only when the 'to' argument of changePage() is a URL." does that mean that '/' isn't being seen as a URL?
[08:32:31] <_nickel> scottjehl: toddmparker: good morning gents!
[08:34:31] <_nickel> scottjehl: toddmparker: RIM + webOS is win
[08:34:43] <_nickel> scottjehl: toddmparker: can we suggest it to our contacts at RIM?
[09:58:10] <_nickel> scottjehl: toddmparker: would you guys do me a solid and let kin know I'll be back online in about 30 mins I'm going to head into the office
[10:24:23] <kinblas> toddmparker: ping
[10:40:25] <_nickel> kinblas: back
[10:41:45] <kinblas> _nickel: cool, I'm in the office now
[10:41:46] <kinblas> too
[10:41:47] <_nickel> scottjehl: toddmparker: are we testing the pushstate branch today?
[10:41:55] <_nickel> kinblas: is jorge in?
[10:44:48] <kinblas> _nickel: yes, I haven't seen him though I have a catch up meeting with him at 11am.
[10:45:04] <_nickel> kinblas: nice, maybe I can get one of those :D
[10:54:14] <_nickel> toddmparker: scottjehl: if there are no objections I'm going to startin on select menu bugs
[11:15:38] <_nickel> toddmparker: https://github.com/jquery/jquery-mobile/issues/2066
[11:15:38] <socialhapy> â˜… Issue #2066 on jquery-mobile, reported by ryantofteland (1m, 1w ago): Select Menus won't open when pages are within FORM element
[11:15:46] * _nickel is on it
[11:41:15] <toddmparker> thanks _nickel
[11:42:14] <toddmparker> scottjehl - sure, if it's looks ready to go, hit the button. i rely on you smart gents to tell me when things are baked.
[11:47:14] <_nickel> toddmparker: I think this one is going to be interesting
[11:47:28] <_nickel> playing around shows that its literally a matter of what tags are in the form
[11:49:19] <toddmparker> for the form tag bug?
[11:49:32] <_nickel> toddmparker: yah I might be wrong on that
[11:49:36] <_nickel> I'll let you know
[11:49:50] <toddmparker> interesting
[11:50:04] <toddmparker> so it looks like pushstate can go today?
[11:50:14] <toddmparker> so says scott
[11:50:31] <_nickel> toddmparker: if you guys are happy I'll run the tests one more time and we can land it
[12:19:35] <_nickel> toddmparker: scottjehl: tests are green on the branch
[12:21:31] <toddmparker> then pushstate is a go
[12:21:55] <toddmparker> i think the forward chrome issue isn't a showstopper. that is a reasonable tradeoff for now
[12:26:15] <_nickel> ok
[12:26:24] <_nickel> I'm going to get some food and I'll land that when I come back
[12:26:30] <_nickel> toddmparker: unles scott wants to
[12:26:33] <_nickel> I'm working on that select bug
[12:29:04] <toddmparker> kinblas - are you waiting on me to test out transitions?
[12:29:14] <toddmparker> i can do that tomorrow or wed, when i'm back
[12:29:31] <toddmparker> is hte dev extensibility hook (light version) good to go too?
[12:29:43] <scottjehl> hey
[12:30:21] <kinblas> toddmparker: hang on a sec, I'll send you a matrix I've been working on with urls
[12:30:30] <toddmparker> k
[12:33:57] <scottjehl> so, _nickel, any changes on the Chrome forward history bug?
[12:34:10] <kinblas> toddmparker: http://bit.ly/onjUrU
[12:34:30] <scottjehl> I'm pretty sure that test case I made showed it working properly in isolation
[12:35:05] <kinblas> toddmparker: jqm (HEAD key-frame), jqm2 (transitions branch with tweaks for iPad), jqm3 (transitions branch)
[12:35:38] <kinblas> toddmparker: so far I'm thinking I'm going to land my tweaks
[12:36:14] <kinblas> toddmparker: if you want to test WebOS (haha), WP7, Symbian and Playbook
[12:36:21] <toddmparker> oh, cool
[12:36:22] <kinblas> you'll want to test against jqm2
[12:36:31] <kinblas> I'll probably land the changes today
[12:36:39] <kinblas> but iOS is back to being smooth as butter
[12:36:48] <toddmparker> cool
[12:36:52] <toddmparker> ios needs to be slick
[12:36:59] <toddmparker> if you feel ok, land these
[12:37:08] <toddmparker> the other platforms barely do animations anyway
[12:37:24] <kinblas> well I'm trying to notate differences between jqm2 and jqm3 to make sure I'm not imagining/mis-remembering things
[12:37:34] <toddmparker> and there was little or no diff. between master and transitions when i did a thorough pass last week
[12:37:38] <kinblas> Transitions/Animations in general are a mess on the XOOM
[12:37:58] <toddmparker> that is honeycomb, right?
[12:38:07] <kinblas> toddmparker: I saw some issue fly by about being able to turn on acceleration?
[12:38:10] <kinblas> for Xoom that is
[12:38:12] <toddmparker> do you have a galaxy tab to test for comparison?
[12:38:20] <kinblas> toddmparker: no galaxy tab
[12:38:23] <kinblas> just a Xoom
[12:38:23] <toddmparker> wodering if it's just the xoom
[12:38:36] <toddmparker> scott can take a quick look if needed
[12:38:40] <toddmparker> we have a tab 10.1
[12:38:42] <kinblas> toddmparker: it would be good to check the galaxy tab
[12:38:51] <kinblas> my Xoom is running Honeycomb 3.1
[12:39:07] <toddmparker> i'm not in the office today and tomorrow will be busy
[12:39:14] <toddmparker> but i will do more testing on wed
[12:39:24] <toddmparker> i think if you feel ok, land the changes
[12:39:45] <toddmparker> so that will push the ipad fixes into the transitions branch, right?
[12:39:49] <toddmparker> not master?
[12:40:06] <kinblas> toddmparker: right, pushing to branch today, NOT HEAD
[12:40:30] <kinblas> I just wanted to test the impact of my new changes across the devices I have right now, hence the tedious notes of each tree behavior
[12:40:34] <kinblas> on all devices I have
[12:58:05] <_nickel> scottjehl: I haven't tried it yet, I can jump over to working on that ( chrome forward )
[12:59:44] <scottjehl> k. It seems fixable, because if we remove the replaceState that occurs during the pop callback, forward history will be remembered
[12:59:57] <scottjehl> it won't change pages, but it'll all be in history
[13:00:23] <scottjehl> I think our replace is replacing too agressively in that one scenario, but I couldn't figure out why yet
[13:00:31] <scottjehl> also, not a problem in FF
[13:00:43] <_nickel> scottjehl: alright I'll try and grok it
[13:00:52] <_nickel> scottjehl: do you have a simple use case I can use to reproduce?
[13:02:44] <scottjehl> yep one sec
[13:03:09] <_nickel> thanks much
[13:04:45] <scottjehl> okay
[13:04:48] <scottjehl> 1. go here
[13:04:49] <scottjehl> http://filamentgroup.com/examples/pushstate/
[13:04:56] <scottjehl> click any link
[13:05:03] <scottjehl> ...that was 2.
[13:05:10] <scottjehl> 3. click back
[13:05:22] <scottjehl> and your forward history is now gone
[13:08:30] <_nickel> agh!
[13:08:31] <_nickel> wtf
[13:16:26] <scottjehl> blank screen in Opera desktop
[13:18:22] <scottjehl> I'll update that link to make sure
[13:20:15] <gseguin> scottjehl: I get the following in Opera desktop/Mac: http://pastie.org/2413228
[13:21:11] <_nickel> gseguin: who thats not good
[13:21:15] <_nickel> *whoa
[13:22:05] <gseguin> sorry I can't spend much time on jQM today
[13:22:26] <gseguin> if that's still an issue on Wed I will jump in to help
[13:32:12] <scottjehl> test/ is fine in Opera
[13:32:17] <scottjehl> just a pushstate thing
[13:32:20] <scottjehl> weird tho
[13:32:42] <_nickel> yes
[13:32:52] <_nickel> scoping behavior
[13:43:51] <scottjehl> look like an easy fix?
[13:51:24] <_nickel> scottjehl: not sure, the scoping is pretty basic
[13:52:08] <scottjehl> huh
[13:52:22] <scottjehl> maybe miketaylr could take a look? :)
[13:52:29] <_nickel> I'm looking into it
[13:52:37] <_nickel> though I've never actually debugged in opera
[13:52:46] <miketaylr> use dragonfly :)
[13:52:56] <_nickel> miketaylr: yah I saw that
[13:53:08] <_nickel> I'll pester you if I have more annoying questions
[13:53:09] <_nickel> :D
[13:53:15] <miketaylr> plz do
[13:53:35] <miketaylr> i'm headed out in a few mins, but here's a start http://www.opera.com/dragonfly/documentation/remote/
[14:00:10] <_nickel> scottjehl: the issues is that its not shadowing the window.self
[14:03:53] <_nickel> scottjehl: if you see miketaylr we should probably ask him abotu that
[14:04:33] <_nickel> simple fix self => _self | _this
[14:04:40] <_nickel> as ugly as those both are
[14:05:01] <_nickel> but var self should shadow window.self in the context of this anon function so far as I understand it
[14:06:30] <scottjehl> where's the codez?
[14:11:09] <_nickel> its the pushstate plugin
[14:11:37] <_nickel> its just the self.state invocation in init
[14:13:08] <scottjehl> heh. I was hoping for a lazylink.
[14:13:11] <scottjehl> got it :)
[14:14:08] <_nickel> sorry :(
[14:16:24] <DaveMethvin> hey guys, i'd like to get your thoughts on this issue. jQuery 1.6.3 is coming out later this week and we've taken out requestAnimationFrame due to some issues with user's animation code. http://forum.jquery.com/topic/please-don-t-remove-requestanimationframe
[14:21:05] <scottjehl> _nickel _self is scoped to the function in this case
[14:21:19] <scottjehl> doesn't look like a window prop to me
[14:21:41] <_nickel> scottjehl: yep but its window.self in this case
[14:21:41] <scottjehl> var pushStateHandler = self = {}
[14:21:42] <_nickel> scottjehl: https://developer.mozilla.org/en/DOM/window.self
[14:21:48] <_nickel> scottjehl: yap I wrote that :D
[14:22:04] <_nickel> window.self is used for frame comparisons
[14:22:14] <scottjehl> but that var scopes it to be non-global. right?
[14:22:20] <_nickel> right
[14:22:27] <_nickel> and it works fine everywhere .... but opera :(
[14:22:37] <scottjehl> oh wait I see. It is global
[14:22:43] <_nickel> quick fix to my mind is to change the name to _this or _self
[14:22:56] <_nickel> well let me try it first
[14:23:54] <scottjehl> yeah, it's leaking into the global namespace in Chrome too
[14:25:06] <scottjehl> no reason to expose it outside of this plugin on window.self tho, right?
[14:25:26] <_nickel> scottjehl: not sure what you're saying
[14:25:45] <scottjehl> from Chrome's console, window.self is your pushState object
[14:25:53] <scottjehl> it's public
[14:25:59] <_nickel> ugh
[14:26:02] <_nickel> thats bad
[14:26:08] <scottjehl> heh. easy fix
[14:26:16] <_nickel> ah!
[14:26:25] <_nickel> thats because of the multi assignment
[14:26:28] * _nickel is a moron
[14:26:35] <_nickel> just need to declar the self in the line above
[14:26:36] <_nickel> zomg
[14:26:59] <scottjehl> I'm confused why self is needed. Or why pushStateHandler is needed
[14:27:10] <scottjehl> maybe just one short var name would do?
[14:27:28] <_nickel> the self refrence is because we hand off the functiosn as event handlers
[14:27:46] <_nickel> so unless we want to build Function.prototype.bind its just easier to use scope
[14:28:15] <_nickel> scottjehl: we could just use pushstateHandler but its longer self is, imo, easier to read and understand
[14:28:48] <scottjehl> agreed. Why have pushstateHandler defined then? Just define self...?
[14:29:18] <_nickel> personal preference to give the object a descriptive name
[14:29:29] <_nickel> for init invocation
[14:29:58] <scottjehl> fair enough. predefine away :)
[14:30:26] <_nickel> scottjehl: your arguments are all valid
[14:30:51] <scottjehl> http://www.blogcdn.com/www.urlesque.com/media/2009/11/my_hair_is_a_bird.jpg
[14:31:44] <kinblas> toddmparker: I'm done filling out my little matrix ... looks like only HTC Incredible regresses with my small tweaks necessary for iOS
[14:32:24] <kinblas> I'm going to push the small tweak since, it fixes iOS and makes no difference on most of the other platforms I have.
[14:59:16] <_nickel> scottjehl: alright that bug should be fixed
[14:59:18] <_nickel> scottjehl: ugh
[14:59:22] <scottjehl> :)
[14:59:24] * _nickel is ashamed
[14:59:28] <scottjehl> thanks - nice work
[14:59:31] <_nickel> back to the foward button
[14:59:34] <_nickel> *forward
[14:59:46] <scottjehl> meh.
[14:59:51] <scottjehl> cool lemme know!
[15:03:55] <_nickel> DaveMethvin: kinblas is really the person to talk too
[15:04:06] <_nickel> DaveMethvin: and gseguin but he's busy with other things today I think
[15:05:25] <kinblas> _nickel: did I miss some conversation? I don't see any comment/question from DaveMethvin
[15:05:33] <_nickel> up a ways
[15:05:51] <_nickel> he posted a request for opinions on requestAnimationFrame
[15:05:52] <DaveMethvin> kinblas: hey guys, i'd like to get your thoughts on this issue. jQuery 1.6.3 is coming out later this week and we've taken out requestAnimationFrame due to some issues with user's animation code. http://forum.jquery.com/topic/please-don-t-remove-requestanimationframe
[15:06:48] <scottjehl> with regards to how this affects jQuery Mobile, or just in general?
[15:06:54] <kinblas> DaveMethvin: We're not using requestAnimationFrame because we aren't animating anything ourselves
[15:07:02] <kinblas> We rely on CSS3
[15:07:05] <scottjehl> kinblas +1
[15:07:10] <scottjehl> we don't use animate()
[15:07:14] <DaveMethvin> cool
[15:07:27] * kinblas reads what all of the hullaballoo is about
[15:07:39] <scottjehl> ...would love to see a discussion about making it optional to exclude from core.. ;)
[15:07:42] <DaveMethvin> well i tell you what, for $100 i won't break any of  your code :)
[15:07:53] <_nickel> DaveMethvin: :D
[15:15:33] <kinblas> DaveMethvin: so reading through that forum post ... a decision was made t o remove versus the config flag?
[15:15:44] <DaveMethvin> kinblas: yes
[15:16:27] <DaveMethvin> please do weigh in with your opinion there if you want
[15:17:30] <scottjehl> hey DaveMethvin: I was meaning to ask you, is triggerHandler going anywhere?
[15:17:39] <scottjehl> I seem to remember talks of deprecating
[15:17:45] <DaveMethvin> not that I know of, scottjehl
[15:18:08] <DaveMethvin> i'm doing a bunch of refactoring but triggerHandler is just as good as evar
[15:18:24] <scottjehl> k cool. Still the best way to trigger an event when you want to return something other than jQuery right?
[15:18:55] <DaveMethvin> yeah, should work fine
[15:19:07] <scottjehl> as in, if( elem.triggerHandler( "foo" ) === false ){...
[15:20:18] <DaveMethvin> so you want the return value from the handler, right scottjehl?
[15:23:19] <DaveMethvin> the docs on triggerHandler aren't clear on what it returns http://api.jquery.com/triggerHandler/
[15:23:40] <DaveMethvin> but it returns the event.result
[15:23:52] <DaveMethvin> which is going to be false if any of the handlers returns false
[15:24:07] <DaveMethvin> we should clarify the docs and add a test case so that won't break
[15:24:21] <DaveMethvin> i'll make a note
[15:31:39] <scottjehl> hey sorry
[15:32:22] <scottjehl> yeah, I mean, we might use a method instead for the case I'm thinking of, but that's what I was going to do with it yes
[15:32:41] <scottjehl> sortof like jqui's _trigger would do
[15:40:33] <_nickel> scottjehl: so earlier, were you saying that you thought the initial replaceState was causing the forward button issue
[15:40:56] <scottjehl> i think it's the one in the popstate actually
[15:40:59] <_nickel> scottjehl: I notice that if I my initial page load is a hash it doesn't have a problem
[15:41:13] <scottjehl> ooh nice find
[15:42:24] <_nickel> I shall continue to ply
[15:53:32] <_nickel> scottjehl: I'm sure this will be obnoxios but what was the reason for the no hash replace state?
[15:54:00] <scottjehl> it gives that initial view a popstate event when you return to it
[15:54:21] <scottjehl> I believe. Might've been something else, but it's needed
[15:54:39] <_nickel> ah
[15:59:25] <scottjehl> I mean, it's needed at some point at least. Maybe we could sneak it in when we return to that page, but I think that was the situation that created the "go to page, hit refresh, back breaks" problem
[15:59:51] <_nickel> yah
[16:00:05] <_nickel> because we need it to push a hash on to the initial load
[16:02:00] <scottjehl> Are we currently doing that? I wondered when you said that this problem goes away if a hash is there. We could create that hash
[16:02:09] <scottjehl> a hash equal to pathname
[16:02:19] <_nickel> thats what I was  trying to do
[16:02:27] <_nickel> hmm one sec
[16:02:31] <scottjehl> k
[16:02:41] <scottjehl> that'd have to happen early
[16:02:46] <scottjehl> before hashchange is enabled
[16:02:49] <scottjehl> I think
[16:04:33] <scottjehl> hey looking at the location.search part
[16:04:47] <scottjehl> I think we could simplify by splitting at "#" and keeping [0]
[16:04:50] <scottjehl> https://github.com/jquery/jquery-mobile/blob/replacestate-external/js/jquery.mobile.navigation.pushstate.js#L18
[16:05:39] <_nickel> scottjehl: we then have to remove the protocol and domain
[16:06:01] <_nickel> scottjehl: assuming you mean location.href split
[16:06:41] <_nickel> scottjehl: why do we need to do the initial replace state before hashchange is bound?
[16:07:03] <scottjehl> yeah prolly better as-is
[16:07:24] <scottjehl> umm. I think I was talking about setting the hash before hashchange is listening
[16:07:46] <_nickel> won't it be on the url then?
[16:07:59] <_nickel> don't we need to bind to hashchange to push it down into the url with replacestate
[16:09:56] <_nickel> scottjehl: ^
[16:09:58] <scottjehl> well I was just thinking if there's no hash, we could set one immediately, equal to pathname
[16:10:13] <_nickel> thats what we do now
[16:10:16] <scottjehl> oh ok
[16:10:21] <scottjehl> thought so :)
[16:10:30] <_nickel> actually sorry
[16:10:41] <_nickel> scottjehl: we do a replace state with the current href
[16:10:43] <_nickel> if there's no hash
[16:10:54] <scottjehl> well, I thought that might help if we set a hash first
[16:11:07] <_nickel> hmm
[16:11:07] <scottjehl> hmm.
[16:11:25] <scottjehl> to mimic what you said about the prob going away when there's a hash
[16:11:35] <scottjehl> of course, setting hash adds a history entry
[16:11:47] <_nickel> I was trying that with replace state
[16:11:52] <_nickel> but I should try it with just a hash
[16:12:02] <_nickel> and let our hash listenting handle that
[16:12:14] <scottjehl> yeah that seems better. Set a replacestate that includes a hash
[16:12:40] <scottjehl> well just setting hash will add a new entry to history. not what we want
[16:12:44] <scottjehl> right?
[16:12:56] <_nickel> right instead of saving the state
[16:12:59] <_nickel> I tried the first
[16:13:02] <_nickel> and it doesn't work
[16:13:09] <_nickel> that was the first thing I tried
[16:13:16] <_nickel> just adding the hash to the repace state href
[16:13:18] <_nickel> no dice
[16:13:29] <scottjehl> k
[16:13:33] <scottjehl> it could be a chrome bug
[16:13:48] <scottjehl> but that isolated test seemed to suggest otherwise
[16:14:00] <scottjehl> http://jsbin.com/icixem/2/edit
[16:23:39] <_nickel> scottjehl: you're missing an extra = in your js
[16:23:47] <scottjehl> oh?
[16:23:56] <scottjehl> that'll bring the ship down
[16:24:02] <_nickel> appears so
[16:24:09] <_nickel> hmm
[16:24:13] <_nickel> let me double check though
[16:24:27] <_nickel> I'm making too many assumptions today
[16:24:55] <_nickel> scottjehl: nevermind /bar still shows u
[16:25:55] <_nickel> scottjehl: I'll have to keep looking this is rough
[16:26:13] <_nickel> scottjehl: struggling to grok the difference here other than the hashchange replacestate
[16:26:24] <_nickel> err
[16:26:31] <_nickel> rather the popstate replacestate
[16:26:36] <_nickel> which is obviously quite necessary
[16:26:58] <scottjehl> hmm. well I tried to reproduce it as close as possible
[16:46:28] <_nickel> scottjehl: http://jsbin.com/icixem/10/edit#javascript,html
[16:46:41] <_nickel> scottjehl: http://jsbin.com/icixem/11/edit
[16:46:42] <_nickel> sorry
[16:46:44] <_nickel> second one
[16:46:50] <_nickel> that gets you the true result
[16:46:55] <_nickel> that was the confusion earlier
[16:46:55] <_nickel> lol
[16:46:57] <_nickel> sorry
[16:56:12] <scottjehl> I have to check it out later
[16:56:24] <scottjehl> gots to go home! conference season is in full force
[16:56:30] <_nickel> scottjehl: nice
[16:56:40] <_nickel> hopefully I'll have something useful to tell you
[17:00:44] <scottjehl> awesome
[17:00:46] <scottjehl> thanks!
[17:00:51] <scottjehl> nice work on this :)
[17:00:53] <scottjehl> we're close
[17:00:53] <_nickel> scottjehl: yah this is ugly lol
[17:00:56] <_nickel> so close lol
