[03:19:40] <uGoMobi> good morning all
[03:28:39] <robschmuecker> hi uGoMobi
[03:28:51] <uGoMobi> hi robschmuecker
[03:30:00] <robschmuecker> thanks for your review of the PR I sent through - I wasn't sure that i'd done it in the correct manner?  I quite agree about the change regarding making the page to add the pop-up to as $.mobile.activePage
[03:30:37] <robschmuecker> Also as you mentioned about making it another page as the scripts need to load for example to work.
[03:31:45] <uGoMobi> you PR looks fine
[03:32:28] <robschmuecker> Something you also mentioned was enhancing the header of the popup which I hadn't thought about as I was just trying to demonstrate how to add a generic popup but now that you have mentioned I had a look and am battling to get it to enhance like a proper header such as the "dialog" popup example.  I have tried trigger('create') with standard data-role="header" to no avail?
[03:32:54] <uGoMobi> yeah I know that's an issue
[03:33:19] <uGoMobi> the page sections plugin isn't bound to "create", only "pagecreate"
[03:33:46] <uGoMobi> we have to look into that widget for 1.3
[03:33:49] <robschmuecker> yes I wasn't sure if I was missing something.  So if I trigger "pagecreate" it ought to work right?
[03:34:25] <uGoMobi> yes, but you have to trigger that on the page if I am not mistaken
[03:34:56] <robschmuecker> ok - I will give that a quick test
[03:35:09] <uGoMobi> it's not a very neat solution
[03:35:48] <uGoMobi> other way to achieve the same result is add class "ui-header" in the markup
[03:36:00] <uGoMobi> and "ui-title" class for the heading
[03:36:26] <uGoMobi> I saw you already took care of enhancing the button
[03:36:40] <uGoMobi> the close button that is
[03:37:03] <robschmuecker> yes - I was just adding that as a way to "close" the popup.
[03:37:19] <uGoMobi> yes, perfect
[03:37:31] <robschmuecker> perhaps the inline markup you suggest is a more "logical" example to the casual user.
[03:38:06] <robschmuecker> one other thing that isn't as elegant as it could be is the popup() method needs to be called seperately before calling popup('open')
[03:39:34] <uGoMobi> yes I see what you mean
[03:40:05] <uGoMobi> not if you call "pagecreate" anyway
[03:41:33] <robschmuecker> Yes this is true.  What do you suggest as best example?  One with inline markup to make the style or one with the purely programmatical approach with some comments as to why one needs to trigger pagecreate?#
[03:42:29] <uGoMobi> good question
[03:42:43] <uGoMobi> maybe we should leave the pagecreate out for now
[03:42:58] <uGoMobi> and add another example after we fixed that widget
[03:43:23] <uGoMobi> might be confusing
[03:43:47] <uGoMobi> and I am not even sure if triggering pagecreate can cause issues
[03:44:21] <uGoMobi> there must be a reason that we created another "create" event for that
[03:44:49] <robschmuecker> yes - perhaps I could take a look at the widget source and maybe remedy that first.
[03:44:50] <uGoMobi> robschmuecker: https://github.com/jquery/jquery-mobile/issues/2215
[03:47:31] <robschmuecker> apologies for jumping-the-gun with #5101 - I didn't actually look through his JS too much all assumed that as it was rendering fine on the 2nd invocation it was as it had become aware of the width of the content which was getting added after the popup had been positioned the first time.
[03:49:00] <uGoMobi> robschmuecker: no problem
[03:49:08] <uGoMobi> robschmuecker: actually I am about to comment there
[03:49:22] <uGoMobi> because my solution doesn't fix it completely either
[03:49:26] <uGoMobi> :(
[03:50:31] <uGoMobi> I tested it and sometimes the issue still occurs, but when seems quite random
[03:51:34] <robschmuecker> I think it is because of the ordering of his JS - he adds/changes the content after he has initiated and shown the popup.  Hence it is opening at a default position of I think max-width:400px if I remember correctly.
[03:52:33] <robschmuecker> So either he sets the fixed-width of the img tag in his markup which seems(ed) to work or add the content before popping it up.
[03:54:54] <uGoMobi> I created my own example to test this and didn't touch max-width
[03:54:57] <uGoMobi> still it happens
[03:55:05] <robschmuecker> sorry - scrap the max-width theory I see he sets it dynamically.
[03:55:34] <robschmuecker> do you have a bin I can fork?
[03:57:30] <uGoMobi> I think it has to do with whether the image has completely loaded or not... when you bind to popupbeforeposition it doesn't wait
[04:00:30] <uGoMobi> robschmuecker: http://ugomobi.github.com/popup/dynamic-popup.html
[04:01:00] <robschmuecker> ok - just on the phone
[04:02:38] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 6 new commits to sequence-tests: http://git.io/PHZUsw
[04:02:38] <jqmobilecommit> [jquery-mobile/sequence-tests] [sequence tests] Forgot to add expect()s for two of the tests - Gabriel Schulhof
[04:02:38] <jqmobilecommit> [jquery-mobile/sequence-tests] [sequence tests] Adding test page1 -> dialog1 <- back -> dialog2 <- back - Gabriel Schulhof
[04:02:38] <jqmobilecommit> [jquery-mobile/sequence-tests] [sequence tests] Adding comment about non-independence of sequence tests - Gabriel Schulhof
[04:04:12] <uGoMobi> I think the image src should be set on the popupbeforeopen event
[04:18:11] <_|Nix|_> uGoMobi: Wow! That's bad - the popup extends below the bottom of the document!
[04:18:25] <_|Nix|_> uGoMobi: It must not be getting the right width/height information ...
[04:18:41] <uGoMobi> _|Nix|_: hey Gabriel, you mean that example I created?
[04:18:52] <_|Nix|_> uGoMobi: Yeah.
[04:19:01] <_|Nix|_> After the images are cached, it works as expected.
[04:19:03] <uGoMobi> note that the popup is created dynamically
[04:19:20] <uGoMobi> so it's propabably an issue with my code
[04:19:42] <_|Nix|_> uGoMobi: I'm not sure. How can you ever be sure that the image has indeed been downloaded?
[04:19:59] <uGoMobi> popup isn't waiting with opening or positioning until image has completely loaded
[04:20:09] <_|Nix|_> uGoMobi: That's the problem.
[04:20:09] <uGoMobi> yeah, true
[04:20:44] <_|Nix|_> uGoMobi: You could check the size of the image repeatedly in a setTimeout and then, when it has finalized, you show it in a popup.
[04:20:59] <_|Nix|_> uGoMobi: But that's extremely ugly.
[04:21:08] <_|Nix|_> uGoMobi: Can you download the image via AJAX?
[04:21:14] <uGoMobi> did I hear setTimeout ? ;-)
[04:21:38] <_|Nix|_> Yep :) johnbender must be feeling a disturbance in the Force.
[04:21:43] <uGoMobi> haha
[04:23:23] <uGoMobi> _|Nix|_: yeah, I think I am going to change the example to use AJAX
[04:23:29] <_|Nix|_> Not sure how to test that though ... ideally, you'd need a Web server that serves the image extra-slowly, so you can really test the situation where you have to wait for the image to download.
[04:23:44] <_|Nix|_> uGoMobi: Yeah, and then show the popup in .success().
[04:23:53] <uGoMobi> yup
[04:24:26] <_|Nix|_> uGoMobi: Although I'm not sure how you download an image via AJAX ... but that may just be because I've never tried *shrug* ...
[04:24:49] <_|Nix|_> uGoMobi: Like, what happens? Do you end up with the raw image data?
[04:27:51] <uGoMobi> _|Nix|_: can't I use something like .load() in my AJAX function?
[04:30:33] <_|Nix|_> uGoMobi: No idea. I was assuming that you would pass it a URL that returns type image/jpeg ...
[04:31:16] <_|Nix|_> uGoMobi:  ... and then maybe even throw away the data, since the important thing is that the URL request has completed successfully and therefore the image is (presumably) cached.
[04:32:01] <_|Nix|_> I can't think of a way to display a jPEG image downloaded via AJAX off the top of my head.
[04:32:09] <_|Nix|_> Maybe using a canvas ... ? *shrug*
[04:32:24] <uGoMobi> hmm
[04:32:39] <_|Nix|_> uGoMobi: http://stackoverflow.com/questions/2963897/displaying-jpg-image-via-jquery-ajax-call
[04:32:48] <_|Nix|_> ... says Dr. Google ...
[04:33:48] <_|Nix|_> Not really useful ...
[04:35:06] <uGoMobi> _|Nix|_: in the article the answer on SO is linking to they use $(img).load()
[04:35:25] <uGoMobi> see "Added functionality" http://jqueryfordesigners.com/image-loading/
[04:36:09] <_|Nix|_> Nice!
[04:36:57] <uGoMobi> I am not really experienced with this either so I am just going to try
[04:37:57] <_|Nix|_> uGoMobi: It sounds like jQuery has an event specifically for indicating that an image has loaded. Nice!
[04:47:03] <robschmuecker> http://jsbin.com/ofehoq/1/
[04:48:18] <robschmuecker> just rejigged the code a little and removed the explicit call to .popup({positionTo: "window"}) as it is already being marked up when the page loads as the '#popupPicture' has data-role="popup" and seems to be working.
[04:48:51] <robschmuecker> whoops sorry doesn't work in non-editing mode . . .
[04:49:06] <robschmuecker> strange somehow having the frames helps things in the JSBIN editing mode?
[04:49:55] <robschmuecker> nope - forget I said ANYTHING !  It does certainly NOT work :(
[04:50:00] <uGoMobi> robschmuecker: not always... don't try to close a popup in the preview panel ;)
[04:51:27] <_|Nix|_> uGoMobi: http://jsbin.com/aqenax/2
[04:52:36] <uGoMobi> _|Nix|_: great... just load() seems to do the trick
[04:52:43] <_|Nix|_> uGoMobi: Really cool!
[04:53:28] <uGoMobi> robschmuecker _|Nix|_ : I think we should add an example that illustrates that
[04:54:09] <uGoMobi> I probably need to implement this in the popup > scaling images example
[04:55:13] <_|Nix|_> uGoMobi: Yeah ... creating a popup from scratch, and then removing it from the DOM when it closes. Gives popups a real workout, making sure all the bindings are removed and everything.
[04:55:31] <uGoMobi> yeah that's really useful
[04:55:47] <_|Nix|_> uGoMobi: Kinda sucks that the corners in http://jsbin.com/aqenax/2 are rounded, but the image still shows up with sharp corners.
[04:56:25] <_|Nix|_> ... even in FF ...
[04:56:40] <uGoMobi> _|Nix|_: we already landed a fix to make ui-content inherit popup corner styling, i can do the same for images
[04:56:57] <uGoMobi> only when they are immediate children
[04:57:30] <_|Nix|_> uGoMobi: Nonono ... I didn't know I had to add ui-content to the img to make it look right.
[04:57:49] <uGoMobi> even better... only when they are the only immediate child
[04:57:59] <uGoMobi> _|Nix|_: ui-content will add padding
[04:58:06] <uGoMobi> you don't want that
[04:58:13] <_|Nix|_> uGoMobi: No, I guess not.
[04:58:14] <uGoMobi> s/add/adds/
[04:58:25] <_|Nix|_> It looks better, but still.
[04:58:35] <_|Nix|_> The container should clip the content, but it doesn't.
[04:59:07] <_|Nix|_> However, I think this is only true of images. If I were to add a rectangle in there, it would clip, IINM.
[05:00:29] <uGoMobi> _|Nix|_: http://jsbin.com/aqenax/6
[05:02:03] <_|Nix|_> Cool ...
[05:02:30] <_|Nix|_> The thing is, this stuff should clip ... I shouldn't have to set that style rule.
[05:08:04] <_|Nix|_> Oh, OK ... it doesn't clip because .ui-popup doesn't have overflow: hidden ...
[05:08:23] <_|Nix|_> ... and if I set overflow: hidden, it only clips on FF, and not Chrome.
[05:08:58] <_|Nix|_> ... and they told me they'll never fix Chrome because clipping with overflow: hidden is performance-intensive.
[05:10:13] <uGoMobi> _|Nix|_: yes and overflow hidden is a dangerous setting... can cause weird issues on Android
[05:11:41] <_|Nix|_> uGoMobi: I know, but it's the more elegant solution. When two divs have matching corner rounding, you can sometimes see stray pixels between the two arcs, because of rounding errors.
[05:12:00] <uGoMobi> yes that's true
[05:12:29] <_|Nix|_> With proper clipping, this would not be the case. Unfortunately, that causes the issues you mentioned :(
[05:12:39] <_|Nix|_> Again, we have to resort to the ugly solution.
[05:12:53] <_|Nix|_> OK, not "ugly", "uglier".
[05:13:24] <_|Nix|_> But anyway ... cool to see that jQuery has such a nice feature.
[05:38:05] <_|Nix|_> uGoMobi: .load() has some caveats: http://api.jquery.com/load-event/
[05:39:25] <uGoMobi> _|Nix|_: I see :(
[05:43:07] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to sequence-tests: http://git.io/JgAvRw
[05:43:07] <jqmobilecommit> [jquery-mobile/sequence-tests] [sequence tests] Forgot to add another-page.html - Gabriel Schulhof
[09:33:03] <johnbender> toddmparker_: where are we at with a release?
[09:55:07] <Wilto> Todd’s out for the day; family thing.
[09:55:49] <Wilto> At the risk of failing the Turing test:
[09:55:54] <Wilto> How do you feel about ‘where are we at with a release,’ johnbender?
[09:57:59] <johnbender> Wilto: pretty good
[09:58:09] <johnbender> I was hoping to deploy soon so I can merge all this stuff in that I've been working on
[09:58:13] <johnbender> err
[09:58:17] <johnbender> s/deploy/tag/
[09:58:38] <Wilto> I was kinda out of the loop the end of last week; do we know whether Todd did all the bloggin’ and such?
[10:14:10] <gseguin> Wilto: the blog post is ready I think
[10:14:40] <Wilto> If that stuff is ready and you guys are feelin’ good about things, I’m betting Todd would be fine with shipping it.
[10:14:57] <Wilto> I don’t think I have credentials for the WP instance or anything, though—any of you?
[10:19:16] <johnbender> Wilto: will he be back tomorrow?
[10:19:20] <johnbender> I'm travelin on Weds
[10:19:24] <Wilto> Far as I know, yeah.
[10:19:27] <johnbender> kk
[10:19:31] <johnbender> then we can just wait
[10:19:42] <johnbender> gseguin: you need it to be tagged right?
[10:19:43] <agcolom> Hi, the footer still says 1.2 RC2 so I guess would need to be changed to 1.2
[10:19:52] <Wilto> http://bukk.it/cookiewait.gif
[10:20:02] <johnbender> agcolom: Wilto: yah I'm guessing he has to go through his checklist
[10:20:37] <agcolom> the rest seems to have been changed... I'll check that the footer is on the checklist (it's pretty new)
[10:24:41] <agcolom> johnbender: Wilto looks like the footer was not on the checklist...
[10:28:04] <gseguin> Wilto: I have access to WP but everytime I log in I screw it up so I don't know if I should
[10:28:19] <gseguin> johnbender: if you tag the builder will check out that tag
[10:28:30] <Wilto> I feel that way about the entire internet, gseguin.
[10:28:34] <gseguin> we just have to add it to the front end
[10:28:47] <Wilto> Everything I dial into AOL lately, I manage to screw _something_ up.
[10:29:27] <gseguin> AOL sucks NetZero is so much better
[10:30:11] * gseguin didn't even know that NetZero actually had broadband now
[10:51:02] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to fix-5085: http://git.io/MrojBQ
[10:51:02] <jqmobilecommit> [jquery-mobile/fix-5085] create, store, and pass the absolute url in all page lifecycle events on the trigger data object - John Bender
[10:56:39] <Wilto> No way.
[10:56:46] <Wilto> I used to use NetZero back in the day.
[11:27:50] <tybenz> toddmparker_ or johnbender: ping
[11:40:06] <uGoMobi> wilto: ping!
[11:41:13] <Wilto> Pong.
[11:41:45] <uGoMobi> hey Wilto: any chance you know what hotel we stay for the summit
[11:41:53] <Wilto> Man, I never know anything.
[11:41:54] <uGoMobi> have to apply for ESTA
[11:42:01] <uGoMobi> yeah I know :(
[11:42:09] <uGoMobi> I thought I could try anyway ;)
[11:42:38] <uGoMobi> who do you think I can ask?
[11:45:15] <Wilto> Actually, I dunno if anyone knows yet.
[11:45:27] <Wilto> Let us harass people in #jquery-developer-summit
[11:45:47] <uGoMobi> ah there is a new channel already
[11:45:53] <uGoMobi> yeah lets try
[11:48:52] <jqmobilecommit> [jquery-mobile] johnbender pushed 2 new commits to fix-5085: http://git.io/_ZXRRg
[11:48:52] <jqmobilecommit> [jquery-mobile/fix-5085] use existing api property name for consistency - John Bender
[11:48:52] <jqmobilecommit> [jquery-mobile/fix-5085] fix for pagechange value and test of 3 page change events - John Bender
[12:04:56] <tybenz> toddmparker_: ping
[12:06:22] <mspisars> ?nm
[12:15:51] <_|Nix|_> uGoMobi: I know the name of the hotel ... hold on ...
[12:16:10] <uGoMobi> _|Nix|_: I already got it
[12:16:13] <uGoMobi> thanks anyway
[12:16:27] <_|Nix|_> OK, cool.
[13:23:11] <jqmobilecommit> [jquery-mobile] johnbender force-pushed fix-5085 from 58e5cd6 to 951525b: http://git.io/tjUCXA
[13:23:11] <jqmobilecommit> [jquery-mobile/fix-5085] fix for pagechange value and test of 3 page change events - John Bender
[13:25:48] <robschmuecker> Hi guys.
[13:27:25] <robschmuecker> Currently working on an app whereby it's handy to be able to "mask" certain elements and interactions whilst a certain condition is met i.e. loading something or in my current case masking the map element while the phone/device has no connectivity.
[13:28:55] <robschmuecker> I was wondering if this is something that would be useful to the framework?  If so i could make a generic mask which is themeable inline with the current other themeing conventions of widgets etc.
[13:53:06] <_|Nix|_> robschmuecker: Can you show me a demo?
[13:54:58] <robschmuecker> I'm not at that stage yet?! I was blue-skying! But either I just use my own or if it's something worthwhile for the rest of the framework I'd adapt something like the previous mask which was ported from ExtJS by these guys http://code.google.com/p/jquery-loadmask/
[13:55:57] <_|Nix|_> robschmuecker: We have a class called ui-disabled which makes things 30% opaque and sets pointer-events: none;
[13:56:49] <_|Nix|_> Oh, I see, so more than just making it disabled-looking ...
[13:57:11] <_|Nix|_> Once I implement the do-not-close-upon-click with popup, it will be possible to do something like that.
[13:57:19] <robschmuecker> Yes I thought there was something similar. But yes I wanted something that can give a bit of feedback to the user.
[13:58:59] <robschmuecker> I've got a screen of what I'm buggering around with to give you a better idea.  Hang on a sec.
[14:05:57] <robschmuecker> something a little like this but a bit more elegant! http://robschmuecker.com/overlay-mask.jpg
[14:07:26] <_|Nix|_> robschmuecker: Not bad ...
[14:07:53] <_|Nix|_> robschmuecker: I bet Wilto can do it with pure CSS ...
[14:09:01] <robschmuecker> I guess one could make it theme-specific and hence theme-a would look similar but say theme-e it would be say a yellow overlay with black text or such.
[14:09:53] <robschmuecker> I agree it would be best to keep it as CSS-based as possible.  However there needs to be some method to instantiate and remove the "mask" when appropriate.
[14:11:37] <robschmuecker> I guess it could be a basic mod of the "pageload" that we currently already have.
[14:12:49] <robschmuecker> all we need is the mask behind the current "page loading widget" to disable user interaction on the target element.
[14:15:30] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 4 new commits to sequence-tests: http://git.io/SwBbdQ
[14:15:30] <jqmobilecommit> [jquery-mobile/sequence-tests] [sequence tests] Test page1 -> dialog <- back -> page2 - Gabriel Schulhof
[14:15:30] <jqmobilecommit> [jquery-mobile/sequence-tests] [testHelper] Setting warning timeout for detailedEventCascade to a larger value to help ensure tests work even if the CPU becomes bogged down - Gabriel Schulhof
[14:15:30] <jqmobilecommit> [jquery-mobile/sequence-tests] [sequence tests] Test page1 -> popup <- back -> page2 - Gabriel Schulhof
[15:49:52] <uGoMobi_> agcolom: the version in the footer doesn't need to be updated. Just like the front page ribbon it's injected by JS with version.txt as source.
