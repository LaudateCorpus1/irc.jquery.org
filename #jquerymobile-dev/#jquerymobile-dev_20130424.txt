[02:14:20] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #334: STILL FAILING in 11 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/334/
[02:15:40] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/-OtIWg
[02:15:40] <jqmobilecommit> 13jquery-mobile/06next 1457b245e 15Gabriel Schulhof: Collapsible: Get rid of buttonMarkup.
[02:28:15] <skeuomorf> Hello guys, I am making an app using jquery mobile, here's the code for the app http://jsbin.com/uwuzif/1/ my problem is that when I try to dynamically add a columntoggle table on the click of #total_results_button the table is not displayed correctly at all, I've tried using trigger('create')  and table-columntoggle('refresh') and still it isn't displaying properly
[02:29:33] <skeuomorf> console shows me an error (Uncaught ReferenceError: columntoggle is not defined) so I am guessing it's because the content is loaded after the DOM is loaded, how can I solve this and get the tables to render properly?
[02:31:28] <uGoMobi_> skeuomorf: #jquery is the channel for support (also for jQuery Mobile)
[02:31:49] <skeuomorf> ok, I am terribly sorry, thanks :)
[02:31:54] <uGoMobi_> lol
[02:31:56] <uGoMobi_> np
[02:32:02] <frequent> uGoMobi_: hey
[02:32:10] <uGoMobi_> hey frequent 
[02:32:25] <frequent> I'm playing around with the table widget. Question:
[02:32:56] <frequent> right now both CSS and input set whether a column should be visible or not.
[02:33:47] <frequent> I'm wondering whether CSS should override input, because on small displays CSS is correct, but I sometimes have a checked input although the column is hidden
[02:34:25] <frequent> So instead of checking for this.checked, would it make sense to check for visibility set by responsive CSS?
[02:35:49] <frequent> but I'm still trying to constantly reproduce...
[02:38:42] <uGoMobi_> frequent: on Chrome?
[02:38:50] <frequent> Firefox
[02:38:55] <uGoMobi_> ok
[02:39:11] <uGoMobi_> don't really see what you mean
[02:39:15] <uGoMobi_> will try FF
[02:39:19] <frequent> wait
[02:39:25] <frequent> let me try to pin it down before you look
[02:39:30] <frequent> I get back in a bit
[02:40:36] <uGoMobi_> ok
[02:42:05] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/nVeAjg
[02:42:05] <jqmobilecommit> 13jquery-mobile/06next 148e44d33 15Gabriel Schulhof: Collapsible: Remove buttonMarkup AMD-dependency.
[02:47:28] <_|Nix|_> uGoMobi: Ping!
[02:47:39] <uGoMobi> _|Nix|_: Pong!
[02:49:33] <_|Nix|_> uGoMobi: Hey! I'm trying to get rid of the buttonMarkup call from navbar ...
[02:49:43] <_|Nix|_> uGoMobi: It sets iconpos, but it does not set an icon.
[02:49:50] <_|Nix|_> uGoMobi: That's kinda useless ...
[02:50:08] <_|Nix|_> uGoMobi: Can navbar buttons have icons?
[02:50:46] <uGoMobi> _|Nix|_: Hey! You can only set iconpos on the wrapper; all navbar items have the same iconpos
[02:51:18] <uGoMobi> however, each item can have different icon of course
[02:51:32] <_|Nix|_> uGoMobi: Interesting ... the navbar converts the buttons to buttonMarkup, meaning that it has to go through all of them and check each one for what icon it has.
[02:53:20] <uGoMobi> _|Nix|_: I think we have to do it similar to how it's done for listviews
[02:54:28] <_|Nix|_> uGoMobi: Here's my replacement for the .buttonMarkup() call:
[02:54:30] <_|Nix|_> 		$navbtns
[02:54:31] <_|Nix|_> 			.addClass( "ui-btn ui-btn-" + $.mobile.getInheritedTheme( $navbar, "a" ) + " ui-btn-inline" )
[02:54:34] <_|Nix|_> 			.each( function() {
[02:54:36] <_|Nix|_> 				var icon = $.mobile.getAttribute( this, "icon", true );
[02:54:39] <_|Nix|_> 				if ( icon ) {
[02:54:41] <_|Nix|_> 					$( this ).addClass( "ui-icon ui-icon-" + icon + " ui-btn-icon-" + iconpos );
[02:54:45] <_|Nix|_> 				}
[02:54:47] <_|Nix|_> 			});
[02:56:29] <uGoMobi> _|Nix|_: you have to add var icon
[02:56:48] <_|Nix|_> I did ... 
[02:56:49] <uGoMobi> and that should check the data-icon attribute on the anchor
[02:56:57] <_|Nix|_> It does.
[02:57:05] <uGoMobi> _|Nix|_: ah sorry, missed that line
[02:57:11] <_|Nix|_> NP.
[02:57:33] <uGoMobi> and the problem is icon is undefined?
[02:57:56] <_|Nix|_> uGoMobi: Nono ... it works now.
[02:59:34] <_|Nix|_> uGoMobi: I dunno ... I'm thinking we might have to keep $.fn.buttonMarkup, if only to add/remove classes ... 
[03:00:38] <_|Nix|_> uGoMobi: Still. Let's stick to the plan. Let's get rid of it and see what we lose. If that which we lose is worth keeping, then let's keep it.
[03:01:33] <uGoMobi> _|Nix|_: what would be the benefit of having $.fn.buttonMarkup adding the classes instead of the widget itself?
[03:02:06] <_|Nix|_> uGoMobi: Because it could check with $.fn.buttonMarkup.defaults in case some of the options are absent.
[03:02:09] <uGoMobi> _|Nix|_: I see the benefit for links with data-role="button" because then you can enhance without using a widget
[03:02:44] <_|Nix|_> uGoMobi: That way you can specify global defaults and calls to buttonMarkup need only specify the override rather than the whole spectrum of options.
[03:02:45] <uGoMobi> _|Nix|_: but those defaults are different for each widget
[03:03:04] <_|Nix|_> uGoMobi: Not necessarily. What if I don't want corners by default?
[03:03:16] <_|Nix|_> uGoMobi: Or shadows?
[03:04:43] <_|Nix|_> uGoMobi: But don't get me wrong. This is just a suspicion. I'm still in favour of getting rid of it. When we do get rid of it we will know whether we really need it or not.
[03:05:10] <uGoMobi> _|Nix|_: yeah I understand
[03:05:34] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/hdB9Ww
[03:05:34] <jqmobilecommit> 13jquery-mobile/06next 1492497ab 15Gabriel Schulhof: Navbar: Get rid of buttonMarkup.
[03:05:36] <uGoMobi> _|Nix|_: removing buttonMarkup is not the goal
[03:05:54] <_|Nix|_> uGoMobi: I suspect the widget review will reveal a great deal about whether we need it or not.
[03:05:56] <uGoMobi> _|Nix|_: it's only about the most effective way of doing things
[03:07:08] <uGoMobi> _|Nix|_: what I have in mind as next step is making things work when you set style classes on the container
[03:07:19] <uGoMobi> _|Nix|_: like we discussed with toddmparker yesterday
[03:08:17] <uGoMobi> _|Nix|_: maybe that could also take care of the defaults
[03:09:55] <_|Nix|_> uGoMobi: Yeah, not bad, but we might have to get rid of ui-body-x and ui-bar-x and only have one class that signifies swatch.
[03:10:21] <uGoMobi> _|Nix|_: yeah was thinking in the same direction
[03:10:38] <uGoMobi> _|Nix|_: makes theme inheritance easier
[03:10:38] <_|Nix|_> uGoMobi: In my own na√Øve way I'm thinking that even something as simple as a one-letter class for the swatch ...
[03:10:43] <_|Nix|_> Definitely!
[03:11:04] <_|Nix|_> uGoMobi: Is it kosher to have one-letter class names?
[03:11:15] <uGoMobi> don't think so
[03:11:52] <frequent> uGoMobi: I'm doing that a lot :-(
[03:12:13] <_|Nix|_> uGoMobi: OK then ui-a?
[03:12:25] <uGoMobi> and no problem withs classnames "a" and "p"?
[03:12:55] <_|Nix|_> uGoMobi: Why would there be a problem? .a and .p ...
[03:12:57] <uGoMobi> well maybe not problems but at least confusing
[03:13:01] <frequent> mh...
[03:13:08] <_|Nix|_> Yeah ... confusing ...
[03:13:13] <frequent> well I'm always using .t as translation class
[03:13:40] <frequent> but you are right
[03:14:09] <_|Nix|_> K, well, "ui-x" is not so bad IMO.
[03:14:45] <_|Nix|_> If we can set that on a whole tree, we can make that whole tree have that swatch ...
[03:15:31] <uGoMobi> well we still have to make overrides work
[03:15:32] <_|Nix|_> Whew! slider and select and we're done!
[03:16:16] <_|Nix|_> uGoMobi: Well, if an element inside the tree sets its own ui-y then that will take precedence, no?
[03:16:57] <uGoMobi> _|Nix|_: can be a problem if you have a page div with ui-b and then a listview with ui-a
[03:17:20] <uGoMobi> if the rule is not more specific
[03:17:38] <_|Nix|_> uGoMobi: That's what I'm asking, I guess ...
[03:18:04] <uGoMobi> could mean we have to add a bunch of selectors to the rules for each widget
[03:18:05] <_|Nix|_> uGoMobi: We also have to make sure that ui-x contains only stuff that will be inherited.
[03:18:25] <uGoMobi> background can't be inherited
[03:18:36] <uGoMobi> that's important part of a swatch style
[03:18:47] <_|Nix|_> uGoMobi: Oooh ... that's bad.
[03:19:33] <_|Nix|_> uGoMobi: How can we even attempt it then?
[03:19:54] <_|Nix|_> uGoMobi: Especially if the background is a gradient.
[03:21:06] <_|Nix|_> uGoMobi: Oh ... andother snag: slider uses ui-btn-down-x for the track ... what can we use instead of that?
[03:21:36] <_|Nix|_> uGoMobi: Can we add ui-btn-down-x to ui-btn-x:active?
[03:21:39] <uGoMobi> _|Nix|_: huh... I thought I already changed that to ui-body-
[03:22:40] <_|Nix|_> uGoMobi: Well, I haven't looked yet, but ui-body-x with a background of ui-body-x has 0 contrast, right?
[03:22:58] <uGoMobi> _|Nix|_: right, it was only temporary :)
[03:23:05] <_|Nix|_> uGoMobi: Aha!
[03:23:14] <uGoMobi> _|Nix|_: read-only lists have similar issue
[03:23:22] <uGoMobi> but first markup, then theme :)
[03:24:05] <_|Nix|_> uGoMobi: OK.
[03:24:09] <uGoMobi> maybe we need another style group for thos kind of things don't know yet
[03:31:25] <_|Nix|_> uGoMobi: OK ... the slider button must have some custom styling ... If I remove the call to .buttonMarkup and replace it with the appropriate classes, the result is a huuuuge button ...
[03:32:17] <uGoMobi> _|Nix|_: yeah I know
[03:32:33] <uGoMobi> _|Nix|_: can be avoided by adding ui-btn-icon-text
[03:32:46] <uGoMobi> _|Nix|_: but I prefer to just add an override in the slider CSS
[03:33:05] <uGoMobi> it's the default button padding that causes this
[03:34:40] <_|Nix|_> uGoMobi: OK. So turn off the padding?
[03:35:25] <uGoMobi> _|Nix|_: yeah, ui-slider-handle { padding: 0 } and set a height and width
[03:35:40] <uGoMobi> _|Nix|_: but i guess we are already doing that
[03:35:59] <_|Nix|_> uGoMobi: Yep. Setting the padding to 0 fixed it.
[03:36:17] <uGoMobi> _|Nix|_: how about the flip toggle?
[03:36:27] <uGoMobi> that one good too?
[03:36:28] <_|Nix|_> uGoMobi: Checking ...
[03:38:09] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/yObYFA
[03:38:09] <jqmobilecommit> 13jquery-mobile/06next 14ac9892e 15Jasper de Groot: Button: Made sure that icon-only buttons always have white-space nowrap.
[03:39:07] <_|Nix|_> uGoMobi: For the switch the corners are off. The background has the pointier corners but the button is a circle.
[03:39:32] <_|Nix|_> uGoMobi: I think we need to give the switch button the pointy corners.
[03:39:50] <uGoMobi> _|Nix|_: ah, I already know the cause of that
[03:39:53] <uGoMobi> one sec
[03:40:06] <_|Nix|_> uGoMobi: I dunno ... should we give the slider button the pointy corners too?
[03:40:47] <_|Nix|_> uGoMobi: We need to change ui-btn-corner-all to ui-corner-all I think ...
[03:40:58] <_|Nix|_> uGoMobi: We're getting rid of ui-btn-corner-all, right?
[03:41:22] <uGoMobi> _|Nix|_: yes
[03:41:27] <uGoMobi> _|Nix|_: I already changed that
[03:41:31] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/GKLKvw
[03:41:31] <jqmobilecommit> 13jquery-mobile/06next 1427bf453 15Jasper de Groot: Theme: Different corner styling for slider handle.
[03:41:55] <uGoMobi> _|Nix|_: but for 1.4 both ui-corner-all and ui-btn-corner-all will work
[03:42:33] <_|Nix|_> uGoMobi: OK.
[03:42:34] <uGoMobi> _|Nix|_: in the theme CSS it's .ui-btn.ui-corner-all, .ui-btn-corner-all {}
[03:43:36] <uGoMobi> _|Nix|_: in the widgets I don't use ui-btn-corner-all anymore
[03:43:45] <_|Nix|_> uGoMobi: Corners are good now, but the button inside the flip switch has a tiny clearance wrt. the track.
[03:43:52] <_|Nix|_> uGoMobi: Good.
[03:44:24] <_|Nix|_> uGoMobi: Not sure if that's undesired or not ...
[03:44:33] <uGoMobi> _|Nix|_: I can give that a look
[03:45:19] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/Y4Sz4w
[03:45:19] <jqmobilecommit> 13jquery-mobile/06next 14f1f9827 15Gabriel Schulhof: Slider: Get rid of buttonMarkup.
[03:45:28] <_|Nix|_> There's the change ...
[03:47:54] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/FCbt_w
[03:47:54] <jqmobilecommit> 13jquery-mobile/06next 14df87173 15Jasper de Groot: Checkbox: replaced ui-btn-corner-all by ui-corner-all.
[03:49:29] <_|Nix|_> Wow! Only select remains!
[03:50:36] <uGoMobi> _|Nix|_: Re: flip toggle. I think that space is intentional
[03:50:49] <_|Nix|_> uGoMobi: OK. Great!
[03:50:59] <uGoMobi> _|Nix|_: the mini version has an issue though
[03:51:05] <_|Nix|_> uGoMobi: My sense of aesthetics is non-existent :)
[03:51:34] <uGoMobi> _|Nix|_: well I wouldn't mind if we would remove that space
[03:52:01] <uGoMobi> _|Nix|_:  we can look at that when we work on new default theme
[03:52:09] <_|Nix|_> uGoMobi: I think even with my absent sense of aesthetics I can see the problem with the mini switch :)
[03:52:46] <uGoMobi> _|Nix|_: I also like a round slider handle with wide focus style
[03:53:07] <uGoMobi> _|Nix|_: that mini style is so annoying
[03:53:34] <uGoMobi> _|Nix|_: everywhere you have to make rules more specific to override mini styles
[03:56:14] <_|Nix|_> uGoMobi: I may have to add the ui-mini class to the anchor as well ...
[03:56:33] <_|Nix|_> uGoMobi: It doesn't seem to inherit from the wrapper.
[03:56:44] <_|Nix|_> uGoMobi: ... for the switch I mean ...
[03:59:57] <_|Nix|_> uGoMobi: OK ... that didn't make a difference ...
[04:00:36] <uGoMobi> _|Nix|_: just add padding 0 to this rule div.ui-slider-switch.ui-mini {
[04:00:45] <uGoMobi> that should do the trick
[04:02:33] <_|Nix|_> uGoMobi: .ui-slider-switch.ui-mini .ui-slider-handle already has padding: 0;
[04:02:54] <uGoMobi> _|Nix|_: not the handle
[04:02:59] <uGoMobi> the application
[04:03:06] <uGoMobi> div.ui-slider-switch.ui-mini
[04:04:16] <_|Nix|_> That's good, but the button should also be smaller, right? Just like the slider's button. Or not?
[04:04:40] <uGoMobi> _|Nix|_: it is already a bit smaller
[04:04:50] <uGoMobi> _|Nix|_: doesn't need to be as small as the slider handle
[04:05:07] <_|Nix|_> uGoMobi: OK. Understood. I'll make that change.
[04:05:34] <_|Nix|_> uGoMobi: I've also gotten rid of references to ui-btn-corner-all from the slider source.
[04:05:38] <uGoMobi> _|Nix|_: +1 to one intermediate sized slider and flip toggle
[04:05:49] <uGoMobi> _|Nix|_: awesome
[04:09:11] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 2 new commits to 06next: 02http://git.io/jutvWw
[04:09:11] <jqmobilecommit> 13jquery-mobile/06next 1402c409e 15Gabriel Schulhof: Slider: Replace references to class ui-btn-corner-all with references to class ui-corner-all
[04:09:11] <jqmobilecommit> 13jquery-mobile/06next 142f3a0e0 15Gabriel Schulhof: Slider: CSS: Fix mini slider.
[04:09:36] <_|Nix|_> This is sweet!
[04:10:49] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/xTus_A
[04:10:49] <jqmobilecommit> 13jquery-mobile/06next 14fd4567d 15Jasper de Groot: Controlgroup: Fixed the corner styling.
[04:11:13] <uGoMobi> _|Nix|_: nice to work on this together! too bad we don't have a dev summit now ;)
[04:11:20] <_|Nix|_> :)
[04:11:31] <_|Nix|_> uGoMobi: Where's a dev summit when you need one? :)
[04:11:43] <uGoMobi> _|Nix|_: exactly
[04:19:15] <frequent> _|Nix|_: uGoMobi: nice work!
[04:19:31] <uGoMobi> frequent: thanks!
[04:19:42] <frequent> _|Nix|_: you should see how long I need to write your name on a french keyboard...
[04:20:20] <frequent> uGoMobi: about the table widget earlier: http://bit.ly/12HzBJ2 (toggle refresh example). In Firefox, if you start fullscreen and then shrink-screen, the responsive classes kick in correctly hiding columns. But when you resize back, the columns stay hidden, because the matching input is unchecked.
[04:21:42] <_|Nix|_> frequent: My name? You mean _ is hard to find on a French KB?
[04:22:02] <_|Nix|_> frequent: _ + Tab is sufficient for autocompleting my name ...
[04:22:11] <frequent> yes. especially |
[04:22:21] <_|Nix|_> frequent: So, autocomplete ...
[04:22:29] <frequent> ah... 
[04:22:32] <_|Nix|_> frequent: ... or apply a US layout.
[04:22:35] <frequent> learned something today :-)
[04:23:04] <_|Nix|_> frequent: I have a US layout applied onto my Finnish keyboard.
[04:23:23] <_|Nix|_> frequent: I can switch back and forth between US and Finnish layoutrrrs via Ctrl+Space.
[04:23:42] <uGoMobi> frequent: I see the problem
[04:23:59] <frequent> uGoMobi: should be same as #5839
[04:24:06] <uGoMobi> frequent: looks like we need to store the input value
[04:24:21] <frequent> I will try to fix
[04:25:04] <uGoMobi> frequent: https://github.com/jquery/jquery-mobile/issues/5841#issuecomment-16861823
[04:25:06] <b-ot> uGoMobi: Issue #5841 by toddparker (3w 21h ago): Table: Column Toggle missing refresh method
[04:25:21] <frequent> _|Nix|_: (autocompleted in recordtime): yes, something like this with German/French/US I will set up. Thx
[04:25:25] <uGoMobi> frequent: maybe that is the same as well
[04:25:43] <frequent> yup
[04:26:42] <frequent> uGoMobi: I'm thinking if it would make more sense if the toggling ware purely done via CSS and on resize the toggle menu is updated?
[04:27:09] <frequent> was done
[04:28:24] <uGoMobi> frequent: not sure if I understand what you mean
[04:30:24] <uGoMobi> how do we currently hide the column if you uncheck the input?
[04:30:57] <frequent> uGoMobi: on change we check for this.checked and hide/show the column
[04:31:00] <frequent> this is ok
[04:31:12] <frequent> I'm thinking of self.update() on resize
[04:31:24] <frequent> let me try a quick example
[04:31:58] <uGoMobi> frequent: yeah, updating on resize sounds good
[04:33:02] <uGoMobi> frequent: but if I make the screen smaller and columns are hidden it seems like we update the input
[04:33:12] <frequent> yes
[04:33:23] <uGoMobi> how do we do that?
[04:33:54] * uGoMobi is thinking that it might be easier if he looks at the code
[04:34:07] <frequent> :-)
[04:34:13] <frequent> inside self.update()
[04:34:46] <frequent> which sets this.checked and eventually calls checkboxradio(refresh)
[04:34:52] <uGoMobi> I see
[04:35:12] <uGoMobi> then I still think it might be a good idea to store the input settings
[04:36:01] <uGoMobi> or do you want to not update the input and just change the input icon with CSS?
[04:36:09] <frequent> hm
[04:36:25] <uGoMobi> not sure if that's a good solution
[04:36:29] <frequent> I think the problem is after setting this.checked and hiding a column, there is no way to show  it again on resize
[04:36:43] <frequent> by CSS
[04:36:55] <uGoMobi> frequent: exactly, because we don't know anymore what was the original setting
[04:36:55] <frequent> give me a few mins
[04:37:01] <frequent> correct
[04:37:02] <uGoMobi> but we can store that
[04:37:48] <frequent> I will try to versions, one with store, one with ..... magic
[04:38:02] <uGoMobi> frequent: great
[04:38:06] <uGoMobi> I like magic
[04:39:31] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/JnSgYg
[04:39:31] <jqmobilecommit> 13jquery-mobile/06next 14d4c48b6 15Jasper de Groot: Slider: padding 0 for mini slider track.
[04:46:21] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 2 new commits to 06next: 02http://git.io/491Rjg
[04:46:21] <jqmobilecommit> 13jquery-mobile/06next 14eae4397 15Jasper de Groot: Demos: Updated individual collapsibles "single border" example.
[04:46:21] <jqmobilecommit> 13jquery-mobile/06next 142490982 15Jasper de Groot: Demos: Updated listview custom icon example.
[04:53:19] <jqmobilecommit> [13jquery-mobile] 15uGoMobi opened issue #5931: Loader: remove deprecated code from widget and update docs  02http://git.io/b2SLkw
[06:43:14] <frequent> uGoMobi: ping
[06:43:52] <frequent> Ok. check this sample: http://bit.ly/17WKxop (the "magic" one)
[06:44:11] <frequent> I did the following:
[06:44:42] <frequent> table.js > also store the header cell on itself (along with column cells)
[06:45:36] <frequent> columntoggle.js > self.update() will now also be called when toggling the popup
[06:46:20] <frequent> columntoggle.js > self.update() either loops the clicked input or the whole switchboard. By default it only updates the input status to what the CSS shows (hidden column = unselect, visible column = select)
[06:47:09] <frequent> columntoggle.js > self.update() - when the user overrides, we set an attribute on this input, which prevents it from being updates according to CSS and depending on show/hide show/hides the respective column
[06:47:44] <frequent> pro: no need to add and remove classes
[06:48:44] <frequent> con: once a user toggles a column, this column is "stuck" on "show" or "hide" = I have no way of going back to untoggled state
[06:55:55] <frequent> yet
[08:17:44] <toddmparker> Good morning
[08:18:51] <frequent> toddmparker: afternoon
[08:19:53] <arschmitz> morning toddmparker
[08:20:00] <toddmparker> hey frequent and arschmitz 
[08:20:02] <toddmparker> how goes?
[08:20:08] <toddmparker> catching up
[08:21:14] <arschmitz> toddmparker: pretty good trying to finish up work on removing page sections been crazy busy last couple weeks slowing work down
[08:24:27] <frequent> toddmparker: very busy here, too. I did a fix attempt for #5841 and #5839. Where should I PR to?
[08:24:46] <frequent> what branch?
[08:35:17] <johnbender> toddmparker: is the dev meeting this morning or was that last wednesday?
[08:48:04] <toddmparker> last wednesday
[08:48:10] <toddmparker> off the hook
[09:41:58] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 1 new commit to 06content-widget: 02http://git.io/MED8lw
[09:41:58] <jqmobilecommit> 13jquery-mobile/06content-widget 14248c68f 15John Bender: split out dialog handling, test
[12:36:03] <arschmitz> toddmparker: you around?
[13:03:49] <arschmitz> uGoMobi: you around?
[13:15:50] <_|Nix|_> uGoMobi: http://jsperf.com/listview-master-vs-next
[13:17:09] <arschmitz> hey _|Nix|_:
[13:17:57] <_|Nix|_> arschmitz: Hey!
[13:18:09] <arschmitz> quick conceptual question for you
[13:18:35] <arschmitz> if you had a header that was not inside a page it would persist automaticly of course
[13:18:50] <arschmitz> so if you then navigate to a page that does have a header
[13:19:13] <arschmitz> _|Nix|_ do you think we should handle that situation in some way or leave it to devs to deal with?
[13:19:14] <_|Nix|_> ... stack ... ?
[13:19:31] <arschmitz> _|Nix|_ if we do nothing thats what would happen
[13:19:39] <_|Nix|_> Our work here is done.
[13:19:58] <arschmitz> the other option would be to hide the persistant one if you load a page that contains a header
[13:20:20] <_|Nix|_> Why? Who are we to judge which one has precedence?
[13:20:53] <arschmitz> yeah i dont disagree just thought how to handle this is worth some though
[13:20:56] <arschmitz> t
[13:21:05] <_|Nix|_> I say leave it as is, and if there's an uproar we can fix it in the patch release.
[13:21:13] <arschmitz> ok
[13:22:46] <arschmitz> have toolbars and nav bars pretty close to ready page sections gone toolbars widget created fixedtoolbars and work arounds both extend the original toolbars widget
[13:23:26] <arschmitz> makes transitions with persistant toolbars perfectly steady and smooth
[13:23:38] <arschmitz> because they are no longer part of the transition
[13:23:42] <_|Nix|_> Awesome!
[13:23:57] <arschmitz> yeah 
[13:24:08] <arschmitz> thinking i want to look closer at next branch though
[13:24:21] <arschmitz> because navbars and toolbars both use buttonmarkup
[13:25:13] <_|Nix|_> arschmitz: It's important to restrict activity on that branch to the markup-reduction-related stuff. More than once I looked at the code and I had the temptation to refactor ... but that will make merging harder.
[13:25:34] <_|Nix|_> arschmitz: If you do look at "next", please don't be tempted as I was :)
[13:25:47] <arschmitz> i didnt say i was going to do anything i said look at it
[13:27:03] <_|Nix|_> arschmitz: I know, I just wanted to warn you ahead of time ... it's very tempting, but next isn't even off the head of master, it's off some older commit on master ...
[13:27:15] <_|Nix|_> arschmitz: We're gonna have one hell of a merge on our hands ...
[13:27:57] <arschmitz> espically once major things change like if i merge this stuff into master
[13:28:54] <_|Nix|_> No doubt ... and we still have things using optionDemultiplexer ...
[13:29:38] <arschmitz> that was in master?
[13:29:56] <_|Nix|_> Yep ... that needs to go ...
[13:30:20] <arschmitz> yup should be pretty easy to switch to setOptions though
[13:31:19] <_|Nix|_> arschmitz: Yeah, but that switch will itself introduce snags that can hold up merges.
[13:31:36] <_|Nix|_> arschmitz: I guess we just gotta power through.
[13:51:58] <uGoMobi> arschmitz: I am here now
[13:54:46] <arschmitz> hey uGoMobi: just wanted your oppinion
[13:54:59] <arschmitz> if someone has a toolbar outside a page so it persists
[13:55:05] <uGoMobi> hey arschmitz 
[13:55:08] <arschmitz> and then load a page that has its on header
[13:55:25] <arschmitz> should we try to handle that situation or just leave it to the dev to deal with?
[13:55:26] <uGoMobi> arschmitz: reading what you discussed with _|Nix|_ now
[13:55:31] <arschmitz> ok
[13:55:45] <uGoMobi> arschmitz: I say leave it
[13:55:58] <uGoMobi> arschmitz: some would want us to handle it, some don't
[13:56:12] <arschmitz> yeah i can see it both ways 
[13:56:13] <uGoMobi> but if we handle it it might be hard to override
[13:56:31] <uGoMobi> and easier to handle yourself if we don't handle it
[13:56:32] <arschmitz> nah if we did we would just need to be smart and expose it as an option
[13:56:52] <arschmitz> but i think im in favor of leaving to the devs anyway
[13:56:52] <uGoMobi> right
[13:57:06] <arschmitz> just wanted opinions to see if any one had a strong dissenting oppinion
[13:57:17] <uGoMobi> yeah I understand
[13:57:52] <uGoMobi> _|Nix|_: I merged master into next at some point... shouldn't I have done that?
[13:58:17] <arschmitz> im trying to re write these in such a way that they will be easy to convert to your new button stuff once both are in master
[13:58:26] <arschmitz> or ready to go into master rather
[13:58:37] <uGoMobi> arschmitz: great
[13:58:52] <arschmitz> isolated the buttonmarkup call in its own private method
[13:59:13] <arschmitz> so that it can just be changed to new way without worrying about rest of widget
[13:59:19] <_|Nix|_> uGoMobi: No, that's great!
[13:59:23] <_|Nix|_> uGoMobi: Merge away ...
[13:59:30] <uGoMobi> in how many different refactor branches are we working at the moment?
[13:59:59] <arschmitz> im working in one you have next and johnbender has container
[14:00:08] <arschmitz> i "think" thats it
[14:00:12] <_|Nix|_> uGoMobi: I guess at least three ... next, content-widget, and arschmitz's stuff ...
[14:00:18] <uGoMobi> okay
[14:00:34] <_|Nix|_> uGoMobi: I got rid of buttonMarkup out of select.
[14:00:45] <uGoMobi> _|Nix|_: awesome!
[14:00:49] <uGoMobi> _|Nix|_: many issues?
[14:01:07] <arschmitz> mine because it pretty much wholesale replaces files should be easy to merge regardless of what happens elsewhere
[14:01:45] <_|Nix|_> uGoMobi: Not really ... it's only that the button text ends up a sibling of the native select.
[14:01:55] <_|Nix|_> uGoMobi: No problem though.
[14:02:29] <uGoMobi> _|Nix|_: does the native select have class ui-btn-hidden?
[14:02:37] <arschmitz> ok well i gota run have meetings tonight
[14:02:42] <uGoMobi> _|Nix|_: I think it should be identical to input type button
[14:02:49] <arschmitz> well have some stuff for you guys to check out tomorrow though
[14:02:49] <uGoMobi> good night arschmitz 
[14:02:55] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/QBf3WQ
[14:02:55] <jqmobilecommit> 13jquery-mobile/06next 1463bc9a8 15Gabriel Schulhof: Select: Get rid of buttonMarkup.
[14:03:02] <_|Nix|_> arschmitz: L8R
[14:03:12] <_|Nix|_> arschmitz: Don't have too much fun :)
[14:03:20] <uGoMobi> lol
[14:03:26] <arschmitz> ha ha yeah will be an intresting one
[14:03:35] <arschmitz> meeting with a bar owner about a website lol
[14:04:15] <arschmitz> and intresting because its the biggest gay bar in state ( my wifes friend owns it though so iv been there before ha ha ha) 
[14:04:16] <_|Nix|_> arschmitz: Ask him to pay you in free drinks.
[14:04:25] <_|Nix|_> arschmitz: NM.
[14:04:32] <arschmitz> lol
[14:04:33] <uGoMobi> ...
[14:04:48] <_|Nix|_> *scratch head*
[14:05:08] <arschmitz> hey website is a website
[14:05:13] <uGoMobi> true
[14:05:18] <_|Nix|_> arschmitz: Definitely.
[14:05:22] <arschmitz> makes no difference to me what its for
[14:05:32] <_|Nix|_> arschmitz: Agreed 100%.
[14:05:49] <_|Nix|_> uGoMobi: The native select has no classes on it whatsoever.
[14:06:14] <uGoMobi> _|Nix|_: just pulled... going to check how we do it there
[14:06:26] <arschmitz> well later all
[14:06:31] <_|Nix|_> arschmitz: L8R
[14:06:35] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 4 new commits to 06content-widget: 02http://git.io/Fu1Fmg
[14:06:35] <jqmobilecommit> 13jquery-mobile/06content-widget 14648fcd4 15John Bender: rename handleHashChange to handleNavigate
[14:06:35] <jqmobilecommit> 13jquery-mobile/06content-widget 149b7605f 15John Bender: add tests for handleUrl, strip hash explicitly
[14:06:35] <jqmobilecommit> 13jquery-mobile/06content-widget 14088a514 15John Bender: test for initial content when the url is base and the initial destination hash
[14:07:04] <johnbender> almost done splitting up handle hashchange o.O
[14:07:18] <_|Nix|_> johnbender: "splitting up"?
[14:07:43] <johnbender> my approach the refactor is to move things into the widget
[14:07:49] <johnbender> and break them up so I can test them
[14:07:58] <_|Nix|_> johnbender: Roger.
[14:08:09] <johnbender> then at least things are in bits that can be reasoned about
[14:08:17] <_|Nix|_> uGoMobi: D'you see that perf link I sent you? http://jsperf.com/listview-master-vs-next
[14:08:21] <johnbender> I'm also sequestering extern dependencies in methods
[14:08:40] <_|Nix|_> uGoMobi: A nice chunk of perf out of this refactor.
[14:09:07] <_|Nix|_> uGoMobi: ... and that's just the creation part. I'm sure the performance after creation benefits from the reduced DOM size.
[14:09:11] <uGoMobi> _|Nix|_: yeah I saw that
[14:10:03] <uGoMobi> _|Nix|_: select looks good
[14:10:17] <uGoMobi> _|Nix|_: will add a custom select demo page
[14:10:33] <uGoMobi> it is missing in the demo center
[14:11:11] <_|Nix|_> uGoMobi: Cool!
[14:11:18] <_|Nix|_> uGoMobi: I'll have a look at custom select next.
[14:12:20] <_|Nix|_> uGoMobi: D'oh! Forgot to get rid of buttonMarkup AMD-dependency.
[14:12:58] <uGoMobi> _|Nix|_: yeah, I think I removed them in the widgets I have been working
[14:13:03] <_|Nix|_> Fixed.
[14:13:28] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/XY9C1A
[14:13:28] <jqmobilecommit> 13jquery-mobile/06next 1481643ca 15Gabriel Schulhof: Select: Get rid of buttonMarkup AMD-dependency.
[14:15:31] <uGoMobi> _|Nix|_: did a search for "buttonMarkup"... there are a few more
[14:16:34] <_|Nix|_> uGoMobi: There's only one more in the lib ... js/widgets/forms/select.custom.js:75
[14:16:47] <_|Nix|_> uGoMobi: I guess in the demos ...
[14:17:56] <uGoMobi> _|Nix|_: slider and rangeslider
[14:18:04] <uGoMobi> table column toggle
[14:18:48] <_|Nix|_> uGoMobi: Those are leftover deps, not calls.
[14:19:00] <_|Nix|_> uGoMobi: find js -type f | xargs grep -nH '\.buttonMarkup('
[14:19:06] <_|Nix|_> That searches for calls.
[14:19:19] <_|Nix|_> uGoMobi: You're right though, we should get rid of the AMD deps.
[14:20:00] <uGoMobi> only page.sections needs it if we use buttonMarkup for anchors with data-role="button"
[14:23:06] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 1 new commit to 06content-widget: 02http://git.io/mYFRmA
[14:23:06] <jqmobilecommit> 13jquery-mobile/06content-widget 1444d6702 15John Bender: remove reference to first page
[14:24:08] <gseguin> hi all
[14:24:26] <gseguin> sorry for not being to responsive, I'm off this week
[14:24:28] <uGoMobi> hey gseguin 
[14:24:33] <gseguin> s/to/too
[14:24:50] <gseguin> hey uGoMobi
[14:32:27] <_|Nix|_> uGoMobi: I think arschmitz will take care of page.sections ...
[14:33:11] <uGoMobi> _|Nix|_: yeah
[14:33:23] <uGoMobi> _|Nix|_: I see some buttonMarkup stuff in navigation.js
[14:33:56] <_|Nix|_> uGoMobi: That's just a comment. It looks for the data set in buttonMarkup and uses it to avoid having to run .closest()
[14:34:02] <_|Nix|_> uGoMobi: I'll get rid of that.
[14:34:18] <_|Nix|_> uGoMobi: We're gonna have to change the way we apply the active class anyway.
[14:34:20] <uGoMobi> _|Nix|_: btnEls = $.data( target.parentNode, "buttonElements" );
[14:34:38] <uGoMobi> buttonElements data is (was) created in buttonMarkup
[14:34:41] <_|Nix|_> uGoMobi: That will always return null if buttonElements is never set.
[14:35:06] <_|Nix|_> uGoMobi: The function doesn't /rely/ on btnEls.
[14:35:16] <arschmitz> Yeah don't worry about page sections
[14:35:19] <_|Nix|_> uGoMobi: It's good if it's set, but if it's not, it knows what to do.
[14:35:58] <_|Nix|_> uGoMobi: So don't worry about nav. It doesn't actually need buttonMarkup.
[14:36:10] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/O0F_NQ
[14:36:10] <jqmobilecommit> 13jquery-mobile/06next 14039fded 15Jasper de Groot: Remove buttonMarkup dependencies.
[14:36:14] <_|Nix|_> uGoMobi: I'll clean it up to not even refer to buttonMarkup.
[14:36:17] <uGoMobi> _|Nix|_: ok, but isn't this superfluous then?
[14:36:26] <uGoMobi> _|Nix|_: ok
[14:36:57] <_|Nix|_> uGoMobi: The select.custom.js call is for some kind of close button, so it should be really trivial.
[14:37:29] <_|Nix|_> uGoMobi: Oh, it's for the multiple select case. It needs a close button.
[14:37:41] <_|Nix|_> Trivial.
[14:37:45] <uGoMobi> _|Nix|_: yes it's the close button in the header of custom select menu
[14:38:26] <uGoMobi> _|Nix|_: I am creating a test page for custom selects now and will take care of the close button
[14:38:43] <uGoMobi> we can just create a div with classes
[14:39:10] <_|Nix|_> uGoMobi: Oh, OK ... you'll do it?
[14:39:29] <uGoMobi> _|Nix|_: yeah, no problem
[14:39:34] <_|Nix|_> uGoMobi: That was my plan. I was about to replace the .buttonMarkup call with the classes.
[14:40:02] <uGoMobi> _|Nix|_: if you are already on it please go ahead
[14:40:02] <_|Nix|_> uGoMobi: Only one snag: You need to add the theme when you create the dialog, not when you create the button - unless you know what theme the dialog's header will have.
[14:40:10] <_|Nix|_> uGoMobi: OK. I'll do it then.
[14:40:46] <uGoMobi> _|Nix|_: I wouldn't worry about the theme for now
[14:41:35] <uGoMobi> _|Nix|_: just give it a theme for now
[14:41:39] <_|Nix|_> uGoMobi: OK.
[14:42:08] <uGoMobi> _|Nix|_: I am removing all calls to getInheritedTheme as well
[14:42:52] <_|Nix|_> uGoMobi: OK. So, ideally theme should be unspecified everywhere except the very top, eh?
[14:43:33] <uGoMobi> if ( !this.options.theme ) { this.options.theme="a"; }
[14:44:28] <_|Nix|_> OK.
[14:54:01] <_|Nix|_> uGoMobi: demos/widgets/selects/custom-selects.php
[14:54:11] <_|Nix|_> uGoMobi: There is a page, but it may not be linked from anywhere ...
[14:54:13] <uGoMobi> _|Nix|_: yeah, I just found that page
[14:54:58] <uGoMobi> _|Nix|_: I am adding it to the menu and updating the page a bit
[14:55:50] <_|Nix|_> uGoMobi: Hmmm the "Empty option w/o value" is very narrow until it gets a value.
[14:56:50] <uGoMobi> _|Nix|_: needs a min-height
[14:57:32] <uGoMobi> _|Nix|_: or to prevent the height to change after selecting an option we could add a space maybe
[14:57:50] <uGoMobi> space as in &nbsp;
[14:59:18] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 2 new commits to 06next: 02http://git.io/m-2LIg
[14:59:18] <jqmobilecommit> 13jquery-mobile/06next 14ab183d9 15Gabriel Schulhof: Demos: Custom select: Typo.
[14:59:18] <jqmobilecommit> 13jquery-mobile/06next 140bf39e1 15Gabriel Schulhof: Custom select: Get rid of buttonMarkup.
[14:59:29] <_|Nix|_> uGoMobi: Good idea. We can do that in setButtonText.
[14:59:40] <_|Nix|_> uGoMobi: If the text is empty add an nbsp;
[15:00:32] <_|Nix|_> uGoMobi: Is that kosher with screen readers and stuff?
[15:02:38] <uGoMobi> _|Nix|_: I think it should be ok
[15:03:23] <uGoMobi> _|Nix|_: maybe it's even better when screen readers ignore the button text and stick to the native element
[15:03:58] <_|Nix|_> uGoMobi: OK, and it looks good with the &nbsp; so I'll push that.
[15:04:07] <uGoMobi> _|Nix|_: great
[15:04:52] <_|Nix|_> Bam!
[15:04:59] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/IKAEZg
[15:04:59] <jqmobilecommit> 13jquery-mobile/06next 1440da6d9 15Gabriel Schulhof: Select: when the button text is empty, make it a &nbsp;.
[15:05:39] <_|Nix|_> uGoMobi: Well hut diggety dong! We're done.
[15:06:00] <_|Nix|_> uGoMobi: No more buttonMarkup ...
[15:06:01] <uGoMobi> _|Nix|_: yiha!
[15:06:12] <uGoMobi> _|Nix|_: shall we take a look at link buttons
[15:06:13] <_|Nix|_> uGoMobi: Now, to pick up all the pieces ... :)
[15:06:31] <uGoMobi> nice work _|Nix|_ 
[15:06:51] <_|Nix|_> uGoMobi: Me? You did all the heavy lifting on this one.
[15:07:06] <uGoMobi> team effort
[15:07:23] <_|Nix|_> uGoMobi: I just swooped in and made use of all the nifty CSS gadgets you made available :)
[15:07:48] <_|Nix|_> Jasper "Q" DeGroot :)
[15:07:55] <uGoMobi> lol
[15:08:22] <uGoMobi> _|Nix|_: will go over the CSS of all widgets tomorrow to see if we can reduce that a bit
[15:08:41] <_|Nix|_> uGoMobi: But seriously, I think we should reduce that enormous selector in buttonMarkup and have the callback not actually run buttonMarkup.
[15:08:57] <uGoMobi> _|Nix|_: if we use the defaults in the button CSS as much as possible it is more consistent as well
[15:09:44] <_|Nix|_> uGoMobi: What do you mean "use the defaults in the button CSS" ?
[15:10:09] <uGoMobi> _|Nix|_: like the padding rules we set for .ui-btn
[15:10:43] <_|Nix|_> uGoMobi: Oh, you mean minimize the places where we override the padding set in .ui-btn?
[15:10:46] <uGoMobi> _|Nix|_: I think there might still be rules for other widgets where we set it again or slightly different
[15:10:52] <uGoMobi> _|Nix|_: yes
[15:11:02] <_|Nix|_> Right.
[15:11:07] <_|Nix|_> Good plan.
[15:11:28] <uGoMobi> we have like 10 lines of CSS just to shift the icon of a select or checkbox 5px
[15:11:52] <_|Nix|_> uGoMobi: I'll get rid of all the commented-out code from buttonMarkup ...
[15:12:35] <uGoMobi> _|Nix|_: ok, and I agree about that selector in buttonMarkup
[15:12:55] <uGoMobi> I think I removed it though
[15:13:10] <uGoMobi> we now have an enormous selector in the button widget :(
[15:13:16] <_|Nix|_> You sure did ... 
[15:13:51] <_|Nix|_> Wow ... we sure do ...
[15:14:08] <uGoMobi> we need something simple to auto enhance links in toolbars as buttons
[15:14:49] <_|Nix|_> Well, we can split that selector in half - move all the operands that involve a link into buttonMarkup.
[15:15:17] <uGoMobi> and maybe deprecate the feature and let people add the ui-btn-left/right classes and data-role="button" themselves
[15:15:29] <_|Nix|_> Not bad!
[15:15:37] <uGoMobi> _|Nix|_: yeah, but that is what makes the selector big
[15:15:53] <uGoMobi> for button widget it will only be input and button
[15:16:07] <_|Nix|_> uGoMobi: Let's create a dev task about the deprecation.
[15:16:15] <uGoMobi> +1
[15:16:47] <_|Nix|_> uGoMobi: Meanwhile, I'll split the selector and do the enhancing for anchors out of buttonMarkup. It's still faster than creating a widget for each anchor.
[15:17:06] <uGoMobi> _|Nix|_: yeah true
[15:17:06] <_|Nix|_> uGoMobi: ... and it's no slower than master.
[15:17:31] <uGoMobi> _|Nix|_: note that I also added bit logic to check if it are links in toolbars
[15:17:50] <uGoMobi> we have to remove that too
[15:18:13] <_|Nix|_> uGoMobi: OK.
[15:19:30] <uGoMobi> I was using .is() there for the time being... not good for performance either
[15:21:09] <_|Nix|_> uGoMobi: OK, so those buttons are mini and inline unless explicitly specified not to be.
[15:21:42] <uGoMobi> _|Nix|_: yes, that's the idea
[15:22:42] <uGoMobi> _|Nix|_: we did have complicated logic in buttonMarkup, a lot of CSS for buttons in headers and classes like ui-btn-block and ui-btn-fullsize to manage the override
[15:23:02] <uGoMobi> _|Nix|_: I really prefer to keep it simple
[15:23:38] <agcolom> uGoMobi: Hi!
[15:23:48] <uGoMobi> agcolom: hi Anne
[15:24:13] <agcolom> This morning, I thought also that we needed 'refresh' so was surprised it was working ;-)
[15:24:23] <agcolom> Hi _|Nix|_ !
[15:24:44] <agcolom> uGoMobi: So thanks for clarifying :)
[15:25:02] <agcolom> (the panel issue)
[15:25:49] <uGoMobi> agcolom: np
[15:26:08] <uGoMobi> agcolom: thanks for looking into it
[15:26:54] <agcolom> I want to get the time to help on triage... but we're doing a course review which means lots of docs need writing :(
[15:27:39] <uGoMobi> agcolom: I understand, thanks for doing triage anyway
[15:28:33] <agcolom> I'll try to help where I can, so I appologise in advance if I get things wrong ;-) 
[15:28:36] <uGoMobi> I think we can close a lot of tickets when we are ready with 1.4
[15:28:52] <agcolom> at least I'll try to add test cases, etc. 
[15:28:58] <uGoMobi> agcolom: don't worry about that
[15:29:12] <uGoMobi> testing is very useful
[15:29:20] <agcolom> That'd be nice. Also, there are a lot a of ancient issues..
[15:29:34] <agcolom> Some may not be relevant anymore...
[15:29:37] <uGoMobi> agcolom: watch out for JS Fiddles... most of them use 1.3 beta 1
[15:29:53] <uGoMobi> agcolom: yes indeed
[15:30:09] <agcolom> sure, I didn't pay attention to that. Will do in future
[15:36:46] <doesallmagic> Project jQuery Mobile Git build #5094: FAILURE in 4.8 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Git/5094/
[15:36:57] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/pGqINQ
[15:36:57] <jqmobilecommit> 13jquery-mobile/06next 145afefdd 15Jasper de Groot: Demos: Added the custom select demo page.
[15:37:35] <doesallmagic> Project jQuery Mobile Phantom 1.1-stable build #301: FAILURE in 48 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%201.1-stable/301/
[15:38:49] <uGoMobi> _|Nix|_: 
[15:38:51] <uGoMobi> this.element.addClass(function( i, orig ) {
[15:38:51] <uGoMobi>     return orig + " ui-listview" + listviewClasses;
[15:38:51] <uGoMobi> });
[15:39:28] <uGoMobi> _|Nix|_: can you explain me why we do it like that? why not just addClass( " ui-listview" + listviewClasses ); ?
[15:40:32] <_|Nix|_> uGoMobi: Because that appends to the existing classes whatever they may be ...
[15:40:57] <_|Nix|_> uGoMobi: Wait ... you may be right.
[15:41:09] <uGoMobi> _|Nix|_: addClass doesn't remove existing classes does it?!?
[15:41:16] <_|Nix|_> uGoMobi: No it does not.
[15:41:41] <_|Nix|_> uGoMobi: Check the core API to see what i and orig are.
[15:41:58] <_|Nix|_> uGoMobi: BTW: I'm totally rewriting buttonMarkup.
[15:42:16] <uGoMobi> _|Nix|_: great!
[15:42:49] <_|Nix|_> uGoMobi: Do you think .parent().hasClass( "ui-header" ) is faster than .is( ".ui-header > a" )?
[15:43:09] <_|Nix|_> I think it might be, because there's a lot less parsing.
[15:43:19] <_|Nix|_> ... and interpreting ...
[15:43:23] <uGoMobi> _|Nix|_: I think so too
[15:43:33] <uGoMobi> .is() does a lot more
[15:43:33] <_|Nix|_> uGoMobi: OK. Then I'll switch to that.
[15:44:01] <uGoMobi> _|Nix|_: .addClass( function(index, currentClass) )
[15:44:03] <_|Nix|_> uGoMobi: But that's all we care about. We wish to know whether its direct parent has one of those classes or not, right?
[15:44:25] <uGoMobi> _|Nix|_: yes, only direct parent
[15:44:46] <uGoMobi> _|Nix|_: you can wrap in a div to prevent the auto enhancement
[15:45:19] <_|Nix|_> uGoMobi: The .addClass thing is terrible! Wouldn't that end up with two copies of each class, giving .addClass more work to remove duplicates?
[15:45:54] <uGoMobi> _|Nix|_: I dunno exactly but it doesn't look efficient at all
[15:47:08] <_|Nix|_> uGoMobi: You can always run it through jsperf ... 
[15:48:56] <agcolom> johnbender: I seem to remember that you're working on navigation at the moment? (just saw an old issue regarding navigation opened by you so thought it might be a good time to remind you so that it can get fixed, if that's related to what you're working on at the moment... the issue is https://github.com/jquery/jquery-mobile/issues/2643 
[15:49:14] <agcolom> (that was opened 2y ago)
[15:49:36] <johnbender> agcolom: yah that requires a larger discussion about reporting unrecoverable states to the user
[15:49:49] <johnbender> _|Nix|_: arschmitz: uGoMobi: toddmparker: scott_gonzalez: ^
[15:49:59] <johnbender> in most programming environments that's the domain of exceptions
[15:50:17] <johnbender> but on the client side exceptions are generally frowned upon
[15:50:31] <johnbender> I don't know why that is though :)
[15:50:34] <agcolom> oh ok... just saw it so thought I'd show you...
[15:50:40] <johnbender> agcolom: thanks for the reminder though
[15:50:45] <johnbender> I'll bring it up tomorrow maybe
[15:51:10] <agcolom> I'm having a look at ancient issues ;-)
[15:51:13] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/67SQJA
[15:51:13] <jqmobilecommit> 13jquery-mobile/06next 14ecf298b 15Jasper de Groot: Listview: removed superfluous function from addClass.
[15:52:07] <doesallmagic> Yippie, build fixed!
[15:52:08] <doesallmagic> Project jQuery Mobile Git build #5095: FIXED in 1 min 4 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Git/5095/
[16:17:20] <doesallmagic> Yippie, build fixed!
[16:17:20] <doesallmagic> Project jQuery Mobile Phantom 1.1-stable build #302: FIXED in 25 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%201.1-stable/302/
[16:28:21] <toddmparker> Man, you guys are hauling. No more button markup anywhere!
[16:29:06] <toddmparker> Make sure to keep notes on the wiki of changes as you go
[16:29:26] <toddmparker> He'll of an upgrade guide needed
[16:30:50] <scott_gonzalez> johnbender: $.error()
[16:31:00] <johnbender> O.O
[16:31:26] <johnbender> scott_gonzalez: standards for everything
[16:31:29] <johnbender> scott_gonzalez: awesome
[16:32:09] <scott_gonzalez> Though for something like navigation, you may want to have a "not found" callback or something similar.
[16:37:16] <johnbender> scott_gonzalez: indeed
[16:37:33] <johnbender> gseguin: reminder to ping DaveMethvin about the performance work Core is doing
[16:37:34] <scott_gonzalez> You can have the callback return true to indicate that it was handled.
[16:37:39] <scott_gonzalez> And the default can just be $.noop.
[16:37:44] <johnbender> scott_gonzalez: I think we have an open issue
[16:37:53] <scott_gonzalez> Then you can call $.error() if the callback doesn't return true.
[17:16:44] <toddmparker> uGoMobi: Looks like you got every widget looking good again. Everything feels snappier now too except for radio buttons. Compare checks and radios on iOS and there is a big difference.
[17:17:09] <toddmparker> http://view.jquerymobile.com/next/demos/test/forms-a/form.php
[18:47:18] <gseguin> johnbender: will do
[19:13:45] <toddmparker> _|Nix|_: Thanks for you help. Be good to look at the slider, seems like its sluggish in 1.3 and I bet there is some inefficient event stuff going on. I know you like rooting out that kind of stuff.
[23:38:31] <jqmobilecommit> [13jquery-mobile] 15frequent opened pull request #5932: Table: toggle changed self.update() fixes #5839 - toggle breaks table priority hiding (061.3-stable...06fix-5839)  02http://git.io/iPiXkw
