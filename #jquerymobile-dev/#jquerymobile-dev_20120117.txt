[03:50:48] <_|Nix|_> Anyone alive? I'm trying to rebase the popup branch, but I don't know how to add the file jquery.mobile.popup.js to the build ...
[06:57:09] <gseguin> Wilto: the amd-builder.no.de service seems to be back up
[06:57:27] * gseguin is off to the gym
[07:09:51] <Wilto> Sweet. Thanks, gseguin.
[07:09:51] <bot-t> (11 hours 50 mins ago) <rwaldron> tell Wilto this is for you... http://www.readwriteweb.com/mobile/2012/01/jqmobi-is-a-mobile-optimized-h.php#comment-412765750
[07:09:52] <bot-t> (11 hours 9 mins ago) <rwaldron> tell Wilto So, I was looking at the readme here https://github.com/appMobi/aUX_web and realized that the API's look alot like David Mark's my library API :D
[07:10:03] <Wilto> whoop
[07:10:46] <Wilto> It _does_ look similar, in fact.
[07:58:53] <toddparker> gseguin: you around?
[08:21:27] <johnbender> toddparker: gseguin:
[08:21:29] <johnbender> so
[08:21:37] <johnbender> we need to finish this conversation about AMD
[08:21:41] <johnbender> we're going around in circles
[08:21:49] <johnbender> toddmparker_:
[08:21:54] <johnbender> and we're all in agreement here
[08:22:47] <johnbender>  /test should not be using AMD
[08:22:51] <johnbender> we all agree on that
[08:23:03] <johnbender> dev shouldn't have a dependency on PHP if we can avoid it
[08:30:43] <toddparker> hi johnbender
[08:34:45] <johnbender> toddparker: where "should not be using AMD" in our minds means - should load one file
[08:34:50] <johnbender> for perf reasons
[08:35:10] <toddparker> right
[08:35:21] <johnbender> that's what we have now in the redirect
[08:35:33] <toddparker> i think as long as /test/ and branches are serving concat files
[08:35:36] <johnbender> if the redirect is wonky we can do something else too
[08:36:00] <toddparker> and that i can work locally with a normal MAMP type setup
[08:36:06] <toddparker> that is cool
[08:36:26] <toddparker> doing a build is the only thing that requires more setup, right?
[08:36:49] <toddparker> btw - scott is trying that merge again, sounds ugly
[08:37:00] <toddparker> this should be the last pre-AMD branch that will go in
[08:37:02] <johnbender> toddparker: what does ugly mean
[08:37:14] <johnbender> there might be 30 conflicts but it might just be to add the amd stuff
[08:37:38] <toddparker> right, he said that all conflicts were amd
[08:37:43] <toddparker> but the diff was huge
[08:38:13] <toddparker> manually sorting the AMD conflicts is what's taking the time for him
[08:39:20] <johnbender> toddparker: that's something anyone will have to do
[08:40:00] <johnbender> the reason I asked for the diff is that the conflicts should be similar between files
[08:40:13] <johnbender> basically just the wrap at the top and bottom
[08:42:17] <johnbender> and any conflicts that his alterations create
[08:43:15] <toddparker> update form scott
[08:43:18] <toddparker> this is really frustrating.
[08:43:19] <toddparker> 3 days ago, the compare view on github had 14 file changes. I've barely touched it since, and now there are 304 file changes
[08:43:19] <toddparker> can't view the diff anymore. rebase isn't going well... I may need to redo the branch tomorrow manually
[08:43:31] <toddparker> not sure what happened
[08:43:42] <johnbender> toddparker: neither am I
[08:43:51] <toddparker> hmm
[08:44:00] <toddparker> so what's the best way to proceed
[08:44:06] <johnbender> depending on how many commits he's made to the branch he could cherry pick  them over to a new branch
[08:44:15] <toddparker> should he create a new branch and just copy over the new stuff manually
[08:44:26] <johnbender> toddparker: I would avoid "copying"
[08:44:37] <johnbender> using the scm is the best way to go
[08:44:38] <toddparker> sure
[08:44:51] <johnbender> if he knows all the commits that he wants to make
[08:44:57] <johnbender> he can apply them with cherry pick
[08:45:06] <toddparker> (playing telephone here…he can't get on IRC)
[08:45:18] <johnbender> toddparker: are all his changes up on github?
[08:46:12] <toddparker> yeah, in the css-fixed branch
[08:46:30] <johnbender> toddparker: can he wait until tomorrow (isn't it really late there?
[08:46:32] <johnbender> )
[08:46:39] <johnbender> and I can play with the merge today
[08:46:44] <toddparker> yeah, it is late 12 hours
[08:46:50] <johnbender> k
[08:46:54] <johnbender> just tell him to call it and I'll do it
[08:47:39] <toddparker> ok, i'll pass that along
[08:47:50] <toddparker> once this is in, we should be good to go
[08:48:07] <toddparker> both of these were just old branches with a  ton of changes that pre-dated AMD
[08:48:18] <toddparker> thanks bender
[08:48:40] <toddparker> btw - he didn't try the cherry pick approach
[08:48:47] <toddparker> now he knows
[08:49:24] <Wilto> And knowing is roughly 50% of the battle.
[08:50:51] <gseguin> good morning
[08:51:19] <johnbender> toddparker: with lots of commits cherry picking, in order, is basicaly rebasing though
[08:51:27] <johnbender> so most likely it'd be the same issue
[08:51:29] <gseguin> toddparker: 'sup?
[08:51:53] * johnbender assumes the mantle of "git dude" for the project
[08:52:09] <johnbender> that emote is said because I feel like I barely know what I'm doing with git :(
[08:53:02] <johnbender> the git raw materials are still a bit cloudy for me
[08:53:07] <Wilto> I spent my first week on the project yelling “GIT COMMIT” into my USB port. You sure as hell know more than I do.
[08:53:20] <johnbender> Wilto: toddparker: for the new transitions, in firefox
[08:53:24] <johnbender> well
[08:53:28] <johnbender> I guess in general
[08:53:46] <johnbender> do we always alply the viewport-<transition> ?
[08:53:50] <gseguin> johnbender: do you want me to do the merge
[08:53:52] <gseguin> ?
[08:53:52] <johnbender> *apply
[08:53:58] <johnbender> gseguin: nope I'll do it
[08:54:02] <gseguin> 'k
[08:54:03] <johnbender> just trying to fix these  transition tests
[08:54:10] <johnbender> since we changed the logic for firefox transitions
[08:54:13] <johnbender> err
[08:54:14] <johnbender> rather
[08:54:16] <gseguin> is that the navigation tests?
[08:54:21] <johnbender> browsers that doen't support the 3d transforms
[08:54:24] <johnbender> gseguin: yah
[08:54:34] <gseguin> k
[08:54:51] <johnbender> gseguin: if you have time, dive into some of the bugs
[08:55:04] <Wilto> johnbender: I think so.
[08:55:06] <johnbender> gseguin: we have 2 pull requests from imjoshdean
[08:55:09] <gseguin> today is still a jive day
[08:55:13] <johnbender> gseguin: ok
[08:55:17] <gseguin> I'll do that tomorrow
[08:55:17] <johnbender> gseguin: don't worry about it then
[08:55:26] <johnbender> gseguin: I'm hoping to get to it today
[08:55:37] <gseguin> anything urgent, let me know
[08:55:44] <gseguin> oh one thing
[08:55:51] <gseguin> as I was mentionning in basecamp
[08:56:04] <gseguin> it would be great to have nodejs on the machine that builds
[08:56:17] <gseguin> and switch those rhino calls to nodejs calls
[08:57:41] <toddparker> hey sorry guys, back
[08:57:47] * gseguin will be back around 9am pst
[08:57:51] <toddparker> thanks for cleaning house bender
[08:58:03] <toddparker> thanks gseguin - we're all set now
[08:59:07] <toddparker> so johnbender - scott said that he's gotten things in order
[08:59:22] <toddparker> just two failing tests re: transitions that you're already looking at
[08:59:29] <toddparker> 2 conflicts away
[08:59:57] <toddparker> so once we resolves the conflicts, is he good to push to master and you'll pick up those 2 failing tests?
[09:00:46] <Wilto> johnbender, toddparker: Want me to look into that viewport transition thing?
[09:02:41] <Wilto> Scratch that—confirmed it just now. We are always adding that class.
[09:05:03] <johnbender> Wilto: so that's one of the failing tests
[09:05:19] <Wilto> Not being applied consistently?
[09:05:29] <johnbender> Wilto: no it's being applied all the time
[09:05:34] <johnbender> previously we only applied it for flip
[09:05:56] <johnbender> I forget why, but that one required some extra css attributes
[09:05:58] <johnbender> anyhow
[09:06:03] <johnbender> now that we're applying it all the time
[09:06:07] <johnbender> I can remove that test
[09:06:12] <Wilto> Ohh.
[09:06:16] <johnbender> the last one is there is no pop on firefox
[09:06:20] <johnbender> it's defaulted to fade
[09:06:39] <johnbender> Wilto: toddparker: so these were passing when you guys were working on the branch?
[09:07:12] <Wilto> johnbender: Pop should work on FF10/FF11.
[09:07:15] <Wilto> But yeah, that’s it.
[09:07:27] <johnbender> kk
[09:07:31] <johnbender> tests are for ff9
[09:07:39] <Wilto> Good to know.
[09:07:44] <Wilto> Never even thought to ask.
[09:07:49] <johnbender> well they are until the ubuntu repos are updated
[09:08:57] <jqmobilecommit> [jquery-mobile] scottjehl pushed 4 new commits to master: http://git.io/qC-ILw
[09:08:57] <jqmobilecommit> [jquery-mobile/master] Merge branch 'fixedtoolbar' - scottjehl
[09:08:57] <jqmobilecommit> [jquery-mobile/master] Merge remote branch 'origin/master' - scottjehl
[09:08:57] <jqmobilecommit> [jquery-mobile/master] Moved a rule to fixedToolbar.css - scottjehl
[09:09:31] <toddparker> BOOM
[09:09:41] <Wilto> ?CC
[09:09:41] <bot-t> CASE CLOASED >: |
[09:11:59] <jqmobilecommit> [jquery-mobile] johnbender pushed 2 new commits to master: http://git.io/9molVQ
[09:11:59] <jqmobilecommit> [jquery-mobile/master] seperate transition tests, whitespace - John Bender
[09:11:59] <jqmobilecommit> [jquery-mobile/master] fix transition tests for older versions of firefox - John Bender
[09:12:22] <johnbender> that should take care of the last test issues unless scott's merge introduced any
[09:15:46] <Wilto> Nicely done, dude.
[09:16:18] <Wilto> IM’MA GO BREAK STUFF
[09:20:39] <Wilto> gseguin: Hit me up whenever you’re around, yeah? No rush.
[09:27:37] <johnbender> jrburke: you've done it now man
[09:27:50] <jrburke> johnbender: ?
[09:27:54] <johnbender> the internets are aflame with nerds opining on AMD
[09:28:08] <Wilto> Nerds gonna nerd.
[09:28:10] <jrburke> lol. well they need some sort of watercooler talk.
[09:28:15] <toddparker> we do
[09:28:30] <johnbender> jrburke: indeed we do!
[09:28:36] <Wilto> http://wil.to/_/haters2.gif
[09:28:53] <johnbender> jrburke: I need to read all three articles thoroughly though
[09:29:07] <toddparker> johnbender: does /test/ update on commit or just hourly?
[09:29:16] * gseguin is back
[09:29:18] <jqm-jenkins-bot> Project jqm-master build #403: STILL FAILING in 15 min: http://10.59.19.240:8080/job/jqm-master/403/
[09:29:19] <jqm-jenkins-bot> * scott: removed fixHeaderFooter files
[09:29:19] <jqm-jenkins-bot> * scott: removed disablezoom function from init
[09:29:20] <jqm-jenkins-bot> * scott: added new script and associated styles for handling "fixed" toolbars using native support for CSS position: fixed, where possible. Non-supporting platforms will fall back to inline positioning, either by gracefully degrading on their own or by opting them out through a blacklist (fixed positioning detection's got issues...).
[09:29:20] <jqm-jenkins-bot> * scott: patched up support for transition: "none" rather than false, for consistency with other uses of the option in jQM.
[09:29:20] <jqm-jenkins-bot> * scott: fixed the restorePageZoom method so that it does what it says on the tin.
[09:29:21] <jqm-jenkins-bot> * scott: changed scrollToggle to hideOnScrollStop, which does just that. It only works if tapToggle is true, so that once hidden, the bar can be toggled visible again with a tap.
[09:29:22] <jqm-jenkins-bot> * scott: removed the hideOnScrollStop option and feature - too complicated for a default option. Might be worth supporting as an extension though.
[09:29:22] <jqm-jenkins-bot> * scott: The ui-fixed-hidden class now switches the toolbar's positioning to "absolute" when hidden. This allows a hidden fixed toolbar to still be visible if you scroll to top. Fullscreen toolbars are hidden with a negative left value as well, so that they're entirely off screen.
[09:29:23] <jqm-jenkins-bot> * scott: fixed the page class name for fullscreen to include "header" or "footer". Also improved the show and hide methods so that they don't apply a transition when showing or hiding a toolbar that is fixed (not fullscreen) when the user is scrolled to the top or bottom of the viewport already.
[09:29:23] <jqm-jenkins-bot> * scott: removed commented-out code for polyfilling fixed support - it wouldn't have worked as we'd want it to anyway.
[09:29:24] <jqm-jenkins-bot> * scott: Created 33 unit tests for the base features and methods of the fixedtoolbar plugin. 5 tests are currently failing due to a change in logic in the show/hide methods. Those tests just need adjusting, as the feature itself is currently working.
[09:29:24] <jqm-jenkins-bot> * scott: changed any tests that used :visible or :hidden, because the toolbars are now hidden with absolute positioning, and are aways visible. Instead, checked for presence of hide class.
[09:29:25] <johnbender> toddparker: should be commit
[09:29:25] <jqm-jenkins-bot> * scott: fixed up the failing unit test by ensuring the toolbars were shown before testing for transition classes.
[09:29:25] <jqm-jenkins-bot> * scott: ensure tapping the toolbar itself (or something in it) will not trigger a toggle of the toolbars.
[09:29:26] <jqm-jenkins-bot> * scott: make sure all page classes are removed at destroy
[09:29:26] <jqm-jenkins-bot> * todd: Changed the z-index of the slider handle from 10 and 20 to 1 for both types to prevent it from running over the fixed toolbars
[09:29:27] <jqm-jenkins-bot> * scott: removed qualification of img { max-width: 100%; } to only fullscreen settings - now global within framework.
[09:29:27] <gseguin> toddparker: it updates on commit
[09:29:30] <Wilto> AAAAH
[09:29:31] <gseguin> but it's super slow
[09:29:32] <toddparker> hmmm
[09:29:38] <jqm-jenkins-bot> * scott: added order plugin to the baseUrl directory
[09:29:38] <jqm-jenkins-bot> * scott: stop using require-jquery
[09:29:39] <toddparker> ok, i'll wait a few mote
[09:29:39] <jqm-jenkins-bot> * scott: Added @import to replace index.php
[09:29:39] <jqm-jenkins-bot> * scott: Fixed path to almond.js
[09:29:40] <jqm-jenkins-bot> * scott: Added jQuery AMD shim to support jQuery < 1.7
[09:29:40] <jqm-jenkins-bot> * scott: Added module for docs
[09:29:41] <jqm-jenkins-bot> * scott: Removed
[09:29:41] <jqm-jenkins-bot> * scott: Added RequireJS 1.0
[09:29:42] <jqm-jenkins-bot> * scott: Added almond.js
[09:29:42] <jqm-jenkins-bot> * scott: Modified shimming condition
[09:29:43] <jqm-jenkins-bot> * scott: Whitespace change
[09:29:43] <jqm-jenkins-bot> * scott: Added r.js
[09:29:44] <jqm-jenkins-bot> * scott: Added dep on jquery.mobile.buttonMarkup
[09:29:44] <jqm-jenkins-bot> * scott: Added dep on vmouse
[09:29:45] <jqm-jenkins-bot> * scott: Added collapsibleSet
[09:29:45] <jqm-jenkins-bot> * scott: Specified dependencies
[09:29:46] <jqm-jenkins-bot> * scott: Moved $.support.mediaquery to jquery.mobile.media
[09:29:46] <jqm-jenkins-bot> * scott: Updated script tags to use RequireJS to load the jQM
[09:29:47] <gseguin> because we're using java to call r.js
[09:29:47] <johnbender> I'm going to turn his crap off
[09:29:54] <gseguin> DAMMIT SCOTT
[09:29:58] <jqm-jenkins-bot> * scott: Reverted unwanted changes
[09:29:58] <jqm-jenkins-bot> * scott: Added handling of pragmasOnSave from command line
[09:29:59] <jqm-jenkins-bot> * scott: Fixed casing
[09:29:59] <jqm-jenkins-bot> * scott: fix improperly camel cased module references
[09:30:00] <jqm-jenkins-bot> * scott: Substituted wrong semicolon with comma inside a list of variable
[09:30:00] <jqm-jenkins-bot> * scott: Fix for issue #3305 - Confusing documentation about dataUrl in changePage
[09:30:01] <jqm-jenkins-bot> * scott: Added temporary dependency on mobile.widget
[09:30:01] <jqm-jenkins-bot> * scott: Added dep on "jquery.mobile.buttonMarkup" wherever needed
[09:30:02] <jqm-jenkins-bot> * scott: add page and listview dep to custom select
[09:30:02] <jqm-jenkins-bot> * scott: add transition dep to navigation
[09:30:03] <jqm-jenkins-bot> * scott: alpha order deps
[09:30:03] <jqm-jenkins-bot> * scott: added dialog to custom select deps
[09:30:04] <jqm-jenkins-bot> * scott: added page and page section dependencies to custom select
[09:30:04] <jqm-jenkins-bot> * scott: async test library load helper
[09:30:05] <jqm-jenkins-bot> * scott: alter select index tests to use async load
[09:30:06] <toddparker> DAMMIT EVERYONE
[09:30:06] <jqm-jenkins-bot> * scott: whitespace in page core tests
[09:30:06] <jqm-jenkins-bot> * scott: fix bug to allow pagebeforecreate bindings to prevent enhancement
[09:30:06] <jqm-jenkins-bot> * scott: more flexible async loading helper, converted select test
[09:30:12] <johnbender> toddparker: so what happened did he just finish the merge?
[09:30:14] <Wilto> I… I think it’s useful in general.
[09:30:17] <toddparker> MAKE IT STOOOPPPPPPPPPPP
[09:30:18] <jqm-jenkins-bot> * scott: AMDized
[09:30:18] <jqm-jenkins-bot> * scott: Minimized imported resources
[09:30:19] <jqm-jenkins-bot> * scott: Trailing comma
[09:30:20] <jqm-jenkins-bot> * scott: AMDized
[09:30:20] <jqm-jenkins-bot> * scott: Fixed test name
[09:30:20] <jqm-jenkins-bot> * scott: Minimized imported resources
[09:30:21] <Wilto> Maaaaybe not over a certain number of commits.
[09:30:21] <jqm-jenkins-bot> * scott: Named the module for testability
[09:30:22] <jqm-jenkins-bot> * scott: AMDized
[09:30:22] <toddparker> yeah
[09:30:22] <jqm-jenkins-bot> * scott: Tweaked fieldset border rules so field contains work with this element. Fixes #2448
[09:30:23] <jqm-jenkins-bot> * scott: Tightened up vertical spacing for form field containers at smartphone widths
[09:30:23] <jqm-jenkins-bot> * scott: Tweaked slider to be a bit wider
[09:30:23] <jqm-jenkins-bot> * scott: More tweaks to the sliders to fit well at 320px
[09:30:24] <jqm-jenkins-bot> * scott: Gradient syntax fixed
[09:30:24] <jqm-jenkins-bot> * scott: Use shorthand notation for margin
[09:30:25] <jqm-jenkins-bot> * scott: Added dep on buttonMarkup
[09:30:26] <jqm-jenkins-bot> * scott: AMDized
[09:30:26] <jqm-jenkins-bot> * scott: Remove .js suffix from libName
[09:30:27] <jqm-jenkins-bot> * scott: Changed reloadLib to use requirejs' context. That process being async it now returns a $.Deferred
[09:30:29] <johnbender> it's supposed to be like the top couple commits
[09:30:31] <toddparker> (this is like talking between moving trains)
[09:30:33] <johnbender> or should be lol
[09:30:38] <jqm-jenkins-bot> * scott: First stab at more consistent focus classes on form elements, using .ui-focus. Links will still contain outline property.
[09:30:39] <jqm-jenkins-bot> * scott: Nerf, you guys use tabs.
[09:30:39] <jqm-jenkins-bot> * scott: Per @toddparker's comment, added boxshadow to link buttons. Also changed focus class on sliders to add to the handle, while excluding the toggle switch.
[09:30:40] <jqm-jenkins-bot> * scott: Fix for browsers with JavaScript but without box-shadow enabled. outline: 0; outline-width: 2px; doesn't work, requires an outline-style to be set.
[09:30:40] <jqm-jenkins-bot> * scott: This might be a little overzealous, but I think the outline around the entire flip switch looks better than the clipped handle outline.
[09:30:41] <jqm-jenkins-bot> * scott: added navbar
[09:30:41] <jqm-jenkins-bot> * scott: Added slight delay before application of hover/down classes on touch devices, to prevent unintentional hover-ish behavior when the user intent is to scroll.
[09:30:42] <jqm-jenkins-bot> * scott: Ensured the hover delay only applies to touch devices, logic that was mysteriously absent from my previous commit.
[09:30:42] <toddparker> DUCK
[09:30:42] <jqm-jenkins-bot> * scott: Update docs/pages/page-anatomy.html
[09:30:43] <jqm-jenkins-bot> * scott: Update docs/about/getting-started.html
[09:30:43] <jqm-jenkins-bot> * scott: data-id is not used in Pages and Dialogs
[09:30:44] <jqm-jenkins-bot> * scott: Corrected tiny typo.
[09:30:44] <jqm-jenkins-bot> * scott: Optimized the images even more. (Using ScriptPNG)
[09:30:45] <Wilto> WHAT IS HAPPENING
[09:30:45] <jqm-jenkins-bot> * scott: update nav base tests to use new push state helper
[09:30:45] <jqm-jenkins-bot> * scott: Partial dialog refactor, in progress.
[09:30:46] <jqm-jenkins-bot> * scott: Moved .ui-dialog to element wrapping dialog header/content/footer, switched overlay non-theming class to .ui-dialog-page.
[09:30:46] <jqm-jenkins-bot> * scott: Applied top margin to dialog headers rather than .ui-dialog, as the latter was breaking content-only dialogs meant to align with the top of the viewport.
[09:30:47] <jqm-jenkins-bot> * scott: fix url checks to use search where appropriate
[09:30:48] <toddparker> THERE'S MORE
[09:30:58] <jqm-jenkins-bot> * scott: remove requirejs and r.js submodules in favor of vendoring the libraries
[09:30:59] <jqm-jenkins-bot> * scott: vendor r.js and require.js
[09:30:59] <jqm-jenkins-bot> * scott: remove submodule update note
[09:31:00] <jqm-jenkins-bot> * scott: increase java cache size
[09:31:00] <jqm-jenkins-bot> * scott: enforce test order ... dying a little inside
[09:31:01] <jqm-jenkins-bot> * scott: Fix for issue #2933 - get_orientation() and hence getScreenHeight() doesn't work on some devices
[09:31:01] <jqm-jenkins-bot> * scott: Corrected the title for the functional test.
[09:31:02] <jqm-jenkins-bot> * scott: check to make sure cached test page appears
[09:31:02] <jqm-jenkins-bot> * scott: remove duplicate test run
[09:31:03] <jqm-jenkins-bot> * scott: conceding defeat on determining the load order issue that's causing the test failure
[09:31:03] <jqm-jenkins-bot> * scott: Added download builder metadata.
[09:31:04] <jqm-jenkins-bot> * scott: Fixed wrong line break
[09:31:04] <jqm-jenkins-bot> * scott: Fixes #3394 - jquery.mobile.init was not being included in the built bundle
[09:31:05] <jqm-jenkins-bot> * scott: Much of the scripting in nav.js's transitionPages function was tied to the animation sequence for our css3transitionhandler. For example, the order was, scroll to top, run transitions, then scroll to the remembered location of the new page (there's more involved, but that's the gist of it). If we want to expand beyond this sequence, much of that scripting needs to move to the css3transitionhandler itself, and also to our "none"
[09:31:05] <jqm-jenkins-bot> * scott: removed commented out line
[09:31:06] <jqm-jenkins-bot> * scott: gif-based loader animation
[09:31:06] <jqm-jenkins-bot> * scott: added fade out in transition handler
[09:31:07] <jqm-jenkins-bot> * scott: added fade out in transition handler file
[09:31:13] <gseguin> THAT'S WHEN ALL CAPS IS USEFUL
[09:31:18] <jqm-jenkins-bot> * scott: added fade out in transition handler
[09:31:19] <jqm-jenkins-bot> * scott: Loader design tweaks
[09:31:19] <jqm-jenkins-bot> * scott: removed unused image
[09:31:20] <jqm-jenkins-bot> * scott: an attempt at simplification. not there yet...
[09:31:20] <jqm-jenkins-bot> * scott: don't scroll at the end. scroll halfway through instead
[09:31:21] <jqm-jenkins-bot> * scott: add back viewport transitioning class
[09:31:21] <jqm-jenkins-bot> * scott: don't use pre transitioning class, or viewport class for this transition handler. Instead, activate page early, then scroll to desired spot, and transition in. In order to make this work, I had to add an argument to the end of the promise, letting navigation know that the page is already focused, so don't do it over again. This should make for a smooth transition from point-a to point-b, without a visible scroll jump. Needs tes
[09:31:22] <jqm-jenkins-bot> * scott: brought back the height settings, and fixed a typo between addClass and removeClass
[09:31:22] <johnbender> what happened with that commit?
[09:31:22] <jqm-jenkins-bot> * scott: changed plugin name to outInTransitionHandler, as the sequence has nothing to do with "fade" specifically.
[09:31:23] <jqm-jenkins-bot> * scott: changed filename
[09:31:23] <jqm-jenkins-bot> * scott: added new filename to make and combiner files
[09:31:24] <jqm-jenkins-bot> * scott: fixed up the pop out transition for outin handler
[09:31:24] <jqm-jenkins-bot> * scott: updated the slide and flip handlers to use combo fade/slide/flip transitions
[09:31:25] <jqm-jenkins-bot> * scott: removed spin because we aren't using it no mo
[09:31:25] <jqm-jenkins-bot> * scott: a little faster on the fades. needs cleanup later
[09:31:26] <jqm-jenkins-bot> * scott: rolled that last one back.
[09:31:26] <jqm-jenkins-bot> * scott: Broke out the global and in and out transition rules for asymmetric timing
[09:31:27] <jqm-jenkins-bot> * scott: Updated -moz out to match
[09:31:30] <Wilto> ALSO ALL CAPS ARE GOOD WHEN ONE WANTS TO LOOK COOL
[09:31:33] <johnbender> it looks like he dup'd commits
[09:31:38] <jqm-jenkins-bot> * scott: updated description of what happens with flip on non 3d
[09:31:38] <jqm-jenkins-bot> * scott: Re-org file, scoped all flip rules to the 3d supported class to avoid android seeing these
[09:31:39] <jqm-jenkins-bot> * scott: Added "nofade" transition, slide/up/down for non-3D devices
[09:31:39] <jqm-jenkins-bot> * scott: A few more slide tweaks, still blinky or skips frames in unpredictable ways
[09:31:40] <toddparker> sheesh
[09:31:40] <jqm-jenkins-bot> * scott: Slide transition improvements
[09:31:40] <jqm-jenkins-bot> * scott: First cut at making pop work for non-3D browsers. Still rough, but works.
[09:31:41] <jqm-jenkins-bot> * scott: Moved non-3D rules to the bottom to hide the ugliness
[09:31:41] <jqm-jenkins-bot> * scott: removed z-index rules, as pages no longer overlap in transitions
[09:31:42] <jqm-jenkins-bot> * scott: removed or moved  opacity rules for simpler cascade
[09:31:42] <jqm-jenkins-bot> * scott: whitespace
[09:31:42] <johnbender> remove requirejs and r.js submodules in favor of vendoring the libraries
[09:31:43] <jqm-jenkins-bot> * scott: brought back a full flip transition for 3d supporting browsers, using 90deg pairs. Needs further testing
[09:31:43] <jqm-jenkins-bot> * scott: z index not needed
[09:31:44] <jqm-jenkins-bot> * scott: removed z-index rules, no longer needed
[09:31:44] <jqm-jenkins-bot> * scott: removed "none" transition handler from Nav.js. Updated the new out-in transition handler so that it supports "none" transitions in addition to our new default css3 animation sequence. The new transition handler is set as the default, and available publicly as $.mobile.defaultTransitionHandler and $.mobile.transitionHandlers["default"].
[09:31:45] <jqm-jenkins-bot> * scott: updated docs page to describe the new transition handler and how it works.
[09:31:45] <jqm-jenkins-bot> * scott: updated the rotate transition to move the page out of view
[09:31:46] <jqm-jenkins-bot> * scott: Added a new core option called maxTransitionWidth, which defaults to 1000. Accepts any number or false value. If it's not false, the handler will use a "none" transition when the window width is wider than the specified value. This is useful because transitions get very wonky on wider screens.
[09:31:46] <toddparker> THIS IS BAD GUYS
[09:31:46] <jqm-jenkins-bot> * scott: updated docs to describe the maxTransitionWidth option.
[09:31:47] <johnbender> thats mine
[09:31:58] <jqm-jenkins-bot> * scott: Removed setDefaultTransition in docs.js
[09:31:58] <jqm-jenkins-bot> * scott: Fixed theme CSS inclusion on docs index.
[09:31:59] <jqm-jenkins-bot> * scott: fix timing issue where the pushstate plugin expected popstate generated hashchanges to happen before a given timeout
[09:32:00] <jqm-jenkins-bot> * scott: Added page turning transition.
[09:32:00] <jqm-jenkins-bot> * scott: Updated CSS path to default/jquery.mobile.theme.css so it doesn't pick up the index.php
[09:32:00] <jqm-jenkins-bot> * scott: Added clarification to the Back button, Fixes #3291
[09:32:01] <jqm-jenkins-bot> * scott: Single CSS concat file using @import, rather than the PHP concat.
[09:32:01] <jqm-jenkins-bot> * scott: Updated docs’ CSS to use new @import scheme.
[09:32:02] <jqm-jenkins-bot> * scott: Changed source CSS file for css bundle following bac53cf151ac052fba2b646d368bac34681be7d4
[09:32:02] <jqm-jenkins-bot> * scott: Missing a 0, thanks @agcolom!
[09:32:03] <jqm-jenkins-bot> * scott: Ported 148cb09132dfca601de7b1215ab3903067f803ab to valencia theme
[09:32:03] <jqm-jenkins-bot> * scott: Have index.php serve the right file, this is deprecated and should be removed before 1.1 release
[09:32:04] <jqm-jenkins-bot> * scott: Use css/themes/default/jquery.mobile.css instead of css/themes/default/index.php
[09:32:04] <jqm-jenkins-bot> * scott: special case for dialogs - the theme class will apply to the page container when a dialog is shown, and that class will be removed when the dialog is hidden. This allows the transition to appear to affect only the inset window portion of the dialog page.
[09:32:05] <jqm-jenkins-bot> * scott: By caching the href value to data and switching the href to a #, we can avoid address bar showing in iOS on every click. The click handler resets the href during its initial steps if this data is present. Note that the address bar will still likely drop down when you click the browser's back button. The only time the back button will not drop the address bar  appears to be when the back button does not trigger a pushstate opera
[09:32:05] <jqm-jenkins-bot> * scott: disable the maxTransitionWidth during testing by default so that window width doesn't conflict with tests.
[09:32:06] <jqm-jenkins-bot> * scott: added some unit tests for maxTransitionWidth option
[09:32:06] <jqm-jenkins-bot> * scott: removed the sample link to the delayed-load page. no longer needed
[09:32:08] <gseguin> IS THIS ON MASTER?
[09:32:11] <johnbender> yes
[09:32:16] <toddparker> ARE WE jogging up a down escalator
[09:32:18] <jqm-jenkins-bot> * scott: Finished merging branch 'out-in-transition', I had trailing commas in there instead of semi-colons
[09:32:18] <johnbender> toddmparker_: WHAT DID HE DO?
[09:32:19] <jqm-jenkins-bot> * scott: add docs back to the latest build target
[09:32:19] <jqm-jenkins-bot> * scott: Fixes #2553 — Addresses issue where underlying checkboxes/radio buttons were not being updated when enhanced buttons were clicked.
[09:32:19] <gseguin> ah shite!
[09:32:19] <jqm-jenkins-bot> * scott: Rewrote "docs" target to take advantage of r.js' whole project optimization added build profile docs.build.js
[09:32:20] <jqm-jenkins-bot> * scott: Don't know why that r.js was there in the first place
[09:32:20] <jqm-jenkins-bot> * scott: Fixes a false positive for 3D transform support on Android 2.3 (possibly others).
[09:32:21] <jqm-jenkins-bot> * scott: Comment typo, made a TODO about globalizing the testing method added in the previous commit.
[09:32:22] <jqm-jenkins-bot> * scott: Added prepending of version licensed to jquery.mobile.docs.js and jquery.mobile.css
[09:32:22] <jqm-jenkins-bot> * scott: Removed unused app.build.js
[09:32:22] <jqm-jenkins-bot> * scott: Added wrapper to export as an AMD modules
[09:32:23] <jqm-jenkins-bot> * scott: Added wrapper and pragmasOnSave
[09:32:23] <jqm-jenkins-bot> * scott: Added dependency on jquery
[09:32:24] <jqm-jenkins-bot> * scott: Move require.js to first tag so it can catch jquery module registration
[09:32:24] <jqm-jenkins-bot> * scott: Removed stray anchor before doctype
[09:32:25] <jqm-jenkins-bot> * scott: Fixed closing p
[09:32:25] <jqm-jenkins-bot> * scott: Fixed closing pre tag
[09:32:26] <jqm-jenkins-bot> * scott: Move require.js to first tag so it can catch jquery module registration, otherwise jquery may be loaded twice.
[09:32:26] <jqm-jenkins-bot> * scott: Added dependency on jquery.mobile.transitions
[09:32:29] <Wilto> http://wil.to/_/ohgodwhat.gif
[09:32:31] <toddparker> ITS ALL RUINED
[09:32:42] <jrburke> Wow you all have been busy
[09:32:42] <johnbender> DUP'D COMMITS ALL OVER THE PLACE :(
[09:32:53] <Wilto> WHAT IS HAPPENING
[09:33:06] <johnbender> gseguin: I think the dependency for the transition files is backwards
[09:33:12] <gseguin> well now we're going to be busy fixing this crap that's for sure
[09:33:21] <gseguin> oh is it?
[09:33:26] <gseguin> it's possible
[09:33:30] <Wilto> is it over is it safe now
[09:33:37] <Wilto> guys i’m scared
[09:33:41] <toddparker> what happened there?
[09:33:48] <jzaefferer> that was hilarious
[09:33:54] <toddparker> i'm literally hiding under a blanket. literally.
[09:33:58] <johnbender> gseguin: yah I don't think it matters but the transition branch depends on those fallbacks not the other way round right?
[09:34:01] <Wilto> We have traveled back in time.
[09:34:17] <johnbender> I'll take a look at the jenkins build bot settings
[09:34:20] <gseguin> johnbender: let me check
[09:34:20] <toddparker> hilarious as in "funny because it's not my project "kinda hilarious?
[09:34:23] <johnbender> but there were duped commits in there
[09:34:31] <toddparker> i see a dinosaur
[09:34:37] <johnbender> gseguin: sorry, I just remembered thinking that originally
[09:34:53] <johnbender> toddmparker_: the github log looks ok though
[09:34:59] <johnbender> going to do a pull and look at the graph
[09:35:05] <toddparker> did i see a commit from amelia earhart?
[09:35:26] <toddparker> so is it not as bad as that looked?
[09:35:32] <johnbender> nope
[09:35:34] <johnbender> it's not
[09:35:42] <toddparker> whew
[09:35:44] <johnbender> tig shows his branch
[09:35:48] <toddparker> well, then that was fun
[09:35:48] <Wilto> * al_gore: made internet
[09:35:50] <gseguin> nope looking at github everything looks ok
[09:36:02] <johnbender> gseguin: github's output is misleading though
[09:36:03] <jzaefferer> toddparker: as in the funny comment you guys made inbetween a long list of commit messages
[09:36:05] <johnbender> gseguin: it's just date sorted
[09:36:16] <gseguin> oh that's right
[09:36:25] <johnbender> which, given the tree graph based nature of git history can cause serious issues
[09:36:31] <johnbender> and almost did when we had that date problem :/
[09:36:36] <johnbender> git log --graph
[09:36:37] <johnbender> or
[09:36:38] <johnbender> tig
[09:36:40] <johnbender> are your friends
[09:36:43] * johnbender prefers tig
[09:36:55] <Wilto> That’s git backwards!
[09:36:58] <Wilto> That’s all I got.
[09:37:06] <johnbender> yessir it is
[09:37:10] <toddparker> clever
[09:37:18] * Wilto is pretty proud of himself.
[09:37:31] <johnbender> I don't think my commits made it into that build but I need to check the failure
[09:37:33] <toddparker> gold star Wilto
[09:37:44] <toddparker> sheesh, that was terrifying
[09:37:58] <Wilto> But we’re good, is the main takeaway here?
[09:38:03] <Wilto> Nothing actually blew up?
[09:38:26] <Wilto> console us in this time of uncertainty, johnbender
[09:38:39] <toddparker> so i can go back to complaining that test is stale? i prefer that.
[09:39:22] <gseguin> toddparker: it's java's fault
[09:40:05] <gseguin> if Bender or Eddie can install nodejs on that build machine then it'll be much quicker to build
[09:40:24] * johnbender does not like extra deps
[09:40:43] * johnbender is not a fan of using a browser javascript engine on the server
[09:40:47] <johnbender> lol
[09:40:52] <johnbender> I don't care that much
[09:41:02] <johnbender> what's the wait like 20 seconds?
[09:41:30] <gseguin> hmm it looks longer
[09:41:36] <johnbender> Wilto: toddmparker_: we have more test failures from the merge :( :( :(
[09:41:51] <Wilto> Say it with me:
[09:41:51] * johnbender dies a little inside
[09:41:57] <Wilto> DAMMIT SCOTT
[09:42:08] <Wilto> Or maybe Jenkins Bot. Dammit, Jenkins Bot.
[09:42:17] <gseguin> johnbender: the other dependency problem is in core
[09:42:25] <Wilto> johnbender: A result of merge wackiness, or legit failing?
[09:42:27] <gseguin> it has a dependency on support
[09:42:40] <johnbender> Wilto: doesn't matter they need to get fixed
[09:42:46] <gseguin> which is not explicit because otherwise it creates a circular dependency
[09:42:50] <Wilto> Happy to take those today, either way. I need more test exposure anyway.
[09:42:52] <johnbender> gseguin: kk
[09:43:01] <johnbender> gseguin: we should add a todo
[09:43:02] <Wilto> Or, y’know. Take _some_.
[09:43:11] <johnbender> what do you think about the transition dep?
[09:43:20] * gseguin looks
[09:44:00] <johnbender> toddmparker_: should we wait until scott can look at the tests?
[09:44:09] <gseguin> johnbender: I lost your previous comment in the jqm-jenkins-bot flood
[09:44:13] <gseguin> what about it?
[09:44:31] <johnbender> gseguin: I think the transition.js should be dependent on the fallbacks
[09:44:34] <johnbender> not the other way round
[09:44:44] <gseguin> hmm
[09:44:51] <johnbender> *think*
[09:45:02] <johnbender> although the code seems to suggest otherwise
[09:45:10] <johnbender> if ( $.mobile.transitionCallbacks )
[09:45:15] <johnbender> er
[09:45:18] <johnbender> fallbacks
[09:45:42] <johnbender> honestly I don't see why those are in seperate files really :/
[09:45:55] <Wilto> Im’ma check out those tests.
[09:46:20] <johnbender> Wilto: the ones that are failing are listed at the bottom of the email
[09:46:25] <gseguin> well looking at the code we would have to move `$.mobile.transitionFallbacks = {};`
[09:46:31] <johnbender> gseguin: ye
[09:46:48] <johnbender> hmm
[09:46:51] <Wilto> Oof, eleven.
[09:47:10] <johnbender> yah I guess they were meant to be there as optional in which case the dep is correct
[09:47:40] * johnbender moves on
[09:47:53] <jrburke> gseguin: if there is a circular dependency, those should be supportable, just ping me if there is something you would like me to look at.
[09:48:48] <johnbender> toddmparker_: Wilto: generally, when someone isn't up super late trying to get a merge finished it's better to sort out test issues on the branch
[09:49:07] <Wilto> Oh, no doubt.
[09:49:12] <johnbender> so in Scott's case it would have been good to merge Master into his branch, fix the tests, and then merge to master
[09:49:19] <Wilto> I’m terrified of breaking the tests on master.
[09:49:28] <Wilto> Ah, I follow you.
[09:49:32] <johnbender> since some of those test fixes might require knowledge of the fixes
[09:49:42] <johnbender> Wilto: no it's not a bad thing to break the tests
[09:49:50] <johnbender> I refuse to do that
[09:50:03] <johnbender> it is a bad thing to make other people fix the tests for you :(
[09:50:22] <Wilto> Real talk.
[09:50:26] <johnbender> in this case it's tought becuase the test suite is fragile
[09:50:29] <johnbender> *tough
[09:50:45] <johnbender> thanks to browser state
[09:50:52] <johnbender> which is why I don't mind diving in
[09:50:55] <gseguin> jrburke: I think in that case we should move code where it belongs
[09:51:23] <johnbender> jrburke: in general I agree with gseguin, it likely suggests we have tings tangled up a bit
[09:51:49] <johnbender> might need to split stuff out into some parent dep
[09:51:53] <johnbender> who knows
[09:52:07] <jrburke> agreed, best to confirm it is needed, but if so, feel free to ping me
[09:52:16] * johnbender thanks jrburke heartily
[09:53:09] <Wilto> Yeah, no doubt. Thanks so much for the help, jrburke.
[09:57:56] <toddparker> johnbender: i thought there were just those two failing tests re: transitions
[09:58:02] <toddparker> that were in master too
[09:58:17] <toddparker> seems like there are more? don't think scott saw those before he pushed
[09:58:20] <johnbender> toddparker: I fixed those with my commits but there are a whole host of new ones with the merge according to jenkins
[09:58:30] <toddparker> sheesh
[09:59:06] <johnbender> toddparker: it's nearly impossible to make massive changes to the library without breaking the tests
[09:59:23] <johnbender> toddparker: also keep in mind that firefox 9 is the latest for linux
[09:59:27] <johnbender> which I assume we support
[09:59:47] <johnbender> toddparker: that was the cause of the last two transition issues, the default mechanism
[09:59:49] <Wilto> Running the tests locally in FF9, I’m seeing “require is not defined” errors in “support,” but everything else is a-ok.
[10:00:22] <toddparker> yeah, the tests should still be ok in FF9
[10:00:30] <toddparker> but it should fail the 3D test
[10:00:36] <toddparker> we support it
[10:00:39] <johnbender> yep
[10:00:43] <toddparker> ok
[10:00:49] <johnbender> some of the tests were assuming the old transition logic
[10:00:54] <johnbender> that is
[10:00:56] <toddparker> ah, right
[10:01:04] <johnbender> the only time the viewport-* would be applied was flip
[10:01:05] <toddparker> these two were big changes
[10:01:07] <johnbender> now it's everything
[10:01:17] <toddparker> right, not it's on all, right?
[10:01:28] <johnbender> yep
[10:01:32] <toddparker> be back in a few, grabbing grub
[10:01:35] <johnbender> so I had to remove the test the asserted it was only flip
[10:02:10] <johnbender> driving melanie to the airport
[10:02:29] <johnbender> thats my wife's name btw
[10:02:34] <johnbender> kinblas: ^
[10:03:03] <kinblas>  johnbender: yo?
[10:29:39] <toddparker> back
[10:29:58] <Wilto> Ditto.
[10:30:24] <Wilto> johnbender: What are the odds the test ran, like, mid-merge-chaos?
[10:30:49] <Wilto> Everything is still checking out okay here in FF9—I’m thinking there may have been a hiccup somewhere.
[10:31:47] <gseguin> toddparker: something is wrong with http://code.jquery.com/mobile/latest/demos/
[10:31:57] <gseguin> http://code.jquery.com/mobile/latest/demos/js/jquery.mobile.docs.js
[10:32:14] <gseguin> should hav the commit sha at the top
[10:32:28] <gseguin> I don't know what is going on
[10:32:47] <gseguin> and I don't have access to this machine
[10:32:51] <Wilto> JEEEEHL
[10:33:01] <gseguin> this is a job for johnbender or eddiemonge
[10:39:01] <toddparker> ok, thanks gseguin
[10:40:01] <toddparker> so that links works, but the fixed toolbar page seems busted
[10:40:22] <toddparker> and i'm guessing the docs.js is an old version because transitions are off on larger screens
[11:00:22] <johnbender> toddparker: gseguin: let me go look
[11:00:30] <johnbender> in theory I have access to the cdn machine
[11:02:44] <Wilto> Psst. Top of anyone’s head, how do I see the SHA of my most recent commit?
[11:04:31] <johnbender> ooh theres a comman for just that
[11:04:35] <Wilto> gonna try shaking my computer really hard brb
[11:04:41] <Wilto> Whaaat.
[11:04:52] <johnbender> Wilto: git show HEAD
[11:04:59] <Wilto> Oh. Right.
[11:05:06] <Wilto> This makes good sense.
[11:05:21] <johnbender> git show <sha|HEAD|HEAD~integer>
[11:05:30] <Wilto> _God_ I love git.
[11:05:41] <johnbender> lies
[11:05:41] <johnbender> lol
[11:05:48] <Wilto> True story, dude.
[11:06:56] <Wilto> Git _almost_ makes me understand those “all terminal all the time” folks.
[11:07:18] <Wilto> Almost.
[11:07:31] <jqmobilecommit> [jquery-mobile] Wilto pushed 1 new commit to master: http://git.io/dfhb9Q
[11:07:31] <jqmobilecommit> [jquery-mobile/master] Additional meta information (grouping/required). - Mat Marquis
[11:07:52] <Wilto> (Just testing that stuff out.)
[11:08:36] <gseguin> Man that shit works!!!!
[11:09:15] <gseguin> and it's fast!
[11:09:29] <gseguin> me thinks we should use this for /test ;)
[11:11:11] <Wilto> Man, that does update fast.
[11:11:52] <gseguin> that's what I'm sayin'
[11:12:10] <johnbender> gseguin: how long does the make step take?
[11:12:16] <johnbender> with java and node?
[11:12:18] <gseguin> in node ?
[11:12:22] <johnbender> either
[11:12:24] <johnbender> what is the difference
[11:12:50] <johnbender> time make-with-java
[11:12:52] <gseguin> I'd have to script it to give you the diff
[11:12:54] <johnbender> time make-with-node
[11:13:04] <gseguin> but it
[11:13:10] <gseguin> 's in seconds
[11:13:15] <johnbender> right
[11:13:29] <johnbender> are we stilled worried about that slowing down our updates to /test?
[11:14:10] <gseguin> I think it bothers toddparker
[11:14:18] <johnbender> seconds?
[11:14:31] <Wilto> I would always prefer it be quicker, but if we’re talking _seconds_ here…
[11:16:14] <Wilto> I mean, I think the main idea is that we’re cool with a slight delay in the updates appearing as long as things run quickly, y’know?
[11:16:25] <johnbender> jrburke: did you respond to Tom Dale's post?
[11:16:30] <Wilto> As long as we’re not talking about a half hour or anything crazy.
[11:16:48] <johnbender> that's what I'm thinking
[11:17:27] <johnbender> gseguin: sorry I'm puting on my smelly-sysadmin-curmudgeon hat where the node dependency is concerned
[11:18:03] <Wilto> Is the hat smelly, or are sysadmins?
[11:18:15] <johnbender> smelly
[11:18:25] <Wilto> Or both, I suppose, when a sysadmin is wearing the hat.
[11:18:32] <johnbender> I thought the fact that it was hyphenated with sysadmin-curmudgeon would alude to that
[11:19:15] <Wilto> I can’t read, johnbender. You know that.
[11:19:22] <gseguin> johnbender: he did: http://tagneto.blogspot.com/2012/01/reply-to-tom-on-amd.html
[11:19:27] <johnbender> gseguin: yah reading
[11:19:55] <johnbender> the define definition is just a replacement for what should be the anon function anyhow
[11:20:40] <johnbender> I don't necessarily disagree on the larger issue, which appears to be the same as our conversation
[11:20:47] <johnbender> "but I don't want to use this in production"
[11:20:53] <johnbender> two which I reply
[11:20:57] <johnbender> "then use the build step"
[11:21:16] <johnbender> but I still haven't taken the time to fully grok both pov
[11:23:14] <jrburke> i think part of the confusion is that amd allows non-build configs. some folks seem to take this as it evangelizes never doing builds. i think the other is the desire to avoid a function wrapping. ideally it would not be needed, but given the things it enables and that most people use one anyway today, that seems like a worthwhile tradeoff
[11:23:42] <johnbender> jrburke: that summarizes my take thus far
[11:24:00] <johnbender> monolithic libraries may not benefit from the definition of modules
[11:24:04] <johnbender> I'm still not sure we will
[11:24:10] <johnbender> though we are definitely looking into it
[11:24:36] <johnbender> but at the very least, using it for dep definition and vetting has been a gigantic win imo
[11:24:44] <gseguin> johnbender:  do you mean exposing an AMD module for the built bundle?
[11:24:46] <johnbender> s/we are/we will/
[11:25:12] <johnbender> gseguin: no I mean defining individual modules for each widget
[11:25:16] <johnbender> as an example
[11:25:25] <johnbender> instead of one monolithic module
[11:25:31] <gseguin> oh yeah that, I don't think we need it
[11:25:34] <johnbender> right
[11:25:38] <johnbender> and ember.js may not either
[11:26:05] <johnbender> I guess what Tomdale is saying is that he can't imagine a situation in which you would need to do that
[11:26:14] <jrburke> and it is a change in dev style too. for this project, i think it is about getting to leverage other tools, getting the modularity. for me, being able to pull down jquery mobile source and have it as part of my project but then just build out the parts i use, that is useful. but then i'm already drinking the AMD koolaid.
[11:26:20] <johnbender> and tbh right now I can't either but that doesn't mean the usecase doesn't exist
[11:26:42] <jrburke> yeah if ember does not need custom builds where you can just take part of it, it may not be the right fit for them.
[11:27:02] <johnbender> everyone is right!
[11:27:08] <johnbender> I like when it ends like that
[11:27:13] * johnbender queues sunset
[11:27:18] <johnbender> err
[11:27:24] * johnbender cues the sunset
[11:27:43] <jrburke> with an amd loader though, not every project needs to deliver custom build tools/web builders.
[11:27:48] <jrburke> but yeah, lets all hug it out
[11:27:49] * johnbender queues the sunset then cues the sunset
[11:27:54] <Wilto> I like AMD because it’s easy to spell.
[11:27:59] <Wilto> I’ll show myself out.
[11:28:35] <gseguin> lol
[11:29:15] <jqm-jenkins-bot> Project jqm-master build #404: STILL FAILING in 15 min: http://10.59.19.240:8080/job/jqm-master/404/
[11:29:15] <jqm-jenkins-bot> mat: Additional meta information (grouping/required).
[11:29:55] <Wilto> …Huh.
[11:41:40] <johnbender> Wilto: working on the degradeInputs failures
[11:50:47] <toddparker> hey guys…just a heads up that scott gonzalez from UI had dome Q's about why we're switching to AMD. I explained why and where we're at, but he might ping us here to follow up
[11:51:16] <johnbender> toddparker: "switching to amd" is definitely not what we're doing
[11:51:18] <johnbender> sweet jesus
[11:51:36] <johnbender> toddparker: tell him we're glad to clarify
[11:52:13] <johnbender> if I had known it would be an issue like this I would have taken the time to do a serious write up about exactly what we're using it for
[11:52:50] <johnbender> and by "I would have taken the time", I mean I would have pestered gseguin to do it
[11:52:56] <johnbender> :P
[11:53:46] <toddparker> i take full responsibility if i didn't ask the right people
[11:53:51] <toddparker> no worries
[11:53:55] <johnbender> toddparker: no way no way
[11:54:18] <toddparker> on the download builder side of things, there is a potential opportunity to leverage what UI is planning
[11:54:19] <johnbender> I honestly didn't think it would warrant this much discussion
[11:54:28] <toddparker> i didn't either :/
[11:54:35] <johnbender> maybe if we had left it out of the docs
[11:54:41] <johnbender> and left it to the tests and builder
[11:54:47] <johnbender> builder/build
[11:55:01] <johnbender> toddparker: gseguin: incidentally I can't ssh into the cdn server
[11:55:03] <johnbender> for some reason
[11:55:11] <johnbender> it's not even refusing me from what I can tell
[11:55:45] <johnbender> just hangs
[11:55:58] <johnbender> danheberden: any idea why I can't log into the code.jquery.com
[11:56:01] <toddparker> odd.
[11:56:10] <johnbender> I get ping responses but ssh just hangs
[11:56:31] <toddparker> from scott g: Since jQuery UI is also working on a new download builder, we should be combining efforts and building a single service that can handle both projects. We have documentation for UI at http://wiki.jqueryui.com/w/page/41505725/Download%20Builder%20Rewrite and a (bare) repo at https://github.com/jquery/download-builder
[11:56:40] <toddparker> The download builder is going to leverage the package.json files that we'll be using for the new plugins site. I'm currently working on adding support for suites, which will let us verify that everything is accounted for on the plugins side. Then I can get back to Nodejitsu about the download builder, so they can start implementing the actual logic. We should figure out what the similarities and differences are be
[11:56:40] <toddparker> UI and Mobile so we can judge whether it makes sense to actually merge the download builders.
[11:56:42] <danheberden> johnbender because logging into a cdn would mean you'd connect to just one of the servers that support it
[11:57:03] <johnbender> danheberden: that makes good sense
[11:57:12] <danheberden> now sshing into the box that holds the cdn content, code.origin.jquery.com - that might work ;)
[11:57:13] <johnbender> danheberden: actually that reminds me
[11:57:25] <johnbender> danheberden: how is that distribution handled?
[11:57:31] <johnbender> is that some DNS trickery
[11:57:46] <danheberden> edgecast polls our box
[11:58:01] <danheberden> and our script on code.origin.jquery.com looks for ?reload in the url
[11:58:06] <danheberden> and submits it to edgecast
[11:58:06] <johnbender> danheberden: yah I'm just wondering how edgecast directs users to different cdn servers depending on their location
[11:58:28] <johnbender> it's a general, "how does cdn caching work on the internets" question
[11:58:32] <danheberden> johnbender ah - yeah, i think it's a cached dns
[11:58:34] <johnbender> kk
[11:58:55] <johnbender> I was having this discussion the other day with one of the guys who works on rubygems.org
[11:59:09] <johnbender> and we weren't sure of the mechanics
[11:59:31] <johnbender> danheberden: I think we were discussing how to direct people to the closes server for gem manifests etc
[11:59:37] <johnbender> anyhow
[11:59:43] <johnbender> danheberden: thanks again
[12:01:22] <gseguin> toddparker: does UI have a dependency resolver?
[12:01:43] <johnbender> toddparker: yah, I had no idea they were working on anything
[12:01:50] <johnbender> and I'd have to wonder what their deps resolver is?
[12:02:13] <toddparker> gseguin - from what i can see, they are planning on using the same json definition as the plugin site and each has reps listed
[12:02:22] <johnbender> toddparker: :(
[12:02:24] <johnbender> custom dep resolver
[12:02:25] <toddparker> not sure how well it works with all the nesting
[12:02:32] <toddparker> yeah
[12:02:38] * johnbender doesn't like re-solving solved problems 
[12:02:48] <danheberden> scott_gonzalez has been working on it re: the plugins site
[12:02:49] <toddparker> i agree
[12:02:53] <danheberden> for context on where the work has been done
[12:03:04] <toddparker> yeah, thanks danheberden
[12:03:16] <toddparker> do you have the json schema handy?
[12:03:22] <danheberden> https://github.com/jquery/plugins.jquery.com
[12:03:26] <danheberden> it's in there
[12:04:17] <johnbender> toddparker: ah, I think that's the way you specify and npm module
[12:04:18] <danheberden> as for building, that was going to rely on the package.json stuff
[12:04:19] <johnbender> gseguin: ^
[12:04:44] <danheberden> i hope scott g get's in here soon
[12:04:59] <johnbender> hmm
[12:05:14] <danheberden> pinged him on skype
[12:05:24] <gseguin> yeah so it works a-la npm
[12:05:28] <johnbender> scott_gonzalez: heyo!
[12:05:30] <johnbender> there you are
[12:05:35] <scott_gonzalez> Here I am!
[12:05:41] <johnbender> I'm just doing a lot of speculating so I'm glad you are here
[12:05:42] <gseguin> hi scott_gonzalez
[12:05:50] <scott_gonzalez> Hi gseguin
[12:06:11] <johnbender> scott_gonzalez: so what do you guys have planned for UI in terms of a download builder
[12:06:26] <johnbender> specifically, dependency intraproject dep resolution
[12:06:39] <johnbender> since that's the only thing we've really addressed
[12:06:46] <scott_gonzalez> http://wiki.jqueryui.com/w/page/41505725/Download%20Builder%20Rewrite
[12:06:50] <johnbender> s/dependency//
[12:06:57] <scott_gonzalez> package.json will handle dependencies
[12:07:03] <scott_gonzalez> https://github.com/jquery/plugins.jquery.com/blob/master/docs/package.md
[12:07:23] <Wilto> Looks like my timing is good.
[12:07:30] <johnbender> scott_gonzalez: ok
[12:07:45] <johnbender> so each plugin in UI will need to have it's own package.json?
[12:07:55] <scott_gonzalez> For suites, like jQuery Mobile, we'll support many package.jsons in the repo
[12:07:59] <gseguin> yeah so that works for them but I don't think what would work for us
[12:08:03] <johnbender> where a plugin == new widget definition?
[12:08:05] <scott_gonzalez> One for each plugin, e.g., jquery.mobile.page.package.json
[12:08:13] <gseguin> because our deps are internal
[12:08:19] <scott_gonzalez> How does it not work for Mobile?
[12:08:24] <johnbender> gseguin: it would work
[12:08:34] <johnbender> it just requires a package json for every one of our files
[12:08:50] <gseguin> yeah ok
[12:08:58] <gseguin> that's what I meant
[12:09:05] <johnbender> scott_gonzalez: so the difference between our two approaches is the dep resolution mechanism it seems
[12:09:44] <johnbender> we went with AMD just for the build
[12:09:56] <johnbender> and as a side effect we now export a global module just like core does
[12:10:04] <johnbender> but that is really just a side effect
[12:10:04] <gseguin> I think it's a good model for UI given that you can't ask plugin developers to adopt AMD
[12:10:16] <johnbender> very true
[12:10:16] <scott_gonzalez> We should probably avoid that.
[12:10:23] <gseguin> and adding a package.json file to their repo is a small price to pay
[12:10:28] <johnbender> scott_gonzalez: "We" meaning UI?
[12:10:39] <scott_gonzalez> We = all jQuery projects
[12:10:54] <Wilto> …Doing the thing that core does, you mean?
[12:11:13] <scott_gonzalez> I think the thing that core does is fine.
[12:11:17] <johnbender> scott_gonzalez: so you're opposed to exporting and amd module?
[12:11:24] <johnbender> s/and/an/
[12:11:25] <scott_gonzalez> But I don't think we should use AMD in all files.
[12:11:38] <gseguin> for us it makes sense
[12:11:39] <johnbender> scott_gonzalez: at which point in the process?
[12:11:43] <scott_gonzalez> I don't think you should have to use AMD or run a build in order to do dev.
[12:11:53] <gseguin> since you can compose a bundle of different features
[12:11:53] <johnbender> you don't have to
[12:12:06] <johnbender> scott_gonzalez: we support the php way of doing things too
[12:12:13] <scott_gonzalez> can compose a bundle of different features = have to run a build, right?
[12:12:16] <scott_gonzalez> PHP way?
[12:12:17] <johnbender> and from my side I think you shouldn't have to run php to do dev :D
[12:12:32] <scott_gonzalez> 100% agree; you shouldn't have to run PHP.
[12:12:32] <johnbender> scott_gonzalez: sorry
[12:12:37] <johnbender> the asset pipeline
[12:12:42] <johnbender> whatever it is
[12:12:43] * gseguin agrees with johnbender
[12:12:52] <johnbender> so devs can do it the old way
[12:12:55] <johnbender> or they can use amd
[12:13:02] <scott_gonzalez> I don't see why any jQuery project shouldn't work out of the box with plain script tags
[12:13:10] <johnbender> where the "old way" is using our index.php scripts
[12:13:26] <johnbender> scott_gonzalez: so you think the build step is the way to go?
[12:13:34] <gseguin> sorry maybe it's not clear
[12:13:39] <toddparker> sorry, scott_gonzalez - thismight help
[12:13:39] <toddparker> p
[12:13:52] <toddparker> at the start we had a php script to concat the css and js
[12:13:54] <gseguin> scott_gonzalez: we do not require an AMD loader to run
[12:14:07] <gseguin> you can drop a jquery script tag
[12:14:18] <gseguin> and then a jquery.mobile script tag
[12:14:22] <gseguin> and off you are
[12:14:40] <gseguin> does that address your concern?
[12:14:41] <toddparker> johnbender and gseguin - i don' think scott_gonzalez is familiar with the old way
[12:15:09] <johnbender> toddparker: well it sort of doesn't matter, I mean we had _some way_ of loading javascript with many files that make up the library
[12:15:12] <johnbender> whatever way that was
[12:15:28] <scott_gonzalez> I would expect that any jQuery project would work if I cloned the repo and included individual files directly.
[12:15:40] <johnbender> outside of those two options (asset pipeline/amd) I'm not clear what else we would be doing
[12:15:47] <johnbender> ok
[12:15:50] <johnbender> so third way is manual
[12:15:55] <johnbender> and you can  certainly do that!
[12:16:20] <scott_gonzalez> How does that work if you're using AMD?
[12:16:27] <johnbender> with the one caveat that when our individual files were built ordering was assumed :(
[12:16:57] <johnbender> I suppose you would have to include the define shim at the top, but other than that you're good to go
[12:16:58] <gseguin> we use only one part of AMD
[12:17:00] <scott_gonzalez> Yes, order matters, always.
[12:17:03] <gseguin> the dependency management
[12:17:39] <gseguin> this way we never have to figure out that order
[12:17:42] <johnbender> scott_gonzalez: are you worried about that define shim?
[12:17:45] <gseguin> the system does it for us
[12:17:55] <scott_gonzalez> "the system" is what I want to avoid.
[12:17:57] <Wilto> Yeah, scott_gonzalez, I’m not really sure what you’re proposing here.
[12:19:07] <scott_gonzalez> I'm proposing that this work for all jQuery projects: https://github.com/jquery/jquery-ui/blob/master/demos/accordion/default.html#L6-10
[12:19:38] <johnbender> scott_gonzalez: alright, it does, save that you have to add our define shim in above it
[12:19:50] <Wilto> Exactly. Is that the deal-breaker, here?
[12:20:32] <gseguin> scott_gonzalez: that still works with the bundle that is released
[12:20:45] <johnbender> especially given that I can't see anyone doing that in place of the loader or the asset concat
[12:20:55] <scott_gonzalez> I understand that it works with the bundle, but many people will not be using that.
[12:21:28] <scott_gonzalez> A lot of people do custom builds on their own servers with their own stacks.
[12:21:45] <johnbender> and what's the concern?
[12:21:51] <johnbender> that we can't do that?
[12:21:54] <scott_gonzalez> They now need to work with or around AMD
[12:21:58] <johnbender> nope
[12:22:17] <johnbender> they can use our build tools to customize the build they want
[12:22:22] <scott_gonzalez> No
[12:22:29] <scott_gonzalez> custom builds on their own servers with their own stacks.
[12:22:41] <johnbender> so how doees UI accomplish that?
[12:22:52] <johnbender> s/doees/does/
[12:22:55] <scott_gonzalez> By not having any wrappers like AMD.
[12:23:07] <scott_gonzalez> Plain scripts always work in all build environments.
[12:23:10] <toddparker> so scott_gonzalez - are you just asking that there is a place to access to the list of js files but each wouldn't have any of the AMD wrapper stuff?
[12:23:13] <gseguin> so how do you handle / enforce dependencies
[12:23:14] <gseguin> ?
[12:23:20] <johnbender> scott_gonzalez: ^
[12:23:45] <scott_gonzalez> Are you asking as someone building a download builder or as a developer using individual files?
[12:23:47] <gseguin> between internal modules that is
[12:23:49] <johnbender> they don't work in all build environments unless they are completely dependency free
[12:23:49] <toddparker> we could probably spit out a folder of individual files for that, we already do that in the build (remove the wrappers)
[12:24:15] <johnbender> toddparker: very true, since we already strip them
[12:24:37] <gseguin> toddparker: would a make step be acceptable for that?
[12:24:38] <johnbender> scott_gonzalez: are all of UI's files order independent?
[12:24:53] <toddparker> maybe gseguin
[12:24:54] <scott_gonzalez> No, I'm not saying they need to be.
[12:25:15] <toddparker> i dunno, just trying to get a read for scott_gonzalez on what the goals are, then we can figure out the plan
[12:25:28] <johnbender> scott_gonzalez: then, for the developer building their own stack, don't you have to provide them the order in which those files should be loaded or concatenated?
[12:25:44] <scott_gonzalez> Yes.
[12:26:22] <scott_gonzalez> But the only important thing for order is that your dependencies are loaded first.
[12:26:32] <scott_gonzalez> Order within your dependencies doesn't matter to you.
[12:27:05] <johnbender> scott_gonzalez: and your proposal is to use  the packages.json to define that order for developers who want to build their own stacks?
[12:27:21] <toddparker> how are reps expressed in this scenario?
[12:27:25] <toddparker> deps
[12:27:44] <gseguin> one package.json per module
[12:27:55] <toddparker> gotcha
[12:27:58] <johnbender> scott_gonzalez: so they need some tool to read the packages.json and then feed the deps into a compiler?
[12:28:02] <scott_gonzalez> Yes, package.json will list dependencies, which tells you the order.
[12:28:09] <scott_gonzalez> But many people won't even need that.
[12:28:13] <scott_gonzalez> Honestly, it's generally pretty easy to figure out dependencies manually.
[12:28:13] <gseguin> which for us would mean one directory per module
[12:28:25] <gseguin> and in that directory one file and its package.json
[12:28:32] <scott_gonzalez> gseguin: No, all package.json files are in the root
[12:28:40] <scott_gonzalez> jquery.mobile.page.package.json
[12:29:01] <johnbender> either way
[12:29:09] <johnbender> it requires a json file per dep
[12:29:12] <scott_gonzalez> It's important for integration with the upcoming plugins site.
[12:29:21] <scott_gonzalez> It will look at *.package.json in the root of the repo.
[12:29:41] <Wilto> That’s… A lot of json files.
[12:30:16] <johnbender> scott_gonzalez: I think for plugins that makes perfect sense, I don't see it being such a big win for us if the only scenario is for letting developers who are concating their own js have a module independent way of ordering  their deps
[12:30:26] <Wilto> We’re about to lose internet—toddparker and I may disappear for a minute or two.
[12:31:20] <gseguin> same here
[12:31:34] <scott_gonzalez> jQuery Mobile will not be on the plugins site if it doesn't have package.json files.
[12:31:39] <johnbender> scott_gonzalez: that is, if (more likely when) we want to  get people involved with plugins we'll definitely want them to create that manifest
[12:31:49] <gseguin> can we adjourn this discussion ?
[12:31:53] <johnbender> yah
[12:31:56] <johnbender> agreed
[12:32:04] <gseguin> be back in about an hour
[12:32:10] <johnbender> scott_gonzalez: can we table it and cross that road when we come to it I guess?
[12:32:31] <scott_gonzalez> when we come to it = before you finish the download builder?
[12:32:59] <gseguin> our bundle builder back end actually already works today
[12:34:56] <johnbender> scott_gonzalez: "when we come to it" == when we want to make use of the plugins site
[12:35:07] <johnbender> maybe?
[12:35:45] <toddmparker_> hey guys, i'm back. bad internet. bad.
[12:36:03] <scott_gonzalez> TBH, I'm concerned about duplicating infrastructure efforts and maintenance
[12:36:29] <johnbender> scott_gonzalez: hmm, well our setup is almost PURELY for our build process/makefile
[12:36:53] <johnbender> and I'm not clear on how we would integrat with the plugins site right now anyway
[12:36:53] <scott_gonzalez> We will end up with two build systems that do nearly identical work.
[12:36:59] <toddmparker_> so there are a few moving parts here
[12:37:25] <toddmparker_> to be listed on the plugin site, we need to use that JSON format
[12:37:53] <toddmparker_> which is fine, but will all of our scripts want to be listed there?
[12:38:12] <toddmparker_> scott_gonzalez: will every UI plugin be listed on the plugin site in your plans?
[12:38:16] <scott_gonzalez> Yes.
[12:38:32] <scott_gonzalez> There are two reasons that's essential.
[12:38:49] <toddmparker_> we have broken up our "core" onto smaller modules so i'm wondering if every little thing makes sense atomiclaly like that
[12:38:52] <scott_gonzalez> 1) So people can find the plugin they care about (people will not search for "ui" if they want an accordion)
[12:38:53] <toddmparker_> but that's a detail
[12:39:03] <scott_gonzalez> 2) So people can properly list their dependencies if they extend or build on top of UI plugins
[12:39:16] <toddmparker_> yeah, that part makes sense. not being listed there was a big issue for UI
[12:39:31] <toddmparker_> ok
[12:39:41] <scott_gonzalez> So you'll want things like page, button, slider, etc. all listed individually
[12:39:42] <toddmparker_> do you know how soon that is supposed to launch?
[12:40:11] <scott_gonzalez> I believe the biggest blocker is full site refresh
[12:42:10] <toddmparker_> sheesh. any movement on that that?
[12:42:29] <toddmparker_> the issue we have is that we need to launch stuff soon, like in a month
[12:42:46] <toddmparker_> the site and plugins site have been floating for 2 years now
[12:43:21] <toddmparker_> i know there is renewed momentum but we're going to be get a lot fo heat for now having a plan in place for dep mgmt and downloading custom builds
[12:44:09] <toddmparker_> this is prolly a larger discussion, i know you're just trying to keep us in sync and i appreciate that
[12:44:43] <toddmparker_> hypothetically, i'd imagine we could use the AMD stuff we've done to generate the JSON
[12:45:00] <scott_gonzalez> is AMD in master yet?
[12:45:04] <johnbender> scott_gonzalez: yes
[12:45:11] <johnbender> toddmparker_: that's actually a nice idea
[12:45:14] <scott_gonzalez> But not in a release yet?
[12:45:15] <toddmparker_> yep, we landed it maybe 2 weeks ago?
[12:45:21] <toddmparker_> nope
[12:45:31] <johnbender> toddmparker_: I want to get my hands on the dep tree anyhow :D
[12:45:44] <toddmparker_> and it won't really have a footprint in a release since we strip it all out as part of the build
[12:45:50] <johnbender> scott_gonzalez: ^
[12:46:36] <scott_gonzalez> I'm not concerned about footprint in a build.
[12:46:52] <scott_gonzalez> Releasing this is pretty much a guarantee that it will stay around.
[12:47:05] <johnbender> scott_gonzalez: that's the plan currently
[12:48:26] <toddmparker_> the technical concerns should be discussed until we're all happy with the approach.
[12:49:02] <toddmparker_> when i look at what it will take to get us a download builder, here's what I see as the chain of events that need to happen:
[12:49:06] <toddmparker_> site refresh > plugin site > new UI builder > new mobile builder
[12:49:43] <toddmparker_> none of these even have timetables which probably means we'd be lucky to get a builder done by the end of the year
[12:49:58] <toddmparker_> fortunately, UI has a builder so timing isn't as critical
[12:50:34] <toddmparker_> but on mobile, people really want to do a custom build and we've decoupled the heck out of everything to make that happen.
[12:50:49] <scott_gonzalez> There's nothing actually blocking the new builder
[12:50:57] <johnbender> there are many things that aren't plugins at all
[12:51:07] <johnbender> but rather just layers that can be removed
[12:51:31] <toddmparker_> like touch events?
[12:51:42] <johnbender> like pushstate
[12:51:47] <johnbender> like input degredation
[12:51:48] <toddmparker_> right
[12:51:51] <johnbender> vmouse
[12:51:57] <toddmparker_> all sorts of oddball stuff.
[12:52:05] <johnbender> list filtering
[12:52:10] <toddmparker_> now each transition is a separate js file too
[12:52:20] <johnbender> custom selects
[12:52:26] <johnbender> toddmparker_: well, the fallbacks are
[12:52:31] <johnbender> we need to talk about that :P
[12:52:46] <toddmparker_> so scott_gonzalez - if the site and plugin site aren't blockers, i'd imagine the UI builder would still come first?
[12:52:59] <toddmparker_> yeah johnbender
[12:53:06] <scott_gonzalez> They should be the same things.
[12:53:18] <scott_gonzalez> UI builder === mobile builder, that's my goal.
[12:53:32] <scott_gonzalez> They just take different repos as input.
[12:53:44] <toddmparker_> meaning, you feed the tool the JSON and it builds the UI and files?
[12:53:46] <johnbender> scott_gonzalez: I think toddmparker_ made a good suggestion
[12:54:09] <johnbender> we could, with a dependency tree generated by amd build the json files
[12:54:24] <scott_gonzalez> Yeah, the builder gets a repo, can find the package.jsons, manage dependencies, generate the UI, build a zip, integrate with ThemeRoller, etc.
[12:54:27] <toddmparker_> that seems smart to me...
[12:54:46] <johnbender> we would want to do something like that anyway since there's a lot of information in each that will be identical (eg version, author etc)
[12:54:50] <toddmparker_> so how far along is that?
[12:54:59] <toddmparker_> (the builder)
[12:55:09] <scott_gonzalez> Not very, because I've been focusing on the plugins site :-P
[12:55:30] <scott_gonzalez> But there's nothing really holding it up besides me talking to Charlie from Nodejitsu
[12:55:31] <toddmparker_> understandable given the situation
[12:56:05] <scott_gonzalez> We (UI) were in no rush, since we're not releasing our new builder until 1.9 anyway
[12:56:06] <toddmparker_> have you guys already written up all the JSON info for the UI plugins?
[12:56:31] <scott_gonzalez> Not yet, I was literally about to start that when this discussion started.
[12:56:48] <scott_gonzalez> Because I'm working on support for plugin suites right now for the plugins site.
[12:57:06] <scott_gonzalez> So I need to build up a suite to test with.
[12:57:44] <johnbender> scott_gonzalez: we can ask jburke to add a feature to r.js to dump the dep tree
[12:58:15] <johnbender> which is what we would use to generate the dependencies
[12:58:16] <scott_gonzalez> johnbender: Nothing James adds to r.js will make me happier about AMD
[12:58:37] <johnbender> scott_gonzalez: happy or not it would help us generate the packages.json?
[12:58:56] <johnbender> scott_gonzalez: is this just about not liking AMD?
[12:58:58] <scott_gonzalez> I guess. You already have all of the info though.
[12:59:26] <johnbender> scott_gonzalez: alright, I thought that might be usefull in light of needing repos to test with
[12:59:29] <scott_gonzalez> You don't care about your dependency tree.
[12:59:30] <johnbender> that would get us there faster
[12:59:42] <johnbender> scott_gonzalez: not sure what you mean
[12:59:43] <scott_gonzalez> You care about one level of dependencies, for each individual file, which you already know.
[13:00:12] <johnbender> hmm, how do you figure?
[13:00:41] <scott_gonzalez> package.json only lists direct dependencies, just like AMD.
[13:01:14] <johnbender> scott_gonzalez: right but I only need _one_ dependency tree to generate all of the json files in theory right?
[13:01:20] <johnbender> as long as its a tree and not a graph
[13:01:31] <johnbender> hmm
[13:01:55] <scott_gonzalez> No, a tree is not helpful.
[13:01:57] <johnbender> although that assumes that it includes all of each nodes dependencies
[13:02:32] <scott_gonzalez> You will end up with a dependency tree that is normalized to only have a single instance of each plugin.
[13:02:49] <scott_gonzalez> I'm sure James could build both a tree and what you'd actually want.
[13:02:52] <johnbender> right, per my last comment
[13:03:02] <scott_gonzalez> Especially since what you actually want is very simple logic, while the tree is not.
[13:03:58] <johnbender> scott_gonzalez: alright so it sounds like you're fine with us generating the json files as a build target?
[13:04:15] <scott_gonzalez> No.
[13:04:24] <johnbender> we'd obviously have to provide a branch or some such with those files built for you
[13:04:35] <johnbender> not expecting the plugins website to handle that step for us
[13:04:44] <scott_gonzalez> The plugins site will expect these to live in master.
[13:04:54] <scott_gonzalez> And be accurate at all times.
[13:04:59] <johnbender> scott_gonzalez: what about stable releases branches?
[13:05:08] <scott_gonzalez> They need to be there too.
[13:05:20] <scott_gonzalez> well, tags, not branches.
[13:05:24] <johnbender> hmm
[13:05:26] <scott_gonzalez> It only cares about tags and master.
[13:05:29] <johnbender> that's an issue for us
[13:05:42] <johnbender> we apply bug fixes to stable branches
[13:05:55] <scott_gonzalez> Why does that matter?
[13:06:01] <johnbender> it's a branch
[13:06:14] <scott_gonzalez> Branches don't get listed. Only tags get listed.
[13:06:23] <scott_gonzalez> But master needs to have package.json files so we can track other stuff.
[13:06:25] <johnbender> so if we wanted to have many possible versions on the plugins site how would we do that?
[13:06:31] <johnbender> for example
[13:06:32] <scott_gonzalez> We need the package.json to know what plugin we're working with.
[13:06:34] <johnbender> patch release versions of 1.0
[13:06:41] <johnbender> 1.0.1
[13:06:42] <scott_gonzalez> You need to tag 1.0.1
[13:07:02] <johnbender> so we need to change our branching strategy too?
[13:07:23] <scott_gonzalez> No, you need to have tags to get listed. The plugins site doesn't care what branching strategy you use.
[13:07:40] <johnbender> we do feature releases in master
[13:07:43] <johnbender> so 1.1
[13:07:50] <johnbender> and we do patch releases based on a stable branch
[13:07:56] <scott_gonzalez> Tags are completely separated from branches
[13:08:02] <johnbender> i realize that
[13:08:07] <johnbender> I'm saying thats the problem
[13:08:17] <scott_gonzalez> How is that a problem?
[13:08:19] <johnbender> we mix features adn bug fixes freely in master
[13:08:25] <johnbender> because its meant for 1.1
[13:08:28] <johnbender> not patch releases
[13:08:33] <scott_gonzalez> That's fine.
[13:08:42] <johnbender> so how do I do a patch release?
[13:08:48] <scott_gonzalez> git tag 1.0.1
[13:08:55] <scott_gonzalez> git push
[13:08:56] <johnbender> so if I commit a feature
[13:09:00] <johnbender> then I commite a bug fux
[13:09:02] <johnbender> *fix
[13:09:16] <scott_gonzalez> Nothing gets listed until you tag.
[13:09:19] <johnbender> and i only want to release the bug fix tagging won't work
[13:09:23] <scott_gonzalez> And then the only thing we look at is the tag.
[13:09:48] <scott_gonzalez> Why not? tag 1.0.1 from your stable branch.
[13:10:01] <johnbender> because it there's a feature commited _before_ the bug fix
[13:10:09] <scott_gonzalez> Then you can't release anyway.
[13:10:10] <johnbender> that requires a 1.1 release
[13:10:22] <scott_gonzalez> So `git tag 1.1.0`
[13:10:25] <johnbender> scott_gonzalez: we can if we only commit bug fixes on the patch release branch
[13:10:49] <scott_gonzalez> I don't understand how this imposes any restrictions on your branching strategy.
[13:11:31] <scott_gonzalez> BTW, you'll need to switch to semver to get listed.
[13:12:02] <johnbender> we use semver
[13:12:38] <johnbender> scott_gonzalez: if we only want to release bug fixes in a patch release
[13:12:44] <johnbender> not features
[13:13:20] <johnbender> we are doing that by commiting those bug fixes to master, along with features, and then cherry picking them over to a stable branch
[13:13:23] <scott_gonzalez> None of the mobile tags are semver, they're all missing the patch version.
[13:13:33] <scott_gonzalez> So tag from the stable branch
[13:15:03] <johnbender> scott_gonzalez: I was under the impression omitting the patch release version was assumed to be .0
[13:15:33] <johnbender> maybe I need to reread semver.org
[13:15:50] <scott_gonzalez> "A normal version number MUST take the form X.Y.Z where X, Y, and Z are non-negative integers."
[13:16:05] <scott_gonzalez> You can verify by using node-semver.
[13:16:14] <scott_gonzalez> require( "semver" ).valid( versionString )
[13:16:20] <scott_gonzalez> That matters more than semver.org
[13:16:23] * johnbender doesn't have node installed
[13:16:31] <johnbender> good to know
[13:16:33] <scott_gonzalez> semver.org disallows 1.0.0a
[13:16:41] <scott_gonzalez> node-semver allows it.
[13:17:20] <toddmparker_> these are all helpful, thanks scott_gonzalez
[13:17:38] <toddmparker_> so it seems like our branching strategy is ok
[13:17:48] <toddmparker_> ok, so back to the nut of the issue here...scott, is seems that you're really not happy with AMD, regardless of how it's used here
[13:17:49] <johnbender> yah we can just tag on the stable branch when we want to release it
[13:17:53] <scott_gonzalez> Yes, your branching strategy is fine.
[13:18:57] <toddmparker_> even if we had the package.json setup and all that for the plugin site and future d/l builder
[13:19:13] <toddmparker_> you don't like the idea of us using amd
[13:19:56] <scott_gonzalez> Correct.
[13:20:23] <scott_gonzalez> I don't like that it's viral, but it sounds like there's a shim that makes it non-viral.
[13:20:36] <toddmparker_> right. ok so that's clear.
[13:20:49] * gseguin is back
[13:20:53] <johnbender> scott_gonzalez: will the plugins site build all tags?
[13:20:55] <toddmparker_> good timing gseguin
[13:21:01] <scott_gonzalez> No, it won't do any builds.
[13:21:08] <johnbender> scott_gonzalez: sorry,
[13:21:14] <johnbender> "include" all tags
[13:21:21] <scott_gonzalez> Ah, yes, sort of :-P
[13:21:30] <scott_gonzalez> It will look at all tags
[13:21:38] <scott_gonzalez> Filter them down to tags that are valid semver
[13:21:47] <scott_gonzalez> Then filter those down to tags that include valid package.json
[13:22:11] <scott_gonzalez> Then filter those down to tags that include plugins that the repo owner actually "owns"
[13:22:26] <toddmparker_> so if something goes wrong in your repo on these, do the plugins disappear from the site?
[13:22:34] <scott_gonzalez> So if I own "foo" and you push with a package.json that says your plugin name is "foo", you won't get listed.
[13:22:35] <johnbender> scott_gonzalez: could we use the dash notation to signal the builder?
[13:23:18] <scott_gonzalez> Once they're listed, they're up for good (unless you as the owner decide to unlist it)
[13:23:18] <johnbender> scott_gonzalez: or, you said "push" will this host the git repos so we could just push whatever we wanted?
[13:23:48] <scott_gonzalez> It's supposed to be magic like jQuery :-P
[13:23:49] <toddmparker_> kk
[13:23:52] <johnbender> scott_gonzalez: lawl
[13:24:01] <scott_gonzalez> You add a post-receive hook to your GitHub repo
[13:24:07] <scott_gonzalez> Then the plugin site handles everything for you.
[13:24:15] <scott_gonzalez> On every push, it will inspect if you have new tags.
[13:24:50] <johnbender> ok so it's a pull
[13:24:55] <johnbender> from the plugin site side
[13:25:10] <scott_gonzalez> We're hoping to build a pre-commit hook that will validate your package.json too, so that you can be confident that your stuff will work.
[13:25:39] <scott_gonzalez> Yeah, the plugins site will clone the repo on the first post-receive hook and a fetch every time after that.
[13:26:15] <toddmparker_> that part is slick
[13:26:38] <scott_gonzalez> Yeah, it's also kind of a nightmare from the plugins site side :-P
[13:27:04] <scott_gonzalez> "Here's a repo, have fun figuring out what plugin and version I wanted to list" :-)
[13:27:06] <_|Nix|_> Hey! I'm trying to port popup to the head of master, but I dunno how to make it work with the dependency stuff ... the popup code simply doesn't get added to the page.
[13:27:25] <johnbender> gseguin: ^
[13:27:28] <_|Nix|_> Is there a howto somewhere on how to add files to to js/
[13:27:30] <_|Nix|_> ?
[13:27:52] * gseguin catches up
[13:28:02] <toddmparker_> (score a point for scott_gonzalez)
[13:29:49] <toddmparker_> _|Nix|_: gseguin or johnbender can catch you up
[13:29:55] <gseguin> _|Nix|_: no howto yet, it's pretty straight forward tho
[13:30:00] <scott_gonzalez> Heh, It took many many discussions with Richard to figure this out.
[13:30:07] <_|Nix|_> gseguin: Lay it on me, bro!
[13:30:08] <scott_gonzalez> And one discussion with isaacs :-)
[13:30:15] <toddmparker_> how the plugin site stuff works?
[13:30:30] <scott_gonzalez> Yeah.
[13:30:33] <toddmparker_> that is the clearest explanation on how it works i've heard
[13:30:55] <johnbender> alright so it sounds like we're not restricted on working with the plugins site so long as we can tag properly and provide those json fils
[13:30:56] <gseguin> _|Nix|_: what are your dependencies?
[13:30:59] <johnbender> *files
[13:30:59] <toddmparker_> have we started messaging to devs how to do all this stuff? seems like it will take some time to get things set up
[13:31:09] <_|Nix|_> gseguin: jquery and jquery.mobile.widget
[13:31:16] <scott_gonzalez> Yeah, there was a blog post.
[13:31:36] <gseguin> _|Nix|_: alright so just wrap your code within:
[13:31:48] <scott_gonzalez> http://blog.jquery.com/2011/12/08/what-is-happening-to-the-jquery-plugins-site/
[13:31:59] <gseguin> _|Nix|_: define( [ "jquery", "jquery.mobile.widget" ], function( $ ) {
[13:32:01] <scott_gonzalez> In the NEXT STEPS FOR PLUGIN AUTHORS section
[13:32:17] <scott_gonzalez> package.json spec: https://github.com/jquery/plugins.jquery.com/blob/master/docs/package.md
[13:32:29] <gseguin> _|Nix|_: and then add your module to jquery.mobile.js
[13:32:32] <scott_gonzalez> package.json discussion: https://github.com/jquery/plugins.jquery.com/issues/2
[13:32:33] <socialhapy> ★ Issue #2 on plugins.jquery.com, reported by ajpiano (1m, 1w ago): Meta: Discussion of jQuery plugin package.json schema
[13:32:34] <gseguin> _|Nix|_: that's it
[13:33:12] <scott_gonzalez> And we've got some plugins already using it: https://github.com/raganwald/JQuery-Combinators https://github.com/Mottie/AnythingZoomer
[13:33:20] <toddmparker_> yeah saw that but it's sort of lost in the drame
[13:33:23] <toddmparker_> drama
[13:33:28] <_|Nix|_> gseguin: Aaaah! I was missing this last step.
[13:33:46] <_|Nix|_> gseguin: What about the //>>excludeStart("jqmBuildExclude", pragmas.jqmBuildExclude); stuff
[13:33:50] <_|Nix|_> ?
[13:33:57] <_|Nix|_> gseguin: I see that in all the other files.
[13:34:03] <gseguin> _|Nix|_: oh yeah you want that
[13:34:05] <johnbender> need that too
[13:34:06] <gseguin> sorry
[13:34:09] <scott_gonzalez> Heh, questions that wouldn't exist without AMD :-P
[13:34:17] <johnbender> :/
[13:34:29] <_|Nix|_> gseguin, johnbender: OK. Lessee ...
[13:34:29] * scott_gonzalez couldn't hold back
[13:34:37] <toddmparker_> ok, you can gloat
[13:34:53] <gseguin> scott_gonzalez: but then he would need yo figure out where to put it in index.php, :P
[13:34:55] <toddmparker_> it *was* perfect timing
[13:35:07] <toddmparker_> you owe _|Nix|_ a beer scott_gonzalez
[13:35:20] <_|Nix|_> toddmparker_: Wha? Huh?
[13:35:21] <scott_gonzalez> Sorry, AMD is useful and James is really smart and has put a ton of effort into r.js. But it doesn't seem like a good idea for jQuery projects to use it.
[13:36:01] <toddmparker_> but on that topic, what is the major drawback?
[13:36:08] <toddmparker_> still not hearing that
[13:36:26] <toddmparker_> you do need the shim or to strip the wrapper if you want to go old skool
[13:36:35] <Wilto> I mean, apart from “consistency,” which doesn’t get any of us anywhere over time.
[13:36:58] <toddmparker_> but what else?
[13:37:03] <gseguin> I don't understand what the problem is with AMD, especially the way we use it
[13:37:09] <gseguin> we don't force it on our user
[13:37:17] <gseguin> (that would be bad)
[13:37:30] <gseguin> we use it internally to handle dependencies
[13:37:38] <scott_gonzalez> If you're doing custom stuff (actual custom builds, not using our tools to customize a download), you have to buy into our build process, buy into AMD, or add extra steps to remove the AMD stuff.
[13:38:08] <Wilto> If users decide to bypass our builder in favor of their own?
[13:38:09] <gseguin> if you're doing custom stuff you can use our bundle builder
[13:38:20] <gseguin> and build the bundle you need and play with it
[13:38:46] <scott_gonzalez> Yes, plenty of people will do it.
[13:38:54] <Wilto> …I don’t see the benefit to it.
[13:38:57] <johnbender> scott_gonzalez: I'm confused how do you not have to buy into the package.json deps resolution?
[13:39:05] <johnbender> it's not as though they resolve themselves in that case
[13:39:07] <Wilto> Or why we should be expected to accomodate it, honestly.
[13:39:51] <gseguin> we can easily add a tool that will strip the AMD layer out of our files
[13:39:55] <scott_gonzalez> It's the least common denominator of the web.
[13:40:09] <Wilto> That’s like saying we shouldn’t make an engine specific to any one car, in case the users decide to build their own car to go around it.
[13:40:24] <scott_gonzalez> You mean like Sizzle :-P
[13:40:47] <johnbender> scott_gonzalez: what do you mean by "it's the least common denominator of the web"
[13:41:07] <scott_gonzalez> Not having any wrapper is the least common denominator of the web.
[13:41:13] <toddmparker_> just a bunch of dumb js files in a folder
[13:41:15] <scott_gonzalez> It works everywhere, everyone understands it.
[13:41:24] <gseguin> but that's the thing
[13:41:30] <johnbender> scott_gonzalez: but it's like you're ignoring that you have package files to deal with to resolve dependencies for custom builds
[13:41:30] <gseguin> we don't want dumb files
[13:41:31] <toddmparker_> but we can dump that out for people if they want
[13:41:32] <Wilto> I certainly never fault anyone for reinventing a wheel here and there, but… I don’t think it’s strange to say “if you’re building a version of the builder we already provide, follow the conventions we’ve set forth.”
[13:41:45] <gseguin> we want to have files that express their dependencies
[13:41:59] <toddmparker_> ...or just run a command and grab a folder of simple js files
[13:42:03] <gseguin> so when we pull one, we also pull the ones that it needs
[13:42:05] <johnbender> that doesn't just disapear because it's not in the source file itself
[13:42:08] <toddmparker_> we can dumb it down as an output
[13:42:13] <johnbender> you still have to deal with dependencies to get the build right
[13:42:22] <scott_gonzalez> Wilto: It's more like "I've got established build processes for my job that we've been using forever. Thanks for wrapping AMD around your stuff and getting in my way."
[13:42:55] <scott_gonzalez> johnbender: Dependencies are usually pretty simple, honestly.
[13:42:59] <johnbender> scott_gonzalez: "I've got an established build process for my job that we've been using forever. Thanks for making me get my dependencies our of your package files"
[13:43:05] <toddmparker_> but if we make it super easy to strip it, is it really a problem
[13:43:09] <scott_gonzalez> It's probably like "load these five files up front, then rest will just work"
[13:43:25] <Wilto> That’s where I’m at. If the AMD component is easily bypassed: who cares?
[13:43:47] <scott_gonzalez> Easily bypassed = install node?
[13:43:54] <gseguin> nope
[13:43:56] <johnbender> scott_gonzalez: == shim define
[13:44:08] <gseguin> that ^
[13:44:12] <toddmparker_> or we could have a make script to unwrap, right?
[13:44:15] <gseguin> or have java
[13:44:24] <Wilto> I assume someone who would take issue with AMD for the sake of their custom build process would be okay with shimming define, me.
[13:44:40] <gseguin> or we could even come up with a sed script that would strip the files
[13:45:14] <Wilto> It seems like this presents a better system for those who choose to use it in a way that can be made unobtrusive for those who choose not to.
[13:45:15] <johnbender> scott_gonzalez: I still don't undertstand what i would have to do to understand dependencies if I wanted to make a custom build of jquire UI using those package.json files
[13:45:25] <johnbender> do I need to write a resolver?
[13:45:48] <scott_gonzalez> Yes, if you want true dependency resolution. In reality, load widget and core, then anything else.
[13:46:04] <johnbender> scott_gonzalez: so that works because your dependencies are easy enough for a monkey to understand
[13:46:16] <johnbender> that's simply not the case with mobile
[13:46:18] <Wilto> Yeah, we have different needs, man. You’re making a big assumption there.
[13:47:00] <toddmparker_> monkeys can't code you guys, don't be silly
[13:47:03] <scott_gonzalez> People who write custom build tools understand dependencies.
[13:47:22] <johnbender> scott_gonzalez: yes but they have to write more build tools to use your solution now don't they?
[13:47:32] <toddmparker_> but, yeah our "core" is smaller and we have a much more layered system so you can cut it down to size
[13:48:04] <johnbender> scott_gonzalez: or rather I should say they would have to if they wanted to use the package files with jquery mobile
[13:48:32] <toddmparker_> seems like the alternative to AMD is to write a bunch of custom code
[13:48:44] <johnbender> or by hand, just list them and take the union of all the sets of dependencies
[13:48:45] <toddmparker_> and we can let you do that if you want
[13:49:07] * gseguin refuses to do something a machine can do
[13:49:46] <toddmparker_> right-o
[13:50:34] <scott_gonzalez> This is kind of crazy
[13:50:37] <Wilto> gseguin welcomes our robot overlords.
[13:50:57] <scott_gonzalez> There are existing implementation of dependency resolution for package.json too, if that's what you're implying
[13:51:04] <scott_gonzalez> I even think that r.js handles it.
[13:51:21] <jrburke> r.js does not process package.json files
[13:51:46] <scott_gonzalez> hmm....ok, I recall you saying that you'd build support for it though :-P
[13:51:58] <scott_gonzalez> At least for inline package.json (which is crazy BTW)
[13:52:15] <scott_gonzalez> But I understand where you're coming from for the inlining
[13:52:51] <jrburke> ah right, that is for more for install tools though -- what versions of a dependency, and since it has things like license and other things as part of it, seemed fine.
[13:52:56] <johnbender> scott_gonzalez: so then it just becomes a choice of where you define your deps eh?
[13:53:05] <jrburke> for install tools like https://github.com/volojs/volo
[13:53:21] <johnbender> scott_gonzalez: and just as jburke pointed out, there's a lot of info in there we don't care about or want to define
[13:53:27] <jrburke> and i only think package.json in a file is good if your project only has one js file
[13:53:28] <johnbender> that should really be defined at the project level
[13:53:36] <jrburke> i mean plackage.json as a comment in a afile
[13:53:37] <johnbender> like version, author, etc
[13:53:57] <jrburke> but for things like jquery mobile/ui have a standalone package.json to indicate versions of exterior dependencies
[13:54:09] <jrburke> but for internal dependencies, define() calls are a better route
[13:54:33] <scott_gonzalez> jrburke: I've heard that a lot, the problem is that neither of those projects are actually single projects
[13:54:50] <scott_gonzalez> UI is actually like 30-40 individual things that well together
[13:55:05] <scott_gonzalez> But if someone depends on dialog, they should not say they depend on all of jQuery UI
[13:55:08] <johnbender> scott_gonzalez: and for UI your solution might make sense
[13:55:08] <Wilto> A few key dependencies, and then a bunch of optional modules.
[13:55:16] <jrburke> right, but they are all delivered together.
[13:55:27] <scott_gonzalez> Sure, on the CDNs
[13:55:38] <scott_gonzalez> We're even about to change that and ship individual files on CDNs
[13:55:40] <jrburke> and so needing version info ala package.json is not needed
[13:56:02] <scott_gonzalez> It is if you want to explicitly say "I depend on jQuery UI Dialog"
[13:56:15] <scott_gonzalez> And if you want to only include dialog and its dependencies.
[13:56:28] <scott_gonzalez> Sorry, gotta go, I need to take my daughter to dance class.
[13:56:40] * johnbender gets back to work
[13:56:48] <toddmparker_> ok, thanks scott_gonzalez
[13:56:54] <jrburke> right, but it would be unusual to pull dialog's UI dependencies from a different version than the shipped dialog
[13:56:57] <jrburke> ok later
[13:57:05] <gseguin> thanks scott_gonzalez, let's finish that discussion later
[13:57:16] * johnbender falls out of his chair
[13:57:17] <Wilto> twitch
[13:57:26] <imjoshdean> ...I feel like I need a cigar after attempting to keep up with that.
[13:57:35] <Wilto> I need a vacation.
[13:57:51] <toddmparker_> i need to get back to coding in dreamweaver
[13:58:05] <gseguin> imjoshdean: that was nothing, did you try keeping up with jqm-jenkins-bot this morning?
[13:58:24] <imjoshdean> toddmparker_: blasphemy, nothing ever makes anyone want to code in dreamweaver
[13:58:34] <imjoshdean> gseguin: I did a little bit, but eventually gave up
[13:58:35] <_|Nix|_> toddmparker_: Good news! Looks like popup is up to the HEAD of master and working ...
[13:58:49] <Wilto> I miss making text look the same and putting borders on things.
[13:59:20] <gseguin> :D
[13:59:57] <_|Nix|_> toddmparker_: How would you like me to submit the pull request? I'm thinking one of two ways: 1. I submit a rebased popup branch. 2. I submit a bunch of commits on top of the existing popup branch. The first commit is a merge of master's HEAD onto popup.
[14:00:17] <toddmparker_> hmmm
[14:00:31] <toddmparker_> that's right
[14:00:31] <toddmparker_> forgot abotu fetchlinka nd popup
[14:00:35] <toddmparker_> both of those are really old now
[14:00:47] <gseguin> I think it's good we discuss it, I like that he's trying to bring unity to the jQuery projects
[14:01:04] <toddmparker_> i sort of wonder if you you should just create a new branch based on master and add the latest version there
[14:01:05] <gseguin> however we can't be imposed a technical choice if it doesn't fit our needs
[14:01:21] <toddmparker_> the only thing i did was add some demos to the popup index page which you can paste back in
[14:01:43] <_|Nix|_> toddmparker_: Then the rebased branch is the perfect candidate for this new branch.
[14:01:56] <imjoshdean> gseguin: I agree on both counts. There seems to be a lot of really cool stuff coming, but it's got to work for everyone.
[14:01:58] <toddmparker_> yeah guys, i'll kick this up to the larger jQ group
[14:02:08] <toddmparker_> ok _|Nix|_
[14:02:13] <johnbender> toddmparker_: I want a reason though
[14:02:14] <johnbender> not
[14:02:19] <johnbender> I don't like "define"
[14:02:20] <johnbender> in the source
[14:02:24] <toddmparker_> yep
[14:02:25] <johnbender> that's not a reason
[14:02:36] <eddiemonge> what about "because i said so"?
[14:02:36] <bot-t> (98 hours 9 mins ago) <gseguin> tell eddiemonge: something seems to have happened to the cdn/latest the js and css should have the versioned stamped license on top and they don't
[14:02:40] <_|Nix|_> toddmparker_: But there's also a commit from Mat Marquis that does the hash change stuff ...
[14:02:47] <Wilto> what did I do
[14:02:54] <eddiemonge> i havent been on in 98 hours? wow
[14:02:56] <toddmparker_> so do you see an issue with creating wrap-free js files if needed?
[14:03:02] <Wilto> _|Nix|_: Hash change stuff?
[14:03:11] <toddmparker_> ah, right
[14:03:12] <toddmparker_> hmmm
[14:03:31] <toddmparker_> yeah, forgot that scott added history back buttons tuff too
[14:03:54] <_|Nix|_> Wilto: When you show a popup, it adds #&ui-state=dialog to the location bar, and removes it when the popup disappears/
[14:03:59] <toddmparker_> so johnbender - what's the best way to proceed?
[14:04:13] <_|Nix|_> Wilto: It also listens for when the used navigates away from the page, and closes the popup if that happens.
[14:04:14] <toddmparker_> we have the popup and fetchlink branches from back in december
[14:04:23] <toddmparker_> right
[14:05:04] <gseguin> wrap free js files as result of a build step, not a problem
[14:06:39] <johnbender> toddmparker_: wrt the removing the wrapper?
[14:06:41] <Wilto> _|Nix|_: Got that commit handy?
[14:07:00] <eddiemonge> gseguin: what versions dont have the git/time stamp on them?
[14:07:01] <johnbender> s/the removing/removing/
[14:07:03] <Wilto> _|Nix|_: I don’t think I’ve touched that in a while; maybe I nicked something by accident.
[14:07:24] <eddiemonge> toddmparker_: is http://jquerymobile.com/test faster now for you?
[14:07:37] <gseguin> eddiemonge: http://code.jquery.com/mobile/latest/demos/js/jquery.mobile.docs.js
[14:07:37] <toddmparker_> oh, if we kept AMD but wanted to have a way to generate a set of non-wrapped js files like scott wanted, is that possible?
[14:07:52] <johnbender> toddmparker_: yah we can just add a build target
[14:07:57] <gseguin> toddmparker_: as result of a build step, not a problem
[14:08:02] <Wilto> Sounds good to me.
[14:08:06] <toddmparker_> cool
[14:08:10] <johnbender> toddmparker_: we do that as a build step now
[14:08:18] <toddmparker_> eddie -seems a bit faster
[14:08:21] <johnbender> or we were previously
[14:08:24] <toddmparker_> is this up to date?
[14:08:25] <Wilto> I figured that was the conclusion. I… I don’t know about the internet sometimes, you guys.
[14:08:37] <_|Nix|_> Wilto: I'm about to submit a pull request ... just polishing it off.
[14:08:42] <eddiemonge> toddmparker_: should seem a lot faster since its 11 requests vs 80
[14:09:01] <toddmparker_> so the fixed toolbar page is blank there
[14:09:09] <toddmparker_> wonder if there's an error?
[14:09:31] <gseguin> the head of the file is not what it should look like
[14:09:41] <gseguin> it should have the commit sha
[14:10:00] <gseguin> eddiemonge: do `make docs` locally
[14:10:21] <gseguin> and look at the produced jquery.mobile.docs.js in compiled/demos/js
[14:11:41] <gseguin> hey did you guys see this: https://github.com/jquery/jquery-mobile/issues/3448
[14:11:42] <socialhapy> ★ Issue #3448 on jquery-mobile, reported by yamalight (1h, 18m ago): Bug in master (commit 806e27d675)
[14:11:44] <eddiemonge> im looking at it trying to figure out what you added
[14:12:05] <_|Nix|_> toddmparker_: BTW: I fixed that popup-disappears-immediately iOS bug: I wasn't swallowing the button's vclick event when launching the popup, and the popup's screen ended up receiving that vclick, causing the popup to close immediately.
[14:12:17] <gseguin> eddiemonge: I put the version stamped license in the head of the bundle built
[14:12:34] <Wilto> gseguin: …Uh.
[14:12:52] <toddmparker_> ah
[14:13:06] <gseguin> Wilto: the commit SHA he points at is wrong but the bug is real
[14:13:16] <Wilto> Oh, oh.
[14:13:18] <Wilto> Taking a look.
[14:13:30] <toddmparker_> gseguin: is this on the fixed header?
[14:13:48] <johnbender> eddiemonge: they linked the wrong commit
[14:13:50] <Wilto> In fact, yeah—I’m on this gseguin/toddmparker_.
[14:13:59] <Wilto> Uh also everyone else.
[14:14:06] <eddiemonge> johnbender: ?
[14:14:25] <johnbender> eddiemonge:
[14:14:27] <gseguin> toddmparker_: it's in the custom select form
[14:14:35] <toddmparker_> oh
[14:14:37] <toddmparker_> ok
[14:14:49] <johnbender> eddiemonge: https://github.com/jquery/jquery-mobile/commit/606bfe5f
[14:14:49] <socialhapy> ★ Commit on jquery-mobile by scottjehl (4d, 9h ago): removed all internal usage of the touch overflow support test and enabled flag. Still leaving both defined, however.
[14:15:00] <johnbender> that's where the dollar got removed
[14:15:17] <johnbender> that might be causing some of our test breakage
[14:15:30] <toddmparker_> ah, that typo someone flagged
[14:15:33] <toddmparker_> riiight
[14:15:33] <johnbender> unless it's not necessary
[14:15:40] <Wilto> Pushing momentarily.
[14:16:19] <johnbender> Wilto: you can yell at Scott for that one :D
[14:16:21] <gseguin> if that fixes tests, cool! otherwise YANK that line
[14:16:28] <gseguin> DAMMIT SCOTT
[14:16:34] <johnbender> gseguin: ?
[14:16:46] <johnbender> we need it
[14:16:58] <johnbender> the variable that's assigned is used below
[14:17:00] <gseguin> I was kidding :P
[14:17:03] <johnbender> ah
[14:17:13] * johnbender shakes his fist at the internet
[14:17:13] <Wilto> Done and done.
[14:17:32] <jqmobilecommit> [jquery-mobile] Wilto pushed 1 new commit to master: http://git.io/CFmxLw
[14:17:32] <jqmobilecommit> [jquery-mobile/master] Fixes #3448 — Added missing . - Mat Marquis
[14:17:36] <Wilto> That was a welcome change from… the rest of this evening.
[14:17:42] <eddiemonge> johnbender: do you mean to use == instead of === on line 339
[14:17:50] <Wilto> Note to self: escape `$` in commit messages.
[14:17:59] <johnbender> eddiemonge: nope the bug that was linked said it was a missing $
[14:18:17] <eddiemonge> johnbender: yeah i know. i was just looking at the rest of the file
[14:18:30] <johnbender> oh I haven't any idea if there are other issues
[14:18:37] <johnbender> I just got the blame for that line
[14:18:47] <johnbender> and dumped the commit here
[14:19:09] <eddiemonge> johnbender: for line 339 on https://github.com/jquery/jquery-mobile/blame/master/js/jquery.mobile.forms.select.custom.js ?
[14:19:35] <Wilto> Missing dollar sign what missing dollar sign?
[14:20:00] <johnbender> Wilto: that was the change you just made
[14:20:10] <Wilto> (Yes indeed.)
[14:20:19] <johnbender> I'm getting back to work, the issues is resolved
[14:20:24] <johnbender> Wilto: did you close it?
[14:20:32] <gseguin> github did
[14:20:34] <Wilto> Should be closed by the commit message—I’ll check.
[14:21:05] <Wilto> Cheah cheah.
[14:21:42] <_|Nix|_> Wilto, toddmparker_: https://github.com/jquery/jquery-mobile/pull/3449 has the updated popup stuff.
[14:21:43] <socialhapy> ★ Pull request on jquery-mobile by gabrielschulhof (4m, 3s ago): Popup update 2
[14:22:14] <eddiemonge> Wilto: same spot: http://jsperf.com/cache-jq-window
[14:22:17] <gseguin> Friendly reminder that JSConf tickets go on sale tomorrow at 3pm EST
[14:22:28] <gseguin> and will sell out shortly after that
[14:22:43] <johnbender> gseguin: probably won't go unless my (your) proposal gets accepted
[14:22:55] <gseguin> :(
[14:23:18] <johnbender> I have a hard time justifying these sort of wild frivolities to my wife :P
[14:23:26] <johnbender> these sorts
[14:23:46] <gseguin> they have a significant other track
[14:24:00] <_|Nix|_> johnbender: +1 :)
[14:24:01] <Wilto> Uh, well, toddmparker_ will totally write you up if you don’t go, johnbender.
[14:24:23] <Wilto> So you are left with no choice! Shucks.
[14:24:29] <johnbender> lol
[14:24:38] <Wilto> He’s serious, too. Fired me twice today alone.
[14:24:39] <toddmparker_> thanks _|Nix|_
[14:24:45] <gseguin> you can take your wife and kid
[14:25:02] <_|Nix|_> toddmparker_: NP ... hope I didn't break anything ...
[14:25:19] <Wilto> Huh, I dunno why we’re not caching window there, eddiemonge. Good catch.
[14:25:19] <imjoshdean> gseguin: I'll be there. Boss slapped down his credit card on my desk for it
[14:25:35] <toddmparker_> there's been a lot of movement so i wouldn't be shocked
[14:25:39] <eddiemonge> i can submit a pr on it since im editing some other stuff there too
[14:26:41] <eddiemonge> wtf does line 500 target? what is selectmenubeforecreate
[14:27:52] <johnbender> _|Nix|_: Wilto: toddmparker_: can we wait on merging the popup until we get the tests passing?
[14:28:05] <johnbender> pileing on stuff that might have caused issues make fixing these harder
[14:28:11] <johnbender> and I'm already a bit burnt out on fixing tests
[14:28:18] <Wilto> No question, dude.
[14:28:29] <toddmparker_> oh sure. this will live in a branch for a while
[14:28:43] <toddmparker_> this is a PR for a branch, not master
[14:28:49] <_|Nix|_> johnbender: Definitely.
[14:28:54] <johnbender> sweet thanks :D
[14:29:19] <_|Nix|_> toddmparker_: Actually, no. I made the PR against master, since it's a clean new branch.
[14:29:42] <toddmparker_> oh
[14:29:48] <_|Nix|_> toddmparker_: Didn't know what else to do, bbut my intention was definitely to see "popup-update2" become a branch of master.
[14:29:50] <toddmparker_> so this would get added to master?
[14:29:50] <gseguin> yeah that's ok you can pull it into a branch toddmparker_
[14:29:55] <johnbender> we can do that
[14:30:01] <toddmparker_> ok, cool
[14:30:05] <toddmparker_> that's the plan
[14:30:06] <johnbender> just have someone add your repo as a remote
[14:30:08] <johnbender> fetch
[14:30:11] <johnbender> track the branch
[14:30:13] <johnbender> and push to master
[14:30:16] <johnbender> and we can work from there
[14:30:18] <gseguin> 'xactly
[14:30:38] <johnbender> then we can work ith it
[14:30:57] <johnbender> just need to make sure that if he makes changes we can pass around compare views
[14:31:01] <johnbender> and pull them in manually
[14:31:18] <johnbender> since you can't do pr's against branches other than master so far as I understand it
[14:31:40] <_|Nix|_> johnbender: If you guys make the branch upstream, I can delete my own copies of popup-update2 and just fetch your branch.
[14:31:52] <gseguin> johnbender: you can, actually
[14:32:04] <johnbender> gseguin: nevermind then
[14:32:15] <johnbender> yah we can just make it a branch from his and he can do pr's against that then
[14:32:26] <_|Nix|_> johnbender: Exactly.
[14:32:29] <johnbender> cool
[14:32:32] <johnbender> easy peasy
[14:32:34] <Wilto> Let’s just go back to emailing .zip files around, guys.
[14:32:44] <Wilto> Or burning things on CDs and sending them in the actual mail.
[14:32:50] <gseguin> .tar.gz or I don't play
[14:33:05] <Wilto> I’m technologied-out lately. I want to see this stuff in _print_.
[14:33:09] <johnbender> gseguin: kernel dev?
[14:33:21] <Wilto> That’s Android talk.
[14:33:32] <_|Nix|_> Wilto: Etched in wood, perhaps?
[14:36:34] <johnbender> gseguin: https://github.com/jquery/jquery-mobile/commit/c6e49f7b0727075dfe1263285f245658a541dd70#commitcomment-876165
[14:36:35] <socialhapy> ★ Commit on jquery-mobile by scottjehl (4d, 12h ago): Discovered r.js' pragmas use them instead of the hacky solution provided by amd-stripper.js
[14:36:39] <johnbender> BUSTED!
[14:37:38] <eddiemonge> / TODO: Are you sure you want to use getAttribute? ^RW
[14:38:34] <johnbender> and that my friends
[14:38:36] <johnbender> is why we have tests
[14:39:48] <johnbender> gseguin: sorry just giving you a hard time
[14:39:54] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/t6blCA
[14:39:54] <jqmobilecommit> [jquery-mobile/master] use helper method to get page data to prevent dialog failures - John Bender
[14:40:04] <johnbender> probably not the day for that given how crapy my demeanor has been
[14:41:43] <gseguin> oops sorry
[14:41:51] <johnbender> gseguin: no worries
[14:41:55] <johnbender> merges can be a biatch
[14:45:10] <johnbender> gseguin: do you have a minute?
[14:45:19] <johnbender> well
[14:45:21] <johnbender> one sec
[14:45:26] <gseguin> sure
[14:45:30] <gseguin> in a meeting
[14:45:38] <gseguin> I'll let you know if I can't do it
[14:45:39] <johnbender> support tests are missing require
[14:45:46] <johnbender> I'll handle it
[14:46:11] <gseguin> k
[14:46:46] <johnbender> I'm starting to wonder if something weird happened with scott's merge
[14:54:35] <gseguin> johnbender: you wanted numbers
[14:54:49] <gseguin> build with java on my core i7
[14:54:54] <gseguin> 18s
[14:55:01] <gseguin> with node: 2s
[14:55:18] <toddmparker_> johnbender: i feel like things have gotten wonky with all these big changes
[14:55:35] <johnbender> toddmparker_: with the test suite?
[14:55:39] <toddmparker_> btw guys - i emailed the jQ board to see what the opinion is on AMD
[14:55:45] <toddmparker_> yeah
[14:55:50] <johnbender> well
[14:56:13] <johnbender> I think it's kind of up to us to keep our branches up to date with master and fix test breakages along the way
[14:56:27] <johnbender> but that's not always the cause
[14:57:05] <johnbender> branches that live for like weeks without updates from master are probably going to cause issues, we should probably just start with anything over a week or two old merge master in every week at least
[14:57:10] <johnbender> or rebase if you can
[15:06:17] <johnbender> gseguin: when you pulled out the async changes to the support module, it looks like you didn't change the reloadModule to reloadLib
[15:06:37] <johnbender> just want to make sure that's true
[15:06:44] <johnbender> otherwise we might have had merge issues
[15:06:54] <gseguin> that sounds like the kind of mistake I can make
[15:07:01] <johnbender> gseguin: ok just double checking
[15:07:05] <johnbender> I could care less
[15:07:14] <johnbender> I just want to make sure nothing crazytown happened with the merge
[15:07:18] <johnbender> that would be bad news bears
[15:08:29] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/pHZxOA
[15:08:29] <jqmobilecommit> [jquery-mobile/master] fix test errors relying on require after switching back to synchronous load - John Bender
[15:08:33] <johnbender> should be down to 6 failures
[15:08:40] <johnbender> 3 in each browser
[15:08:41] <johnbender> so really 3
[15:23:12] <johnbender> wtf is going on
[15:24:47] <johnbender> toddmparker_: gseguin: Wilto: I'm fixing bugs that I fixed a long time ago
[15:24:53] <johnbender> and these would have failed long since
[15:25:10] <johnbender> I think Scott did a rebase after doing a merge at some point
[15:25:20] <johnbender> or something
[15:25:29] <toddmparker_> yeesh
[15:25:45] <johnbender> because we have commits that should have broken the build a long time ago based on the changes they made
[15:25:53] <toddmparker_> so is there a better way to clean this up?
[15:26:06] <johnbender> nope
[15:26:07] <johnbender> he pushed it
[15:26:09] <johnbender> it's out there
[15:26:13] <toddmparker_> roll back and re-do scott's commit
[15:26:17] <toddmparker_> ah, i see
[15:26:26] <toddmparker_> scary
[15:26:46] <johnbender> toddmparker_:
[15:26:47] <johnbender> it log | grep -B4 "Discovered r.js' pragmas use them instead of the hacky solution provided by amd-stripper.js"
[15:26:51] <johnbender> err
[15:26:57] <johnbender> git log | grep -B4 "Discovered r.js' pragmas use them instead of the hacky solution provided by amd-stripper.js"
[15:26:58] <toddmparker_> saw that
[15:27:04] <toddmparker_> what's that mean?
[15:27:12] <johnbender> that means that he recreated all those commits
[15:27:20] <johnbender> they now exist in two forms
[15:27:22] <toddmparker_> wha?
[15:27:27] <gseguin> hence the storm this morning
[15:27:31] <johnbender> yep
[15:27:50] <johnbender> toddmparker_: was there a reason he didn't want to just let me do it?
[15:28:07] <toddmparker_> oh, i told him you'd do it
[15:28:13] <johnbender> that puts us in a bad place
[15:28:27] <toddmparker_> and he replied that he was almost there so i asssumed he figured something out
[15:28:28] <johnbender> because the tests are the only thing that tell us if we've reverted importat changes
[15:28:33] <gseguin> oh so he rebased and forced push in his branch
[15:28:40] <johnbender> or something
[15:28:46] <johnbender> I don't think he force pushed
[15:28:50] <johnbender> he did a merge at some point
[15:28:53] <johnbender> and then did a rebase
[15:28:56] <johnbender> or vice versa
[15:29:14] <johnbender> toddmparker_: hmm
[15:29:15] <gseguin> oh that's right
[15:29:22] <johnbender> toddmparker_: lets tell everyone to stop commits to master
[15:30:12] <johnbender> toddmparker_: we could revert the merge I think :/
[15:30:14] <toddmparker_> yeah, i didn't get details
[15:30:15] <toddmparker_> sorry
[15:30:34] <jqm-jenkins-bot> Project jqm-master build #405: STILL FAILING in 16 min: http://10.59.19.240:8080/job/jqm-master/405/
[15:30:35] <jqm-jenkins-bot> * mat: Fixes #3448 — Added missing .
[15:30:35] <jqm-jenkins-bot> * john.m.bender: use helper method to get page data to prevent dialog failures
[15:30:36] <jqm-jenkins-bot> * john.m.bender: fix test errors relying on require after switching back to synchronous load
[15:31:04] <johnbender> toddmparker_: the only problem is I don't know how to fix Scott's branch
[15:31:09] <johnbender> because I don't know what he did
[15:31:15] <toddmparker_> right
[15:31:24] <johnbender> he has the reflog on his machine which means we could go back in time to find out
[15:31:31] <johnbender> but he's half a world away
[15:31:32] <toddmparker_> but if you give him an approach, he can do it tonight
[15:31:46] <johnbender> I can't give him an approach though I haven't _any_ clue what he did
[15:31:58] <johnbender> toddmparker_: what time does he get online
[15:32:01] <johnbender> I can try and be on
[15:32:12] <gseguin> maybe he could dump his reflog and send it
[15:32:16] <johnbender> tommorrow is my off day for crossfit so I don't have to go to be early
[15:32:21] <toddmparker_> do you mind posting a BC message to him
[15:32:27] <johnbender> gseguin: yah but then we have a nice day long delay
[15:32:39] <toddmparker_> he usually checks email around 8pm when he wakes up
[15:32:44] <johnbender> ok
[15:32:47] <johnbender> I can be on then
[15:33:02] <toddmparker_> i'm good with whatever is the right fix here
[15:33:16] <toddmparker_> it's been tough with the time difference
[15:33:20] <toddmparker_> for IRC stuff
[15:33:56] <johnbender> lol, this is why outsourcing is massive fail
[15:34:05] <toddmparker_> he can spend the day picking stuff over
[15:34:09] <toddmparker_> heh
[15:34:15] <toddmparker_> and he knows what he's doing
[15:34:31] <johnbender> ok let me try reverting his merge locally to see what happens
[15:34:33] <toddmparker_> tho i think you need to sync up on git strategy stuff
[15:34:38] <johnbender> yah
[15:34:50] <toddmparker_> seems like something he's doing isn't quite right
[15:34:53] <toddmparker_> let's fix that
[15:40:20] <johnbender> gseguin: toddmparker_: ok for reverting the merge here's what I got
[15:40:22] <johnbender> err
[15:40:26] <johnbender> rather here's how I did it
[15:40:43] <johnbender> git revert -m 1 --strategy-option=ours 57af436ab63ff54bc18675e8bdfdd250db28b4c2
[15:41:00] <johnbender> and that looks about right but it's hard to know
[15:41:43] <johnbender> yep
[15:41:47] <johnbender> starting to look right
[15:41:50] <gseguin> are tests better?
[15:42:12] <johnbender> gseguin: well sliders are working at least lol
[15:42:21] <gseguin> hmm ok
[15:42:25] <toddmparker_> guys, i gotta head home but will be checking email so hit me there
[15:42:25] <johnbender> that was a bug I fixed when we added 1.7.1
[15:42:29] <johnbender> toddmparker_: will do
[15:42:31] <toddmparker_> geez
[15:42:32] <johnbender> I'll come up with a plan
[15:42:39] <toddmparker_> thanks johnbender
[15:42:54] <toddmparker_> we need to figure out how to not break things
[15:43:01] <toddmparker_> ttyl
[15:43:03] <johnbender> toddmparker_: thankfully we can often revert :D
[15:43:05] <johnbender> yassir
[15:43:08] <johnbender> safe trip homoe
[15:43:12] <johnbender> home1
[15:43:14] <johnbender> zomg
[15:43:25] <johnbender> worst typo ever
[15:49:23] <johnbender> I will assume from everyone's silence that I've commited a grave social error
[15:49:40] <gseguin> :)
[15:52:48] <johnbender> gseguin: yah that think I commented on was from the merge
[15:53:36] <gseguin> gotcha
[15:54:13] <eddiemonge> 1.7 is officially supported now right?
[15:54:25] <johnbender> eddiemonge: for 1.1 it will be I believe
[15:54:31] <johnbender> its what we use in the repo
[15:54:58] <johnbender> todd also asked me to support 1.6.4 and that _should_ work but we have to run the suite with it at some point :(
[15:55:02] <johnbender> another build?
[15:55:03] <johnbender> not sure
[15:56:00] <johnbender> gseguin: whoa
[15:56:11] <johnbender> I don't see Scott's branch anywhere
[15:56:14] <eddiemonge> hmm then i guess i wont do these changes
[15:56:16] <gseguin> 'sup?
[15:56:25] <gseguin> yeah got deleted after the merge
[15:56:28] <johnbender> ...
[15:56:35] <johnbender> thank god I didn't push the revert
[15:56:36] <johnbender> ugh
[15:56:57] <gseguin> I could see if I can find the sha
[15:56:58] <johnbender> does that mean he deleted it locally too?
[15:57:10] <johnbender> gseguin: the sha/
[15:57:11] <johnbender> ?
[15:57:28] <gseguin> for that branch
[15:57:30] <johnbender> I mean we have the changes in the tree, it's fine but we loose history if I revert and the branch is gone
[15:58:09] <gseguin> I think the branch is not physically gone
[15:58:18] <gseguin> just the pointer to that commit
[15:58:30] <johnbender> it's not on github
[15:58:48] <gseguin> yeah I deleted it
[15:59:31] <johnbender> gseguin: do you have it locally? I'm sending a message to scott
[15:59:40] <gseguin> let me check
[16:00:07] <gseguin> do you remember the name ?
[16:00:26] <johnbender> one sec
[16:00:41] <gseguin> out-in-transition ?
[16:00:51] <johnbender> origin/fixedtoolbar
[16:01:01] <gseguin> oh that
[16:01:21] <gseguin> I have remotes/upstream/fixedtoolbar
[16:01:30] <johnbender> gseguin: please push to origin
[16:01:47] <johnbender> gseguin: is that up to date?
[16:01:49] <johnbender> or do you knkow
[16:02:00] <johnbender> I thought scott did the merge today
[16:02:08] <johnbender> did you just do the delete?
[16:03:25] <gseguin> sorry I didn't do that delete
[16:03:35] <gseguin> I deleted the transition brnches
[16:03:35] <johnbender> yah
[16:03:41] <johnbender> that's what I thought
[16:03:42] <gseguin> I just pushed
[16:03:49] <johnbender> cool
[16:03:52] <johnbender> at least we have something
[16:03:57] <johnbender> he can always
[16:04:00] <gseguin> I almost named the branch fixedfoolbar
[16:04:02] <gseguin> :)
[16:04:12] <johnbender> revert the revert commit and pick out the stuff that's needed
[16:04:29] <gseguin> (unintentionally)
[16:06:15] <eddiemonge> should this go towards master or 1.1 branch? i dont know how to do pr's anymore: https://github.com/jquery/jquery-mobile/pull/3451
[16:06:16] <socialhapy> ★ Pull request on jquery-mobile by eddiemonge (1m, 39s ago): Show me the cache
[16:07:39] <gseguin> master is fine, we can cherry-pick it to 1.0-stable branch
[16:08:04] <eddiemonge> awesome. i got lost in that branch discussion
[16:08:06] <johnbender> eddiemonge: yah, when in doubt
[16:08:20] <eddiemonge> ok so maybe i stopped listening and thats why i got lost
[16:13:35] <johnbender> gseguin: actually can you delete the fixedtoolbar that's up on github
[16:13:45] <johnbender> gseguin: well let me pull it first
[16:13:50] <johnbender> I get the feeling that it's stale
[16:13:56] <johnbender> so it would be better not to confuse the situation
[16:14:37] <johnbender> gseguin: nope nevermind, says its up to date
[16:14:44] <johnbender> it points at the commit right before the merge for me
[16:14:47] <johnbender> gseguin: same for you
[16:14:48] <johnbender> ?
[16:15:07] <gseguin> hmm how would I know that?
[16:16:16] <johnbender> gseguin: well tig tells me the pointer for my local copy is pointed at the same place that origin/fixedtoolbar is
[16:16:41] <gseguin> tig?
[16:17:20] <johnbender> gseguin: c4df92203d792472e04ad4ebb4edd87d7703132a
[16:17:33] <johnbender> its a command line repo viewer
[16:17:45] <johnbender> that's the last commit that scott made I think
[16:17:58] <johnbender> is that where your fixed toolbar branch is pointing?
[16:18:14] <johnbender> I did a fetch earlier today too
[16:18:18] <johnbender> I might have caught it
[16:18:22] <gseguin> yup
[16:18:41] <gseguin> that's also what I pushed to upstream
[16:18:58] <gseguin> oh anyway that push did nothing
[16:20:46] <johnbender> gseguin: cool
[16:28:41] <johnbender> toddmparker_: sent out the message
[16:28:47] <johnbender> toddmparker_: should I include my skype info?
[17:07:05] <eddiemonge> looks like ill be at adobe sf on monday
[17:37:34] <eddiemonge> or not after all. no phonegap meeting for me
[18:28:39] <imjoshdean> I miss anything exciting from the last 4 hours?
[21:47:14] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/Z7Oi-g
[21:47:14] <jqmobilecommit> [jquery-mobile/master] reverted fixed toolbar merge, there are some issues with the branch that need to be addressed - John Bender
[22:26:54] <jqm-jenkins-bot> Yippie, build fixed!
[22:26:55] <jqm-jenkins-bot> Project jqm-master build #406: FIXED in 13 min: http://10.59.19.240:8080/job/jqm-master/406/
[22:26:55] <jqm-jenkins-bot> john.m.bender: reverted fixed toolbar merge, there are some issues with the branch that need to be addressed
