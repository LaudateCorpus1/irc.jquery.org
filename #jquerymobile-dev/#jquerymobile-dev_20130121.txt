[00:20:40] <jqmobilecommit> [13jquery-mobile] 15jslifer opened issue #5501: Text inputs documentation on clear button incorrect  02http://git.io/-1kiOA
[02:13:15] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #244: FAILURE in 12 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/244/
[02:15:04] <uGoMobi> ryanneufeld: thanks for making the PHP include work on the server!
[02:51:18] <jqmobilecommit> [13jquery-mobile] 15gvanberkel opened issue #5502: data-role="controlgroup" data-iconpos="notext" in data-role="header" issue  02http://git.io/kO1Jlw
[02:56:54] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06master: 02http://git.io/GJQSpg
[02:56:54] <jqmobilecommit> 13jquery-mobile/06master 14467823c 15Jasper de Groot: Docs: corrections on textinput page. Fixes: #5501.
[03:26:45] <jqmobilecommit> [13jquery-mobile] 15lstep opened issue #5503: Download Bundle doesn't work when selecting Controlgroup option on download page  02http://git.io/fKaxoQ
[04:10:35] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06master: 02http://git.io/gMa6rg
[04:10:35] <jqmobilecommit> 13jquery-mobile/06master 14d0ef98e 15Jasper de Groot: Textinput: Fixed the enable method. Fixes #5447.
[04:31:11] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06master: 02http://git.io/sTJzrQ
[04:31:11] <jqmobilecommit> 13jquery-mobile/06master 148b16513 15Jasper de Groot: Core: Only apply top offset to icon-only buttons that are direct children of the toolbar. Fixes #5502.
[04:31:21] <doesallmagic> Project jQuery Mobile Phantom Master build #1122: FAILURE in 7.1 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/1122/
[04:38:30] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06master: 02http://git.io/MTiX9w
[04:38:30] <jqmobilecommit> 13jquery-mobile/06master 14a9a6b23 15Gabriel Schulhof: Panel: Remove lint
[04:38:51] <uGoMobi> _|Nix|_: you beat me to it
[04:39:17] <_|Nix|_> uGoMobi: :)
[04:39:23] <uGoMobi> thanks
[04:39:26] <_|Nix|_> NP.
[04:45:24] <jqmobilecommit> [13jquery-mobile] 15pads opened issue #5504: Panel widget close behaviour  02http://git.io/yfG5cQ
[04:50:02] <jqcommit> 01[13api.jquerymobile.com01] 15agcolom pushed 1 new commit to 06master: 02http://git.io/h8G89Q
[04:50:03] <jqcommit> 13api.jquerymobile.com/06master 147fa1c56 15Anne-Gaelle Colom: added new textinput options (cleartxt) and example
[04:53:52] <doesallmagic> Yippie, build fixed!
[04:53:53] <doesallmagic> Project jQuery Mobile Phantom Master build #1123: FIXED in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/1123/
[04:57:19] <arschmitz> Morning _|Nix|_: uGoMobi:
[05:00:45] <_|Nix|_> arschmitz: Hey!
[05:04:04] <arschmitz> _|Nix|_: did you see Changsuk's email?
[05:07:11] <_|Nix|_> arschmitz: Nope. Me go check.
[05:09:35] <_|Nix|_> arschmitz: I'll run a jsperf of his PR against the performance gains achieved so far.
[05:09:57] <arschmitz> _|Nix|_: it sounds like he wants us to basicly stop using jQuery lol
[05:10:23] <_|Nix|_> arschmitz: Well, no, I think it's more about using native more often ...
[05:10:31] <_|Nix|_> arschmitz: ... but lessee that test ...
[05:15:20] <arschmitz> _|Nix|_: i have to go to one of those stupid self improvment classes lol ill be back in about an hour
[05:15:45] <_|Nix|_> arschmitz: Have fun!
[05:16:09] <arschmitz> lol oh yeah "how to start your morning right"
[05:16:52] <_|Nix|_> *facepalm*
[05:44:53] <_|Nix|_> arschmitz: I think the advantages of native are well-illustrated here: http://jsperf.com/jqmdatavsremovedata/4
[06:26:24] <arschmitz> _|Nix|_: im not arguing the performance advantage of native
[06:27:50] <arschmitz> _|Nix|_: the problem i have is with anything thats not going to be 100% crossbrowser safe
[06:29:26] <arschmitz> _|Nix|_: what is the "more improvments"?
[06:38:02] <_|Nix|_> arschmitz: Another .jqmData() call gotten rid of.
[06:38:28] <_|Nix|_> arschmitz: We should test whether getAttribute is really not crossbrowser safe - might be worth the effort.
[06:38:45] <arschmitz> there are a ton of articles out there about it
[06:38:52] <arschmitz> and workarounds 
[06:40:05] <_|Nix|_> arschmitz: Maybe we can compromise with .attr() and my funtion that fixes the return value for the type. I think that's reasonable, since we only need to convert "true" to true and "false" to false. We don't need the more generic solution that core implements in the dataAttr() function.
[06:40:19] <_|Nix|_> arschmitz: I'll BBIAB.
[06:40:30] <arschmitz> _|Nix|_: yeah id be all on board for that
[06:54:33] <gseguin> good morning folks
[06:54:40] <arschmitz> morning gseguin
[06:55:05] <gseguin> so what's up with the concat?
[06:56:38] <arschmitz> we want to use some universal nav on the new demos page
[06:56:51] <arschmitz> so we are using a php include 
[06:57:27] <gseguin> ok
[06:57:29] <arschmitz> gseguin: so we were wondering if for the build for the zip if it would be possible to combine them as part of the build
[06:57:45] <arschmitz> so that it will still work without php
[06:58:14] <gseguin> we can build an AMD  meta module
[06:58:45] <arschmitz> yeah that should be perfect
[06:59:13] <arschmitz> i think
[06:59:30] <gseguin> in your demo do you want to use PHP ?
[06:59:49] <gseguin> or would you use AMD if it was available?
[07:00:19] <arschmitz> we want it to be the same as like contcanting all the js
[07:00:30] <gseguin> the reason we don't use AMD in the current demos is that users would be thrown off when looking at the source
[07:00:48] <arschmitz> right want to keep it the same way
[07:00:56] <gseguin> k
[07:01:17] <arschmitz> it would be confusing if when viewing source a bunch of markup was missing lol
[07:01:21] <gseguin> then you're going to have to create a file similar to js/jquery.mobile.js
[07:01:49] <gseguin> with whatever modules you need in there
[07:01:58] <gseguin> then we'll have to add it to the build
[07:02:08] <gseguin> how soon do you need this?
[07:02:23] <arschmitz> hmm how odes that work if on file needs to be within the other not just concanted 
[07:02:27] <arschmitz> is that possible?
[07:03:33] <gseguin> not sure I understand, can you rephrase?
[07:03:39] <arschmitz> let me show you
[07:03:43] <arschmitz> http://jquerymobile.com/test/docs/demos/buttons/
[07:03:55] <arschmitz> if you click on the button on the top left a panel open
[07:03:56] <arschmitz> s
[07:04:12] <arschmitz> we want to place the markup for that panel in a seperate file 
[07:04:33] <arschmitz> and use a php include in the right place to include it
[07:04:50] <arschmitz> but then in the build we were wondering if it would be possible to have them output as just a single flat file
[07:05:13] <arschmitz> every page in the demos will have this same nav panel
[07:06:06] <arschmitz> so it cant just get tacked on begining or end. the panel has to be injected into the "middle" of the file
[07:06:32] <arschmitz> gseguin: am i making any sense lol?
[07:06:45] * gseguin looks
[07:07:05] <gseguin> I'm commuting so the connection is not that fast
[07:07:12] <arschmitz> no problem
[07:09:07] <gseguin> so you mean the entire HTML file?
[07:09:30] <arschmitz> now im not folowing hold on let me make a gist
[07:09:35] <arschmitz> to avoide confusion
[07:09:58] <gseguin> heh :) 
[07:10:00] <gseguin> sorry
[07:10:04] <arschmitz> no its fine
[07:11:15] <arschmitz> ok https://gist.github.com/4586726 that would be the base page
[07:11:38] <arschmitz> if you go all the way to the bottom just after the footer inside the page you will see a php include
[07:11:45] <arschmitz> https://gist.github.com/4586723
[07:12:00] <arschmitz> that is the contents of the file that needs to be included
[07:12:32] <gseguin> oh I see
[07:12:40] <gseguin> so it's HTML all the way
[07:12:45] <arschmitz> yup
[07:12:55] <gseguin> where are the JavaScriptz ?
[07:13:00] <gseguin> :)
[07:13:03] <arschmitz> lol
[07:13:35] <arschmitz> we just dont want to have to maintain changes to the panel in 100 different files
[07:13:56] <gseguin> so how about using a templating engine?
[07:14:14] <gseguin> and generate that menu from a json file?
[07:14:48] <arschmitz> toddmparker: wants to try and keep everything PE friendly if possible
[07:15:20] <gseguin> so at build time grunt can expand the template in every page
[07:15:44] <arschmitz> right but not good for people cloneing and viewing source its confusing
[07:16:07] <gseguin> hmm
[07:16:13] <arschmitz> i know we are being a pain lol
[07:16:48] <arschmitz> wasent sure if there was some way with grunt to just have it be like hey include this other file here!
[07:17:07] <arschmitz> basicly like the php include works when running on the server
[07:17:34] <arschmitz> im not super grunt savvy lol
[07:19:38] <arschmitz> gseguin: https://github.com/outaTiME/grunt-replace looks like it does what im talking about?
[07:20:26] <gseguin> me neither I'm learning as I'm converting the build :)
[07:20:58] <arschmitz> gseguin: or this https://npmjs.org/package/grunt-combine
[07:21:07] <arschmitz> dont we already use grunt combine?
[07:21:41] <gseguin> we use grunt concat
[07:21:44] <arschmitz> oh
[07:21:48] <gseguin> don't know about combine
[07:22:00] <arschmitz> combine looks like what we would need for this
[07:22:37] <arschmitz> you can put a token in the files then replace it with the contents of another file 
[07:22:42] <gseguin> arschmitz: both these plugins aren't compatible with grunt 0.4
[07:22:47] <arschmitz> damn!
[07:23:14] <gseguin> so in dev you want to use PHP
[07:23:27] <gseguin> in built you want to expand the PHP
[07:23:37] <arschmitz> right
[07:23:42] <toddmparker> hey all
[07:23:47] <toddmparker> cranking away
[07:23:52] <arschmitz> hey toddmparker
[07:23:54] <toddmparker> arschmitz: did you get the include working?!
[07:24:00] <arschmitz> it is on server yup
[07:24:02] <toddmparker> nag panel worked on test
[07:24:05] <toddmparker> cooool
[07:24:09] <arschmitz> ryanneufeld and i banged it out last night
[07:24:14] <toddmparker> rokk
[07:24:21] <arschmitz> trying to work with gseguin to make it work in build now
[07:24:32] <gseguin> getting off the bus
[07:24:38] <gseguin> reconnecting in 15min
[07:24:50] <arschmitz> gseguin cool 
[07:24:51] <arschmitz> thanks
[07:25:23] <arschmitz> toddmparker: it turns out we use nginx not apache 
[07:25:32] <arschmitz> so htaccess dont do anything
[07:26:23] <arschmitz> toddmparker: so my thinking is we include the htaccess anyway so it will work local for 90% of people 
[07:27:17] <arschmitz> and in the readme add a little section about how we are parshing php in html and have included a sample htaccess that will work for most situations
[07:27:40] <arschmitz> and instructions on how to set it up on nginx if you happen to be using that
[07:31:09] <toddmparker> arschmitz: that's a good idea
[07:31:38] <arschmitz> cool ryanneufeld said he would help me with what he did for nginx when we get to that it was too late last night 
[07:31:57] <toddmparker> as it is, if you open the zip of docs locally, we detect and add a message re: the fact that ajax nag won't work
[07:32:08] <arschmitz> toddmparker: we only took the docs down on jquerymobile.com for 20 minutes tops too i swear 
[07:32:12] <toddmparker> there is a link there to instructions which points to the wiki
[07:32:22] <toddmparker> WAT
[07:32:26] <toddmparker> :p
[07:32:37] <arschmitz> ok cool to be honest iv never messed with the zip download lol
[07:32:47] <toddmparker> sometimes, you gotta break some eggs to make an omelet 
[07:32:58] <toddmparker> yeah, download and see what we did for that
[07:33:12] <toddmparker> there are some neat little things to make things work locally
[07:33:25] <toddmparker> figure we should pull that code over to the new demos anyway
[07:33:52] <arschmitz> if all else fails on build with gseguin i came up with an idea to hide the php code and show a link if php is not avalible and show a link 
[07:34:21] <toddmparker> ok
[07:34:31] <toddmparker> a link works
[07:34:51] <toddmparker> but i think we can probably compile these includes into the pages as part of the deploy
[07:35:07] <arschmitz> yeah i found some grunt plugins to do it
[07:35:20] <arschmitz> but gseguin said they wont work with the new version we are swithcing to
[07:36:00] <arschmitz> toddmparker: but im sure we can figure something out
[07:39:29] <gseguin> aaaaand back
[07:40:01] <arschmitz> hi gseguin
[07:42:59] <gseguin> arschmitz: looking at our options
[07:43:06] <arschmitz> ok
[07:56:43] <Wilto> Morning, guys.
[07:58:01] <arschmitz> Morning Wilto
[08:02:49] <toddmparker> hey all - starting now thru Thu morning, i'll be traveling so i'll pop on randomly
[08:03:01] <toddmparker> hopefully, you all can jam on porting content into the new demos
[08:03:11] <toddmparker> think we have a decent system now
[08:05:15] <arschmitz> toddmparker: have fun in cali!
[08:06:30] <gseguin> toddmparker: going to California?
[08:10:48] <gseguin> arschmitz: no luck so far, might have to fork one of these plugins and migrate it to 0.4
[08:11:01] <arschmitz> gseguin ok cool
[08:11:22] <arschmitz> i dont think its super super urgent or anything because the php takes care of most uses
[08:11:23] <gseguin> when do you need that done?
[08:11:42] <arschmitz> might be cool for 1.3 final but we have a non ideal work around if not
[08:11:58] <gseguin> ok, I'll keep that in mind as I'm making progress in the grunt migration
[08:12:08] <arschmitz> gseguin cool 
[08:12:17] <arschmitz> it dosent matter at all untill the next release
[08:12:27] <arschmitz> because no way to get a zip of it untill then
[08:12:39] <gseguin> ok
[08:56:00] <johnbender> gseguin: arschmitz: are you guys handling the build stuff?
[08:56:29] <arschmitz> hi johnbender gseguin is working on finding a way to do it 
[08:56:56] <gseguin> johnbender: couldn't find an existing plugin (that works with .4) to do a regex replacement
[08:57:34] <gseguin> might have to fork and PR grunt-combine or another one of these to do it
[08:58:21] <arschmitz> gseguin: grunt combine looked like the guy is pretty active it was updated 3 days ago
[08:59:12] <arschmitz> johnbender: im going to have some nav related questions shortly but gota work some bugs out of what im trying to do first
[09:07:22] <gseguin> arschmitz: yeah so chances are he'll migrate to .4 soon
[09:07:41] <arschmitz> gseguin: we can hope
[09:08:29] <johnbender> arschmitz: ok I'm going to look at this bug _|Nix|_ pointed me at
[09:08:32] <johnbender> so ping me
[09:09:14] <arschmitz> johnbender: when im done im going to submit as a PR (even though its not really one yet) that way you can see a diff to see what im doing
[09:11:23] <johnbender> arschmitz: kk
[09:14:56] <johnbender> _|Nix|_: ping me when you're around I have some questions about this issue
[09:25:22] <johnbender> ?tell _|Nix|_ I responded on that issue
[09:25:27] <johnbender> ...
[09:28:17] <arschmitz> johnbender: ping!
[09:28:28] <johnbender> arschmitz: good timing
[09:28:48] <arschmitz> johnbender: what im working on is trying to make nav work with deeplinks
[09:28:59] <arschmitz> toddmparker: REALLY wants this
[09:29:11] <johnbender> arschmitz: hmm, what type of deep links
[09:29:17] <arschmitz> scroll to an id
[09:29:19] <johnbender> sub page id refs?
[09:29:46] <arschmitz> basicly makes it so if you have a link to an id and its not a page it will scroll to it
[09:29:59] <johnbender> arschmitz: have you figured out how to represent the url?
[09:30:07] <arschmitz> i think i have it working 
[09:30:17] <johnbender> arschmitz: on an embedded page?
[09:30:23] <arschmitz> im just not sure what horrible concquense i might not be thinking of
[09:30:29] <arschmitz> no we dont care about embeded pages
[09:30:38] <johnbender> ok, so we're waving that one out then?
[09:30:45] <arschmitz> yup
[09:30:45] <johnbender> it will only work on external pages
[09:30:47] <johnbender> nice
[09:30:53] <johnbender> that makes things significantly easier
[09:30:54] <arschmitz> or links within the same page
[09:31:02] <johnbender> ah
[09:31:06] <johnbender> lulz
[09:31:08] <johnbender> that's another matter
[09:31:14] <arschmitz> so let me show you what i have
[09:31:29] <arschmitz> it seems to be working well and not messing with anything 
[09:31:37] <arschmitz> https://github.com/arschmitz/jquery-mobile/commit/9f84e5c4f9313b1b87399b4c784b602b9c18ae67
[09:32:00] <arschmitz> you can ignore all the html stuff and just look at mobile.navigation.js
[09:33:21] <johnbender> arschmitz: doing a hash assignment in navigation is a bit dangerous
[09:33:30] <johnbender> not wrong
[09:33:32] <johnbender> just dangerous
[09:33:43] <johnbender> we have to juggle how the event handlers deal with the hash assignment in that case
[09:33:49] <arschmitz> yeah that was the part i was most sketched out about lol
[09:34:07] <arschmitz> but thats just for people to make it easy to bookmark
[09:34:22] <arschmitz> it works fine with out and just does not update the url so if that had to go it wouldnt be end of the work
[09:34:24] <arschmitz> world
[09:34:31] <johnbender> arschmitz: so one question
[09:34:36] <arschmitz> ok
[09:35:14] <johnbender> it looks like the framework is doing the work of distinguishing when something should be scrolled to
[09:35:20] <arschmitz> by the way i added comments to all of it but its a different commit :( so you would only see the changes in comments 
[09:35:23] <arschmitz> yes
[09:36:21] <johnbender> arschmitz: are we trying to support hash assignment scrolling?
[09:36:32] <johnbender> otherwise moving this to the link binding might make things simpler
[09:36:32] <arschmitz> yes thats the whole point :)
[09:36:40] <johnbender> arschmitz: well
[09:36:54] <johnbender> arschmitz: so I can say location.hash = #mydivid and it'll go to the right place?
[09:37:16] <arschmitz> hmm not sure didnt try that only tried with links
[09:37:45] <johnbender> arschmitz: and one more add on to my original question about pages
[09:37:52] <johnbender> is it only meant to workin the current page?
[09:38:31] <arschmitz> no the way i have it now it works on current page or while navagating to another page
[09:39:37] <arschmitz> johnbender: to answer previous question about setting window.location.hash = "id" to scroll to it yes that works with what im doing
[09:39:39] <johnbender> arschmitz: so someone can do something like http://example.com/foo/bar/?baz=bak#bing in an href and it will navigate to that page and then scroll
[09:39:51] <arschmitz> yup
[09:40:51] <arschmitz> johnbender: that last one was a little tricky to get to work with nested list views!
[09:43:01] <toddmparker> hell with nested listviews
[09:46:11] <arschmitz> lol
[10:00:03] <arschmitz> toddmparker: you still here?
[10:19:49] <toddmparker> here i am
[10:19:56] <toddmparker> in a meeting but sneaking peeks here and there
[10:19:59] <arschmitz> hi
[10:20:05] <arschmitz> just a quick question
[10:20:17] <toddmparker> sure
[10:20:31] <arschmitz> how important do you consider clicking on a deeplink updateing the url?
[10:22:26] <arschmitz> johnbender: is just worried updateing the hash is dangerous not wrong but potentially dangerous 
[10:23:00] <toddmparker> so i click an anchor and the URL doesn't change
[10:23:04] <johnbender> arschmitz: I just meant that updating it in a way other than is currently built in is dangerous
[10:23:04] <arschmitz> right
[10:23:10] <johnbender> toddmparker: ^
[10:23:12] <toddmparker> should be fine
[10:23:30] <johnbender> that is, I think we should be able to work with the current setup using the events
[10:23:36] <arschmitz> johnbender: ok i just wanted to see how important toddmparker thought it was if it saves a lot of complexity
[10:23:41] <toddmparker> as long as we offer a deep link button next to headers so you can grab the encoded url
[10:23:58] <arschmitz> toddmparker: yeah that would be super easy
[10:23:59] <johnbender> we're still discussing the fine points
[10:24:02] <arschmitz> just a bookmark button
[10:24:23] <arschmitz> toddmparker: yeah still might not be needed just wanted an idea of how important you thought it was
[10:25:31] <toddmparker> the way the panel deep links work on iOS is buggy, might be because we're tinkering with the url
[10:25:47] <toddmparker> but as long as we have a way to make an internal anchor
[10:25:54] <toddmparker> and a way to link to a new page and anchor
[10:25:57] <arschmitz> toddmparker: yeah whats on master right now is going away for sure anyway
[10:26:06] <toddmparker> and a way to let people get a link for that deep-link, we're good
[10:26:41] <arschmitz> what i have right now works much much better and is more integrated into nav im just working with johnbender on hopfully fourther improving
[10:27:09] <toddmparker> cool
[10:27:13] <johnbender> arschmitz: toddmparker: I'm hoping to pull it out of nav completely
[10:27:19] <johnbender> using the events
[10:27:22] <toddmparker> this is going to be massively helpful
[10:27:33] <johnbender> but that might be naive
[10:27:43] <toddmparker> if we're happy with it, we should talk about whether it's in master or just a demos thing
[10:28:10] <arschmitz> johnbender: when i tried pulling it out completely i ran into one issue i had started to mention before you got busy
[10:28:19] <arschmitz> but we can talk more about that when your free
[10:28:20] <johnbender> toddmparker: well we shouldn't add it to master until after the release anyhow
[10:28:26] <johnbender> arschmitz: yap
[10:28:30] <johnbender> hopefully we can resolve said issue
[10:28:44] <johnbender> arschmitz: should be shortly
[10:28:53] <toddmparker> johnbender: yeah, for sure
[10:28:58] <toddmparker> we need to live with it for a while
[10:29:17] <arschmitz> johnbender: ok i need to run in like ten minutes
[10:29:23] <arschmitz> ill be gone for about an hour
[10:29:31] <johnbender> arschmitz: that's fine
[10:29:34] <johnbender> arschmitz: we can chat when you get back
[10:29:39] <arschmitz> cool
[10:29:56] <johnbender> toddmparker: I'm going to be fairly busy, I have a presentation on the 31st and internal work
[10:30:06] <johnbender> toddmparker: so I'll be there for meetings but not too much code contrib
[10:31:40] <toddmparker> ok johnbender 
[10:31:59] <toddmparker> i think if you can just help answer Q's like this, that's the most important use of your time
[11:08:02] <Wilto> I hate computers.
[11:08:07] <Wilto> I mean “hello.” Typo.
[12:15:00] <_|Nix|_> johnbender: Pong!
[12:21:03] <johnbender> _|Nix|_: did you see my comment on the issue?
[12:24:43] <_|Nix|_> johnbender: Yes, and I just made one myself.
[12:25:02] <_|Nix|_> johnbender: Basically hashListeningEnabled = false + changePage.defaults.changeHash = false === no history.
[12:25:06] <_|Nix|_> johnbender: No browser history.
[12:25:18] <_|Nix|_> johnbender: Navigation is accomplished via changePage alone.
[12:25:55] <johnbender> _|Nix|_: ah
[12:26:01] <_|Nix|_> johnbender: History was maintained inside $.mobile.urlHistory ...
[12:26:06] <johnbender> so we really just need to add a history entry regardless
[12:26:32] <_|Nix|_> johnbender: Yes, but we need to be careful ... I tried to do that in the gist I mention and it broke a bunch of unit tests.
[12:26:35] <johnbender> _|Nix|_: hmm, how do you feel about just dumping the entry into the stack directly and leaving a TODO in there for now :/
[12:26:57] <_|Nix|_> johnbender: :/
[12:26:59] <johnbender> _|Nix|_: I thought there was a lot of extra stuff going on in the gist
[12:27:23] <_|Nix|_> johnbender: Well, I had to communicate the fact that the hash is not to be touched all the way into navigator.go()
[12:27:49] <johnbender> _|Nix|_: navigate shouldn't get called if we aren't manipulating the hash
[12:27:52] <_|Nix|_> johnbender: Then, I basically "commented out" all the parts of go that deal with generating popstate and stuff ...
[12:27:55] <johnbender> that's what I'm saying
[12:28:13] <johnbender> there's only one call to navigate in changepage
[12:28:25] <johnbender> seems liek there should be a brnach there that alters the history 
[12:28:32] <johnbender> directly instead of calling navigate
[12:28:46] <johnbender> that is for a ducktape solution
[12:29:43] <_|Nix|_> johnbender: The only problem with that is that navigate() generates urlHistory entries with a very specific contents. We'd have to replicate that in both changePage, popup, and dialog.
[12:29:49] <_|Nix|_> johnbender: Well, maybe not dialog.
[12:30:31] <_|Nix|_> johnbender: That's why I was thinking that we should abstract all this away and simply have a function that takes two parameters: whereTo, and deepLinkable.
[12:30:36] <johnbender> _|Nix|_: $.navigate.navigator.squash( url ) returns the state object
[12:30:49] <johnbender> that's one option
[12:31:30] <_|Nix|_> johnbender: Actually, we could separate out the parts of $.mobile.navigator.go() that create the state, and place them in a function called by both changePage and go()
[12:32:15] <_|Nix|_> johnbender: Like, $.mobile.navigator.makeState() or something ...
[12:32:19] <johnbender> _|Nix|_: well, given that changePage relies on nav anyway it might as well live in the navigator object
[12:32:30] <johnbender> _|Nix|_: but yah
[12:32:44] <johnbender> pulling it into another method makes sense
[12:32:46] <_|Nix|_> johnbender: That's what I did in that gist, albeit in a roundabout fashion.
[12:33:03] <johnbender> but I would make sure that the only thing it does is generate that state object
[12:33:05] <_|Nix|_> johnbender: ... because we need to then take that state object and call history.add()
[12:33:08] <johnbender> _|Nix|_: ah
[12:33:10] <johnbender> alternately
[12:33:17] <johnbender> one thing I had  considered
[12:33:29] <johnbender> is alterating the .add method to take a url and the hash
[12:33:37] <johnbender> right now there's a check for it in t he object
[12:33:40] <johnbender> err
[12:33:54] <johnbender> right now there's a check for the hash in the data passed with the history entry
[12:33:59] <johnbender> it should really be a param
[12:34:03] <johnbender> "required"
[12:34:26] <johnbender> _|Nix|_: url and hash are the only things necessary for history entries to work with and without the navigate method
[12:34:51] <johnbender> _|Nix|_: that way the call the add "enforces" the requrement anyway
[12:35:01] <johnbender> and we don't have to care about the state object
[12:36:53] <_|Nix|_> johnbender: That's actually true, because the first entry in the stack only has those two, and it's created at library load time.
[12:36:59] <johnbender> yep
[12:37:17] <johnbender> _|Nix|_: I don't think add is called in too many places so it should be a quick change I think
[12:37:30] <johnbender> then we just have to figure out when to call add and when to call navigate in changePage
[12:37:47] <johnbender> which should be basically when hashListeningDisabled = false
[12:37:51] <johnbender> or that's what I recall
[12:38:05] <_|Nix|_> johnbender: Or when settings.changeHash = false
[12:38:08] <johnbender> right
[12:38:29] <_|Nix|_> johnbender: That will neatly replicate the code inside dialog.close()
[12:57:00] <jqcommit> 01[13api.jquerymobile.com01] 15agcolom pushed 1 new commit to 06master: 02http://git.io/VTv9bg
[12:57:01] <jqcommit> 13api.jquerymobile.com/06master 14b1ba928 15Anne-Gaelle Colom: added edit and bars button icons
[14:12:55] <_|Nix|_> arschmitz: Looks like .attr() is in many cases the worst of the improvements, even though it incorporates the stuff from "More improvements". It's still a huge improvement over what we have now. I think I'll go with it.
[14:13:14] <_|Nix|_> arschmitz: http://jsperf.com/jqmdatavsremovedata/6
[14:13:51] <_|Nix|_> arschmitz: Android 2.3.5 is weird: "More improvements" is worse than native ...
[14:13:51] <arschmitz> _|Nix|_: im going to talk to DaveMethvin about data vs getAttribute and see what he has to say
[14:14:05] <_|Nix|_> arschmitz: OK.
[14:14:22] <arschmitz> i tried to catch him earlier but dosent look like he has been around today
[14:14:29] <DaveMethvin> hey arschmitz!
[14:14:33] <arschmitz> Hey 
[14:14:36] <DaveMethvin> just finished training at 5pm
[14:14:40] <DaveMethvin> so fire away
[14:14:56] <arschmitz> Cool! wondering about getAttribute vs .data
[14:15:21] <arschmitz> getAttribute seems a lot faster but worried about other stuff going on underthe hood making that a bad idea
[14:15:36] <DaveMethvin> do you mean .jqmData and :jqmData, or raw .data() and .attr()?
[14:15:39] <_|Nix|_> DaveMethvin: The context: We're trying to improve the performance of $.fn.buttonMarkup (https://github.com/jquery/jquery-mobile/blob/a9a6b234c45f0e100d613fed3e55eecb58f8ed60/js/jquery.mobile.buttonMarkup.js)
[14:15:57] <arschmitz> not jqm data just .data() and .attr()
[14:16:25] <arschmitz> jqmdata is really just a wrapper on .data()
[14:16:31] <DaveMethvin> are you trying to get html data attributes? if so and you know it's not changed then use attr
[14:16:55] <arschmitz> we dont support dynamic change so we dont care if it changes lol
[14:17:04] <DaveMethvin> .data caches it in memory which is faster, but not if you're having to go out to get the data- attributes anyway
[14:17:05] <arschmitz> and yes just html attributes
[14:17:16] <_|Nix|_> arschmitz: Well, we do support dynamic change, but that's unlikely to happen in a tight loop.
[14:17:32] <DaveMethvin> i looked at this a while back
[14:17:38] <DaveMethvin> buttonMarkup
[14:18:22] <_|Nix|_> DaveMethvin: Well, I made it reusable so we now have to set back all the options we read in so they can be re-applied later.
[14:18:54] <_|Nix|_> DaveMethvin: I've found that using .attr() for getting and native setAttribute for setting is the best compromise for performance.
[14:19:19] <_|Nix|_> DaveMethvin: native getAttribute and setAttribute is faster still, but we're worried about the availability of getAttribute on all platforms.
[14:19:26] <DaveMethvin> do you mean setting buttonElements by serializing to json and a data- attibute is faster?
[14:20:04] <_|Nix|_> DaveMethvin: No. Each attribute is set in turn. We don't serialize to JSON.
[14:20:05] <arschmitz> DaveMethvin: really just wondering about how safe it is to use getAttribute vs attr()
[14:20:37] <DaveMethvin> should be fine to use .getAttribute, and .attr() will get them if you need them later
[14:21:03] <DaveMethvin> but mixing .setAttribute and .data for data- attributes could get you into trouble, don't do that
[14:21:15] <arschmitz> i know i had read about some ie issues with getAttribute but i think its just for class and for on labels?
[14:21:25] <DaveMethvin> right for dom0 properties
[14:21:32] <DaveMethvin> should be safe if theyre all data- attributes
[14:21:37] <arschmitz> ok
[14:21:39] <_|Nix|_> DaveMethvin: I know. I was using setAttribute + .removeData() to get rid of the cache ... that gave us a performance improvement, but it's really a workaround.
[14:22:21] <_|Nix|_> DaveMethvin: That sounds good!
[14:22:26] <DaveMethvin> so which .attr() calls in buttonMarkup are slowing things down? i see a lot of .jqmData() in the loop
[14:22:30] <arschmitz> DaveMethvin might be something crazy like foo-attributes lol be support changing the namespace on them but still should be fine i think
[14:23:02] <arschmitz> DaveMethvin we are trying to get rid of the jqmData() calls where possible to speed it up
[14:23:12] <_|Nix|_> arschmitz: But they're all data-#######
[14:23:37] <DaveMethvin> i suspect .jqmData is doing hella work per call
[14:24:01] <DaveMethvin> considering how few attrs there are maybe you should just get all attributes and create a map of them
[14:24:12] <_|Nix|_> DaveMethvin: Not .jqmData per say - that one's just tacking on the namespace to the key and calling $.fn.data()
[14:24:27] <DaveMethvin> right but you'll never get a  hit in .data
[14:24:40] <DaveMethvin> it will always have to go out and get all the data attrs itself
[14:24:54] <DaveMethvin> so you can just do what data does, once
[14:24:57] <_|Nix|_> DaveMethvin: Yep, so we might as well get 'em ourselves ...
[14:25:01] <DaveMethvin> exactly
[14:25:33] <DaveMethvin> sounds like a winner to me
[14:25:38] <arschmitz> DaveMethvin: so your saying just grab every attribute and save them to check down the line?
[14:25:44] <_|Nix|_> DaveMethvin: Another minor concern is that unlike .data(), neither .getAttribute() nor .attr() has the nice automagic to-boolean or to-integer conversion.
[14:25:59] <DaveMethvin> yes so you'll need to do that yourself
[14:26:20] <DaveMethvin> do you need both there?
[14:26:21] <arschmitz> _|Nix|_: that conversion is really simple so should not be an issue at all
[14:26:24] <DaveMethvin> or just true/false?
[14:26:43] <_|Nix|_> arschmitz: This is also part of the widget review, because it's part of the question of whether we wanna keep data-* attrs in sync with options.
[14:26:57] <arschmitz> _|Nix|_: yeah for sure
[14:26:57] <_|Nix|_> arschmitz: ... and we're leaning towards "no".
[14:27:01] <DaveMethvin> mo expense, mo trouble
[14:27:07] <_|Nix|_> :)
[14:27:08] <arschmitz> yeah that is what we talked about before
[14:27:32] <DaveMethvin> if you get the data attrs as strings you can save having to convert them until you need to know their type
[14:27:43] <_|Nix|_> arschmitz: OK, but for now, I think we can go with .getAttribute() for the data-* attrs, and with .attr() for the href a little further below.
[14:27:45] <DaveMethvin> so like jqmdata(icon) is a string
[14:28:05] <arschmitz> _|Nix|_: yes i think you are right
[14:28:19] <DaveMethvin> well i'd wrap that in a helper just to keep the code a little cleaner
[14:28:42] <DaveMethvin> so the helper can add data- prefix - name
[14:28:54] <_|Nix|_> DaveMethvin: Already done for the perf tests: http://jsperf.com/jqmdatavsremovedata/6 (http://babulina.go-nix.ca/nix/buttonMarkup.js is the source)
[14:29:17] <_|Nix|_> arschmitz: I'm all over this.
[14:29:33] <arschmitz> _|Nix|_: cool im in the middle of some Nav stuff
[14:29:54] <arschmitz> adding ability to manipulate the hash with out adding history and support linking to ids to scroll 
[14:30:48] <_|Nix|_> arschmitz: Dang! Nav is always a doozie!
[14:31:04] <arschmitz> yeah lol
[14:31:17] <arschmitz> toddmparker: wants it like yesterday for docs though lol
[14:31:28] <arschmitz> went over it all with johnbender today
[14:31:36] <_|Nix|_> arschmitz: Have a look at this when you get a sec: https://github.com/jquery/jquery-mobile/wiki/Nav-thoughts
[14:32:33] <arschmitz> _|Nix|_: yeah looking real quick looks very related so ill read that over for sure
[14:32:57] <arschmitz> im already modifying go
[14:33:02] <arschmitz> in navigate
[14:33:37] <arschmitz> _|Nix|_: im tearing ios4 out of pushstate 
[14:33:52] <arschmitz> kicking it to the curb lol
[14:36:58] <_|Nix|_> arschmitz: That opens up some serious potential for improvement.
[14:37:11] <_|Nix|_> arschmitz: Like making popstate and hashchange mutually exclusive.
[14:37:11] <arschmitz> _|Nix|_: yup
[14:37:21] <arschmitz> yup
[14:37:31] <_|Nix|_> arschmitz: ... and finally having a single checkpoint for history.
[14:37:38] <arschmitz> this will allow you to cann navigate to modify the hash without messing with history
[14:37:49] <arschmitz> call*
[14:38:00] <arschmitz> massivly requested feature
[14:38:45] <_|Nix|_> arschmitz: Yeah, but only if pushState is supported ... otherwise we have to go with the don't touch the location, but only play around in $.mobile.urlHistory approach ...
[14:38:56] <arschmitz> yup
[14:39:13] <_|Nix|_> arschmitz: We should also have a config param for turning off browser history manipulation.
[14:39:29] <_|Nix|_> arschmitz: Currently we have $.mobile.hashListeningEnabled + $.mobile.changePage.defaults.changeHash ...
[14:39:32] <_|Nix|_> arschmitz: That's bad.
[14:39:43] <arschmitz> yeah should be a single param
[14:39:48] <_|Nix|_> arschmitz: We should have like a $.mobile.touchBrowserHistory ...
[14:40:23] <arschmitz> yup
[14:40:24] <_|Nix|_> arschmitz: Make that s/touch/create/
[14:40:42] <arschmitz> im also going to try and move all browser sniffing into support
[14:40:43] <_|Nix|_> arschmitz: ... because we'd be touching it via pushState, but maybe not creating any ...
[14:41:16] <_|Nix|_> arschmitz: I think $.mobile.navigate is a good candidate for the fictional $.mobile.go() I describe on that wiki page.
[14:41:35] <_|Nix|_> arschmitz: Like, make all the URL calculations in there based on the params I describe there.
[14:41:50] <arschmitz> yeah i havent read in detail yet but i will tonight
[14:42:36] <_|Nix|_> arschmitz: For now, I'm just trying to fix https://github.com/jquery/jquery-mobile/issues/5465, but I'm finding that it's not as easy at it looks.
[14:43:10] <_|Nix|_> arschmitz: ... so I divert my attention to buttonMarkup to relax from the rage that is nav until I can go at it refreshed in the morning :)
[14:44:06] <arschmitz> lol
[14:44:47] <_|Nix|_> arschmitz: The final verses of Hotel California spring to my mind :)
[14:44:58] <arschmitz> ha ha yeah 
[14:45:48] <_|Nix|_> FMH that song fits better and better the more I think about it ... woah ...
[14:45:55] <arschmitz> I had to find the passage back
[14:45:55] <arschmitz> To the place I was before
[14:45:55] <arschmitz> "Relax, " said the night man,
[14:45:55] <arschmitz> "We are programmed to receive.
[14:45:56] <arschmitz> You can check-out any time you like,
[14:45:58] <arschmitz> But you can never leave! "
[14:46:09] <arschmitz> lol
[14:46:35] <_|Nix|_> This is fscking surreal ...
[15:06:16] <toddmparker> hey all
[15:06:30] <toddmparker> at the airport
[15:07:31] <toddmparker> any fires
[15:18:20] <toddmparker> guess not :)
[15:18:24] <toddmparker> _|Nix|_: you still here?
[15:19:02] <toddmparker> been seeing the popup reposition blink on iOS6 a lot..wondering i fyou had time to give that another look
[15:19:36] <toddmparker> accusations of murder: http://apachecordova.blogspot.com/2012/11/who-is-murdering-phonegap-its-jquery.html?m=1
[15:21:01] <jqmobilecommit> [13jquery-mobile] 15erikyuzwa opened issue #5505: custom-select using hasAttribute which is only IE8+ compatible  02http://git.io/5QgY4Q
[15:22:33] <jqmobilecommit> [13jquery-mobile] 15erikyuzwa opened pull request #5506: workaround for hasAttribute() calls found in custom-select (06master...06master)  02http://git.io/5WKg1w
[15:41:46] <Changsuk> Hi, All.
[15:42:10] <Changsuk> arschmitz, _|Nix|_: are you still here?
[15:46:22] <Changsuk> arschmitz, _|Nix|_: I'd like to talk with you about using jQuery or pure JS API. so if you have some time, please let me know when and where can we talk about it.
[15:51:34] <Changsuk> Todd: I read the article - Who is murdering PG. It's so interesting. :) I agreed the article just in some cases but I think all of things are Not right.
[16:01:16] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06master: 02http://git.io/b0V4DQ
[16:01:16] <jqmobilecommit> 13jquery-mobile/06master 141101629 15Gabriel Schulhof: buttonMarkup: Use native js more often to improve performance. Fixes #5466. Thanks Changsuk....
[16:02:21] <_|Nix|_> Changsuk: Pinig!
[16:02:25] <_|Nix|_> gah!
[16:02:32] <_|Nix|_> It's late - I oughta go to bed ...
[16:02:51] <_|Nix|_> Changsuk: I did, in the end switch to (get|set)Attribute ...
[16:03:02] <_|Nix|_> Changsuk: Let's hope it doesn't break anybody's experience.
[16:03:26] <_|Nix|_> Changsuk: There was a significant performance boost (http://jsperf.com/jqmdatavsremovedata/7)
[16:07:10] <_|Nix|_> Changsuk: I'm going to bed now. See you guys on Thursday at the latest.
[16:19:56] <Changsuk> _|Nix|_: Sorry~~ I went for breakfast.
[16:34:14] <jqcommit> 01[13jquerymobile.com01] 15RedWolves pushed 1 new commit to 06master: 02http://git.io/YKRagQ
[16:34:15] <jqcommit> 13jquerymobile.com/06master 14df38728 15Ralph Whitbeck: updated readme with correct grunt command
[17:07:07] <jqcommit> 01[13jquerymobile.com01] 15RedWolves pushed 1 new commit to 06master: 02http://git.io/_38Mug
[17:07:08] <jqcommit> 13jquerymobile.com/06master 14ffade5a 15Ralph Whitbeck: reverted previous commit per @kswedberg's feedback
[20:04:22] <arschmitz> Changsuk: im here now if your still around
[20:04:33] <jqmobilecommit> [13jquery-mobile] 15leptinella opened issue #5507: panel refresh()  02http://git.io/Qf32cg
[23:14:40] <jqmobilecommit> [13jquery-mobile] 15gvanberkel opened issue #5508: Chrome Issue: CSS column-count and data-role="panel"   02http://git.io/93DSOg
