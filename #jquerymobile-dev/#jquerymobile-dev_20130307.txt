[00:04:55] <jqmobilecommit> [13jquery-mobile] 15adam-ho opened issue #5740: Radio buttons are partially (half) visible behind the labels  02http://git.io/LKWF4A
[02:19:44] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #289: STILL FAILING in 18 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/289/
[02:20:01] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Old build #195: STILL FAILING in 16 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Old/195/
[04:05:11] <jqmobilecommit> [13jquery-mobile] 15poonkave opened issue #5741: Panels outside Page.[Feature Rerquest]  02http://git.io/6Pej-w
[04:42:20] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06enhancement-order: 02http://git.io/43CGGg
[04:42:20] <jqmobilecommit> 13jquery-mobile/06enhancement-order 144e6301e 15Gabriel Schulhof: Registry: Debugging enhancement order
[04:45:00] <_|Nix|_> johnbender: So, theoretically, my approach does not depend on the order in which pagecreate handlers gets called, because I impose the order. Still, and I haven't yet figured out why, there is a small difference in the order which the handlers get called if I stick 'em in an array and call them in order myself, or if I attach them directly instead of sticking them in an array. I'm trying to figure out the difference.
[05:26:52] <_|Nix|_> johnbender: OK. It's because page.sections only attaches to pagecreate whereas everybody else attaches to pagecreate create ...
[05:27:10] <arschmitz> _|Nix|_: im removing page.sections
[05:27:14] <arschmitz> so dont sweat that
[05:27:25] <arschmitz> _|Nix|_ morning by the way :)
[05:27:49] <_|Nix|_> arschmitz: Awesome! And good morning!
[05:28:06] <_|Nix|_> arschmitz: Well, still ... I'll add it to the fold for now, and I'll filter for pagecreate.
[05:28:08] <arschmitz> im making a toolbar widget and adding the content stuff to the page widget
[05:28:35] <arschmitz> then fixedToolbars can just extend toolbars
[05:29:10] <_|Nix|_> arschmitz: Good stuff.
[05:29:17] <arschmitz> i hate page.sections
[05:29:35] <_|Nix|_> arschmitz: All our enhancement handlers should attach to the same events - namely "pagecreate create" - for consistency.
[05:29:56] <arschmitz> yeah well once its a widget it will behave just like the rest of the widgets
[05:30:55] <_|Nix|_> arschmitz: So currently fixedToolbar depends on page.sections ...
[05:31:04] <arschmitz> yes
[05:31:22] <_|Nix|_> arschmitz: That is, the page sections enhancer must have run before the fixedToolbar enhancer can run.
[05:31:34] <arschmitz> yeah
[05:32:34] <_|Nix|_> arschmitz: Well, that now needs to be specified :)
[05:33:22] <arschmitz> actually i take that back
[05:33:34] <arschmitz> it depends on page.sections only for styling 
[05:33:54] <arschmitz> it will execute just fine with out it
[05:34:12] <_|Nix|_> arschmitz: Well, if the page.sections enhancer is not run before the fixedToolbar enhancer, there are test failures.
[05:34:24] <_|Nix|_> arschmitz: Like, the slideup/slidedown classes are not applied by default.
[05:35:06] <arschmitz> intresting let me look real quick 
[05:37:07] <arschmitz> hmm very odd i dont see anything in page.sections that would make fixedtoolbar fail it self it must be something in the tests that makes the assumption
[05:37:59] <_|Nix|_> arschmitz: Well, the tests load these things asynchronously.
[05:38:50] <arschmitz> all page.sections does for toolbars is enhance / add buttons theme and styles
[05:39:00] <_|Nix|_> arschmitz: Funny, cuz fixedToolbar depends on page.sections via requirejs.
[05:39:17] <arschmitz> right because for it to look at all right it is required
[05:39:28] <arschmitz> but from a pure JS perspective its not
[05:39:52] <_|Nix|_> arschmitz: Aha ... OK ... so, I don't get why the tests were failing ...
[05:40:06] <arschmitz> must be something checking for a class or something 
[05:40:15] <arschmitz> do you know which tests specificly?
[05:41:00] <_|Nix|_> arschmitz: Something something applied by default
[05:41:16] <_|Nix|_> arschmitz: Like slideup and slidedown classes are applied by default ...
[05:41:22] <arschmitz> ok
[05:42:30] <arschmitz> The slidedown class should be applied by default
[05:47:47] <arschmitz> ah ok i see
[05:47:59] <arschmitz> its a dumb dependency and can be fixed
[05:48:28] <arschmitz> _|Nix|_: when applying that class it checks for the class ui-header or ui-footer instead of looking at the data-role
[05:50:15] <_|Nix|_> arschmitz: Aha! There it is!
[05:50:38] <_|Nix|_> arschmitz: Well, I say leave it, since you're gonna shake up that whole region anyway.
[05:50:48] <arschmitz> yeah very pointless though lol
[05:50:48] <_|Nix|_> arschmitz: I'll fix it via enhancement deps.
[05:51:13] <arschmitz> but yeah since im going to do a lot of rewrite there anyway no point in fixing right this moment
[05:51:27] <_|Nix|_> arschmitz: Well, I wanna fix it so the widget registry works.
[05:51:34] <_|Nix|_> arschmitz: It's actually a good test for it.
[05:51:45] <_|Nix|_> arschmitz: I mean, it uncovered this dependency.
[05:51:49] <arschmitz> yup
[05:52:03] <_|Nix|_> For cryin' out-loud! St00pid pure virtual methods!
[05:52:04] <arschmitz> i just mean the dependency is a pointless one to begin with!
[05:52:19] <_|Nix|_> arschmitz: I understand completely.
[05:52:50] <arschmitz> i agree good to uncover stuff like this though
[05:53:49] <arschmitz> not only to uncover the dependency but to see that the dependency does not need to be there and fix it
[05:54:30] <_|Nix|_> For sure!
[06:03:34] <arschmitz> want to remove as many dependancys as we can!
[06:07:17] <arschmitz> _|Nix|_: you have been doing a lot of work in buttonMarkup right?
[06:07:34] <_|Nix|_> arschmitz: I dunno about "a lot", but some, yeah ...
[06:07:43] <_|Nix|_> BTW: Yaaay! Unit tests all pass!
[06:07:52] <arschmitz> NICE!
[06:08:34] <arschmitz> what do you think about removing the "mega selector" and breaking it out to just run where needed instead of enhancing all buttons at once?
[06:08:57] <arschmitz> there are notes in several widgets about doing this
[06:10:59] <arschmitz> this would go a long ways towards being able to use widget outside pages
[06:17:42] <_|Nix|_> arschmitz: I haven't really thought about it yet.
[06:17:58] <arschmitz> someone thought it would be a good idea lol
[06:18:12] <arschmitz> because they added comments about it i should do a git blame to see who lol
[06:36:27] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 4 new commits to 06enhancement-order: 02http://git.io/2iRSpQ
[06:36:27] <jqmobilecommit> 13jquery-mobile/06enhancement-order 14e9d9889 15Gabriel Schulhof: page.sections: Use addEnhancementHook, but ignore non-"pagecreate" events.
[06:36:27] <jqmobilecommit> 13jquery-mobile/06enhancement-order 14c9ac288 15Gabriel Schulhof: fixedToolbar: Must be enhanced after page.sections.
[06:36:27] <jqmobilecommit> 13jquery-mobile/06enhancement-order 14d9622b8 15Gabriel Schulhof: Registry: Removing debugging stuff.
[07:01:46] <_|Nix|_> BBIAB
[07:22:19] <_|Nix|_> uGoMobi, arschmitz, gseguin|away, johnbender: Can you guys please have a look at https://github.com/jquery/jquery-mobile/compare/master...enhancement-order and compare that to johnbender's https://github.com/jquery/jquery-mobile/compare/master...widget-registry ?
[07:22:42] <_|Nix|_> I have to go drive my family into Helsinki now, but I should be able to make the meeting.
[07:25:04] <arschmitz> _|Nix|_: not sure about meeting today todd is on vacation
[08:01:01] <gseguin> Good morning
[08:01:22] <RWhitbeck> good morning gseguin
[08:18:32] <arschmitz> Morning gseguin
[08:21:04] <gseguin> _|Nix|_: I think I would vote for Bender's solution because it requires less code modification
[08:23:52] <_|Nix|_> gseguin: He still needs to add the hooks for the other widgets (selectmenu,buttonMarkup, and button)
[08:24:34] <arschmitz> _|Nix|_: how does yours deal with if something is missing?
[08:24:36] <_|Nix|_> gseguin: It's still gonna be less though. I'm just not comfortable leaving some widgets out of the new system.
[08:25:20] <_|Nix|_> arschmitz: Trivially. If something is missing then those divs won't get enhanced anyway.
[08:25:25] <gseguin> _|Nix|_: But your solution requires even widget that have no dependency to register
[08:25:45] <_|Nix|_> gseguin: I don't think so.
[08:25:59] <gseguin> _|Nix|_: then I misread
[08:27:02] <_|Nix|_> gseguin: However, it's a good idea that there be only one pagecreate create handler.
[08:27:12] <arschmitz> _|Nix|_: i was thinking in terms of like the download builder where things can be left out since yours defines order not dependency how that works?
[08:28:20] <_|Nix|_> gseguin: Basically, you can put back the $.mobile.document.bind( "pagecreate create", function stuff for things that have no deps.
[08:28:51] <gseguin> _|Nix|_: ok
[08:29:18] <arschmitz> I think the key difference here is what your actually defining bender defines dependencys where you define order. So the question is which is more useful?
[08:30:32] <_|Nix|_> arschmitz: I used the same approach as requirejs.
[08:31:13] <_|Nix|_> arschmitz: ... the way it creates jquery.mobile.js by loading all deps first, recursively.
[08:31:49] <_|Nix|_> arschmitz: ... and then rendering the whole thing as a flat file.
[08:33:52] <_|Nix|_> arschmitz: The order is calculated from the declared dependencies.
[08:34:04] <arschmitz> ok i see i misread what you were doing at first
[08:34:56] <arschmitz> i get it now
[08:36:07] <arschmitz> _|Nix|_: the one thing i do like about your approach is only one binding to pagecreate
[08:37:12] <_|Nix|_> arschmitz: Yeah, and only at library load time. No need to do anything extra at each pagecreate - although Bender's does very little too - just reset the deferreds.
[08:38:05] <arschmitz> yeah hmm this is tough
[08:39:40] <_|Nix|_> Actually, what I don't get is, if you reset the deferreds by creating new ones, don't you have to hook up the .done() handlers again?
[08:40:24] <jqcommit> [13api.jquerymobile.com] 15efesar opened issue #103: jqmData documentation missing from API site  02http://git.io/kfDTBw
[08:40:44] <_|Nix|_> No wait ... he bunches them together with .when() ... but then you need to call .when() for each pagecreate ...
[08:45:11] <arschmitz> _|Nix|_: yeah he is calling _resolveDependencies on each pagecreate
[08:46:15] <arschmitz> which goes through each registry entry and applys conditions to when
[08:49:00] <_|Nix|_> arschmitz: Yeah, so for each widget that goes through the registry instead of having its own pagecreate handler, a deferred is created at each pagecreate, and a second deferred is created for those widgets that have dependencies.
[08:49:14] <arschmitz> yeah
[08:49:45] <arschmitz> i think your method will be slightly slower on inital load but quicker for subsequent pages 
[08:50:30] <_|Nix|_> Yeah, the initial dep resolution needs to be optimized to death.
[08:51:15] <_|Nix|_> I have one optimization in mind, but I can't try it out now (inm my car, daughter sleeping in the back :)).
[08:51:37] <arschmitz> its hard i think depending on the app it could go either way
[08:52:08] <RWhitbeck> so is it because you're in the car or because your daughter is sleeping?  Just curious _|Nix|_
[08:52:08] <arschmitz> inital library load is already a beast!
[08:52:34] <arschmitz> but having subsequent loads as fast as possible is super important for responsiveness
[08:52:40] <_|Nix|_> RWhitbeck: Yes, it is k)
[08:53:33] <_|Nix|_> OK - daughter's up - gotta go :)
[08:53:44] <gseguin> _|Nix|_: catch you later
[08:57:37] <_|Nix|_> arschmitz: A last thought: Bender's code has to do its dance during first page load too, so that'll also increase apparent load time.
[08:57:52] <arschmitz> yes
[08:57:58] <johnbender> _|Nix|_: yes mine is going to be slower if for no other reason than the extra abstractions
[08:57:59] <arschmitz> very true
[08:58:03] * johnbender shrugs
[08:58:05] <johnbender> I'm fine with either
[08:58:34] <johnbender> I think if we go with yours I would move it to the widget level as form of motivation to get the other bits into widgets
[08:58:39] <arschmitz> Im not set on either yet just trying to think through all the performance implications of both
[08:58:40] <johnbender> but I haven't thought of all the implications
[08:59:12] <johnbender> I also haven't tested mine with subsequent pages loads but I don't see that being an issue
[09:04:42] <arschmitz> i vote for an old school animated celebrity death match between johnbender and _|Nix|_ to decide!
[09:06:38] <johnbender> frankly if _|Nix|_ is farther along with his testing we should probably just go with that :)
[09:06:48] <johnbender> _|Nix|_: though I would request some comments and variable name clarity
[09:06:51] <johnbender> :)
[09:06:56] <arschmitz> ahh come on no death match
[09:08:43] <gseguin> All I know is that Travis is happy with both so far
[09:08:59] <johnbender> gseguin: And knowing is half the battle! GI JOOEEEEEEEEE!
[09:09:15] <johnbender> gseguin: so nice to be able to fire up CI for branches so easily o.o
[09:09:24] <gseguin> no kidding
[09:09:25] * johnbender gives gseguin the thumbs up
[09:09:38] <gseguin> I like Jenkins but it lost that battle
[09:10:04] <johnbender> gseguin: I have a strong dislike of jenkins
[09:10:27] <johnbender> I'd even prefer something with a more complex learning curve, eg buildbot
[09:10:34] <gseguin> johnbender: I think it wokrks well to perform more complex tasks like deploys and all
[09:10:40] <johnbender> meh
[09:10:42] <johnbender> I've used it a ton
[09:10:45] <johnbender> and it's a big pile
[09:10:58] <johnbender> the plugin system, the interface
[09:11:01] <johnbender> all scary
[09:11:05] <gseguin> what I really don't like about it is that you have to duplicate everything
[09:11:16] <gseguin> no DRYness whatsoever
[09:11:18] <johnbender> yar
[09:44:13] <agcolom> johnbender: are we going to have a meeting today?
[09:44:35] <agcolom> (and hello :-) sorry, I am forgetting manners!)
[09:47:58] <johnbender> agcolom: we probably can
[09:48:10] <johnbender> I'm under the impression that most people have been taking a break of sorts
[09:48:19] <johnbender> aside from gseguin of course
[09:48:24] <agcolom> yes, that's my impression too ;-)
[09:48:39] <uGoMobi> hey all
[09:48:47] <johnbender> agcolom: I'll take a poll a half hour before but otherwise don't feel obligated
[09:48:50] <agcolom> so that's why I was wondering about the meeting... I don't have much to say either...
[09:49:03] <agcolom> ok, that sounds like a plan...
[09:49:12] <agcolom> (a good plan)
[09:49:21] <agcolom> Hi Jasper!
[09:49:25] <uGoMobi> hi Anne
[09:50:32] <uGoMobi> no updates from me either... was a bit busy with other project
[09:50:57] <uGoMobi> planning on doing triage this weekend though
[10:06:36] <gseguin> I've got update gallore!
[10:09:39] <johnbender> gseguin: seriously
[10:10:06] <gseguin> :)
[10:17:56] <Wilto> Yo hi.
[10:18:02] <Wilto> I got nothin’, meeting-wise.
[10:18:10] <Wilto> Predictably enough.
[10:52:49] <_|Nix|_> So, are we doing a meeting?
[10:53:35] <_|Nix|_> I merged a few performance PRs.
[10:53:35] <arschmitz> not sure
[10:54:56] <uGoMobi> hi arschmitz _|Nix|_ 
[10:55:20] <_|Nix|_> Hey!
[10:55:29] <arschmitz> hey uGoMobi
[10:55:44] <uGoMobi> we can do a short meeting
[10:56:00] <uGoMobi> _|Nix|_: you wanted our opinion on few things, right?
[10:56:13] <uGoMobi> (catching up)
[10:58:30] <_|Nix|_> uGoMobi: Just the one thing: https://github.com/jquery/jquery-mobile/compare/master...enhancement-order vs. https://github.com/jquery/jquery-mobile/compare/master...widget-registry
[10:58:48] <uGoMobi> _|Nix|_: yeah, I am looking at that now
[10:59:51] <gseguin> ok I'll open the room then
[11:00:33] <gseguin> johnbender: you wanna lead?
[11:00:58] <johnbender> gseguin: sure
[11:14:11] <Krinkle> https://splunk.jquery.com:8000/en-US/app/search/flashtimeline?q=search%20sourcetype%3D%22apache_error%22%20mobile%20NOT%20(%22open()%22%20OR%20%22No%20such%20file%20or%20directory%22%20OR%20%22directory%20index%20of%20*%20is%20forbidden%22%20OR%20%22is%20not%20found%20*%20Not%20a%20directory%22%20OR%20%22File%20does%20not%20exist%22%20OR%20%22access%20forbidden%20by%20rule%2C%20client%22)%20NOT%20ho
[11:14:12] <Krinkle> st%3D%22*.stage.*%22&earliest=0
[11:14:33] <Krinkle> (long url)
[11:14:37] <Krinkle> ugh
[11:15:14] <Krinkle> http://bit.ly/WYlmzP
[11:19:13] <_|Nix|_> Krinkle: requires login
[11:19:24] <_|Nix|_> Krinkle: Not sure I have access ...
[11:19:34] <Krinkle> Yes, contact #jquery-infrastructure if you don't have access.
[11:19:44] <Krinkle> Or ask someone else in the team to digg it up and put it somewhere
[11:19:48] <Krinkle> its a lot of data
[11:27:18] <johnbender> alright
[11:27:25] <johnbender> so here's my two C
[11:27:34] <johnbender> if _|Nix|_ has time to work on the registry let's use his :)
[11:27:50] <johnbender> and I'll work on other things
[11:28:13] <_|Nix|_> The thing is we don't really have a lot of deps. It's mostly flat.
[11:28:26] <_|Nix|_> The only deps are controlgroup and its contained widgets.
[11:28:53] <_|Nix|_> arschmitz is going to get rid of the deps between page.sections and fixedToolbar ...
[11:28:54] <johnbender> _|Nix|_: I think it would be nice to expose to plugin authors at some point
[11:29:19] <uGoMobi> slider depends on textinput
[11:29:19] <_|Nix|_> johnbender: That's why I specified the deps like { ns: [ deps ], ns2: [ deps ] }, etc.
[11:29:31] <arschmitz> range slider depends on slider
[11:29:37] <_|Nix|_> Hold on ...
[11:29:46] <johnbender> arschmitz: well there are two types of dependencies
[11:29:53] <johnbender> arschmitz: just to be clear
[11:29:54] <_|Nix|_> This is not the kind of dependency described by requirejs.
[11:30:00] <johnbender> ^
[11:30:02] <_|Nix|_> What johnbender said ...
[11:30:06] <johnbender> it's purely enhancement order dependency
[11:30:13] <uGoMobi> ah ok
[11:30:13] <_|Nix|_> Exactly.
[11:30:14] <johnbender> and it's not a dependency in the traditional ssense
[11:30:22] <arschmitz> right range slider must come after slider
[11:30:34] <_|Nix|_> arschmitz: That's the requirejs kind of dependency.
[11:30:36] <johnbender> since it has to accommodate things not being present
[11:31:01] <_|Nix|_> arschmitz: But there is no requirement for all sliders to be initialized during pagecreate in order for a range slider to correctly initialize - right?
[11:31:04] <johnbender> the controlgroup is dependent on checkboxradio and some other things IF they exist
[11:31:07] <johnbender> if not it just goes
[11:31:10] <arschmitz> no there is
[11:31:23] * johnbender stands corrected
[11:31:24] <arschmitz> it depends on there being 2 initialized slider already
[11:31:31] <_|Nix|_> arschmitz: Oh, really!
[11:31:37] <_|Nix|_> arschmitz: OK, that /is/ this kind of dep.
[11:31:39] <johnbender> _|Nix|_: and there are more floating around in there
[11:31:42] <johnbender> i'm sure
[11:31:50] <_|Nix|_> arschmitz: That's easy to specify now.
[11:31:59] <johnbender> alright
[11:32:06] <johnbender> lets discuss the shape of the api
[11:32:14] <johnbender> since the implementation doesn't matter after that
[11:32:26] <_|Nix|_> johnbender: I took my cue from requirejs.
[11:32:29] <johnbender> yah
[11:32:41] <johnbender> i still think this can go into the mobile widget
[11:32:50] <johnbender> and we can leave the others as they are now
[11:32:53] <_|Nix|_> johnbender: Yeah ... I saw that too as I was writing it.
[11:33:05] <_|Nix|_> johnbender: We should almost overwrite $.widget.
[11:33:15] <_|Nix|_> johnbender: ... and tack the registration onto the end.
[11:33:15] <johnbender> _|Nix|_: we could do it as part of the creation
[11:33:22] <johnbender> _|Nix|_: but that seemed intrusive to me
[11:33:25] <johnbender> yah
[11:33:32] <_|Nix|_> johnbender: Nono. My version has to be done at library load time.
[11:33:32] <johnbender> I'd rather do something less intrusive first
[11:34:03] <johnbender> _|Nix|_: I was speculating about monkey patching $.widget
[11:34:10] <johnbender> and doing the registration at the end
[11:34:22] <johnbender> but that's intrusive
[11:34:38] <johnbender> I'd rather just expect an explicit call to _register or similar
[11:34:48] <_|Nix|_> johnbender: That's what we have now.
[11:34:52] <johnbender> yes
[11:35:09] <_|Nix|_> johnbender: Instead of $.mobile.document.bind( "pagecreate", ... we have $.mobile.addEnhancementHook( ...
[11:35:17] <johnbender> but moving it into the widget prototype means you don't have to expose things like the registered widget name etc
[11:35:31] <johnbender> $.mobile.<widgetname>._register()
[11:35:59] <johnbender> I think it has to be on the prototype
[11:36:03] <_|Nix|_> Well,  if you don't have a widget instance, you don't have this.widgetName and this.namespace ...
[11:36:08] <uGoMobi> _|Nix|_: could people still use trigger("create") ?
[11:36:15] <_|Nix|_> uGoMobi: Yes.
[11:36:23] <_|Nix|_> ... and that's another point.
[11:36:23] <johnbender> uGoMobi: yes so the binding just moves inside that method
[11:36:31] <johnbender> or into the init
[11:36:32] <uGoMobi> ok
[11:36:35] <johnbender> in the case of my implementation
[11:37:11] <_|Nix|_> johnbender: The truth is that moving it into the widget proto adds another function call.
[11:37:24] <johnbender> :/
[11:37:27] <johnbender> meh
[11:37:38] <johnbender> we have a long way to go before that's a concern
[11:37:45] <johnbender> in terms of perf
[11:37:50] <johnbender> (assuming that's what you mean)
[11:37:52] <_|Nix|_> johnbender: I think it's OK to mention the widget name and namespace inside the toplevel IIFE.
[11:38:18] <johnbender> _|Nix|_: it's less the name and more the fact that its dependencies betweenwidgets
[11:38:18] <_|Nix|_> johnbender: After all, we mention it already: $.widget( "mobile.slider", ... )
[11:38:41] <johnbender> and I'm _really_ tired of adding things to $.mobile because we don't take the time to figure out where it should really live
[11:39:13] <johnbender> PSA uGoMobi gseguin _|Nix|_ Wilto agcolom scottjehl______ please don't add things to $.mobile anymore
[11:39:19] <johnbender> we can do better
[11:39:24] <arschmitz> lol
[11:39:30] <johnbender> arschmitz: you too :)
[11:39:42] <johnbender> sorry I went to fast with the names
[11:39:43] <arschmitz> aww thought i was special!
[11:39:47] <arschmitz> lol
[11:39:58] <_|Nix|_> OK, so whereto? Especially since it's to be publically accessible.
[11:40:03] <gseguin> I don't offen add features but when I do I add them to $
[11:40:19] <johnbender> the mobile widget prototype imo
[11:40:34] <_|Nix|_> Also, it's currently possible to add enhancement hooks to things other than widgets.
[11:40:35] <arschmitz> yeah if its widget specific stuff i think the mobile widget is the place for it
[11:40:57] <uGoMobi> ok
[11:40:59] <_|Nix|_> After all, it's just a fancy way of saying $.mobile.document.bind( "pagecreate create", function() { /* something */ } );
[11:41:11] <johnbender> _|Nix|_: well that depends on the implementation
[11:41:29] <johnbender> pagecreate is actually orthogonal to dependencies
[11:41:35] <johnbender> I tried to capture that in my implementation
[11:41:40] <johnbender> that is
[11:41:45] <johnbender> here are dependencies
[11:41:50] <johnbender> we just happend to resolve them on page create
[11:41:56] <johnbender> and create
[11:42:01] <_|Nix|_> johnbender: I see ...
[11:42:35] <_|Nix|_> johnbender: I dunno ... running this code every time we do a pagecreate ...
[11:42:36] <johnbender> there's nothing to say that we couldn't choose to do enhancement on another event
[11:42:47] <_|Nix|_> johnbender: Good point.
[11:43:00] <johnbender> (orthogonality)
[11:43:06] <_|Nix|_> johnbender: The bottom line is that, whatever the event, the list of handlers has to run in a certain order.
[11:43:11] <johnbender> correct
[11:43:21] <johnbender> my point is just that this is a widget thing
[11:43:23] <johnbender> it should live in widget
[11:43:30] <_|Nix|_> johnbender: So, we could say: construct the list at library load time, and execute it whenever needed.
[11:43:34] <johnbender> the fact that we use pagecreate shouldn't influence where it lives
[11:43:42] <johnbender> _|Nix|_: that's how I built it
[11:43:42] <_|Nix|_> johnbender: True.
[11:43:47] <arschmitz> johnbender im with you on living in the widget
[11:43:55] <_|Nix|_> johnbender: ... except that you recreate the list every time.
[11:44:04] <johnbender> _|Nix|_: hows that?
[11:44:11] <johnbender> _|Nix|_: I replace the deferreds
[11:44:17] <johnbender> I don't recreate the dependency "tree"
[11:44:23] <_|Nix|_> johnbender: Because you recreate the deferreds and then you recreate the when-based deferreds.
[11:44:38] <johnbender> correct
[11:44:38] <_|Nix|_> johnbender: I create the list once: at library load time, and then I run it upon pagecreate.
[11:44:46] <johnbender> _|Nix|_: which is great!
[11:44:50] <johnbender> does that need to change?
[11:45:11] <johnbender> if we move it into the wideget that is
[11:45:11] <_|Nix|_> johnbender: We need to encapsulate the list in an object, and pass a target element to that object.
[11:45:27] <_|Nix|_> johnbender: The object then executes the list on the target element.
[11:45:43] <johnbender> can you bind to the page create in one place and pass that element to each of the callbacks in succession?
[11:45:52] <_|Nix|_> johnbender: The object is oblivious to the reason it was asked to execute the list on the element.
[11:46:03] <_|Nix|_> johnbender: that's what I'm doing.
[11:46:21] <johnbender> maybe I'm confused as to what we're discussing, I'm not advocating my solution
[11:46:29] <_|Nix|_> johnbender: I understand.
[11:46:40] <johnbender> _|Nix|_: feel free to alter the implementaion as much as you want
[11:47:03] <arschmitz> yeah we are just talking about how it "should" work correct?
[11:47:13] <johnbender> work/look/get used
[11:47:13] <_|Nix|_> arschmitz: Yes.
[11:47:32] <arschmitz> now something just to considder since we are trying to make things work outside pages
[11:47:33] <_|Nix|_> johnbender: Can we do this without having any code after $.widget();?
[11:47:46] <arschmitz> we should make it easy to allow people to change the enhance event
[11:47:55] <johnbender> _|Nix|_: we can but I don't want to monkey with it that much
[11:48:04] <johnbender> calling a single registration method isn't worht the trouble
[11:48:11] <arschmitz> some people may want to run it on dom ready as well
[11:48:18] <johnbender> arschmitz: this will be private initially
[11:48:20] <_|Nix|_> johnbender: OK. So what do we put after $.widget();?
[11:48:27] <johnbender> dunno
[11:48:32] <johnbender> throwing out suggestions
[11:48:38] <johnbender> $.mobile.widget.register( "foo" )
[11:48:47] <johnbender> $.mobile.<widget name>.register();
[11:48:56] <johnbender> $.mobile.<widget name>.prototype.register();
[11:48:56] <_|Nix|_> I like the former.
[11:49:15] <johnbender> should probably all be underscore to start
[11:49:25] <arschmitz> johnbender i know it will be privit initally just thinking ahead 
[11:49:31] <_|Nix|_> johnbender: Nono, because it should be accessible to third party widgets.
[11:49:33] <johnbender> arschmitz: yar
[11:49:38] <johnbender> _|Nix|_: not initially
[11:49:43] <johnbender> lets use this to solve our problems
[11:49:51] <johnbender> then if we want we can change it and make it public
[11:49:51] <_|Nix|_> johnbender: OK, and expose later. Sure.
[11:49:57] <_|Nix|_> johnbender: OK.
[11:50:11] <uGoMobi> +1 to $.mobile.widget.register( "foo" )
[11:50:32] <johnbender> $.mobile.widget._register( "mobile.controlgroup", {
[11:50:43] <johnbender>   dependencies: [ "foo", "bar", "baz" ]
[11:50:45] <johnbender> });
[11:50:50] <_|Nix|_> So, $.mobile.widget._register( "mobile-widgetname", { mobile: [ "checkboxradio", "button", "buttonMarkup" ] } );
[11:51:02] <_|Nix|_> johnbender: I'd rather factor out the ns ...
[11:51:22] <uGoMobi> yeah, lots of mobile there
[11:51:25] <_|Nix|_> johnbender: In case we'll have deps from multiple nses.
[11:51:34] <johnbender> we should use the same widgetname as $.widget uses 
[11:51:46] <_|Nix|_> johnbender: Yep.
[11:51:52] <_|Nix|_> OK, so "mobile.widgetname"
[11:52:00] <johnbender> for the name of the widget we're registering at least
[11:52:11] <johnbender> uGoMobi: _|Nix|_: theses aren't going to be huge lists
[11:52:13] <_|Nix|_> [✓]
[11:52:15] <johnbender> keeping consistent has value
[11:52:23] <johnbender> (self documenting)
[11:52:45] <johnbender> and if that's lame we can change it
[11:52:54] <arschmitz> yeah i think with future of ui integration the name space should stay
[11:52:57] <uGoMobi> right
[11:53:10] <johnbender> $.mobile.widget._register( "mobile.controlgroup", {
[11:53:25] <johnbender>   dependencies: [ "mobile.foo", "mobile.bar", "mobile.baz" ]
[11:53:27] <johnbender> });
[11:53:34] <arschmitz> yar 
[11:54:34] <johnbender> _|Nix|_: cool, if any of that turns out to be a gigantic pain in the ass just change it
[11:54:39] <_|Nix|_> A bit verbose for my taste. I'm OK with it if that's the consensus, but let's remember that there's docs too.
[11:55:05] <johnbender> for sure
[11:55:18] <johnbender> and we can always change it when we realize that it's lame
[11:55:38] <_|Nix|_> Lik $.mobile.widget._register( widgetNameWithNS, dependencies ) where dependencies is { ns1: [ "widget1", "widget2" ], ns2: [ "widget1", "widget2" ] } ...
[11:55:48] <_|Nix|_> johnbender: OK. Let's go with this for now.
[11:56:04] <_|Nix|_> johnbender: We have time to finalize it and when we decide to publish the API.
[11:56:10] <_|Nix|_> s/and //
[11:56:14] <johnbender> _|Nix|_: yessir
[11:56:22] <johnbender> _|Nix|_: thanks for doing all the hard stuff man :)
[11:56:31] * _|Nix|_ waves
[11:56:45] <_|Nix|_> C'mon ... I'm not the one doing the heavy lifting here ...
[11:57:18] <_|Nix|_> I was just itching to do some dep stuff after diving into requirejs last week ...
[11:57:39] <_|Nix|_> I tripped over our dependency on version.txt ... 
[11:57:44] <_|Nix|_> I'm glad that's gone now.
[11:58:09] <johnbender> :)
[11:58:19] <_|Nix|_> If it wasn't for version.txt, I could now custom-build web-ui-fw widgets such that they pull their dependencies out of jQM.
[11:59:11] <_|Nix|_> Anyhoo ... I'll re-work that branch to go into $.mobile.widget ...
[11:59:21] <uGoMobi> cool
[11:59:50] <_|Nix|_> ... and I'll flatten the dep spec so that it's a single array.
[12:00:00] <arschmitz> johnbender: quick question 
[12:00:20] <arschmitz> johnbender: know a good way to test performance of something like a slider?
[12:00:21] <_|Nix|_> johnbender: Come to think of it, we should have a second method - the one that executes the resulting array ...
[12:00:42] <johnbender> arschmitz: I did that using refresh
[12:00:45] <_|Nix|_> johnbender: Wait - we already have it: enhance ...
[12:01:01] <_|Nix|_> arschmitz: I know.
[12:01:16] <_|Nix|_> arschmitz: Set random values for one second and see how many you've managed to set.
[12:01:36] <_|Nix|_> arschmitz: You need to set them in an idle loop to give the UI a chance to refresh.
[12:01:43] <johnbender> arschmitz: I'm not sure if refresh is parameterized but doing that with random values would be one way
[12:01:51] <arschmitz> ok
[12:02:26] <johnbender> arschmitz: just keep in mind that the vast majority of that is likely to be in reflows
[12:02:29] <_|Nix|_> arschmitz: Alternatively, you can check how long it takes you to set n random values.
[12:02:37] <johnbender> since I'm sure we'ere calculating offsets and whatnot
[12:02:56] <arschmitz> i wrote a slider for something else non mobile related and i think the general function is a lot better for performance
[12:03:55] <_|Nix|_> OK. I'll take a bit of time off until my daughter goes to bed then I'll get going on putting the registry inside $.mobile.widget.
[12:03:59] <_|Nix|_> BBIAB
[12:04:43] <arschmitz> johnbender: yeah its more performance from a user stand point im worried about responsiveness and such
[12:05:03] <_|Nix|_> arschmitz: Really hard to quantify responsiveness ...
[12:05:08] <arschmitz> i know :(
[12:05:22] <arschmitz> our slider is a mess right now.
[12:05:29] <_|Nix|_> arschmitz: I mean - how closely does the slider button follow your finger? That's the measurement you do with your eyes.
[12:05:39] <arschmitz> yeah
[12:05:39] <_|Nix|_> arschmitz: Good luck teaching JS to do that.
[12:05:45] <arschmitz> lol
[12:06:09] <arschmitz> i figure to a certain exten how long it takes to fully update would be a function of that though
[12:06:31] <arschmitz> so if you trigger a change how long before the handle actually changes
[12:08:17] <arschmitz> the one i wrote uses almost no jQuery at all and has many more featues then ours and is about 400 lines shorter lol 
[12:08:32] <arschmitz> and its single and dual handle all in one
[12:09:13] <arschmitz> so thinking there could be some real wins in a re write
[12:17:05] <johnbender> anyone have or use a mifi?
[12:17:16] <johnbender> verizon/att/t-mobile
[12:17:23] <johnbender> just curious about latency
[12:17:41] <arschmitz> i know someone that loves it
[12:17:48] <arschmitz> i havent used it personally
[12:18:50] <johnbender> arschmitz: I'm particularly curious about sysadmin type tasks
[12:18:51] <arschmitz> johnbender: they live off the grid and use a 4g mifi and say its better then their cable modem was
[12:18:57] <johnbender> arschmitz: o.O
[12:19:03] <johnbender> arschmitz: for the web though?
[12:19:06] <arschmitz> yeah actually the person is a systems admin
[12:19:12] <johnbender> I'm not as worried about down/up speeds
[12:19:17] <johnbender> arschmitz: oh snap
[12:19:18] <johnbender> perfect
[12:19:27] <johnbender> arschmitz: excelent!
[12:19:45] <johnbender> my devious plan to use a chromebook as my dev laptop is falling into place
[12:19:57] <arschmitz> it a systems admin and a graphic designer 
[12:20:20] <arschmitz> so they deal with both ends large up / down and sysadmin
[12:20:53] <arschmitz> and i have not had any complaints not related to inability for their surface to connect to it because of a "known issue" lol
[12:22:49] <arschmitz> johnbender: chrome book you are devious
[12:23:22] <arschmitz> get the super high resolution one lol totaly work the $1400 im sure!
[12:23:42] <johnbender> arschmitz: lolz, 249 bro
[12:23:46] <johnbender> that's why I'm interested
[12:23:52] <johnbender> 249, linux, and 6 hour battery life
[12:23:57] <johnbender> sounds pretty cherryto me
[12:24:32] <johnbender> waiting until after I/O
[12:24:41] <arschmitz> yeah i figured it was the cheap one
[12:25:44] <arschmitz> i just want to see if i can convince someone to drop $1400 on a chrome book lol
[12:26:04] <johnbender> arschmitz: I visited a friend at the santa monica google office for lunch the other day
[12:26:07] <johnbender> and I saw one
[12:26:11] <johnbender> really nice hardware
[12:26:13] <johnbender> stupid price
[12:26:16] <johnbender> but amazing hardware
[12:26:23] <johnbender> also the touchscreen makes no sense to me
[12:26:27] <arschmitz> yeah im sure it is but its just too high for a chrome book
[12:26:32] <johnbender> yah
[12:26:45] <johnbender> long battery life + innexpensive + semi well built? SOLD
[12:27:00] <arschmitz> right the normal ones are a steal if they will work for you
[12:28:40] <arschmitz> and touch screen because thats what all the cool kids are doing!
[12:46:53] <agcolom> arschmitz: Hi,
[12:46:58] <arschmitz> hi
[12:47:15] <agcolom> regarding recipe 2 chapter 2... I don't think that's me...
[12:47:37] <agcolom> I'm on chapter 1 and then HTML5...
[12:47:43] <arschmitz> doh
[12:47:49] <arschmitz> lol its chapter 1 recipe 2
[12:47:51] <arschmitz> sorry!
[12:48:23] <agcolom> no pb. I think chapter 1 recipe 2 is not me either .... (I think.)
[12:48:30] <agcolom> but it's been a long time ;-)
[12:48:38] <agcolom> is it me?
[12:48:40] <arschmitz> https://github.com/jquerymobilecookbook/book/issues/64
[12:48:43] <arschmitz> oops
[12:48:47] <arschmitz> https://github.com/jquerymobilecookbook/book/blob/master/1-pages-the-building-blocks-of-jquery-mobile/recipe-2.adoc
[12:48:52] <arschmitz> looks like you ?
[12:50:02] <agcolom> no, I just updated the headers to help out... 
[12:50:08] <arschmitz> oh ok sorry
[12:50:15] <arschmitz> ill fix that
[12:50:35] <arschmitz> strange it does not list max as a contributor at all
[12:50:42] <agcolom> no problem ;-) Looks like the author is Max Lynch
[12:50:51] <arschmitz> yeah i see now 
[12:50:56] <agcolom> (details when you see the raw file)
[12:51:15] <arschmitz> yeah i just did a git blame and it shows him as writing most
[12:51:26] <arschmitz> just very weird he is not listed as a contributor on the file
[12:52:20] <agcolom> yes... if you choose "raw" (top right corner in github) you'll get the comments and details of the authors...
[12:52:59] <arschmitz> yeah im just talking about when you look at it right above the file there are little pictures of each contributor on that file
[12:53:06] <arschmitz> it only shows you and ralph
[12:53:15] <agcolom> yes, that's very weird! 
[12:53:49] <agcolom> glad we got that sorted ;-) 
[12:54:00] <arschmitz> i updated and re-asigned lol
[12:54:12] <agcolom> thank you :-)
[12:55:21] <arschmitz> im going through and doing a code review on first 2 chapters to help ralph out
[13:52:49] <_|Nix|_> johnbender: Ping!
[13:54:20] <johnbender> _|Nix|_: one sec
[13:54:30] <johnbender> DaveMethvin: gnarf: https://gist.github.com/johnbender/3a4898465e4c0a9092eb
[13:54:36] <johnbender> just a quick hack but it works
[13:54:47] <johnbender> next step is to take the list and get files from the core source
[13:54:55] <johnbender> so I can map them to modules
[13:56:17] <johnbender> _|Nix|_: ping
[13:56:20] <johnbender> err pong
[13:59:02] <_|Nix|_> johnbender: We need an entry point that executes the enhancers in order.
[13:59:16] <_|Nix|_> johnbender: enhance and enhanceWithin only do one widget.
[13:59:32] <_|Nix|_> johnbender: Or rather only one widget class.
[13:59:35] <johnbender> resolve deps?
[13:59:53] <johnbender> $.mobile.widget._registry.resolve()?
[14:01:01] <_|Nix|_> johnbender: OK. So, we have $.mobile.widget._register() and $.mobile.widget._registry.resolve()?
[14:01:19] <johnbender> _|Nix|_: just a suggestions
[14:01:32] <johnbender> _|Nix|_: if you already have a registry object or something maybe put it on there?
[14:01:35] <johnbender> dunno
[14:01:50] <johnbender> s/suggestions/suggestion/
[14:01:51] <_|Nix|_> johnbender: Why not add them both to $.mobile.widget._registry: { add: function() {}, resolve: function() {} 
[14:01:54] <_|Nix|_> }
[14:02:40] <_|Nix|_> johnbender: Or maybe even "enhanceAll" instead of "resolve"
[14:03:04] <_|Nix|_> johnbender: Because it's a lot like enhance and enhanceWithin, except it's cross-widget.
[14:03:40] <johnbender> _|Nix|_: yah I was just thinking that too
[14:03:43] <johnbender> _|Nix|_: i'm down for that
[14:03:53] <johnbender> add 
[14:04:11] <_|Nix|_> so "add" and "enhanceAll"?
[14:04:23] <johnbender> I guess I like resolve because it's resolving dependencies but resolving a registry is a bit more of a stretch
[14:04:35] <arschmitz> those sound good to me they make sense in context 
[14:04:39] <johnbender> youre doing something to the registry with a registry method
[14:04:58] <_|Nix|_> johnbender: Only with an accessor.
[14:05:15] <johnbender> dog.eat(food)
[14:05:15] <_|Nix|_> johnbender: The registry can provide functionality based on the state it encapsulates.
[14:05:18] <johnbender> alters internal state
[14:05:28] <_|Nix|_> dog.fetch( bone );
[14:05:43] <_|Nix|_> alters external state
[14:05:54] <_|Nix|_> :)
[14:05:57] <johnbender> meh
[14:05:59] <johnbender> up to you
[14:06:03] <_|Nix|_> It's a dog-eat-dog world out there :)
[14:09:38] <_|Nix|_> johnbender: There's another problem. The enhancement order is established when the library has finished loading. In the current implementation it is done at mobileinit time.
[14:09:54] <_|Nix|_> johnbender: However, the mobileinit event will not be fired if init is not included.
[14:10:03] <_|Nix|_> johnbender: ... which can happen if people just want a widget.
[14:12:04] <_|Nix|_> johnbender: ... but I think I got it. I'll use the lazy approach.
[14:12:51] <_|Nix|_> johnbender: So, you'll have your way. The first time you call enhanceAll it does actually modify internal state, because it establishes the enhancement order.
[14:13:15] <johnbender> _|Nix|_: I just think registry.enhanceAll doesn't read very nicely
[14:13:24] <_|Nix|_> johnbender: Subsequent calls to enhanceAll do not modify internal state, because enhancement order has already been established.
[14:13:31] <johnbender> enhancing a registry doesn't make sense to me
[14:13:37] <johnbender> _|Nix|_: cool
[14:13:38] <johnbender> sounds good
[14:14:13] <_|Nix|_> johnbender: OK. registry.enhance? Is that too ambiguous given widget.enhance?
[14:14:14] <johnbender> you could make the case that registry.resolve doesn't carry any useful information either though
[14:14:23] <johnbender> _|Nix|_: enhanceAll is fine
[14:14:26] <johnbender> I'm just being a dingbat
[14:14:44] <_|Nix|_> I see your point though ...
[14:14:47] <johnbender> the color of the bikeshed is fine as is :)
[14:14:53] <_|Nix|_> :)
[14:15:21] <_|Nix|_> johnbender: Not so bad considering the param: _registry.enhanceAll( $targets );
[14:15:32] <johnbender> word
[14:35:45] <johnbender> DaveMethvin: gnarf: sadly it looks like we use almost everything :/
[14:37:17] <johnbender> oh well
[14:37:22] <johnbender> it was fun and worth a try
[14:37:40] <johnbender> note that the gist I shared got updated
[14:37:53] <johnbender> but it doesn't handle things like Deferred
[14:40:51] <_|Nix|_> johnbender: Also, just because the whole of jQM uses the whole of jQuery doesn't mean that any part of jQM also uses the whole of jQuery - so, component-level optimization might still be a worthy goal.
[14:41:31] <_|Nix|_> johnbender: So, if I want the super-cool jQM slider, I may not need all of jQuery to make it work.
[14:41:39] <_|Nix|_> johnbender: For example, I'm sure I won't need AJAX.
[14:46:33] <_|Nix|_> arschmitz: I think you gotta clean up page sections sooner rather than later.
[14:46:50] <_|Nix|_> arschmitz: page.sections is the only one that attaches to pagecreate but not create.
[14:47:07] <_|Nix|_> arschmitz: ... and there's actually an error if it gets "create".
[14:47:51] <gseguin> you know what we need?
[14:48:05] <gseguin> we need anchors in our demos
[14:48:06] <johnbender> _|Nix|_: that's totally doable right now, just have to get a given widget's test suite to depend on as little as possible
[14:48:11] <_|Nix|_> gseguin: $1.0e6?
[14:48:29] <johnbender> which many of them do already
[14:48:32] <gseguin> _|Nix|_: I mean besides that
[14:48:47] <gseguin> to be able to deeplink someone to a specific demo
[14:48:50] <_|Nix|_> gseguin: 1.0e6€?
[14:49:03] <_|Nix|_> gseguin: Yeah. Nice!
[14:49:13] <gseguin> oh wait we already have it
[14:49:14] <gseguin> :D
[14:49:16] <_|Nix|_> gseguin: I think arschmitz was working on that.
[14:49:42] <gseguin> nice work team!
[14:50:12] <_|Nix|_> gseguin: I'm not sure if he's gotten around to doing the actual implementation in nav, rather than just the demos version.
[14:52:25] <gseguin> so we've got the "jump to section" panel
[14:53:04] <gseguin> but I think it would be useful to have an anchor labelled "#" next to the section title that would change the href to the deeplink
[14:53:23] <gseguin> I've seen several website doing that, it's very useful
[15:34:13] <gseguin> hey I've got a stupid question
[15:34:44] <gseguin> why don't we refresh a radio when I change the checked property trough .prop( "checked", true )
[15:34:47] <gseguin> ?
[15:35:14] <gseguin> or a checkbox for that matter
[15:38:43] <_|Nix|_> gseguin: AFAIK you're supposed to .prop( "checked", true ).checkboxradio( "refresh" ) ...
[15:38:56] <gseguin> _|Nix|_: but why?
[15:39:22] <_|Nix|_> gseguin: I don't think the checkboxradio emits a "change" event when you do .prop( "checked", true/false )
[15:39:27] <gseguin> why don't we do the refresh automagically when user uses .prop( "checked", true ) ?
[15:39:39] <_|Nix|_> gseguin: In response to what event?
[15:40:36] <gseguin> oh it doesn't?
[15:40:39] <gseguin> darn
[15:41:16] <_|Nix|_> gseguin: AFAIK.
[15:44:55] <gseguin> thanks _|Nix|_ 
[18:41:47] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 06master: 02http://git.io/FadJOw
[18:41:47] <jqmobilecommit> 13jquery-mobile/06master 145a696e1 15Ghislain Seguin: Build: Removed deploy:latest, renamed deploy:release to release
[18:55:17] <travis-ci> [travis-ci] jquery/jquery-mobile#22 (master - 5a696e1 : Ghislain Seguin): The build passed.
[18:55:17] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/93a5068bf164...5a696e108674
[18:55:17] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5332833
[19:49:00] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 061.3-stable: 02http://git.io/FZxUlw
[19:49:00] <jqmobilecommit> 13jquery-mobile/061.3-stable 14d2f1ff8 15Ghislain Seguin: Build: Removed deploy:latest, renamed deploy:release to release...
[20:02:30] <travis-ci> [travis-ci] jquery/jquery-mobile#23 (1.3-stable - d2f1ff8 : Ghislain Seguin): The build passed.
[20:02:30] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/14cd0af6e443...d2f1ff8b9167
[20:02:30] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5333648
