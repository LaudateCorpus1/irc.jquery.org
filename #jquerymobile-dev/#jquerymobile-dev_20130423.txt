[01:52:59] <jqmobilecommit> [13jquery-mobile] 15demonslord opened issue #5922: Panels: break all when property display setted dynamically  02http://git.io/a_PlRw
[01:53:54] <jqmobilecommit> [13jquery-mobile] 15AdoWebDesig opened issue #5923: Select in popup(on panel) > data-native-menu > false?  02http://git.io/1Banhw
[02:02:56] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 8 new commits to 06next: 02http://git.io/CLOJSw
[02:02:56] <jqmobilecommit> 13jquery-mobile/06next 14862ad5a 15Jasper de Groot: Button: renamed variable
[02:02:56] <jqmobilecommit> 13jquery-mobile/06next 14fa8403d 15Jasper de Groot: Demos: Added button and input icon-only examples to button test page
[02:02:56] <jqmobilecommit> 13jquery-mobile/06next 14a53090e 15Jasper de Groot: Button: Set button text as title attribute value for icon-only buttons.
[02:14:34] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #333: STILL FAILING in 16 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/333/
[02:14:51] <doesallmagic> Project jQuery Mobile Git build #5092: FAILURE in 8.7 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Git/5092/
[02:14:55] <doesallmagic> Project jQuery Mobile Phantom 1.1-stable build #299: FAILURE in 2.9 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%201.1-stable/299/
[02:45:31] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 2 new commits to 06next: 02http://git.io/l4XEpg
[02:45:31] <jqmobilecommit> 13jquery-mobile/06next 140ba1ee8 15Jasper de Groot: Listview: Add icon classes to button.
[02:45:31] <jqmobilecommit> 13jquery-mobile/06next 14761d19b 15Jasper de Groot: Moved icon positioning CSS from button to core because we use it for multiple widgets.
[02:47:34] <doesallmagic> Yippie, build fixed!
[02:47:34] <doesallmagic> Project jQuery Mobile Git build #5093: FIXED in 1 min 14 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Git/5093/
[03:13:25] <doesallmagic> Yippie, build fixed!
[03:13:25] <doesallmagic> Project jQuery Mobile Phantom 1.1-stable build #300: FIXED in 25 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%201.1-stable/300/
[04:46:16] <_|Nix|_> uGoMobi: Wow! "next" is looking incredible!
[04:46:32] <uGoMobi> _|Nix|_: thanks! :)
[04:47:07] <_|Nix|_> uGoMobi: I see you've also gotten rid of the inner divs.
[04:47:43] <uGoMobi> _|Nix|_: yeah, no more ui-btn-inner and ui-btn-text
[04:47:54] <_|Nix|_> +109224
[04:48:05] <uGoMobi> _|Nix|_: I am now taking care of buttons in header/footer
[04:48:34] <uGoMobi> we had a lot of CSS overrides to style those
[04:48:58] <uGoMobi> and now we can just use _setOption :)
[04:49:13] <uGoMobi> delete... delete ... delete :)
[05:01:59] <jqmobilecommit> [13jquery-mobile] 15FredWatrous opened issue #5924: [IE8] Slider control broken  02http://git.io/6jxnXQ
[05:10:49] <_|Nix|_> Awesome!
[05:19:00] <jqmobilecommit> [13jquery-mobile] 15Sapprise opened pull request #5925: Fix CORS link (06master...06master)  02http://git.io/Euc14w
[05:57:43] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 3 new commits to 06next: 02http://git.io/GFwoeQ
[05:57:43] <jqmobilecommit> 13jquery-mobile/06next 140043089 15Jasper de Groot: Button: Changed ui-btn-corner-all to ui-corner-all
[05:57:43] <jqmobilecommit> 13jquery-mobile/06next 141c7117c 15Jasper de Groot: Listview: Split buttons without buttonMarkup.
[05:57:43] <jqmobilecommit> 13jquery-mobile/06next 14903c1fe 15Jasper de Groot: Button: header and footer buttons.
[06:00:23] <arschmitz> uGoMobi: you here?
[06:00:31] <uGoMobi> arschmitz: yeah
[06:00:39] <arschmitz> that ie8 slider issue
[06:00:50] <uGoMobi> was just reading
[06:01:02] <arschmitz> i can reproduce in ie10 in ie8 mode but since its fine in ie8 real i think we should close
[06:01:04] <uGoMobi> maybe an issue in IE10 compatibility mode
[06:01:13] <uGoMobi> +1
[06:01:20] <arschmitz> ok ill comment and close
[06:01:34] <uGoMobi> thanks
[06:02:51] <arschmitz> good ol ie 
[06:05:08] <frequent> arschmitz: thanks for the update
[06:05:19] <frequent> on fetchlink
[06:05:34] <frequent> thought that was already in the JQM archive
[06:05:45] <arschmitz> frequent: no problem
[06:06:01] <arschmitz> yeah its been a while on that one was put pretty far out on the roadmap
[06:06:30] <arschmitz> though if we can keep to schedual should be around end of year
[06:06:35] <arschmitz> beginning of next year
[06:07:01] <frequent> I will need to do something sooner (and have to) update my multiview, so I will try 
[06:07:12] <frequent> the widgety-thing 
[06:07:17] <frequent> and see how far I get :-)
[06:07:37] <arschmitz> a lot of the multi view stuff will be solved by containers
[06:07:51] <arschmitz> multiple container will be able to exist at the same time
[06:07:59] <arschmitz> containing their own sets of pages
[06:08:01] <frequent> heh
[06:08:14] <frequent> 1sec
[06:09:10] <frequent> arschmitz: I do have a working version I did for JQM 1.2, but this is already superold and superbuggy. https://github.com/frequent/multiview
[06:10:08] <frequent> so, I will try to replace my panel with container, my popovers with popups and see if I can fiddle it into the JQM nav and history.
[06:10:39] <arschmitz> frequent: yeah im familier i looked at using it for a project at one point
[06:10:55] <frequent> looking at the code now... gives me shivers...
[06:10:59] <frequent> but it worked :-)
[06:11:12] <arschmitz> ended up making it work with a modified panel and an ajax container though
[06:12:08] <frequent> yes. I think it can be done much easier
[06:13:52] <arschmitz> my situation was pretty simple just an inventory with a search panel
[06:14:59] <arschmitz> and didnt want to go to a new page each time the search parameters were updated and just use ajax to update results
[06:16:30] <frequent> arschmitz: this is why I thought, since JQM pulls in pages via Ajax anyway, why not integrate fetchlink into urlHistory.
[06:16:44] <frequent> and have "container"-nav
[06:16:53] <arschmitz> yeah i agree thats how its planned pretty much
[06:17:10] <arschmitz> the work is just being done in steps across multiple releases
[06:17:49] <frequent> ok. cool.
[06:17:58] <arschmitz> first was the nav refactor in 1.3 now containers in 1.4 
[06:18:02] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 2 new commits to 06next: 02http://git.io/CTUmSA
[06:18:02] <jqmobilecommit> 13jquery-mobile/06next 14e115ec1 15Jasper de Groot: Listview: removed superfluous z-index for split button.
[06:18:02] <jqmobilecommit> 13jquery-mobile/06next 147243808 15Jasper de Groot: Listview: performance improvements.
[06:18:26] <arschmitz> maybe we will hit 1.5 for fwetch link though because the two items for nav in 1.5 im working on for 1.4
[06:18:50] <frequent> ic
[06:19:10] <arschmitz> started them for 1.3 but didnt get them done in time
[06:30:22] <frequent> arschmitz: conceptual question on responsive tabs - will they collapse on small screens?
[06:44:40] <arschmitz> responsive tabs? is that on the roadmap? i know we have tabs for 1.4 but was not aware of responsive tabs. ( though if simple its a good idea )
[06:45:22] <arschmitz> the tabs for 1.4 are just ui tabs restyled but you could probably do a good job with responsivness with some pretty simple css
[06:45:43] <_|Nix|_> uGoMobi: YOu don't need to declare the option "disabled" for button, or for any other widget. It gets that option automatically from the widget factory.
[06:46:45] <uGoMobi> _|Nix|_: ok thanks
[06:47:00] <uGoMobi> _|Nix|_: how about the disable and enable methods?
[06:47:27] <_|Nix|_> uGoMobi: You don't need to create those either. They exist in the widget factory and are implemented exactly as you have implemented them in button.
[06:47:51] <uGoMobi> _|Nix|_: ok, wasn't sure about that so it was still on my list to check
[06:48:00] <uGoMobi> will remove them
[06:48:05] <uGoMobi> thanks!
[06:48:06] <_|Nix|_> Awesome!
[06:48:09] <_|Nix|_> NP!
[06:51:14] <frequent> arschmitz: sorry, running in and out of office.. I was just wondering if you have 5 tabs left-to-right you have to be a real artist with short-words, because there sure isn't much space if viewed on a smartphone. Hence the idea of responsiveness. 
[06:51:56] <arschmitz> i see the current implementation i have usees the navbar for the tabs
[06:52:38] <arschmitz> its pretty easy to make navbar responsive too
[06:52:48] <arschmitz> i have a working version somewhere
[06:54:46] <arschmitz> also have a navbar extension i toddmparker and i were looking at at one point to make navbar work better when you have more then 5 to have it split in half instead of just going to 2 per row
[06:55:34] <arschmitz> frequent: i think those two things will pretty much address the issue?
[06:56:50] <frequent> arschmitz: yup. Afraid to say it, but on my Windows XP, I actually like the "responsiveness" of settings tabs... Really fluid :-) 
[06:57:58] <arschmitz> yeah its hard to build responsive stuff into a framework though because its really specific to the site
[07:06:47] <uGoMobi> _|Nix|_: is there a way to make sure jquery.mobile.links.js runs after all other widgets?
[07:08:48] <uGoMobi> _|Nix|_: nevermind, I think it already does
[07:10:42] <uGoMobi> _|Nix|_: the problem that I saw was that links.js adds class .ui-link to buttons in listviews but I was looking at an example where the listview plugin is called on pageinit
[07:19:32] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/7g5shw
[07:19:32] <jqmobilecommit> 13jquery-mobile/06next 14e28733d 15Jasper de Groot: Remove class ui-link from anchors when enhancing buttons or listviews. This is needed in situations where the plugin is called on or after pageinit.
[07:44:58] <_|Nix|_> uGoMobi: Well, you can make links depend on whatever you want it to run after.
[07:46:01] <_|Nix|_> uGoMobi: If you call the listview plugin directly, you'll be missing .ui-link.
[07:46:16] <_|Nix|_> uGoMobi: If you want to enhance something correctly, you should trigger create on it.
[07:46:29] <_|Nix|_> uGoMobi: If you trigger create on the listview the links enhancer should run.
[07:46:58] <_|Nix|_> uGoMobi: So, you could, like, myDiv.trigger( "create" ).listview();
[07:47:00] <uGoMobi> _|Nix|_: but the thing is that I don't want it to run
[07:47:17] <_|Nix|_> uGoMobi: Oh, you want to prevent it from enhancing that particular listview?
[07:47:18] <uGoMobi> _|Nix|_: listview buttons shouldn't have class ui-link
[07:47:26] <_|Nix|_> Oh.
[07:47:45] <uGoMobi> so I still need code in listview to remove that class
[07:48:06] <uGoMobi> in case you call the plugin directly or trigger( "create" )
[07:48:19] <uGoMobi> the plugin = listview
[07:48:26] <_|Nix|_> I guess doing a :not() in the CSS is not an option, eh?
[07:49:11] <_|Nix|_> uGoMobi: You could avoid enhancement using the usual methods and then call .listview() yourself.
[07:49:37] <_|Nix|_> uGoMobi: Like, if you want to pick and choose which enhancers you run, then you should first of all protect your element from enhancement.
[07:49:45] <_|Nix|_> uGoMobi: ... and then run the enhancers by hand.
[07:49:48] <uGoMobi> I think :not() in CSS is worse for performance
[07:50:17] <_|Nix|_> uGoMobi: Are we talking default behaviour or just answering someone's question?
[07:50:35] <uGoMobi> _|Nix|_: default behaviour
[07:50:59] <_|Nix|_> uGoMobi: OIC ... so, you're saying that listview items shouldn't by default get ui-link.
[07:51:30] <_|Nix|_> uGoMobi: Well, we can change the selector in jquery.mobile.links.js to not add the class to listview item links.
[07:51:31] <uGoMobi> _|Nix|_: in links.js we have .not( ".ui-btn" )
[07:51:38] <uGoMobi> that works fine
[07:51:55] <_|Nix|_> uGoMobi: Let me guess ... but .ui-btn is not yet added when the enhancer runs.
[07:52:24] <uGoMobi> but if you create a listview after pageinit the ui-link class has to be removed from the anchors that become buttons
[07:52:56] <uGoMobi> _|Nix|_: at first I thought that was the case, but looks like .ui-btn has been added already
[07:53:25] <uGoMobi> _|Nix|_: just saw the issue in an example where I create the listview after pageinit
[07:53:32] <_|Nix|_> uGoMobi: If you create the listview after pageinit, how are you preventing it from getting created during pagecreate?
[07:53:34] <uGoMobi> makes sense of course
[07:53:49] <uGoMobi> _|Nix|_: no data-role"listview"
[07:54:01] <_|Nix|_> Aha!
[07:54:01] <_|Nix|_> OK.
[07:54:50] <_|Nix|_> uGoMobi: Then in those cases you should specify data-role="none" to protect it from enhancement.
[07:55:23] <uGoMobi> _|Nix|_: yeah, that would prevent the ui-link class being added
[07:55:46] <_|Nix|_> uGoMobi: Exactly, and it wouldn't prevent the listview from being created if you explicitly call .listview() ...
[07:56:29] <_|Nix|_> uGoMobi: So, basically, if you have your own, custom enhancement plans for a widget, you should protect it from the default enhancement sweep with data-role="none".
[07:56:47] <_|Nix|_> uGoMobi: ... and then you can do whatever you want with it.
[07:58:14] <_|Nix|_> uGoMobi: BTW: I've made some progress with checkboxradio on the "next" branch ...
[07:58:31] <uGoMobi> _|Nix|_: oh nice!
[07:58:46] <uGoMobi> _|Nix|_: are you removing buttonMarkup() ?
[07:58:52] <_|Nix|_> uGoMobi: I realized I love deletinh code too ;)
[07:58:54] <_|Nix|_> uGoMobi: Yep.
[07:59:03] <uGoMobi> haha yeah me too
[07:59:32] <uGoMobi> I am going to fix some listview icon stuff and then move on to selects
[08:00:03] <uGoMobi> when checkboxradio and selects are done we can fix controlgroups
[08:00:27] <uGoMobi> controlgroups is mostly updating the CSS to  new situation
[08:01:05] <jqmobilecommit> [13jquery-mobile] 15ChadPrice opened issue #5926: Calling focusPage may result in focus within hidden popups (fatal for ie7)  02http://git.io/7DGIKg
[08:05:21] <_|Nix|_> uGoMobi: We are soooo gonna have to change all the docs from "add data-shadow='true'" to "add class 'ui-btn-shadow'" ...
[08:06:01] <uGoMobi> _|Nix|_: well, right now the data- attributes still work
[08:06:20] <uGoMobi> _|Nix|_: but we have to add an option to widgets to not add classes
[08:07:31] <arschmitz> uGoMobi: are you just using attribute selectors in css?
[08:07:41] <uGoMobi> arschmitz: no
[08:07:55] <uGoMobi> arschmitz: that's not possible because we suppport namespacing
[08:08:03] <arschmitz> oh yeah 
[08:08:14] <uGoMobi> :(
[08:08:24] <arschmitz> so just only supporting data- attributes on the widgets ?
[08:08:35] <arschmitz> and not the new widgetless buttons?
[08:08:50] <uGoMobi> the buttons are not widgetless
[08:08:59] <uGoMobi> they use the button widget
[08:09:13] <arschmitz> all buttons use button widget ??
[08:09:16] <uGoMobi> and there we add classes based on options/data- attributes
[08:09:51] <uGoMobi> arschmitz: not listview buttons or other widgets that used buttonMarkup
[08:10:11] <arschmitz> wait i thought you were getting rid of buttonMarkup and only going to use button widget on like inputs ?
[08:10:44] <uGoMobi> inputs, buttons AND anchors with data-role="button"
[08:11:23] <_|Nix|_> uGoMobi: I'm assuming you're not running unit tests on this branch, right?
[08:11:31] <uGoMobi> _|Nix|_: hell no ;)
[08:11:35] <_|Nix|_> uGoMobi: OK.
[08:11:50] <_|Nix|_> Then I'll just commit the checkboxradio stuff.
[08:11:58] <uGoMobi> _|Nix|_: great
[08:12:13] <_|Nix|_> uGoMobi: Please check over it. I'm sure there's stuff I've missed.
[08:12:28] <uGoMobi> _|Nix|_: sure will do
[08:14:05] <uGoMobi> arschmitz: we can document that you can add data-role="none" (to prevent ui-link class) to an anchor and just add the button classes yourself
[08:14:09] <toddmparker> good morning everyone
[08:14:16] <uGoMobi> toddmparker: morning toddmparker 
[08:14:48] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/9RHQ3Q
[08:14:48] <jqmobilecommit> 13jquery-mobile/06next 147a55b27 15Gabriel Schulhof: Checkboxradio: Get rid of buttonMarkup.
[08:15:03] <uGoMobi> arschmitz: same goes for button elements
[08:16:15] <_|Nix|_> uGoMobi: So, there it is ...
[08:16:37] <_|Nix|_> uGoMobi: I had to get rid of some CSS stuff as well, because it's now getting applied to the label, rather than to a dedicated div.
[08:16:52] <uGoMobi> _|Nix|_: yeah, makes sense
[08:26:17] <_|Nix|_> uGoMobi: I think I missed the blue background around the checkmark ...
[08:28:03] <uGoMobi> _|Nix|_: yeah the selector needs to be updated in theme CSS
[08:35:07] <toddmparker> uGoMobi: " Set button text as title attribute value for icon-only buttons."
[08:35:08] <toddmparker> smart
[08:35:51] <uGoMobi> toddmparker: thanks, but actually we did that in buttonMarkup :)
[08:37:22] <uGoMobi> toddmparker: I am hiding the icon-only text with text-indent: -9999px and white-space: nowrap;
[08:37:30] <uGoMobi> toddmparker: that way we don't need a span
[08:38:17] <uGoMobi> toddmparker: have to check with scottjehl and Wilto if they know any downsides
[08:58:51] <toddmparker> hey uGoMobi - just finished reading the back scroll
[08:59:18] <toddmparker> seems like a good idea to me
[08:59:48] <toddmparker> do you have a link to that latest hotness?
[09:00:32] <uGoMobi> toddmparker: http://view.jquerymobile.com/next/demos/
[09:00:47] <uGoMobi> toddmparker: you will still see a lot of broken stuff though
[09:01:43] <uGoMobi> toddmparker: buttons and listviews don't use buttonMarkup anymore and I moved icons to :after pseudo element
[09:02:45] <uGoMobi> toddmparker: _|Nix|_ just removed buttonMarkup from checkboxradio... few more widgets to go
[09:09:32] <toddmparker> uGoMobi: cool
[09:23:29] <jqcommit> 01[13api.jquerymobile.com01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/6R4zfg
[09:23:30] <jqcommit> 13api.jquerymobile.com/06master 14161ce13 15Scott González: Added CONTRIBUTING.md.
[09:46:51] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/oI0COg
[09:46:51] <jqmobilecommit> 13jquery-mobile/06next 14ed69a52 15Jasper de Groot: Listview: Improved icon and theme options logic. Prevent icon related classes being added when icon is set to false.
[10:00:00] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 3 new commits to 06next: 02http://git.io/VjikZw
[10:00:00] <jqmobilecommit> 13jquery-mobile/06next 14dd9771c 15Jasper de Groot: Demos: Removed temporary CSS after fixing the issue in the framework CSS.
[10:00:00] <jqmobilecommit> 13jquery-mobile/06next 1432ffa3c 15Jasper de Groot: Reverted commit e28733d. Devs should add data-role="none" to anchors to prevent class ui-link if they plan to enhance as listview or button after pageinit.
[10:00:00] <jqmobilecommit> 13jquery-mobile/06next 14fd3e6d3 15Jasper de Groot: Theme: Updated checkboxradio icon selectors.
[10:04:57] <johnbender> _|Nix|_: ping
[10:05:05] <uGoMobi> _|Nix|_: I think we can get rid of the checkbox div wrapper as well
[10:05:15] <johnbender> the id replace regex you added to custom selects appears to be failing our linting
[11:01:26] <jqmobilecommit> [13jquery-mobile] 15tschettler opened issue #5927: Panel: Dynamically created close elements do not close the panel  02http://git.io/Fxfpnw
[11:11:28] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender created 06content-widget (+4 new commits): 02http://git.io/nuA62w
[11:11:28] <jqmobilecommit> 13jquery-mobile/06content-widget 1404636aa 15John Bender: create content widget, move navigate binding in
[11:11:28] <jqmobilecommit> 13jquery-mobile/06content-widget 14aa6b29f 15John Bender: test that the navigate event is ignored when the original event is prevented
[11:11:28] <jqmobilecommit> 13jquery-mobile/06content-widget 14a90898d 15John Bender: use the original event type from the event instance
[11:11:30] <johnbender> _|Nix|_: arschmitz: toddmparker: gseguin|away: it has begun ^
[11:12:43] <jqmobilecommit> [13jquery-mobile] 15tschettler opened pull request #5928: Panel: Allow dynamically created close buttons (06master...06master)  02http://git.io/rWwZ_A
[11:16:06] <jqcommit> 01[13api.jquerymobile.com01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/ltRRuQ
[11:16:07] <jqcommit> 13api.jquerymobile.com/06master 14d59c8ac 15Scott González: CONTRIBUTING: Added link to #jquery-content.
[11:31:07] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 2 new commits to 06content-widget: 02http://git.io/a0Ne4Q
[11:31:07] <jqmobilecommit> 13jquery-mobile/06content-widget 1438c89ae 15John Bender: test that the url in the state is used when the original event is NOT a hashchange
[11:31:07] <jqmobilecommit> 13jquery-mobile/06content-widget 14dafead2 15John Bender: test the last two url setup guards
[12:06:45] <johnbender> I haven't yet broken the navigation test suite
[12:06:51] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 2 new commits to 06content-widget: 02http://git.io/YBjldQ
[12:06:51] <jqmobilecommit> 13jquery-mobile/06content-widget 14822d3f7 15John Bender: remove spurious navigation unit tests
[12:06:51] <jqmobilecommit> 13jquery-mobile/06content-widget 14ba9b424 15John Bender: move handle hash change into content widget
[12:06:58] <johnbender> I think I can pull it off with small changes
[12:08:12] <toddmparker> johnbender: awesome
[12:08:36] <johnbender> toddmparker: I posted the lists of things I want in and out too for review on the issue
[12:08:46] <johnbender> toddmparker: focused on the content manip only
[12:08:51] <johnbender> toddmparker: we'll see how it goes
[12:09:07] <johnbender> unit tests are coming along with it too
[12:09:25] <johnbender> next step is to split up handle hash change for testing
[12:09:26] <toddmparker> so happy to see you working on this
[12:09:32] <johnbender> then probably changePage
[12:09:34] <johnbender> and loadPage
[12:09:39] <johnbender> those will take a while
[12:10:04] <toddmparker> you are a hero for dealing with nav
[12:10:05] <johnbender> toddmparker: I'm going to try and keep arschmitz and _|Nix|_ up to speed too so that if I can't finish it they can jump in
[12:10:19] <toddmparker> excellent
[12:42:15] <jqmobilecommit> [13jquery-mobile] 15czraptor opened issue #5929: Panel: when i add panel code to html, it breaks the structure of the page  02http://git.io/FRc2bg
[12:50:41] <_|Nix|_> johnbender: I thought I had fixed that by moving to the git version of jshint.
[12:50:57] <johnbender> _|Nix|_: so we need to do a clean and npm install?
[12:51:12] <_|Nix|_> johnbender: Yes.
[12:51:14] <johnbender> _|Nix|_: it seems odd that you can use a / without an escape
[12:51:32] <_|Nix|_> johnbender: ...because it's in a character class.
[12:51:45] <_|Nix|_> johnbender: [/] is kosher.
[12:51:55] <johnbender> did not know that
[12:52:07] <_|Nix|_> johnbender: Yeah, you can do a literal dollar sign with [$]
[12:58:02] <_|Nix|_> uGoMobi: Great! (getting rid of the wrapper)
[13:10:53] <_|Nix|_> uGoMobi: If I get rid of the wrapper, I should also get rid of all the CSS references to .ui-checkbox and .ui-radio, right?
[13:16:15] <_|Nix|_> uGoMobi: If we get rid of the wrapper then we must always make sure that the label precedes the input and that they are immediate siblings. Otherwise, the label may contain the input, in which case the input will be visible inside the label.
[13:37:45] <uGoMobi> _|Nix|_: the label should get the ui-checkbox / ui-radio class
[13:39:09] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/esACSg
[13:39:09] <jqmobilecommit> 13jquery-mobile/06next 14445e214 15Gabriel Schulhof: Textinput: Get rid of buttonMarkup.
[13:39:36] <uGoMobi> _|Nix|_: I think we only need to keep CSS rules for ui-checkbox/ui-radio in fieldcontain
[13:41:22] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06next: 02http://git.io/s7ZnjQ
[13:41:22] <jqmobilecommit> 13jquery-mobile/06next 147eddc2c 15Jasper de Groot: Button: user-select none for all buttons.
[13:47:11] <uGoMobi> _|Nix|_: i don't think an input wrapped in a label should be a problem
[13:47:25] <uGoMobi> parentLabel = $( input ).closest( "label" )	
[13:47:28] <uGoMobi> label = parentLabel.length ? parentLabel : $( input ).closest( "form, fieldset, :jqmData(role='page'), :jqmData(role='dialog')" ).find( "label" ).filter( "[for='" + input[0].id + "']" ).first()
[13:48:33] <uGoMobi> we can still hide the input
[13:57:31] <_|Nix|_> uGoMobi: How do we hide it? visibility: hidden?
[13:58:34] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/OjXYxQ
[13:58:34] <jqmobilecommit> 13jquery-mobile/06next 14ebe2dc6 15Gabriel Schulhof: Dialog: Get rid of buttonMarkup.
[13:58:38] <_|Nix|_> uGoMobi: I'm afraid that if we do visibility: hidden it will have an impact on form data.
[13:59:35] <uGoMobi> _|Nix|_: no we just make it very small and use z-index and position absolute to hide it underneath the label
[14:00:31] <_|Nix|_> uGoMobi: It can't be underneath the label if it's wrapped inside the label, can it?. So, we definitely must take it out of the label if it's wrapped inside the label.
[14:00:48] <uGoMobi> _|Nix|_: that doesn't matter
[14:01:05] <agcolom> toddmparker: are you still around? I need your opinion on a tutorial (to add or not to add to the resources page)
[14:01:08] <agcolom> http://miamicoder.com/2013/jquery-mobile-sample-executive-dashboard/
[14:01:17] <_|Nix|_> uGoMobi: I've had it wrapped inside the label, and the z-index of the input was lower than the z-index of the label, and it was still visible.
[14:02:53] <uGoMobi> _|Nix|_: hmm... but that is not related to having a div wrapper or not, right?
[14:03:16] <uGoMobi> _|Nix|_: it should already be a problem then with current code
[14:03:49] <agcolom> was taken aback at first as there's an advert on the page for his book on Sencha Touch, but then after that one there's his book on jQuery Mobile, so I suppose that's ok to add?
[14:04:12] <_|Nix|_> uGoMobi: Yes, it is related, because the way the div wrapper is applied is this: input.add( label ).wrapAll( wrapper );
[14:04:31] <_|Nix|_> uGoMobi: This causes the input and the label to become siblings inside the wrapper if they are not already siblings.
[14:04:31] <uGoMobi> _|Nix|_: ah I see
[14:04:40] <uGoMobi> gotcha
[14:04:51] <_|Nix|_> uGoMobi: However, if there is no wrapper, they could be anywhere.
[14:05:07] <_|Nix|_> uGoMobi: We can still move them next to each other.
[14:05:23] <uGoMobi> _|Nix|_: yeah true
[14:06:04] <_|Nix|_> uGoMobi: In fact, I think all the CSS would still be good, but we need to get rid of the .ui-checkbox prefix.
[14:06:46] <uGoMobi> _|Nix|_: think we should get rid of the space after .ui-checkbox
[14:08:34] <_|Nix|_> uGoMobi: I'll give this another shot. I tried to remove the wrapper and move the input below the label, and that's exactly what I did :) The input appeared below the label :)
[14:08:36] <uGoMobi> _|Nix|_: but I would like to remove some of the checkboxradio rules and let it use default button CSS as much as possiblel
[14:08:59] <uGoMobi> :)
[14:09:00] <_|Nix|_> uGoMobi: Well, we'll have to do something about the input.
[14:09:27] <_|Nix|_> uGoMobi: Can we write rules that apply to the immediately succeeding sibling?
[14:09:36] <uGoMobi> _|Nix|_: yes
[14:09:49] <uGoMobi> selector + selector
[14:10:11] <_|Nix|_> uGoMobi: OK, then we must do that, and ensure that the input always follows the label immediately.
[14:10:17] <uGoMobi> but you can only target the last of the two siblings
[14:10:32] <_|Nix|_> What do you mean "the last of the two siblings"?
[14:11:08] <_|Nix|_> uGoMobi: How's this: we apply ui-checkbox to the label and then we address .ui-checkbox+input
[14:11:18] <uGoMobi> _|Nix|_: selector el1 + selector el2 ... you can only target el2
[14:11:29] <uGoMobi> not el1 followed by el2
[14:11:49] <_|Nix|_> uGoMobi: that's fine. I want to target el2.
[14:12:21] <uGoMobi> we know add a class ui-checkbox-input to the native element
[14:12:45] <_|Nix|_> We do? In master?
[14:12:56] <_|Nix|_> I don't see it in next.
[14:12:58] <uGoMobi> _|Nix|_: oopse
[14:13:06] <uGoMobi> I was wrong
[14:13:18] <uGoMobi> things there was something on my screen ;)
[14:13:35] <_|Nix|_> uGoMobi: You're seeing things ... :)
[14:13:36] <uGoMobi> looked like a dash between ui-checkbox and input 
[14:13:50] <uGoMobi> s/things/think
[14:13:52] <uGoMobi> lol
[14:14:07] <_|Nix|_> uGoMobi: We could add a plus instead of a dash ...
[14:14:13] <uGoMobi> anyway... ui-checkbox + input sounds good
[14:14:40] <_|Nix|_> uGoMobi: Yeah. 
[14:14:46] <_|Nix|_> uGoMobi: I'll give that a shot.
[14:15:38] <uGoMobi> _|Nix|_: I see an issue
[14:16:01] <uGoMobi> _|Nix|_: to position it absolute relative to the label it has to be a child
[14:22:24] <_|Nix|_> uGoMobi: Good point.
[14:22:47] <_|Nix|_> uGoMobi: So maybe we need the wrapper after all ...
[14:24:17] <uGoMobi> hmm
[14:25:38] <_|Nix|_> uGoMobi: I don't suppose we get any guarantees in terms of coordinates if we put the input right after the label ... like ... the input is guaranteed to be either directly below the label, or it is guaranteed to be directly left of the label.
[14:26:10] <uGoMobi> _|Nix|_: I was thinking in the same direction
[14:26:17] <_|Nix|_> uGoMobi: ... and I'm not even sure if such a guarantee, even if it were present, were of any use.
[14:26:43] <uGoMobi> if the label is displayed as block the input will be right below
[14:27:00] <uGoMobi> but it's tricky
[14:27:03] <_|Nix|_> uGoMobi: ... and if it's inline? It may or may not be.
[14:27:15] <uGoMobi> _|Nix|_: indeed
[14:27:26] <uGoMobi> depending on width and available space
[14:27:43] <_|Nix|_> Yep.
[14:27:46] <uGoMobi> _|Nix|_: ok, maybe we should leave the wrapper for now
[14:27:50] <uGoMobi> :(
[14:27:55] <_|Nix|_> I'm afraid so ...
[14:28:01] <uGoMobi> I get OCD when I am cleaning up :)
[14:28:13] <uGoMobi> want to remove everything
[14:28:23] <_|Nix|_> That's alright ... we've gotten rid of three divs from every checkbox ... inner, text, and icon ...
[14:28:33] <_|Nix|_> That's a ton!
[14:30:05] <uGoMobi> _|Nix|_: I am looking at some code I use for another project
[14:30:16] <uGoMobi> I still see possibilities :)
[14:30:26] <_|Nix|_> uGoMobi: By all means ...
[14:30:49] <_|Nix|_> uGoMobi: You are by far my superior when it comes to CSS.
[14:31:24] <_|Nix|_> uGoMobi: I'm basically making use of the awesomeness you did with the CSS to get rid of the simplest uses of .buttonMarkup() from the code.
[14:31:45] <uGoMobi> _|Nix|_: we don't even need JS to change the icon state
[14:32:22] <_|Nix|_> uGoMobi: Not if we use the wrapper ...
[14:32:31] <_|Nix|_> uGoMobi: Excellent point!
[14:32:32] <uGoMobi> (I am not thinking about IE7 anymore)
[14:33:00] <_|Nix|_> Are we dropping IE7?
[14:33:04] <_|Nix|_> Please say we are!
[14:33:16] <uGoMobi> _|Nix|_: I degraded it in next
[14:33:26] <uGoMobi> it doesn't support pseudo elements
[14:33:53] <_|Nix|_> uGoMobi: It's only fair - /it/ degraded /us/ from the day it was released.
[14:33:54] <uGoMobi> input[type="checkbox"]:checked + label:before
[14:34:06] <uGoMobi> _|Nix|_: lol it sure did
[14:34:47] <uGoMobi> that's the CSS we can use to have different icons for :checked
[14:35:02] <_|Nix|_> uGoMobi: If we keep the wrapper we should probably use it instead of input[type="checkbox"] ... no?
[14:35:31] <_|Nix|_> uGoMobi: ... but the input follows the label ...
[14:35:57] <uGoMobi> yeah but we can make that the other way round
[14:36:13] <uGoMobi> have to give it a closer look
[14:36:17] <uGoMobi> will do that tomorrow
[14:36:41] <_|Nix|_> OK. It'd be good to get rid of some of those .toggleClass() calls.
[14:37:05] <_|Nix|_> uGoMobi: Keep in mind though that when they're part of a horizontal controlgroup there are no icons at all.
[14:37:18] <uGoMobi> _|Nix|_: good point
[14:38:01] <uGoMobi> but then we have to add the active state class anyway
[14:38:15] <_|Nix|_> uGoMobi: This is absolutely awesome though ... I can't wait to see the jsperf scores :)
[14:38:42] <uGoMobi> yeah me too
[14:40:52] <_|Nix|_> uGoMobi: OK ... I'll look at some more places where we can get rid of .buttonMarkup ... however, I'm thinking that we might have to keep it around for a version, basically turning it into a fancy version of toggleClass ...
[14:41:48] <_|Nix|_> uGoMobi: API-wise we /can/ say that we never promised .ui-btn-inner and .ui-btn-text, but we /did/ promise $.fn.buttonMarkup().
[14:41:48] <uGoMobi> _|Nix|_: not sure why we should keep it around
[14:41:58] <uGoMobi> for the button states?
[14:42:11] <uGoMobi> yeah that's true
[14:42:29] <_|Nix|_> uGoMobi: Well, if we remove $.fn.buttonMarkup there will be a lot of ReferenceErrors.
[14:42:54] <_|Nix|_> uGoMobi: ... and if we don't, it needs to still do what's expected of it.
[14:46:12] <uGoMobi> we also have this hoverDelay feature
[14:46:12] <uGoMobi> select, collapsible, slider and table colomn toggle are the only widgets left that use buttonMarkup I think
[14:46:12] <uGoMobi> but will do a search
[14:46:12] <uGoMobi> maybe we will be able to make the custom select perform decently
[14:46:44] <_|Nix|_> navbar
[14:46:52] <_|Nix|_> But yeah ...
[14:47:11] <_|Nix|_> uGoMobi: That would be huge ...
[14:47:30] <_|Nix|_> uGoMobi: columntoggle seems pretty straight-forward.
[14:47:59] <_|Nix|_> uGoMobi: Another thing comes to mind: buttonMarkup has defaults. Those can be configured during mobileinit.
[14:48:01] <uGoMobi> yeah
[14:48:07] <_|Nix|_> uGoMobi: Like, do buttons have corners by default?
[14:48:28] <_|Nix|_> uGoMobi: If you set corners to true, the class ui-corner-all will be added.
[14:48:31] <uGoMobi> _|Nix|_: in the button widget yes
[14:49:00] <uGoMobi> the default depends on the widget
[14:49:14] <_|Nix|_> uGoMobi: Ok, so the button widget will now handle links as well?
[14:49:26] <uGoMobi> _|Nix|_: yes
[14:49:48] <uGoMobi> anchors with data-role="button" are in the initSelector now
[14:49:52] <_|Nix|_> uGoMobi: Then we need to be careful, because if you have a lot of links which are not in a listview or anything, you will end up creating a lot of widgets.
[14:50:29] <_|Nix|_> uGoMobi: ... and creating a widget is a lot more expensive than a single call to buttonMarkup.
[14:50:30] <uGoMobi> _|Nix|_: although we can document that you can add data-role="none" and just add the classes in your markup
[14:51:08] <uGoMobi> _|Nix|_: I know but we have to enhance them somewhere
[14:51:09] <_|Nix|_> uGoMobi: Actually, you don't need to add data-role="none" if you add ui-btn yourself.
[14:51:12] <arschmitz> uGoMobi:for links why do you need data-role none?
[14:51:27] <uGoMobi> _|Nix|_: yes, otherwise it gets class ui-link
[14:51:34] <_|Nix|_> arschmitz: You don't if you add ui-btn yourself.
[14:51:39] <uGoMobi> arschmitz: ^^
[14:51:48] <uGoMobi> _|Nix|_: ah, that's true
[14:51:50] <arschmitz> links are not buttons by default now though
[14:52:01] <_|Nix|_> arschmitz: Nono.
[14:52:02] <uGoMobi> arschmitz: correct
[14:52:09] <_|Nix|_> arschmitz: Don't worry about that.
[14:52:31] <_|Nix|_> That would be terrible for wiki-like sections.
[14:52:56] <uGoMobi> but for instance anchors in toolbars are enhanced as buttons by the framework
[14:53:03] <uGoMobi> we have to do that somewhere
[14:53:29] <_|Nix|_> uGoMobi: The problem is that you're doing a really heavyweight operation just to add a few classes.
[14:53:46] <uGoMobi> if it's better to do that in a function similar to links.js I am all in favor
[14:54:00] <arschmitz> this will REALLY slow down current pages if people do not update their markup
[14:54:27] <_|Nix|_> uGoMobi: Yeah, actually, that's what I'm thinking ... and you know what? We already have a place: jquery.mobile.buttonMarkup.js ...
[14:54:43] <_|Nix|_> uGoMobi: We totally gut it, deprecate the jQuery plugin, but we keep the enhancer.
[14:54:45] <uGoMobi> _|Nix|_: lol
[14:54:48] <uGoMobi> sounds good
[14:55:31] <uGoMobi> we can move button elements to buttonMarkup too
[14:55:40] <_|Nix|_> uGoMobi: We can?
[14:55:54] <uGoMobi> only input type buttons need a div wrapper
[14:56:00] <_|Nix|_> uGoMobi: Those have, like, disabled and stuff, ...
[14:56:06] <uGoMobi> _|Nix|_: yeah, buttons only get some classes
[14:56:18] <uGoMobi> ah, that's right
[14:56:27] <uGoMobi> so that requires the widget factory
[14:56:33] <_|Nix|_> uGoMobi: ... but if you can solve that with pseudoclasses ...
[14:57:36] <uGoMobi> _|Nix|_: yes we can
[14:57:51] <uGoMobi> depends a bit on what we do with IE8
[14:58:07] <_|Nix|_> uGoMobi: Well, presumably the number of actual buttons relative to links is very small, so we can probably keep form buttons as widgets.
[14:58:13] <uGoMobi> don't think it supports them but not sure
[14:58:38] <_|Nix|_> uGoMobi: Dude, if it doesn't support pseudoclasses we're in deep trouble ...
[14:58:39] <uGoMobi> _|Nix|_: yes, that's right
[14:59:08] <uGoMobi> _|Nix|_: it supports pseudo classes but not all
[14:59:15] <_|Nix|_> uGoMobi: Aaah, OK.
[14:59:26] <arschmitz> no disabled checked etc
[14:59:40] <uGoMobi> :enabled :disabled and :checked were added in CSS3
[15:00:01] <_|Nix|_> uGoMobi: THen we can't remove the toggleClass out of checkboxradio either.
[15:00:10] <arschmitz> yeah ie8 supports all css2 pseudo selectors
[15:00:14] <uGoMobi> _|Nix|_: was just thinking about that
[15:00:17] <uGoMobi> pfff
[15:00:30] <_|Nix|_> uGoMobi: Degrading, isn't it?
[15:00:38] <uGoMobi> +1
[15:00:58] <uGoMobi> I am favor of a good looking C-grade
[15:01:10] <arschmitz> -1000 on c grade ie8
[15:01:30] <uGoMobi> yeah yeah market share
[15:01:33] <arschmitz> ie8 works fine with 90% of js so removing all js is bad idea
[15:01:59] <uGoMobi> 10% can cause a lot of trouble ;)
[15:02:06] <_|Nix|_> ... and here we are, once more embarking on OldIE special-casing ...
[15:02:14] <arschmitz> yeah im no fan of ie8 but i think c grade is going to far
[15:02:39] <uGoMobi> new... IE-grade
[15:02:45] <_|Nix|_> :)
[15:02:52] <_|Nix|_> That would be awesome!
[15:02:56] <arschmitz> yeah im fine with not supporting everything
[15:03:01] <uGoMobi> random support
[15:03:10] <_|Nix|_> We could threaten browser makers: "Fix this, or we'll relegate you to IE-grade".
[15:03:11] <arschmitz> but i think going full no JS c grade is going too far
[15:03:25] <_|Nix|_> No browser wants to be called IE :)
[15:03:31] <arschmitz> ha ha
[15:03:35] <uGoMobi> arschmitz: I agree we should keep trying to supporting it
[15:03:49] <arschmitz> i feel like we need another grade
[15:03:50] <_|Nix|_> ... just not trying too hard ...
[15:04:53] <uGoMobi> BTW - we switched to core 2.0 didn't we?
[15:05:02] <uGoMobi> that doesn't support IE 7/8
[15:05:14] <arschmitz> did we i thought we were 1.9 
[15:05:31] <uGoMobi> I saw travis testing against 2.0
[15:05:45] <uGoMobi> and I think toddmparker___ asked gseguin|away to update
[15:05:57] <arschmitz> yeah was done 5 days ago
[15:06:27] <_|Nix|_> uGoMobi: If we won't have $.fn.buttonMarkup.defaults anymore, we need some place where we store the default classes for a button. Right now, if you don't specify anything in buttonMarkup and no data-* options are set, then buttonMarkup will use defaults, and you will get ui-corner-all if $.fn.buttonMarkup.defaults.corners is set to true.
[15:06:56] <_|Nix|_> uGoMobi: So, we need a place where we store things like $.mobile.defaultButtonClasses = "ui-corner-all ui-shadow ui-mini";
[15:07:10] <_|Nix|_> uGoMobi: Where ui-mini is an example of an override.
[15:07:37] <_|Nix|_> uGoMobi: So, in our code, we can .addClass( "ui-btn " + $.mobile.defaultButtonClasses + ... );
[15:07:56] <_|Nix|_> uGoMobi: I find myself hard-coding ui-corner-all and ui-shadow in my code.
[15:09:01] <uGoMobi> _|Nix|_: what is different from how we do that on master now
[15:09:02] <_|Nix|_> uGoMobi: ... and users can overwrite that variable and remove things like ui-shadow and even add their own classes.
[15:09:26] <_|Nix|_> uGoMobi: We will no longer have $.fn.buttonMarkup.defaults ...
[15:09:33] <_|Nix|_> uGoMobi: ... if we deprecate buttonMarkup.
[15:09:49] <_|Nix|_> uGoMobi: So we need to store the equivalent of $.fn.buttonMarkup.defaults somewhere.
[15:10:17] <uGoMobi> _|Nix|_: but if we keep it for link buttons we can keep $.fn.buttonMarkup.defaults as well, right?
[15:10:42] <_|Nix|_> uGoMobi: I was suggesting that we only keep the enhancer for link buttons, not the plugin.
[15:10:45] <toddmparker> hey all, just catching back up. long meeting today
[15:10:54] <uGoMobi> hey toddmparker 
[15:10:58] <toddmparker> hey!
[15:11:11] <_|Nix|_> uGoMobi: So, only $.mobile._enhancer.add( "mobile.buttonmarkup", function() { /* this is the enhancer */ } );
[15:11:23] <uGoMobi> _|Nix|_: gotcha
[15:11:26] <toddmparker> so for 1.4, does it seem to make sense to keep button markup, but just have it do a whole lot less?
[15:11:43] <toddmparker> and offer the ability to say "i already wrote the markup, no need to enhance"
[15:11:47] <_|Nix|_> toddmparker: We keep it because it's part of the API, but we deprecate it and we do not use it.
[15:12:06] <toddmparker> makes sense
[15:12:14] <uGoMobi> toddmparker: yeah, we gonna keep it for link buttons
[15:12:31] <toddmparker> suppose we need to deprecate the data-shadow, data-corner options in 1.4 too. 
[15:12:33] <uGoMobi> but just to add classes to thos
[15:12:40] <toddmparker> not just tear 'em out
[15:12:50] <_|Nix|_> toddmparker: ... and of course we replace all the "set data-corners='true' if you want corners" in our documentation with "add class 'ui-corner-all' if you want corners".
[15:12:58] <toddmparker> right-o
[15:13:10] <uGoMobi> toddmparker: if you don't add data-role="button" to the link you can add classes in the markup and have same result
[15:13:17] <toddmparker> but if people use those options in 1.4,  we add the classes for them
[15:13:24] <toddmparker> uGoMobi: perfect
[15:13:27] <uGoMobi> toddmparker: yes
[15:13:43] <_|Nix|_> toddmparker: I guess yeah ... we deprecate the options along with the jQuery plugin.
[15:13:44] <toddmparker> i'm really excited about all these changes
[15:13:50] <uGoMobi> and we need it to auto enhance links in toolbars as buttons
[15:13:55] <toddmparker> bet those pages are already a zillion times lighter/faster
[15:13:58] <_|Nix|_> toddmparker: However, those options are still good for genuine buttons, because those remain widgets.
[15:14:11] <toddmparker> right
[15:14:46] <toddmparker> since we need to wrap an input for button styling, what's the plan there
[15:15:04] <_|Nix|_> Clarification: We do not need $.fn.buttonMarkup for anything. The only thing out of jquery.mobile.buttonMarkup that we do need is the enhancer. That is, the function that used to be given to pagecreate and that is now given to $.mobile._enhancer.add().
[15:15:05] <toddmparker> do we tell people to write their markup with the wrapper in place with classes
[15:15:29] <_|Nix|_> toddmparker: Which wrapper?
[15:15:38] <toddmparker> enhancer = the markup decoration
[15:15:43] <_|Nix|_> toddmparker: No.
[15:15:48] <uGoMobi> _|Nix|_: the wrapper for checkbox, input buttons, etc
[15:15:58] <toddmparker> ^ that too
[15:16:06] <uGoMobi> select probably needs the wrapper too
[15:16:10] <_|Nix|_> toddmparker: enhancer is the function which would call buttonMarkup before, but which will simply add classes now.
[15:16:30] <_|Nix|_> uGoMobi: Those remain widgets, so things are changed via options.
[15:16:40] <toddmparker> think we should advocate writing a bit more markup, but leave the leaner markup with js-based decoration for 1.4 (and maybe beyond if demand exists)
[15:17:18] <uGoMobi> _|Nix|_: but we discussed adding an option to not let the framework wrap the element and add classes but do that yourself
[15:17:26] <_|Nix|_> toddmparker: The problem with allowing both is recognizing that something has already been enhanced by the author.
[15:17:32] <toddmparker> right, that is important
[15:18:06] <_|Nix|_> uGoMobi: That's fine, but then how do you create the widget? It's hard to say "Oh look, I already have a wrapper! I'll just use that.".
[15:18:47] <_|Nix|_> uGoMobi: if ( this.element.parent().hasClass( "ui-checkbox" ) ) wrapper = this.element.parent(); ?
[15:19:04] <toddmparker> maybe
[15:19:15] <uGoMobi> _|Nix|_: nah, if we do this, it should be an option
[15:19:32] <uGoMobi> and you have to set it on mobileinit I suppose
[15:19:38] <toddmparker> be nice if the plugin could figure out whether wrapping was needed instead of having to add more attributes, but i dunno
[15:19:44] <_|Nix|_> uGoMobi: If we give the option, we need to handle the case where the option is true, and we need to handle the case where the option is false.
[15:19:55] <uGoMobi> _|Nix|_: yup
[15:20:30] <toddmparker> might be cool to be able to set this globally = "I'll take care of writing the verbose markup"
[15:20:56] <toddmparker> then all our plugins could just run any of that decoration code
[15:21:24] <_|Nix|_> toddmparker: Then we still have a lot of if-statements: if ( verboseMarkup ) wrapper = this.element.parent(); else wrapper = makeNewWrapper();
[15:21:46] <_|Nix|_> toddmparker: That's one of those for every widget that uses a wrapper.
[15:22:15] <_|Nix|_> toddmparker: ... and what if there are mistakes in the markup? How will we handle that gracefully?
[15:22:29] <toddmparker> it would for sure…what is the potential impact there
[15:23:14] <toddmparker> like if someone forgot to add a class or something?
[15:23:15] <_|Nix|_> toddmparker: Need to write that code, test to make sure both paths work, then document the new option in every widget.
[15:23:21] <toddmparker> thing would br busted i suppose
[15:23:28] <_|Nix|_> Yep.
[15:23:31] <uGoMobi> I think I focus on making widgets work with native elements without wrappers for now :)
[15:23:42] <toddmparker> uGoMobi: right
[15:24:14] <toddmparker> there are also a lot of things people probably wouldn't want to add manually like aria attributes/states
[15:24:26] <uGoMobi> yeah true
[15:24:37] <toddmparker> so there's that
[15:25:00] <_|Nix|_> toddmparker: I think we should do this incrementally.
[15:25:05] <_|Nix|_> toddmparker: ... over a few versions.
[15:25:23] <toddmparker> seems like for 1.4, we might want to focus on reducing the need for extra markup but still rely on the plugin to do it?
[15:25:25] <_|Nix|_> toddmparker: ... see what people are willing to write by hand, and then get rid of our way.
[15:26:03] <_|Nix|_> toddmparker: Yeah. If the plugin generates the markup it's guaranteed to be correct, so we have every motivation to generate as little markup as possible.
[15:26:04] <toddmparker> right
[15:26:19] <toddmparker> even tho the new stuff is way cleaner, there are a lot of classes: http://view.jquerymobile.com/next/demos/test/listviews-a/
[15:26:27] <uGoMobi> toddmparker: that's what we doing in next... like listview which doesn't generate any markup at all anymore
[15:26:35] <uGoMobi> same for buttons (except inputs)
[15:26:45] <toddmparker> <li class="ui-li ui-li-has-arrow"><a href="#" class="ui-btn ui-btn-a ui-icon ui-btn-icon-right ui-icon-arrow-r">Banana</a></li>
[15:26:55] <toddmparker> ^^ single simple list item
[15:27:17] <uGoMobi> yes, I know
[15:27:28] <toddmparker> so uGoMobi, would people write all those classes out on each li?
[15:27:29] <uGoMobi> we can probably reduce that a bit
[15:27:47] <uGoMobi> toddmparker: I am first looking at markup
[15:27:51] <toddmparker> or are there ways of flowing classes on the UL into the li's
[15:27:56] <uGoMobi> next step is theme inheritance
[15:28:06] <toddmparker> which might help a lot there
[15:28:15] <uGoMobi> true
[15:28:27] <_|Nix|_> toddmparker: That's not bad ... 
[15:28:41] <toddmparker> but i agree that multiple steps is a good idea.
[15:28:56] <toddmparker> _|Nix|_: what's that?
[15:28:58] <uGoMobi> but have to know what all markup is going to look like before we can work on the theming
[15:29:08] <_|Nix|_> toddmparker: Specifying classes on the UL.
[15:29:13] <toddmparker> uGoMobi: yeah
[15:29:42] <toddmparker> _|Nix|_: sure. but with our current theme classes, we have to add all those classes above on every LI
[15:29:49] <_|Nix|_> toddmparker: I think if we fix our worst performance bottlenecks for 1.4.0 we'll be a long way towards all of these goals.
[15:29:57] <toddmparker> agreed
[15:30:06] <toddmparker> even what uGoMobi has down now is a huge improvement
[15:30:26] <_|Nix|_> toddmparker: Funny - uGoMobi mentioned theme inheritance just now :)
[15:30:33] <toddmparker> i also think we'll know soon what bigger changes we'll want to make and can deprecate them at 1.4
[15:31:03] <_|Nix|_> toddmparker: With that in place, we might be able to avoid having to add the theme class to every element.
[15:31:16] <toddmparker> so if we land in a place now where we're still using js to add some classes and such, at least we're adding a lot less of them
[15:31:36] <toddmparker> _|Nix|_: right
[15:33:29] <toddmparker> since list views are a perf bottleneck, might be good to see how far we can push things here optimization-wise. possibly offer the ability to have the framework add the classes or add 'em yourself here if it turns out you need to add that many classes to each li.
[15:34:00] <toddmparker> i'd may personally prefer to have cleaner markup (UL with a data role) and have js add the classes
[15:34:32] <toddmparker> but if i'm generating the markup with an MVC framework, be cool to just write the classes and be done
[15:34:33] <_|Nix|_> toddmparker: OTOH, if it's a local app rather than a client-server one, you may prefer to add the classes yourself.
[15:34:45] <toddmparker> exactly
[15:35:31] <_|Nix|_> You gotta ask yourself - how often do you deal with a listview that has a fixed number of items vs. one you have to build out of incoming data?
[15:35:35] <toddmparker> since list views can easily have hundreds (or thousands) of items, it seems like a place to test this out. chances are, you don't' have that many form elements
[15:35:50] <uGoMobi> goal is to make everything work with just a few classes on the UL/OL and only classes on the LI when you want to override
[15:36:02] <_|Nix|_> Yep!
[15:36:04] <uGoMobi> at that is already possible
[15:36:06] <toddmparker> _|Nix|_: sorta depends on the situation. in an app, never. in a website, could be frequently
[15:36:29] <uGoMobi> but I don't want to make those changes before the markup of other widgets is done
[15:36:39] <_|Nix|_> toddmparker: Yeah, I guess with a Web site you can produce the listview server-side.
[15:36:41] <toddmparker> uGoMobi: yeah, that is the goal. if we get there then why not just write the classes in yourself and save the cycles
[15:36:53] <toddmparker> _|Nix|_: right
[15:36:58] <_|Nix|_> uGoMobi: Yeah, good plan. Let's get it working first before we start improving.
[15:37:22] <toddmparker> I think it's fair to say uGoMobi has this all under control. i'm going to let him work his magic.
[15:37:46] <uGoMobi> well... I do have a plan :)
[15:38:09] <uGoMobi> sometimes hard to not already make changes you have in mind
[15:38:13] <_|Nix|_> toddmparker: Yeah - he's done an awesome job! I've been poking around in the "next" branch a bit, getting rid of calls to .buttonMarkup(), and the replacement (.addClass()) almost always just works.
[15:38:30] <toddmparker> like you said, there are plenty of widgets that still need to be patched up here, like sliders, collapsibles, etc. best to get everything working again
[15:38:43] <uGoMobi> but I know if I break too much at once that at some point you don't know what you have to fix anymore
[15:38:53] <toddmparker> _|Nix|_: great to have a bunch of people looking at this
[15:38:54] <uGoMobi> true
[15:39:20] <toddmparker> uGoMobi: exactly
[15:44:18] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06next: 02http://git.io/uYQdqQ
[15:44:18] <jqmobilecommit> 13jquery-mobile/06next 1447af5b2 15Gabriel Schulhof: Table: Columntoggle: Get rid of buttonMarkup.
[15:44:36] <_|Nix|_> OK ... me go bed now ... L8R
[15:45:44] <toddmparker> i'm heading out too, night!
[18:53:02] <archfool> Has anyone ever requested more CSS customization of things like the collapsible text?  Like, white-space: normal;  rather than ellipsis?
[21:04:01] <jqmobilecommit> [13jquery-mobile] 15dueckes opened issue #5930: Listview: Expose method facilitating arbitary list item filtering   02http://git.io/42DAQw
[23:03:44] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 2 new commits to 06next: 02http://git.io/Y_YIfg
[23:03:44] <jqmobilecommit> 13jquery-mobile/06next 14287d379 15Jasper de Groot: Button: Adjustments to selectors ui-btn-left and -right CSS rules. Fixes #5869.
[23:03:44] <jqmobilecommit> 13jquery-mobile/06next 14e003997 15Jasper de Groot: Button: Only margin-right for inline buttons. Fixes #5816.
[23:49:45] <jqcommit> 01[13api.jquerymobile.com01] 15agcolom pushed 1 new commit to 06master: 02http://git.io/S5bVnw
[23:49:46] <jqcommit> 13api.jquerymobile.com/06master 14c85e77d 15Anne-Gaelle Colom: fixed error in panel option description
