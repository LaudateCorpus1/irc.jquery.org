[06:51:27] <rwaldron> scottjehl toddmparker gseguin is anyone available to chime in on a jQuery Core ticket?
[06:51:43] <rwaldron> docs#9941
[06:51:44] <bot-t> [#9941]  (new bug) - http://jqbug.com/9941
[06:52:05] <rwaldron> Regarding a BlackBerry issue
[06:52:08] <rwaldron> thanks!
[07:43:37] <kinblas> _nickel: ping
[08:46:47] <kinblas> _nickel: what was that IRC client you mentioned that you use on MacOSX?
[08:46:55] <_nickel> kinblas: macirssi
[08:46:57] <kinblas> colloquy isn't quite cutting it for me
[08:47:10] * kinblas isn't liking the rssi part
[08:47:21] <_nickel> kinblas: ?
[08:47:30] <kinblas> nevermind was thinking rsi
[08:49:44] <toddparker> hey guys
[08:52:20] <toddparker> Hi gseguin
[08:52:34] <toddparker> so i notced that you switched the collapsibles to be closed by default yesterday right
[08:52:47] <toddparker> the docs still say they are open by default:
[08:52:48] <toddparker> https://github.com/jquery/jquery-mobile/issues/2412
[08:52:49] <socialhapy> ★ Issue #2412 on jquery-mobile, reported by twomz (15m, 43s ago): Collapsibles in Beta 3 default to collapsed
[08:54:19] <kinblas> toddparker: just curious, why did jeresig have to put 2 spaces between the @rel and @href attributes of a link?
[08:56:10] <rwaldron> toddparker kinblas either of you have a sec?
[08:56:30] <kinblas> rwaldron: sure
[08:56:38] <rwaldron> I posted a jQuery Core ticket in here earlier that i was hoping to get someone from this squad to help us with
[08:56:51] <rwaldron> docs#9941
[08:56:52] <bot-t> [#9941]  (new bug) - http://jqbug.com/9941
[08:57:01] <rwaldron>  Regarding a BlackBerry issue
[08:57:34] <_nickel> rwaldron: if I had a bb5 device I would gladly
[08:57:43] <rwaldron> ohh gross
[08:57:51] <rwaldron> that's a B grade isn't it?
[08:57:57] <_nickel> yessir
[08:58:06] <rwaldron> ok, then tell me what you think we should do?
[08:58:15] <rwaldron> it might be a minor patch
[08:58:21] <rwaldron> but is it worth it?
[08:58:31] <_nickel> rwaldron: we normally boil it down to vanilla js and then report the bug to bb
[08:58:42] <_nickel> then find a workaround :(
[08:59:20] <_nickel> toddparker: scottjehl: do you guys have a link for reporting bb bugs?
[08:59:30] <_nickel> not sure if they are providing updates to the bb5 browser though
[08:59:34] * _nickel sighs
[09:00:24] <kinblas> rwaldron: just curious, do we know what exactly is being passed to that underlying function that is causing the browser to barf?
[09:01:30] <_nickel> rwaldron: yah you might ask him for a fiddle/jsbin to verify exactly what he's doing so you know what the args are
[09:01:34] <_nickel> it might be a known issue
[09:01:43] <kinblas> rwaldron: and perhaps what line of that function is triggering the bug
[09:01:54] <_nickel> hence the "boil it down" step
[09:04:20] <rwaldron> there is a fiddle
[09:04:20] <kinblas> kinblas: the more you can boil it down to just simple JS, without jQuery in the picture,  the more likely/motivated they will be to fix it. Tracing through jquery code is no fun for most folks, especially when you're debugging at the interpreter level. :-)
[09:04:37] * kinblas notices he addressed himself instead of rwaldron in his last msg
[09:05:03] <rwaldron> lame
[09:05:06] <rwaldron> and weird
[09:05:17] <bjohn465_> Has anyone else noticed this in Chrome with jQM 1.0b3? http://jsbin.com/abuwox/2
[09:06:14] <rwaldron> boils down to: document.removeEventListener( orig, handler, true ); if the `handler` is undefine
[09:06:14] <_nickel> bjohn465_: can you log an issue at github and include the jsbin?
[09:06:17] <rwaldron> undefined*
[09:06:55] <rwaldron> i guess what I'm wondering is, in your experience, is there enough market share of BB5 devices for Core to bother fixing this?
[09:07:01] <bjohn465_> I can, I just wanted to run it by to see if anyone else has noticed it.
[09:07:07] <rwaldron> or is it going the way of the dodo/buffalo?
[09:07:32] <_nickel> rwaldron: I think there are quite a few bb5 devices but I'm not sure if they are being upgraded to bb6
[09:07:36] <rwaldron> ok
[09:07:38] <_nickel> I don't think its ota update
[09:07:52] <_nickel> so that means they'll stay bb5 for a long time too
[09:08:02] * _nickel has updated his wifes phone to bb6
[09:08:08] <rwaldron> it's as simple as conditional removal, so i think we'll deal with it
[09:08:09] <rwaldron> ugh.
[09:08:13] <rwaldron> thanks!
[09:09:42] <kinblas> bjohn465_: that's the first I've seen of that.
[09:12:07] <_nickel> bjohn465_: same
[09:12:20] <_nickel> bjohn465_: same here*
[09:12:59] <bjohn465_> _nickel: I'm writing up an issue right now. I'll let you know the issue number when it's done.
[09:13:24] <_nickel> thanks
[09:16:02] <kinblas> rwaldron: Looking at the implementation in jQuery, it looks like they never check the handler for undefined, before passing it to the native addEventListener mehtod, so yeah, would think they should/would fix it in jQuery.
[09:16:46] <rwaldron> yeah, we're on it now
[09:16:47] <rwaldron> :)
[09:16:49] <rwaldron> thanks guys
[09:16:57] <_nickel> rwaldron: glad to help :D
[09:18:43] <bjohn465_> Looged issue 2413 (https://github.com/jquery/jquery-mobile/issues/2413) for that Chrome issue
[09:18:44] <socialhapy> ★ Issue #2413 on jquery-mobile, reported by bjohn465 (1m, 13s ago): Non-enhanced page when going back in Chrome
[09:19:18] <bjohn465_> Logged, rather
[09:19:34] <kinblas> bjohn465_: thanks!
[09:20:06] <kinblas> _nickel: do you think bjohn465_'s bug is related to replacestate?
[09:20:26] <_nickel> kinblas: I didn't take a very close look but it might be
[09:20:47] <_nickel> bjohn465_: one thing you might do is disable pushState
[09:20:53] <_nickel> and see if you still have the issue
[09:21:02] <_nickel> $.mobile.pushStateEnabled = false;
[09:21:15] <_nickel> anytime before document ready
[09:23:10] <bjohn465_> _nickel: Can it be done on mobileinit?
[09:23:27] <_nickel> bjohn465_: yah or just in a script tag in head too
[09:23:28] <_nickel> doesn't matter
[09:26:37] <bjohn465_> Looks like disabling pushState (replaceState) makes the issue go away. http://jsbin.com/abuwox/3
[09:27:04] <_nickel> bjohn465_: thats important info
[09:27:07] <_nickel> thanks!
[09:28:08] <gseguin>  hi toddparker
[09:28:58] <gseguin> yeah switching to collapsed by default fixed the data-collapsed="false" not working but
[09:29:06] <gseguin> but = bug
[09:29:25] <gseguin> sorry I missed the doc
[09:30:26] <gseguin> toddparker: Which one should it be, then?
[09:50:23] <kinblas> toddparker: ping
[09:50:48] <bjohn465_> What are my chances of getting issue 2413 reopened?
[09:51:01] <kinblas> _nickel: ugh yet another reason to disable on chrome eh?
[09:52:01] <bjohn465_> I noticed the issue happening on Opera 12 as well
[09:52:46] <_nickel> kinblas: hmm
[09:53:03] <_nickel> I'm confused is chrome not sending the header properly?
[09:53:31] <_nickel> bjohn465_: kinblas: ^
[09:54:30] <kinblas> _nickel: you meant the location?
[09:54:45] <kinblas> _nickel: the location is changing properly, and so is the content
[09:54:47] <_nickel> kinblas: scott and bjohn465_ updated the issue have you read their comments?
[09:55:09] <kinblas> _nickel: not yet
[09:55:27] <bjohn465_> _nickel: It looks like when the back button is pressed on the page loaded using data-ajax="false", Chrome loads the previous page from the cache. The "previous page" in this case is just the div[data-role="page].
[09:56:32] <_nickel> bjohn465_: I'll be happy to take a further look but it appears that scott has a better grasp on the issue so far
[09:56:41] <_nickel> just need to finish up some testing
[09:56:47] <_nickel> on an unrelated issue
[09:57:15] <kinblas> _nickel: scottjehl: but why does the location make a difference? the pages that are loaded from the server are exactly the same in the pushstate/non-pushstate case aren't they?
[09:58:01] <kinblas> that is ... we are loading the exact same URLs to get the HTML page markup in both cases
[09:58:19] <kinblas> so I'm not sure what the X_Requested-With has to do with things.
[09:58:44] <_nickel> kinblas: it appears the bjohn465_ isn't sending the same markup in both cases
[09:59:02] <_nickel> for ajax he only loads the page div and otherwise the whole document
[09:59:04] <_nickel> bjohn465_: correct?
[09:59:11] <bjohn465_> Correct
[09:59:43] <kinblas> _nickel: right, but in both cases (pushstate/non-pushstate) we are getting the pages exactly the same way
[09:59:53] <_nickel> right
[10:00:39] * kinblas wonders if kinblas is confused, or if he is confusing others
[10:01:20] <bjohn465_> On other browsers, when the user goes back from a non-AJAX page (external, data-ajax="false", etc.), it loads the DOM with jQuery Mobile and everything from cache. In Chrome and Opera 12, when going back, only the page div is restored from cache, without jQuery Mobile.
[10:02:16] <kinblas> _nickel: bjohn465_: aha ... in other browsers they actually cache the document DOM and environment
[10:02:34] <bjohn465_> kinblas: So it seems
[10:02:53] <_nickel> kinblas: ugh
[10:03:05] <kinblas> so it seems chrome is only caching the URL for the previous page and reloading the markup
[10:03:27] <kinblas> which is strange ...
[10:03:57] <kinblas> oh one thing to check is to turn off domCache to see if it is actaully reloading that fragment from the cache, or if the original DOM is still in tact
[10:05:58] <kinblas> _nickel: ah, confirmed
[10:06:24] <kinblas> it's not caching the previous document DOM, it does a fresh reload, and since the last thing in the cache for that 2nd page URL was the frag, it displays that
[10:06:38] <kinblas> it's a bug in their replacestate/pushstate
[10:07:07] <kinblas> the document they should be going back to is the 1st page document, since that was the real previous document
[10:07:39] <bjohn465_> Never mind about the Opera 12 thing. At least for my project it's making another request when going back, so the page is loading with jQuery Mobile. If it were to pull it from the cache like Chrome instead of making another request, though, the story might be different.
[10:08:33] <kinblas> _nickel: we need to reopen 2413
[10:08:43] <kinblas> it's a real issue caused by chrome's buggy implementation
[10:08:53] <kinblas> I'll add comments and re-open
[10:09:35] <bjohn465_> Thanks kinblas
[10:11:04] * kinblas ponders that last statement
[10:13:57] <kinblas> I need to read the pushstate/replacestate spec ... I don't think there are any stipulations that the state of the previous document be preserved versus just reloading the previous page
[10:14:34] <kinblas> which is what I think scottjehl was trying to get at.
[10:17:52] <toddparker> that's really annoying about chrome
[10:18:10] <toddparker> paul_irish - you around?
[10:19:37] <_nickel> kinblas: I'll be interested to see where this was going, I haven't been tracking it well whilst focusing on these tests :(
[10:19:50] <_nickel> bjohn465_: thanks for logging the issue it's an important one to be sure
[10:20:21] <toddparker> yep
[10:20:46] <toddparker> hey guys - Eric Sarrion just asked if any of you were interested in reviewing/editing the book
[10:21:00] <toddparker> if not, that's ok. i just want to give him a Y/N answer
[10:21:03] <_nickel> toddparker: I would absolutely love to,
[10:21:09] <_nickel> just haven't found the time :(
[10:21:22] <_nickel> and its doubtful I will
[10:21:22] <toddparker> understand than
[10:21:24] <toddparker> that
[10:21:40] <toddparker> do you foresee having time int he next 1-2 months?
[10:22:23] <kinblas> _nickel: the mozilla docs seem to hint what I said, that the back button should have restored the initial page 1 even though the replacestate entry said page 2
[10:22:25] <kinblas> https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history
[10:23:06] <_nickel> toddparker: after the 1.0 maybe
[10:25:39] <toddparker> should i put you in touch with him?
[10:27:05] <_nickel> toddparker: let me see if I can use company work time for it first and then I'll get back to you
[10:27:13] <_nickel> toddparker: it seems unlikely I'll be able to do it in my own time
[10:27:17] <_nickel> thanks
[10:27:40] <toddparker> ok
[10:32:07] <kinblas> toddparker: I loaded his pdfs on my ipad for reading ... but haven't had the time lately
[10:32:16] <kinblas> I'll try to do some reading this weekend
[10:32:44] <kinblas> toddparker: the one thing that struck me as odd reading his first chapter was that he starts off my injecting the controls in question, rather than having them in the markup.
[10:32:55] <kinblas> s/my/by
[10:33:36] <kinblas> seemed odd, but then again, the first chapters I saw/got where chapters 9 [or was it 19] so I don't know if there's a reason he does that
[10:34:07] <gseguin> toddparker: I may have some time to review when my baby comes as I will be taking a few days out of work
[10:34:49] <toddparker> HA!
[10:34:55] <toddparker> you're dreamin
[10:35:01] <gseguin> :)
[10:35:11] <toddparker> when's the big day?
[10:35:19] <gseguin> Oct 7th
[10:35:38] <kinblas> that's comin' up quick
[10:35:48] <gseguin> it is!
[10:35:59] <_nickel> gseguin: amazing man
[10:36:05] <_nickel> congrats again
[10:36:10] <toddparker> wow
[10:36:10] <_nickel> gseguin: is this number 2 or 3
[10:36:14] <gseguin> thanks
[10:36:18] <gseguin> #2
[10:36:20] <_nickel> I can't remember from our last conversationi
[10:36:22] <_nickel> brilliant
[10:36:23] <toddparker> it's easier
[10:36:29] <gseguin> yeah?
[10:36:30] <_nickel> toddparker: pfft
[10:36:31] <toddparker> but you're not editing a book then
[10:36:37] <_nickel> hahaha
[10:36:41] <gseguin> that's not what I've heard
[10:36:43] <toddparker> the 9th is super easy
[10:36:48] <toddparker> kidding. i'm done with 2
[10:36:49] <gseguin> lol
[10:37:06] <_nickel> my sampling of anecdotal evidence says that #2 is fussier on average
[10:37:18] <toddparker> the first one, you waste a lot of energy flailing around
[10:37:19] <gseguin> not possible
[10:37:25] <_nickel> gseguin: :(
[10:37:28] <toddparker> you actually know what to do on #2
[10:37:37] <gseguin> toddparker: that's right
[10:37:39] <_nickel> only place to go is up from the last one?
[10:37:42] <toddparker> we had good luck on that
[10:37:54] <_nickel> my daughter is _extremely_ easy
[10:37:59] <_nickel> I'm caching in my chips
[10:38:02] <kinblas> toddparker: _nickel's right, #2 are sometimes harder
[10:38:07] <gseguin> _nickel: how old is she again?
[10:38:08] <kinblas> they learn bad things from the older
[10:38:09] <kinblas> :-)
[10:38:13] <_nickel> gseguin: 3 montsh
[10:38:16] <_nickel> months
[10:38:30] <gseguin> _nickel: yeah it's still quite easy
[10:38:30] <_nickel> I want everyone to note that I spelled "cashing" as "caching"
[10:38:40] <kinblas> _nickel: pushstate spec says
[10:38:55] <gseguin> _nickel: wait until she can walk and unplug your cables
[10:38:56] <gseguin> :)
[10:38:58] <_nickel> kinblas: "you can't cash in your chips until the back button is pressed"
[10:39:04] <_nickel> ?
[10:39:06] <_nickel> jk
[10:39:08] <kinblas> gseguin: lol
[10:39:11] <_nickel> gseguin: arg
[10:39:20] <kinblas> _nickel: Entries that consist of state objects share the same http://dev.w3.org/html5/spec/infrastructure.html#document as the entry for the page that was active when they were added.
[10:40:11] <gseguin> btw toddparker what's the right thing then for collapsibles?
[10:40:32] <toddparker> nerd dad humor
[10:40:47] <gseguin> toddparker: change the doc to match the code or vice versa?
[10:40:49] <toddparker> scott thinks it should be collapsed by default
[10:40:53] <toddparker> and i tend to agree
[10:40:54] <toddparker> why
[10:40:58] <gseguin> same here
[10:41:08] <toddparker> most of the the time, you put stuff in collapsibles to start with then closed
[10:41:14] <gseguin> so I did the right things then
[10:41:18] <toddparker> yes
[10:41:23] <toddparker> i think we just need to update the docs
[10:41:34] <gseguin> I'll update them
[10:41:41] <toddparker> i should have noted that in the release too
[10:41:47] <gseguin> I'm doing some refactoring of that code / css
[10:41:51] <toddparker> as a change to note
[10:41:54] <toddparker> cool
[10:42:13] <toddparker> i was saying to scott that the visual design could be simplified a bit too
[10:42:15] <gseguin> yeah sorry I missed the doc
[10:42:20] <toddparker> ont he header
[10:42:26] <toddparker> and that the body should probably have a bg
[10:42:30] <_nickel> kinblas: so we need to not provide a state object ...
[10:42:32] <toddparker> np gseguin
[10:43:07] <kinblas> _nickel: boy the writing in this spec is very confusing
[10:43:18] <kinblas> _nickel: http://dev.w3.org/html5/spec/history.html
[10:43:43] <kinblas> _nickel: so it does say that they don't prescribe how other documents that are *NOT* the current one are cached
[10:43:46] <_nickel> kinblas: I'll have to take a read
[10:43:58] <gseguin> toddparker: gotta work on Jive things today, I'll try to spend some time on that over the weekend, otherwise next Wed.
[10:43:58] <kinblas> the browsers are free to reload ... but I'm trying to find the verbage that says which document to load
[10:44:38] <kinblas> _nickel: the mozilla guys obviously interpreted it the same way I did which was the original document ... then generate a popstate for the last state for that original document
[10:46:59] <kinblas> _nickel: this section of the spec is key
[10:47:10] <kinblas> read it and let me know how you interpret it
[10:47:12] <kinblas> http://dev.w3.org/html5/spec/history.html#current-entry
[10:48:08] <_nickel> one minute
[10:52:36] <_nickel> kinblas: reading
[10:54:36] <kinblas> _nickel: you may have to scroll up a few paragraphs to get the definition of a state object
[10:54:45] <_nickel> yah
[10:55:38] <_nickel> kinblas: it certainly looks like it should use the same document
[10:55:55] <kinblas> _nickel: where same document == page1 right?
[10:56:01] <_nickel> kinblas: well
[10:56:14] <kinblas> that is it should reload page1 and then fire popstate withe page2 as the url
[10:56:18] <_nickel> kinblas: are you thinking of the state objects as the data we provide or just as the state?
[10:56:37] <kinblas> the state managed by the browser (pushSTATE, replaceSTATE)
[10:56:54] <kinblas> according the spec there are 2 types of things that go in the history
[10:57:00] <kinblas> URLs for documents
[10:57:05] <kinblas> and state objects for documents
[10:57:06] <_nickel> or state
[10:57:09] <_nickel> right
[10:57:25] <kinblas> so what I'm saying is if you go from page3 (new fresh document)
[10:57:30] <kinblas> back in history
[10:57:36] <_nickel> so from your reading using replaceState means that we've prevented it from loading the state from the url
[10:57:50] <kinblas> it should hit a state object, where the document is page1 but the url is page2
[10:58:12] <_nickel> because we replaced the state
[10:58:31] <_nickel> and so it doesn't have teh page2 url as its state
[10:58:32] <kinblas> we replaced the state object for the hash
[10:58:33] <_nickel> I see what you mean
[11:08:00] <kinblas> _nickel: here's the other part to read
[11:08:02] <kinblas> http://dev.w3.org/html5/spec/history.html#history-traversal
[11:13:41] <toddparker> btw - i told Eric that none of us probably has the time to dedicate to the book
[11:14:12] <toddparker> editing the book wou;ld be a lot of work
[11:49:49] <kinblas> test
[11:53:25] <kinblas> _nickel: ping
[11:53:44] <kinblas> so if I'm adding more navigation tests, I have to dup them in both the pushstate and nav_core files?
[12:03:24] <_nickel> kinblas: nope
[12:03:40] <_nickel> kinblas: one minute
[12:03:49] <_nickel> kinblas: bathroom and I'll explain
[12:13:41] <_nickel> kinblas: back
[12:13:59] <_nickel> kinblas: so there's a ghetto redirect with a query param so that the test suite can pick it up
[12:14:12] <_nickel> so all you have to do is make sure the test works for both pushstate and hashchange
[12:14:32] <_nickel> if you don't care about what the url looks like just build your test as normal
[12:14:45] <_nickel> and then visit the tests with and without the query param
[12:14:51] <kinblas> _nickel: hmmm well I just need to verify that the page I want is actually the current page
[12:15:16] <_nickel> kinblas: cool then you don't care
[12:15:26] <kinblas> unfortunately part of the test is loading an external page
[12:15:31] <_nickel> just run the tests as normal then with ?push-state=false
[12:15:35] <kinblas> I'm assuming the test should verify that the external page did load
[12:15:45] <kinblas> then do a back and then verify the page I wanted is the current page
[12:15:47] <_nickel> kinblas: if thats what you're testing
[12:16:13] <_nickel> if you're only testing that the first page is the page you want then ignore the other assertion
[12:16:24] <_nickel> the only reason to have it is for test debugging
[12:17:02] <kinblas> _nickel: I would've thought testing every step of the way was important
[12:17:44] <_nickel>  we've got "loading an external page" tested a million times over
[12:19:02] <kinblas> heh ok, but if I'm going from first-page, to external, back to first-page
[12:19:14] <kinblas> shouldn't I verify that we did indeed leave the first page?
[12:19:25] <kinblas> or is it more of activePage != first-page?
[12:19:44] <kinblas> maybe that's the ticket to make it cross pushstate/non-pushstate
[12:25:26] <kinblas> _nickel: ^^^
[12:27:19] <_nickel> kinblas: if thats important for the scenario you are testing yes
[12:27:28] <_nickel> kinblas: so if the bug is only reproducible in that case
[12:27:34] <_nickel> sorry should have been clear on that
[12:27:43] <kinblas> yeah only reproducible when going external to internal
[12:59:25] <kinblas> toddparker: We need a 1.0 milestone in the issues tracker
[13:57:14] <toddparker> we do. kinblas - should i add 1.0
[13:57:18] <toddparker> q.1 rc1
[13:57:21] <toddparker> 1.0 rc1
[13:57:46] <toddparker> hey kinblas _nickel gseguin - want to present at BlackBerry DevCon?
[13:57:47] <toddparker> SF Oct 18-20
[14:04:41] <kinblas> man sometimes getting details on specific bugs is like pulling teeth
[14:05:17] <kinblas> toddparker: where is BB conf?
[14:18:29] <kinblas> gseguin: btw, I'm not sure you caught all the back and forth yesterday about the dynamic app samples we added, but this sample is exactly your (Jive's) setup, so you guys will have to follow that sample to avoid modifying the jqm source.
[14:18:31] <kinblas> http://jquerymobile.com/test/docs/pages/page-dynamic.html
[14:19:42] <gseguin> kinbla: Yeah I saw the sample
[14:19:45] <gseguin> Thanks a lot
[14:20:25] <gseguin> I'm pushing for update but I think we may wait until 1.0
[14:20:40] <kinblas> gseguin: yeah understandable ... only want to do it once
[14:21:02] <gseguin> we're at b1 right now and the last update was pretty costly
[14:21:04] <kinblas> gseguin: besides there was one change I need to put in ... you guys disable the check for switch to same page
[14:21:25] <kinblas> I can make that a configuration parameter on changePage, and you can toggle the default
[14:21:37] <gseguin> great!
[14:22:02] <gseguin> thanks for the heads up
[14:22:08] <kinblas> np
[14:22:21] <kinblas> I meant to ping you earlier
[14:22:30] <kinblas> but got caught up in the last minute stuff
[14:22:46] <gseguin> yeah I witnessed :)
[14:24:30] <gseguin> suggestion for the docs
[14:24:43] <kinblas> uh huh
[14:24:46] <gseguin> we should use a prettyPrint library for the JS samples
[14:25:00] <kinblas> yeah it looks so plain-jane
[14:25:20] <kinblas> need to ask todd/eddie if there's a wp plugin
[14:25:33] <kinblas> whoops not the blog
[14:25:37] <gseguin> it doesn't need to be a wp plugin
[14:25:42] <gseguin> yeah
[14:27:07] <gseguin> http://google-code-prettify.googlecode.com/svn/trunk/README.html would work
[14:27:26] <gseguin> I like the ones that add the "copy" button
[14:31:01] <toddparker> kinblas: BB conf is in SF
[14:31:05] <toddparker> swanky
[14:31:24] <gseguin> when ?
[14:32:23] <toddparker> SF Oct 18-20
[14:32:28] <toddparker> they are looking for a presenter
[14:32:34] <toddparker> you guys could tag team too i bet
[14:32:51] <kinblas> toddparker: what is the session, what are they expecting?
[14:33:15] <toddparker> jQM intro i bet
[14:33:27] <toddparker> you could use our keynote preso
[14:33:35] <toddparker> from jQ conf in boston
[14:34:44] <kinblas> toddparker: when do they need an answer?
[14:45:48] <toddparker> NOW
[14:45:57] <toddparker> monday
[14:46:03] <toddparker> or whatever
[15:16:25] <kinblas> _nickel: ping
[15:16:44] <kinblas> _nickel: was just curious if you've ever seen qunit say this: Expected 1 assertions, but 6 were run
[15:30:56] <gseguin> kinblas: are you wondering why that happens or where the expect is set?
[15:31:22] <kinblas> actually both
[15:31:31] <kinblas> my test has 6 ok() tests
[15:31:42] <kinblas> they all were passing
[15:31:44] <gseguin> the interface of asyncTest is
[15:31:51] <kinblas> except this last error is turning things red
[15:31:56] <kinblas> and I'm not sure where it's coming from
[15:32:11] <gseguin> asyncTest( name, number_of_expected_assertions, func )
[15:32:15] <_nickel> kinblas: yes you can set expectations on how many assertions will run
[15:32:25] <_nickel> its important for async tests
[15:32:43] <kinblas> duh
[15:32:44] <_nickel> on some level its important for all tests since qunit will pass a test that runs 0 assertions
[15:32:49] <kinblas> that'll teach me to copy paste
[15:32:51] <_nickel> :P
[15:32:57] <kinblas> so the 2nd arg can be either a number or a function
[15:33:02] <gseguin> yup
[15:33:05] <_nickel> you can also do expect( x )
[15:33:07] <kinblas> argh
[15:33:10] <kinblas> ok
[15:33:14] <_nickel> kinblas: gseguin  ^
[15:33:46] <kinblas> _nickel: yeah I've seen you use that
[15:33:51] <gseguin> yep you can also use expect()
[17:39:35] <_nickel> kinblas: hey
[17:39:40] <_nickel> kinblas: sorry had to make my way home from the office early
[17:39:51] <_nickel> you can just turn it off manually and include the tests
[17:39:52] <kinblas> _nickel: you get my email?
[17:39:54] <_nickel> yah
[17:40:04] <kinblas> what does that mean?
[17:40:10] <_nickel> thats what I would do to debug
[17:40:23] <_nickel> need to look at what you said about the issue though one sec
[17:40:52] <kinblas> it's wierd, it's like the hashchange doesn't fire on window.back
[17:40:57] <kinblas> window.history.back() I meant
[17:42:03] <kinblas> _nickel: btw, I'm looking into fixing that scroll error in the nav unit tests
[17:42:14] <_nickel> nice
[17:42:35] <kinblas> that particular test needs to be re-worked
[17:43:00] <_nickel> as for this one
[17:44:51] <_nickel> kinblas: have you tried turning off the qunit css that hides the jqm pages and making sure that the pages are changing?
[17:45:02] <_nickel> I know the assumption is that they aren't
[17:45:10] <_nickel> it would be nice to know if its just the hash
[17:45:16] <_nickel> or similar
[17:45:27] <kinblas> well the activePage is changing
[17:45:41] <kinblas> which only happens after all things load and transition
[17:45:55] <_nickel> you could even comment out the last two functions in the sequence and attempt the back button yourself
[17:46:02] <kinblas> it's just the window.history.back() that's not triggering the hashchange
[17:46:10] <_nickel> which browser?
[17:46:14] <kinblas> safari and chrome
[17:46:39] <_nickel> if that was the case I think a lot of our tests would fail but I could be wrong
[17:48:55] <_nickel> kinblas: the event sequence helpers will pass in a boolean value for the first argument to your functions thats true when its called by a timeout
[17:49:01] <_nickel> for debugging with assertions
[17:49:10] <_nickel> side note
[17:49:56] <kinblas> right I have console.log in there
[17:49:59] <kinblas> and it is timing out
[17:52:13] <_nickel> kinblas: and you said the url is in fact changing when loading the external?
[17:53:28] <kinblas> yeah it changes
[17:53:34] <kinblas> it also changes after the back() is called
[17:53:38] <kinblas> but the hashchange never filres
[18:03:49] <_nickel> kinblas: wtf
[18:04:11] <kinblas> ??
[18:06:37] <kinblas> _nickel: it isn't working for you either I take it?
