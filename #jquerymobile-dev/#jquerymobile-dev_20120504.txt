[03:07:10] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 2 new commits to popup-widget: http://git.io/KSC4Jg
[03:07:10] <jqmobilecommit> [jquery-mobile/popup-widget] [popup docs] Syncing with the current state of the widget - Gabriel Schulhof
[03:07:10] <jqmobilecommit> [jquery-mobile/popup-widget] [popup docs] Syncing "Pages and Dialogs" menu - Gabriel Schulhof
[03:32:09] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to popup-widget: http://git.io/28coFA
[03:32:09] <jqmobilecommit> [jquery-mobile/popup-widget] [popup docs] Removed superfluous white space - Gabriel Schulhof
[04:07:41] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to master: http://git.io/S8yhdw
[04:07:41] <jqmobilecommit> [jquery-mobile/master] [navigation and transition] Move transition degradation code from navigation to transition, leaving a noop in place in navigation - Gabriel Schulhof
[06:30:35] <jqmobilecommit> [jquery-mobile] gseguin pushed 2 new commits to master: http://git.io/QgGI8w
[06:30:35] <jqmobilecommit> [jquery-mobile/master] Fixes #4227 - Button+data-iconpos="notext" in listview - Jason Scott
[06:30:35] <jqmobilecommit> [jquery-mobile/master] Merge pull request #4231 from jasondscott/Fixes4227 - Ghislain Seguin
[06:32:55] <jqmobilecommit> [jquery-mobile] gseguin pushed 1 new commit to 1.1-stable: http://git.io/HMRkzg
[06:32:55] <jqmobilecommit> [jquery-mobile/1.1-stable] Merge pull request #4231 from jasondscott/Fixes4227 - Ghislain Seguin
[07:45:08] <jqm-jenkins-bot> Project jqm-master build #1,897: FAILURE in 34 min: http://10.59.19.240:8080/job/jqm-master/1897/
[07:45:09] <jqm-jenkins-bot> jasscott: Fixes #4227 - Button+data-iconpos="notext" in listview
[09:09:59] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/GFICoQ
[09:09:59] <jqmobilecommit> [jquery-mobile/master] fixed spurious reference - John Bender
[09:20:35] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to 1.1-stable: http://git.io/bgICyg
[09:20:35] <jqmobilecommit> [jquery-mobile/1.1-stable] fixed spurious reference - John Bender
[09:23:07] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to 1.1-stable: http://git.io/LKMpHA
[09:23:07] <jqmobilecommit> [jquery-mobile/1.1-stable] attempt to stabilize hover delay test - John Bender
[09:27:40] <johnbender> working on getting the tests passing on both master and the new 1.1-stable build
[09:28:11] <Wilto> Yeoman’s work, sir.
[09:35:38] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/jP-2Vw
[09:35:38] <jqmobilecommit> [jquery-mobile/master] correct fixed toolbar test - John Bender
[09:36:18] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to 1.1-stable: http://git.io/Noa2yA
[09:36:18] <jqmobilecommit> [jquery-mobile/1.1-stable] correct fixed toolbar test - John Bender
[09:40:18] <jqm-jenkins-bot> Project jqm-master build #1,898: STILL FAILING in 30 min: http://10.59.19.240:8080/job/jqm-master/1898/
[09:40:19] <jqm-jenkins-bot> john.m.bender: fixed spurious reference
[10:10:00] <johnbender> I'm disabling notification until I get the test issues sorted out
[10:10:23] <Wilto> Cool; no worries.
[10:10:26] <gseguin> I like me failure emails
[10:11:03] <Wilto> Yeah, I don’t mind ’em.
[10:11:32] <Wilto> Todd, though—man. He just starts screaming and throwing things whenever he sees one. It’s pretty terrifying.
[10:11:55] <toddparker> grrrr
[11:32:30] <johnbender> nice
[11:32:31] <johnbender> build fixed
[11:32:54] <johnbender> running again without notifications to make sure
[11:38:51] <toddparker> thanks johnbender
[11:45:01] <Wilto> toddparker’s incredible rage is quelled once more—but for how long?
[12:02:04] <johnbender> the obvious important part is that we now have a 1.1-stable build which is fairly important :D
[12:38:18] <deAtog> anyone have any ideas why a click event on a header button in the first page won't fire after the first pageinit call?
[12:57:09] <deAtog> I'll see if this issue occurs with all pages in a single file.. if so, I'll post a jsfiddle and a BR
[13:05:26] <_|Nix|_> johnbender: Got a bit of a problem with your latest nav change ... dunno if it's really bad, but worth talking about, because it breaks popup tests that were passing before.
[13:05:59] <_|Nix|_> johnbender: Basically, if you go back and forth between dialogHashKey and clean hash fast enough, the URL doesn't clean up.
[13:06:30] <_|Nix|_> johnbender: So, open, close, open a popup, and the second time around the URL will not be cleaned up.
[13:18:32] <johnbender> _|Nix|_: that will likely always be the case regardless of what we do since we have to swallow the hashchanges if there's a popstate
[13:18:56] <johnbender> the only thing I did was make that timeout longer
[13:19:05] <_|Nix|_> johnbender: Aha ... OK ...
[13:19:11] <johnbender> _|Nix|_: if you reduce the delay does it fix your problem?
[13:19:26] <johnbender> that will tell the tale
[13:19:28] * _|Nix|_ checking ...
[13:19:42] <johnbender> I would love to go back to a totally deterministic version of that but we simply cant
[13:19:49] <johnbender> android fires hashchange all the time
[13:19:51] <johnbender> :(
[13:19:57] <_|Nix|_> :(
[13:21:25] <_|Nix|_> johnbender: I'm just wondering that maybe there are more cases where you can clear the timeout and start over. Like, when the hashchange indicates that the browser is going to a clean URL that has no hash. Just a naïve thought.
[13:22:32] <_|Nix|_> johnbender: Yep - 100ms did the trick for me.
[13:23:13] <johnbender> _|Nix|_: you're welcome to fiddle in there but keep in mind there are a lot of really silly corner cases
[13:23:30] <johnbender> _|Nix|_: you might just have to find a way to introduce a delay into your tests :(
[13:23:36] <johnbender> which is the pinnacle of lameness
[13:23:37] <_|Nix|_> johnbender: I'd rather adapt to whatever changes you make.
[13:23:46] <johnbender> sorry man
[13:23:53] <johnbender> that delay sucks
[13:24:18] <_|Nix|_> johnbender: Perhaps not in this case, because, after all, the users won't be as fast, and the tests attempt to reproduce some user behaviour anyway.
[13:24:37] <_|Nix|_> johnbender: So, aside from lengthening the test runs, the delay is actually not unrealistic.
[13:25:06] <_|Nix|_> johnbender: The only unfortunate thing is that now there's a race condition that we have introduced into the unit tests /consciously/.
[13:25:34] <johnbender> that's what I meant
[13:25:40] <johnbender> the 200ms is acceptable from a user perspective
[13:25:46] <johnbender> but it makes our tests annoying to maintain
[13:25:58] <_|Nix|_> *sigh* ...
[13:26:08] <johnbender> and we've done our best to abstract over that crap in the test suite
[13:26:10] <johnbender> https://twitter.com/#!/johnbender/status/198508576560517122
[13:26:11] <socialhapy> ★ Tweet from johnbender: Every time I use `setTimeout` I die just a little inside. ★ http://bit.ly/Is2eOC
[13:26:14] <johnbender> _|Nix|_: ^
[13:26:17] <johnbender> ok
[13:26:23] <johnbender> I'm heading to lunch / run errands
[13:26:31] <_|Nix|_> K L8R
[13:26:35] <gseguin> and it also kills a kitten
[13:26:47] <deAtog> the only other option is to poll for hash changes..
[13:27:44] <deAtog> but that just causes issues with popstate..
[13:27:56] <_|Nix|_> ... except setTimeout(0) though, right? That simply ensures that whatever you run will run on the next iteration of the event loop
[13:28:45] <deAtog> _|Nix|_: that was my initial suggestion.. but johnbender says that Android sometimes doesn't have the event queued
[13:30:30] <_|Nix|_> deAtog: *sigh* ... js is too far removed from the core event loop ...
[13:31:53] <deAtog> _|Nix|_ yeah.. no good solution atm to that Android specific issue.. it's fixed in Android 3.0 and newer though..
[13:32:41] <deAtog> it might be worth wild to just drop support for Android 2.x browsers and suggest they use Firefox mobile since it gets regular updates..
[13:34:45] <deAtog> no luck with my click event bug.. seems to only occur with Ajax sites.. *sigh*
[13:35:01] <_|Nix|_> So, ummm ... can we not confine it with a feature detect? Like, run sanely everywhere /except/ those broken droids.
[13:35:58] <toddparker> that might be worth looking into
[13:36:04] <deAtog> you'd have to do device detection.. which is typically considered bad practice.. but it's not my call
[13:36:07] <toddparker> (hey all)
[13:36:29] <_|Nix|_> deAtog: I believe there's already a lot of device detection going on, IINM ...
[13:36:31] <toddparker> we already do light device detection in some ugly cases. this might warrant that.
[13:36:57] <toddparker> not full UA stuff, but we do look for some patterns when things get really busted
[13:37:13] <_|Nix|_> toddparker: +1 from me ...
[13:38:21] <_|Nix|_> toddparker: Currently the popup unit tests are deterministic in the sense that it is assumed that once the popup has fired the "closed" signal, it has removed itself from everywhere, including the hash, and so it's safe to call open() again.
[13:38:45] <deAtog> I wouldn't have a problem with it
[13:38:49] <_|Nix|_> toddparker: However, this timeout hangs like a shadow over the open() call, because, as the open sets the hash, it may or may not get cleaned up.
[13:39:28] <_|Nix|_> toddparker: But it should only be a problem in unit tests, and if you open a popup from another popup.
[13:39:34] <deAtog> I think there are a lot of places where jQM could benefit from device detection.. page tracking being another area..
[13:40:00] <_|Nix|_> toddparker: For example, open the tooltip example, and click on the link that opens the photo. Bam! dirty URL :)
[13:41:09] <_|Nix|_> deAtog: Would it be possible to fire some kind of signal when that timeout is over, indicating that the url cleanup code is back in business?
[13:41:48] <_|Nix|_> deAtog: Oh, and provide a flag to indicate that the url cleanup code is temporarily suspended?
[13:42:49] <_|Nix|_> So, like if ( urlCleanupCodeIsTemporarilySuspended ) { $( window ).one( "thatsignal", function() { continue with things; } );
[13:43:20] <_|Nix|_> ... and then I could make sure that when I do set the hash, it will be handled correctly.
[13:44:39] <deAtog> _|Nix|_: I don't know what the current code for that looks like atm.. but there were a couple of flags being used for that sort of thing if I recall correctly
[13:47:19] <_|Nix|_> deAtog: I'm looking at jquery.mobile.navigation.pushstate.js right now, and it seems to all be contained within that :-S
[13:48:03] <deAtog> yeah.. it's mostly all there.. there's some stuff in jquery.mobile.navigation.js as well
[13:48:23] <deAtog> but yeah all the pushstate stuff is in that file..
[13:49:13] <deAtog> _|Nix|_: right now jQM only uses pushState stuff in response to hash changes..
[13:49:45] <deAtog> sadly, this is a result of bugs with IOS browsers..
[13:50:28] <deAtog> if only pushstate were used on Android.. there'd be no hashchange issue..
[13:51:51] <_|Nix|_> deAtog: It's not a problem for me, as long as the pushstate handler publishes some of what its doing. Then, I can hook into that and time my actions accordingly. If, at some future time the timeouts can be removed, then the pushstate handler will publish deterministically, and my code will also run deterministically.
[13:52:35] <_|Nix|_> deAtog: I'd rather do that than add a timeout on top of the pushstate timeout hoping that my timeout will always happen after its timeout.
[13:56:23] <deAtog> I understand.. However, my point was that this would be a non-issue if page tracking was handled differently.. IE.. the timeout in the pushstate code is there for Android only.. and is due to a known hashchange bug.. if pushstate wasn't layered on top of hashchange for Android.. there would be no issue..
[13:58:10] <deAtog> the only reason pushstate _is_ layered on top of hashchange currently is due to known pushstate bugs in IOS..
[13:59:04] <deAtog> with a bit of device detection.. I think page tracking could be completely deterministic.. but it would take some work..
[14:03:14] <deAtog> in some cases.. neither hashchange nor pushstate are available.. in that case jquery.hashchange.js polls location.hash at set intervals and manually fires a hashchange event
[14:04:36] <deAtog> so there are basically 3 methods that need to be handled: hashchange only, hashchange + pushstate (for broken IOS devices), and pushstate only (for all current browsers)
[14:05:58] <deAtog> anyway.. I'm off for the week.. cya all Monday
[14:06:22] <_|Nix|_> K L8R
[14:18:35] <jqmobilecommit> [jquery-mobile] agcolom pushed 2 new commits to master: http://git.io/xfz2aw
[14:18:35] <jqmobilecommit> [jquery-mobile/master] fixed small typo - Jasper de Groot
[14:18:35] <jqmobilecommit> [jquery-mobile/master] Merge pull request #4289 from uGoMobi/patch-12 - Anne-Gaelle Colom
[14:22:08] <jqmobilecommit> [jquery-mobile] agcolom pushed 1 new commit to 1.1-stable: http://git.io/IZFhtA
[14:22:08] <jqmobilecommit> [jquery-mobile/1.1-stable] Merge pull request #4289 from uGoMobi/patch-12 - Anne-Gaelle Colom
[14:25:13] <agcolom> hi, anyone here?
[14:27:54] <agcolom> Just checking, are we ok to merge PR #4293 (without cherry-picking?)
[14:37:16] <jqmobilecommit> [jquery-mobile] agcolom pushed 2 new commits to master: http://git.io/LbzK_Q
[14:37:16] <jqmobilecommit> [jquery-mobile/master] Added default count bubble swatch info Theming lists page - Jasper de Groot
[14:37:16] <jqmobilecommit> [jquery-mobile/master] Merge pull request #4287 from uGoMobi/patch-11 - Anne-Gaelle Colom
[14:39:32] <jqmobilecommit> [jquery-mobile] agcolom pushed 1 new commit to 1.1-stable: http://git.io/V1ZwFQ
[14:39:32] <jqmobilecommit> [jquery-mobile/1.1-stable] Merge pull request #4287 from uGoMobi/patch-11 - Anne-Gaelle Colom
[14:43:43] <toddparker> agcolom: did you pull in #4293?
[14:43:53] <toddparker> don't see it int he PR queue
[14:44:39] <toddparker> thanks for looking at PRs agcolom - we're getting a ton of 'em
[14:45:19] <agcolom> no not yet I was waiting to check first
[14:46:48] <agcolom> I was thinking it can go in master but should not cherry-picked (if I understand this correctly)
[14:48:14] <agcolom> You're welcome. So would it be right to pull in #4293 but not cherry-pick it?
[14:49:33] <agcolom> toddparker: I have had an idea regarding the popups...
[14:52:03] <toddparker> hmm….link?
[14:52:10] <agcolom> I even have a demo which doesn't really work, but good enough to explain what I mean...
[14:52:31] <toddparker> k
[14:52:39] <toddparker> btw - i don't have stickers for jQM
[14:52:45] <agcolom> here it is: (maybe a starting point for someone to develop) http://jsbin.com/okehir/12/
[14:52:47] <toddparker> long story
[14:52:50] <agcolom> click on slide
[14:53:26] <agcolom> (Slides) ignore Slides2
[14:53:43] <agcolom> the problem is the div doesn't get repositioned after the 2nd click!
[14:54:22] <toddparker> so i can page through the slides
[14:54:22] <agcolom> but if you change the div positioning manually in Firebug, it works...
[14:54:29] <toddparker> on chrome anyway
[14:54:39] <agcolom> you can???
[14:54:52] <agcolom> I can only go through 2 on FF12
[14:54:53] <toddparker> what are the steps to reproduce?
[14:55:06] <agcolom> reproduce the bug?
[14:55:26] <toddparker> yeah
[14:55:58] <toddparker> sorry, start over - what is that jsbin about?
[14:56:08] <agcolom> click on the Slides button, then click on the right arrow image. you get hello2
[14:56:19] <toddparker> yep
[14:56:38] <agcolom> then you click again but you don't get the hello3
[14:56:44] <toddparker> i see now that going back to one or forward to 3 doesn't work
[14:56:47] <toddparker> right
[14:57:03] <agcolom> And it doesn't work either on the iOS simulator...
[14:57:23] <toddparker> hmm
[14:57:34] <agcolom> but I was just thinking it could be a future feature if someone can get that to work?
[14:57:39] <toddparker> seems like this isn't quite right since it's broken everywhere
[14:57:59] <toddparker> flexslider is a plugin?
[14:58:33] <agcolom> oh yes I agree this is completely wrong it was just to show an idea... in case you want your user to go through more than one page in popups
[14:58:40] <toddparker> wonder if you need to add in that attribute to tell the nav system to leave this widget alone
[14:58:45] <agcolom> yes it's a jquery plugin
[14:59:10] <toddparker> it would be cool to have the popups work in a sequence like this by themselves
[14:59:22] <agcolom> yes exactly
[15:00:33] <agcolom> I'm not suggesting we should use flexslider, but I think it'd be nice to do something like this in jQuery Mobile...
[15:02:05] <agcolom> the way they do it may not at all be the best way for us. but it'd be nice to slide in the next popup in place of the opened one, if you see what I mean...
[15:07:23] <agcolom> ok, bedtime now for me... Goodnight and have a nice weekend :)
[15:07:24] <toddparker> let's talk to gabriel next week re: this
[15:07:27] <toddparker> goodnight
[15:07:32] <toddparker> by agcolom
[15:07:33] <agcolom> sure...
[15:07:42] <agcolom> bye
[15:09:08] <jqmobilecommit> [jquery-mobile] toddparker pushed 2 new commits to master: http://git.io/iDm_Pg
[15:09:08] <jqmobilecommit> [jquery-mobile/master] Docs: Add data-autodividers to listviews attribute reference - Maurice Gottlieb
[15:09:08] <jqmobilecommit> [jquery-mobile/master] Merge pull request #4293 from MauriceG/patch-96 - Todd Parker
[15:09:35] <jqmobilecommit> [jquery-mobile] Wilto pushed 2 new commits to master: http://git.io/5LuOOw
[15:09:35] <jqmobilecommit> [jquery-mobile/master] Fixes #1970 part 1 - The text inside the label of a checkbox/radio can be selected - Jason Scott
[15:09:35] <jqmobilecommit> [jquery-mobile/master] Merge pull request #4229 from jasondscott/userSelect - Mat Marquis
[15:23:50] <johnbender> Wilto: is that a bug or a feature?
[15:23:59] <johnbender> ie, do we need to cherry pick it?
[15:41:26] <jqm-jenkins-bot> Project jqm-1.1-stable build #8: FAILURE in 31 min: http://10.59.19.240:8080/job/jqm-1.1-stable/8/
[15:41:26] <jqm-jenkins-bot> * coloma: Merge pull request #4289 from uGoMobi/patch-12
[15:41:27] <jqm-jenkins-bot> * coloma: Merge pull request #4287 from uGoMobi/patch-11
[15:44:05] <jqm-jenkins-bot> Project jqm-master build #1,904: FAILURE in 33 min: http://10.59.19.240:8080/job/jqm-master/1904/
[15:44:06] <jqm-jenkins-bot> * jasscott: Fixes #1970 part 1 - The text inside the label of a checkbox/radio can be selected
[15:44:06] <jqm-jenkins-bot> * mail: Added default count bubble swatch info Theming lists page
[15:44:07] <jqm-jenkins-bot> * mail: fixed small typo
[15:44:07] <jqm-jenkins-bot> * magoo: Docs: Add data-autodividers to listviews attribute reference
[15:56:45] <jqmobilecommit> [jquery-mobile] johnbender pushed 3 new commits to master: http://git.io/FzX0xQ
[15:56:45] <jqmobilecommit> [jquery-mobile/master] provide tap threshold setting closes #3501 - Takashi Okamoto
[15:56:45] <jqmobilecommit> [jquery-mobile/master] add assertion to make sure the event hasn't fired before the duration - John Bender
[15:56:45] <jqmobilecommit> [jquery-mobile/master] tapholdThreshold docs - John Bender
[16:09:09] <Wilto> johnbender: Ah, yeah, sorry… Teeeechnically a bug, I suppose.
[16:12:35] <johnbender> Wilto: chiiiirry peeeeeeek that sheeeeeeet
[16:12:38] <johnbender> :D
[16:12:49] <johnbender> I handled 1 pr today RAWR
[16:41:24] <jqm-jenkins-bot> Yippie, build fixed!
[16:41:25] <jqm-jenkins-bot> Project jqm-master build #1,905: FIXED in 31 min: http://10.59.19.240:8080/job/jqm-master/1905/
[16:41:25] <jqm-jenkins-bot> * john.m.bender: provide tap threshold setting closes #3501
[16:41:26] <jqm-jenkins-bot> * john.m.bender: add assertion to make sure the event hasn't fired before the duration
[16:41:26] <jqm-jenkins-bot> * john.m.bender: tapholdThreshold docs
