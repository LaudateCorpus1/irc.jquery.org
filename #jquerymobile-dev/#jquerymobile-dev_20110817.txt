[08:59:14] <gseguin> Good morning all
[09:32:30] <_nickel> HALLO!
[09:33:35] <gseguin> ola!
[09:35:35] <kinblas> mornin' y'all
[09:35:54] <kinblas> _nickel: was there a bug in the test engine recently that made it not work on Safari webkit?
[09:36:37] <kinblas> I reworked the transition unit tests to take advantage of pagechange instead of timers
[09:36:42] <kinblas> but this is on the transitions branch
[09:36:52] <kinblas> it works in FF and Chrome, but on Safari I'm getting:
[09:36:54] <kinblas> Died on test #1: Result of expression '$.testHelper' [undefined] is not an object. - { "message": "Result of expression '$.testHelper' [undefined] is not an object.", "line": 41, "sourceId": 2108635392, "sourceURL": "http://localhost/jblas/jqm3/tests/unit/transition/transition_core.js", "expressionBeginOffset": 1031, "expressionCaretOffset": 1043, "expressionEndOffset": 1056, "name":
[09:36:55] <kinblas> "TypeError" }
[09:37:55] <_nickel> ..
[09:37:57] <_nickel> wtf
[09:38:26] <_nickel> kinblas: honestly I have no idea why it wouldn't be defined
[09:39:45] <kinblas> hmm ok
[09:44:57] <kinblas> _nickel: hmmm, ok I see it happening on http://jquerymobile.com/test/tests/unit/navigation/ too
[09:45:19] <kinblas> but the difference is that it happens only on some tests, not all of them like on my localhost tree.
[09:45:20] <_nickel> kinblas: only in safari?
[09:45:26] <kinblas> yeah
[09:45:31] <_nickel> hmm
[09:45:38] <_nickel> well I have my mac setup let me take a look
[09:45:51] * kinblas notes he's on windows but will fire up mac too
[09:49:51] <kinblas> _nickel: hmmm not seeing it on Safari mac
[09:50:04] <kinblas> but I am getting test failures having to do with paths
[09:50:06] * kinblas sighs
[09:50:06] <_nickel> ugh
[09:50:21] <kinblas> that's with /test/ btw
[09:50:25] <kinblas> HEAD
[09:51:14] <_nickel> nothing broken here :(
[09:56:25] <_nickel> installing safari on windows
[09:56:30] <_nickel> kinblas: what version of windows?
[09:56:48] <kinblas> _nickel: win7 sp1
[09:57:04] <kinblas> Safari 5.05
[09:57:07] <kinblas> 5.0.5
[09:57:31] <_nickel> win xp 5.1 seems fine
[09:57:47] <_nickel> kinblas: have you upgraded lion yet?
[09:57:58] <_nickel> totally unrelated
[09:58:11] <_nickel> I am a _HUGE_ fan of no scrollbars
[09:58:27] <_nickel> although Ubuntu does this much better
[09:58:36] <kinblas> no scrollbars?
[09:58:47] <kinblas> you mean touch/drag scrolling the content?
[09:59:08] <_nickel> there's a small blue line where the scrollbar would be to indicate where you are in the content
[09:59:13] <_nickel> just in general
[09:59:19] <_nickel> the scrollbar only appears when scrolling
[09:59:20] <kinblas> ok but its always visible?
[09:59:27] <_nickel> not in os x
[09:59:27] <kinblas> see I don't like that
[09:59:31] <_nickel> yah
[09:59:35] <kinblas> I find myself (on iOS)
[09:59:47] <kinblas> not discovering that certain pieces of content are scrollable
[09:59:53] <kinblas> (in native UI too)
[10:00:05] <kinblas> so I miss content sometimes
[10:00:19] <kinblas> because what is visible ... sometimes looks complete
[10:00:20] <_nickel> you can apparently turn them on
[10:00:29] <_nickel> its nice with webpages because it doesn
[10:00:29] <kinblas> for iOS?
[10:00:32] <_nickel> 't displace content
[10:00:33] <_nickel> no
[10:00:34] <_nickel> os x
[10:00:39] <kinblas> oh heh
[10:00:49] <kinblas> yeah the extra 16+ pixel jog
[10:00:51] <kinblas> sucks
[10:00:58] <kinblas> you see that when we transition our pages
[10:02:06] <kinblas> _nickel: fyi, I reran the tests on mac and they all passed this time ... sigh
[10:02:29] <_nickel> yerp
[10:03:17] <_nickel> kinblas: especially in nav I think there are a lot of tests that expect the default page and sometimes don't get it if another test fails etc
[10:03:25] <_nickel> we need to split those out
[10:03:28] <_nickel> into seperate files
[10:14:37] <_nickel> kinblas: gseguin: toddparker: quick heads up on the pushState testing
[10:14:48] <_nickel> two heads up
[10:15:30] <_nickel> 1. I tried as hard as I could all afternoon yesterday to use the same fixture page and run the tests twice
[10:15:35] <_nickel> no dice
[10:15:54] <_nickel> so we can use the same tests but they will be on seperate pages so we have to dup the fixtures
[10:15:57] * _nickel hates this
[10:16:03] <_nickel> I can revisit it if necessary
[10:16:06] <_nickel> to go along with that
[10:16:16] <_nickel> so we don't "forget" about both sets
[10:16:20] <kinblas> _nickel: same tests but different results?
[10:16:32] <kinblas> _nickel: or same tests, but a config is changed?
[10:16:36] <_nickel> same tests, same results
[10:16:43] <_nickel> one config change
[10:16:49] <_nickel> $.support.pushState
[10:17:27] <_nickel> the second set will only run when pushState is enabled in the browser where the tests are running
[10:17:41] <kinblas> why are the 2 files necessary? Because stuff is set up on initialization?
[10:17:49] <_nickel> 2.
[10:17:55] <kinblas> by stuff I mean the handlers for push state?
[10:17:59] <_nickel> we need to start using the test suite runner
[10:18:38] <_nickel> kinblas: the two files are necessary to run the tests twice correctly
[10:19:01] <_nickel> running the same tests twice in the same page and reporting the results properly proved to be _extremely_ hard with qunit
[10:19:28] <kinblas> _nickel: I guess what I was wondering was this
[10:19:46] <kinblas> if you wrap all the tests in a function with a flag to set the config
[10:20:04] <kinblas> and then call that function twice, 2nd time with flag to turn on or off the push state code
[10:20:09] <kinblas> that would run the tests twice right?
[10:20:15] <kinblas> without duplicating them
[10:20:29] <kinblas> of course setup/teardown would need to be solid
[10:20:58] <kinblas> ... of course all that is contingent on how pushstate is initialized and turned on/off
[10:21:05] <kinblas> not sure if you can do that dynamically or not
[10:21:46] <_nickel> can't
[10:21:48] <_nickel> thats what I did
[10:21:49] <_nickel> I spent
[10:21:54] <_nickel> _all_ afternoon
[10:22:12] <_nickel> its mostly that qunit doesn't load the second set in a nice deterministic fashion
[10:22:20] <_nickel> I had to do some similar hacking for the test runner
[10:23:05] <_nickel> I'd love to avoid the duplication so you're welcome to try if you like
[10:23:15] <_nickel> anyway
[10:23:20] <_nickel> the second one
[10:23:34] <_nickel> is that we need to use the whole test suite to pick up all the tests so we know when things break
[10:23:37] <_nickel> before pushing
[10:23:49] <_nickel> and some of the tests fail intermitently
[10:24:25] <kinblas> we need to fix that last mention :-)
[10:24:31] <_nickel> yes
[10:24:37] <_nickel> thats now on my agenda as a consequence of this
[10:24:42] * gseguin is catching up
[10:24:47] <_nickel> sadly they only fail in the runner
[10:24:50] <_nickel> but they do fail
[10:25:14] <_nickel> kinblas:
[10:25:21] <_nickel> I'm going to push the test changes I made
[10:25:33] <_nickel> so if you want to monkey with getting them to run twice you are welcome too
[10:25:42] <kinblas> _nickel: regarding the deterministic comment above ... not sure what you mean by that if the tests are still running sequentially.
[10:26:00] <kinblas> ... in the function case I mentioned (and you tried already)
[10:26:27] <_nickel> qunit runs the tests as it sees fit and sometimes doesn't catch assertions
[10:26:43] <_nickel> I've found it difficult to debug
[10:26:56] <kinblas> so riddle me this
[10:27:07] <kinblas> the test/asynctest calls only queue the tests
[10:27:14] <kinblas> they aren't actually running them
[10:27:15] <kinblas> right?
[10:27:25] <_nickel> thats how its *supposed* to be
[10:27:36] <kinblas> that is, they aren't running the tests at the moment test/asynctest is called
[10:27:36] <_nickel> if you look at the test runner
[10:27:45] <_nickel> I have to tell qunit to not autostart
[10:27:48] <kinblas> _nickel: ok now I get it
[10:27:50] <_nickel> and then start it myself to run the tests
[10:28:12] <kinblas> _nickel: what qunit needs is a way to turn off the localstorage
[10:28:16] <kinblas> dynamically
[10:28:31] <kinblas> so we can make sure particular tests are run sequentially
[10:28:40] <_nickel> yes and no
[10:28:42] <kinblas> I sometimes go in and comment out the localstorage check
[10:28:55] <_nickel> that could be a crutch
[10:28:56] <kinblas> just so I don't have to create new windows every time I re-run a test
[10:29:31] <_nickel> I still think that the real issue is finding a way to truly reset the browser
[10:29:40] <kinblas> _nickel: a crutch in terms of not catching tests that depend on previous?
[10:29:48] <_nickel> kinblas: yah
[10:29:54] <_nickel> or rather avoiding fixing them
[10:29:57] <kinblas> that's a separate issue :-)
[10:30:04] <_nickel> lol
[10:30:18] <kinblas> I want a way to say
[10:30:18] <_nickel> one that might not get fixed if we make it easy for the tests to pass in a certain order
[10:30:38] <kinblas> I want a way to say run these tests with n number of configurations
[10:30:54] <kinblas> but I don't want to create n number of test files since they will all be identical except for maybe a config setup
[10:31:16] <_nickel> yes thats a seperate issue
[10:31:21] <_nickel> and would be extremely helpful
[10:31:47] <kinblas> actually I wanted to do that with the transitions stuff
[10:31:57] <kinblas> make sure that *all* transitions classes are placed
[10:34:28] <_nickel> kinblas: let me know if you come up with somethign
[10:34:38] <_nickel> maybe it needs a fresh set of eyes
[10:34:54] <_nickel> based on the timeline and how much work its going to be for these tests I'm going to keep rolling
[10:59:04] <_nickel> toddparker: gseguin: kinblas: I'm merging master into the replace state branch I need to the test runner fixes
[10:59:11] <_nickel> additions
[10:59:28] <_nickel> I've got push ups to do so you've got 5 mins to object :D
[10:59:43] <gseguin> :)
[11:00:06] <gseguin> no objection here
[11:09:26] <_nickel> merge pushed
[11:24:02] <gseguin> toddmparker, toddmparker, todd_, todd: ping
[11:24:19] * gseguin thinks I should have a macro for this
[11:33:14] <_nickel> lol
[11:33:16] <_nickel> seriously
[11:33:20] <_nickel> whats up
[11:33:38] <gseguin> had a style question on listviews
[11:33:57] * _nickel looks at toddparker 
[11:34:14] <gseguin> yeah that's what I thought :)
[12:24:53] <kinblas> gseguin: scottjehl: _nickel: any objections over me merging in the current HEAD to the transitions branch? I'll do so in about 15 minutes if no objections ... I need to pick up some of the test infrastructure changes _nickel made
[12:53:00] <_nickel> kinblas: yeah buddy
[12:53:03] <_nickel> go for it
[13:17:51] <gseguin> kinblas: go for it
[13:18:39] <kinblas> gseguin: _nickel: ok thanks
[13:38:34] <kinblas> toddparker: Did you get a chance to test transitions on WebOS, Symbian, and WP7?
[13:41:09] <_nickel> caught a nasty bug in the pushState
[13:41:19] <_nickel> dir relative paths
[13:41:29] <_nickel> #foo/bar/baz.html
[13:59:15] <kinblas> _nickel: did you land your changes to get tests/unit/ working?
[13:59:22] <_nickel> kinblas: nope
[13:59:27] <kinblas> doh, I thought you did?
[13:59:31] <_nickel> kinblas: well
[13:59:38] <_nickel> kinblas: the ones that fix the qunit issues
[13:59:39] <kinblas> what was  I testing the other day where it did work?
[13:59:43] <_nickel> not the intermittent test failures
[13:59:58] <kinblas> well when I run tests/unit/
[14:00:07] <kinblas> I get either "finished in 40ms"
[14:00:12] <_nickel> hmm
[14:00:13] <kinblas> or just the banner of the test
[14:00:22] <kinblas> and that's both in FF and Chrome
[14:00:30] <_nickel> kinblas http://jquerymobile.com/test/tests/unit/
[14:00:40] * kinblas does a diff
[14:00:49] <_nickel> merge issues maybe?
[14:04:44] <kinblas> _nickel: nope
[14:04:56] <kinblas> did manual diff of js and tests
[14:04:56] <_nickel> ?
[14:05:03] <kinblas> and the only difference is the new transitions stuff
[14:05:44] <_nickel> kinblas:  https://github.com/jquery/jquery-mobile/blob/master/tests/unit/runner.js
[14:05:47] <kinblas> there aren't any hardcoded paths or assumnptions that its running at the site root right?
[14:05:58] <_nickel> kinblas: https://github.com/jquery/jquery-mobile/blob/master/tests/unit/runner.js#L76
[14:06:01] <_nickel> nope
[14:07:17] <kinblas> _nickel: do you see it running here?
[14:07:18] <kinblas> http://webpro.host.adobe.com/people/jblas/jqm3/tests/unit/
[14:07:31] <_nickel> nope
[14:09:14] <kinblas> _nickel: nope === you don't see it running properly?
[14:09:22] <_nickel> kinblas: I don't see it run at all
[14:09:24] <_nickel> it just stalls
[14:09:42] <kinblas> _nickel: ok that's what I'm seeing too, both in localhost and when I push it external
[14:09:52] <_nickel> there's an error
[14:10:01] <_nickel> ls.php doesn't appear to have been updated
[14:10:20] <_nickel> I changed the json output to be testPages and not directories which is whats being sent
[14:10:23] <_nickel> ie
[14:10:42] <_nickel> { testPages: [ ] } instead of { directories: [] }
[14:11:27] * kinblas compares on github
[14:14:45] <kinblas> _nickel: hmmm, the ls.php files are identical on HEAD and on transitions branch
[14:15:39] <_nickel> not sure at all
[14:15:47] <_nickel> what browser?
[14:16:15] <kinblas> FF5 and Chrome13
[14:16:57] <kinblas> same as Safari 5.1 on Mac
[14:17:12] <_nickel> hmm
[14:17:26] <kinblas> hmmm though it works when I hit the /test/tests/unit on jquerymobile.com
[14:18:08] <_nickel> and it works locally for me
[14:18:17] <_nickel> does it work on master?\
[14:18:26] <_nickel> for you that is
[14:18:58] <kinblas> hmmm
[14:19:00] <kinblas> nope
[14:19:13] <kinblas> is the glob() stuff you added dependent on a particular version of PHP?
[14:19:15] <_nickel> same error?
[14:19:23] <_nickel> I suppose it could be
[14:19:36] <kinblas> I'm not seeing an error
[14:19:43] <kinblas> just nothing appearing except the header
[14:19:53] <_nickel> when I pull up the page in chrome I get an error
[14:20:09] <_nickel> kinblas:Uncaught TypeError: Cannot read property 'testPages' of null
[14:20:24] <_nickel> ls.php doesn't provide results either
[14:20:32] <_nickel> also it shold probably set the content type
[14:20:36] <_nickel> I forgot to do that :(
[14:20:50] <_nickel> I don't think thats the issue but it could be I suppose
[14:20:59] * _nickel doesn't think thats likely
[14:21:05] <kinblas> oh cannot read property 'testPages'
[14:21:21] <kinblas> is that the error you're talking about?
[14:26:33] <kinblas> _nickel: ok I see what it is
[14:26:38] <_nickel> kinblas: ?
[14:26:39] <kinblas> if you call ls.php directly
[14:26:42] <kinblas> I get
[14:26:44] <kinblas> <b>Fatal error</b>:  Call to undefined function json_encode() in <b>W:\www\jblas\jquery-mobile\tests\unit\ls.php</b> on line <b>19</b><br />
[14:26:52] <_nickel> php version then?
[14:27:05] <_nickel> I tried that and I got blank page on your server
[14:27:47] <_nickel> kinblas: I'd be happy to set you up with vagrant :D
[14:28:13] <kinblas> which server webpro?
[14:28:26] <kinblas> that's IT provisioned
[14:29:46] <kinblas> _nickel: ok when I do the same thing on webpro, I get blank page, but it's probably configured so it doesn't throw PHP errors
[14:29:53] <kinblas> PHP error pages
[14:30:11] <_nickel> 5.20 :(
[14:30:19] <_nickel> I read that as a 4 I think
[14:30:21] <_nickel> ugh
[14:33:38] <kinblas> I think we're running 5.1
[14:34:17] <kinblas> _nickel: so can we just manually build the JSON and echo it out?
[14:41:16] <_nickel> yes
[14:41:34] <_nickel> you might just be able to echo most of it out anyway as an array
[14:41:48] <_nickel> I don't know what php's serialization looks like
[14:44:18] <_nickel> kinblas:   echo "{ 'testPages': '" . implode( "','", $test_pages ) . "' } ";
[14:44:22] <_nickel> that seems to work
[14:44:25] <_nickel> lord knows if thats a good idea
[14:44:54] <_nickel> yah its works fine locally
[14:46:32] <kinblas> yeah that should work
[14:46:43] <kinblas> hopefully it escapes quotes
[14:46:46] <_nickel> lol
[14:46:51] <_nickel> doubtful
[15:00:35] <_nickel> alright
[15:00:49] <_nickel> listview tests are passing for both pushstate and hash
[15:00:59] * _nickel dances a little jig!
[15:02:28] <kinblas> _nickel: Are you going to push your change to MASTER?
[15:02:36] <kinblas> also did you add a content-type for it?
[15:02:41] <_nickel> oh no
[15:02:45] <_nickel> sorry
[15:02:48] <_nickel> I can though
[15:03:06] <kinblas> ok, I pushed the little implode fix and that still isn't enough to get it working
[15:03:08] <kinblas> not sure why though
[15:03:10] <_nickel> as you pointed out that doesn't escape anything
[15:03:19] <kinblas> oh you have to use double quotes for json
[15:03:22] <kinblas> not single quotes
[15:03:27] <_nickel> hmm
[15:04:57] <kinblas> oh and the item you pasted as is above
[15:05:00] <kinblas> is missing the brackets
[15:06:25] <kinblas> _nickel: so the final looks like this:
[15:06:27] <kinblas> echo '{ "testPages":["' . implode( '","', $test_pages ) . '"]} ';
[15:06:38] <_nickel> shweet
[15:06:54] <kinblas> I believe you meant shwing
[15:08:12] <_nickel> lol
[15:25:57] <_nickel> kinblas: do we have a canonical way to test a string for relativity
[15:26:01] <_nickel> kinblas: other than
[15:26:24] <_nickel> specifically directory relative
[15:26:34] <_nickel> other than /^\//
[15:28:01] <kinblas> do you mean site relative?
[15:28:06] <kinblas> or document relative?
[15:28:18] <kinblas> if you use the parser function
[15:28:26] <_nickel> I guess its document relative
[15:28:59] <_nickel> /foo/bar/baz.html -> bang/bak.html  should result in /foo/bar/bang/bak.html
[15:29:35] <kinblas> ok so now I'm confused
[15:29:48] <kinblas> so you want to know if a string you've been handed is document relative?
[15:29:56] <_nickel> correct
[15:30:02] <kinblas> ah ok
[15:30:21] <_nickel> in the example I want to know if bang/bak.html is document relative which it clearly is
[15:31:48] <kinblas> var u = path.parseUrl(url); if (!u.domain && u.pathname && u.pathname.charAt(0) != '/')
[15:33:29] <kinblas> of course appropriately formatted with spaces
[15:33:31] <kinblas> :-)
[15:34:42] <kinblas> actually if you want to also pick up query relative and hashes
[15:35:04] <_nickel> lol
[15:35:19] <kinblas> you wold do (!u.domain && (!u.pathname || u.pathname.charAt(0) != '/'))
[15:36:11] <kinblas> _nickel: not to be a pest .. but are you going to push your implode fix?
[15:36:14] <kinblas> :-)
[15:38:09] <_nickel> kinblas: I thought you said you did already?
[15:38:28] <kinblas> oh no I was testing it out
[15:38:30] <kinblas> :-P
[15:38:32] <_nickel> lol
[15:38:33] <_nickel> alright
[15:38:35] <kinblas> I can check it in if you want
[15:38:37] <_nickel> let me checkout master and push
[15:38:37] <kinblas> no biggie
[15:38:41] <kinblas> ok
[15:39:00] <kinblas> you have t use the version I pasted above
[15:39:04] <kinblas> with quotes and brackets
[15:39:15] <kinblas> looks like you already were using application/json in the scrit
[15:39:17] <kinblas> script
[15:40:34] <_nickel> pushed
[15:40:48] <_nickel> ah!
[15:40:59] <_nickel> I was thinking about it at the time but I didn't think I put it in there
[15:41:05] <_nickel> yay me
[15:43:05] <kinblas> heh
[15:43:12] <kinblas> thanks I just picked up your change
[15:46:09] <_nickel> kinblas: so I'm wrapping your doc rel login into a helper in nav
[15:46:16] <_nickel> *logic
[15:46:18] <_nickel> not login
[15:46:18] <_nickel> ugh
[15:49:49] <_nickel> kinblas: so now that I'm thinking about this I have another case to handle
[15:50:31] <_nickel> kinblas: /foo/bar.html + ?baz=bak = /foo/bar.html?baz=bak
[15:50:35] <_nickel> and
[15:50:52] <_nickel> kinblas: /foo/bar.html + /baz/bak.html = /foo/baz/bak.html
[15:51:05] <_nickel> ugh
[15:51:41] <_nickel> hmm
[15:51:48] <_nickel> that might actually be handled already
[15:51:57] <kinblas> that last one is site relative
[15:52:00] <kinblas> and should replace
[15:52:24] <_nickel> the last one is the one I'm handling now
[15:52:31] <_nickel> need to look
[15:52:34] <kinblas> are you trying to turn a relative what-eva ... into an absolute what-eva
[15:52:35] <_nickel> in fact
[15:52:57] <_nickel> yes
[15:53:06] <kinblas> there's a func for that
[15:53:17] <_nickel> makeAbs?
[15:53:23] <_nickel> err urlabs
[15:53:28] <_nickel> let me try that
[15:53:42] <kinblas> makePathAbsolute (when dealing with paths)
[15:53:54] <kinblas> makeUrlAbsolute (when dealing with urls or parts of urls)
[15:54:17] <kinblas> checkout the unit test
[15:54:21] <kinblas> in navigation
[15:54:27] <kinblas> it runs a whole bunch of scenarios
[16:02:06] <_nickel> kinblas: I owe you a beer
[16:02:40] <_nickel> kinblas: I had planned to go spelunking later to find all that functionality in nav
[16:02:47] <_nickel> kinblas: done
[16:04:28] <kinblas> _nickel: make that a "root" beer
[16:04:38] * kinblas doesn't like the taste of alcohol
[16:04:56] * kinblas makes a square gesture with his fingers
[16:05:13] <_nickel> lol
[16:05:17] <_nickel> rootber
[16:05:19] <_nickel> *beer
[16:25:04] <kinblas> _nickel: so is that a new thing with github?
[16:25:09] <kinblas> if you say @username
[16:25:15] <kinblas> it will cc them on the commit?
[16:25:17] <_nickel> kinblas: did it notify you?
[16:25:20] <kinblas> ya mon
[16:25:22] <_nickel> looking
[16:25:28] <kinblas> that was on a branch right?
[16:25:40] <_nickel> yah
[16:25:45] <kinblas> sweet
[16:28:21] <gseguin> kinblas: I'm looking into https://github.com/jquery/jquery-mobile/issues/1405
[16:29:28] <gseguin> my guess is that when we transition on a page in the current document we don't remove the $.mobile.activePageClass from the *from* page
[16:30:02] <gseguin> is that a reasonable guess or do you think I'm looking in the wrong direction?
[16:30:06] <kinblas> gseguin: I thought that was fixed?
[16:30:14] <gseguin> hmm
[16:30:25] <kinblas> a while back by scott ... there's a timer that used to fire to remove it after a changepage
[16:30:30] * gseguin retrieves the link
[16:31:01] <kinblas> gseguin: it's not the activePageClass ... it's the ui-btn-active class
[16:31:02] <gseguin> http://ghislain.dyndns.biz/jqm/wip/tests/test_1405.html
[16:31:07] <gseguin> yeah sorry
[16:31:13] <gseguin> wrong copy/paste
[16:31:29] <gseguin> click on the link "page2"
[16:31:37] <kinblas> I think adobe blocks dyndns
[16:31:43] <kinblas> I can never retrieve your files htere
[16:31:44] <kinblas> there
[16:31:49] <gseguin> wat?!
[16:31:58] * kinblas tries out of the firewall
[16:32:09] <gseguin> it's on a jsbin too
[16:32:16] * gseguin retrieves the jsbin
[16:32:22] <kinblas> yeah it's blocked
[16:32:27] <kinblas> I can see it on my other machine though
[16:32:33] <gseguin> http://jsbin.com/apelu5
[16:32:38] <kinblas> so what am I doing hee?
[16:32:40] <kinblas> here
[16:32:45] <gseguin> so click "page2"
[16:33:01] <kinblas> uh huh
[16:33:02] <gseguin> then click the "back button" at the bottom
[16:33:07] <gseguin> then page2 again
[16:33:50] <gseguin> is that a feature?
[16:34:13] <kinblas> lol
[16:34:18] <kinblas> not a feature per-se
[16:34:19] <kinblas> :-)
[16:34:26] <gseguin> :)
[16:34:29] <kinblas> hang on let me check something in navigation.js
[16:37:04] <_nickel> heading home from the "office"
[16:37:50] <kinblas> gseguin: this is supposed to be where it happens:
[16:37:51] <kinblas> https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.navigation.js#L958
[16:38:11] <gseguin> yeah, that's what I thought
[16:38:14] <gseguin> but https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.navigation.js#L376
[16:38:26] <gseguin> there is !$activeClickedLink.closest( '.ui-page-active' ).length |
[16:38:40] <gseguin> which prevents it to happen on the previous page
[16:39:02] <gseguin> oh wait
[16:39:04] <gseguin> no
[16:40:14] <gseguin> does that mean that $activeClickedLink is not defined in our case
[16:40:16] <gseguin> ?
[16:40:42] <gseguin> ok it looks like I'm looking at the right part of the code
[16:41:04] <gseguin> I'll come back once I found something
[16:41:46] <kinblas> gseguin: in the debugger, activeClickedLink is null
[16:42:02] <gseguin> yeah that's what I suspected
[16:44:07] <gseguin> oh I know
[16:44:33] <gseguin> kinblas: https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.navigation.js#L1149
[16:44:50] <gseguin> needs to move up before https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.navigation.js#L1091
[16:46:21] <gseguin> bingo!
[16:47:57] <kinblas> oh it's only for back buttons eh?
[16:49:01] <kinblas> gseguin: you just need to call httpCleanup() for the back button case
[16:49:29] <gseguin> really?
[16:49:50] <gseguin> why not moving the $activeClickedLink assignement?
[16:49:58] <gseguin> *assignment
[16:50:46] <gseguin> kinblas: I mean yes, that too should work
[16:52:07] <gseguin> but why one over the other?
[16:58:08] <kinblas> gseguin: it's going to treat it as a hashchange which is async versus processing the changePage() right away
[16:58:27] <kinblas> you can go either way I guess
[16:58:36] <kinblas> but the code below it does httpCleanUp
[16:58:43] <kinblas> as do a couple of other places
[17:05:43] <gseguin> ok
[17:06:02] <gseguin> thanks for looking into it
[17:08:30] <gseguin> kinblas: for some reason it's not working
[17:12:52] <kinblas> gseguin: it seems that the setting of the activeLink class should be done in the vclick where the class is placed on the button right?
[17:13:11] <kinblas> I mean the setting of the activeLink variable
[17:13:44] <gseguin> yeah I think so too
[17:13:57] <gseguin> that seems like a more logical place to do that
[17:14:04] <gseguin> let me try it out
[17:17:48] <gseguin> kinblas: https://gist.github.com/2ddd5bc327c22f515e5b seems to work
[17:17:58] * gseguin runs the unit tests now
[17:25:54] <gseguin> kinblas: tests are green
[17:26:24] * gseguin notes that it doesn't mean he didn't break anything
[17:27:59] <kinblas> gseguin: yeah i anticipated that would work ... it's good to keep the class and the variable in sync
[17:32:14] * kinblas realizes all this time on the transition unit tests actually paid off by finding a bug
[17:32:20] <kinblas> werd
[17:37:51] <gseguin> heh
[19:27:49] <gseguin> miketaylr: ping
[19:27:59] <miketaylr> hiya
[19:28:01] <miketaylr> sup gseguin
[19:28:03] <gseguin> hey
[19:28:13] <gseguin> we're about to land translations
[19:28:22] <miketaylr> rad
[19:28:32] <gseguin> and were wondering if we remembered right
[19:28:46] <gseguin> we're not putting -o prefixes for now, right?
[19:29:00] <miketaylr> yeah, i think the idea was wait until we fix some perf bugs
[19:29:26] <gseguin> yep that's that I thought I remembered but wanted to double check
[19:30:09] * gseguin hopes miketaylr can understand even if half the words are missing ;)
[19:30:22] <miketaylr> haha, that's how i think
[19:31:09] <gseguin> thank you!
