[07:52:34] <toddmparker_> good morning all
[07:52:56] <toddmparker_> looks like justinribeiro was a big help last night on testing
[07:54:29] <toddmparker_> johnbender or kinblas - should I just close this with a "thanks for sharing" or is there a bug here on our side with ports in the URL? https://github.com/jquery/jquery-mobile/issues/3274
[07:54:29] <sven_franck> toddmparker_: moin ~ localized "good morning"
[07:54:30] <socialhapy> ★ Issue #3274 on jquery-mobile, reported by pperliti (2h, 20m ago): Blank page on LG-P970 w/ Android 2.2.2
[07:55:29] <Wilto> Yeah, saw that. I… Don’t think that one is on us at all, but someone correct me otherwise.
[08:20:39] <toddmparker_> Need to download this: http://calendar.perfplanet.com/2011/i-see-http/
[08:20:47] <toddmparker_> New great tool from @stoyanstefanov for inspecting web resources on an iOS device
[08:26:55] <toddmparker_> wish that was in the app store
[08:27:12] <toddmparker_> guess you need to mess around and download it from git and jailbreak
[08:27:47] <Wilto> Man. That’s tempting just the same.
[08:46:40] <toddmparker_> steve jobs will haunt you if you 'break
[08:47:51] <sven_franck> :-)
[08:50:15] <Wilto> Dude should’ve written me an iOS console.
[08:51:15] <Wilto> I think he would understand.
[09:13:23] <gseguin> Good morning
[09:15:32] <Wilto> Sup.
[09:16:16] <Wilto> Hey, so, just to be on the safe side—considering that I am dense, as you all know well—if I’m pushing a quick ARIA fix that shouldn’t wait until 1.1, that’s going to master, yeah?
[09:16:45] <Wilto> Bender’s ears are probably ringing somewhere.
[09:17:20] <gseguin> :)
[09:17:51] <Wilto> kinblas: ^
[09:18:10] <gseguin> I thought you had to create a branch off of master and then rebase it to 1.0-stable ;P
[09:18:54] <Wilto> Oh. Uh. Hm.
[09:19:42] <gseguin> in all seriousness it goes to master and gets cherry-picked into 1.0-stable if you want it to go to 1.0.1
[09:30:12] <toddmparker_> kinblas: did you see this link on adriind rendering that just came in on an issue
[09:30:13] <toddmparker_> https://plus.google.com/105051985738280261832/posts/2FXDCz8x93s
[09:30:17] <toddmparker_> reading now
[09:31:01] <toddmparker_> looks like it's more about the OS, not the browser
[09:32:38] <toddmparker_> relevant:
[09:32:39] <toddmparker_> When people have historically compared web browser scrolling between Android and iOS, most of the differences they are seeing are not due to hardware accelerated drawing. Originally Android went a different route for its web page rendering and made different compromises: the web page is turned in to a display list, which is continually rendered to the screen, instead of using tiles. This has the b
[09:32:39] <toddmparker_> enefit that scrolling and zooming never have artifacts of tiles that haven’t yet been drawn. Its downside is that as the graphics on the web page get more complicated to draw the frame rate goes down. As of Android 3.0, the browser now uses tiles, so it can maintain a consistent frame rate as you scroll or zoom, with the negative of having artifacts when newly needed tiles can’t be rendered qu
[09:32:39] <toddmparker_> ickly enough. The tiles themselves are rendered in software, which I believe is the case for iOS as well. (And this tile-based approach could be used prior to 3.0 without hardware accelerated drawing; as mentioned previously, the Nexus S CPU can easily draw the tiles to the window at 60fps.)
[09:34:06] <toddmparker_> the issue i see on 3.0 is that they use tiles, but they are small - like 200 pixels square
[09:34:21] <toddmparker_> unlike iOS that has screen sized tiles
[09:34:45] <toddmparker_> so when you close a dialog in honeycomb, you see lots of small square tile artifacts
[09:41:53] <jqmobilecommit> [jquery-mobile] Wilto pushed 2 new commits to master: http://git.io/cRrqNw
[09:41:53] <jqmobilecommit> [jquery-mobile/master] Up'd to 1.0.1pre - Ghislain Seguin
[09:41:53] <jqmobilecommit> [jquery-mobile/master] Fixes #3238 — Seems markup structure was changed at some stage, making the ‘aria-hidden=true’ attribute a little over-reaching. Removed. - Mat Marquis
[09:42:07] <Wilto> oh no two why two
[09:42:14] <Wilto> what have i done did i break it
[09:42:32] <gseguin> I didn't do anything, why is my name mentionned ?
[09:42:57] <gseguin> Wilto: it's time for a: DAMN IT SCOTT!
[09:43:07] <Wilto> oh yeah good call DAMMIT SCOTT.
[09:46:08] <gseguin> Wilto: did you push your 1.0-stable to master?
[09:46:48] <Wilto> …master to master.
[09:46:55] <kinblas> Wilto: did I accidentally change the markup structure that caused 3238?
[09:46:55] <Wilto> Did I actually just break something?
[09:47:18] <Wilto> kinblas: No idea, man. Wasn’t worth tracking down—quick fix.
[09:47:22] <gseguin> the version.txt, so BIG DEAL!
[09:47:44] <gseguin> but I'm curious how you did that though
[09:48:11] <kinblas> Wilto: I was afraid I did because I DOM-ified that code, but I thought I mimic'd what it was doing in markup string?
[09:48:42] <johnbender> kinblas: so I did something sneaky though not too sneaky since I'm doing 1.7 compat testing
[09:48:57] <kinblas> johnbender: uh huh?
[09:49:56] <Wilto> kinblas: Eh, who knows. I can’t recall exactly how, but I know the markup is a little different from when that aria-hidden went in.
[09:51:14] <johnbender> kinblas: don't tell toddparker
[09:51:58] <johnbender> I'm puting all the 1.7 bug fixes into master so we have to release 1.1 quickly >:]
[09:52:07] <Wilto> Secrets don’t make friends, johnbender.
[09:52:24] <jqmobilecommit> [jquery-mobile] gseguin pushed 1 new commit to master: http://git.io/wY7mNA
[09:52:24] <jqmobilecommit> [jquery-mobile/master] Revert "Up'd to 1.0.1pre" - Ghislain Seguin
[09:52:28] * johnbender laughs maniacally
[09:53:06] <johnbender> gseguin: how did that end up on master (see above commit) did I do something poor without thinking?
[09:53:34] <gseguin> johnbender: it's SCOTT
[09:54:01] <Wilto> DAMMIT
[09:54:09] <johnbender> but seriously what happened?
[09:54:24] <Wilto> johnbender: Sorry, that was all me.
[09:54:25] <gseguin> I have no idea, Wilto pushed something and that commit was part of it
[09:54:29] <Wilto> Pushed master -> master
[09:54:38] <Wilto> And that was in there.
[09:54:43] <johnbender> did you branch from stable after that commit was in there?
[09:54:54] <Wilto> Nope.
[09:54:56] <johnbender> stable == 1.0-stable
[09:55:02] <Wilto> My bad.
[09:55:18] <johnbender> we should figure out how that happened to make sure nothing weird is going in
[09:56:35] <johnbender> weird it looks like it was just cherry picked on there?
[09:56:51] <Wilto> brb todd’s saying something about a pinkslip
[09:57:05] <Wilto> I am certain I did no cherry picking, for what that’s worth.
[09:57:20] <johnbender> well the history is relatively clear so i'm not too worried about it
[10:02:17] <toddmparker_> kinblas and johnbender - and I going crazy on data-role="dialog"
[10:02:25] <toddmparker_> is see a lot of issues that mention using this
[10:03:09] <toddmparker_> but it's not in the docs
[10:03:10] <toddmparker_> did we ever support this??
[10:03:10] <Wilto> What sneaky 1.7 shenanigans were/are you up to?
[10:03:11] <Wilto> Let me be frank at the outset: I am not opposed to sneaky shenanigans.
[10:03:11] <toddmparker_> johnbender: this recent bug you've been discussing uses it too: https://github.com/jquery/jquery-mobile/issues/1094
[10:03:11] <socialhapy> ★ Issue #1094 on jquery-mobile, reported by zman32 (9m, 4w ago): rel="external" + data-rel="dialog" dialog not styled
[10:03:14] <johnbender> toddmparker_: no
[10:03:23] <johnbender> we never supported it
[10:03:26] <johnbender> it's a feature request
[10:03:26] <toddmparker_> no, we never supported it, right?
[10:03:39] <toddmparker_> man, i need to close a bunch of issues that use this
[10:03:52] <johnbender> Wilto: I'm subverting toddmparker_'s authority by controling where critical commits go
[10:04:02] <Wilto> Is it worth hacking that in there, if issues keep pouring in about it?
[10:04:17] <johnbender> Wilto: it is, and that's why its a feature request :D
[10:04:17] <Wilto> johnbender: Your secret is safe with me.
[10:04:30] <Wilto> Ah, okay, I thought we were closing it out. Don’t mind me.
[10:04:53] <toddmparker_> yeah
[10:05:12] <toddmparker_> i think it's worth making a quick tweak to not end up with a blank page
[10:05:13] <toddmparker_> for now
[10:05:17] <toddmparker_> then add it for 1.1
[10:06:10] <johnbender> toddmparker_: kinblas: do either of you know why there's a 500ms delay on displaying the sticky footers?
[10:06:43] <johnbender> scott is obviously the guy to ask, and I pinged him in the issue but that hasn't gotten me anywhere recently
[10:06:57] <johnbender> I actually have other issues to ask him about should i put them in an email or basecampe post?
[10:07:18] <toddmparker_> i don't know
[10:07:25] <toddmparker_> yeah, make a BC post for him
[10:07:31] <johnbender> shveeet
[10:07:32] <toddmparker_> he will usually answer pretty quickly
[10:17:45] <toddmparker_> i'm commenting and closing issues related to data-role of dialog
[10:19:43] <Wilto> toddmparker_ is the Judge Dredd of issue tracking.
[10:19:51] <toddmparker_> heh
[10:20:11] <Wilto> I just like excuses to make Judge Dredd references, really.
[10:21:03] <kinblas> Not sure if all-you-all saw this already or not but someone shared this android rendering thread on G+ with us in one of the issues: https://plus.google.com/105051985738280261832/posts/2FXDCz8x93s
[10:22:05] <kinblas> toddmparker_: in it, it says that rendering between 3.0 and 4.0 is not much different
[10:23:22] <toddmparker_> yeah kinblas - scroll up, i was ranting about it earlier :)
[10:23:41] <toddmparker_> that seems to jibe with the testing from last night on 4.0
[10:23:45] <Wilto> I want to comment “okay, cool. So like, are you gonna do something about it, or…?”
[10:23:57] <justinribeiro> toddmparker_ kinblas We've been hammering on it this morning, and it's really all over the place
[10:24:06] <toddmparker_> in a nut - we can't do animated transitions w/o horrible blinks in any version of android
[10:24:14] <toddmparker_> and it seems to be getting worse, not better
[10:24:19] <toddmparker_> 2.3 seemed alright
[10:24:31] <johnbender> toddmparker_: when you say "1.7" you mean "1.7.1" eh?
[10:24:36] <toddmparker_> hey justinribeiro - thanks so much for the help!
[10:24:43] <toddmparker_> for jQ core?
[10:24:53] <toddmparker_> johnbender ^^
[10:24:56] <justinribeiro> toddmparker_: not a problem, any time
[10:25:01] <kinblas> toddmparker_: heh as usual, late to the party ... sigh
[10:25:07] <toddmparker_> should say 1.7.x
[10:25:11] <jqm-jenkins-bot> Project jqm-master build #340: SUCCESS in 13 min: http://10.59.19.240:8080/job/jqm-master/340/
[10:25:12] <jqm-jenkins-bot> * mat: Up'd to 1.0.1pre
[10:25:12] <jqm-jenkins-bot> * mat: Fixes #3238 — Seems markup structure was changed at some stage, making the ‘aria-hidden=true’ attribute a little over-reaching. Removed.
[10:25:12] <jqm-jenkins-bot> * ghislain: Revert "Up'd to 1.0.1pre"
[10:25:19] <toddmparker_> west coasters, always 3 hours behind
[10:25:23] <johnbender> toddmparker_: I'm droping 1.7.1 in
[10:25:28] <toddmparker_> great
[10:25:37] <justinribeiro> there is a new feature in 4.0 we've been using today called show screen updates, which will flash the screen as drawing occurs
[10:25:45] <toddmparker_> man, i didn't realize there was so much confusion on data-role="dialog"
[10:25:49] <justinribeiro> you run those animations, and it's just a plain drop
[10:25:53] <toddmparker_> anyway, buttoned up
[10:26:11] <toddmparker_> justinribeiro: "drop" as in no frames?
[10:26:17] <toddmparker_> just a blink into place?
[10:26:33] <kinblas> heh
[10:26:42] <justinribeiro> as the screen draws the animation, the start and end frames simply don't render
[10:27:06] <justinribeiro> the screen flash shows the screen redrawing
[10:27:10] <kinblas> justinribeiro: you actually get the in-between frames?
[10:27:19] <justinribeiro> yes
[10:27:30] <justinribeiro> you can see them better if we length the animation duration
[10:27:40] <justinribeiro> it'll render everthing in between
[10:27:57] <justinribeiro> but those start and end frames draw as white
[10:28:19] <kinblas> gives new meaning to the value "none"
[10:29:13] * kinblas was referring to that -webkit-animation-fill-mode btw
[10:29:39] <kinblas> Wilto: I need to work on my stand-up to get to your level
[10:31:43] <Wilto> kinblas: The trade-off for my snarking ability is that you’re good at, like, jQuery Mobile. I think you win.
[10:32:20] <kinblas> heh
[10:33:26] <toddmparker_> so does this give us any hints?
[10:33:37] <toddmparker_> seems interesting that the start and end are white
[10:33:55] <toddmparker_> maybe the blink is actually just those frames?
[10:34:21] <toddmparker_> odd that the in-between frames are ok
[10:34:28] <toddmparker_> justinribeiro and kinblas ^^
[10:34:42] <justinribeiro> Could be
[10:35:02] <kinblas> toddmparker_: that's what I was joking about with "none" above
[10:35:03] <justinribeiro> We're also seeing random warning about the viewport update not being run on the UI thread in LogCat
[10:35:18] <justinribeiro> Doesn't happen consistently
[10:35:35] <toddmparker_> grrr
[10:35:44] <toddmparker_> well, keep digging justinribeiro
[10:35:49] <toddmparker_> this is very helpful
[10:36:11] <johnbender> toddmparker_: 1.7.1 is in master
[10:36:16] <justinribeiro> Will do.
[10:36:32] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/9XhUng
[10:36:32] <jqmobilecommit> [jquery-mobile/master] update jquery to 1.7.1 Fixes #2965, #3267 - John Bender
[10:38:34] <johnbender> toddmparker_: I've tested it on a couple devices but my winphone and bada are at home
[10:38:40] <johnbender> I'll have to check them tomorrow
[10:38:59] <toddmparker_> so is this in master?
[10:39:01] <toddmparker_> or a branch?
[10:39:03] <toddmparker_> i can test
[10:39:10] <johnbender> toddmparker_: master
[10:39:21] <johnbender> part of my evil plan to "encourage" a faster 1.1 release :D
[10:39:25] <toddmparker_> ya
[10:39:28] <toddmparker_> me too
[10:41:33] <johnbender> in all seriousness though I have no doubt 1.1 will be awesome either way I'm trying to adhear to semver and we are fixing bugs with it's addition
[10:41:56] <johnbender> toddmparker_: Wilto: do you guys know where I can find that submit button bug that 1.7 solved?
[10:42:11] <Wilto> One sec…
[10:42:12] <toddmparker_> hmmm
[10:42:22] <Wilto> I don’t think it appeared in the docs.
[10:42:25] <toddmparker_> think it was assigned to wilto, he knows ot
[10:42:54] <Wilto> You just need to bind to submit, and check it out in IE.
[10:43:18] <johnbender> Wilto: sorry I meant the issue on github
[10:43:24] <johnbender> so I can post there
[10:43:33] <Wilto> Pre 1.7, they were looking for a “click” event on an submit button to fake the “submit” event and now I am rambling for no reason. Please hold!
[10:44:50] <Wilto> https://github.com/jquery/jquery-mobile/issues/2001
[10:44:51] <socialhapy> ★ Issue #2001 on jquery-mobile, reported by jeffholmes (5m, 2w ago): IE7/8 Form Submit Bug
[10:45:17] <toddmparker_> johnbender ^^
[10:45:22] <toddmparker_> kinblas: Q for you
[10:45:29] * kinblas listens
[10:45:49] <toddmparker_> i think i mentioned this, but i think i want to get rid of the hover state on lists
[10:46:05] <toddmparker_> think we had an issue
[10:46:25] <toddmparker_> but the fact that lists flip color as you scroll is bad
[10:46:31] <kinblas> toddmparker_: yeah, but even if you lose that, you'll still get the down-state won't you?
[10:46:32] <toddmparker_> sooo, do you see an issue with that?
[10:46:43] <toddmparker_> dunno
[10:46:58] <toddmparker_> am i seeing a down state?
[10:47:06] <kinblas> toddmparker_: for the record, when you start a scroll, we actually do flip the class so it shouldn't be selected ... the browser just doesn't updtate the image it's scrolling
[10:47:15] <toddmparker_> thought down had a flipped gradient (depressed)
[10:47:20] <toddmparker_> this is just darker = hover
[10:47:24] <toddmparker_> i can double check
[10:47:30] <toddmparker_> right
[10:47:40] <kinblas> sucks that we are making all these concessions
[10:47:52] <toddmparker_> but i think we only did this to make it easier to use on android with the nub
[10:48:09] <toddmparker_> but there is a highlight color that may work better for that
[10:48:15] <kinblas> toddmparker_: yeah that's what sucks
[10:48:23] <kinblas> in devices with an actual cursor, you won't get feedback now
[10:48:32] <toddmparker_> i'd rather not assign a hover at all
[10:48:45] <toddmparker_> but make sure that whatever highlight mechanism android uses works
[10:49:42] <kinblas> toddmparker_: so is that a CSS change? Or are you wanting us to remove the code that places classes in mouseover/mouseout?
[10:51:17] <kinblas> johnbender: regarding your "we've got 1.7 support on Master" comment ... were there any changes to the framework that were necessary? Or just plopping 1.7 in our local jquery.js?
[10:51:30] <johnbender> kinblas: there was one change
[10:51:49] <johnbender> core stopped swallowing the "you can't focus hidden elements" exception from IE
[10:52:06] <johnbender> and we were focusing the heading before the ui-mobile-rendering class was stripped
[10:52:11] <kinblas> ah ok, I saw that fly by
[10:52:52] <johnbender> I think it only happens in IE8 because of the visibility css rule
[10:53:12] <johnbender> yah
[10:53:19] <johnbender> ie7 doesn't support it
[10:53:26] <johnbender> and ie9 doesn't throw the exception
[10:53:36] <johnbender> previously they were just eating it
[10:53:54] <johnbender> credit to Dave Methvin for sorting that out in core
[10:54:11] <johnbender> and being nice enough to explain the logic behind the check there
[10:55:18] <johnbender> kinblas: otherwise it looks like we're in good shape
[10:57:42] <toddmparker_> kinblas: thinking of removing the event bindings
[10:57:54] <kinblas> I should have this already, but what is the URL for today's meeting?
[10:57:56] <toddmparker_> might be faster too
[10:58:16] <toddmparker_> who wants to make a meeting
[10:58:50] <toddmparker_> on G+
[10:58:56] <kinblas> toddmparker_: that impacts all non-native buttons
[10:59:31] <gseguin> toddmparker_: I'll make one
[10:59:54] <Wilto> Aw hell meeting.
[11:00:01] <gseguin> johnbender beat me to it
[11:00:11] <johnbender> :D
[11:00:41] <toddmparker_> can you post a link here?
[11:00:47] <johnbender> attempting to
[11:00:50] <johnbender> ah
[11:00:51] <johnbender> wait
[11:01:39] <toddmparker_> kin - this issue gets at it a bit: https://github.com/jquery/jquery-mobile/issues/2214
[11:01:41] <socialhapy> ★ Issue #2214 on jquery-mobile, reported by zachleat (4m, 1w ago): CSS outline: none; and hover state consistency
[11:02:13] <kinblas> toddmparker_: I just logged into G+
[11:02:17] <kinblas> and there's a button
[11:03:03] <Wilto> there’s a link in #jquery-meeting
[11:05:22] <sven_franck> toddmparker_: where to go?
[11:06:01] <kinblas> sven_franck: https://talkgadget.google.com/hangouts/7d2bf5bab306110d156d9b7d64a0a72e507321ce?authuser=0&hl=en-US&source=1#
[11:06:12] <sven_franck> kinblas: thx
[11:23:54] <jqm-jenkins-bot> Project jqm-master build #341: FAILURE in 12 min: http://10.59.19.240:8080/job/jqm-master/341/
[11:23:55] <jqm-jenkins-bot> john.m.bender: update jquery to 1.7.1 Fixes #2965, #3267
[12:29:11] <eddiemonge> transitions branch is out of date.
[12:37:29] <hdon> hi guys :)
[12:37:38] <hdon> i don't like the "init" event
[12:38:02] <kinblas> hdon: you talking about mobileinit?
[12:38:08] <kinblas> if so +1000
[12:38:20] <hdon> kinblas: surprisingly, no. i'm actually talking about init. pageinit, etc.
[12:38:32] <hdon> you see have an asynchronous JS code loader
[12:38:33] <kinblas> ??
[12:38:54] <hdon> with $(document).ready() there's no problem
[12:39:11] <hdon> but with $('#somePage').live('pageinit', fn) we have a race condition
[12:39:12] <kinblas> perhaps we should take a step back and describe the problem
[12:39:23] <hdon> kinblas: ^^
[12:39:35] <hdon> basically
[12:39:48] <kinblas> race with what?
[12:39:58] <toddmparker_> this is pretty clearly explained:
[12:40:03] <toddmparker_> In jQuery Mobile site and apps, pages are requested and injected into the same DOM as the user navigates, so the DOM ready event is not as useful, as it only executes for the first page. To execute code whenever a new page is loaded and created in jQuery Mobile, you can bind to the pagecreate event.
[12:40:09] <toddmparker_> http://jquerymobile.com/test/docs/pages/page-scripting.html
[12:40:17] <kinblas> the framework inits itself on read()
[12:40:26] <hdon> kinblas: binding to *init events, and firing of *init events. due to our asynchronous JS loader, we can't know which comes first. i realize this is a unique situation, but i think my prescription is reasonable
[12:40:34] <toddmparker_> this is required because we have an ajax nav system
[12:40:51] <hdon> toddmparker_: thank you, but we're well aware of that.
[12:40:58] <hdon> oh
[12:41:00] <hdon> i see i've been unclear
[12:41:06] <toddmparker_> sorry, couldn't tell from the initial Q, carry on
[12:41:09] <hdon> toddmparker_: my comparison to $(document).ready() is only for this reason:
[12:41:24] <hdon> $(document).ready() will fire your function if domready already happened
[12:41:31] <kinblas> are you guys talking about some specific issue here?
[12:41:33] <hdon> but *init jqm events only happen once
[12:41:41] <kinblas> hdon: you're coming at me cold here so I need some context
[12:41:51] <hdon> sorry i'm pretty hungover..
[12:42:00] <hdon> but been thinking about this problem for a few days
[12:42:11] <kinblas> hdon: so let's back up a bit
[12:42:23] <hdon> ok let me provide a scenario to help explain
[12:42:28] <kinblas> I don't know your setup
[12:42:29] <hdon> i want to do something to a page after it has initialized
[12:42:32] <kinblas> are you using straight up static pages
[12:42:36] <hdon> so i bind to pageinit event on that page
[12:42:47] <kinblas> ok
[12:43:01] <hdon> but sometimes, the pageinit event has already happened before i get to bind to it
[12:43:23] <hdon> now, $(document).ready() anticipates the need to do something *because* the dom is ready, not simply *at the moment the dom becomes ready*
[12:43:25] <kinblas> hdon: right because you are binding in some ready() handler?
[12:43:28] <hdon> but there is no analog for pageinit
[12:43:38] <hdon> kinblas: no, because we have an asynchronous javascript code loader
[12:43:46] <hdon> so sometimes our javascript doesn't arrive quickly
[12:43:52] <kinblas> hdon: oh ok
[12:44:02] <kinblas> hdon: so you can delay the initialization of the framework if you want
[12:44:04] <hdon> all i propose is something like
[12:44:09] <kinblas> and then trigger it when you are ready
[12:44:27] <hdon> 	_createWidget: function() {
[12:44:27] <hdon> 		$.Widget.prototype._createWidget.apply( this, arguments );
[12:44:27] <hdon> 		this._trigger( 'init' );
[12:44:28] <hdon> 	},
[12:44:55] <hdon> in that function of mobile.widget, why not set some attribute on the DOM node that conveys it has been initialized
[12:45:00] <hdon> alternately
[12:45:08] <kinblas> isn't that what we do already?
[12:45:23] <hdon> you trigger 'init'
[12:45:40] <hdon> and in the case of a page, it gets classes like ui-page
[12:45:54] <hdon> and that is how i work around this, but
[12:45:55] <kinblas> hdon: right, it also gets a data property called page
[12:45:59] <hdon> i was thinking a more generalized solution
[12:46:03] <hdon> would allow me to do something like
[12:46:29] <hdon> $(selector).whenInited(fn)
[12:46:37] <hdon> and fn could be bound to init if init hasn't fired yet
[12:46:45] <hdon> but if it has been initialized already, the function would just be called
[12:47:03] <hdon> i realize this is a very weird situation we have and we have brought it on ourselves with asynchronous javascript code loader
[12:47:25] <hdon> but the prescription is, i think, not a bad addition to jqm because it's more like $(document).ready() than binding to "init" is
[12:50:09] <kinblas> hdon:  I guess I'm seeing what you propose as sugar coating $(selector).live("pageinit", fn) ??
[12:50:40] <kinblas> oh but I think you want it to act more like a promise
[12:50:51] <kinblas> where if it already happened it still fires.
[12:51:57] <kinblas> hdon: file an enhancement request issue ... but please explain the usecase thoroughly ... we get a lot of issues thrown at us where folks assume we know the details of their setup/use
[12:52:11] <kinblas> there's also the feature request wiki
[12:52:34] <kinblas> hdon: https://github.com/jquery/jquery-mobile/wiki/Feature-Requests
[12:52:35] <hdon> kinblas: yes
[12:52:57] <hdon> kinblas: i think first i will patch jqm myself to add this feature and include that with the issue
[12:53:08] <eddiemonge> .live() should be replaced
[12:53:14] <hdon> eddiemonge: it has been hasn't it?
[12:53:16] <kinblas> eddiemonge: yeah yeah I know
[12:53:28] <hdon> or do you mean it needs to not be used in jqm?
[12:53:40] <eddiemonge> not be used since its deprecated
[12:53:43] <kinblas> hdon: they are deprecating
[12:53:55] <kinblas> in favor of the new event api
[12:54:16] * hdon nods
[12:56:21] <gseguin> garann: if you have time I'd like you to review the amd branch and give me feedback on it
[12:57:15] <garann> yeah gseguin, let me switch over to that and take a look
[12:57:28] <gseguin> thanks
[13:05:25] <hdon> AMD branch? jQuery Mobile optimized for AMD CPUs?
[13:05:30] <hdon> :P
[13:06:12] <gseguin> :)
[13:10:55] <toddmparker_> hey kinblas - you see this comment? https://github.com/jquery/jquery-mobile/issues/142#issuecomment-3166896
[13:10:56] <socialhapy> ★ Issue #142 on jquery-mobile, reported by toddparker (1y, 2m ago): Laggy scroll swipe events
[13:12:02] <kinblas> that sounds just like what I posted before
[13:12:07] <kinblas> in another issue
[13:12:17] <toddmparker_>  yeah, thought so
[13:12:22] <toddmparker_> think we have multiple issues
[13:12:30] <toddmparker_> i need to close dupes
[13:12:35] <kinblas> in fact his example is exactly the one I wrote
[13:12:53] <kinblas> well I used $(document) he used $document
[13:12:55] <kinblas> :-D
[13:13:40] <kinblas> toddmparker: we should just forget about touch and move to all mouse events ;-)
[13:13:48] <kinblas> except for slider of course :-)
[13:18:28] <johnbender> gseguin: is it champagne or sparkling wine? my wine nerd friends would want me to ask :D
[13:19:03] <gseguin> :)
[13:19:16] <gseguin> johnbender: It doesn't say Champagne on it
[13:19:26] <gseguin> so the latter
[13:20:08] <johnbender> I couldn't tell the difference without the label anyhow
[13:20:23] * johnbender is now craving sparkling wine
[13:21:40] <toddmparker_> don't tempt me kinblas
[13:22:00] <toddmparker_> ok, this is the issue to track: https://github.com/jquery/jquery-mobile/issues/2855
[13:22:01] <socialhapy> ★ Issue #2855 on jquery-mobile, reported by jblas (1m, 2w ago): Improve scrolling performance.
[13:22:07] <toddmparker_> i closed the others and referenced them from here
[13:22:52] <TehShrike|Work> Have there been any statements on when jQuery 1.7 will be supported?
[13:23:14] <johnbender> TehShrike|Work: we're thinking 1.1
[13:23:25] <johnbender> TehShrike|Work: so far there's only been one bug
[13:23:34] <johnbender> though I need to take a look at a failing test
[13:23:41] <TehShrike|Work> Good to know
[13:24:01] <TehShrike|Work> Those event.layer warnings are cluttering up my console :-)
[13:24:04] <johnbender> TehShrike|Work: we still need to discuss moving that bug fix down to the stable branch for a patch release
[13:31:36] <toddmparker_> so kinblas - re: hover
[13:31:53] <toddmparker_> there is this ticket about outline/hover: https://github.com/jquery/jquery-mobile/issues/2214
[13:31:54] <socialhapy> ★ Issue #2214 on jquery-mobile, reported by zachleat (4m, 1w ago): CSS outline: none; and hover state consistency
[13:32:07] <toddmparker_> and a few android issues where the hover is sticky
[13:32:20] <toddmparker_> so these sort of group together
[13:32:51] <kinblas> ok
[13:32:54] <toddmparker_> essentially, if we can make this keyboard navigable w/o needing hover, then this fixes a bunch of issues
[13:33:03] <toddmparker_> and may lighten up the event stuff?
[13:33:19] <kinblas> so we've heard I haven't actually tried it myself
[13:33:40] <toddmparker_> yeah
[13:33:54] <toddmparker_> i can do a quick test o see whether it's the hover or down state on lists
[13:34:00] <toddmparker_> would that help?
[13:39:53] <toddmparker_> yep kinblas - it's the down state
[13:40:00] <toddmparker_> which is even more odd
[13:40:17] <toddmparker_> so when i scroll the page, i see the down state every time i scroll
[13:40:31] <toddmparker_> which is sort of great
[13:40:38] <toddmparker_> because we can keep the hover state
[13:40:51] <toddmparker_> which is helpful for mouse and keyboard nav
[13:40:54] <kinblas> so ... the todo here is now?
[13:40:57] <toddmparker_> but nix the down state
[13:41:41] <kinblas> toddmparker_: so it's not enough to just kill/comment out the down-state rules?
[13:53:32] <johnbender> arg
[13:54:01] <johnbender> for some reason the slider tests that work by triggering a sequence of mousedown/mousemove events are broken with 1.7
[13:54:47] <johnbender> and so are the flip toggle switches for which the test is built
[13:54:50] * johnbender is glad we have tests
[14:20:59] <toddmparker_> nice
[14:21:11] <toddmparker_> so kinblas - sorry, what were you asking?
[14:21:28] <toddmparker_> if we should do this soon (killing the down state)
[14:21:58] <kinblas> toddmparker_: I was just wondering if it was enough to kill the CSS rule vs the code that places the class
[14:22:04] <kinblas> leaving it flexible
[14:22:08] <kinblas> for those that want it
[14:22:19] <kinblas> if you kill it in code, no one has a choice
[14:23:07] <Wilto> “If you die in the code, YOU DIE FOR REAL.”
[14:23:59] <toddmparker_> woah
[14:24:08] <kinblas> heh
[14:24:18] <toddmparker_> kinblas: i meant that we'd kill the js that add the downstate
[14:24:32] <toddmparker_> we will still want t a down state in our css for buttons
[14:24:32] <Wilto> It’s all very Matrix-y.
[14:24:45] <toddmparker_> this is really mostly a listview issue
[14:24:58] <toddmparker_> individual buttons may have an issue, but it's much less of an issue
[14:25:01] <kinblas> toddmparker_: right so why not kill the CSS for the listview?
[14:25:27] <toddmparker_> meaning that we just negate the down class for ui-btn-down  a-z
[14:25:46] <toddmparker_> seems like a waste to toggle classes but not use them
[14:25:56] <toddmparker_> and that adds some bloat to the css
[14:26:07] <toddmparker_> 26 selectors to negate
[14:26:19] <toddmparker_> maybe i'm misunderstanding
[14:26:48] <kinblas> toddmparker_: I guess all I'm asking is this ... why not leave the class toggling JS code in.
[14:26:55] <gseguin> johnbender: eddiemonge: I just saw the light!
[14:27:00] <kinblas> and just remove the CSS code in question
[14:27:07] <gseguin> https://github.com/jrburke/r.js/blob/master/build/example.build.js
[14:27:11] <kinblas> if folks really want a down-state, they can add their own CSS back
[14:27:15] <gseguin> r.js has pragmas!!
[14:27:26] <kinblas> if we kill the JS toggling code, then no one has a choice
[14:27:32] <gseguin> no more hacky way!
[14:27:37] <kinblas> there is no down-state ... period
[14:27:53] <toddmparker_> kinblas: on lists, you never really see a downstate because we apply active right away
[14:28:17] <kinblas> toddmparker_: right for listview, but what about the other components that use buttonMarkup?
[14:28:28] <toddmparker_> so you only see if with the leaky events causing a downstate when you scroll
[14:28:28] <kinblas> that's why I'm asking why this isn't just a CSS tweak
[14:28:34] <eddiemonge> gseguin: so no script or trickery needed?
[14:29:06] <gseguin> the only thing needed is a patch to r.js because right now you can't specify pragmas on the command line
[14:29:08] <toddmparker_> so can we leave in the class toggle for most things that use button markup, but not apply just the downstate on listviews?
[14:29:41] <kinblas> toddmparker_: actually we can make that a config option on buttonMarkup
[14:29:42] <gseguin> but I'll submit a PR for that to jrburke
[14:29:53] <kinblas> listviews call buttonMarkup explicityly passing in it's themes etc
[14:30:01] <kinblas> so we might as well add another option to disable things
[14:30:39] <toddmparker_> yeah, that makes sense to mee
[14:31:05] <johnbender> gseguin: I'm confused what you mean by pragma's the link looks like a build manifest
[14:31:10] <toddmparker_> i just don't want to have to flip a class that isn't used and have to negate the down state in CSS. seems like a long way around the barn
[14:31:15] <toddmparker_> kinblas ^^
[14:31:27] <gseguin> />>excludeStart("jqmBuildExclude", pragmas.jqmBuildExclude);
[14:31:27] <gseguin> define( [ "jquery.mobile.core", "jquery.mobile.vmouse" ], function() {
[14:31:27] <gseguin> //>>excludeEnd("jqmBuildExclude");
[14:31:36] <toddmparker_> this is another thing that will reduce apparent jankiness significantly
[14:31:41] <gseguin> johnbender: ^
[14:31:43] <kinblas> toddmparker_: I guess I don't get what you mean by negate the down state
[14:32:07] <gseguin> and at build time you say: pragmas.jqmBuildExclude=true
[14:32:09] <johnbender> gseguin: ok that makes perfect sense, I just didn't see that in your link
[14:32:12] <toddmparker_> well, how to do not see the ui-btn-down state by changing CSS?
[14:32:30] <johnbender> gseguin: bug you can define them in the build file?
[14:32:32] <johnbender> hence the link?
[14:32:35] <gseguin> look for "pragmas"
[14:32:46] <johnbender> gseguin: yah I just spotted it that's why I asked
[14:32:51] <johnbender> cool
[14:32:51] <kinblas> toddmparker_: reset the background for ui-li?
[14:32:59] <johnbender> gseguin: super duper win
[14:33:04] <gseguin> oh yeah but we don't use the build file
[14:33:13] <kinblas> .ui-li .ui-btn-dwn-a { background-image: none; }?
[14:33:16] <johnbender> gseguin: they have some core ones then?
[14:33:20] <kinblas> is that what you mean by negating?
[14:33:31] <toddmparker_> yeah, but you have a-z swatches
[14:33:32] * johnbender points back at gseguin's example
[14:33:37] <toddmparker_> so that selector is way looong
[14:33:38] <johnbender> gseguin: like what you pasted
[14:34:03] <toddmparker_> .ui-li .ui-btn-dwn-a,
[14:34:03] <toddmparker_> .ui-li .ui-btn-dwn-b,
[14:34:03] <toddmparker_> .ui-li .ui-btn-dwn-c
[14:34:03] <toddmparker_>  { background-image: none; }
[14:34:08] <toddmparker_> etc
[14:34:12] <gseguin> johnbender: what do you mean by core ones?
[14:34:21] <toddmparker_> seems gross
[14:34:24] <sven_franck> just thinking... why not add a blinky transition, would be supported out-of-the-box on Android.
[14:34:33] <toddmparker_> ha!
[14:34:45] <sven_franck> call it transition="disco"
[14:35:03] <kinblas> sven_franck: lol
[14:35:08] <sven_franck> :-D
[14:35:16] * kinblas thinks someone is latching on to our humor
[14:35:24] <johnbender> gseguin: you said "yah but we don't have a build file" when I asked if we just define the pragma so I was wondering if `excludeStart` is just built into the preproccesor
[14:35:30] <toddmparker_> "strobe"
[14:35:35] <kinblas> toddmparker_: so that's what you meant by negating right?
[14:35:36] <johnbender> "preprocessor"
[14:35:39] <sven_franck> toddmparker_: +1
[14:35:40] <toddmparker_> it's all marketing
[14:35:51] <gseguin> johnbender: oh gotcha
[14:35:53] <toddmparker_> yeah kinblas
[14:35:53] <Wilto> data-transition="sweet-rave-parties"
[14:35:58] <johnbender> gseguin: so it's built in?
[14:36:11] <gseguin> johnbender: I just need to submit a patch to jrburke
[14:36:22] <toddmparker_> so you'd need to write a pretty massive selector to negate the bg on the down class
[14:36:28] <gseguin> I had to patch r.js so we can specify pragmas at the command line
[14:36:37] <toddmparker_> seems better to just not write it in the first place
[14:36:39] <johnbender> gseguin: ahh! you win open source contributor!
[14:36:40] <gseguin> short answer is no there are no core pragmas
[14:37:08] <kinblas> toddmparker_: so we want to make the down-state class support optional, so that other components can take advantage right?
[14:37:12] <johnbender> gseguin: as a side note is there some reason we don't want to include a build file?
[14:37:45] <kinblas> in listview it calls $(...).buttonMarkup({ theme: "a", downState: false });
[14:37:57] <gseguin> yeah, it optimizes the entire project
[14:38:16] <gseguin> and then builds the bundle you want
[14:38:18] <kinblas> toddmparker_: what I was saying earlier ^^^  listview already calls buttonMarkukp with options, we can make the downState optional if you want
[14:38:49] <kinblas> toddmparker_: it just seems weird to have a buttonMarkup component that doesn't support a down-state
[14:38:51] <toddmparker_> cool
[14:38:55] <toddmparker_> that is the plan kinblas
[14:39:12] <Wilto> toddmparker_ just caught me up.
[14:39:29] <toddmparker_> well, it's not weird if you drop an active state basically in place of down
[14:39:44] <Wilto> kinblas: Can you see any other way of preventing that?
[14:39:47] <toddmparker_> is there already an option for flipping on active?
[14:40:02] <kinblas> toddmparker_: no, none of that exists yet
[14:40:18] <kinblas> toddmparker_: the active state is added by our ajax click handler
[14:40:22] <kinblas> it's not even in the buttonMarkup
[14:40:22] <toddmparker_> ah
[14:40:28] <kinblas> which I thought was a little weird
[14:40:39] <toddmparker_> well it can be an internal thing we use for specific places like this
[14:40:48] <toddmparker_> we can re-factor that stuff if you want
[14:40:59] <toddmparker_> in fact, button markup needs a look anyway
[14:41:19] <toddmparker_> we get a million issues with propel trying to calling button() methods on link based buttons
[14:41:38] <toddmparker_> which wraps them because links are a different animal
[14:41:46] <kinblas> yeah
[14:41:58] <kinblas> folks base expectations on the look versus the semantic tag that was used
[14:42:09] <toddmparker_> so i don't know if we just want to merge the button stuff and make links consistent?
[14:42:44] <kinblas> toddmparker_: eh, but all that goes out the window in the degredation case
[14:42:44] <toddmparker_> we'd have to use data-disable or something gross like that
[14:42:48] <kinblas> links will still take you somewhere
[14:42:53] <kinblas> and you can't disable them
[14:43:00] <toddmparker_> sure, there isn't any way to disable a link
[14:43:17] <toddmparker_> this is more of a consistency/convenience thing
[14:43:38] <toddmparker_> we didn't support disabling a link because it's a dumb thing to do
[14:44:01] <toddmparker_> but devs don't think so because it looks like a button so it should act like one
[14:44:37] <kinblas> why are they using a link instead of a button then?
[14:45:42] <toddmparker_> i have no idea
[14:45:42] <Wilto> They want link behavior.
[14:45:50] <toddmparker_> yeah basically
[14:45:53] <Wilto> But since it looks button-y, they think it should be disable-able.
[14:45:56] <Wilto> Which I 100% hate.
[14:45:58] <toddmparker_> ya
[14:46:05] <Wilto> But it comes up enough that it’s worth discussing.
[14:46:12] <kinblas> yeah so why not use a button if you expect button behavior?
[14:46:25] <toddmparker_> yeah. sort of against my semantic principles, but this is becoming messy
[14:46:27] <kinblas> btw, buttons are useless without JS
[14:46:27] <sven_franck> I can chip in here, too...
[14:46:28] <Wilto> Well, no. They expect link _behavior_.
[14:46:45] <sven_franck> went with inputs in the end
[14:46:54] <Wilto> But they also—because it looks like a button—think it should have a way of disabling it.
[14:47:15] <Wilto> Again, this is just me trying to make sense of something that makes no sense to me.
[14:47:30] <johnbender> kinblas: $.event.props
[14:47:35] <Wilto> I can see their confusion, from a “doing it wrong” perspective.
[14:47:41] <kinblas> Wilto: I get that ... but what I'm wondering is ... is it the framework that is making the decision for them of generating code with links that look like buttons?
[14:47:41] <sven_franck> why not support iconpos="notext" on inputs? these can be disabled="disabled"
[14:47:54] <johnbender> kinblas: that think shrank
[14:47:54] <kinblas> Wilto: or are they writing their own markup and choosing to use a link?
[14:47:56] <johnbender> *thing
[14:48:17] <Wilto> Assume they’re writing their own markup, using the framework to make it look like a button.
[14:48:24] <Wilto> They want it to move the user around like a link.
[14:48:38] <Wilto> But then they think “okay I only want this link to work when they do X first,” or something.
[14:48:48] <toddmparker_> yeah, it's not a form but they want a button to visual emphasis or whatever
[14:49:19] <kinblas> keep in mind I don't mind adding this ... I'm just trying to make sense of this in a graceful degredation way ...
[14:49:21] <Wilto> And since it looks button-like, they think “maybe the framework could make it look disabled like a button and not actually work when clicked when I put this attribute on it.”
[14:49:27] <toddmparker_> a somewhat decent example is a form with a submit button and a cancel button. Cancel could be a link but should look like a button
[14:49:27] <Wilto> No, dude, I do mind adding it.
[14:49:39] <Wilto> But. If the people have spoken, y’know.
[14:49:50] <toddmparker_> yeah, we all think it's a crap idea
[14:49:54] <kinblas> lol
[14:49:55] <toddmparker_> but we get a ton of issues
[14:49:59] <kinblas> yeah I'm sensing that
[14:50:00] <Wilto> Yeah, without the framework, it’ll still be a normal link.
[14:50:05] <Wilto> That’s where I hate it.
[14:50:10] <toddmparker_> where people say "i disabled a button and it got all puffy"
[14:50:11] <kinblas> agreed
[14:50:15] <toddmparker_> closed 2 today
[14:50:19] <Wilto> We’re muscling in on pure markup territory.
[14:50:24] <kinblas> puffy?
[14:50:33] <toddmparker_> i now look at the code right away and it's always a link with a data-role of button
[14:50:41] <toddmparker_> and the call button() on it
[14:50:55] <Wilto> They become mediocre rappers and once-exceptional producers, kinblas.
[14:50:56] <toddmparker_> when that happens, the button plugin calls buttonmarkup
[14:50:58] <toddmparker_> on the button
[14:51:07] <toddmparker_> so you get double-wrapped buttons
[14:51:12] <toddmparker_> a button inside a button
[14:51:19] <kinblas> Wilto: werd
[14:51:22] <toddmparker_> sort of a turdurken of buttons
[14:51:35] <kinblas> heh
[14:51:58] <Wilto> s/urken/
[14:51:59] <toddmparker_> guess an option would be to make the button plugin smart enough to first look to see if it's a link button
[14:52:04] <Wilto> Just a “turd.”
[14:52:13] <kinblas> heh
[14:52:15] <Wilto> Yeah, I do think we should do that.
[14:52:21] <toddmparker_> and if someone calls disable on it, simply add the ui-disabled class
[14:52:27] <toddmparker_> reverse for enable
[14:52:42] <toddmparker_> keep it light
[14:55:53] <Wilto> Man.
[14:56:15] <Wilto> I’m quickly talking myself out of what precious little appeal the “disabled link” thing had.
[14:56:22] <Wilto> I think… I think I hate it the most, guys.
[14:56:57] <Wilto> I do think we should normalize the button/buttonMarkup plugins. If they use the wrong one, stop and call the other. I get that confusion—honest mistake.
[14:58:09] <Wilto> But one can’t “disable” links. If they wanna script it, sure, go ahead. I don’t think we should even semi-encourage it, though, by making it part of the library.
[14:58:58] <toddmparker_> yeah, i think i'll create an issue to make the button markup not mess with any links. just a quick check. no enable/disable stuff
[14:59:24] <toddmparker_> that way, callign disabel still won't work, but it won't double wrap a link button
[14:59:29] <toddmparker_> kant spel
[14:59:37] <Wilto> How do we make it so that attempting to disable a link sets the user’s computer on fire.
[14:59:45] <Wilto> That is where I am at in this.
[15:00:30] <toddmparker_> i like
[15:00:49] <toddmparker_> so i just added an issue to not apply the down state on listviews here: https://github.com/jquery/jquery-mobile/issues/3281
[15:00:50] <socialhapy> ★ Issue #3281 on jquery-mobile, reported by toddparker (53.791s ago): Remove down state class from being added on listviews
[15:01:00] <toddmparker_> speak now if you have objections!
[15:02:13] <Wilto> ?objection
[15:02:13] <bot-t> http://wil.to/_/objection.jpg
[15:02:30] <Wilto> I just couldn’t pass up the opportunity.
[15:07:00] <toddmparker_> also added the simple check to not double wrap links with the button plugin
[15:07:01] <toddmparker_> https://github.com/jquery/jquery-mobile/issues/3282
[15:07:02] <socialhapy> ★ Issue #3282 on jquery-mobile, reported by toddparker (1m, 19s ago): Fool-proof link buttons from button methods
[15:07:13] <jqmobilecommit> [jquery-mobile] Wilto created fetchlink (+1 new commit): http://git.io/4saM5w
[15:07:13] <jqmobilecommit> [jquery-mobile/fetchlink] Added fetchlink behavior on a per-link level, normalized incoming href/src. - Mat Marquis
[15:07:25] <Wilto> oh god did i break it again
[15:07:34] <toddmparker_> wish we could throw an alert that says "NO YOU DISABLE LINKS"
[15:10:48] <johnbender> toddmparker_: Wilto: gseguin: eddiemonge: kinblas: I can't find any notes on them shortening $.event.props
[15:10:56] <johnbender> but they definitely have in 1.7
[15:11:38] <johnbender> err between the release of 1.6.max and 1.7.1
[15:11:53] <johnbender> I asked in jquery-dev but they didn't respond
[15:12:00] <toddmparker_> hmmm
[15:12:21] <johnbender> toddmparker_: let me see if I can find the spot where it changed in the history log
[15:12:28] <toddmparker_> k
[15:13:47] <toddmparker_> johnbender: can this issue be closed now? https://github.com/jquery/jquery-mobile/issues/3268
[15:13:48] <socialhapy> ★ Issue #3268 on jquery-mobile, reported by toddparker (1d, 7h ago): Add support for jQuery core 1.7.1
[15:13:52] <toddmparker_> and the related issues?
[15:14:05] <johnbender> toddmparker_: nope
[15:14:17] <johnbender> I have to fix _at least_ this bug
[15:14:23] <johnbender> toddmparker_: https://github.com/jquery/jquery-mobile/issues/3280
[15:14:23] <socialhapy> ★ Issue #3280 on jquery-mobile, reported by johnbender (1h, 8m ago): Slider/Flip toggle switch don't slide with 1.7 update
[15:14:48] <johnbender> toddmparker_: referenced in that ticket sorry
[15:14:52] <johnbender> should have done that up front
[15:16:15] <toddmparker_> k
[15:17:59] <toddmparker_> k guys, gotta head out
[15:18:02] <toddmparker_> go team!
[15:25:00] <johnbender> kinblas: so your use of $.event.props will have to change in vmouse it looksl ike
[15:25:22] <johnbender> they moved some of the mouse event stuff under $.event.mouseHooks.props
[15:25:34] <kinblas> hmmm ok
[15:25:36] <johnbender> so we're not seeing the pageX and pageY from vmouse events
[15:25:42] <kinblas> doh
[15:25:44] <johnbender> kinblas: I'm happy to handle it
[15:25:47] <kinblas> ok
[15:25:53] <johnbender> just wanted to let you know
[15:26:00] <johnbender> and I'll probably bother you with questions
[15:26:13] <kinblas> ok
[15:26:20] <kinblas> that event code was copied from some UI code
[15:26:38] <kinblas> basically just want to create a fake event
[15:26:42] <kinblas> that looks like the real one
[15:28:38] <johnbender> kinblas: yap
[15:28:59] <johnbender> makes sense to me, just need to find out from dave methvin if there's anything we should do to avoid breakage in the future
[15:29:05] <johnbender> ie, it's not a public api
[15:29:12] <johnbender> and we should add a test to verify state
[15:34:02] <johnbender> kinblas: mergeing the props with the mouse event props when  the event contains /mouse/ seems to work
[15:34:13] <kinblas> great!
[15:34:38] <johnbender> tests pass too
[15:34:44] * johnbender is glad there are tests
[15:35:15] <johnbender> kinblas: sucks we have to put that check and concat on there
[15:35:18] <johnbender> *in there
[15:35:38] <johnbender> kinblas: hmm I could cache the concat
[15:35:42] <eddiemonge> toddmparker_: still there?
[15:36:54] <johnbender> kinblas: yah I just added a mouseEventProps up top
[15:40:50] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/cZqYXw
[15:40:50] <jqmobilecommit> [jquery-mobile/master] add mouse event props to virtual mouse events Fixes #3280 - John Bender
[15:42:59] <johnbender> gseguin: do you get a 301 from the jshint service?
[15:43:25] <johnbender> gseguin: just realized I moved my source tree's around a while back and forgot to copy over the pre-commit hook
[16:23:50] <justinribeiro> kinblas: So, I was able to stop the first flash from occuring on your key frame sample 01, but doesn't really get any closer
[16:25:02] <jqm-jenkins-bot> Yippie, build fixed!
[16:25:03] <jqm-jenkins-bot> Project jqm-master build #342: FIXED in 13 min: http://10.59.19.240:8080/job/jqm-master/342/
[16:25:03] <jqm-jenkins-bot> john.m.bender: add mouse event props to virtual mouse events Fixes #3280
[16:26:15] <justinribeiro> kinblas: You can see what it looks like in action http://www.youtube.com/watch?v=lIffCKwkOQQ
[16:27:06] <justinribeiro> kinblas: slightly tweaked example http://goo.gl/OGr2y
[16:29:38] <kinblas> justinribeiro: so what did you do?
[16:30:00] <kinblas> thanks for playing with this btw ... I actually don't see the 1st flash on the devices I have
[16:30:14] <justinribeiro> swapped the -webkit-animation-* declartions for in/out class with -webkit-transition
[16:30:15] <kinblas> until I start integrating more CSS ... I think I notated it in the notes
[16:30:33] <kinblas> oh ok using transitions versus keyframes
[16:30:39] <justinribeiro> Right
[16:30:43] <justinribeiro> only works the first time
[16:30:48] <justinribeiro> from then on out, flashes
[16:31:01] <kinblas> so I have a branch where we switched over to transitions
[16:31:14] <kinblas> supposedly because performance was better, but it wasn't a noticeable different
[16:31:17] <kinblas> difference
[16:33:35] <justinribeiro> I do see that branch, I can have a go with it
[16:43:54] <jqmobilecommit> [jquery-mobile] johnbender pushed 4 new commits to 1.0-stable: http://git.io/HxUamg
[16:43:54] <jqmobilecommit> [jquery-mobile/1.0-stable] Merge branch 'issue_2234' of https://github.com/adrianpike/jquery-mobile into adrianpike-issue_2234 - John Bender
[16:43:54] <jqmobilecommit> [jquery-mobile/1.0-stable] centralize cross domain request check - John Bender
[16:43:54] <jqmobilecommit> [jquery-mobile/1.0-stable] test cross domain check helper - John Bender
[16:56:37] <gseguin> ?tell johnbender I actually never use the jshint service
[16:56:38] <bot-t> gseguin, Okay.
[16:57:47] <justinribeiro> kinblas: that branch is also hit or miss; sometimes it'll transition with a single flash, other times it'll triple blink, it's all over
[16:59:41] <kinblas> justinribeiro: that branch was trying to get things to blink less on the XOOM
[16:59:47] <kinblas> not sure what you were testing it on
[17:00:05] <kinblas> but it was still horrible, but less horrible than what we see with keyframes on the head
[17:00:44] <justinribeiro> kinblas: was trying it on the Galaxy Nexus. Starts less horrible than with keyframes it appears
[17:02:20] <kinblas> justinribeiro: yeah I figured out that things don't flash if we don't toggle display none on the page we just transitioned off screen
[17:02:41] <kinblas> so I was playing with just leaving pages offscreen to the left of the viewport ... I don't remember if I actually landed it or not in that branch
[17:08:47] <justinribeiro> kinblas: Gotcha. We'll play with it some more tomorrow, and if you have any other thoughts just ping me. I don't want to take up your time, you're a busy guy.
[20:17:08] <jqmobilecommit> [jquery-mobile] toddparker pushed 1 new commit to fetchlink: http://git.io/6timRQ
[20:17:08] <jqmobilecommit> [jquery-mobile/fetchlink] Added fetch link demos, changed  init selector to just be data-target - toddparker
[22:43:27] <jqmobilecommit> [jquery-mobile] gseguin pushed 5 new commits to amd: http://git.io/alwf2g
[22:43:27] <jqmobilecommit> [jquery-mobile/amd] Specified more dependencies - Ghislain Seguin
[22:43:27] <jqmobilecommit> [jquery-mobile/amd] Discovered r.js' pragmas use them instead of the hacky solution provided by amd-stripper.js - Ghislain Seguin
[22:43:27] <jqmobilecommit> [jquery-mobile/amd] Re-added r.js & require.js - Ghislain Seguin
[23:34:47] <jqmobilecommit> [jquery-mobile] gseguin pushed 2 new commits to amd: http://git.io/Wed6uw
[23:34:47] <jqmobilecommit> [jquery-mobile/amd] Fixed casing - Ghislain Seguin
[23:34:47] <jqmobilecommit> [jquery-mobile/amd] Merge remote branch 'upstream/master' into amd - Ghislain Seguin
[23:35:35] <gseguin> johnbender: it works!
[23:35:48] <johnbender> gseguin: hell yah
[23:35:49] <bot-t> (6 hours 39 mins ago) <gseguin> tell johnbender I actually never use the jshint service
[23:36:03] <johnbender> aww
[23:36:04] <johnbender> lol
[23:36:11] <johnbender> I think it died because I stopped
[23:36:22] <gseguin> heh :), thanks bot-t
[23:36:38] <gseguin> let me check that machine
[23:38:34] <gseguin> johnbender: looks like it's working
[23:38:43] <johnbender> lemme try again
[23:40:55] <johnbender> gseguin: alright, user retardation
[23:41:00] <johnbender> works fine
[23:41:07] <gseguin> :)
[23:41:08] <johnbender> gseguin: thanks!
[23:41:16] <gseguin> no problem
[23:42:08] <gseguin> so I'll hand off the amd branch to you and garann for review and comments but I think we have something much cleaner now with the pragmas
[23:42:20] <johnbender> gseguin: great stuff
[23:42:25] <gseguin> Dependencies can be adjusted as we go
[23:42:27] <johnbender> good on you for doing the extra research
[23:42:48] <gseguin> but if we decide to go with that I think we're pretty much ready to merge to master
[23:43:17] <johnbender> gseguin: good stuff, help me remember to write something in the readme for the curious
[23:43:27] <johnbender> gseguin: explaining it will make sure I understand it
[23:43:42] <gseguin> 'k
[23:44:14] <gseguin> oh one more thing I didn't wrap hashchange in a define
[23:44:37] <gseguin> and used the r.js option: skipModuleInsertion=true
[23:45:06] <gseguin> in case we decide to submodule that file from @cowboy
[23:45:39] <gseguin> I think we should use submodules everywhere we can, what do you think?
[23:46:03] <gseguin> johnbender: ^
[23:47:19] <gseguin> anyways I'm done with jQM for this week I'll see y'all next week
[23:47:28] <johnbender> gseguin: eddie proposed similar, and I feel like I read that there might be issues with that for some reason
[23:47:35] <johnbender> otherewise I think its a good idea
[23:47:55] <johnbender> so long as we're careful about updating the commit that it points to
[23:48:05] <gseguin> right
[23:48:35] <gseguin> I'll try to learn more about git submodules
[23:48:55] <johnbender> gseguin: I need to do a top to bottom read through of progit
[23:49:00] <johnbender> I've always used it adhoc
[23:49:33] <gseguin> yeah it's a great resource
