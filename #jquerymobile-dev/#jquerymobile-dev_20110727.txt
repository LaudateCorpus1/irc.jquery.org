[07:37:25] <scottjehl> mornin
[07:52:15] <toddparker> hey all
[08:04:07] <aaronmcadam> hiya todd
[08:07:09] <toddparker> hey aaronmcadam
[08:07:22] <aaronmcadam> awesome improvements :D
[08:07:29] <aaronmcadam> the create event is a big win
[08:07:54] <toddparker> thanks, the team is getting some nice developer improvements in now which is great
[08:08:04] <toddparker> yeah, that's a biggie
[08:08:11] <scottjehl> DECOUPLE ALL OF IT
[08:08:13] <scottjehl> :)
[08:08:15] <aaronmcadam> awesome, have u had a chance to think  a bit more about docs?
[08:08:24] <toddparker> unfortunately no
[08:08:29] <toddparker> have you?
[08:08:45] <aaronmcadam> yeah I liked that bit too scottjehl, are we moving towards a jquery-ui style download manager?
[08:08:59] <aaronmcadam> I thought we were gonna try to use git or something?
[08:09:02] <toddparker> that's the plan, yes
[08:09:20] <toddparker> john bender may try to whip something up
[08:09:32] <aaronmcadam> who's that?
[08:09:33] <toddparker> we also asked the infrastructure guys about a builder that hooks into the CDN
[08:09:40] <aaronmcadam> ah nice
[08:09:41] <toddparker> _nickel here
[08:09:47] <aaronmcadam> ahh right cool
[08:09:56] <toddparker> he's one of the core committers on jQM
[08:10:02] <aaronmcadam> ah good stuff
[08:10:12] <aaronmcadam> I think i've gotten a good handle on jqm now
[08:10:12] <toddparker> just started at adobe yesterday to be full time on this
[08:10:35] <aaronmcadam> my next challenge is really theming. got one last feature to implement first
[08:10:45] <aaronmcadam> wow well done!
[08:12:05] <aaronmcadam> you guys know of any good sites to get code reviews? think i found one ages ago
[08:12:47] <toddparker> if you have some time to help with just going thru the plugins and helping to document the bare bones API ref, lemme know
[08:13:01] <toddparker> hmmm, nothing comes to mind on the code review sites
[08:13:27] <scottjehl> hey _nickel
[08:13:45] <scottjehl> oh.. not on I guess
[08:13:52] <aaronmcadam> i'd probably have some time during testing, towards the end of next week
[08:14:01] <toddparker> cool
[08:16:31] <aaronmcadam> ok to pm you my details todd?
[08:19:16] <aaronmcadam> ya stepped out toddparker?
[09:07:00] <gseguin> good morning
[09:15:31] <_nickel> annnd we're back!
[10:20:56] <_nickel> scottjehl: quick question for you
[10:21:47] <_nickel> we want to remove the parent page along with the nested pages, so why the unbind, couldn't we just add a new binding to handle the child pages?
[10:22:29] <_nickel> also is there any reason that its checking against false? are you worried about undefined being a false positive there?
[10:22:47] <_nickel> scottjehl: I'll post that stuff on the commit to
[10:43:50] <scottjehl> hey _nickel
[10:45:34] <scottjehl> so, I was trying to set it up so that the parent page would not remove on hide as it normally would, unless the newly shown page is not a child (nested list) page of that parent
[10:46:04] <scottjehl> so that was the reason for the unbind. I didn't quite get where I wanted it though
[10:48:20] <scottjehl> one thing I thought we'd want is for the entire list to act as a whole, as far as removal is concerned. However, I settled on removing the whole list only when the parent page hides and the newly shown page is not a child list. This is because when I was removing the whole list upon exiting any child page for some unrelated page, if I then navigated back to the subpage, it wasn't regenerating the whole list to crea
[10:48:20] <scottjehl> that subpage
[10:48:40] <scottjehl> (like it does on refresh, for instance)
[10:48:43] <scottjehl> brb
[10:51:35] <_nickel> scottjehl: yah I removed my comment after I realized
[10:56:08] <_nickel> scottjehl: I'd like to figure out a cleaner way to identifiy child pages too
[10:56:17] <_nickel> scottjehl: working on the unbind issue first though
[10:57:36] <_nickel> hmm looks like the order of binding
[11:06:03] <_nickel> scottjehl: alright I just had to move the original binding above the enhance page as you would expect
[11:06:30] <_nickel> though I can't use the options object now, instead I have to use jqmData which is decidedly more brittle and less fun to look at :(
[11:08:23] <_nickel> scottjehl: now for some testing and then I'm going to see if there's a better way to determine subpages
[11:36:04] <gseguin> _nickel: ping
[11:36:09] <_nickel> gseguin: yo
[11:36:49] <gseguin> hey can you review https://github.com/jquery/jquery-mobile/pull/2006
[11:37:14] <gseguin> project707 is asking for blessing by another team member before he spends more time on this
[11:37:46] <gseguin> _nickel: summary is at: https://github.com/jquery/jquery-mobile/pull/2006#issuecomment-1666338
[11:37:57] <_nickel> gseguin: ahh yes I think I asked about the regex at the last meeting
[11:38:03] <_nickel> gseguin: finishing up some listview stuff
[11:38:19] <_nickel> gseguin: I can probably take a look this afternoon if thats ok
[11:38:40] <gseguin> _nickel: yes, I'll let him know
[11:41:26] <_nickel> gseguin: did we decide if this was something that we wanted to put effort into supporting during beta?
[11:42:03] <gseguin> It's not a priority I think
[11:42:36] <gseguin> so we don't have to merge the pull request now
[11:43:00] <gseguin> but having the feature ready would be a good thing, I think it's a nice feature
[11:43:14] <_nickel> ineed
[11:43:17] <_nickel> *indeed
[11:55:02] <scottjehl> gseguin ping
[11:55:06] <scottjehl> this pull https://github.com/jquery/jquery-mobile/commit/f84f3597436dc3835011fab4fb6d2d76ab92954c
[11:55:13] <gseguin> scottjehl: yes sir?
[11:55:27] <scottjehl> I'm wondering if we might find a better solution than throwing a try/catch at it?
[11:55:29] <gseguin> what about it?
[11:55:37] <gseguin> I've googled the problem
[11:55:52] <scottjehl> k
[11:55:53] <gseguin> there aren't many other solution
[11:56:04] <gseguin> I haven't tried it myself
[11:56:10] <scottjehl> so we can't try like... "activeElement" in document
[11:56:12] <scottjehl> or something
[11:56:17] <scottjehl> before using it
[11:56:34] * gseguin retrieving a doc
[11:56:46] <scottjehl> cool thx
[11:57:27] <scottjehl> just curious / trying to avoid those if there's a better way. I'm not saying we have to pull it out.
[11:58:08] <gseguin> curious is good
[11:58:20] <gseguin> I was also wondering if there was another way around it
[11:58:39] * gseguin is still looking
[12:00:00] <gseguin> scottjehl: http://closure-library.googlecode.com/svn/docs/closure_goog_ui_popupbase.js.source.html
[12:00:09] <gseguin> search for activeElement
[12:01:11] <gseguin> the problem is that it throws if you try to read that attribute when in an iFrame (at least that's what I got from what I found)
[12:02:41] <scottjehl> huh ok
[12:02:52] <scottjehl> yeah, it returns true for me even in IE7
[12:03:08] <scottjehl> and of course we don't support 6 in A grade
[12:03:15] <scottjehl> but the iframe case is interesting
[12:11:27] <gseguin> going for lunch
[12:30:08] <_nickel> scottjehl: good progress I'm just writing up the tests and adding some helpers to the listview plugin
[12:30:35] <_nickel> scottjehl: once I get back from driving my friend to the airport i should be able to finish up and push for you to take a look
[12:57:12] <scottjehl> awesome
[13:08:02] <gseguin> scottjehl: regarding that try/catch any findings?
[13:42:54] <_nickel> scottjehl: changes pushed for your review brb
[14:19:00] <scottjehl> _nickel thanks!
[14:19:17] <scottjehl> gseguin oh I was referring to _nickel's comment
[14:21:45] <gseguin> scottjehl: I was just asking if you had a more elegant solution than try/catch
[14:22:11] <scottjehl> well I just tested this and I get no error in IE7 http://jsbin.com/utogoz/2
[14:22:34] <scottjehl> oh cool. error reproduces in IE8 though
[14:22:38] <scottjehl> ok so I'll see if the check works
[14:23:30] <gseguin> cool
[14:24:21] <scottjehl> k so this doesn't throw an error http://jsbin.com/utogoz/3
[14:25:20] <scottjehl> i'll check if conditionally calling it based on that check still does though
[14:26:10] <gseguin> oh goodie! I couldn't really test (no VM) on my Mac here
[14:28:07] <scottjehl> yep this still throws error http://jsbin.com/utogoz/4
[14:28:11] <scottjehl> okay nevermind
[14:28:16] <scottjehl> thanks for humoring me :)
[14:29:15] <gseguin> :)
[14:32:42] <scottjehl> _nickel ping
[14:34:32] <scottjehl> not sure I understand why this change works https://github.com/jquery/jquery-mobile/commit/df5e7273c74e02dc1d1d9936b86adc094155a8bd#L1R696
[14:35:18] <scottjehl> ...but I like that it does
[14:35:19] <scottjehl> :)
[14:36:18] <_nickel> scottjehl: its because the binding of the pages sub elements was happening before that if statement
[14:36:44] <_nickel> which means that `.unbind("pagehide.remove")` was being executed before the original was even bound
[14:36:57] <scottjehl> ah okay. got it now
[14:36:59] <scottjehl> nice one
[14:37:22] <scottjehl> it's fun watching the dom inspector while navigating in this branch
[14:37:24] <scottjehl> heh
[14:37:28] <_nickel> :D
[14:37:43] <_nickel> a couple more tests there and I think the listview will be covered
[14:38:05] <scottjehl> awesome
[14:38:10] <_nickel> scottjehl: and I was hoping to figure out a better way to track child pages
[14:38:16] <scottjehl> so the only other case I was thinking about here...
[14:38:43] <scottjehl> if a child page is hidden, and the newly shown page is unrelated to the nested list set, we should remove the set
[14:38:55] <scottjehl> but I was seeing oddness when I did that
[14:39:07] <scottjehl> clicking back to the nested page wouldn't regenerate it
[14:40:22] <_nickel> yah you have to keep re-creating the subpages :(
[14:40:27] <_nickel> not worth it right now imo
[14:41:00] <scottjehl> k
[14:41:07] <scottjehl> so how do you feel about this feature
[14:41:20] <_nickel> I think its much more in line with what developers expect
[14:41:40] <_nickel> but I think the expectation that the page would always be there probably exists in a couple dark corners of the library
[14:41:42] <scottjehl> yeah
[14:42:03] <scottjehl> maybe
[14:42:12] <_nickel> also I think it would be cool if we could shorten the data attr :)
[14:42:20] <scottjehl> I was surprised to find no tests assumed that
[14:42:23] <scottjehl> pretty nice
[14:42:31] <_nickel> yes!
[14:42:33] <_nickel> integration tests!
[14:42:33] * scottjehl gestures hat tip
[14:42:37] <_nickel> hahah
[14:42:51] <scottjehl> yeah the option name isn't great
[14:43:01] <scottjehl> at least removing the gerund
[14:43:20] <_nickel> whoa grammar school throw back
[14:43:39] <_nickel> indeed
[14:43:57] <_nickel> we can probably use the context of its definition on the page too
[14:44:50] <scottjehl> http://t0.gstatic.com/images?q=tbn:ANd9GcS1Kcwqo70hfDHiQ8IdIC5xXD8kGoYxEiF8nqqXh5znzHJDx3WR_A
[14:45:08] <scottjehl> hmm. what do you mean?
[14:45:47] <_nickel> well unless we place to cache pages elsewhere in the future `dom` may not be necessary
[14:46:03] <_nickel> though I can see the idea is to make sure people don't think we're doing some other type of caching
[14:46:21] <_nickel> since that term gets re-used everywhere for all things
[14:48:25] <_nickel> is there any reason we can't just call it data-<insert namespace>-cache?
[14:49:54] * _nickel is just spitballing
[15:00:10] <scottjehl> well, maybe we could get away from the word cache
[15:00:31] <scottjehl> it's more about removal on hide
[15:08:44] <scottjehl> definitely not tied to anything here
[15:08:56] <scottjehl> I just don't want to make it sound like we're actually caching anything
[15:09:03] <scottjehl> in a traditional sense
[15:09:05] <scottjehl> or localstorage
[15:09:07] <scottjehl> or whatever
[15:10:06] <scottjehl> hence the dom part
[15:15:25] <scottjehl> anyway, pending whatever tests you have, this branch has my approval
[15:16:34] <scottjehl> Todd and I are going to give it some device testing in the morning, mainly to see what sort of caching actually happens on certain devices. Like, whether they hit a limit early on and start hitting the server every time a page is re-requested or what
[15:39:35] <_nickel> scottjehl: cool I'll just be adding tests and then I might look at the select menu split up
[15:39:46] <_nickel> gseguin: I'll post on that pull request just to let him know its still on our radar
[15:39:52] <_nickel> and add it to my queue
[15:40:08] <gseguin> _nickel: great, thank you
[15:40:28] <scottjehl> thanks!
[15:41:20] <gseguin> scottjehl: can you take a quick look at https://github.com/jquery/jquery-mobile/pull/2102
[15:41:28] <gseguin> I tested it, it works fine
[15:41:52] <gseguin> if you don't have strong feelings against it I'm going to land it
[15:42:30] <scottjehl> looking
[15:42:32] <gseguin> it basically adds a data-option-index to each option for quicker retrieval of the option
[15:42:37] <gseguin> index
[15:44:20] <_nickel> gseguin: I have to take a closer look but I'm always wary of managing extra state :(
[15:45:23] <scottjehl> hmm yeah
[15:45:25] <scottjehl> logic seems ok
[15:46:04] <gseguin> _nickel: in that case, I think kpozin's got a point though
[15:46:12] <_nickel> ahh I'm looking now
[15:46:19] <_nickel> is he just using the direct array reference?
[15:46:47] <_nickel> need to read closer
[15:47:23] <gseguin> line 378 when he builds each option, he adds data-option-index to the markup
[15:47:36] <scottjehl> sorry folks, gotta run but I'll be on later
[15:47:45] <scottjehl> this is close enough I'll defer to your judgement
[15:47:51] <_nickel> gseguin: does this work on refresh?
[15:48:03] <scottjehl> ..not that I wouldn't anyway
[15:48:05] <scottjehl> :)
[15:48:07] <scottjehl> later!
[15:48:11] <gseguin> see you later scott
[15:48:14] <gseguin> :)
[15:48:15] <_nickel> do we have a select menu refresh?
[15:48:29] <gseguin> _nickel: I don't think that applies here
[15:48:56] <gseguin> I mean the select refresh method calls _buildList
[15:49:10] <gseguin> so that should be fine
[15:49:30] <_nickel> thats where the optionElems is set then?
[15:50:29] <gseguin> line 417
[15:53:07] <gseguin> _nickel: still looking?
[15:53:18] <_nickel> you can land it
[15:53:21] <_nickel> I'll look later
[15:53:56] <gseguin> ok, I don't mind putting it aside
[15:54:16] <gseguin> if you think it's can be risky
[15:54:47] <gseguin> s/it's/it/
[16:00:12] <scottjehl> hey btw not sure if I'll get to it tonight but we need to add a unit test for each plugin that now has a initSelector option.
[16:00:28] <scottjehl> per https://github.com/jquery/jquery-mobile/commit/263193f4909df7516cd3969122502c0c779dc079
[16:01:14] <scottjehl> basically, I think we can just append an element with some obscure classname, then change the initSelector to match that classname, and trigger "create" on the parent element to make sure it inits
[16:02:34] <scottjehl> filed an issue https://github.com/jquery/jquery-mobile/issues/2157
[16:02:36] <scottjehl> later!
[19:10:18] <Murf_> hello all
[19:10:20] <Murf_> are there any plans for a better fixed header/footer while scrolling for jqm please? if not, are the bugs being addressed soon? for example, quite often the header/footer does not reappear after a scroll?
