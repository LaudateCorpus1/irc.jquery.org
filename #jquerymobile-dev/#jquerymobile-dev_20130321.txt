[01:51:41] <jqmobilecommit> 01[13jquery-mobile01] 15agcolom pushed 1 new commit to 061.3-stable: 02http://git.io/U6ANfg
[01:51:41] <jqmobilecommit> 13jquery-mobile/061.3-stable 14272368a 15Anne-Gaelle Colom: Fixed typos in rangeslider.js comments(cherry picked from commit 2a44f5ceb13f310960e727dbf6c9da19e91a9a31)
[01:53:37] <agcolom> gseguin: sorry I missed you, looks like I've managed :-) Thanks a lot gseguin and gnarf for your help!
[01:54:06] <agcolom> Going to work now... catch you all later!
[02:06:59] <travis-ci> [travis-ci] jquery/jquery-mobile#123 (1.3-stable - 272368a : Anne-Gaelle Colom): The build is still failing.
[02:06:59] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/e48173fc6ba9...272368a9dbbb
[02:06:59] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5681444
[02:14:26] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #302: STILL FAILING in 19 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/302/
[03:48:25] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06master: 02http://git.io/eL3oWg
[03:48:25] <jqmobilecommit> 13jquery-mobile/06master 1425abed5 15Jasper de Groot: Demos: changed example to match the description.
[04:03:31] <travis-ci> [travis-ci] jquery/jquery-mobile#124 (master - 25abed5 : Jasper de Groot): The build passed.
[04:03:31] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/2a44f5ceb13f...25abed51b026
[04:03:31] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5683794
[04:12:29] <jqmobilecommit> [13jquery-mobile] 15Marthyn opened issue #5796: Link to page doesn't work after update (1.2.0 => 1.3.0)  02http://git.io/VrebZg
[07:08:38] <frequent> uGoMobi: afternoon
[07:09:21] <uGoMobi> hey frequent 
[07:09:43] <frequent> I will check the PR again tonight. Some extra lines to remove...
[07:10:05] <frequent> I also more or less have a filter widget that works for table and listviews. 
[07:10:13] <uGoMobi> cool!
[07:10:42] <uGoMobi> filter widget will be for 1.4 but would be nice if we can fix the missing table refresh method in 1.3.1
[07:10:42] <frequent> I can clean it up and then send you a sample page like last time?
[07:10:50] <frequent> yeah
[07:11:15] <frequent> the tests were passing here, so I hope it's nothing serious
[07:11:22] <uGoMobi> frequent: for the filter widget I think arschmitz might be the right person to ask for feedback
[07:11:27] <frequent> ok
[07:11:35] <frequent> will do
[07:11:36] <arschmitz> Hi frequent
[07:11:55] <frequent> arschmitz: that was fast
[07:11:59] <frequent> Hey
[07:12:13] <arschmitz> pings me anyone says my name :)
[07:12:43] <uGoMobi> frequent: this whole travis ci thing is new to me too so I am not sure if the failing test shows a legit bug
[07:12:44] <frequent> even without : ?
[07:12:54] <frequent> uGoMobi: ok
[07:12:57] <arschmitz> yup
[07:13:15] <frequent> so I wait for feedback
[07:13:22] <uGoMobi> but phantomjs did timeout on the table test and not on just a random test
[07:13:52] <frequent> ok. The popup-visibility test is taking a lot of time to finish even without my added tests
[07:14:10] <frequent> on column-toggle
[07:14:41] <uGoMobi> frequent: after you are done with you changes I will pull the commits in a local branch and test
[07:14:52] <frequent> ok. will do tonight.
[07:14:57] <uGoMobi> great
[07:15:38] <frequent> arschmitz (:) give me a day or two to clean up my filter-widget and set up a test page. Maybe something in there you can use.
[07:15:46] <arschmitz> frequent i have 2 pieces of feed back right off
[07:16:00] <frequent> ok
[07:16:18] <arschmitz> these are not about what you are doing specificly more with our mistakes in first place
[07:16:39] <frequent> np. 
[07:16:59] <arschmitz> the toggle and reflow tables are essentilly written wrong from the start :(
[07:17:11] <frequent> :-)
[07:17:14] <arschmitz> these should be extensions on the table widget and they are not
[07:17:30] <arschmitz> this is something im going to fix in 1.4 for sure
[07:17:54] <frequent> ok
[07:18:18] <arschmitz> and im not sure we could add a refresh method for 1.3.1 or not
[07:18:42] <arschmitz> because its techniclly not a bug its a missing feature that SHOULD be there but feature none the less
[07:19:18] <arschmitz> ill check with johnbender on that hes kinda the one that says what we can get away with for stuff like this
[07:19:21] <frequent> technically different, physically missing
[07:19:29] <frequent> ok
[07:19:55] <arschmitz> So i guess im just not sure if you should spend to much time on this with those two things in mind
[07:20:22] <frequent> I see
[07:20:41] <frequent> well. refresh is done, so use it as you see it fit.
[07:21:01] <arschmitz> ok cool if we can get it into 1.3.1 that will be great
[07:21:07] <arschmitz> but need to check on that
[07:21:13] <frequent> sure
[07:21:30] <arschmitz> did i also see you were doing something with listview filter?
[07:21:52] <frequent> yes. I made the filter a widget, so I can use it in both listview and tables.
[07:22:10] <frequent> "made in widget" in my white-belt JQM
[07:22:21] <jqmobilecommit> [13jquery-mobile] 15rizvan opened issue #5797: Flickering issue on ios using history.back()  02http://git.io/Gof-cA
[07:23:23] <frequent> So question would be your 1.4 slated filter going to be an extension to listview/table/??? or is it going into direction of separate widget?
[07:25:18] <kayo> it's ok to use jqm 1.3.0 with jquery 1.9.0?
[07:25:53] <arschmitz> i had not thought of making it seperate but really like the idea
[07:26:34] <arschmitz> frequent: this was another one where it was not really done right to start and should have either been a widget or extension on listview widget
[07:26:54] <frequent> :-)
[07:26:57] <arschmitz> i like your idea to make it stand alone though so it can work on tables really smart
[07:27:20] <arschmitz> we have a few other ones like this too that are not actually extensions or widgets that should be
[07:27:25] <frequent> wait a sec. I might have a page with not-minified code, so you can have a look
[07:27:35] <arschmitz> on my todo for 1.4 is to make these all proper widgets / extensions
[07:28:02] <arschmitz> yeah very intrested in the filter widget for sure
[07:28:22] <mspisars> all is there a task list of 1.4?
[07:28:43] <arschmitz> mspisars there are a few wikis with informal thoughts / lists 
[07:28:55] <mspisars> mainly is it a goal for 1.4 to have all widgets be converted to ui widget factory?
[07:28:57] <arschmitz> but we are still in very early planning stages and nothing is finalized yet
[07:29:12] <mspisars> ok
[07:29:23] <arschmitz> it is one of our goal to become 100% compliant with widget factory guidlines
[07:29:28] <mspisars> but in these early stages
[07:29:29] <mspisars> ok
[07:29:35] <mspisars> for 1.4?
[07:29:40] <mspisars> or in general?
[07:29:43] <arschmitz> yes that one will happen for sure
[07:29:50] <mspisars> nice
[07:29:51] <mspisars> ty
[07:31:57] <arschmitz> no prob thats been one of my big things iv been pushing for :)
[07:32:12] <frequent> arschmitz: found it. http://bit.ly/ZfsH7T - even uncompressed JS... check source "latest.js", search for "mobile.filterview". I did this a while ago to see if it works, so it's just plucked together. I took the listview filter extension and tried to switch to container (listview/table/custom select) and elements (li, tr,xyz). 
[07:32:36] <frequent> needs a lot of polish... but maybe a good start
[07:34:25] <uGoMobi> arschmitz: when we noticed the missing refresh method for table you, toddmparker and me decided we consider it as a bug and set milestone 1.3.1
[07:34:45] <arschmitz> did we cool it was a while ago couldnt remember 
[07:35:01] <arschmitz> should still probably check with johnbender 
[07:35:20] <arschmitz> id like it to be in 1.3.1 for sure its a biggie
[07:36:03] <arschmitz> frequent: like the idea the implementation would need a little work but a good starting point for sure
[07:36:26] <arschmitz> better start the the current listview filter :)
[07:37:05] <gseguin> mornin'
[07:37:13] <arschmitz> morning gseguin
[07:37:33] <frequent> :-)
[07:37:46] <gseguin> so are we on for 1.2.1 today?
[07:37:50] <arschmitz> frequent: biggest piece of feed back on this would be that EVERYTHING is in the _create method 
[07:38:09] <gseguin> toddmparker: ^
[07:38:11] <frequent> yeah... 
[07:38:19] <arschmitz> you should try and make more discreet methods that acomplish small pieces
[07:38:26] <frequent> should have minified... :-D
[07:38:27] <arschmitz> its a lot easier to test and debug that way
[07:38:57] <frequent> i see
[07:39:30] <arschmitz> but its easy to break things out into seperate methods when you have a working starting point
[07:40:11] <arschmitz> i really like this if you do any more work on it make sure to let me / us know i think this will probably be a good starting point for a filter widget for 1.4
[07:41:29] <frequent> ok. I was going to start working on an updated version, so yes. 
[07:42:02] <frequent> trying to add selects
[07:42:14] <arschmitz> cool
[07:42:15] <frequent> (and of course fitting some more code into _create)
[07:42:20] <arschmitz> :)
[07:42:44] <arschmitz> also if your working on it you should take a look at the widget factory and what methods it promises
[07:42:57] <frequent> promise = provide
[07:42:59] <frequent> ?
[07:43:05] <arschmitz> not exactly
[07:43:10] <arschmitz> hold on getting a link
[07:43:16] <frequent> thx
[07:44:12] <arschmitz> http://api.jqueryui.com/jQuery.widget/#quick-nav
[07:44:30] <arschmitz> under methods you will see 5 at the bottom with out a _ at begining
[07:44:46] <arschmitz> these should be availible present and handled in all widgets
[07:45:02] <arschmitz> im the first to admin we are not following this ourselves right now
[07:45:09] <arschmitz> but we are fixing that :)
[07:45:28] <frequent> ok. 
[07:45:53] <frequent> So let me run for a few days and then hopefully have a an updated version to dissect?
[07:46:23] <arschmitz> sure no rush we are still planning and not a ton of work going on yet 
[07:46:43] <arschmitz> but i personally think you have the right idea where to go with the filter
[07:48:31] <frequent> Cool. Thx. 
[07:49:49] <frequent> arschmitz: unrelated question regarding buttonmarkup()
[07:50:34] <frequent> is the buttonElements only stored for on the button elements to recognize previously enhanced buttons when calling buttonmarkup() again?
[07:51:19] <arschmitz> buttonmarup our mortal enemy lol
[07:51:36] <frequent> yes.
[07:51:54] <arschmitz> another thing we are looking to revamp in 1.4 
[07:52:05] <arschmitz> hoping to pretty much eliminate it for most things
[07:53:39] <frequent> adding data(buttonElems) just is a performance eater. At least when I tried. 
[07:53:59] <arschmitz> _|Nix|_: you around?
[07:54:55] <frequent> arschmitz: http://bit.ly/YI8lV5 - test 2 with buttonElements, test 3 without.
[07:57:24] <arschmitz> yeah looks like your right unless im missing something _|Nix|_ has done some perf work on buttonMarkup recently so id like to see what he thinks here
[07:57:54] <arschmitz> the down side of not doing this is it wont prevent re-enhancment
[07:58:44] <frequent> but there must be a "cheaper" way :-)
[07:59:06] <arschmitz> yeah very possible would have to put some thought into it
[08:00:00] <arschmitz> there has been talk though of eliminating buttonMarkup almost completely though and simplifying the actual button markup so it wont have to be created with a function
[08:00:50] <arschmitz> but the planning for that just started literally last night lol so cant really say much yet
[08:01:45] <frequent> "there has been talk of" :-)
[08:02:25] <arschmitz> yea sorry dont have any more details lol
[08:04:21] <frequent> np. I recently did a small page, where I had to add JQM CSS to existing no JQM-markup, so for buttons, I just had the link to work with. 
[08:04:38] <frequent> not easy, but worked.
[08:05:02] <frequent> link = <input>
[08:12:48] <doesallmagic> Project jQuery Mobile Git build #4952: FAILURE in 0.47 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Git/4952/
[08:13:04] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 06master: 02http://git.io/3QSxZg
[08:13:04] <jqmobilecommit> 13jquery-mobile/06master 143bffa09 15Ghislain Seguin: Updated to reflect grunt changes
[08:34:20] <travis-ci> [travis-ci] jquery/jquery-mobile#126 (master - 3bffa09 : Ghislain Seguin): The build was broken.
[08:34:20] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/25abed51b026...3bffa099d50d
[08:34:20] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5689790
[10:13:57] <toddmparker> morning all
[10:14:18] <gseguin> hey toddmparker 
[10:14:25] <gseguin> release day?
[10:17:20] <uGoMobi> hey todd
[10:17:36] <uGoMobi> hey gseguin 
[10:17:42] <uGoMobi> yeahhh let's do another release
[10:17:48] <gseguin> hi Jasper
[10:18:34] <toddmparker> gseguin: yeah, i'm game to release 1.2.1 today
[10:18:45] <toddmparker> blog is ready
[10:18:49] <toddmparker> let me post a PDF preview
[10:18:56] <gseguin> toddmparker: do you want me to do a test deploy?
[10:19:03] <toddmparker> yes please
[10:19:17] <toddmparker> that way i can test all the can links in the post and the zip
[10:19:44] <scott_gonzalez> FYI: agcolom has asked about the collapsible widget's collapse and expand events showing the event prefix.
[10:20:04] <scott_gonzalez> If the events do not go through ._trigger(), then they are not widget events, and as such cannot be documented as widget events.
[10:20:26] <scott_gonzalez> If they are part of the widget, you need to update the code to use `this._trigger()` and not `elem.trigger()`
[10:21:01] <uGoMobi> scott_gonzalez: yeah we have to update the code
[10:23:19] <gseguin> toddmparker: deployed
[10:26:29] <jqmobilecommit> [13jquery-mobile] 15uGoMobi opened issue #5798: Collapsible expand and collapse events  02http://git.io/MNhg1g
[10:27:36] <toddmparker> thanks gseguin 
[10:27:52] <toddmparker> agenda: https://docs.google.com/document/d/1XnCqL9bSL0Lqr92yurS51sxNJ0nknsDJFp8ot-jYeFo/edit#
[11:01:52] <travis-ci> [travis-ci] jquery/jquery-mobile#126 (master - 3bffa09 : Ghislain Seguin): The build was broken.
[11:01:52] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/25abed51b026...3bffa099d50d
[11:01:52] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/5689790
[11:45:43] <johnbender> _|Nix|_: wrt to that issue
[11:45:55] <johnbender> the first one appears to be releated to the chrome initial popstate
[11:47:01] <_|Nix|_> johnbender: Yes. The initial popstate causes the navigate event to fire, causing a superfluous pagebeforechange.
[11:47:23] <_|Nix|_> johnbender: ... because _handleHashChange ends up calling changePage.
[11:47:27] <johnbender> _|Nix|_: I thought the pagebeforechange came as a consequence of loading the initial page
[11:47:45] <_|Nix|_> johnbender: There are 3 - count 'em 3 pbc in Chrome.
[11:47:51] <johnbender> _|Nix|_: :/
[11:48:00] <_|Nix|_> johnbender: One from init, and two because of the superfluous changePage call.
[11:48:05] <johnbender> I had code in there to ignore that initial popstate
[11:48:14] <johnbender> but it doesn't prevent the event itself from firing
[11:48:18] <_|Nix|_> johnbender: Yes, but the code is only in the navigator.
[11:48:22] <johnbender> correct
[11:48:26] <_|Nix|_> johnbender: The code is not present in the navigate event.
[11:48:32] <johnbender> correct
[11:48:52] <johnbender> navigate is meant to be as elemental as popstate or hashchange
[11:48:53] <_|Nix|_> johnbender: So, the navigate popstate handler fires and generates a navigate event unconditionally.
[11:49:05] <johnbender> purely a  wrapper
[11:49:20] <_|Nix|_> johnbender: Then we need to handle it in _handleHashChange ...
[11:49:41] <johnbender> _|Nix|_: or bind an return false based on some initial delay globally
[11:49:42] <_|Nix|_> johnbender: handleHashChange should not call changePage in response to the initial popstate-turned-navigate.
[11:49:46] <johnbender> _|Nix|_: same thing maybe
[11:49:51] <johnbender> _|Nix|_: fact
[11:50:04] <johnbender> _|Nix|_: haven't looked at the second issue
[11:50:18] <_|Nix|_> johnbender: In a sense it makes no sense that pbc ends up happening because obviously toPage === fromPage ...
[11:50:42] <_|Nix|_> johnbender: However, I think that short-circuit happens only after pbc is already fired.
[11:51:08] <johnbender> _|Nix|_: pbc is always fired twice
[11:51:11] <johnbender> that's "by design"
[11:51:11] <_|Nix|_> johnbender: So, we need to prevent changePage from getting called altogether.
[11:51:19] <_|Nix|_> johnbender: Yes, I know.
[11:51:21] <johnbender> kk
[11:51:41] <_|Nix|_> johnbender: However, on initial page load it should only be fired once - from the changePage call that init makes.
[11:51:54] <johnbender> correct
[11:52:08] <johnbender> we might have to just do the same thing that's done in the navigator
[11:52:14] <johnbender> :(
[11:52:19] <johnbender> or tag the even that's triggered
[11:52:25] <johnbender> so that one can pass through our delay
[11:52:48] <johnbender> hacks on hacks on hacks
[11:53:50] <_|Nix|_> johnbender: We can do a preventDefault in navigator, and return early in the navigate event.
[11:54:13] <_|Nix|_> johnbender: However, if the navigator is not present, we're outta luck, because nobody'll preventDefault.
[11:57:51] <johnbender> _|Nix|_: hmm not sure what you mean
[11:58:41] <_|Nix|_> johnbender: If we preventDefault() on the initial popstate before the navigate handler is fired, we can say if ( e.isDefaultPrevented() { return; } in the navigate popstate handler.
[11:59:21] <_|Nix|_> johnbender: We can do that from the navigator popstate handler, however, if a dev chooses not to use the navigator, but chooses to use only the navigate event, then that won't help us.
[12:00:20] <johnbender> _|Nix|_: do you mean { return false; }
[12:00:28] <johnbender> ?
[12:00:48] <johnbender> return would still allow the navigate event to trigger
[12:00:54] <johnbender> which appears to be the cause of the issue
[12:01:00] <johnbender> unless you're talking about fixing it some other way
[12:02:43] <_|Nix|_> johnbender: Nono.
[12:02:48] <_|Nix|_> johnbender: Here's the scenario:
[12:03:01] <_|Nix|_> johnbender: navigator's popstate handler fires.
[12:03:06] <_|Nix|_> johnbender: It prevents default.
[12:03:16] <_|Nix|_> johnbender: navigate's popstate handler fires.
[12:03:24] <_|Nix|_> johnbender: It finds that the default has been prevented.
[12:03:36] <_|Nix|_> johnbender: ... so it exits before creating or triggering anything.
[12:03:40] <johnbender> kk
[12:03:48] <johnbender> makes sense
[12:04:08] <johnbender> are there implications when preventing default on popstate/hashchange?
[12:04:08] <_|Nix|_> johnbender: However, there's a problem.
[12:04:18] <johnbender> yah I understand that part
[12:04:20] <_|Nix|_> johnbender: What if there is no navigator.
[12:04:22] <johnbender> removing navigator
[12:04:24] <_|Nix|_> OK.
[12:04:42] <_|Nix|_> johnbender: So, that's why it's probably better to copy the code from navigator.
[12:05:15] <johnbender> _|Nix|_: copy too?
[12:05:34] <johnbender> _|Nix|_: I'm fine with requiring the nav event and navigator as a dep for popup right now
[12:06:09] <johnbender> I know we want to build standalon widgets
[12:06:31] <johnbender> but that's a major overhaul to build it without history then extend it to support
[12:08:46] <_|Nix|_> johnbender: OK, but we still need to modify navigate to not do anything if the popstate event's default has been prevented.
[12:09:11] <johnbender> _|Nix|_: the rest of navigate shoudl trigger off of the navigate event
[12:09:18] <johnbender> unless I'm misunderstanding again
[12:09:56] <_|Nix|_> johnbender: The fundamental question is this: Should the navigate event be triggered if the default on the source popstate event has been prevented?
[12:10:11] <johnbender> probably not no
[12:10:18] <johnbender> which makes sense
[12:10:23] <_|Nix|_> johnbender: OTOH, there is another solution.
[12:10:45] <_|Nix|_> johnbender: In _handleHashChange, we can check event.originalEvent.isDefaultPrevented() and return right away.
[12:11:00] <_|Nix|_> johnbender: ... because event.originalEvent will be popstate.
[12:11:18] <johnbender> _|Nix|_: it's probably "safer" to move it down the stack
[12:11:25] <johnbender> but the other solution makes sense to me
[12:12:22] <johnbender> _|Nix|_: just another thought, there's already a check for default prevention in the beforenavigate event
[12:14:04] <_|Nix|_> johnbender: Actually, if we preventDefault from navigator we can go pretty far.
[12:14:30] <_|Nix|_> johnbender: _handleHashChange requires navigator.
[12:14:36] <johnbender> yes
[12:15:03] <johnbender> that's what I was saying there shouldn't be refs to popstate/hashchange anywhere in the library anymore
[12:15:12] <_|Nix|_> johnbender: So, if navigator prevents default, then we can avoid calling _handleHashChange, and both popup and pages will work just fine ...
[12:15:21] <johnbender> _|Nix|_: lets hope so lololol
[12:15:29] <johnbender> shit is fragile
[12:16:05] <_|Nix|_> johnbender: Well, there will be refs to event.originalEvent, which we all know is a popstate - but it could be a hashchange. We no longer care, except for its isDefaultPrevented() value.
[12:16:22] <johnbender> yar
[12:16:35] <johnbender> _|Nix|_: it might still be nice just not to trigger the navigate for that initial popstate
[12:16:44] <johnbender> that seems like a reasonable feature of the navigator
[12:16:56] <johnbender> to normalize the browsers treatment of navigation o.o
[12:17:13] <_|Nix|_> johnbender: Yeah, and I guess we don't need to worry about the case when the navigator is absent, because in that case, the page lifecycle is also absent.
[12:17:23] <johnbender> yes
[12:18:07] <_|Nix|_> johnbender: OK. So, conclusion (correct me if I'm wrong): navigator does a preventDefault(), and navigate does nothing in response to a popstate whose default has been prevented.
[12:18:29] <johnbender> worth a try
[12:18:34] <johnbender> the tests will tell lolol
[12:18:50] <johnbender> _|Nix|_: still worth looking into doing it as a beforenavigate binding
[12:19:01] <johnbender> but it doesn't much matter
[12:19:05] <_|Nix|_> johnbender: OK. Then the only thing we need to make sure is that the navigator is loaded before the navigate event for those that depend on both.
[12:19:31] <johnbender> _|Nix|_: the events in there now HAVE to fire before the navigate versions do
[12:19:49] <johnbender> that is the events bindings for popstate and hashchange in navigator
[12:19:54] <johnbender> otherwise the whole thing is brokenm
[12:20:12] <_|Nix|_> Oh, OK. Great!
[12:20:13] <johnbender> so it should be fine
[12:20:39] <_|Nix|_> johnbender: Alright. I'll try this out.
[12:20:54] <_|Nix|_> johnbender: This will have the added benefit of unifying our behaviour on FF and Chrome.
[12:20:54] <johnbender> _|Nix|_: the reason taht works is because the navigate event does the binding of haschange and popstate on the first binding of the navigate event
[12:21:00] <johnbender> that is the setup method of the custom event
[12:21:09] <_|Nix|_> johnbender: Oh, that's right!
[12:21:17] <_|Nix|_> johnbender: Of course!
[12:21:36] <johnbender> shakey dep management there but it works 
[12:21:59] <johnbender> toddmparker: are we meeting today or tomorrow
[12:21:59] <johnbender> ?
[12:23:41] <johnbender> _|Nix|_: actually I had intended to unify the two bindings in navigator as a beforenavigate binding
[12:23:45] <johnbender> just never got around to it
[12:24:17] <johnbender> not worth bothering now
[12:24:19] <johnbender> just wanted to point that out
[12:28:03] <_|Nix|_> johnbender: OK ... here goes nothing ... I mean the unit tests, not nothing ... two dialog tests have already failed :/
[12:28:13] <johnbender> sigh
[12:28:24] <_|Nix|_> Hmmm ... navigation reset timeout ...
[12:28:27] <johnbender> _|Nix|_: maybe the less intrusive method
[12:28:51] <_|Nix|_> johnbender: OK. I'll try that instead.
[12:28:55] <johnbender> just tag the internal event and deal with that in the hashchangehandler
[12:29:25] <toddmparker> johnbender - let's meet now…was just letting you and _|Nix|_ finish that conversation :)
[12:29:40] <_|Nix|_> toddmparker: Let's do it.
[12:29:58] <toddmparker> now still work for uGoMobi and arschmitz and gseguin ?
[12:30:03] <uGoMobi> sure
[12:30:27] <arschmitz> yeah
[12:31:41] <toddmparker> cool
[12:32:11] <toddmparker> https://plus.google.com/hangouts/_/f4b226f76105c5dbe14768a1f24b5a14fd2fca29
[12:33:46] <johnbender> gseguin: joining?
[12:33:53] <gseguin> yup
[12:48:06] <mspisars> is 1.3.1 supposed to come out today?
[12:48:14] <arschmitz> no
[12:48:27] <mspisars> soon(ish)?
[12:48:57] <arschmitz> ~10 days
[12:49:04] <mspisars> k, ty.
[13:06:12] <frequent> uGoMobi: I cleaned up the code and updated my example pages jqm.js with the PR-code. Still works ok. Unit tests I cannot check from here.
[13:09:20] <uGoMobi> frequent: thanks!
[13:09:27] <uGoMobi> frequent: test are running now https://travis-ci.org/jquery/jquery-mobile/builds/5696824
[13:09:49] <frequent> I saw it. But unless well-formed is a fail criteria, the result should be the same :-)
[13:09:59] <uGoMobi> looks like they are failing
[13:10:06] <frequent> :-(
[13:10:57] <agcolom> arschmitz: hi :-) did you see my comment on the rangeslider issue?
[13:11:25] <uGoMobi> frequent: will give it a look with arschmitz later
[13:11:27] <arschmitz> not yet in a meeting but i will look after which number again?
[13:11:36] <uGoMobi> (we are in a meeting now)
[13:11:56] <agcolom> sorry
[13:12:25] <agcolom> arschmitz: https://github.com/jquery/jquery-mobile/issues/5773#issuecomment-15147035
[13:13:06] <frequent> uGoMobi: ok. check the custom event I'm triggering in unit tests (to refresh the table) and the last column-toggle refresh tests. I'd bet on one of them.
[13:50:49] <arschmitz> agcolom oh yes sorry i did see that already 
[13:51:05] <arschmitz> dual just isnt handling reset at all and it needs to
[13:51:14] <agcolom> is that an easy to fix?
[13:51:25] <arschmitz> fairly ill do it for 1.3.1
[13:51:47] <arschmitz> any slider things you see feel free to asign them to me i did that one already
[13:52:02] <agcolom> thank you :-)
[14:19:24] <arschmitz>  http://bit.ly/YI8lV5 
[14:29:33] <frequent> arschmitz: don't say you don't like the way I built the HTML :-)
[15:13:26] <_|Nix|_> johnbender: Hey! Doing the do-not-call-_handleHashChange thing is not too bad. Only two test failures, and one is a nav reset timeout.
[15:13:40] <johnbender> _|Nix|_: nice
[15:13:46] <johnbender> that sounds promising
[15:13:59] <_|Nix|_> johnbender: Well, actually only one test failuer, because the nav reset timeout is causing more assertions than there are expectations.
[15:14:43] <_|Nix|_> johnbender: Definitely.
[15:15:46] <_|Nix|_> johnbender: OK, I don't get it. With --suites=dialog/ it runs dialog successfully, then data-attr-init-tests.html, then dialog again, and with two failures O_o
[15:16:29] <johnbender> weak
[15:16:32] <johnbender> super duper weak
[15:16:43] <johnbender> _|Nix|_: double check that it's the same test
[15:16:50] <johnbender> _|Nix|_: it might just be the test suite output
[15:16:53] <_|Nix|_> johnbender: Well, at least the timeout is consistent.
[15:16:53] <johnbender> gseguin: ^
[15:16:56] <johnbender> yes
[15:16:58] <johnbender> that's something
[15:17:00] <_|Nix|_> johnbender: ... somewhat ...
[15:18:07] <_|Nix|_> johnbender: OK, if I run --suites=dialog/index.html it completes successfully.
[15:18:18] <_|Nix|_> johnbender: ... and only one suite is run.
[15:19:31] <_|Nix|_> johnbender: --suites=dialog/data-attr-init-tests.html,dialog/index.html is the quickest way to produce the failure ...
[15:22:24] <johnbender> _|Nix|_: interesting does it persist an instance of phantom?
[15:22:37] <johnbender> gseguin: ^
[15:26:39] <_|Nix|_> johnbender: I'll push the branch so you guys can see it - hopefully.
[15:30:24] <doesallmagic> Project jQuery Mobile Git build #4953: STILL FAILING in 0.54 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Git/4953/
[15:30:34] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof created 06fix-5775 (+2 new commits): 02http://git.io/6dQiVg
[15:30:34] <jqmobilecommit> 13jquery-mobile/06fix-5775 14320fbba 15Gabriel Schulhof: Navigator: Prevent default on initial popstate.
[15:30:34] <jqmobilecommit> 13jquery-mobile/06fix-5775 14c6dd725 15Gabriel Schulhof: Navigation: If the default is prevented on the originalEvent of "navigate", do not go into _handleHashChange. Fixes #5775.
[15:30:43] <_|Nix|_> johnbender, gseguin: ^
[15:32:32] <_|Nix|_> OK, well f0rk me dead ... now the tests pass ...
[15:32:46] <gseguin> toddmparker: what happened to our release?
[15:32:48] <_|Nix|_> I'll run the full suite ...
[15:33:11] <gseguin> johnbender, _|Nix|_: looks like you guys have some new findings on these failures
[15:34:15] <johnbender> gseguin: _|Nix|_ is working on something unrelated to the failures but he's getting odd behavior
[15:34:20] <johnbender> gseguin: that is tests pass with one page
[15:34:29] <johnbender> gseguin: fail when there's a preceding page
[15:34:42] <johnbender> gseguin: does the new phantom helper keep a single instance for all the test pages?
[15:34:52] <johnbender> previously it would shell out for each test page
[15:35:09] <johnbender> (that would cause url state conflict)
[15:35:24] <gseguin> that's a good question
[15:35:49] <gseguin> it would be simple to figure that out by looking at grunt-contrib-qunit and how it uses phantomjs
[15:38:36] <_|Nix|_> OK. The failure is still there ... I'll need to find another minimal test case.
[15:40:20] <_|Nix|_> K, NM. grunt test --force --suites=dialog/data-attr-init-tests.html,dialog/index.html will still break.
[15:40:43] <_|Nix|_> So, if you guys run ^ on fix-5775 you should see the test failures - hopefully.
[15:49:57] <_|Nix|_> johnbender: I think each test is a different process. However, the phantomjs process seems to stick around long after it's done testing.
[15:56:44] <toddmparker> gseguin: Oops, too many meetings
[15:56:51] <toddmparker> First thing tomorrow
[16:05:52] <gseguin> toddmparker: ok
[16:06:25] <toddmparker> I'm a space cadet
[16:07:08] <gseguin> heh, so am I :)
[23:56:22] <_|Nix|_> ?tell johnbender The timeout happens even if you just run --suites=dialog/index.html ... so, basically, if any one phantomjs process is still running when the test runs, the test will fail.
[23:57:07] <_|Nix|_> ?tell johnbender I'm not sure if it's because the process is reused, or if it's because starting the second process is influenced by the presence of the first.
[23:57:11] <_|Nix|_> johnbender: ^
[23:58:27] <_|Nix|_> johnbender: ... and, of course, having said that, I have just observed a counterexample ... no existing phantomjs process was running, and it /still/ timed out :/
[23:59:22] <_|Nix|_> johnbender: I think our superfluous call to changePage was making sure that the pagechange event navReset expects will always reach it on startup.
