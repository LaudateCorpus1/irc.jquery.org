[09:18:00] <toddparker> jey kinblas - that's cool that you have the inside scoop on the  scrolling stuff is ios
[09:18:05] <toddparker> so what's the story?
[09:19:46] <kinblas> toddparker: so it *DOES* have momentum despite some reports I've seen
[09:19:56] <kinblas> nested isn't supported yet
[09:20:03] <kinblas> here's one that's going to bit folks
[09:20:14] <kinblas> transformations now affect scroll width/height
[09:20:22] <kinblas> s/bit/bite
[09:20:55] <kinblas> so if you weren't doing overflow: hidden before you're going to get scrollbars when you transform things to the right or down
[09:21:14] <kinblas> also the reason a new property was chosen to turn it on
[09:21:33] <kinblas> was because there were some issues having to do with
[09:21:38] <kinblas> ordering/layering
[09:41:20] <toddparker> http://jsbin.com/ogupij/edit
[09:41:23] <toddparker> simple test page
[09:41:33] <toddparker> works beautifully on my phone
[09:42:15] <toddparker> makes sense to have this as a new property you need to opt into anyway
[09:42:44] <toddparker> these scrolling regions make scrolling the lager page so i hope people are careful in using it
[09:42:52] <toddparker> needs to be for full panes
[09:43:00] <toddparker> that fill the screen, like a native app
[09:51:12] <kinblas> toddparker: so what happens when you drag the scroll region and hit the top of it? Does it scroll the outer page?
[09:52:59] <kinblas> toddparker: btw, I pointed my friend at our faux implementation to give him some nested examples
[10:42:57] <toddparker> it's pretty slick kinblas
[10:43:24] <toddparker> if you scroll to the top, you get the snapback behavior inside the div
[10:43:33] <toddparker> so it doesn't affect the page
[10:44:18] <toddparker> however, if you then start a new scroll drag gesture over the area, it scrolls the outer page
[10:44:21] <toddparker> nifty
[10:44:29] <toddparker> feels right
[10:44:52] <toddparker> nested is madness
[10:45:05] <toddparker> terrified of people using that
[10:46:03] <kinblas> toddparker: ok that matches the behavior we have implemented
[10:46:07] <kinblas> :-)
[11:14:50] <toddparker> cool
[11:15:25] <toddparker> guess a JS scroller is going to be needed for android since nobody can upgrade
[14:48:29] <rwaldron> toddparker yt?
[14:52:51] <toddparker> i'm here
[14:53:02] <toddparker> hey rwaldron
[14:53:13] <rwaldron> hey dude
[14:53:18] <toddparker> what's up!
[14:53:32] <rwaldron> this is Rick (in case you didnt know  my last name)
[14:53:36] <rwaldron> Anywayyy
[14:53:39] <toddparker> ya
[14:53:51] <toddparker> you're famous
[14:53:54] <rwaldron> hahaha
[14:54:03] <rwaldron> I wish
[14:54:18] <rwaldron> Ok, so I started ramping up a project today for Bocoup
[14:54:34] <rwaldron> and wanted to lint/hint all files before concat & compress
[14:54:45] <toddparker> k
[14:54:53] <toddparker> jQM, right?
[14:54:54] <rwaldron> unfortunately I hit a snag with that
[14:55:01] <rwaldron> yessir
[14:55:18] <rwaldron> jqm (easier to type :) )
[14:55:23] <rwaldron> whoops
[14:55:28] <rwaldron> didnt meant to hit enter
[14:55:30] <rwaldron> anyway...
[14:55:37] <rwaldron> jqm has mixed tabs and spaces
[14:55:41] <rwaldron> and won't lint/hint
[14:55:59] <toddparker> we've been moving thru and cleaning up formatting to fit the jQ standards
[14:56:02] <rwaldron> now, please don't take this as me being negative nancy
[14:56:04] <rwaldron> I'm not
[14:56:05] <toddparker> not sure we're there yet
[14:56:10] <rwaldron> oooohh lovely
[14:56:15] <rwaldron> i was just about to get to that
[14:56:29] <toddparker> you volunteering?
[14:56:30] <rwaldron> So, I'm kind of a lunatic with the core style guide
[14:56:34] <rwaldron> and yes
[14:56:40] <rwaldron> I sure am
[14:56:51] <toddparker> cool!
[14:56:52] <gseguin> woohoo!
[14:57:00] <rwaldron> I will gladly bring all of the source into conformance
[14:57:22] <toddparker> i've seen a bunch of commits to bring us closer on some of the files, but having someone do a full sweep would rokk
[14:57:28] <rwaldron> its tricky though, because it usually causes alot of weird changes that like to cause merge conflicts
[14:58:00] <rwaldron> I would absolutely love to do a full sweep
[14:58:06] <rwaldron> of all the files in js/
[14:58:24] <toddparker> yeah, that's my concern too
[14:58:30] <rwaldron> but I dont want to send you something that is currently branches
[14:58:34] <rwaldron> branched
[14:58:36] <toddparker> i know we have a few things in branches
[14:58:57] <rwaldron> i can steer around those
[14:59:02] <rwaldron> if you can give me an ide
[14:59:04] <rwaldron> idea*
[14:59:16] <toddparker> i'd like to coordinate this with they other guys to we know what they are in the middle of
[14:59:23] <toddparker> luckily it's a small team
[14:59:23] <rwaldron> the upside is that I'm obviously not changing any logic
[14:59:34] <rwaldron> awesome
[14:59:38] <toddparker> yeah, sure. it's jus the commit merge funkiness
[14:59:38] <rwaldron> please do
[14:59:45] <rwaldron> exactly
[14:59:54] <rwaldron> I could easily have this done in a day
[14:59:56] <rwaldron> or less
[15:00:02] <toddparker> could you do a look thru to do a summary fo what files are ok, what others need work, etc
[15:00:13] <rwaldron> hm
[15:00:20] <rwaldron> thats a little tricky i think
[15:00:35] <rwaldron> mostly because its such a line-by-line, char-by-char process
[15:00:39] <toddparker> i *think* some js files are up to snuff (maybe)
[15:00:45] <toddparker> ah, i see
[15:00:55] <rwaldron> i'm just really used to it doing the pull request reviews for core
[15:01:29] <toddparker> so if you can do this in about a day, let's coordinate with scottjehl, kinblas,  gseguin, and _nickel to find a good time to let you loose
[15:01:32] <rwaldron> it would be way easy to just get a list of the files that are currently in limbo
[15:01:45] <toddparker> you could do that?
[15:01:46] <rwaldron> and I will skip those and tackle them when they're ready
[15:01:52] <toddparker> sure, good idea
[15:02:07] <rwaldron> also, writing this: https://github.com/rwldrn/idiomatic.js
[15:02:27] <rwaldron> which is based on our core guide
[15:02:33] <toddparker> cool
[15:02:33] <rwaldron> so yeah, lets coordinate
[15:02:38] <toddparker> you are hardcore
[15:02:47] <rwaldron> i'm literally ready to do this when you guys are
[15:03:13] <rwaldron> i can start tomorrow if we get coordinated this evening
[15:03:15] <toddparker> hey - do you know anyone interested in helping us with api docs? i need someone as psycho about docs as you are about formatting
[15:03:18] <rwaldron> hell.. i can start tonight
[15:03:32] <toddparker> cool, lemme try to ask the guys
[15:03:38] <rwaldron> kswedberg
[15:05:34] <toddparker> yeah karl is great. but busy
[15:06:02] <rwaldron> true, true
[15:06:17] <toddparker> if you have the time, go for it and submit a pull
[15:06:39] <toddparker> just make sure to runt he full test suite and just keep it to whitespace tweaks
[15:07:05] <rwaldron> you got it
[15:07:06] <toddparker> we get "whitespace" tweaks that are re-factors :)
[15:07:15] <rwaldron> i'm going to break it up too
[15:07:21] <toddparker> cool, thanks rwaldron!
[15:07:33] <toddparker> as in a pull per js file?
[15:07:34] <rwaldron> so it will 1 file per branch, per pull request
[15:07:40] <toddparker> perfect
[15:07:45] <rwaldron> which will allow you to hold off any one of them
[15:08:09] <toddparker> yeah, scott and kin are doing a lot of stuff in navigation so having these broken up is great
[15:08:28] <rwaldron> i'm starting j.m.media.js only because I had it open
[15:08:37] <rwaldron> but otherwise I will go alphabettically
[15:08:50] <rwaldron> branches will be named by the file they are changing
[15:10:10] <toddparker> perfect
[15:10:38] <toddparker> really appreciate the help! we're a bit overwhelmed at the moment to handle the housekeeping
[15:12:58] <rwaldron> it's my pleasure
[15:13:24] <rwaldron> i know the jQuery UI guys are also working _very_ hard to bring all the UI stuff into core style conformance
[15:13:39] <rwaldron> they have a lot of historic code to clean up
[15:13:54] <rwaldron> it'll be nice to have this in parity for 1.0
[15:16:20] <toddparker> yeah, true
[15:16:44] <toddparker> good timing now that the dust has settled from beta 1
[15:36:23] <rwaldron> There are some "house-styles" that I'm obeying here
[15:36:29] <rwaldron> that wouldnt make sense in core
[15:36:44] <rwaldron> but i see there is obvious organization around them in mobile
[15:37:19] <rwaldron> namely chaining methods to elements where the element changes done the chain and grant an indent at each change to visually signify the change
[15:37:21] <rwaldron> toddparker ^^
[15:37:27] <rwaldron> so those will remain
[15:37:30] <rwaldron> seems important
[16:07:41] <gseguin> wow rwaldron, you're on a roll!
[16:07:45] <kinblas> rwaldron: thanks for caching for reuse
[16:07:50] <gseguin> thank you!
[16:08:33] <rwaldron> you're welcome :)
[16:09:04] <rwaldron> i told todd I'd try to avoid "refactoring", but sometimes there is just obvious simple stuff
[16:09:27] <rwaldron> as long as it's cool with you guys
[16:17:36] <kinblas> rwaldron: yeah I try to fix those when I tinker in files I see that in
[16:17:40] <kinblas> so its good to catch those
[16:17:45] <rwaldron> ok, cool
[16:17:49] <kinblas> rwaldron: so one question
[16:17:54] <rwaldron> hit me
[16:17:56] <kinblas> is it jquery style to have a blank line
[16:18:08] <kinblas> after the opening of an if statement?
[16:18:10] <rwaldron> between stuff?
[16:18:22] <rwaldron> like...
[16:18:25] <kinblas> example
[16:18:31] <rwaldron> if () { blank line... code... }
[16:18:41] <kinblas> yeah
[16:18:46] <rwaldron> often yes
[16:18:50] <kinblas> also I was looking at one of your checkins
[16:18:55] <rwaldron> in all newer code you'll see that
[16:18:57] <kinblas> where you put blank lines at the start of binds
[16:19:02] <kinblas> ok good t oknow
[16:19:08] <rwaldron> it makes it less crowded
[16:19:08] <kinblas> I'll land it then
[16:19:37] <rwaldron> i'm trying to be respectful of things that seem intentional
[16:19:40] <rwaldron> did you see above?
[16:19:52] <rwaldron> start here: <rwaldron> There are some "house-styles" that I'm obeying here
[16:20:03] <gseguin> I saw, but it's inconsistent
[16:20:29] <rwaldron> Ok, yeah.. I've noticed, but I tihnk that's something you guys are better equipped to tackle
[16:20:49] <gseguin> right, we'll do a second pass
[16:20:50] <rwaldron> since you understand that aspect of that land much better then i would
[16:20:53] <rwaldron> rad :)
[16:22:26] <kinblas> rwaldron: one thing to ask though
[16:22:33] <kinblas> if you change anything other than whitespace
[16:22:37] <rwaldron> ask as many as you'd like
[16:22:40] <kinblas> can you give the unit tests a quick run?
[16:22:44] <rwaldron> of course
[16:22:58] <kinblas> I just landed something now firefox select unit test is failing
[16:23:01] <kinblas> not sure why yet
[16:23:54] * rwaldron looking at last commit
[16:24:36] <kinblas> hmmm I think it might be a false negative
[16:24:45] <kinblas> it's passing locally for me in firefox
[16:25:02] <rwaldron> yeah, i was avout to say
[16:25:15] <rwaldron> in collapsible i dry'ed out that last part
[16:25:20] <rwaldron> and ran the unit tests for it
[16:25:29] <rwaldron> in tests/unit/ and let it run
[16:25:41] <rwaldron> all came back good
[16:25:48] <rwaldron> i'll be sure to keep that in mind though
[16:27:13] <kinblas> ok thanks!
[16:27:13] <rwaldron> trust me man, sometimes I think the folks contributing to core think I'm nuts
[16:27:23] <rwaldron> (as in, the ones not directly in the project)
[16:27:36] <rwaldron> because i make them run the unit tests in _every_ supported browser
[16:27:37] <kinblas> nuts about?
[16:27:47] <kinblas> oh heh
[16:27:49] <rwaldron> and sometimes provide proof
[16:27:58] <kinblas> I'm paranoid ... I try to run on what I have
[16:28:06] <rwaldron> like, the random people that are like "look! i fixed something!"
[16:28:09] <kinblas> mobile is a lot bigger in terms of what we support ;-)
[16:28:23] <rwaldron> and you immediately look at it and think... no way...
[16:28:29] <kinblas> heh
[16:28:30] <rwaldron> oh i can imagine
[16:28:35] <rwaldron> i dont have to
[16:28:37] <rwaldron> i know!
[16:28:38] <rwaldron> hahaha
[16:29:06] <rwaldron> so many disparate platforms and devices
[16:30:18] <kinblas> rwaldron: since we're a small team we tend to lean on each other for testing help since we don't all have the same devices
[16:30:42] <kinblas> _nickel: yo that firefox test keeps failing on hudson
[16:30:49] <kinblas> it seems to work locally for me?
[16:32:21] <kinblas> gseguin: I noticed you have a pull request ;-)
[16:32:33] <rwaldron> the only logic difference in collapsible is the switch from using a if/else and repeating the work to a ternary
[16:32:42] <kinblas> yeah I saw
[16:32:44] <rwaldron> if you need to roll it back, go for it
[16:32:48] <gseguin> kinblas: I know
[16:32:52] <rwaldron> and I will redo without that change
[16:33:06] <gseguin> I need to test it again
[16:33:13] <gseguin> and then land it
[16:33:15] <kinblas> heh
[16:33:31] <kinblas> I was just poking fun at your pending request
[16:34:05] <kinblas> rwaldron: I think I got all your requests
[16:34:13] <kinblas> they are all landed
[16:34:15] <gseguin> :)
[16:34:34] <gseguin> you're too fast man, I was going to land some of his requests
[16:34:44] <gseguin> but every time I was ready to land it
[16:34:49] <gseguin> you already had done it
[16:35:10] <kinblas> gseguin: I needed a mental break
[16:35:19] <gseguin> :)
[16:35:20] <kinblas> plus my network went down
[16:35:26] <kinblas> so my devices can't load anything
[16:35:29] * kinblas sighs
[16:35:39] <kinblas> my "public" network that is
[16:35:41] <gseguin> oh that's right, that sucks
[16:35:46] <gseguin> yeah I saw your email
[16:36:24] <rwaldron> kinblas nice
[16:36:28] <rwaldron> i have a handful more coming
[16:36:52] <kinblas> rwaldron: I saw you normalizing comments too
[16:37:04] <kinblas> if that's in your scope I give a big thumbs up
[16:37:12] <kinblas> there's several different styles in there
[16:37:18] <kinblas> no leading space, no caps
[16:37:39] <kinblas> not sure if you care or want to deal with that
[16:37:42] <kinblas> just thought I'd mention it
[16:38:02] * kinblas is guilty of commenting in a non-standard way
[16:38:15] <rwaldron> I'm just trying to make them readable
[16:38:19] <rwaldron> :)
[16:38:27] <kinblas> so riddle me this
[16:38:35] <kinblas> the jquery core style guide says to use /* */
[16:38:39] <kinblas> for large blocks
[16:38:54] <kinblas> I like using // because than we can comment out large blocks of code when debugging
[16:39:01] <rwaldron> me too
[16:39:08] <kinblas> is there a specific reason to use /* */
[16:39:50] <rwaldron> actually, i think that's out of date
[16:39:56] <rwaldron> i think we use only  //
[16:40:06] <kinblas> ok I thought I was being old-school biased from my C++ days
[16:40:09] <rwaldron> no one has updated the style guide in about 5 months
[16:40:19] <rwaldron> no, it makes sense
[16:40:28] <rwaldron> because // is built into most editors
[16:40:30] <kinblas> so now I don't feel so guilty about adding that giant // comment in navigation.js :-)
[16:40:34] <rwaldron> like, comment this huge block
[16:40:46] <rwaldron> select, key command, boom
