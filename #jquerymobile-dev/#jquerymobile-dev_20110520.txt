[08:07:09] <toddparker> morning all
[08:13:41] <StevenBlack> Hey Todd.
[08:14:29] <toddparker> how's it going?
[08:15:11] <StevenBlack> Great.  I suppose today or soon we need to decide on the changePage deprecation, if any.  ?docs#m1667
[08:15:12] <bot-t> [#1667] Decision: Deprecate $.mobile.changePage()'s old prototype? (open) - https://github.com/jquery/jquery-mobile/issues/1667
[08:16:03] <StevenBlack> If we do nothing then we can skip 1666 too.  ?docs#m1666
[08:16:06] <bot-t> [#1666] Deprecate $.mobile.pageLoading() (open) - https://github.com/jquery/jquery-mobile/issues/1666
[08:16:40] <kinblas> mornin' y'all
[08:18:09] <StevenBlack> What a cluster this data- normalization eh?
[08:18:37] <kinblas> heh
[08:18:51] <kinblas> I thought passing a function to replace is non-standard
[08:20:40] <StevenBlack> Looking at the commit now: https://github.com/jquery/jquery-mobile/commit/7eb1085764cb639f4a58bfbee6bad3880893621c
[08:25:16] <toddparker> so we're lowercasing the ns internally?
[08:25:31] <toddparker> seems like a simple fix for all the complexity
[08:28:16] <toddparker> kinblas - concerned this won't work everywhere?
[08:28:29] <StevenBlack> I think it's probably wise to tell the core-team about what we're doing...
[08:29:48] <kinblas> toddparker: I just know a function as the 2nd arg to replace() was considered non-standard in the past ... so I tended to stay away from it. Now the browsers are copying each other left and right, I'm not sure where that is. But looking at Mozilla.org they still mark it as non-standard:
[08:30:06] <kinblas> https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace
[08:34:06] <toddparker> hrm
[08:34:16] <toddparker> alternate ideas?
[08:35:01] <toddparker> is this the issue holding up the nav push?
[08:36:22] <kinblas> toddparker: the alternate is to simply use something like split and a loop to uppercase any entries above index 1
[08:36:55] <toddparker> pros/cons?
[08:37:16] <kinblas> nav push is waiting for me to fix the nav tests which seem to be failing. I left off yesterday trying to rebase nav over the HEAD so I could pick up everything new
[08:37:36] <kinblas> toddparker: less elegant than a replace with function. :-)
[08:38:01] <toddparker> so not as elegant, but more reliable? i'd go with reliable.
[08:38:15] <toddparker> unless it's somehow much more code
[08:40:24] <StevenBlack> Option: do the simplest thing that could possibly work reliably, optimize later.
[08:42:09] <StevenBlack> Some good looking regex variations here: http://bytes.com/topic/c-sharp/answers/277768-regex-convert-camelcase-into-title-case
[08:43:55] <toddparker> +1
[08:45:20] <kinblas> StevenBlack: that's for c# though, I don't think there's a replace method on JS RegExp
[08:47:01] <StevenBlack> Ya some of the promising one fail in the browser.
[08:48:00] <StevenBlack> ones
[08:48:35] <kinblas> btw I think jQuery already has a camel case function
[08:48:52] <kinblas> jQuery.camelCase()
[08:49:38] <kinblas> heh, but it uses a replace function
[08:53:10] <StevenBlack> Odd that jQuery.camelCase() is defined in css.js but also invoked in data.js and effects.js.  That should probably be changed.
[08:55:10] <toddparker> huh, odd
[08:55:26] <toddparker> so if jQ uses replace, maybe it's pretty well supported?
[08:59:14] <StevenBlack> ?#9368
[08:59:16] <bot-t> [#9368]  (new bug) - http://jqbug.com/9368
[08:59:55] <StevenBlack> (The $.camelCase() in css.js thing)
[09:00:14] <gseguin> Good Morning
[09:00:27] <StevenBlack> I would say, given it's widely used and apparently OK, we're safe.
[09:01:22] <StevenBlack> Salut Gislain
[09:01:37] <gseguin> Salut
[09:03:27] <toddparker> good morning
[09:03:53] <toddparker> sorry about the slowness in reviewing your pull requests gseguin
[09:03:57] <toddparker> i feel bad about that
[09:04:10] <toddparker> anyone have time to review?
[09:04:13] <scottjehl> hi
[09:04:15] <scottjehl> what's up
[09:04:22] <gseguin> hey no problem, there not going anywhere
[09:04:26] <toddparker> i'm not technical enough to be trusted. i can hit the green buttons tho
[09:04:46] <gseguin> *there = they're
[09:05:07] <toddparker> scottjehl, look a up at the convo on the NS stuff with camel case
[09:07:06] <gseguin> StevenBlack: where are we with ?#m1617
[09:07:30] * gseguin doesn't understand how to talk to bot-t
[09:07:44] <scottjehl> k
[09:08:11] <StevenBlack> (on a call)
[09:08:18] * gseguin needs coffee
[09:08:37] <gseguin> sorry StevenBlack that was actuaklly for kinblas
[09:09:31] <gseguin> kinblas: where are we with ?irc://irc.freenode.net/#m1617
[09:10:17] <kinblas> gseguin: is that a patch you separated out from that previous one about the  nested lists?
[09:10:32] <StevenBlack> ?docs#m1617
[09:10:33] <bot-t> [#1617] Nested lists with same parent text resolve to the same sub-page. (open, 5 - Critical, Ghislain) - https://github.com/jquery/jquery-mobile/issues/1617
[09:10:47] <gseguin> I haven't submitted a pull request yet
[09:11:01] <gseguin> I just have the monkey patch on the fiddle I had sent you
[09:11:40] <kinblas> gseguin: sorry haven't had time to look at the monkey patch ... I'm trying to finish up the navigation branch so I can land it and unblock scott
[09:11:52] <gseguin> not a problem
[09:11:55] <kinblas> I did see you separated out this:
[09:11:56] <kinblas> https://github.com/gseguin/jquery-mobile/commit/a7b28c3e550cdafbcee6cd90172a01e1eed45013
[09:12:01] <kinblas> from the original proposed patch
[09:12:12] <kinblas> that's a different bug though right?
[09:12:26] <gseguin> it is, wrong label
[09:12:45] <gseguin> sorry
[09:12:47] <kinblas> it would be good to file an issue on that one separately and refer to the patch
[09:13:10] <gseguin> there is an issue for that one
[09:13:27] <gseguin> I actually submitted a pull request for that one
[09:13:42] <gseguin> https://github.com/jquery/jquery-mobile/pull/1660
[09:14:03] <kinblas> gseguin: it might be better to get scott/todd to look at that one since I don't know what classes are involved with components
[09:14:17] <kinblas> and what the impact is of removing them
[09:14:38] <kinblas> well I should say I don't know them as well as todd/scott who came up with them
[09:15:01] <gseguin> sure, sorry for the confusion I wanted you to look into the monkey patch for #1617
[09:15:43] <gseguin> once we agree on the implementation I'll submit a pull request
[09:16:57] <kinblas> _nickel: scottjehl: do you guys mind if I merge HEAD into navigation? I was trying to keep it pristine from the day _nickel made the branch so we could do a rebase ... but I really need to make sure I'm fixing unit tests that are broken due to my changes versus the 1.6.1  update breakages ... also to pick up the more recent changes scott made.
[09:18:03] * kinblas notes he is having trouble getting out of a rebase merge conflict state in his tree
[09:21:22] <toddparker> scottjehl - would you have time to look at some of gseguin's pulls? they looks pretty straightforward if you're as familair with the code as you are
[09:21:32] <scottjehl> sure can
[09:21:43] <gseguin> thanks!
[09:21:54] <scottjehl> kinblas: do what you need to man
[09:21:55] <scottjehl> :)
[09:22:41] <toddparker> yeah kinblas, go for it
[09:37:43] * StevenBlack feels sorry for kinblas who's surely in git merge hell for the next while.
[11:14:13] <eddiemonge> for future reference: https://github.com/jquery/jquery-mobile/wiki/Release-Instructions-Checklist
[11:39:47] <toddparker> thanks eddiemonge. i just added a few more places i need to update stuff on the site
[11:40:02] <eddiemonge> new pull request for makefile too
[11:42:46] <eddiemonge> im also going through and seeing if i can make the repo smaller, like 90% smaller
[11:43:43] <toddparker> pulled
[11:43:51] <toddparker> awesome, great news eddie
[11:43:59] <toddparker> oh hey - any update on the docs?
[11:45:43] <eddiemonge> nope not yet. well not new news
[11:46:05] <eddiemonge> i do have the design for the site and as soon as that gets converted to a wordpress template it can be loaded up
[11:47:55] <toddparker> cool.
[11:48:12] <toddparker> is there a preview of the design?
[11:50:12] <eddiemonge> somewhere there is. the files are at https://github.com/jquery/web-base-template
[11:51:16] <toddparker> wp index page is blank. guess it's early days
[11:51:59] <eddiemonge> yeah.
[11:53:13] <eddiemonge> right now its all just in the flat files
[12:01:06] <kinblas> toddparker: hey just an update, I'm still wrestling with the unit tests for navigation core
[12:01:38] <kinblas> it's not that things are broken, it's that I have to understand the tests and then figure out why things get called the way they do
[12:02:24] <kinblas> some of the tests are failng due to path differences of where my tree is located on my server (was there before but we need to fix it anyways)
[12:02:50] <kinblas> and then the other problem I'm seeing is that there is an extra changePage call that is causing test counts to be one more than expected which is where I'm at right now
[12:05:30] <kinblas> just an fyi the test that is failing, succeeds if I comment out the one before it ... that's the part I'm trying to figure out.
[12:34:57] <toddparker> that's odd
[12:35:04] <toddparker> _nickel - any ideas?
[12:42:02] <kinblas> _nickel: ping
[12:55:01] <toddparker> i'd really like to get this into master so we can divide and conquer on the smaller items
[13:18:34] <toddparker> thoughts on this fix? https://github.com/jquery/jquery-mobile/pull/1668
[13:19:18] <toddparker> btw - if anyone has time to review, test and comment on pull requests, that would be great
[13:40:11] <StevenBlack> toddparker: I would defer that one until after Kin lands the mother merge.  This one *might* be unnecessary given this commit in the Nav branch: https://github.com/MaxThrax/jquery-mobile/commit/9096763741190f03fd62377ffb8145497bb297c7
[13:40:58] <StevenBlack> (I'm guessing. There's been another path commit in the past 48-hours I can't immediately find)
[13:42:47] <toddparker> ok, cool
[13:42:50] <toddparker> thanks stevenblack
[13:43:08] <kinblas> _nickel: scottjehl: is it just me or is the ignoreNextHashChange usage inverted from what its name implies
[13:43:10] <kinblas> ??
[13:43:29] <scottjehl> umm
[13:44:04] <kinblas> I say this because I see:
[13:44:06] <kinblas> 		//if listening is disabled (either globally or temporarily), or it's a dialog hash
[13:44:07] <kinblas> 		if( !$.mobile.hashListeningEnabled || !urlHistory.ignoreNextHashChange ) {
[13:44:07] <kinblas> 			if( !urlHistory.ignoreNextHashChange ) {
[13:44:07] <kinblas> 				urlHistory.ignoreNextHashChange = true;
[13:44:07] <kinblas> 			}
[13:44:08] <kinblas> 			return;
[13:44:08] <kinblas> 		}
[13:44:19] <kinblas> notice the !urlHistory.ignoreNextHashChange
[13:44:37] <kinblas> if its false then we bail early from the hashchange callback?
[13:45:19] <kinblas> I just figured out that the hashchange callback sometimes fires during the navigation tests
[13:45:30] <scottjehl> hmm ok
[13:45:30] <kinblas> this may be why things sometimes fail mysteriously
[13:45:46] <kinblas> that is inverted right?
[13:46:13] <scottjehl> seems it, but I'm also not sure because things are working well in that regard - at least with dialogs and such
[13:47:02] <kinblas> well the name is just out of sync
[13:47:14] <kinblas> so what I think happens with the tests
[13:47:29] <kinblas> is that some tests will cause that flag to be set (inverted so that things get ignored)
[13:47:57] <kinblas> but then another test comes along before the hashchange timer fires and manipulates the URL
[13:48:17] <kinblas> so things get ignored or update un-reliably
[13:48:25] <kinblas> that's the theory anyways
[13:48:48] <StevenBlack> Semantically this smells like this behaviour / logic that's in the wrong place.  Smells like a god-object that's doing too much.
[13:57:32] <StevenBlack> urlHistory.ignoreNextHashChange appears inconsistent on line 449 too:  https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.navigation.js#L449
[13:57:48] <StevenBlack> "//disable hash listening temporarily"
[13:58:13] <StevenBlack> Then, urlHistory.ignoreNextHashChange = false;  -- which is opposite.
[13:58:27] <toddparker> huh
[13:58:43] <toddparker> it would good if these were the root cause of the test issues
[13:59:03] <StevenBlack> In a perfect world, the event trigger would have the smarts to know when to _trigger.
[13:59:44] <StevenBlack> Not force the clients to keep scratch vars that say, ignore the next message.
[14:00:18] <StevenBlack> clients==listeners
[14:05:12] <StevenBlack> Maybe instead of one trigger here, we need two or more, depending on the *type* of hashchange.
[14:05:23] <StevenBlack> $window.trigger( "hashchange", [ true ] ); for a deeplink.
[14:05:34] <StevenBlack> $window.trigger( "dialoghashchange", [ true ] ); for a dialog
[14:06:02] <StevenBlack> Some listeners care about both (or however many), some listeners care about just one.
[14:06:09] <kinblas> ah ok I see the culprit in the tests
[14:06:20] <kinblas> before every test is run something clears the location.hash = ""
[14:06:25] <kinblas> that's what is triggering the hashchange
[14:06:39] <kinblas> wow that took a long while to figure out :-)
[14:10:09] <StevenBlack> Here's another thing to consider:
[14:10:11] <StevenBlack> https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.navigation.js#L448-453
[14:10:27] <StevenBlack> That's the only place in the whole codebase where we use path.set()
[14:10:56] <StevenBlack> So I'm thinking that urlHistory.ignoreNextHashChange = false; belongs in path.set(), not here.
[14:11:38] * StevenBlack Still does not understand the opposite nature of line 450 relative to the comment on line 449.
[14:11:57] <kinblas> heh
[14:11:59] <kinblas> it's wrong
[14:12:01] <kinblas> I'll fix that
[14:12:13] <kinblas> that is the name is ok, the logic is wrong
[14:12:23] <kinblas> and the setting to false, when it should be true is wrong
[14:12:41] <StevenBlack> I think we gain a ton id listeners don't have to know the details of ignoring the next message.
[14:13:01] <StevenBlack> id=if
[14:14:53] <kinblas> heh
[14:15:41] <StevenBlack> Change what I said above "Smells like a god-object that's doing too much." to "Smells like a listener that's doing too much."
[14:18:11] <kinblas> I think the issue is that the some browsers fire off a hashchange anytime you change the location.hash property
[14:18:22] <kinblas> in browsers that don't do that, there's a timer that fires
[14:18:31] <kinblas> and compares against a lastknown hash it has
[14:18:37] <kinblas> and then fires a fake event
[14:19:11] <StevenBlack> Interesting.  Here's more info.  That segment, https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.navigation.js#L448-453, is the only place in the whole codebase where we set urlHistory.ignoreNextHashChange = false;
[14:20:56] <StevenBlack> Here's the only place in the whole codebase where we set it to true: https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.navigation.js#L833
[14:22:05] <StevenBlack> (other than upon creation of urlHistory, where it's also set to true)
[14:22:29] <StevenBlack> initialized to true ^^^
[14:23:31] <kinblas> I inverted it ... and the logic in the hashchange now checks for true and then *ALWAYS* sets to false ... the extra if check wasn't really necessary in there
[14:25:36] <StevenBlack> K.  Here's the hashchange poller you referred to above: https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.hashchange.js#L281-295
[14:26:24] <StevenBlack> I wonder if that needs to go into path.set() in case that ever gets called manually?
[14:26:41] <kinblas> what gets called manually?
[14:26:51] <StevenBlack> path.set()
[14:28:05] <StevenBlack> Internally we only ever call that in one place, and we always set ignoreNextHashChange= true (formerly false?) right before that.
[14:31:01] <StevenBlack> In other words, to clarify: we always do some housekeeping (urlHistory.ignoreNextHashChange= false) right before we call path.set().  I'm asking, should we encapsulate that housekeeping inside path.set().
[14:34:38] <kinblas> yeah I get what you're saying, I'm not sure if we advertise the path functions in the docs or not
[14:35:31] <StevenBlack> I do in http://jqx.ca/nav ... :-)
[14:36:14] <StevenBlack> (stepping out)
[14:36:44] <kinblas> heh you notated that it will trigger a changePage
[14:37:12] <kinblas> that is actually triggered by the hashchange event callback in question
[14:38:14] <kinblas> if we move the logic as you suggest into set() it will no longer trigger it. We could also add a boolean flag so that it retains the old behavior and allows us to just call path.set(hash, true) or something like that to ignore
[14:38:47] <kinblas> where true is something like suppressHashChangeEvent
[15:43:47] <toddparker> i gotta run, thanks all!
[15:43:53] <toddparker> have a great weekend
[15:44:11] <toddparker> forgot to mention, blog post went out: http://jquerymobile.com/blog/2011/05/20/jquery-mobile-team-update-%E2%80%93-week-of-may-16th/
[15:49:45] <kinblas> these tests are an exercise in patience :-)
[15:50:33] <gseguin> toddparker: Thanks for the welcome
[18:33:09] <_nickel> kinblas:
[18:33:16] <_nickel> kinblas: the path tests pass by themselves
[18:33:26] <_nickel> has that been your experience?
