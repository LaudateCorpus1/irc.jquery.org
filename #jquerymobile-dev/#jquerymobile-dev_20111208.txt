[08:53:51] <gseguin> Good morning
[09:11:50] <Wilto> I will only participate in this channel today if everyone in here promises not to internet-fight me.
[09:11:59] <Wilto> Because, man, that business is RAMPANT this week.
[09:12:33] <gseguin> only love in here Wilto
[09:13:14] <Wilto> Whew, okay.
[09:13:30] <Wilto> http://wil.to/_/haters.gif, after all.
[09:16:15] <johnbender> Wilto: gseguin: kinblas: I'm heading into the office, the screencast is transcoding on vimeo but the link is in basecamp
[09:16:36] <johnbender> it's fairly terrible but I think everyone will get the point if they take that with the pro git reading and some discussion to day at 11
[09:16:39] <gseguin> thanks johnbender I'll check it out as soon as it's up
[09:37:11] <kinblas> johnbender: looks like it's not available yet
[09:41:59] <gseguin> yeah it looks like something's messed up
[10:09:29] <kinblas> Wilto: did you see this ?https://github.com/jquery/jquery-mobile/issues/3238
[10:09:29] <socialhapy> ★ Issue #3238 on jquery-mobile, reported by UncleDean (13m, 45s ago): jQuery Mobile lists no longer support ARIA / Voiceover
[10:09:35] <Wilto> What.
[10:09:41] <kinblas> What was the reason you added aria-hidden="true"?
[10:10:07] <kinblas> Wilto: they site this checkin https://github.com/jquery/jquery-mobile/commit/1f4d946c5a761a0e4c6cda62b00c9172364b7f73
[10:10:10] <Wilto> Oh, wait.
[10:10:10] <socialhapy> ★ Commit on jquery-mobile by Wilto (2m, 4d ago): Fixes #2594 — Button text is no longer read aloud twice (and treated as two separate navigable items) in iOS VoiceOver.
[10:10:59] <kinblas> Wilto: did I screw something up when I DOM-ified that code?
[10:11:18] <Wilto> We had accessible text in those, and a second text node for the sake of A11y—it was being read aloud twice.
[10:11:40] <kinblas> I suppose that ... not supporting ARIa means it doesn't read it twice :-P
[10:11:48] <Wilto> I know it was good in VO following my change, but something may have been nudged along the way.
[10:11:48] <kinblas> so did I screw something up?
[10:12:13] <Wilto> No idea, holmes. I can track it down a little later.
[10:13:00] <kinblas> Wilto: if I screwed it up it would've been here: https://github.com/jquery/jquery-mobile/commit/86e4e6fb43006b80dd9fff54d52cef69daca238a#js/jquery.mobile.buttonMarkup.js
[10:13:01] <socialhapy> ★ Commit on jquery-mobile by jblas (1m, 1w ago): Some code optimizations to speed up page enhancement.- Avoid using $.each() when you can directly iterate on the collection. This avoids extra function calling overhead.- Avoid calling jqmData() for options that are specified.- Avoid calling $.fn.wrapInner(), creating the DOM nodes manually is much faster.
[10:13:26] <Wilto> DAMMIT, KIN.
[10:13:37] <Wilto> No, I have no idea. Happy to look into it, though!
[10:13:44] <kinblas> ok great!
[10:22:08] <johnbender> well
[10:22:13] <johnbender> vimeo failed me completely
[10:38:12] <Wilto> I picture you saying that as Megatron or Cobra Commander or somesuch, johnbender.
[10:38:22] <Wilto> “YOU HAVE FAILED ME YET AGAIN, VIMEO.”
[10:39:30] <johnbender> trying vimeo again, praying the youtube does a better job
[10:39:47] <johnbender> still confused as to why ogv presents such an issue for both of these service
[10:42:17] <johnbender> mother effer
[10:42:39] <johnbender> Wilto: toddmparker_: kinblas: if you guys want to download VLC I can send you the file directly so you can watch it
[10:42:46] <Wilto> Sure thing.
[10:43:00] <Wilto> You can crack open ogv in Firefox too, yeah?
[10:43:32] <toddmparker_> johnbender: maybe post to basecamp for safe keeping
[10:43:43] <toddmparker_> sure it's huge too
[10:44:54] <Wilto> 4,500 words on Appcache/jQM: http://trippingthebits.com/appcache/
[10:45:06] <Wilto> Thorough.
[10:46:10] <johnbender> toddmparker_: yah I'm uploading now
[10:46:12] <johnbender> sigh
[10:46:29] <johnbender> toddmparker_: also you CAN broadcast your google+ hangouts
[10:47:13] <Wilto> Oh, that’s a cool idea.
[10:48:11] <johnbender> that was the original reason for my suggestion
[10:48:17] <toddmparker_> yeah? nice
[10:48:20] <johnbender> so we can have a video conf but let others attend
[10:48:33] <toddmparker_> i like that idea
[10:48:46] <Wilto> So we’re basically starring in a TV show.
[10:48:49] <Wilto> I demand a trailer.
[10:48:56] <johnbender> toddmparker_: http://plusheadlines.com/google-hangouts-testing-ability-to-broadcast-live-on-youtube/2066/
[10:49:04] <johnbender> down at the bottom are some steps
[10:49:08] <johnbender> not sure if that's still valid though
[10:50:12] <johnbender> arg
[10:50:43] <johnbender> toddmparker_: if you do the google+ hangout I can actually demonstrate the rebase stuff so you can ask questions inline
[10:50:48] <johnbender> and the screencast can just be a reference
[10:56:50] <johnbender> gseguin: toddmparker_: kinblas I've invited you to a hangout with screensharing and extras
[10:56:57] <johnbender> I think we can make it public with the link
[10:57:07] <kinblas> johnbender: invited where?
[10:57:19] <kinblas> or I should say where do I pick up the invite?
[10:57:23] <kinblas> pickup/see
[11:00:31] <toddmparker_> yep, what is the link?
[11:01:19] <gseguin> jQuery Mobile team meeting @ https://plus.google.com/hangouts/extras/talk.google.com/jqm-dev
[11:02:09] <gseguin> toddmparker_, kinblas, garann, Wilto: ^^^
[12:18:02] <eddiemonge> johnbender: you are so negative
[12:24:02] <kinblas> toddmparker_: checkin' in here ... status - haven't done squat
[12:27:04] <kborchers> fyi - in terms of branch/version management, UI has a 1-8-stable branch and then bug fixes are applied to master and 1-8-stable seperately then 1.9+ features are developed in seperate branches then merged into master once ready
[12:27:11] <toddmparker_> sorry to hang up on you kinblas
[12:27:17] <kinblas> toddmparker_: uh huh
[12:27:20] <kinblas> I got your number
[12:27:31] <kinblas> toddmparker_: so I'm about to fire off an email to google *again*
[12:27:38] <toddmparker_> you wanna call or are you just threatening me?
[12:27:40] <kinblas> just wanted to make sure nicolas did not reply
[12:27:47] <toddmparker_> keep pushing
[12:27:54] <toddmparker_> until they get a restraining order on ya
[12:27:59] <kinblas> and my mail filter didn't eat it
[12:28:13] <kinblas> cause I got nada
[12:29:02] <toddmparker_> i didn't see anything either
[12:29:10] <toddmparker_> oh and scott is sort of back in action
[12:29:32] <toddmparker_> so if we can figure out how to plug him into the page transition stuff with you, that might be good
[12:29:57] <toddmparker_> he doesn't have test devices so it would need to be more on the logic/sequence stuff and less on atomic testing
[12:30:09] <toddmparker_> or we can point him elsewhere
[12:33:16] <kinblas> toddmparker_: at this point ... the sample dorking I'm doing has no jQuery Mobile in it ... just making use of the CSS and placing/removing animation class on 2 elements
[12:33:28] <kinblas> and I can see the same flashing
[12:33:32] <kinblas> so it's not really us
[12:34:07] <kinblas> I need to talk to that guy to see if he can help us identify specifically, what is contributing, whether it be the number of rules, the complexity of the layout, etc
[12:34:46] <kinblas> I have a feeling it's just anything that increases rendering complexity or CPU contributes
[12:35:20] <kinblas> toddmparker_: have you heard back from that guy Paul Irish forwarded us to?
[12:35:33] <kinblas> I'm not sure what group he's in? Same one as Paul? Developer Relations?
[12:36:04] <kinblas> I was told the guy I'm emailing *IS* the guy that is working on the GPU enhancements for the Android Browser
[12:36:18] <kinblas> I was told that from the Android Browser manager
[12:37:06] <toddmparker_> no word from anyone over there, nope
[12:37:10] <Wilto> Aw man, I missed all the “making threats” conversation. That’s, like, my THING.
[12:37:56] <toddmparker_> so do you have more dorkign time this week? :)
[12:41:00] <Wilto> All my time is dorking time.
[13:07:42] <gseguin> johnbender: let me know when is a good time to review my changes
[13:08:09] <gseguin> I have a meeting 2:00-2:30pm PST
[13:11:55] <toddmparker_> so ideas on what we could sic scott on kinblas?
[13:15:25] <johnbender> gseguin: probably after that
[13:15:37] <johnbender> gseguin: I'll go take a look now
[13:15:58] <johnbender> toddmparker_: as a side note I think we need to use the other branch strategy that I had proposed when we made that 1.0 branch
[13:16:04] <johnbender> I'll type up something
[13:16:09] <johnbender> for feedback
[13:16:18] <johnbender> and I still need to as the ui folks
[13:23:39] <toddmparker_> ok
[13:23:43] <toddmparker_> thanks johnbender
[13:25:22] <gseguin> johnbender: meeting moved to 4pm
[13:49:15] <jqmobilecommit> [jquery-mobile] gseguin pushed 3 new commits to amd: http://git.io/-UTJGQ
[13:49:15] <jqmobilecommit> [jquery-mobile/amd] Assume jquery is loaded so don't require it - Ghislain Seguin
[13:49:15] <jqmobilecommit> [jquery-mobile/amd] Updated AMD stripping regexp - Ghislain Seguin
[13:49:15] <jqmobilecommit> [jquery-mobile/amd] Changed js and css targets to use r.js and r-jqm.js - Ghislain Seguin
[14:22:50] <jqmobilecommit> [jquery-mobile] gseguin pushed 1 new commit to amd: http://git.io/uVb4rg
[14:22:50] <jqmobilecommit> [jquery-mobile/amd] Re-introduced structure CSS files - Ghislain Seguin
[14:35:19] <toddmparker_> kinblas: you around?
[14:35:47] <toddmparker_> we should look at mobile.twitter.com
[14:35:53] <toddmparker_> scrolling long lists is FAST
[14:39:09] <toddmparker_> thought it was native css, but maybe a scroller there
[14:40:18] <kinblas> toddmparker: yeah
[14:41:09] <toddmparker_> i gotta say that i really want to get rid of the hover when you're scrolling lists. really bugging me
[14:41:17] <toddmparker_> nobody else seems to to do it
[14:41:50] <toddmparker_> but anyway, i'd like to keep an eye on the new facebook and twitter since you should be able to build similar things with jQM
[14:41:52] <kinblas> toddmparker_: heh they have markup that looks like this <ul><a></a><a></a></ul>
[14:42:00] <toddmparker_> look for patterns and performance
[14:42:07] <toddmparker_> huh??
[14:42:07] <kinblas> okie dokie
[14:42:28] <kinblas> toddmparker_: load mobile.twitter.com in safari with the ipad ua
[14:42:31] <kinblas> you can see their markup
[14:42:42] <toddmparker_> ah. wondering how you did that
[14:43:37] <toddmparker_> what is the ipad?
[14:46:15] <kinblas> toddmparker_: btw, for me on ipad 4.3.5 it is only smooth after it has exposed all areas
[14:46:29] <toddmparker_> loaded them in?
[14:46:32] <kinblas> ... meaning it has cached  those areas of the list
[14:46:38] <toddmparker_> i'm on my new iphone 4s
[14:46:43] <kinblas> toddmparker: You talking about the Browser Categories list?
[14:47:51] <kinblas> toddmparker_: I think they are using transitions for their scrolling
[14:48:13] <toddmparker_> yeah?
[14:48:18] <kinblas> that is they just set the transform for where to end up and they let the transition take care of it
[14:48:18] <toddmparker_> as in a js scroller?
[14:48:27] <kinblas> I can confirm after I poke around
[14:48:55] <kinblas> as in calculate a distance, and then set the transform via js and let the transition code do the scrolling for you
[14:49:31] <toddmparker_> ah, i see
[14:49:45] <toddmparker_> i can't get chrome to spoof the UA right
[14:49:52] <toddmparker_> i keep seeing the crappy mobile site
[14:50:22] <johnbender> gseguin: whenever you get back we can chat about the amd stuff
[14:50:29] <gseguin> I'm here
[14:50:44] <johnbender> gseguin: cool
[14:51:00] <johnbender> gseguin: so I like the amd approach
[14:51:23] <johnbender> I'm not as worried about actually loading this way though I think you've mentioned it means no php eh?
[14:51:40] <gseguin> yep
[14:52:01] <gseguin> check out http://ghislain.dyndns.biz/jqm/wip/dist/
[14:52:22] <gseguin> http://ghislain.dyndns.biz/jqm/wip/
[14:52:29] <gseguin> johnbender: ^
[14:52:33] <johnbender> looking
[14:52:40] <johnbender> nce
[14:52:41] <johnbender> *nice
[14:52:42] <gseguin> the /dist is outdated
[14:52:51] <gseguin> look at your scripts
[14:53:09] <kinblas> toddmparker_: here's some info http://engineering.twitter.com/2011/09/twitters-mobile-web-app-delivers_14.html
[14:53:40] <johnbender> gseguin: so does thee requiremenet propogate out from the jqm-docs.js?
[14:53:43] <johnbender> err
[14:53:57] <johnbender> is the dep tree build with that as the root?
[14:54:09] <gseguin> what do you mean?
[14:54:33] <gseguin> oh yeah yeah
[14:54:39] <johnbender> gseguin: well there was a flash there, which is fine for dev and obviously won't be there in the compiled version
[14:54:42] <johnbender> kk
[14:54:48] <johnbender> just wondering where require js "starts"
[14:55:15] <gseguin> yeah there is a fouc
[14:55:16] <johnbender> gseguin: data-main
[14:55:37] <gseguin> because what use to be blocking
[14:55:40] <gseguin> is not anymore
[14:55:48] <johnbender> can you make it synchronous?
[14:56:05] <gseguin> why would you ever do that
[14:56:08] <gseguin> ?
[14:56:09] <johnbender> just curious
[14:56:18] <johnbender> well in our case we don't really want the fouc :D
[14:56:29] <toddmparker_> nice read for the twitter app kinblas
[14:56:34] <gseguin> you can put the class on the html markup
[14:56:53] <gseguin> ui-mobile-rendering I believe
[14:57:02] * gseguin updates index.html
[14:57:05] <johnbender> kk
[14:57:28] <gseguin> check it now
[14:57:58] <johnbender> super nice
[14:58:05] <kinblas> toddmparker: you try it on Android?
[14:58:07] <johnbender> alright so that's a huge win
[14:58:23] <kinblas> toddmparker: of course they have no form elements so it's not a big-dealio
[14:58:23] <gseguin> what is?
[14:58:27] <johnbender> the obvious concern there is having the project endorse an external lib
[14:58:33] <johnbender> gseguin: not needing php
[14:58:34] <johnbender> :D
[14:58:42] <gseguin> oh yeah definitely
[14:58:49] * johnbender is a language snob
[14:59:00] <johnbender> well
[14:59:07] <johnbender> not needing anything is nice
[14:59:07] <johnbender> ok
[14:59:19] <johnbender> then it's just r.js to do builds based on dependencies
[14:59:26] <eddiemonge> johnbender: what backend language are you comfortable with?
[14:59:28] <toddmparker_> i was just going to ask about that after reading this
[14:59:36] <gseguin> yes
[14:59:42] <johnbender> eddiemonge: none of them from a front end project
[14:59:46] <toddmparker_> well, they do when composing an update but that's a limited situation
[15:00:02] <johnbender> eddiemonge: I'm being an elistest douche when I bag on php
[15:00:17] <johnbender> *elitest
[15:00:22] <gseguin> PHP is good when you need it
[15:00:24] <toddmparker_> so kinblas is there anything novel here or is it jsut a case where they have optimized for their exact needs so it's a bit slicker
[15:00:28] <eddiemonge> php has its drawbacks but its still one of the more readable languages
[15:00:29] <gseguin> here we don't need PHP
[15:00:37] <eddiemonge> well we do on the server
[15:00:42] <eddiemonge> not in the actual project itself though
[15:00:50] <johnbender> indeed
[15:00:59] * johnbender will hence forth keep his language opinions to himself
[15:01:16] <johnbender> gseguin: how do you tell r.js where to start generating a dependency tree?
[15:01:28] <gseguin> you give it the main module
[15:01:37] <gseguin> here it's jquery.mobile.js
[15:01:54] <johnbender> gseguin: can we tell it, I want these five modules figure it out?
[15:02:12] <johnbender> if not then we need to find a way to dump the dep tree
[15:02:16] <gseguin> yes
[15:02:23] <johnbender> joy
[15:02:53] <gseguin> you can say include=jquery.mobile.forms.slider,jquery.mobile.forms.button
[15:03:38] <gseguin> now I may not have set up all the dependency correctly
[15:03:47] <gseguin> so that could not work at first
[15:04:03] <gseguin> s/cy/cies/
[15:04:05] <kinblas> toddmparker: Looks like they are scrolling with JS
[15:04:50] <johnbender> gseguin: yah that's one thing we'll have to test
[15:04:51] <toddmparker_> interesting. still wikend fast considering
[15:05:06] <gseguin> johnbender: now which way do we want to go?
[15:05:17] <johnbender> gseguin: in terms of your two branches?
[15:05:17] <gseguin> the hacky way, or the proper way?
[15:05:19] <toddmparker_> for 1.1, we need to figure the scrolling bizness out
[15:05:20] <gseguin> yeah
[15:05:36] <gseguin> toddmparker_: +1
[15:05:39] <johnbender> the hacky way outputs builds without the module definition
[15:05:45] <toddmparker_> :)
[15:05:50] <gseguin> johnbender: correct
[15:05:51] <johnbender> gseguin: correct?
[15:05:55] <johnbender> cool
[15:05:59] <gseguin> sorry
[15:06:01] <eddiemonge> johnbender: is the postcommit build currently writing to the logs? i havent checked to see if it was or not
[15:06:06] <gseguin> to be more specific
[15:06:21] <gseguin> it defines a jquery.mobile module
[15:06:27] <johnbender> eddiemonge: I haven't altered it to do so in the repo
[15:06:28] <toddmparker_> kinblas: not to start a whole ball 'o wax, but what do you think we need to do given the fact that just adding that listener kills perf
[15:06:31] <gseguin> but strips out all the other defines
[15:06:46] <johnbender> gseguin: hmm
[15:06:49] <gseguin> and therefore does not need a AMD loader shim (like almond.js) to work
[15:06:50] <toddmparker_> garann: you around?
[15:07:08] <johnbender> gseguin: it seems like a waste to ahve all those strings and the code in there given we're concating the files together based on the deps
[15:07:26] <johnbender> gseguin: so I like that
[15:07:35] <johnbender> I take it r.js doesn't do that for us?
[15:07:49] <gseguin> I had to hack it
[15:08:10] <johnbender> gseguin: am I crazy for thinking that would be a nice thing to have to shrink lib size?
[15:08:23] <gseguin> we could take that hack outside r.js and post-process the combined file
[15:08:37] <johnbender> gseguin: before the closure step
[15:08:46] <gseguin> correct
[15:08:50] <gseguin> although
[15:09:00] <gseguin> the minifier is UglifyJS
[15:09:04] <gseguin> not closure
[15:09:13] <johnbender> I thought r.js let you use the closure compiler
[15:09:18] <gseguin> but r.js works with closure compiler
[15:09:21] <gseguin> yes
[15:09:23] <johnbender> kk
[15:09:41] <johnbender> I like the hacky way for now
[15:10:02] <gseguin> 'k
[15:10:24] <johnbender> honestly it feels like a big step to "endorse" the module setup in there by using it in the project
[15:10:42] <johnbender> gseguin: any thoughts on that?
[15:10:42] <gseguin> maybe we should externalize the hack as a bunch of sed in the makefile so we can upgrade r.js
[15:10:49] <johnbender> gseguin: yes
[15:10:51] <johnbender> definitely
[15:11:00] <johnbender> and the require/r stuff should go in external
[15:11:08] <gseguin> 'k
[15:11:56] <johnbender> gseguin: I'm fine with this stuff but I think it would be good to get some other eyes, and at least a sanity check from the core team about the level of integration with the module system
[15:12:15] <gseguin> sure
[15:12:22] <johnbender> then I guess after moving the replacement out to the makefile
[15:12:36] <gseguin> that should take no time
[15:12:43] <johnbender> the next thing would be to sort out what the *actual deps*
[15:12:46] <johnbender> are
[15:12:50] <johnbender> which sounds hard
[15:13:11] <gseguin> who should we ping in the core team?
[15:13:23] <johnbender> gseguin: let me go ask
[15:13:53] <gseguin> I know that James Burke (the author of RequireJS) provided them with the patch for making jQuery an AMD module for jQuery 1.7
[15:15:13] <gseguin> brb
[15:17:30] <gseguin> back
[15:17:52] <gseguin> johnbender: oh I remember why I hacked inside r.js
[15:18:30] <gseguin> it's because it does dependency resolution and minifying in one call
[15:19:01] <gseguin> but I guess we can stop at dependency resolution and minify as we use to
[15:19:41] <johnbender> that's what I'm hoping for
[15:20:01] <johnbender> gseguin: the closure compiler can do a lot more for us if we want it to in the future too
[15:20:47] <gseguin> so one thing AMD (the almond branch) brings you
[15:21:05] <gseguin> is that everything is a module and becomes a local var in another module
[15:21:38] <gseguin> so for instance core would define and return $.mobile and would become a local var in all the other modules
[15:21:45] <toddmparker_> heading out guys...talk to you tomorrow!
[15:21:53] <gseguin> later toddmparker_
[15:22:00] <johnbender> toddmparker_: safe trip home
[15:22:16] <gseguin> making it possible for the minifier to reduce the ref to $.mobile to 1 letter var
[15:22:39] <gseguin> johnbender: does that make sense ?
[15:22:44] <johnbender> gseguin: yes
[15:23:04] <johnbender> gseguin: what's the size difference?
[15:23:24] <gseguin> I haven't gone that far in the other branch
[15:23:37] <gseguin> but I can tell you that our project here
[15:23:52] <gseguin> we were using namespaced vars
[15:24:05] <johnbender> gseguin: what's the difference between the two branches in terms of implementation from my quick look it wasn't obvious
[15:24:20] <gseguin> and switching to AMD even with the RequireJS library added we're lighter that we where
[15:24:27] <gseguin> s/where/were/
[15:24:48] <gseguin> almost none
[15:24:59] <gseguin> no hack in r.js
[15:25:30] <gseguin> and inserting almond.js at build time so define/require functions are defined and do something
[15:25:52] <johnbender> gseguin: but that get's packaged with the lib?
[15:25:56] <johnbender> *gets
[15:25:58] <gseguin> yes
[15:26:18] <johnbender> I need to check that out for educational purposes but I don't think we can do that
[15:26:30] <gseguin> almond.js is ~800 bytes when minified
[15:26:34] <johnbender> just from a project perspective
[15:26:39] <johnbender> regardless of size
[15:26:43] <gseguin> why ?
[15:26:57] <johnbender> gseguin: external deps are an issue for a couple reasons
[15:27:04] <johnbender> 1. it's out of our control
[15:27:27] <johnbender> 2. the library is endorsing it as our "choosen" solution for loading/etc
[15:27:51] <johnbender> 3. extra update maintenance (which you could merge with 1)
[15:28:05] <johnbender> although I suppose 3 is an issue either way
[15:28:36] <johnbender> but we aren't packaging anything with the library the other way we're just using it to create builds
[15:28:41] <gseguin> I'm not sure I understand 2.
[15:28:55] <johnbender> gseguin: just my personal opinion
[15:29:00] <johnbender> gseguin: thought experiment
[15:29:14] <johnbender> gseguin: if we started using zepto in place of core how would that look?
[15:29:22] <johnbender> we'd be endorsing it
[15:29:41] <johnbender> which obviously would never happen but people watching the project would take that to mean something
[15:29:44] <gseguin> but here we're not replacing an existing component
[15:30:12] <johnbender> true
[15:30:14] <johnbender> hmm
[15:30:19] * johnbender hates leaky analogies
[15:30:54] <gseguin> and the license should not be an issue either
[15:31:01] <johnbender> not worried about the license
[15:31:02] <gseguin> it's BSD/MIT
[15:31:04] <johnbender> I checked that
[15:31:06] <gseguin> ok
[15:31:15] <johnbender> although i'm not a license guru
[15:31:39] <gseguin> anyways we can leave it open for discussion we can even develop our own AMD-loader shim
[15:31:49] <johnbender> gseguin: fair enough
[15:31:52] <gseguin> I'm just not sure it
[15:32:03] <gseguin> 's worth reinventing the wheel
[15:32:08] <johnbender> gseguin: correct
[15:32:20] <johnbender> but we've done that alot with this library remember
[15:32:42] <johnbender> for the reason that we just can't have external deps
[15:32:49] <johnbender> or at least as few as possible
[15:33:14] <johnbender> gseguin: maybe a better example would be php
[15:33:24] <johnbender> gseguin: though this is leaky too
[15:33:33] <gseguin> yeah it is :)
[15:33:51] <johnbender> since it was the dev backend for the core project it gets used as the default for the child projects
[15:34:08] <johnbender> its the "blessed" backend tech for dev on jqm
[15:34:42] <johnbender> we're saying to people "that's the way to do it"
[15:34:59] <johnbender> which is really only good in the domain in which we're experts
[15:35:08] <johnbender> mobile browser quirks :P
[15:35:15] <johnbender> anyway, you're right
[15:35:19] <gseguin> more than not having a dependency on PHP I thing the big win for the dev env is having the actual files in the debugger
[15:35:30] <johnbender> gseguin: yassir
[15:35:57] <gseguin> alright so: "SHIP IT!" ?
[15:35:59] <gseguin> :P
[15:36:00] <johnbender> lol
[15:36:27] <johnbender> gseguin: how are we going to determine deps?
[15:36:54] <gseguin> heh, I guess we can try to pull only the right resources in the docs
[15:37:03] <gseguin> and look for errors
[15:37:15] <johnbender> gseguin: I was thinking the tests
[15:37:32] <gseguin> yeah or that
[15:37:32] <johnbender> but those are integration tests which means they naturally pull in more than is strictly neccessary
[15:38:02] <johnbender> gseguin: I was thinking we might need a seperate set of tests to check that builds work as expected :(
[15:38:30] <johnbender> gseguin: so for the couple basic builds that we talked about we'd have a set of tests to verify that they work in some expected manner
[15:41:58] <gseguin> for the widgets, we can try to render them and test for classes
[15:42:47] <gseguin> but we would need all the tests to have their own test page
[15:43:27] <gseguin> actually I think you can define contexts for require.js (but I never played with them)
[15:43:44] <gseguin> johnbender: ^
[15:44:21] <garann> toddmparker_: i am now
[15:44:53] <gseguin> garann: you missed him
[15:45:00] <johnbender> gseguin: seperate pages is fine, I don't forsee building a ton of tests for this
[15:45:33] <johnbender> gseguin: do you mean a different page for each widget or a different page for each "class tests"?
[15:45:47] <garann> shoot
[15:45:51] <garann> thanks gseguin
[15:45:52] <gseguin> for each widget
[15:45:59] <gseguin> np
[15:46:12] <johnbender> gseguin: yah that's totally fine
[15:46:28] <johnbender> gseguin: we've got a file name postfix that will just get picked up by the tests suite
[15:46:31] <johnbender> so that's minor
[15:47:13] <gseguin> k
[15:47:22] <gseguin> so let me get that hack out of r.js
[15:47:28] <johnbender> gseguin: sweet
[15:47:35] <gseguin> and re-use google closure compiler
[15:47:42] <johnbender> gseguin: that will make that easy to update too
[15:47:49] <gseguin> and then I'll try to write a test
[15:47:58] <johnbender> shweet
[15:48:05] <gseguin> and then I'll probably hand it off to you
[15:48:10] <gseguin> until next weel
[15:48:14] <gseguin> *week
[15:48:23] <johnbender> gseguin: http://images.pictureshunt.com/pics/i/internet_high_five-2496.jpg
[15:48:26] <johnbender> gseguin: well done man
[15:48:31] <johnbender> thanks for doing all the hard work
[15:49:06] <gseguin> my pleasure
[15:49:35] <johnbender> gseguin: having a build system that understands our dep tree will be huge
[15:49:38] <johnbender> in a lot of ways
[15:49:55] <johnbender> the MooTools builder has been around for _ages_
[15:50:04] <johnbender> so it's about time we sorted that out here
[15:50:06] <gseguin> same for dojo
[15:50:08] <johnbender> yar
[15:50:24] <gseguin> it brings structure to your code
[15:50:37] <gseguin> which passed 2 files should be mandated
[15:51:14] <johnbender> :D
