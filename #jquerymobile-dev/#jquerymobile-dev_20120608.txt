[00:03:11] <jqmobilecommit> [jquery-mobile] uGoMobi pushed 1 new commit to 1.1-stable: http://git.io/WeYyrQ
[00:03:11] <jqmobilecommit> [jquery-mobile/1.1-stable] Merge pull request #4008 from uGoMobi/patch-9 - Jasper de Groot
[00:35:00] <jq-jenkins> Yippie, build fixed!
[00:35:00] <jq-jenkins> Project jQuery Mobile Phantom 1.1-stable build #62: FIXED in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%201.1-stable/62/
[07:00:48] <deAtog> is there a way to create and display a dialog all via script?
[07:31:39] <toddparker> _|Nix|_: you here?
[07:32:11] <toddparker> tested http://babulina.go-nix.ca/nix/jqm-lazy-slider/slider.html
[07:32:23] <toddparker> I tested the slider on the following:
[07:32:24] <toddparker> Android 2.2
[07:32:25] <toddparker> Android 2.3
[07:32:27] <toddparker> Android 4.0X
[07:32:28] <toddparker> iOs 4.3
[07:32:29] <toddparker> iOs
[07:32:30] <toddparker> I couldn't open the link on the Windows phones.
[07:32:31] <toddparker> There was no noticeable difference between the two sliders on any of the devices
[07:33:02] <toddparker> sorry, tested on Android 2.2, Android 2.3, Android 4.0, iOS 4.3 and 5
[07:33:13] <toddparker> no improvement so this isn't worth pursuing
[07:58:48] <_|Nix|_> toddparker: Thanks!
[08:01:47] <toddparker> no problem, it was our new intern zach
[08:02:01] <toddparker> he's all set up to test, just need a url and what to look for
[08:02:50] <_|Nix|_> toddparker: Nice!
[08:04:48] <_|Nix|_> toddparker: Yeah ... the slider's quite a dilly of a pickle ... I think it's about the only widget where some portion of the widget has to move around real-time ...
[08:05:20] <uGoMobi> hi guys!
[08:05:49] <_|Nix|_> toddparker: ... and as such, I think it's going to have to wait for a generic solution - one that applies to any DOM element that has to move in real time in response to mouse messages.
[08:06:07] <_|Nix|_> toddparker: ... a solution provided by the engine underneath.
[08:07:09] <toddparker> hi uGoMobi
[08:07:51] <toddparker> eventually, I use want to pull in UI's interactive (drag, drop, sort) but they aren't yet touch optimized
[08:08:18] <toddparker> can't wait for that button PR to land, it closes so many bugs
[08:08:33] <toddparker> i sort of got OCD last night and went on a mission to get us below 400
[08:08:33] <_|Nix|_> toddparker: Does that promise to improve performance on mobile devices?
[08:08:42] <_|Nix|_> :)
[08:08:45] <toddparker> the UI stuff?
[08:08:50] <_|Nix|_> toddparker: Yeah.
[08:09:07] <toddparker> hopefully, I don't think they are far along in that process
[08:09:15] <toddparker> so it could be a while
[08:09:17] <uGoMobi2> toddparker: haha... yeah i noticed you have been busy last night :-)
[08:09:43] <_|Nix|_> toddparker: Then you guys are gonna hate me: I filed a new bug :)
[08:10:12] <uGoMobi2> toddparker: good news is that the unit test error is gone
[08:10:26] <_|Nix|_> I noticed that, at least in the unit tests, the pushState hashchange handler can end up becoming registered before the vanilla hashchange handler ...
[08:10:29] <uGoMobi2> _|Nix|_ lol... it better be a good one ;)
[08:11:00] <_|Nix|_> uGoMobi2: ^
[08:11:09] <toddparker> great uGoMobi2
[08:11:31] <toddparker> that's fine _|Nix|_
[08:11:39] <toddparker> just trying to close out the deadwood
[08:11:45] <toddparker> bugs form 2 years ago!
[08:11:54] <_|Nix|_> uGoMobi2: When gseguin comes around, I'll ask him if there's a way to check whether the dependency tree leaves any possibility for pushState to load before navigation.
[08:13:28] <_|Nix|_> I suppose I can try this by hand ... inject a script tag, and see what scripts get loaded as a result ...
[08:13:45] <uGoMobi2> _|Nix|_: i have to admit this stuff is not really my specialty ;)
[08:13:58] <_|Nix|_> uGoMobi2: Nor mine ...
[08:14:24] <uGoMobi2> what you are saying lands very slow here ;)
[08:14:55] <uGoMobi2> be right back... out and in to get my normal nick back
[08:36:34] <gseguin> good morning!
[08:36:38] <gseguin> what'd I miss?
[08:46:59] <toddparker> hi again
[08:47:50] <gseguin> _|Nix|_: checking
[08:49:51] <gseguin> _|Nix|_: not unless we remove the dependency on navigation in pushState
[09:00:47] <toddparker> lost my internets
[09:00:58] <toddparker> so if i missed anything i need to respond to, let me know
[09:05:51] <uGoMobi> JasonDScott: https://github.com/jquery/jquery-mobile/commit/4b276de999310348e8071109b38428a8ffab0b53
[09:05:52] <socialhapy> â˜… Commit on jquery-mobile by jasondscott (1m, 1w ago): Fixes #4227 - Button+data-iconpos="notext" in listview  Cause: The css to position the arrow indicator in a list was also being applied to the button icon if it appeared in the list.  How fixed: Used '>' css to target only direct children
[09:06:29] <uGoMobi> JasonDScott: that commit causes all icons to be out of position on IE7 (and WP7?)
[09:07:38] <uGoMobi> JasonDScott: maybe we have to look into other way to solve #4227
[09:29:15] <toddparker> good catch uGoMobi
[09:29:34] <toddparker> maybe we can use some class combination to target the rules?
[09:32:09] <uGoMobi> toddparker: don't know yet... just noticed the icons are misaligned in IE7 and that commit adds ">" to the selector which IE7 doesn't understand
[10:13:06] <uGoMobi> toddparker: on what device did you test Opera Mobile?
[10:44:43] <_|Nix|_> gseguin: Do you happen to know what part of navigation pushState uses?
[10:45:53] <_|Nix|_> gseguin: Here it is, I think: $.mobile.urlHistory.ignoreNextHashChange = value;
[10:46:25] <gseguin> _|Nix|_: no I don't
[10:46:51] <_|Nix|_> gseguin: I can put a null-check around that ...
[10:47:25] <_|Nix|_> gseguin: It should never be null, but if we remove the dep, we also remove the guarantee ...
[10:47:50] <gseguin> is there a way we can decouple ?
[10:48:05] <_|Nix|_> gseguin: To put a null-check around that line.
[10:48:11] <_|Nix|_> gseguin: ... is the way to decouple.
[10:48:20] <gseguin> ok then go for it
[10:49:00] <_|Nix|_> gseguin: OK ... lessee ... dunno how to test though ...
[10:49:32] <_|Nix|_> gseguin: I mean, OK, remove dep, add null-check, run unit tests - sure. But do we have a test for what happens when you run with pushState but sans navigation?
[10:51:05] <_|Nix|_> gseguin: Hold on a minute - if pushState depends on navigation, then shouldn't the navigation hashchange handler /always/ be bound first?
[10:51:40] <gseguin> _|Nix|_: I don't think we do
[10:52:21] <_|Nix|_> gseguin: Currently pushState does indeed depend on navigation.
[10:52:36] <_|Nix|_> gseguin: It's listed as the second dependency after jquery.
[10:53:14] <_|Nix|_> gseguin: Do these dep definitions guarantee that the immediate functions enclosing the various jqm modules are executed in a certain order, or do they merely guarantee that the modules will be present?
[10:54:16] <gseguin> it guarantees that the dependency will be written in the jquery.mobile.js first
[10:54:41] <gseguin> therefore the IIFE defining that module being executed first
[10:55:04] <_|Nix|_> gseguin: Is that also true for $.testHelper.asyncLoad?
[10:55:19] <_|Nix|_> gseguin: Something tells me it's not.
[10:56:57] <gseguin> so in an AMD environment using RequireJS, right?
[10:57:07] <gseguin> hmm that's a good question
[10:57:12] <gseguin> I would imagine so
[10:57:42] <_|Nix|_> gseguin: The comments for asyncLoad say that "each require and it's dependencies in a // set will be loaded asynchronously
[10:57:52] <_|Nix|_> "
[10:58:00] * gseguin checks
[10:58:40] <_|Nix|_> I mean, requirements cannot be loaded asynchronously. They have to be loaded in a certain order.
[10:59:43] <_|Nix|_> The funny thing is, we're trying to reproduce upstart for jqm ... i.e., load services asynchronously as much as possible, but allow for the definition of dependencies, which constrain the number of available load sequences.
[11:01:00] <gseguin> so the reason behind using AMD for testing is be able to find dependency issues early on
[11:03:33] <_|Nix|_> gseguin: So, I guess this is a dependency issue ...
[11:04:00] <_|Nix|_> gseguin: Is there a way to console.log when it's actually loading a file?
[11:04:11] <jqmobilecommit> [jquery-mobile] johnbender pushed 3 new commits to master: http://git.io/cYhr0A
[11:04:11] <jqmobilecommit> [jquery-mobile/master] move config to grunt.js and config tasks into tasks dir - John Bender
[11:04:11] <jqmobilecommit> [jquery-mobile/master] remove sed helper in favor of grunt copy - John Bender
[11:04:11] <jqmobilecommit> [jquery-mobile/master] remove rmdir helpe in favor of rimraf - John Bender
[11:04:40] <_|Nix|_> gseguin: Also, I've had a really weird experience: I copy index.html to something-tests.html and in index.html nav loads before push, but in something-tests.html push loads before nav.
[11:04:55] <gseguin> I guess putting a console.log in your AMD module callback function
[11:05:25] <gseguin> is there another module require either of these?
[11:06:19] <_|Nix|_> gseguin: Dunno ... another interesting thing to do would be to generate a dep graph ...
[11:06:55] <gseguin> That should be relatively easy
[11:07:17] <gseguin> the builder service has a method to generate a dep map
[11:07:47] <_|Nix|_> gseguin: Nice!
[11:10:17] <toddparker> uGoMobi:  Android 2.3 phone was used for Opera Mobile testing
[11:10:59] <_|Nix|_> gseguin: Putting a console log in the require callback does not output when the dependencies of the require are being loaded - just when the require itself has finished loading. Is there one I can place so all deps are also dumped to the console?
[11:11:01] <uGoMobi> toddparker: ok thanks. Maybe had to do with fixed toolbars because I can not reproduce on emulator.
[11:11:20] <uGoMobi> The issue with select menu not opening I mean
[11:12:05] <uGoMobi> Will remove fixed toolbars from test page.
[11:12:09] <gseguin> _|Nix|_: the callback is executed when all the dependencies have been resolved
[11:13:06] <gseguin> the order in which the dependencies are loaded will depend on their dependencies
[11:13:36] <_|Nix|_> gseguin: Right. That's exactly what I want: A console log just before a dependency is loaded, up to and including the requested module.
[11:14:06] <gseguin> you might have to do that in requirejs
[11:14:12] <gseguin> it might be simpler
[11:16:19] <_|Nix|_> gseguin: I'm browsing it now, looking for the appropriate spot ...
[11:23:29] <jq-jenkins> Project jQuery Mobile Phantom Master build #93: UNSTABLE in 17 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/93/
[11:24:01] <toddparker>  General design option time
[11:24:36] <toddparker> We added a brief active state to all collapsibles to give immediate feedback that you actually pressed them because there can be a delay
[11:25:00] <toddparker> I think this was only added for touch events - JasonDScott you added this right?
[11:25:01] <toddparker> http://jquerymobile.com/test/docs/content/content-collapsible.html
[11:25:25] <toddparker> lists already have a active state when pressed but it stays until we manually clear it
[11:25:52] <toddparker> all other button-y things don't get an active state and I am finding it hard to know if i pressed a button or select in some cases
[11:26:23] <toddparker> so i'm wondering whether the change we added for collapsibles should be just broadened to all buttons
[11:26:25] <toddparker> discuss.
[11:27:23] <_|Nix|_> I am in favour.
[11:32:19] <toddparker> i've noticed this quite a bit in header buttons especially but really anywhere there might be a delay that leaves you wondering
[11:32:28] <toddparker> this new issue mentions it too
[11:32:29] <toddparker> https://github.com/jquery/jquery-mobile/issues/4504
[11:32:29] <socialhapy> â˜… Issue #4504 on jquery-mobile (quanta42; 1h, 43m ago): PhoneGap/Android: Back Button does not get depressed state
[11:33:03] <toddparker> thanks _|Nix|_,anyone else have an option?
[11:33:03] <toddparker> ?
[11:34:26] <uGoMobi> toddparker: sorry I got disconnected... not sure I got all, will read back on log
[11:34:35] <uGoMobi> sounded related to this https://github.com/jquery/jquery-mobile/issues/4469
[11:34:36] <socialhapy> â˜… Issue #4469 on jquery-mobile (janimattiellonen; 1w, 3d ago): No visual feedback given when pressing a button/stylished link
[11:38:30] <gseguin> toddparker: regarding 4504
[11:39:04] <gseguin> the problem is not there for buttons created with data-rel="button"
[11:41:02] <_|Nix|_> gseguin: This may not be a dependency issue at all: nav hashchange is bound from init, but after init emits mobileinit. Thus, if pushState is loaded by then and domready has already happened, then the two deferreds will both be resolved and the pushState handler will be bound. The hashchange handler is bound much later.
[11:41:48] <_|Nix|_> gseguin: Besides, we shouldn't be relying on the order in which these are bound, because the order in which callbacks are called may change in later versions of jQuery ...
[11:42:00] <gseguin> oh so are you saying that the binding doesn't happen at the appropriate time?
[11:42:20] <gseguin> indeed
[11:42:25] <_|Nix|_> gseguin: The nav binding doesn't happen from within the nav immediate function.
[11:42:51] <deAtog> johnbender, _|Nix|_: this works http://jsfiddle.net/J726u/, this doesn't: http://jsfiddle.net/dVrKS/1/
[11:43:00] <_|Nix|_> gseguin: ... and the pushState binding happens from the mobileinit/domready deferred chain ...
[11:43:42] <johnbender> what am I looking at
[11:44:23] <deAtog> johnbender: a dialog opened and created via script in the first.., a dialog opened and displayed as a popup via script in the second
[11:44:49] * johnbender sneaks out of the conversation for which he has no context
[11:44:49] <uGoMobi> toddparker: do you mean behaviour like the top button in this example? http://jsbin.com/otepum/80
[11:45:59] <toddparker> gseguin: you mean data-role="button"
[11:46:10] <deAtog> toddparker: sorry, thought you knew a lot about dialogs.. maybe its more of a question for gseguin
[11:46:10] <gseguin> yes sorry
[11:46:15] <toddparker> ok, odd
[11:46:22] <toddparker> maybe it's a timing thing
[11:46:47] <_|Nix|_> deAtog: Can you file an issue about that? That looks like a popup bug ...
[11:46:52] <toddparker> not sure when that auto gen back button is created vs. having a static button in the markup
[11:47:03] <gseguin> toddparker: that's what quanta42 (a coworker) claims
[11:47:16] <gseguin> I'm writing a bin to verify it
[11:47:17] <deAtog> _|Nix|_: sure
[11:47:55] <toddparker> uGoMobi: that jsbin is interesting
[11:48:29] <_|Nix|_> deAtog: Give me the issue number when you're done. I'd like to flag it as "Popup".
[11:48:46] <toddparker> deAtog: yes, gseguin will be way more helpful
[11:48:59] <uGoMobi> toddparker: I saw in the code that we prevent this active state when link has href="#"
[11:49:18] <toddparker> uGoMobi: that top example is exactly what i had in mind
[11:49:37] <toddparker> could only happen on touch devices since it may be overkill with a mouse but hey
[11:49:49] <toddparker> the bottom example feels better to me with a mouse
[11:50:19] <toddparker> ah, interesting
[11:50:42] <toddparker> so if a button has a normal href, the active state should already flash when tapped?
[11:50:45] <toddparker> i don't see that
[11:50:50] <toddparker> in /test/
[11:51:43] <uGoMobi> so maybe it affects all hrefs
[11:51:49] <uGoMobi> have to check again
[11:52:54] <uGoMobi> i wouldn't mind if it would always be like the top example, even with mouse
[11:57:00] <deAtog> _|Nix|_: https://github.com/jquery/jquery-mobile/issues/4507
[11:57:01] <socialhapy> â˜… Issue #4507 on jquery-mobile (deAtog; 48.197s ago): Unable to display dynamically created dialog in popup.
[11:58:17] <_|Nix|_> deAtog: Thanks!
[12:00:01] <_|Nix|_> gseguin: It seems that the only thing controlling the order in which the handlers are bound is domready. If domready arrives while pushState is loading, then the domready deferred is resolved immediately, and then pushState is guaranteed to bind before nav, because init triggers mobileinit before it calls the binder for nav (_registerInternalEvents).
[12:00:02] <toddparker> u	
[12:00:11] <toddparker> uGoMobi: i agree - more feedback is better
[12:00:30] <toddparker> the collapsibles feel more responsive because I know my click worked
[12:00:43] <toddparker> we also need to figure out a good style for plain links
[12:00:50] <toddparker> for feedback when clicked
[12:02:40] <_|Nix|_> johnbender: The onHashChange handler for pushState may need to be exposed so it can be called from the hashchange handler for nav. That's the only sure-fire way to get it to run after nav.
[12:04:56] <_|Nix|_> johnbender: ... or we can use some rudimentary binding of our own - like, pushState passes a callback to nav and nav calls it after its own hashchange handling ...
[12:05:27] <johnbender> _|Nix|_: we can probably do some finagling to force them to bind in order
[12:05:36] <johnbender> did you see the suggestions I made in the issue?
[12:05:41] <johnbender> I think we've got a couple options
[12:05:56] <johnbender> _|Nix|_: gseguin will have to take a look
[12:06:02] * _|Nix|_ refreshes the issue ...
[12:07:06] <_|Nix|_> johnbender: I guess the passing-a-callback-to-nav would fall under 3. :)
[12:07:48] <_|Nix|_> johnbender: 1. Would also require exposing the handler, no?
[12:08:22] <_|Nix|_> johnbender: We could use a recurring-deferred ...
[12:09:00] <johnbender> I'd rather deal with load order issues via the load order I guess
[12:09:23] <_|Nix|_> johnbender: That's just it though. Both nav and pushState are done loading.
[12:09:27] <johnbender> let's wait to hear back from gsegion, it might be that we have no other option
[12:09:40] <johnbender> *gseguin
[12:15:07] <_|Nix|_> johnbender: We don't have the option of loading pushState after init, because init triggers mobileinit and if pushstate hasn't attached its deferred to that, then it will never resolve it because mobileinit is only ever fired once.
[12:15:38] <johnbender> I thought the issue was that pushState and Nav loaded in the wrong order
[12:16:07] <_|Nix|_> johnbender: But init attaches the nav hashchange handler by calling $.mobile._registerInternalEvents();
[12:17:13] <_|Nix|_> johnbender: So, it's really init and pushstate that have to be in the right order.
[12:17:25] <_|Nix|_> johnbender: But they can only be in one order: pushstate and then init.
[12:17:43] <_|Nix|_> johnbender: Otherwise, pushstate will miss mobileinit, and so will never initialize.
[12:18:07] <johnbender> The pushState hashchange handler is designed to run after the vanilla navigation hashchange handler
[12:18:22] <johnbender> that makes sense
[12:18:58] <johnbender> so registering the internalEvents set's up nav but somehow comes after pushState?
[12:19:13] <johnbender> init will always be loaded after pushState with the way the async loading is set up I believe
[12:19:22] <johnbender> that is the module
[12:19:29] <_|Nix|_> Good. It must be that way.
[12:19:30] <johnbender> still trying to understand the issue
[12:19:37] <johnbender> one sec
[12:21:01] <_|Nix|_> johnbender: Here's the sequence: 1. nav load begin. 2. nav load end. 3. push load begin. 4. push load end. 5. init load begin. 6. trigger mobileinit. 7. register nav handler.
[12:21:29] <johnbender> and where does the deferred in the pushState module fall in there
[12:21:41] <johnbender> recall that it binds to the latest of the two events domready or mobileinint
[12:22:15] <johnbender> so the nav handler being registered later would come after if mobileinit is the second event/
[12:22:18] <johnbender> ?
[12:22:29] <_|Nix|_> johnbender: Yeah, so if domready has already happened by the time you trigger mobileinit, the domready deferred will resolve immediately, and then mobileinit is guaranteed to fire before registering the nav handler.
[12:22:44] <johnbender> ok
[12:22:50] * johnbender goes to look
[12:26:50] <johnbender> _|Nix|_: so you're suggestion is that we have a puhstate equivelant to _registerInternalEvents ?
[12:27:32] <johnbender> ie, expose the binding
[12:28:33] <_|Nix|_> johnbender: Yeah. That's one possibility.
[12:28:46] <_|Nix|_> johnbender: The alternative is that pushState passes a callback to nav.
[12:29:06] <_|Nix|_> johnbender: ... that way it can keep its privacy.
[12:29:20] <johnbender> meh
[12:30:19] <_|Nix|_> johnbender: We can repurpose the domready deferred.
[12:30:26] <johnbender> ah
[12:30:28] <johnbender> that's the answer
[12:30:30] <johnbender> deferreds
[12:30:41] <_|Nix|_> johnbender: Pass it to nav, have nav resolve it whenever it sees fit.
[12:31:13] <johnbender> well
[12:31:19] <johnbender> that has the same issue as an events based approach
[12:31:22] <_|Nix|_> johnbender: ... or introduce a third precondition, because, after all, domready may still be required.
[12:31:26] <johnbender> we have to ensure nav loads first
[12:32:00] <_|Nix|_> johnbender: That's already the case. pushstate depends on nav.
[12:32:11] <johnbender> k
[12:32:18] <johnbender> then we can do one of two things it seems to em
[12:32:27] <johnbender> different ways of doing the same thing
[12:32:35] <johnbender> nav can provide a "nav ready" deferred
[12:32:41] <johnbender> or it can trigger a nav ready event
[12:32:56] <johnbender> and then the register method would just result the deferred
[12:33:09] <johnbender> or do it's business and trigger the event
[12:33:15] <johnbender> not sure which is better
[12:33:35] <_|Nix|_> I like the navready deferred.
[12:33:40] <johnbender> same
[12:33:44] <johnbender> we're poluting the event space
[12:34:02] <johnbender> fuck, we need to get nav into a namspace
[12:34:09] <johnbender> that thing bloats the $.mobile like there's no tomorrow
[12:34:25] <_|Nix|_> johnbender: deferreds have the wonderful quality that they'll fire handlers immediately if they're already resolved.
[12:34:35] <johnbender> _|Nix|_: facts
[12:34:39] <johnbender> good facts
[12:34:51] <johnbender> $.mobile.navReadyDeferred ?
[12:35:02] <johnbender> and just resolve i in place of the registerInternalEvents?
[12:35:14] <_|Nix|_> *sigh* ... let's go with it.
[12:35:29] <_|Nix|_> What do you mean "in place of the registerInternalEvents"?
[12:35:35] <johnbender> so get rid of that method
[12:35:58] <johnbender> attach a callback to the deferred that does the event binding for navigation
[12:36:15] <johnbender> resolve it in the init module
[12:36:15] <_|Nix|_> johnbender: ... and init resolves the deferred?
[12:36:17] <johnbender> yes
[12:36:22] <johnbender> does that make sense?
[12:36:27] <_|Nix|_> johnbender: I bow before your wisdom.
[12:36:29] <johnbender> lol
[12:36:32] <johnbender> lack thereof
[12:36:41] <johnbender> we should definitely have gseguin take a look
[12:36:47] <_|Nix|_> johnbender: <bad lipsynching goes here>
[12:36:48] <johnbender> it's all too likely I'm doing something very stupid
[12:37:04] <johnbender> s/doing/doing + saying/
[12:38:29] <_|Nix|_> johnbender: A problem: If both nav and pushState bind to the deferred, we are once more handing over control to jquery in terms of which handler gets called first.
[12:39:02] <johnbender> ah you're concerned about the bind ordering semantics changing out from under our feet again?
[12:39:03] <_|Nix|_> johnbender: We should keep _registerInternalEvents, and have _registerInternalEvents resolve the deferred.
[12:39:15] <johnbender> hmm
[12:39:19] <johnbender> not sure what you mean
[12:39:31] <johnbender> that was my original concern was that it was load order dependent
[12:39:36] <johnbender> but I thought you said it didn't matter
[12:39:42] <_|Nix|_> init calls _registerInternalEvents, which binds the nav hashchange handler and then resolves the deferred.
[12:40:15] <johnbender> and why is that better than just resolving the deferred?
[12:40:22] <johnbender> that works just as well, I'm just curious
[12:41:29] <_|Nix|_> I guess you're right. The only concern is that it will change under our feet.
[12:41:55] <johnbender> yes
[12:42:03] <johnbender> which is valid given recent events but I'm not worried about it
[12:42:25] <johnbender> and that was event based
[12:42:35] <johnbender> deferreds are more concrete(??????)
[12:42:37] <johnbender> lol
[12:42:46] <johnbender> no idea where I'm making that claim from
[12:43:30] <_|Nix|_> johnbender: The fact is that nav can bind to the deferred inline as it creates it, because the constructor to deferred takes an optional function which receives it as its parameter and can then do the call to _registerInternalEvents right then and there.
[12:44:07] <johnbender> _|Nix|_: either way you want to do it really
[12:44:15] <johnbender> I just figured we should only expose one thing on mobile
[12:44:20] <johnbender> the deferred
[12:44:24] <johnbender> up to you!
[12:44:50] <_|Nix|_> johnbender: Yeah, absolutely, and we unexpose one thing, private though it may be: _registerInternalEvents ...
[12:45:08] <_|Nix|_> johnbender: We could make the deferred private too, like _navReadyDeferred ...
[12:45:49] <_|Nix|_> johnbender: The semantics are a bit twisted though, since init resolves this. It's basically like: "Hey, I am init, and I am telling you Mr. Nav that you are now ready."
[12:46:26] <johnbender> I'm for trusting the deferred and keeping to one property
[12:46:32] <johnbender> but that doesn't make it the right way
[12:46:35] <johnbender> go for it
[12:46:42] <johnbender> and we can discuss on a pr I guess?
[12:46:53] <_|Nix|_> Yeah, good idea.
[13:05:17] <jqmobilecommit> [jquery-mobile] gabrielschulhof created nav-ready-deferred (+1 new commit): http://git.io/zLN2-A
[13:05:17] <jqmobilecommit> [jquery-mobile/nav-ready-deferred] [navigation] Introduce navReadyDeferred to synchronize hashchange binding - Gabriel Schulhof
[13:06:53] <_|Nix|_> johnbender: https://github.com/jquery/jquery-mobile/pull/4508
[13:06:54] <socialhapy> â˜… Pull request on jquery-mobile by gabrielschulhof (42.764s ago): [navigation] Introduce navReadyDeferred to synchronize hashchange ...
[13:15:18] <_|Nix|_> So, Thursday's flag day in the States. Does that mean no meeting?
[13:15:48] <_|Nix|_> ... or is it Flag Day ... not sure how it's officially written.
[13:21:54] <uGoMobi> _|Nix|_: how can it be my page has a hidden popup container while I dont have any popups at my site?
[13:22:14] <uGoMobi> http://ugomobi.github.com/buttons-form/buttons-form-new.html
[13:22:54] <uGoMobi> _|Nix|_: when I inspect the code of that page I see 2 popup containers
[13:24:37] <uGoMobi> _|Nix|_: ah wait... custom selectmenu?
[13:25:14] <uGoMobi> thats it...sorry :-)
[13:25:25] <uGoMobi> not used to popups yet
[13:38:39] <_|Nix|_> NP :)
[13:41:56] <gseguin> _|Nix|_: I don't think Thursday is a holiday for other businesses than banks (if it even is)
[13:44:30] <_|Nix|_> gseguin: Aaaah, OK ... cool - so, business as usual.
[13:45:09] <gseguin> yep
[14:12:39] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to nav-ready-deferred: http://git.io/0LfbOg
[14:12:39] <jqmobilecommit> [jquery-mobile/nav-ready-deferred] [navigation] Rename navReadyDeferred to navreadyDeferred - Gabriel Schulhof
[14:13:28] <_|Nix|_> gseguin, johnbender: So, can I merge nav-ready-deferred? I changed the capitalization ^
[14:13:40] <johnbender> _|Nix|_: do the nav tests pass?
[14:13:41] <gseguin> +1
[14:13:45] <johnbender> I think it's great
[14:13:58] <johnbender> that is they pass in at least one browser?
[14:14:10] <_|Nix|_> johnbender: I'll run them again, just in case, but they passed last time.
[14:15:35] <_|Nix|_> johnbender: Running now ... *drumroll*
[14:25:08] <toddparker> yeah, we're working on flag day here anyway
[14:25:39] <toddparker> so i'm going to head out in a few
[14:25:52] <toddparker> anyone need anything for little old me?
[14:29:06] <uGoMobi> toddparker: just ready with update for PR
[14:30:48] <uGoMobi> toddparker: would be create if we can pull for the weekend so I don't have to worry about merging conflicts when working on other fixes
[14:32:34] <uGoMobi> would be great even :-)   (sounds the same)
[14:34:31] <toddparker> just commented uGoMobi
[14:34:37] <toddparker> ready to go i think
[14:34:55] <toddparker> you can land it!
[14:35:01] <uGoMobi> cool! thanks!
[14:37:18] <toddparker> i'll be in the issue tracker more this weekend
[14:37:24] <toddparker> hope to keep chipping away
[14:38:57] <agcolom> Hi :-)
[14:40:16] <jqmobilecommit> [jquery-mobile] uGoMobi pushed 27 new commits to master: http://git.io/57bHBg
[14:40:16] <jqmobilecommit> [jquery-mobile/master] Removed default left and right margin from buttons to create consistency between buttons in and outside forms. - Jasper de Groot
[14:40:16] <jqmobilecommit> [jquery-mobile/master] Set font-size 16px for all (fullsize) buttons for consistency. - Jasper de Groot
[14:40:16] <jqmobilecommit> [jquery-mobile/master] Fixes #3284 - Added vertical-align middle for inline buttons to create consistency between browsers, since the default vertical alignment differs. - Jasper de Groot
[14:40:36] <agcolom> toddparker, just to let you know that I met with Richard again today and we resolved the problem I was having. I needed pygments to be installed... all ok now :-) I have started to do collapsibles. The docs are more complete for that one...
[14:40:38] <_|Nix|_> johnbender: Tests are all good. Merge?
[14:40:47] <johnbender> _|Nix|_: yar
[14:42:48] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to master: http://git.io/gUQbtg
[14:42:48] <jqmobilecommit> [jquery-mobile/master] Merge pull request #4508 from jquery/nav-ready-deferred - Gabriel "_|Nix|_" Schulhof
[14:43:18] <_|Nix|_> johnbender: Thar she blooows!
[14:44:20] <toddparker> great news agcolom
[14:44:23] <toddparker> you rokk
[14:44:37] <toddparker> 27 new commits. BOOM
[14:44:50] <toddparker> alright, i gotta jump
[14:44:55] <toddparker> talk to you later
[14:45:02] <uGoMobi> have a nice weekend toddparker
[14:45:09] <gseguin> later toddparker
[14:45:13] <agcolom> have a great weekend
[14:45:14] <_|Nix|_> Have a good one!
[14:45:19] <gseguin> Well done _|Nix|_ !
[14:45:27] <_|Nix|_> gseguin: Thanks!
[14:46:15] <_|Nix|_> uGoMobi: You merged a biggun too, eh? Taking a sledgehammer to bugville ... niceness!
[14:46:35] <uGoMobi> _|Nix|_: yihaa!
[14:46:46] <uGoMobi> _|Nix|_: cool you fixed that!
[14:47:22] <_|Nix|_> Yeah, this should enable me to add some initial-page-has-dialog-hash unit tests.
[14:47:32] <uGoMobi> :-)
[14:48:52] <uGoMobi> actual issue count: 368
[14:56:09] <_|Nix|_> gseguin, johnbender: BTW: Should I cherry-pick navreadyDeferred into 1.1-stable?
[14:56:33] <gseguin> It's a bug fix, right?
[14:56:48] <_|Nix|_> gseguin: I guess, but it could also be considered new API ...
[14:57:40] <_|Nix|_> gseguin: I'm tempted to cherry-pick it, because the initial-page-has-dialog-hash fix is also in 1.1-stable ...
[14:58:16] <gseguin> it's not really a public API is it?
[14:58:45] <johnbender> _|Nix|_: nope it's internal
[14:58:48] <johnbender> cherry pick away
[14:58:53] <_|Nix|_> Alright.
[14:59:05] <jq-jenkins> Yippie, build fixed!
[14:59:05] <jq-jenkins> Project jQuery Mobile Phantom Master build #94: FIXED in 16 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master/94/
[15:01:47] <jqmobilecommit> [jquery-mobile] gseguin pushed 1 new commit to master: http://git.io/dS5l8w
[15:01:47] <jqmobilecommit> [jquery-mobile/master] Fix for #4504 - Ghislain Seguin
[15:03:28] <_|Nix|_> johnbender: Well, on initial cherry-pick it breaks unit tests severely. I'm now doing a baseline on 1.1-stable before cherry-picking.
[15:04:03] <_|Nix|_> johnbender: So it's not as easy as pickin' cherries from the looks of things.
[15:09:23] <jqmobilecommit> [jquery-mobile] uGoMobi pushed 1 new commit to 1.1-stable: http://git.io/plYo4Q
[15:09:23] <jqmobilecommit> [jquery-mobile/1.1-stable] Merge pull request #4498 from uGoMobi/buttons_form - Jasper de Groot
[15:10:31] <johnbender> _|Nix|_: hrm
[15:10:43] <johnbender> _|Nix|_: are you running the /tests/unit/
[15:10:46] <johnbender> avoid that
[15:10:49] <johnbender> if you are
[15:17:11] <jq-jenkins> Project jQuery Mobile Latest build #3,363: FAILURE in 0.43 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/3363/
[15:17:28] * johnbender sighs
[15:17:29] <johnbender> memory
[15:20:01] <uGoMobi> johnbender: failure as planned? or not this time
[15:20:07] <johnbender> nope
[15:20:19] <johnbender> persistent memory issues on our poor little CI box
[15:20:21] <uGoMobi> aii
[15:20:44] <uGoMobi> so we need another donation page for more memory ;)
[15:22:53] <_|Nix|_> johnbender: OK ... it was a fluke ... tests pass now O_o
[15:22:54] <johnbender> uGoMobi: heh, indeed. We're supposed to be migrating all that stuff soon
[15:22:59] <johnbender> _|Nix|_: sigh
[15:23:02] <johnbender> push it
[15:23:20] <johnbender> _|Nix|_: if you want you can run the phantom test suite which tends to be pretty consistent
[15:23:26] <johnbender> you have to have node installed
[15:23:30] <johnbender> _|Nix|_: interested?
[15:23:34] <johnbender> node
[15:23:36] <johnbender> err
[15:23:37] <johnbender> npm install
[15:23:41] <johnbender> from the project root
[15:25:09] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 2 new commits to 1.1-stable: http://git.io/MH6B_Q
[15:25:09] <jqmobilecommit> [jquery-mobile/1.1-stable] [navigation] Introduce navReadyDeferred to synchronize hashchange binding - Gabriel Schulhof
[15:25:09] <jqmobilecommit> [jquery-mobile/1.1-stable] [navigation] Rename navReadyDeferred to navreadyDeferred - Gabriel Schulhof
[15:25:24] <johnbender> JUNIT_OUTPUT=build/test-results/ ROOT_DOMAIN=http://localhost/ TEST_PATH=navigation/ node node_modules/.bin/grunt test
[15:25:27] <johnbender> _|Nix|_: ^
[15:25:48] <johnbender> assuming the tests can be found at http://localhost/tests/unit/navigation/
[15:34:52] <jq-jenkins> Yippie, build fixed!
[15:34:52] <jq-jenkins> Project jQuery Mobile Latest build #3,364: FIXED in 1 min 25 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/3364/
[15:34:53] <jq-jenkins> Ghislain Seguin: Fix for #4504
[15:37:23] <uGoMobi> hehe build fixed :)
[15:46:09] <_|Nix|_> L8R all - me go bed now.
[15:47:08] <uGoMobi> _|Nix|_: have a nice weekend Gabriel!
[16:05:48] <jqmobilecommit> [jquery-mobile] gseguin pushed 1 new commit to 1.1-stable: http://git.io/WrhEeA
[16:05:48] <jqmobilecommit> [jquery-mobile/1.1-stable] Fix for #4504 - Ghislain Seguin
