[06:56:30] <aaronmcadam> are there any known issues about consecutive openings of a dialog?
[08:28:46] <_nickel> yah buddy!
[12:41:35] <_nickel> toddparker: kinblas: I just hammering out bugs today
[12:41:39] <_nickel> hope thats alright
[12:42:05] <_nickel> toddparker: http://johnbender.github.com/presentation-jsinjs/#1
[12:42:52] <toddparker> yep, nothing but bugs this month
[12:44:22] <toddparker> i like your presentation format _nickel
[12:44:30] <_nickel> toddparker: thanks!
[12:44:41] <toddparker> so semantic
[12:47:14] <gseguin> toddparker, scottjehl: Congrats on the Boston Globe! Looks awesome!
[12:47:24] <_nickel> toddparker: I got some good feedback from a friend
[12:59:51] <_nickel> toddparker: @veganstraightedge on twitter
[12:59:57] <_nickel> he's done some talks on crappy slides
[13:00:02] <_nickel> good guy
[13:00:03] <_nickel> smart
[13:10:08] <_nickel> kinblas: I've got a bug where the data-url for the inital page is being set as the second, embedded, page
[13:10:19] <_nickel> hmm
[13:10:28] <_nickel> maybe it was scott that did the work on that
[13:10:30] <_nickel> yah it was
[13:10:37] * _nickel moves to his email
[13:15:39] <kinblas> _nickel: ew, what's the issue number for the data-url problem?
[13:15:48] <_nickel> kinblas: there isn't one
[13:15:54] <_nickel> I noticed it when dealing with another issue
[13:15:59] <_nickel> or at least I don't think there's one
[13:16:05] <_nickel> one sec
[13:16:09] <_nickel> theres a js bin you can try
[13:16:17] <_nickel> kinblas: http://jsbin.com/udilul/4
[13:16:30] <_nickel> click the link
[13:16:32] <kinblas> _nickel: I've been a bit distracted today, but just getting back to jqm stuff .. I still need to figure out why my unit test doesn't work.
[13:16:33] <_nickel> click back
[13:16:34] <_nickel> click the link
[13:16:40] <_nickel> kinblas: kk
[13:16:47] <_nickel> I'm working on it so I'll let you know what I find
[13:18:06] <_nickel> hmm
[13:18:42] <kinblas> btw, I have a one-liner fix from going from an external page *back* to an internal one (via back button)
[13:22:45] <kinblas> _nickel: interesting, why is page2 getting pruned?
[13:29:21] <_nickel> kinblas: not sure at all
[13:29:25] <_nickel> thats what I'm trying to figure out
[13:35:19] <_nickel> kinblas: alright
[13:35:23] <_nickel> my bisect served me well
[13:35:41] <_nickel> I think i've spotted it
[13:36:04] <kinblas> ??
[13:36:20] <_nickel> kinblas: it only happens with the listview
[13:36:28] <_nickel> kinblas: the listview handles its own page removal
[13:36:34] <_nickel> for better or worse
[13:36:40] <_nickel> and it doesn't care if it came from ajax or not
[13:36:45] <_nickel> or
[13:37:07] <_nickel> it doesn't after some simple changes I made
[13:37:24] <_nickel> at least according to the bisect its my fault
[13:37:52] <_nickel> kinblas: do we track when a page has been loaded via ajax?
[13:38:09] <kinblas> in terms of the removal?
[13:38:33] <kinblas> in the ajax callback we simply add the pagehide callback that does the remove
[13:38:47] <_nickel> kinblas: makes sense
[13:38:50] <kinblas> other than that, the only way to tell if something was ajax loaded is to check the data-url an see if isPath()
[13:39:03] <_nickel> kinblas: the listview just removes the parentPage
[13:39:14] <_nickel> when its not on a subpage
[13:39:16] <kinblas> _nickel: of course we can tag something as external/ajax loaded
[13:39:28] <kinblas> uh why?
[13:39:31] <kinblas> :-)
[13:40:00] <_nickel> kinblas: dunno
[13:40:03] <_nickel> fixing
[13:40:03] <_nickel> :D
[13:40:13] <_nickel> well
[13:40:34] <_nickel> it removes the page because we're not 'caching'
[13:41:06] <kinblas> so maybe it's just easier if we tag pages
[13:41:13] <_nickel> seems that way
[13:41:14] <kinblas> versus relying on reading/interpreting data-url
[13:41:35] <kinblas> data-external-page = true
[13:41:38] <kinblas> or something like that
[13:41:54] <_nickel> kinblas: hmm
[13:42:01] <_nickel> something doesn't add up here
[13:42:03] <_nickel> gimme a second
[13:42:12] <kinblas> that would also help us track cases where we're mistakenly re-loading an internal page as an external
[13:42:16] <kinblas> thereby duplicating it
[13:42:19] <_nickel> pagehid appears to be firing on a non ajax page
[13:42:29] <kinblas> of course it does
[13:42:34] <kinblas> pageshow/pagehide
[13:42:37] <_nickel> err
[13:42:39] <kinblas> just refers to the transition
[13:42:39] <_nickel> pagehide.remove
[13:42:48] <kinblas> I'm hiding this page, and showing this one
[13:43:03] <_nickel> "in the ajax callback we simply add the pagehide callback that does the remove"
[13:43:19] <_nickel> did you mean pagehide.remove
[13:43:28] <_nickel> I still don't quite understand how the namespacing there works
[13:43:44] <kinblas> timeout
[13:43:48] <kinblas> what namespacing
[13:43:49] <kinblas> ??
[13:43:54] <_nickel> pagehide.remove
[13:44:01] <_nickel>        ^
[13:44:06] <_nickel>         ^
[13:44:11] <_nickel> the dot
[13:44:18] <_nickel> thats what we bind to for page removal
[13:45:00] <kinblas> oh
[13:45:21] <_nickel> so when pagehide is triggered does it also trigger those?
[13:45:24] <kinblas> I guess scott added that so that you can remove the pagehide callback
[13:45:27] <_nickel> from what I recall it does
[13:45:28] <_nickel> yah
[13:45:31] <kinblas> without having a handle to the original callback
[13:45:33] <_nickel> so its only useful for removal
[13:45:39] <_nickel> in our case
[13:45:48] <kinblas> yeah, otherwise you need to have the exact instance of the callback to unregister it
[13:45:59] <_nickel> hmm
[13:46:11] <kinblas> I'm assuming that was done for the listview code
[13:46:13] <_nickel> so it seems like we should either tag it or bind to pageremove
[13:46:16] <kinblas> or was it dialog
[13:46:24] <_nickel> probably both
[13:46:39] <_nickel> though listview is the only one that unbinds the logic from nav
[13:46:41] <_nickel> I think
[13:46:49] <kinblas> _nickel: yeah that part is hokie
[13:47:05] <kinblas> _nickel: that logic should be in one place
[13:47:13] * _nickel agrees
[13:47:20] * kinblas recalls us talking about encapsulating this in a lock/unlock ... which frees
[13:47:26] <_nickel> yah
[13:47:45] <_nickel> I think at this stage we should take the simple route
[13:47:49] <_nickel> imo
[13:48:18] <_nickel> the ref counting is complex and comes with its own set of possible issues even if its better
[13:49:21] <kinblas> _nickel: yeah so a simple thing would be to set a data attr on the page
[13:49:29] <kinblas> that the callback checks for before it removes
[13:49:36] <kinblas> if it's present, it doesn't do anything
[13:49:51] * kinblas feels dirty for suggesting that
[13:50:48] <_nickel> same
[13:51:00] <_nickel> its not a good longterm solution but it will work
[13:51:09] <_nickel> the end of september approaches
[16:49:07] <_nickel> kinblas: toddmparker: quick question for you guys
[16:49:22] <_nickel> I removed open and close from the native select menu during the refactor because it was a no op
[16:49:36] <kinblas> uh huh
[16:49:48] <_nickel> should I include it as a noop for so people can leverage polymorphism to simplify their code?
[16:49:55] <_nickel> s/for so/so/
[16:50:27] <kinblas> _nickel: sure
[16:50:30] <_nickel> kk
[16:50:50] <kinblas> _nickel: I like making things easier for folks to extend
[16:51:07] <kinblas> means we don't have to write everything, and helps the eco-system of plugins
[16:54:19] <_nickel> kinblas: well they can always extend it themselves this just means they don't have to think about looking over selects
[16:54:23] <_nickel> and its self documenting
[16:54:33] <_nickel> "plugins should implement this!"
[16:54:41] <_nickel> sort of abstract methods
