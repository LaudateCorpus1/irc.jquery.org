[03:08:31] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to popup-widget: http://git.io/U2AH-g
[03:08:31] <jqmobilecommit> [jquery-mobile/popup-widget] [popup] Move code that syncs urlHistory when hash listening is disabled into _doNavHook - Gabriel Schulhof
[04:09:33] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to popup-widget: http://git.io/da2EOA
[04:09:33] <jqmobilecommit> [jquery-mobile/popup-widget] [popup] If $.mobile.hashListeningEnabled is off, do not manipulate the hash - Gabriel Schulhof
[07:42:43] <Wilto> Good mornin’, jQuery Mobile.
[07:44:25] <uGoMobi_Jasper> good morning Red Leader
[07:51:13] <Wilto> Reporting in. -ksshk-
[10:47:43] <gseguin> Good morning
[10:49:04] <agcolom> good morning ;-)
[10:49:16] <Wilto> Pssh, “morning.” SLACKERS.
[10:49:25] <agcolom> well it's dinner cooking time here!!!
[10:49:41] <Wilto> jQuery Global.
[10:50:06] <agcolom> indeed!!!
[10:50:16] <Wilto> Hey gseguin, what’s the word on builder stuff? How’re the alpha folks finding it?
[10:50:17] <gseguin> sorry late start, all hands meeting to start the day ;)
[10:50:40] <gseguin> haven't heard anything this week
[10:50:57] <Wilto> How many people we got in there?
[10:51:05] <gseguin> no issue filed either
[10:51:18] <Wilto> I dunno if that’s a very good sign or a very bad sign.
[10:51:25] <gseguin> yeah same here
[10:51:30] <Wilto> I’m wondering if we shouldn’t open it up to a handful more people.
[10:51:34] <gseguin> I was going to do more testing today
[10:51:39] <gseguin> of a custom buil;d
[10:51:57] <gseguin> first I have to take a typing lessin
[10:52:05] <gseguin> argh!
[10:52:13] <johnbender> ...
[10:52:14] <johnbender> ?
[10:52:14] <Wilto> You and me boht, man. You and me boht.
[10:52:19] <gseguin> I have the fat finger syndrom
[10:52:20] <johnbender> ah
[10:52:26] <johnbender> you were referencing you previous message
[10:52:28] * johnbender is slow
[10:55:57] <Wilto> Paging ajpiano.
[10:56:25] <ajpiano> beep boop bop
[10:56:28] <gseguin> Dr ajpiano ?
[10:57:21] <Wilto> gseguin: Is the builder feeling sturdy enough to get some of our jQuery brethren up ins, you think?
[10:58:53] <gseguin> Wilto: I need to validate that it doesn't build crap
[10:58:58] <Wilto> ?mlm
[10:59:19] <gseguin> bot-t: much like myself
[10:59:35] <gseguin> since bot-t is MIA
[10:59:47] <gseguin> let me check that
[11:00:10] <gseguin> you can do it on your side as well, like build a custom build
[11:00:26] <gseguin> and plug it into a page that uses only what you built-in
[11:00:40] * gseguin goes to try it out
[11:06:21] <gseguin> drum roll
[11:08:37] <gseguin> ouch
[11:09:44] <gseguin> Wilto: my trial was a failure
[11:09:47] <gseguin> looking into it
[11:10:20] <Wilto> BOOO
[11:11:48] <chee> OOOB
[11:15:42] <gseguin> Wilto: I suspect that the css is the one that messes it up
[11:17:17] <agcolom> Hi Guys! Can I have some 1st draft feedback on this: http://jsbin.com/okehir/32/ (click map). Are we happy to think this is a useful example?
[11:20:07] <gseguin> agcolom: totally badass
[11:20:44] <gseguin> as they say on my coast ;)
[11:20:53] <agcolom> sorry, what does that mean?? (I feel totally ignorant with acronyms and expressions! That's
[11:21:24] <gseguin> it looks great
[11:21:32] <agcolom> Ah good ;-)
[11:21:33] <gseguin> the map one is really cool I think
[11:22:20] <agcolom> Good, I'm a bit of a google map girl ! so will have it as an example ...
[11:22:30] <agcolom> Thank you :-)
[11:26:34] <gseguin> Wilto: yep css problem, I'm missing some classes in the custom css bundle I think
[11:26:41] <Wilto> DAMMIT, SCOTT
[11:26:57] <gseguin> no no, DAMMIT, ME
[12:03:30] <deAtog1> gseguin: it would be really nice if the opened and closed callbacks worked on that popup..
[12:28:42] <_|Nix|_> deAtog: Can you make a jsbin with the failing callbacks?
[12:28:49] <_|Nix|_> I can't reproduce that.
[12:29:40] <_|Nix|_> Is Todd around today? He kinda dropped off the map yesterday before we could decide what to do about custom selects inside popups.
[12:35:22] <Wilto> Todd is up in the frozen north for a couple days.
[12:35:31] <Wilto> I dunno if they have the internet in Canada.
[12:35:44] <Wilto> _|Nix|_: Fully custom selects?
[12:37:17] <_|Nix|_> Wilto: Yeah. If we have mutually exclusive popups, and you have a custom select inside a popup, the popup with the select button will disappear when the select menu appears. Not good.
[12:38:48] <agcolom> _|Nix|_ : your popups are beautiful and work great with Google maps: http://jsbin.com/okehir/32/ (click map)
[12:39:18] <agcolom> BTW the example need refinements.... but still not bad ;-)
[12:39:33] <_|Nix|_> agcolom: Nice!
[12:40:24] <Wilto> _|Nix|_: Yeah, not too cool.
[12:40:31] <agcolom> thanks but all worked straightaway so really no work on my part ;-)
[12:41:13] <Wilto> _|Nix|_: How hard would that be to handle on the custom select side? Those things are kind of in deprecation-limbo, so I wouldn’t want to clutter up popup for their sake, y’know?
[12:42:54] <_|Nix|_> Wilto: Well, if we implement custom select using popup, then the custom select popup will be managed the same way as other popups ... I can't really add some other magic string (other than dialogHashKey) to the hash, because that would require modifying all kinds of code.
[12:43:12] <_|Nix|_> Wilto: So, the popup of the custom select wouldn't work with the back button.
[12:43:15] <Wilto> but i like magic strings tho
[12:43:25] <_|Nix|_> Wilto: Tell johnbender then.
[12:43:44] <Wilto> I bet he’s got a secret stockpile of secret strings.
[12:43:54] <Wilto> But yeah, joking aside, I hear you.
[12:43:58] <agcolom> Yes, I also had an idea where a popup would be used to define a start date and an end date. So you'd bring the popup, then clicking the start date would launch a new popup with a date picker... so would be nice to have 2 popups at the same time, where the parent popup is in charge. the child popup can be used to set things in the parent popup, and if the parent popup is dismissed they both go. Jus
[12:43:58] <agcolom> t an idea...
[12:44:36] <johnbender> lets keep the custome select separate for now
[12:44:47] <_|Nix|_> Wilto: I could make it so that if the custom select popup opens while another popup is open, then it will show up on top - but it does require some code changes ...
[12:44:50] <johnbender> most people likely don't use them and won't with t he builder is my guess
[12:44:52] <_|Nix|_> johnbender: OK.
[12:45:00] <Wilto> That’s my thinking, yeah. I don’t want them running the risk of screwing anything else up.
[12:45:03] <johnbender> that's my opinion at least
[12:45:17] <johnbender> we get more from the code being simple than from the potential re-use
[12:45:25] <johnbender> s/re-use/reuse/
[12:45:36] <johnbender> also imo
[12:49:48] <jzaefferer> hey johnbender, I hear that we'll have access to mobile browsers via BrowserStack soon
[12:50:14] <jzaefferer> and TestSwarm is now more configurable, so we have 100% control over what browsers to test against, as long as BrowserStack has them
[12:52:44] * Krinkle adds another channel to auto-join
[12:53:01] <Krinkle> hm.. maybe merge these three dev channels? Seems too much :P
[12:53:07] <Krinkle> JasonDScott:
[12:53:14] <Krinkle> jzaefferer: * (sorry ping)
[12:53:36] <johnbender> jzaefferer: super nice
[12:54:11] <agcolom> Does anybody know whether there is any plan of developing our own date/time picker?
[12:55:35] <jzaefferer> Krinkle: these guy are way too busy, we don't want them flooding our other channels ;)
[12:56:09] <jzaefferer> btw. johnbender, meet Krinkle, he's the guy behind all the great TestSwarm updates, and also helping with all the other testing related infrastructure
[12:56:30] <Krinkle> I I heard the name johnbender before.
[12:56:31] <johnbender> yes! he helped me out with a core question I had
[12:56:50] <jzaefferer> where johnbender is the guy pretty much responsible for jQuery Mobile's testing and build system. I'm the one who wants to bring these projects closer together again
[12:56:53] <Krinkle> (johnbender: don't worry, only good stuff!)
[12:57:00] <johnbender> Krinkle: lol not likely
[12:57:02] <johnbender> I'm a big hack
[12:57:04] <jzaefferer> So much synnergies we can profit from on boh sides
[12:57:26] <johnbender> hopefully we'll get this sucker rolling on test swarm soon
[12:57:34] <Krinkle> quick n dirty, thats how you get the mass on your seat. only the scarce crazy dudes see the difference :P
[12:57:43] <johnbender> jzaefferer: I'm probably going to spend the second half of this week working the grunt migration
[12:58:03] <Krinkle> awesome
[12:58:26] <johnbender> and then hopefully next week I can get working on the results in test swarm
[12:58:28] <jzaefferer> getting to grunt to lint and run units once should be a prerequisite
[12:58:34] <gseguin> sorry deAtog
[12:58:36] <Krinkle> Either way, jQuery Mobile has always been silently building away in Jenkins, whereas jQuery core/ui/QUnit has been down for awhile
[12:59:03] <jzaefferer> we can start with just running against a single mobile browser, along with Chrome/Safari, that should help get something green somewhat quickly
[12:59:08] <jzaefferer> then progressively add more browsers
[12:59:14] <johnbender> jzaefferer: yah I'm going to take the time to go through and sort out the lint issues and then add that to the build
[12:59:37] <johnbender> otherwise the js and css build targets are pretty much done
[12:59:45] <johnbender> which is the meat of the build
[12:59:48] <jzaefferer> johnbender: make sure to educate your fellow devs about pre-commits hooks and such, you won't want to fix every single lint issue yourself ;)
[12:59:54] <jzaefferer> ah, nice
[13:00:05] <johnbender> jzaefferer: well we have a pre commit hook that does linting using a service that gseguin and I built
[13:00:24] <jzaefferer> service?
[13:00:30] <johnbender> https://github.com/johnbender/jshint-service
[13:00:36] <johnbender> https://github.com/johnbender/jshint-service/blob/master/pre-commit.sh
[13:00:47] <johnbender> to avoid local deps
[13:01:00] <jzaefferer> like, its really easy with grunt: https://github.com/cowboy/grunt/issues/99
[13:01:00] <socialhapy> ★ Issue #99 on grunt (fhemberger; 1m, 5d ago): User's .grunt directory should be created on installation
[13:01:07] <jzaefferer> err, wrong ticket
[13:01:17] <johnbender> jzaefferer: of course but we didn't have grunt when we created that :D
[13:01:17] <jzaefferer> https://github.com/cowboy/grunt/issues/79
[13:01:18] <socialhapy> ★ Issue #79 on grunt (there4; 1m, 1w ago): Interest in a plugin to install source control hooks?
[13:01:18] <jzaefferer> there
[13:02:16] <jzaefferer> johnbender: sure, but still, everyone on the team should have grunt running, so no need for external services either
[13:02:41] <jzaefferer> looks like that is at least a year old
[13:02:43] <johnbender> right ... once it get's merged but again we built that months and months ago
[13:02:47] <jzaefferer> waaay before grunt :-)
[13:02:58] <_|Nix|_> Hey! Is this bit in the docs correct: $(selector).widget({event: function() { /* this is the event handler */ } });
[13:03:02] <_|Nix|_> ?
[13:03:08] <jzaefferer> interesting idea though
[13:03:13] <jzaefferer> glad npm makes it so easy now
[13:03:16] <johnbender> jzaefferer: it was mostly a quick hack to get linting
[13:03:28] <gseguin> johnbender: it still runs on http://ghislain.no.de/jshint
[13:03:30] <_|Nix|_> I thought the object passed to the widget init function contains values for the widget's options, not handlers for the widget's events ...
[13:03:38] <johnbender> gseguin: I still use it :D
[13:05:31] <johnbender> the hope was originally to get people using it by avoiding any overhead aside from copying the hook
[13:05:40] <johnbender> doesn't matter now though :D
[13:27:51] <deAtog> _|NIx|_: My guess is that the documentation for the opened and closed events is wrong and bind should be used instead. Having tried both methods, bind at least works.
[13:31:02] <_|Nix|_> deAtog: Yeah, but the same syntax appears in other places too ...
[13:32:38] <_|Nix|_> johnbender, Wilto, gseguin: What do you guys think about adding a div that looks like this: <div style="display: none;"><!-- placeholder for id-of-some-popup --></div> into the location that contains a div that needs to be turned into a popup?
[13:33:32] <_|Nix|_> The reason for this is that when someone calls destroy on the popup, I need to put everything back in its place. So, I put the payload div back to where I left the placeholder, and then I delete the placeholder, the screen, and the container - cleanup complete.
[13:34:58] <_|Nix|_> deAtog is making popups on-the-fly, so he needs to destroy the popups. Now, in his case, the divs aren't attached to the DOM when he calls popup() on them, so the placeholder wouldn't be added to the DOM, but in the general case, where divs /may be/ attached to the DOM at the time of popup creation, the placeholder needs to be used.
[13:36:43] <johnbender> _|Nix|_: so you're replacing the comment with the popup content?
[13:36:44] <_|Nix|_> johnbender: Nono ... the div ...
[13:37:34] <_|Nix|_> johnbender: A popup is initially just a div (or whatever element) marked with data-role='popup'. I rip that element out of the DOM and stick it in a div.ui-popup-container ...
[13:37:38] <johnbender> or it's just there as the target for putting "everything back in its place"
[13:37:45] <_|Nix|_> johnbender: The latter.
[13:37:47] <johnbender> kk
[13:37:50] <johnbender> hmm
[13:38:03] <johnbender> is there some reason you don't just dup it and remove the visible version?
[13:38:13] <johnbender> that may have been part of the conversation earlier that I missed
[13:38:14] <_|Nix|_> johnbender: I can't think of another way of keeping track of where I got the popup payload div from ...
[13:38:40] <_|Nix|_> johnbender: dup it? It may be highly complex, consisting of lots of elements.
[13:38:53] <johnbender> _|Nix|_: I'm confused, can't you just dup the markup for the actual popup and then destroy it when it needs to disappear?
[13:39:04] <johnbender> duplicate it
[13:40:10] <johnbender> hmm
[13:40:11] <_|Nix|_> johnbender: The problem is this: I have a div that I know has to be turned into a popup. It resides deep within the DOM.
[13:41:53] <johnbender> so you're worried about duplicating a lot of markup
[13:41:53] <_|Nix|_> In order to turn it into a popup, I need to move it from there.
[13:41:55] <_|Nix|_> johnbender: ... and all I need to know is where the outermost element came from, not what it was.
[13:41:56] <johnbender> but only because you are returning the content to it's original place
[13:42:00] <_|Nix|_> johnbender: Upon destroy, I still have access to this.element, so I have the payload, I just don't know where I need to put it back - unless I have a placeholder.
[13:42:02] <deAtog> _|Nix|_: maybe store the original parent?
[13:42:08] <johnbender> duplicating it and then destroying it is a simple solution it seems like
[13:43:05] <_|Nix|_> johnbender: Actually, duplicating is not an option. What if you have an event handler attached to some element inside the element that is to become a popup?
[13:43:05] <johnbender> other than that just storing the parent and it's location among it's siblings?
[13:43:12] <_|Nix|_> johnbender: Like, a slider inside a popup.
[13:43:42] <deAtog> _|NIx|_: yeah I guess just the original parent wouldn't be enough you'd have to know it's position among the existing children as well..
[13:43:52] <johnbender> _|Nix|_: well ostensibly you don't have to bind or enhance anything until the popup is shown
[13:44:52] <johnbender> but I can see where that would be confusing for users
[13:46:49] <johnbender> confusing/more work
[13:46:55] <johnbender> the only issue with storing it's location in the dom is that it could change out from under you
[13:46:55] <deAtog> I'm with johnbender on this.. just duplicating the content and displaying it should be fine.. users can then use the opened event to bind functions to the stuff within it
[13:46:55] <johnbender> though of the two that seems like the less confusing of the two
[13:46:55] <johnbender> _|Nix|_: I would just do the simple thing and ship it
[13:46:55] <johnbender> we can ask for feedback during the rc
[13:46:56] <johnbender> my guess is that only a small subset of users will do crazytown things with popup content
[13:46:56] <deAtog> I agree, dup and let them add events during the opened event.. I find little use for that event otherwise..
[13:46:56] <johnbender> but I could be totally wrong
[13:46:56] <uGoMobi_Jasper> good evening all!
[13:46:56] <johnbender> _|Nix|_: the only thing you might have to worry about is preventing the framework from enhancing the popup content before hand
[13:46:57] <deAtog> johnbender: I'm going to put a fully functional mapping application in a popup :-P
[13:46:57] <_|Nix|_> johnbender: I dunno guys ... it seems cheaper and easier to just create one div with a comment inside, rather than duplicating the whole content of a popup.
[13:46:57] <_|Nix|_> johnbender: ... and requiring users to hook up to the "opened" signal in order to do anything useful with the elements inside the popup.
[13:46:57] <johnbender> cheaper and easier in the sense that it's more performant?
[13:46:58] <johnbender> _|Nix|_: "anything useful" being custom event binds etc
[13:46:58] <_|Nix|_> johnbender: Well, it's almost certainly fewer dom elements.
[13:46:58] <johnbender> most users will use popups for text content
[13:46:58] <_|Nix|_> johnbender: Yeah.
[13:47:09] <johnbender> that's my gues
[13:47:21] <johnbender> optimizing for people puting map applications in popups doesn't make sense to me
[13:47:29] <johnbender> but again I could be wrong
[13:47:33] <deAtog> johnbender: I was being sarcastic..
[13:47:36] <johnbender> no offense deAtog
[13:47:38] <_|Nix|_> johnbender: Like, if you have <div data-role="popup"><a href="#">Start search</a></div>
[13:47:40] <johnbender> ahh lol
[13:48:17] <_|Nix|_> Sorry ... add an ID to that anchor, call it id='some-link'
[13:49:35] <_|Nix|_> So, now, instead of $("#some-link").bind("vclick", function() {doSomething();}); you're asking users to $("#the-popup").bind("opened", function() { $("#some-link").bind("vclick", function() { doSomethingUseful(); });
[13:49:40] <_|Nix|_> })l
[13:49:42] <_|Nix|_> ;
[13:49:44] <_|Nix|_> Gaj!
[13:49:50] <_|Nix|_> I can't type ...
[13:50:16] <johnbender> _|Nix|_: yap, I get that
[13:50:35] <johnbender> _|Nix|_: proceed as you like and we can get some other opinions tomorrow
[13:50:44] <johnbender> I am by no means the authority on ease of use
[13:50:47] <johnbender> or user intentions
[13:53:23] <deAtog> _|Nix|_: I guess I could see where that could cause problems if the popup is not destroyed on close..
[13:54:46] <deAtog> the other thing that worries me is how the duplicated content would be separate from the existing content..
[13:54:53] <_|Nix|_> deAtog, johnbender: An illustration: http://pastebin.ca/2146647
[13:56:18] <deAtog> I follow
[13:56:32] <_|Nix|_> I think that's easier than duplicating the whole content of the popup.
[13:57:18] <johnbender> _|Nix|_: I fully get your approach, I just don't like puting comment placeholders in the markup
[13:57:24] <deAtog> I think it may be too.. but I don't quite understand all the issues in regards to duplicating DOM objects..
[13:57:40] <johnbender> if nothing else I would store the location relative to the parent and siblings and call it a day
[13:57:44] <johnbender> again
[13:57:49] <johnbender> we can ask others tomorrow if you like
[13:59:05] <deAtog> IE duplicating DOM objects would result in multiple objects with the same id right? so in your example above $('some-link') would return multiple objects and not just the one in the popup right?
[13:59:20] <_|Nix|_> deAtog: ... not to mention ...
[14:00:21] <johnbender> that's a good point
[14:00:50] <_|Nix|_> OK, I think it's ready to go ...
[14:01:03] <deAtog> if nothing else, I'm not sure you have a choice but to either store it's position or just ignore it.. usually if someone is calling destroy on the object they are trying to remove it from the DOM all together
[14:01:25] <agcolom> johnbender: I'm not saying we should optimise for people putting maps in popups. However, since it works, I thought it was a nice example, in particular on a small screen. For example someone developing a tourist app or a restaurant finder might want to show the location on a map in a popup rather than taking space on the screen so the user could decide whether it is close enough or too far from t
[14:01:25] <agcolom> he area they want to visit...
[14:01:38] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to popup-widget: http://git.io/RTN98A
[14:01:38] <jqmobilecommit> [jquery-mobile/popup-widget] [popup] Implement destroy() - Gabriel Schulhof
[14:01:48] <johnbender> agcolom: I was saying we should support it but not go out of our way
[14:01:59] <agcolom> I agree 100%
[14:02:02] <johnbender> doesn't much matter
[14:02:05] <johnbender> we can't really dup it
[14:02:22] <johnbender> though I don't like the idea of placeholder comments
[14:02:31] <johnbender> just personal pref though
[14:02:34] <_|Nix|_> deAtog: I guess it's a philosophical question: If you were to call destroy() on /all/ the widgets, your DOM /should/ look exactly like the HTML file that it started out as, no?
[14:03:18] <_|Nix|_> deAtog: i.e., all the enhanced elements would be de-enhanced, but still present.
[14:03:54] <_|Nix|_> deAtog: So, if enhancement entails relocation, then de-enhancement should entail that it will be placed back to where it came from.
[14:04:38] <_|Nix|_> deAtog: But anyhoo ... we'll see what ppl think ... it's up and running now, and should correctly clean up your on-the-fly popups.
[14:05:24] <_|Nix|_> deAtog: So, don't div.remove(), but div.popup("destroy") instead.
[14:06:39] <_|Nix|_> deAtog: ... and since your div is not hooked into the DOM at the time of creation, the placeholder, which goes "after" it won't really appear in the DOM either.
[14:06:58] <deAtog> ok
[14:07:22] <deAtog> but after I destroy the popup.. I still need to remove the div no?
[14:08:30] <_|Nix|_> deAtog: That's an interesting question. When you destroy the popup, the div will be placed /after/ the placeholder, which is a floating div, because, when I created the placeholder, I placed it /after/ your div, which was floating at the time :)
[14:08:58] <_|Nix|_> So, "after" has no meaning when the div in question is not hooked into the DOM.
[14:09:11] <deAtog> ok
[14:09:39] <_|Nix|_> I tried this. Very interestin: var d = document.createElement("div"), e = document.createElement("div"); $(e).insertAfter(d);
[14:09:52] <_|Nix|_> Now, where are d and e?
[14:10:22] <_|Nix|_> The answer: nowhere. Floating, and if the variable goes out of scope, I think d and e will go to the place where no shadows fall :)
[14:10:37] <deAtog> yup.. looks right to me :-)
[14:11:27] <gseguin> that and it could be matching css selectors as well
[14:11:27] <gseguin> I vote no to duplication
[14:11:35] <_|Nix|_> gseguin: +1
[14:12:20] <deAtog> _|Nix|_: after all that discussion we just had.. my vote is the same +1 to no duplication.. too many issues there
[14:12:59] <_|Nix|_> It's like ripping a page out of a book that has no page numbers. How do you know where it should go? You don't unless you put a bookmark before you remove the page.
[14:14:38] <deAtog> _|Nix|_: you might want to try ripping out multiple pages :-)
[14:15:31] <_|Nix|_> deAtog: Neah ... I'm assuming the binding is perfect and will immediately cover up any gaps, no matter how large.
[14:15:37] <_|Nix|_> ;)
[14:15:57] <_|Nix|_> deAtog: ... and cows are perfect spheres, and you know ... stuff like that :)
[14:17:21] <deAtog> hrm.. that just killed firefox..
[14:18:19] <_|Nix|_> Wha ... ?
[14:18:22] <deAtog> yup.. I think that caused a loop..
[14:18:36] <_|Nix|_> Wow!
[14:19:20] <deAtog> refresh my app... after the timer fires and the popup fades away.. Firefox gets stuck..
[14:19:40] <deAtog> and then crashes
[14:20:32] <_|Nix|_> deAtog: You should clear the timeout if the popup is closed by hand.
[14:20:55] <_|Nix|_> deAtog: That may be causing the crash - of course it shouldn't ... chrome can handle it just fine.
[14:21:30] <_|Nix|_> Oh, wait - you mean if I let it time out.
[14:22:10] <_|Nix|_> This is perfectly valid DOM manipulation though ...
[14:24:11] <_|Nix|_> deAtog: I have FF11 on Fedora and it doesn't crash ...
[14:24:31] <deAtog> odd.. consistently crashes under Windows here..
[14:24:49] <_|Nix|_> deAtog: Hold on ... I'll fire up my windoze machine ...
[14:25:08] <deAtog> I'm on FF 12 as well..
[14:25:26] <_|Nix|_> deAtog: I have that on Windoze ...
[14:26:15] <deAtog> _|Nix|_: 1. Crash Firefox. 2. Exploit flaw. 3. Profit!!
[14:27:19] <_|Nix|_> deAtog: WORKSFORME on FF 12 / Windoze 7.
[14:27:33] <_|Nix|_> deAtog: However, I haven't tried to close the popup.
[14:27:39] <_|Nix|_> deAtog: I've only let it time out.
[14:28:03] <_|Nix|_> deAtog: OK, I've closed it by hand, and it still didn't crash ...
[14:28:26] <_|Nix|_> deAtog: However, there /is/ a js error when the timeout fires, because the popup is no longer a popup, because it has been destroyed.
[14:29:56] <deAtog> yeah I understand that case.. I need to fix that.. mine is crashing when the timeout closes the popup and calls destroy on it
[14:31:02] <jqmobilecommit> [jquery-mobile] gabrielschulhof pushed 1 new commit to popup-widget: http://git.io/l4FIhw
[14:31:02] <jqmobilecommit> [jquery-mobile/popup-widget] [popup] Re-doing destroy() to cooperate with the widget factory - Gabriel Schulhof
[14:32:11] <_|Nix|_> deAtog: *shrug* weird ... just by chance, try the latest commit though - I realized that the widget factory handles destroy, and does all kinds of generic and wonderful things ... may fix your problem - *shrug* ...
[14:32:57] <deAtog> ok I'll give it a shot
[14:34:34] <deAtog> atm.. I'm getting crashes in both cases.. we'll see what happens with your latest change..
[14:36:47] <_|Nix|_> deAtog: Try attaching your div to the DOM before creating the popup, and then remove()-ing it after you call .popup('destroy');
[14:38:17] <_|Nix|_> deAtog: so div = ... .html(msg).appendTo("body").popup({...}) ... and then div.popup('destroy');div.remove();
[14:39:10] <_|Nix|_> johnbender: Do ok() statements have to be inside test() calls?
[14:39:36] <_|Nix|_> johnbender: Can I make a function that runs a bunch of ok() tests and call it from two different test() calls?
[14:39:56] <gseguin> _|Nix|_: you can do that
[14:40:18] <_|Nix|_> johnbender: I have some tests to see if a popup has been enhanced correctly, and now I'd like to call those tests again after I destroy/re-create the popup.
[14:40:20] <gseguin> if the test is async don't forget to expect()
[14:40:21] <_|Nix|_> gseguin: OK.
[14:40:50] <_|Nix|_> gseguin: They're not async, because they merely test correct parent/child relationships and the presence of attributes/style/etc.
[14:41:16] <_|Nix|_> gseguin: Aaah, so no need for expect when I don't use asyncTest? OK ... I get it now.
[14:41:55] <gseguin> not that it's useless but you can do without it in sync tests
[14:41:59] <johnbender> _|Nix|_: you can pull the similarities out into functions scoped to the parent iife
[14:42:19] <johnbender> that's what I normally do if the test is parameterized in a simple way
[14:42:22] <deAtog> _|Nix|_: yeah.. no dice.. FF is still crashing for me..
[14:42:36] <_|Nix|_> deAtog: Try attaching the div to the DOM.
[14:43:06] <_|Nix|_> Tsk tsk ... FF should be able to handle floating divs.
[14:43:09] <deAtog> yup.. same result
[14:43:23] <_|Nix|_> deAtog: Wait - you attached and it still crashes?
[14:43:27] <deAtog> yup
[14:43:36] <_|Nix|_> Add the div to the markup.
[14:43:59] <_|Nix|_> deAtog: ... and then don't .remove() it ...
[14:47:34] <deAtog> that kind of defeats what I'm trying to do..
[14:48:04] <_|Nix|_> deAtog: I know, but just to see if FF still crashes.
[14:48:50] <_|Nix|_> deAtog: This shouldn't crash anything ...
[14:48:57] <_|Nix|_> deAtog: *shake head* ...
[14:51:46] <_|Nix|_> Well, I gotta be hitting the hay ... L8R all ...
[15:04:15] <gseguin> later _|Nix|_
[15:09:15] <uGoMobi_Jasper> gseguin: hi! can I ask something?
[15:15:19] <gseguin> what's up uGoMobi_Jasper ?
[15:16:13] <uGoMobi_Jasper> am i right that you can't use delegate/on to bind a vclick event to dynamically injected content?
[15:16:20] <gseguin> johnbender: I'm going to revert https://github.com/jquery/jquery-mobile/commit/4f12d469454f777c845ee245d60d5a7c3a710db9 to fix https://github.com/jquery/jquery-mobile/issues/3777
[15:16:20] <socialhapy> ★ Github API: no issue found
[15:16:20] <socialhapy> ★ Commit on jquery-mobile by scottjehl (3m, 3w ago): By caching the href value to data and switching the href to a #, we can avoid address bar showing in iOS on every click. The click handler resets the href during its initial steps if this data is present. Note that the address bar will still likely drop down when you click the browser's back button. The only time the back button will not drop the address bar  appear
[15:16:20] <socialhapy> eration - so pushstate would either have to be disabled, or the page would have to be local (multipage), or the page would need to be a dialog (since then going back would only be a hashchange). Still, progress.
[15:17:20] <gseguin> uGoMobi_Jasper: hmm not sure, why couldn't you?
[15:17:58] <uGoMobi_Jasper> well i was testing it and couldnt get it to work
[15:18:09] <gseguin> do you have a jsbin?
[15:18:11] <uGoMobi_Jasper> was appending checkbox
[15:18:33] <uGoMobi_Jasper> and could only bind vclick after it has been enhanced
[15:18:39] <uGoMobi_Jasper> yes, hang on
[15:21:30] <uGoMobi_Jasper> gseguin: http://jsbin.com/uripah/50/
[15:23:42] <uGoMobi_Jasper> gseguin: ignore the text above the examples... all three I bind vclick to the label
[15:24:09] <johnbender> gseguin: nice
[15:24:10] <gseguin> be right back
[16:03:33] <gseguin> johnbender: ?
[16:03:46] <gseguin> uGoMobi_Jasper: sorry took a little longer that expected
[16:03:54] <johnbender> gseguin: what?
[16:04:01] <johnbender> gseguin: "nice" ?
[16:04:05] <gseguin> yeah
[16:04:08] <uGoMobi_Jasper> gseguin: no problem
[16:04:17] <johnbender> I was referring to your plans to revert that commit
[16:05:35] <gseguin> oh darn! I'm like Dory in Nemo
[16:05:44] <gseguin> had already forgotten about that :)
[16:06:16] <uGoMobi_Jasper> lol
[16:27:50] <jqmobilecommit> [jquery-mobile] gseguin pushed 2 new commits to master: http://git.io/wYH4gw
[16:27:50] <jqmobilecommit> [jquery-mobile/master] Revert "By caching the href value to data and switching the href to a #, we can avoid address bar showing in iOS on every click. The click handler resets the href during its initial steps if this data is present. Note that the address bar will still likely drop down when you click the browser's back button. The only time the back button will not drop the address bar  appears to be when the back button does not t
[16:27:50] <jqmobilecommit> [jquery-mobile/master] Coding standards - Ghislain Seguin
[16:33:34] <jqmobilecommit> [jquery-mobile] johnbender pushed 5 new commits to master: http://git.io/_fAITA
[16:33:34] <jqmobilecommit> [jquery-mobile/master] move loader into a module - John Bender
[16:33:34] <jqmobilecommit> [jquery-mobile/master] loader widget - John Bender
[16:33:34] <jqmobilecommit> [jquery-mobile/master] remove global loader reference - John Bender
[16:34:11] <johnbender> gseguin: ^ now I need to add a page for config with refs in the old params
[16:34:15] <johnbender> but it's a widget now
[16:34:46] <gseguin> cool!
[16:34:56] <johnbender> yaks
[16:34:59] <johnbender> they are shaved
[16:38:42] <uGoMobi_Jasper> johnbender: jquerymobile/test/docs dont work anymore
[16:38:47] <johnbender> ?
[16:38:51] <johnbender> ah
[16:38:54] <johnbender> that should be sorted in a second
[16:38:58] <johnbender> I just added it to the meta module
[16:39:07] <jqmobilecommit> [jquery-mobile] johnbender pushed 1 new commit to master: http://git.io/BKGV5A
[16:39:07] <jqmobilecommit> [jquery-mobile/master] moved to loader and added to the meta module - John Bender
[16:39:08] <johnbender> uGoMobi_Jasper: thanks for the heads up though
[16:39:23] <uGoMobi_Jasper> :)
[16:39:52] <uGoMobi_Jasper> and they are back :)
[16:39:55] <johnbender> yar!
[16:40:02] * johnbender is a bad actor
[16:40:09] <uGoMobi_Jasper> lol
[16:41:00] <uGoMobi_Jasper> for a moment i thought you just deleted master ;)
[16:41:11] * johnbender is a bull in a china shop
[16:49:06] <uGoMobi_Jasper> looks like github found itself a new icon sprite
[17:14:08] <gseguin> uGoMobi_Jasper: I'm looking into your jsbin and can't explain it yet
[17:14:48] <uGoMobi_Jasper> gseguin: ok, thanks for taking a look at it
[17:22:00] <uGoMobi_Jasper> gseguin: lets drop it for now... dont want to take too much of your time and i am going to call it a day
[17:22:21] <gseguin> k, sorry I wasn't much help
[17:24:20] <uGoMobi_Jasper> gseguin: thanks for trying!
[17:24:42] <uGoMobi_Jasper> ok I am off guys... good evening to you
[17:24:57] <gseguin> later uGoMobi_Jasper
