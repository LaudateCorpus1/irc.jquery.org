[01:13:14] <jqmobilecommit> [13jquery-mobile] 15dbrighi opened issue #5616: JQM 1.3 RC1 create input hidden on clicking on a Input  02http://git.io/K3m6Og
[02:02:59] <doesallmagic> Project jQuery Mobile Phantom 1.2-stable build #74: FAILURE in 2 min 10 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%201.2-stable/74/
[02:16:14] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Git build #262: NOW UNSTABLE in 15 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Git/262/
[02:54:10] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06master: 02http://git.io/LLls4Q
[02:54:10] <jqmobilecommit> 13jquery-mobile/06master 143d5a540 15Jasper de Groot: Docs: minor correction in panel documentation
[03:02:25] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06master: 02http://git.io/d-vVZQ
[03:02:25] <jqmobilecommit> 13jquery-mobile/06master 14efc7381 15Jasper de Groot: Docs: updated panel open and close events description. Fixes #5611
[03:06:13] <doesallmagic> Project jQuery Mobile Phantom Master jQuery Old build #167: STILL UNSTABLE in 1 hr 3 min: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Phantom%20Master%20jQuery%20Old/167/
[04:28:46] <jqmobilecommit> [13jquery-mobile] 15jeff012345 opened issue #5617: Textbox's creating sibling elements for every click and never setting initial textbox's value (1.3.0-rc1)  02http://git.io/GHfLYQ
[04:55:14] <_|Nix|_> I really wish people would search through our issues before creating new ones ...
[05:11:07] <uGoMobi> _|Nix|_: I second that
[05:15:37] <talktokets> How can we give transition effects to butttons and view them in android mobile ?
[05:22:00] <uGoMobi> talktokets: This is the developers channel. #jquery is the channel for support.
[05:24:38] <talktokets> So what stuff is discussed here?
[07:39:07] <gseguin> good morning
[07:51:44] <gseguin> rxaviers: so are you going to relocate the download-builder repo to your personal profile?
[08:07:06] <uGoMobi> johnbender: Re: https://github.com/jquery/jquery-mobile/issues/5613 - by default the panel is positioned absolute and the page and the (hidden) panel scroll together. When you open a panel we check if at least the bottom of the panel content is in view. If not we scroll to top.
[08:07:12] <uGoMobi> morning gseguin 
[08:18:53] <uGoMobi> gseguin: not sure if this is correct https://github.com/jquery/jquery-mobile/blob/1f514b838f76228e38c825c43ea65191717e15be/Gruntfile.js#L132
[08:19:19] <gseguin> uGoMobi: why?
[08:19:51] <gseguin> uGoMobi: it goes along with https://github.com/jquery/jquery-mobile/blob/1f514b838f76228e38c825c43ea65191717e15be/Gruntfile.js#L219
[08:20:47] <uGoMobi> gseguin: lemme look again, maybe I don't get the full picture yet
[08:21:34] <gseguin> it consolidates the javascript files in there into one single file, essentially doing what PHP does
[08:21:45] <gseguin> but leading to a static file
[08:23:01] <uGoMobi> a-ha
[08:23:04] <uGoMobi> get it
[08:23:13] <uGoMobi> new file demos.js is created
[08:23:16] <gseguin> does that make sense?
[08:23:25] <uGoMobi> yes it does
[08:23:37] <gseguin> yep
[08:23:55] <gseguin> only thing is it will concatenate them in alphabetical order
[08:24:13] <gseguin> so if we add files in the future, we need to keep that in mind
[08:24:32] <uGoMobi> ok
[08:24:32] <gseguin> or maybe it would be good to prefix them with an index
[08:24:41] <uGoMobi> right
[08:25:03] <gseguin> this way it will make it obvious 
[08:25:18] <johnbender> gseguin: Wilto: toddmparker___: arschmitz: _|Nix|_: uGoMobi: agcolom: http://vimeo.com/58872586
[08:25:24] <johnbender> my talk from last week
[08:25:27] <johnbender> it turned out pretty good
[08:25:30] <uGoMobi> gseguin: I don't think we should JS for individual demos in that folder
[08:25:38] <uGoMobi> should add*
[08:25:53] <gseguin> uGoMobi: ok
[08:26:07] <uGoMobi> just those two files
[08:26:26] <jqmobilecommit> [13jquery-mobile] 15mattkolb opened issue #5618: Allow Cross Domain Request for Trigger.io  02http://git.io/w08qpg
[08:53:59] <johnbender> toddmparker: I'm going to talk with the jsperf folks about tracking performance over time
[08:54:13] <johnbender> gseguin: ^
[08:54:40] <johnbender> when I had a conversation with them last they made it seem like it could be done with the jsperf site but I don't understand how that would work tracking versions
[08:55:26] <gseguin> that's a very good idea
[08:55:46] <johnbender> gseguin: I don't feel comfortable making performance optimizations without being notified of regressions
[08:56:02] <gseguin> understanbly so
[08:56:16] <johnbender> kinblas1 did a lot of work on making page loads fast and we already ruined it with $.fn.data calls
[08:57:22] <kinblas> johnbender: :-(
[09:12:30] <ryanneufeld> johnbender: space of death... I like it
[09:12:37] <johnbender> ryanneufeld: :)
[09:14:31] <ryanneufeld> haha, happy fun time
[09:14:46] <uGoMobi> johnbender: nice presentation... eventhough the subject is kinda hard to follow for me, you bring it in a way I want to keep listening and don't  lose interest
[09:15:02] <johnbender> uGoMobi: :)
[09:15:03] <johnbender> thanks
[09:15:14] <uGoMobi> that's a great skill
[09:16:03] <ryanneufeld> wait, you just built a lexer in haskel, just for the heck of it?
[09:16:10] <uGoMobi> lol
[09:19:39] <johnbender> ryanneufeld: using a lexer generator
[09:19:49] <johnbender> ryanneufeld: I didn't have to build a lexer
[09:20:03] <johnbender> though it wouldn't be that hard in this case with all the nice haskell parser combinator libraries
[09:20:20] <ryanneufeld> the fact that you did it though... .
[09:20:23] <ryanneufeld> impressive
[09:20:43] <johnbender> ryanneufeld: https://gist.github.com/johnbender/8d7db37e8a6dc99e1ea3
[09:20:51] <johnbender> that's all the code
[09:20:55] <johnbender> it's far from impressive
[09:21:12] <johnbender> and that includes a makefile, eval derivation and type derviation
[09:22:23] <johnbender> ryanneufeld: and it's only for that super tiny coffeescript subset
[09:22:34] <ryanneufeld> Yeah
[09:22:38] <ryanneufeld> doesn't make it less cool
[09:25:24] <jqmobilecommit> [13jquery-mobile] 15m90 opened issue #5619: Page content's padding is not adjusted when fixed header elements changes its height due to a media query  02http://git.io/dE1zhg
[09:26:00] <ryanneufeld> any how, I'm gonna add this to my watch later list.
[09:26:38] <johnbender> ryanneufeld: thanks :)
[09:32:30] <johnbender> toddmparker: while I'm waiting to hear back on the perf stuff maybe I should start hacking on the widget.container/
[09:32:33] <johnbender> ?
[10:38:38] <agcolom> johnbender: only one third in. Very nice.... what did you use for your presentation (ppt or html5?)
[10:38:47] <agcolom> (btw still looking ;-) )
[10:38:52] <agcolom> watching ^
[10:39:05] <johnbender> agcolom: reveal.js
[10:39:29] <agcolom> oh! I like it! it's really nice
[10:40:45] <agcolom> johnbender: you appear v relaxed. It's really good!
[10:40:59] <johnbender> agcolom: thanks :)
[10:56:15] <agcolom> johnbender: you definitely captivate your audience and this is an excellent presentation by an excellent speaker! Thank you so much for sharing! Now I really want to go to Oxford!!!!
[10:56:28] <johnbender> agcolom: lol thanks :)
[10:56:38] <johnbender> agcolom: I'm doing the category theory one there since it's jquery specific
[10:58:00] <agcolom> would be nice to attend... 
[11:59:52] <johnbender> toddmparker: ping
[12:17:02] <toddmparker> johnbender: pong
[12:17:12] <toddmparker> sorry, was in a meeting. taking a break. what's up
[12:17:26] <toddmparker> saw you're trying to get meths to help with pert stuff - awesome
[12:17:37] <toddmparker> brb
[12:28:44] <johnbender> toddmparker: yah I talked with JDalton (benchmark.js, jsperf.com) and I'm going to go ahead and set up a sample suite for button-markup
[12:28:56] <johnbender> toddmparker: we can do the regression database down the road
[12:29:20] <johnbender> for now we'll just have to establish a baseline and then monitor relative to that
[12:31:11] <toddmparker> johnbender: that is grear
[12:31:25] <johnbender> toddmparker: better than nothing if not perfect
[12:31:31] <toddmparker> be good to be able to have a baseline now so we can see how much we can speed thing sup with the 1.4 re-factoring
[12:31:48] <toddmparker> button markup is a good one since it's used so much
[12:35:52] <johnbender> toddmparker: yar
[12:44:17] <toddmparker> johnbender: your presentations are always so dang good
[12:44:22] <toddmparker> stahp it
[12:44:33] <johnbender> toddmparker: lol thanks
[12:45:04] <johnbender> toddmparker: I'm assuming that "stahp" is the bostonian accent and not an autocorrect issue :)
[12:45:22] <toddmparker> heck yeah
[12:46:14] <toddmparker> how goes over here today?
[12:46:25] <toddmparker> i'm in a looong client session so i'm out of it
[12:46:38] <toddmparker> was going to fly to sfo for this but the blizzard ruined that
[12:46:54] <toddmparker> would have been stranded there for days
[12:51:39] <uGoMobi> toddmparker: pretty quiet here
[12:52:02] <uGoMobi> toddmparker: working on getting all demos in shape and adding a few more
[12:52:02] <toddmparker> yeahâ€¦GET BACK TO WORK EVERYONE
[12:52:08] <toddmparker> awesome
[12:52:13] <Wilto> am I fired again
[12:52:17] <toddmparker> always
[12:52:31] <toddmparker> figure we should just make the demos presentable
[12:52:35] <toddmparker> we can always add to 'em
[12:52:54] <toddmparker> so anything half baked can be removed/commented out/hidden for now
[12:53:04] <uGoMobi> yes, first making sure that what we have, has the right styling
[12:53:17] <uGoMobi> yup
[12:53:23] <johnbender> gseguin: ping
[12:53:56] <uGoMobi> we have some pages in folders that are not linked up yet, like the panel fixed example
[12:54:54] <uGoMobi> I wanted to clean those up so we can link to it on the widgets/panel page in the section "panel positioning"
[12:55:23] <uGoMobi> same for a panel page that has class ui-responsive-panel
[12:58:51] <toddmparker> that's great
[12:59:09] <toddmparker> i'm going to try and get some more stuff done this weekend
[12:59:17] <toddmparker> porting old docs into Q&A items
[13:02:46] <uGoMobi> johnbender _|Nix|_ : can one of you take a look at this issue https://github.com/jquery/jquery-mobile/issues/5619
[13:03:56] <uGoMobi> with fixed toolbars updatePagePadding() isn't called anymore after resize
[13:04:56] <johnbender> uGoMobi: hmm that's od
[13:04:58] <johnbender> *odd
[13:05:09] <uGoMobi> it is
[13:05:46] <johnbender> uGoMobi: you can assign it to me if you want
[13:05:55] <uGoMobi> johnbender: sure, thanks
[13:06:01] <johnbender> I'll take a look either later today or on monday
[13:06:24] <johnbender> uGoMobi: assigned, sorry that was meant as a question if it was ok to assign it to me :P
[13:06:25] <uGoMobi> cool
[13:07:07] <uGoMobi> don't make it more confusing johnbender ;-)
[13:07:11] <uGoMobi> the issue is all yours
[13:07:19] <johnbender> cool
[13:16:46] <uGoMobi> toddmparker: https://github.com/jquery/jquery-mobile/issues/5615 do we have any influence on Google or Microsoft CDN's?
[13:25:07] <toddmparker> The msft cdn has ssl
[13:25:18] <toddmparker> Sorry, https
[13:25:51] <toddmparker> The message should be that we recommend people don't include the whole lib and do a custom build
[13:31:34] <uGoMobi> i think this was about testing RC's
[13:31:59] <uGoMobi> those are not or not always available on those CDN's
[13:32:14] <uGoMobi> not sure why don't just test local
[13:32:23] <uGoMobi> why they*
[14:48:40] <tybenz> toddmparker: toddmparker_: ping
[15:27:47] <johnbender> gseguin: ping
[15:36:13] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender created 06perf (+1 new commit): 02http://git.io/ZiN_Jg
[15:36:13] <jqmobilecommit> 13jquery-mobile/06perf 14e584e9a 15John Bender: first pass at a basic perf suite setup with benchmark.js
[15:36:54] <johnbender> ?tell gseguin https://github.com/jquery/jquery-mobile/blob/perf/tests/perf/setup.js
[15:36:55] <bot-t> johnbender, Okay.
[15:37:20] <johnbender> ?tell gseguin I'd like to have benchmark.js as a dep in there but I'm not quite sure how, also your welcome to take a look at the first pass of the perf tools
[15:37:21] <bot-t> johnbender, Okay.
[15:38:08] <jqmobilecommit> 01[13jquery-mobile01] 15johnbender pushed 1 new commit to 06perf: 02http://git.io/mVpHuA
[15:38:08] <jqmobilecommit> 13jquery-mobile/06perf 14877673e 15John Bender: whitespace in button markup test markup
[15:39:07] <toddmparker> uGoMobi: I commented on that issue
[15:39:25] <toddmparker> i can be better about uploading betas and rc's to msft
[15:39:47] <toddmparker> johnbender: nice
[15:40:20] <johnbender> toddmparker: trying to make it simple with require
[15:40:51] <toddmparker> cool
[15:41:06] <toddmparker> really like the idea of having a handle on perf
[15:41:44] <johnbender> toddmparker: it's going to require dilligence on the part of the team initially until we can automate it
[15:44:57] <johnbender> *diligence
[15:46:57] <toddmparker> sure, but worth it
[15:48:13] <toddmparker> ok, gotta drop off for a while
[15:48:16] <toddmparker> SNOW
[15:56:27] <johnbender> srsly
[16:46:02] <toddmparker> http://m.aljazeera.com/index/home
[16:46:14] <toddmparker> jQuery Mobile, surprisingly stock
[19:01:52] <jqmobilecommit> [13jquery-mobile] 15Don12 opened issue #5620: Header and Footer width not 100% on iPad  02http://git.io/cggstw
[21:20:27] <gseguin> johnbender: you've got to do 2 things I think:
[21:20:28] <bot-t> (5 hours 43 mins ago) <johnbender> tell gseguin https://github.com/jquery/jquery-mobile/blob/perf/tests/perf/setup.js
[21:20:28] <bot-t> (5 hours 43 mins ago) <johnbender> tell gseguin I'd like to have benchmark.js as a dep in there but I'm not quite sure how, also your welcome to take a look at the first pass of the perf tools
[21:20:38] <johnbender> gseguin: shoot
[21:21:04] <gseguin> add a devDependency on Benchmark.js in the package.json if they publish it in npm
[21:21:34] <gseguin> second is to have a config file for requirejs that defines the paths to benchmark.js
[21:22:20] <gseguin> paths: { "benchmark": "../node_modules/benchmark.js/benchmark.js" }
[21:22:28] <gseguin> or something in the like
[21:22:47] <gseguin> johnbender: does that make sense?
[21:24:21] <johnbender> gseguin: the first makes sense in that I know what to do mechanically
[21:24:28] <johnbender> though I've included the file directly
[21:24:39] <johnbender> and I'd rather not reference something inside the node_modules directory
[21:24:44] <gseguin> better to not have it in our repo
[21:24:52] <gseguin> why?
[21:24:58] <johnbender> that's just as bad imo
[21:25:13] <johnbender> because it doesn't exist until someone has node installed
[21:25:17] <johnbender> :/
[21:25:32] <gseguin> you can't build or test until you've got node
[21:25:52] <johnbender> you can work on the library without node installed
[21:26:03] <gseguin> true, but you can't build it
[21:26:04] <johnbender> and you can test without node installed
[21:26:18] <gseguin> not in the command line
[21:26:24] <johnbender> correct
[21:26:28] <johnbender> but you can most certainly test in the browser
[21:26:40] <gseguin> and it's quite a pain in the ass to kick off all the tests from the browser
[21:26:45] <johnbender> which, I'm willing to wager, is the primary way in which external (and probably internal) contribs test
[21:26:55] <johnbender> no one does all the tests
[21:26:59] <johnbender> not even from the command line
[21:27:01] <johnbender> lol
[21:27:03] <johnbender> they take too long
[21:27:12] <gseguin> heh :)
[21:27:20] <johnbender> I'd rather vendor benchmark 
[21:27:24] <johnbender> and live without making a dep
[21:27:46] <gseguin> we should really split the tests into unit and functional
[21:29:23] <gseguin> I like the devDependencies/node_module solution because it's easy to stay up to date with "latest"
[21:29:52] <johnbender> gseguin: I agree but I don't want to depend on node for doing dev work
[21:29:55] <johnbender> to be clear
[21:30:07] <johnbender> I don't like or want to work with node any more than is absolutely necessary
[21:30:12] <johnbender> totally biased
[21:30:20] <johnbender> (getting that out of front) :)
[21:30:27] <gseguin> totally indeed
[21:30:45] <johnbender> if everyone else on the project is ok with a node dependency then we can go for it
[21:30:50] <johnbender> but I'm not for it
[21:30:59] <johnbender> right now you can do _alot_ without node installed
[21:31:24] <gseguin> whatever: http://wil.to/_/haters.gif
[21:31:36] <gseguin> :P
[21:32:29] <johnbender> :)
[21:32:31] <gseguin> next version of your os will have node like it has perl or ruby today
[21:32:40] <johnbender> fuuuuck that
[21:32:47] <gseguin> it's only a matter of time
[21:32:56] <johnbender> I'll rock gentoo base install if I have to
[21:33:24] <johnbender> gseguin: v8 is built in with Gnome I think now
[21:33:38] <gseguin> told ya!
[21:33:44] <johnbender> gseguin: v8 !== node
[21:33:52] <johnbender> and I'm two steps from ditching gnome all together
[21:34:06] <gseguin> yeah I read somewhere that javascript was a first class citizen for apps now
[21:34:12] <johnbender> gseguin: will be
[21:34:16] * johnbender shakes his head
[21:34:21] <johnbender> I don't get that one at all
[21:34:45] <gseguin> heh :)
[21:36:21] <johnbender> gseguin: I was talking with a grad student a while back
[21:36:34] <johnbender> his adviser is the guy I'm working with at UCLA
[21:36:38] <johnbender> sorry
[21:36:41] <johnbender> s/is/was/
[21:36:46] <johnbender> so I wanted to hear from him what he thought
[21:36:51] <johnbender> anyway
[21:36:58] <johnbender> during the course of our conversation he said something
[21:37:04] <johnbender> "I fucking hate computers man"
[21:37:14] <johnbender> and at the time
[21:37:20] <johnbender> I thought, ahh that's so hilarious
[21:37:21] <johnbender> oh man
[21:37:22] <johnbender> so funny
[21:37:38] <johnbender> because he works on computers all day right
[21:37:40] <johnbender> anyway
[21:37:44] <johnbender> about a week or two later
[21:37:52] <johnbender> I totally got what he was saying
[21:38:08] <johnbender> and I realized it's something that's been stuck in the back of my mind for a _long_ time
[21:38:17] <johnbender> this whole things is completely fucked
[21:38:30] <johnbender> it's piles of shit stacked on more piles of shit
[21:38:38] <johnbender> worse is better everywhere
[21:39:22] <johnbender> and as much as I've gotten and probably will get out of JavaScript over the next 5 to 6 years
[21:39:46] <johnbender> it's a fundamentally ... wierd language and ecosystem
[21:40:29] <johnbender> there's the push and pull of the browser ecosystem
[21:40:59] <johnbender> there's the community which is/was primarly front end people now being infiltrated by folks with more solid cs backgrounds
[21:41:17] <johnbender> there's the dynamic weak nature of the language itself
[21:41:41] <johnbender> it's all just a bit off to me
[21:41:49] <johnbender> well more than a bit
[21:42:01] <johnbender> but I don't want to be to rough
[21:42:11] <johnbender> biting the hand that feeds you know
[21:43:14] <johnbender> s/to rough/too rough/
[21:45:05] <gseguin> I don't think JavaScript is perfect
[21:45:11] <johnbender> gseguin: no language is
[21:46:10] <gseguin> but I do think it's powerful enough to do most of the things you need to do
[21:46:31] <johnbender> gseguin: I get that
[21:46:38] <johnbender> and I think that's important
[21:46:39] <gseguin> and it's got the community you need to solve problems for you
[21:47:04] <gseguin> that's the real power of it
[21:47:07] <gseguin> the community
[21:47:13] <johnbender> that's a reasonable argument
[21:47:25] <johnbender> gseguin: if I had to put it in personal terms
[21:48:05] <johnbender> even after all this time I still haven't gotten to the point that javascript just gets out of my way
[21:48:16] <johnbender> there's always something
[21:48:39] <johnbender> and I can boil that down to specific deficiences in the language and ecosystem
[21:48:56] <johnbender> *deficiencies
[21:49:41] <johnbender> gseguin: a lot of that has to do with the browser, but swapping into node land trades the browser bullshit for async all the time
[21:49:45] <gseguin> and some of them I bet will be addressed in ES6, won't they?
[21:49:54] <johnbender> gseguin: yes
[21:50:00] <johnbender> they will
[21:50:05] <johnbender> but when will I get to use that?
[21:50:18] <gseguin> with node you can already
[21:50:22] <johnbender> :/
[21:50:32] <johnbender> we've had the async all the time discussion
[21:50:58] <gseguin> what's wrong with async?
[21:51:07] <johnbender> like I said
[21:51:11] <johnbender> it gets in the way
[21:51:23] <johnbender> I have to write or import abstractions to make things work in the way I think
[21:51:29] <johnbender> sequentially
[21:51:34] <johnbender> I don't always want async
[21:51:44] <gseguin> Promises, FTW!
[21:51:58] <johnbender> that's my point
[21:52:08] <johnbender> why can't I just write my code sequentially
[21:53:28] <johnbender> gseguin: es6 in the browser would be really nice
[21:53:31] <gseguin> it's either that or threads
[21:53:41] <johnbender> gseguin: not true
[21:53:42] <gseguin> I take async
[21:54:01] <johnbender> stm for example
[21:54:11] <gseguin> not familiar with it
[21:54:33] <johnbender> Software Transactional Memory
[21:54:37] <johnbender> worth reading about
[21:54:48] <johnbender> to be clear it is threads
[21:54:55] <johnbender> but without the concerns you normally associate with threads
[21:55:09] <johnbender> or you can take the haskell route
[21:55:11] <johnbender> or the erlang route
[21:55:15] <johnbender> actors
[21:55:24] <johnbender> which is a BRILLIANT concurrency model
[21:55:59] <johnbender> and it doesn't require that I write all things all async all the time
[21:56:28] <johnbender> I can write boring sequential erlang code
[21:56:37] <johnbender> and pull in message passing between actors when I need to
[21:57:02] <johnbender> with pure functions in haskell you can quite literally "sprinkly" concurrency 
[21:57:10] <johnbender> s/sprinkly/sprinkle/
[22:00:47] <gseguin> ES6 in the browser is not that far away, I dream of a world where all the browsers auto-update
[22:01:07] <johnbender> gseguin: I think that will be much better
[22:01:35] <johnbender> gseguin: to be frank I think most JS devs are going to FREAK out when someone says, "why aren't you using classes"
[22:01:43] <gseguin> and if you don't want auto-update, then you don't get to browse the web, period.
[22:01:45] <johnbender> they're going to be like "FUUUCK I DON"T KNOW"
[22:01:55] <johnbender> gseguin: honestly
[22:01:57] <johnbender> between you and me
[22:02:26] <johnbender> I think the reason most people like the JS community is because no one cares about the code quality they just care about the fact that it works
[22:02:32] <johnbender> and that's not necessarily a bad thing
[22:02:57] <johnbender> but it's painful when you have to work on an existing project
[22:04:02] <johnbender> having a community that's a bit stiff about quality can be offputing but once you get to a place where you feel comfortable with those standards it can be a wonderful and empowering thing
[22:04:22] <gseguin> it used to be true but I think the quality of javascript code has gotten a lot better in the past few years
[22:04:31] <johnbender> absolutely it has
[22:04:33] <gseguin> thanks to testing frameworks, phantomjs
[22:04:36] <johnbender> yes
[22:04:38] <johnbender> 100%
[22:04:44] <johnbender> those folks should be given medals
[22:04:54] <johnbender> but testing alone doesn't make things maintainable 
[22:05:05] <gseguin> and static analysis tools
[22:05:21] <johnbender> gseguin: linting?
[22:05:30] <johnbender> or like legit static analysis
[22:05:40] <gseguin> yeah linting
[22:05:42] <johnbender> ah
[22:05:49] <johnbender> that's nitpicky shit
[22:05:56] <johnbender> it won't make your code readable
[22:06:17] <gseguin> true
[22:06:20] <johnbender> it won't make your abstractions sane
[22:06:32] <johnbender> and that's where javascript gets hurt by being so freeform
[22:06:43] <johnbender> there's no bumpers in the gutters man
[22:06:56] <johnbender> and people, man they love thos gutters when it comes to software
[22:07:48] <gseguin> darn! baby crying, might not be back tonight. it's getting late here
[22:08:06] <gseguin> good chatting with you as always
[22:08:17] <gseguin> ttyl
[22:08:20] <johnbender> gseguin: peace
