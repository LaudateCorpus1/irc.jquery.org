[02:19:34] <doesallmagic> Project jQuery UI - git core build #361: STILL FAILING in 5 min 11 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/361/
[02:19:43] <doesallmagic> Project jQuery UI 1-9-stable - git core build #148: STILL FAILING in 8.1 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/148/
[02:46:17] <doesallmagic> Project jQuery UI - 1.6.x core build #256: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/256/
[03:16:11] <doesallmagic> Project jQuery UI - 1.7.x core build #258: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/258/
[03:46:13] <doesallmagic> Project jQuery UI - 1.8.x core build #233: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/233/
[06:22:47] <scott_gonzalez> mikesherov: Want to discuss this? https://github.com/jquery/jquery-ui/pull/949#issuecomment-15774520
[06:22:48] <b-ot> scott_gonzalez: Pull request #949 by mikesherov (2d 21h ago): Draggable: allow draggable to defer destroying itself upon DOM removal until after stop is fired. Fixes #6889 - Draggable: Cursor doesn't revert to pre-dragging state after revert action when original element is removed.
[06:23:34] <mikesherov> scott_gonzalez: sure
[06:24:54] <scott_gonzalez> So, the idea is that `_domDestroy()` can be much simpler than `_destroy()`
[06:25:09] <scott_gonzalez> For draggable, it'd only have to deal with the helper.
[06:25:22] <scott_gonzalez> For autocomplete, it'd only have to remove the menu and live region div.
[06:25:35] <scott_gonzalez> For something like tabs or accordion, it wouldn't need to do anything.
[06:25:47] <scott_gonzalez> Because all modifications are contained within the widget.
[06:25:59] <scott_gonzalez> So if the element is removed, then there's no cleanup that needs to happen.
[06:28:09] <scott_gonzalez> So what I'm thinking is that directly destroying a draggable would kill it in its tracks.
[06:28:19] <scott_gonzalez> But DOM removal would have the delay.
[06:28:50] <scott_gonzalez> Well, actually directly destroying a draggable could just be broken.
[06:28:56] <scott_gonzalez> Which is the thought I expressed earlier.
[06:29:17] <scott_gonzalez> But that's just a detail we can discuss.
[06:36:10] <mikesherov> scott_gonzalez: one minute actually
[07:43:23] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/4IcVzg
[07:43:23] <jquicommit> 13jquery-ui/06master 1409b3533 15Scott Gonz√°lez: Sortable: Copy the cell structure when sorting a table row. Fixes #9185 - Sortable: Placeholder breaks table-layout: fixed.
[07:49:12] <doesallmagic> Project jQuery UI build #1057: STILL FAILING in 6 min 0 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/1057/
[07:49:12] <doesallmagic> * Mike Sherov: Sortable Tests: Fix IE7 Test fails by being more generous with dragging near borders.
[07:49:13] <doesallmagic> * Mike Sherov: Draggable Tests: Fix IE8 test failures by accounting for the IE8 testswarm IFRAME positioning bug.
[07:49:13] <doesallmagic> * Mike Sherov: Position Tests: Fix FF and IE10 test failures by accounting for subpixel offsets.
[07:49:14] <doesallmagic> * Mike Sherov: Autocomplete Tests: Fix oldIE test failures by accounting for casing differences in .html() return values.
[07:49:14] <doesallmagic> * Mike Sherov: Spinner Tests: Fix IE test failures by accounting for the async nature of focus/blur.
[07:49:15] <doesallmagic> * Mike Sherov: Spinner Tests: Fix IE test failures by removing timing dependencies from focus/blur tests.
[07:49:15] <doesallmagic> * Scott Gonz√°lez: Sortable: Copy the cell structure when sorting a table row. Fixes #9185 - Sortable: Placeholder breaks table-layout: fixed.
[07:50:21] <doesallmagic> Project jQuery UI Mask build #24: STILL FAILING in 1 min 8 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Mask/24/
[07:50:55] <doesallmagic> Project jQuery UI Selectmenu build #69: STILL FAILING in 33 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Selectmenu/69/
[08:37:22] <scott_gonzalez> I volunteered us to write some tests for Pointer Events.
[08:37:31] <scott_gonzalez> Is anyone interested in helping with that?
[08:37:44] <scott_gonzalez> DaveMethvin kborchers mikesherov ^
[08:38:03] <mikesherov> I am interested
[08:38:07] <mikesherov> but swamped at the moment
[08:38:59] <scott_gonzalez> mikesherov: I promised to deliver at least a few tests by next week, but based on the rate of test implementation so far, I'm assuming there will be tests to write for quite a while.
[08:39:09] <DaveMethvin> can we grab some from one of the shim libraries? Or is the idea to write the validation suite for the draft standard?
[08:39:33] <DaveMethvin> i don't think i'll have time this week tho
[08:39:35] <scott_gonzalez> I only made a small promise because I knew it would fall on me if nobody else had time :-)
[08:40:03] <scott_gonzalez> We can probably use tests from the shims as guidance.
[08:40:18] <kborchers> i will be interested (it would help me test what i'm working on as well) but not until next week since i leave for a conference in berlin tonight
[08:43:52] <scott_gonzalez> The existing tests are at https://dvcs.w3.org/hg/pointerevents/
[08:44:05] <scott_gonzalez> There aren't too many right now.
[08:44:16] <scott_gonzalez> But we can get an idea of what they would look like from the Touch Events tests: https://dvcs.w3.org/hg/webevents/
[08:44:39] <scott_gonzalez> I guess it's time to learn Mercurial.
[11:04:19] <doesallmagic> Project jQuery UI Selectmenu build #70: STILL FAILING in 9.6 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Selectmenu/70/
[11:04:19] <doesallmagic> * joern.zaefferer: Autocomplete: Menu's input option is long gone, remove leftovers
[11:04:20] <doesallmagic> * Scott Gonz√°lez: Upgrade to grunt 0.4.1.
[11:04:20] <doesallmagic> * Scott Gonz√°lez: Autocomplete: Insert the live region before the input. Fixes #9172 - Autocomplete: .replaceWith() fails to replace.
[11:04:20] <jquicommit> 01[13jquery-ui01] 15fnagel pushed 1 new commit to 06selectmenu: 02http://git.io/ME2SiA
[11:04:20] <jquicommit> 13jquery-ui/06selectmenu 1473c7342 15Felix Nagel: Merge branch 'master' into selectmenu
[11:04:21] <doesallmagic> * Scott Gonz√°lez: Datepicker Added it-CH locale. Fixes #9175 - Datepicker: Add Italian in Switzerland locale.
[11:04:21] <doesallmagic> * Mike Sherov: Sortable: update placeholder when axis is x or y for connected lists. Fixed #8301 - Placeholder doesn't move when using connectWith option
[11:04:22] <doesallmagic> * Mike Sherov: Draggable: Handle containment set to false after init, and style improvements. Fixes #8962 - Containment doesn't properly update
[11:04:22] <doesallmagic> * Scott Gonz√°lez: Datepicker demo: Corrected the Arabic word for Arabic.
[11:04:23] <doesallmagic> * Mike Sherov: Draggable Tests: Test that removing an element on drop doesn't cause a draggable error. Fixes #9159 - Draggable Tests: Write test case for #8269
[11:04:23] <doesallmagic> * Mike Sherov: Draggable Tests: Minor style fixes and removing unnecessary setup and teardown for core tests.
[11:04:24] <doesallmagic> * Scott Gonz√°lez: Datepicker demo (localization): Add English as an option.
[11:04:24] <doesallmagic> * Scott Gonz√°lez: Whitespace.
[11:04:25] <doesallmagic> * Scott Gonz√°lez: Build: Use globals instead of predef for JSHint.
[11:04:25] <doesallmagic> * Scott Gonz√°lez: Core: Updated comment about $.ui.plugin.
[11:04:26] <doesallmagic> * Scott Gonz√°lez: Core: Removed $.ui.hasScroll(). Fixes #9190 - Core: Remove $.ui.hasScroll().
[11:04:26] <doesallmagic> * Scott Gonz√°lez: Tests: Handle globals in .jshintrc.
[11:04:27] <doesallmagic> * Scott Gonz√°lez: Accordion: Maintain collapsed state on refresh. Fixes #9189 - Accordion: refresh() method incorrectly opens collapsed accordion.
[11:04:27] <doesallmagic> * Mike Sherov: Selectable Tests: Fix test failures in IE7 by accounting simulated events properly.
[11:04:28] <doesallmagic> * Mike Sherov: Sortable Tests: Fix IE7 test failures due to incorrectly expecting relative urls in img srcs.
[11:04:28] <doesallmagic> * Mike Sherov: Sortable Tests: Fix IE7 Test fails by being more generous with dragging near borders.
[13:28:33] <rxaviers> scott_gonzalez, we dont inclue `demos/index.html` on the downloaded packages. But, we do for the release package. Any reason why? I was wondering if we simply could always include it. That would save one switch between downloaded/release package.
[13:29:15] <rxaviers> I don't know if it's about demos not being themed...
[13:29:29] <rxaviers> and user could expect it to be
[13:29:36] <scott_gonzalez> We don't include it because some of the links would 404 for custom downloads.
[13:30:23] <rxaviers> ah! if user chooses a custom component selection, we'd need to change that file as well.
[13:30:56] <rxaviers> ok, so downloadBuilder can check: is all component selected? include index.html.
[13:31:37] <scott_gonzalez> sure
[13:31:40] <scott_gonzalez> I'd be ok with that.
[13:31:43] <rxaviers> or, the above would make users think it's broken
[13:31:51] <rxaviers> when custom components are selected
[13:32:02] <rxaviers> :-/
[13:33:17] <scott_gonzalez> Tests aren't included in custom downloads, right?
[13:33:41] <rxaviers> Im including a switch for now: addTests: true
[13:34:02] <scott_gonzalez> ok
[13:34:03] <rxaviers> (so we can include it when building a release)
[13:34:16] <scott_gonzalez> Because tests would have the same problem.
[13:34:20] <rxaviers> yeap :(
[13:35:53] <scott_gonzalez> You're going to write the logic for the oddly named demo directories?
[13:35:59] <scott_gonzalez> addClass, show, etc.
[13:36:44] <scott_gonzalez> Because demos/index.html is super basic. It'd be easy to generate on the fly if we wanted.
[13:36:59] <scott_gonzalez> view-source:http://view.jqueryui.com/master/demos/index.html
[13:37:14] <scott_gonzalez> It's just a list of the subdirectories.
[13:37:59] <rxaviers> For the oddly named demo dirs: https://gist.github.com/rxaviers/5295947
[13:38:21] <rxaviers> yeap it is
[13:38:27] <rxaviers> ok I will generate that on the fly then
[13:38:31] <rxaviers> it's the best approach
[13:38:45] <scott_gonzalez> ok
[13:39:06] <rxaviers> thks
[13:39:08] <rxaviers> ;)
[13:40:27] <scott_gonzalez> no problem
[16:53:27] <jquicommit> 01[13jquery-ui01] 15mikesherov pushed 1 new commit to 06master: 02http://git.io/sKSasg
[16:53:27] <jquicommit> 13jquery-ui/06master 14a88d645 15Mike Sherov: Draggable: Stop erroneously overriding scroll offsets for root nodes. Fixes #6258 - Draggable: not following mouse when scrolled and using overflow-y: scroll.
[17:00:56] <doesallmagic> Project jQuery UI build #1058: STILL FAILING in 7 min 44 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/1058/
[17:00:57] <doesallmagic> Mike Sherov: Draggable: Stop erroneously overriding scroll offsets for root nodes. Fixes #6258 - Draggable: not following mouse when scrolled and using overflow-y: scroll.
[20:26:48] <jquicommit> [13jquery-ui] 15antishok opened pull request #950: Draggable: small improvement to scroll caching (06master...06draggable_scrollcache_improvement)  02http://git.io/Y2_MWw
