[02:20:50] <doesallmagic> Project jQuery UI - git core build #360: STILL FAILING in 6 min 34 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/360/
[02:20:57] <doesallmagic> Project jQuery UI 1-9-stable - git core build #147: STILL FAILING in 7.1 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/147/
[02:46:21] <doesallmagic> Project jQuery UI - 1.6.x core build #255: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/255/
[03:16:10] <doesallmagic> Project jQuery UI - 1.7.x core build #257: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/257/
[03:46:14] <doesallmagic> Project jQuery UI - 1.8.x core build #232: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/232/
[05:28:59] <mikesherov> scott_gonzalez: I'm trying to fix the spinner test fails in IE: http://swarm.jquery.org/result/148998
[05:29:28] <mikesherov> so I did this: https://github.com/jquery/jquery-ui/commit/efe8da8e6e9b50547fe9a632b267c7f8479b6686
[05:29:28] <b-ot> mikesherov: Mike Sherov (19h 33m ago): Spinner Tests: Fix IE test failures by accounting for the async nature of focus/blur.
[05:30:04] <mikesherov> but that still doesn't work. The async nature of the blur event really throws this test off and makes it brittle based on timing
[05:31:39] <mikesherov> I was wondering why we don't add a blur handler to this test that records the current value, then sets a timeout to see that the value hasn't changed after blur...
[05:31:54] <mikesherov> would that be sufficient?
[05:50:08] <scott_gonzalez> mikesherov: We can do that. Before `element[0].blur();` do a `.one( "blur", ... )`
[05:52:45] <mikesherov> scott_gonzalez: can you repeat last message?
[05:55:15] <mikesherov> I can't do "on" in the test suite, right? because of 1.6?
[06:00:15] <doesallmagic> Project jQuery UI build #1056: STILL FAILING in 0.22 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/1056/
[06:00:19] <doesallmagic> Project jQuery UI Mask build #23: STILL FAILING in 3.6 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Mask/23/
[06:00:25] <doesallmagic> Project jQuery UI Selectmenu build #68: STILL FAILING in 5.8 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Selectmenu/68/
[06:00:31] <jquicommit> 01[13jquery-ui01] 15mikesherov pushed 1 new commit to 06master: 02http://git.io/TMeSwg
[06:00:31] <jquicommit> 13jquery-ui/06master 145217b97 15Mike Sherov: Spinner Tests: Fix IE test failures by removing timing dependencies from focus/blur tests.
[06:01:17] <scott_gonzalez> mikesherov: I said "We can do that. Before `element[0].blur();` do a `.one( "blur", ... )`"
[06:01:35] <scott_gonzalez> Correct, you can't use `.on()`, but you can use `.one()`
[06:01:48] <mikesherov> oh, I used bind :-\
[06:02:20] <mikesherov> I suppose I can use the same technique to fix the focus tests for dialog, right?
[06:02:49] <scott_gonzalez> yeah
[10:28:42] <rxaviers> scott_gonzalez, all, How would you name this directory? It holds prepared jquery-ui source files for download. Suggestion: dist, src, build, release, ...?
[10:29:20] <scott_gonzalez> maybe build
[10:36:34] <rxaviers> currently, we run `manifest` and `release` as preparation steps and we were calling this dir `release`.. I've changed db (not pushed yet) to drop this release requirement, and instead use `manifest` and `build` as preps only. So, `build` is a very good name for now. Although, in the future we may no longer need it to be built, but we can use its source files and build it dynamically in the lib.
[10:37:49] <rxaviers> Using `build`
[10:39:31] <rxaviers> for now. Thanks. If someone has a more abstract name that you think it would fit, pls jst let me know
[12:50:14] <brombomb-w> Is it intentional that a "menu" with a fixed height has mouseover scroll capabilities?
[12:50:44] <brombomb-w> fiddle -- http://jsfiddle.net/brombomb/rn4rB/
[12:57:30] <scott_gonzalez> brombomb-w: No, I don't believe it's intentional.
[12:57:42] <scott_gonzalez> why?
[12:58:39] <brombomb-w> well trying to utilize it and it's not really documented anywhere.  Except maybe the nextPage and prevPage methods... which quite frankly don't make much sense (and aren't used/shown off anywhere)
[12:59:18] <scott_gonzalez> Those methods are unrelated.
[13:00:01] <scott_gonzalez> The thing that is intentional is that the currently active menu item is always fully visible.
[13:00:25] <scott_gonzalez> So if you move your mouse to the very bottom or very top and there's a partial (even 1px) item, it will scroll.
[13:00:56] <scott_gonzalez> And that scroll may cause a different item to show up under the cursor, thus causing another scroll.
[13:01:02] <scott_gonzalez> Repeat until the end of the menu.
[13:01:31] <brombomb-w> I was able to exploit that by giving a suffciently large (25) padding to the top and bottom
[13:01:47] <brombomb-w> I was trying to stuff some handles into there to "make it work" but it's too hackish
