[05:11:16] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/vTa0UA
[05:11:16] <jquicommit> [jquery-ui/1-8-stable] Autocomplete: Re-enable native autocomplete whent he page is unloaded. Fixes #7790 - Autocomplete-enabled text input does not keep value when using back button in browser. - Scott González
[06:38:55] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/U-gwqw
[06:38:55] <jquicommit> [jquery-ui/master] Upgraded jQuery to 1.6.4. - Scott González
[06:40:10] <jq-jenkins> Project jQuery UI build #119: STILL FAILING in 1 min 6 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/119/
[06:40:11] <jq-jenkins> Scott González: Upgraded jQuery to 1.6.4.
[07:00:35] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/TQMPUw
[07:00:35] <jquicommit> [jquery-ui/1-8-stable] Upgraded jQuery to 1.6.4. - Scott González
[07:04:25] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/BKddoQ
[07:04:25] <jquicommit> [jquery-ui/1-8-stable] Sortable tests: Commented out assertions that don't make sense. - Scott González
[07:14:45] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/B06WFA
[07:14:45] <jquicommit> [jquery-ui/1-8-stable] Default to jQuery 1.6.4 for tests. - Scott González
[07:18:49] <scott_gonzalez> kborchers: do you have a test page for the position fraction stuff?
[07:19:49] <kborchers> no, i was just going by the 5280 unit test ... i could make one if you want
[07:20:21] <scott_gonzalez> let me see if I can track down the original test page
[07:22:37] <scott_gonzalez> got it: http://jsbin.com/uceje4/2
[07:22:38] <kborchers> scott_gonzalez: this one? http://jsfiddle.net/yDXXT/
[07:23:03] <kborchers> oh, never saw that one
[07:24:28] <scott_gonzalez> hmm...that test passes with 1.8.16 using jQuery 1.5 and 1.6
[07:24:51] <scott_gonzalez> maybe it's the opposite rounding problem in 1.8.16
[07:28:02] <kborchers> hmm
[07:29:25] <scott_gonzalez> ok, this is what we're trying to address: http://bugs.jqueryui.com/ticket/6000#comment:9
[07:30:15] <scott_gonzalez> so I don't think there's a bug to fix
[07:31:05] <scott_gonzalez> hmm....
[07:31:32] <scott_gonzalez> we're trying to fix a bug where core creates a problem, not the browser?
[07:31:32] <kborchers> yeah, now i'm just confused ...
[07:31:59] * scott_gonzalez hates position
[07:32:04] <kborchers> heh
[07:40:16] <kborchers> yeah, it feels like i have been chasing my tail on this one because it was originally meant to fix core < 1.6 using parseInt in setOffset but i think there is still an issue with how broswers handle the fractions ... and of course they all do it differently
[07:42:26] <kborchers> i believe i found that ie < 9 rounds everything down, IE9 does proper rounding, FF keeps the fractions, webkit does proper rounding
[07:42:33] <scott_gonzalez> yeah, there's a mix of problems and it's not clear what we're trying to fix right now
[07:43:01] <scott_gonzalez> IE 10 supposedly keeps the fractions too
[07:43:12] <kborchers> nice
[07:47:57] <kborchers> my adjustments to his original solution were meant to check both if core was messing with the fractions and the browser support ... just not quite sure now if that worked
[07:48:49] <kborchers> that's why i made it check the range support.fractions = offsetTotal > 21 && offsetTotal < 22; instead of just > 21 to handle the browser rounding left: 10.7432222px; up
[08:21:48] <defendguin> any idea when the jquery ui grid will be complete?
[08:25:00] <rworth> not before 2.0 or 2.1, and 1.9 is months away
[08:25:18] <defendguin> :-(
[08:26:09] <defendguin> i guess i'll continue to use jqgrid
[08:27:37] <defendguin> is wijmo worth the money?
[09:51:10] <gnarf> hey rworth / jzaefferer / scott_gonzalez - How do you guys feel about switching to using uglify instead of closure compiler?
[09:51:34] <jzaefferer> I'm fine with it
[09:51:38] <gnarf> https://gist.github.com/c8cfdd3c93abef4e02fa i'm pretty sure this size report is accurate
[09:52:03] <gnarf> also, i'm not sure why, but it seems that using <exec> or <apply> ant things is creating a redirection problem
[09:52:16] <gnarf> its going to add a dependancy on node/bash to our build chain
[09:52:32] <gnarf> but - it saves like 4 minutes per build, and a few bytes :)
[09:54:21] <jzaefferer> yeah, I don't think anyone on the team is still on Windows, so whatever
[09:54:39] <jzaefferer> a total diff would be nice in that report
[09:54:54] <gnarf> there is kinda
[09:55:01] <jzaefferer> yeah, the ui.min.js...
[09:55:05] <jzaefferer> nvm
[09:56:03] <gnarf> scott_gonzalez / rworth - i'd like to have consensus on this...
[10:00:40] <scott_gonzalez> +1, we were switching to uglify for 1.9 anyway
[10:01:25] <gnarf> should i leave 1.8 stable on CC then?
[10:02:03] <gnarf> or is it time to switch everywhere? :)
[10:03:58] <scott_gonzalez> it's up to you
[10:05:29] <gnarf> okay
[10:05:36] <gnarf> second question - short header for minified files
[10:06:13] <gnarf> jQuery uses /*! jQuery v@VERSION http://jquery.com/ | http://jquery.org/license */
[10:09:57] <jquicommit> [jquery-ui] gnarf37 pushed 1 new commit to master: http://git.io/3PurwQ
[10:09:57] <jquicommit> [jquery-ui/master] Build: Switching to uglify.js instead of closure compilier.  Saves 4 minutes per build, and actually produces slightly smaller files - Corey Frang
[10:11:13] <jq-jenkins> Project jQuery UI build #120: STILL FAILING in 1 min 9 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/120/
[10:11:13] <jq-jenkins> Corey Frang: Build: Switching to uglify.js instead of closure compilier.  Saves 4 minutes per build, and actually produces slightly smaller files
[10:14:31] <jquicommit> [jquery-ui] gnarf37 pushed 1 new commit to 1-8-stable: http://git.io/FVOtzQ
[10:14:31] <jquicommit> [jquery-ui/1-8-stable] Build: Switching to uglify.js instead of closure compilier.  Saves 4 minutes per build, and actually produces slightly smaller files - Corey Frang
[10:24:49] <gnarf> can you guys please verify that your builds still work? :)
[10:33:09] <jzaefferer> you ask that after pushing to 1-8-stable? m(
[10:33:50] <gnarf> any fixes i'll keep up to date
[10:33:52] <gnarf> i tested local
[10:34:29] <gnarf> just wanna make sure i didn't miss anything about the difference between my environment and anyone elses
[10:35:21] <gnarf> i gotta say, the speed at which it builds is WAY better
[10:42:08] <gnarf> jzaefferer: you think we should set up a 1.8 job in jenkins?
[10:42:32] <jzaefferer> not sure
[10:42:51] <jzaefferer> which 1.8 units are actually producing reliable results?
[10:42:58] <gnarf> heh
[10:43:01] <gnarf> i dunno
[10:43:33] <jzaefferer> I'd rather set up jobs for feature branches, testing just the new components
[10:43:56] <jzaefferer> only candidate for that is mask
[10:44:07] <jzaefferer> if we merge that to master sometime soon...
[10:44:11] <gnarf> im gonna try to set that one up
[10:44:14] <jzaefferer> then we don't need an extra job
[10:44:28] <jzaefferer> we should take a look at jenkins file system
[10:44:43] <jzaefferer> see if we can just copy&paste parts of the job description, instead of doing it in the UI
[10:45:08] <jzaefferer> ala create new job, fill it with details from existing job, modify the rest
[10:46:11] <gnarf> jzaefferer: it has a copy from job
[10:46:18] <gnarf> jzaefferer: that was really useful just now
[10:46:20] <gnarf> my question
[10:46:24] <jzaefferer> ah, nice
[10:46:30] <gnarf> should i use the jqueryui user?
[10:46:33] <jzaefferer> deleting stuff is prolly easy enough
[10:46:40] <jzaefferer> yeah, should be fine
[10:47:13] <jzaefferer> at some point we'll improve the jenkins integration to show the testswarm-job-link on the build frontpage
[10:47:20] <jzaefferer> instead of just hiding it in the console...
[10:47:50] <jq-jenkins> Project jQuery UI Mask build #1: FAILURE in 27 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Mask/1/
[10:48:07] <gnarf> http://swarm.jquery.org/job/85/
[10:48:50] <gnarf> wtf is going on with that IE
[10:49:59] <gnarf> seems to affect FF too
[10:52:02] <gnarf> that uncaught exception error happens on http://swarm.jquery.org/git/jquery-ui/6abb3c912dd2df535bdb7548a6d24165f5bad008/tests/unit/mask/mask.html?_=1318960176073&swarmURL=http%3A%2F%2Fswarm.jquery.org%2Frun%2Fgnarf%2F%3Frun_id%3D420%26client_id%3D399%26state%3D&notrycatch=true in firefox
[10:55:27] <gnarf> hrm
[10:55:32] <gnarf> https://github.com/digitalBush/jquery.maskedinput/issues/34
[10:55:33] <socialhapy> ★ Issue #34 on jquery.maskedinput, reported by owens2024 (5m, 1w ago): Uncaught exception
[10:55:58] <gnarf> are the elements I'm testing on in the unit suite considered "hidden" ?
[10:56:13] <jzaefferer> check qunit.css #qunit-fixture
[10:56:38] <jzaefferer> that's supposed to keep em visible
[11:01:46] <jzaefferer> gnarf
[11:03:14] <gnarf> ya?
[11:04:33] <jzaefferer> saw that about qunit.css?
[11:08:15] <gnarf> yup
[11:08:18] <gnarf> doesn't look hidden
[11:08:22] <gnarf> i'll play with it more later
[11:08:35] <gnarf> its positioned offscreen
[11:08:39] <gnarf> but its not hidden
[11:56:50] <scott_gonzalez> so does anyone have any thoughts on what causes the async test problem? http://swarm.jquery.org/?state=runresults&run_id=409&client_id=399
[11:57:09] <scott_gonzalez> a way to reliably reproduce it would be very helpful
[11:59:34] <gnarf> scott_gonzalez: i assume this works fine when you run it "locally" ?
[11:59:40] <scott_gonzalez> yeah
[11:59:52] <gnarf> have you tried running it from swarm using the injected url?
[12:00:12] <scott_gonzalez> you mean http://swarm.jquery.org/git/jquery-ui/bd71f24f5d5c1767f24b3c88df9fab8be38ed734/tests/unit/tooltip/tooltip.html
[12:00:15] <scott_gonzalez> if so, yes
[12:00:19] <scott_gonzalez> I've had it fail on my locally
[12:00:27] <gnarf> with a ?swarminject=...... or whatever that param is
[12:01:07] <gnarf> scott_gonzalez: is it possible that the suite might be "finishing" before the tests finish?
[12:01:18] <gnarf> like - do all the tests resolve immediately?
[12:01:32] <scott_gonzalez> the test that it dies on is async
[12:01:39] <scott_gonzalez> but none of the other tests after it run
[12:01:48] <scott_gonzalez> so something must be stopping the test
[12:01:57] <scott_gonzalez> causing the start() call to never be reached
[12:02:04] <scott_gonzalez> but I have no idea what
[12:02:42] <gnarf> well
[12:02:47] <gnarf> this shit is using focus
[12:02:48] <gnarf> so
[12:02:59] <gnarf> try running the test on a page you've tabbed out of
[12:03:21] <gnarf> you can't send focus to an element on a page that doesn't have focus
[12:03:45] <scott_gonzalez> that's totally it
[12:03:55] <gnarf> something like on the console: setTimeout( function() { window.location = window.location + "?_"; }, 10000); then tab out and wait
[12:04:04] <gnarf> sucks, but cool to find it
[12:04:16] <scott_gonzalez> I just ran the test and switched tabs
[12:04:26] <scott_gonzalez> it takes long enough to get to that test that it's easy to verify
[12:04:32] <scott_gonzalez> so how do we fix this?
[12:06:45] <gnarf> only two ways that i've seen
[12:06:51] <gnarf> first
[12:06:59] <gnarf> don't run that test if the browser is incapable of setting focus
[12:07:20] <gnarf> second, don't rely on the behavior of focus
[12:07:36] <gnarf> third i just came up with, disallow swarm from running on browsers without focus
[12:08:01] <gnarf> considering half of the test fails we see in jQuery core are also focus related
[12:09:06] <scott_gonzalez> #3 sounds good
[12:09:23] <gnarf> jzaefferer: you have an opinion there?
[12:09:24] <jzaefferer> so one machine can only run one browser?
[12:09:30] <gnarf> jzaefferer: VMs
[12:09:41] <jzaefferer> machine, virtual machine, whatever
[12:09:42] <gnarf> otherwise we get failures anytime we test behaviors of focus
[12:10:27] <gnarf> so either we need to "skip" the affected tests, or we need to disallow them from running in the first place
[12:10:34] <jzaefferer> well, should be okay once browserstack helps us out, right?
[12:10:41] <scott_gonzalez> yeah
[12:10:45] <gnarf> hopefully, yes
[12:11:27] <jzaefferer> let's not make that bet until we can verify that behaviour
[12:11:32] <gnarf> we could add something into the testsuite startup that creates an input, appends to body, tries to focus - then save the state
[12:11:46] <scott_gonzalez> jzaefferer: verify what behavior?
[12:11:54] <scott_gonzalez> that BrowserStack will run them as the focused app?
[12:11:55] <jzaefferer> browerstack clients
[12:11:58] <jzaefferer> yeah
[12:12:04] <gnarf> or even just a little helper "if (canFocus()) { test(...) }"
[12:12:34] <jzaefferer> or if (cantFocus() ) { var up = "boo"; throw up; }
[12:12:45] <scott_gonzalez> that doesn't help
[12:12:54] <gnarf> well it helps from not having timeouts
[12:12:55] <scott_gonzalez> that's equally as bad as what we have right now
[12:13:00] <gnarf> but it still creates fails
[12:13:00] <scott_gonzalez> it's actually worse
[12:13:17] <scott_gonzalez> well, throwing isn't worse
[12:13:20] <scott_gonzalez> but it's not better
[12:13:26] <gnarf> "hiding" the test isn't much better either
[12:13:32] <gnarf> but would result in green results
[12:13:34] <scott_gonzalez> hiding the test is definitely worse
[12:14:05] <gnarf> the browser needs focus to run a lot of our test suites
[12:14:45] <scott_gonzalez> we can have TestSwarm hand out tests and just not report back, right?
[12:15:02] <gnarf> for unfocused browsers?
[12:15:06] <scott_gonzalez> we can do that specific to jQuery UI, without building it into TestSwarm
[12:15:08] <scott_gonzalez> yeah
[12:16:18] <scott_gonzalez> heh, too bad you can't dismiss an alert from JS :-P
[12:16:21] <gnarf> basically - the idea being don't report your results unless you passed - or the browser is capable of dispacting a "real" focus?
[12:16:26] <scott_gonzalez> alert( "I'm a focus hog" ); closeAlert();
[12:16:31] <scott_gonzalez> would give us focus back :-P
[12:16:59] <gnarf> scott_gonzalez: is that what you were aiming for there?
[12:17:03] <scott_gonzalez> well, don't bother running the tests if you're not the focused tab/app
[12:17:12] <gnarf> scott_gonzalez: possible...
[12:18:08] <gnarf> but doesn't help if you lose focus while testing
[12:18:16] <gnarf> *shrug*
[12:18:38] <scott_gonzalez> we can check again before we send the results
[12:18:45] <scott_gonzalez> still not perfect, but pretty good
[12:18:49] <gnarf> it would be easier to add into QUnit i think
[12:19:14] <gnarf> unless there already is a way to "disable" the suite
[12:19:32] <gnarf> scott_gonzalez: some of the suites run perfectly fine in non-focused browsers tho
[12:19:38] <gnarf> its only if you are testing focus
[12:25:47] <scott_gonzalez> the strange thing is that even triggering the event handlers directly doesn't do anything
[12:25:55] <scott_gonzalez> element.triggerHandler( "focusin" ) does nothing
[12:28:59] <gnarf> hrm
[13:29:23] <jzaefferer> hey scott_gonzalez, I've blogged about my git/bash addons here: http://bassistance.de/2011/10/14/git-fu-bash-addons/ - should I add something from there to here? http://wiki.jqueryui.com/w/page/40154555/Pull-Requests
[13:29:52] <scott_gonzalez> sure
[13:43:10] <jzaefferer> btw scott_gonzalez do you ever use rebase --interactive?
[13:43:36] <jzaefferer> fun options for merging multiple commits into one, keeping messages on the way and more
[13:44:28] <scott_gonzalez> never used it
[13:48:40] <jquicommit> [jquery-ui] jzaefferer pushed 1 new commit to grid: http://git.io/vliRKw
[13:48:40] <jquicommit> [jquery-ui/grid] Make _toArray in grid accept both (observable) arrays and dataview instances (checks for result property as array). Refreshes the localDataview once. - Adam Boduch
[13:49:49] <jzaefferer> just used it for this PR: https://github.com/jquery/jquery-ui/pull/496
[13:49:50] <socialhapy> ★ Pull request on jquery-ui by adamboduch (5d, 7h ago): Grid
[13:50:09] <jzaefferer> none of the commit messages really described what was actually being changed
[13:54:01] <jzaefferer> add the fork alias thing
[13:58:15] <jzaefferer> *added
[14:21:49] <jzaefferer> gnarf or scott_gonzalez around?
[14:21:56] <gnarf> yup
[14:21:57] <jzaefferer> need some help untangling a git mess
[14:21:58] <scott_gonzalez> yes, both of us
[14:22:10] <scott_gonzalez> git reset --hard
[14:22:13] <jzaefferer> about https://github.com/jquery/jquery-ui/pull/383
[14:22:14] <socialhapy> ★ Pull request on jquery-ui by hanshillen (3m, 1w ago): Datepicker hh
[14:22:16] <gnarf> she likes it hard
[14:22:41] <chovy> howdy
[14:22:47] <jzaefferer> basically everything except the datepicker-rewrite/ stuff needs to land in master
[14:22:58] <chovy> in jquery-ui, I have a sortable list whose items are also droppable for something else, when I drag a sortable item the ui-state-hover for the droppable triggers when I drag a sortable item over a sibling item that is sortable.
[14:23:00] <jzaefferer> the actual datepicker stuff, along with that, in the datepicker branch
[14:23:03] <chovy> i don't think that should be happening.
[14:23:28] <jzaefferer> I tried rebasing that branch against master, which takes forever to resolve
[14:23:37] <jzaefferer> I got it merged locally though
[14:23:57] <jzaefferer> merging skips a bunch of intermediate states, so is a lot easier
[14:24:38] <jzaefferer> so, any idea how to take it apart to land some of it in master?
[14:24:54] <gnarf> jzaefferer: best way IMO
[14:25:05] <gnarf> is going to be to squash the whole damn thing
[14:25:11] <gnarf> and recreate the other commits against master
[14:25:15] <scott_gonzalez> probably cherry-pick them into master
[14:25:21] <gnarf> maybe cherry picking
[14:25:27] <scott_gonzalez> so you only get the changes you want
[14:25:32] <scott_gonzalez> then merge master into datepicker
[14:25:46] <scott_gonzalez> then cherry-pick again into datepicker, but only the datepicker-rewrite changes
[14:25:59] <scott_gonzalez> you probably want to cherry-pick -n
[14:26:13] <gnarf> so you can squash it too
[14:26:31] <jzaefferer> so -n to kick out the datepicker stuff from master?
[14:26:38] <gnarf> if you do like 3 cherry-pick -n's you get one commit when you're done
[14:26:38] <scott_gonzalez> yeah
[14:26:59] <jzaefferer> can I pick em all at once?
[14:27:12] <gnarf> one at a time, but with -n each time
[14:28:26] <jzaefferer> meaning I have to resolve conflicts for each and every commit :/
[14:28:37] <jzaefferer> even for changes that disappear later
[14:29:18] <gnarf> yeah
[14:29:28] <gnarf> you can git merge -n
[14:29:34] <gnarf> but it will prolly blow
[14:29:44] <gnarf> no matter how you slice it
[14:29:58] <gnarf> splitting a branch in two is like taking an axe to the code
[14:30:15] <gnarf> almost easier to do it by hand/eye
[14:30:40] <gnarf> i had to do that once
[14:31:01] <gnarf> and ended up just remaking the changes for master by hand
[14:31:08] <gnarf> then merging them back to the branch
[14:31:44] <jzaefferer> I've got a merged end result that I'm happy with
[14:31:48] <jzaefferer> could just copy that "over" to master
[14:32:04] <jzaefferer> is there some way to do that apart from making a copy of the whole repo from the branch?
[14:32:51] <gnarf> what do you mean you have a merged end result?
[14:33:03] <scott_gonzalez> jzaefferer: that's gonna kill the merge into master later
[14:33:13] <jzaefferer> I've got a branch of that PR with a merge of master in it
[14:33:36] <gnarf> okay, so its "green"
[14:33:37] <gnarf> right?
[14:33:49] <gnarf> you can have hans pull that from you
[14:34:10] <gnarf> or you can just make that origin/datepicker and he can do a fresh checkout
[14:34:30] <gnarf> but what was the goal again?
[14:34:33] <jzaefferer> well, Hans is done for now, that's not really solving anything
[14:34:36] <gnarf> some of his changes need to land in master?
[14:34:41] <jzaefferer> yeah
[14:34:50] <gnarf> which commits?
[14:34:54] <jzaefferer> and thanks to plenty menu and popup changes in master, lots of conflicts
[14:34:55] <gnarf> you got a list?
[14:34:59] <jzaefferer> all of them in the PR
[14:35:07] <jzaefferer> but without the datepicker stuff...
[14:35:31] <gnarf> you want to land his branch -- minus anything in the datepicker file?
[14:35:56] <jzaefferer> scott_gonzalez: if I do the copy&paste thing and merge the resulting master back into the datepicker branch, then copy the actual datepicker changs to that branch, we should be good to merge that back to master late?
[14:36:02] <jzaefferer> will mean his commits are lost
[14:36:07] <jzaefferer> gnarf: yeah
[14:36:58] <scott_gonzalez> yeah
[14:37:21] <gnarf> you can --author them
[14:38:00] <gnarf> filter-branch might help
[14:38:44] <jzaefferer> —author is a good call, thanks
[14:38:47] <jzaefferer> what's filter-branch?
[14:39:04] <gnarf> i dunno, your gonna run into conflicts no matter how you do it
[14:39:24] <gnarf> so might as well just do it by eye
[14:39:25] <gnarf> right?
[14:41:24] <jzaefferer> copy&pasting the merged results seems like an acceptable strategy
[14:41:39] <jzaefferer> along with --author
[14:48:53] <jzaefferer> this sucks so much
[14:49:01] <jzaefferer> turns out I made mistakes when merging earlier
[14:49:05] <jzaefferer> so can start over
[14:49:14] <jzaefferer> not today
[19:12:33] <jquicommit> [jquery-ui] kborchers pushed 1 new commit to master: http://git.io/EHnYww
[19:12:33] <jquicommit> [jquery-ui/master] Menu: Update visual test to remove bottom scroll bar in scrolling menus in IE6 and IE7 - kborchers
[19:14:06] <jq-jenkins> Project jQuery UI build #121: STILL FAILING in 1 min 26 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/121/
[19:14:07] <jq-jenkins> kris.borchers: Menu: Update visual test to remove bottom scroll bar in scrolling menus in IE6 and IE7
[19:14:36] <kborchers> ?tell jq-jenkins :P
[19:14:37] <bot-t1> kborchers, Okay.
