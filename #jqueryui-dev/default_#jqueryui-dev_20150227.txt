[00:05:18] <doesallmagic2> Project jQuery UI - 1.8.x core build #677: STILL UNSTABLE in 9 min 17 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.8.x%20core/677/
[03:17:19] <jqmobilecommit> [13jquery-mobile] 15Daytron opened issue #7979: Panel push/reveal won't work on tabs 02http://git.io/xkpY
[03:51:13] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof pushed 1 new commit to 067856-re-add-tabindex: 02http://git.io/xIk4
[03:51:13] <jqmobilecommit> 13jquery-mobile/067856-re-add-tabindex 14c7b04f0 15Gabriel Schulhof: Popup: Retrieve via selector in tests
[06:11:24] <jquicommit> [13jquery-ui] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/xINd
[06:11:24] <jquicommit> 13jquery-ui/06master 14c077e0a 15Scott Gonz√°lez: Core: Drop feature detection for version check to support jQuery 1.7...
[06:16:04] <doesallmagic2> Project jQuery UI build #1536: SUCCESS in 4 min 54 sec: http://jenkins.jquery.com/job/jQuery%20UI/1536/
[06:16:05] <doesallmagic2> Scott Gonz√°lez: Core: Drop feature detection for version check to support jQuery 1.7
[07:39:05] <scott_gonzalez> arschmitz: So just to confirm, .hasClasses() is not strict, correct?
[07:39:16] <arschmitz> correct
[07:39:23] <arschmitz> it was never intended to be
[07:39:44] <arschmitz> scott_gonzalez: However i am adding hasClassesStrict
[07:39:53] <arschmitz> probably this weekend
[07:40:03] <scott_gonzalez> Ok, just wanted to make sure I had the correct thing in my head as I go through the commits.
[07:40:11] <scott_gonzalez> So I don't ask stupid questions ;-)
[07:40:29] <arschmitz> scott_gonzalez: No problem if you see a place you would prefer strict comment it
[07:40:44] <arschmitz> so i can updagte when i update the module
[07:41:01] <arschmitz> i know most of the stuff in widget_classes.js should be strict
[08:07:43] <scott_gonzalez> Hmm...didn't take notice to the fact that new support comments use Support, not support.
[08:07:53] <scott_gonzalez> It makes sense though.
[08:07:59] <scott_gonzalez> We really need to get this on to the site.
[08:15:07] <scott_gonzalez> arschmitz: These copied tests for deprecated files always get me.
[08:42:55] <arschmitz> lol
[08:43:56] <arschmitz> scott_gonzalez: yeah i did it based on the PR
[08:44:12] <arschmitz> since it seemed like everyone had agreed 
[08:45:11] <scott_gonzalez> Well, you had SUPPORT somewhere.
[08:45:27] <scott_gonzalez> But I was looking at the issue because of IE8.
[10:51:22] <scott_gonzalez> arschmitz: I'm done for this round.
[10:51:36] <scott_gonzalez> I'll do a final pass after the next update and then we should be good to land.
[11:02:47] <arschmitz> scott_gonzalez: awesome will update and let you know
[13:13:34] <gabriel_schulhof> arschmitz: Ping!
[13:13:45] <arschmitz> gabriel_schulhof: Pong!
[13:13:48] <gabriel_schulhof> Hey!
[13:14:34] <gabriel_schulhof> Are we talking our hands completely off count bubbles? Currently, in the case of a count bubble, the bubble gets ui-listview-item-count-bubble and the item containing it (or containing the anchor containing the bubble) gets ui-listview-item-has-count.
[13:15:02] <gabriel_schulhof> So, should I do that in refresh() and have things go through _addClass(), or should we stipulate that it's up to devs to add those classes?
[13:15:10] <gabriel_schulhof> s/talking/taking/
[13:15:30] <arschmitz> if its part of what the widget does why would we stop doing that?
[13:15:52] <gabriel_schulhof> Because it's one less reason to use JS at all.
[13:16:43] <arschmitz> gabriel_schulhof: i don't follow the whole point of the widget is convenience why would we stop doing some of its logic? 
[13:16:59] <arschmitz> i mean thats a feature we would have to discuss it and deprecate it like anything else
[13:19:31] <gabriel_schulhof> Well, it may be worth it, because you have to add ui-listview-item-count-bubble by hand to indicate that the span in question is to act as a count bubble. The only convenience is that the widget then adds ui-listview-item-has-count to the corresponding list item in refresh()
[13:20:06] <arschmitz> the whole way it works seems odd to me
[13:20:12] <gabriel_schulhof> ... so it's not much to ask devs to .closest( "li" ).addClass( "ui-listview-item-has-count" ) when they add ui-listview-item-count-bubble
[13:20:24] <arschmitz> it seems like it should be data-item-count="5" and it should add a count bubble with 5
[13:21:22] <gabriel_schulhof> That would make it less markup-centric and more reliant on JS, but yeah, that too is a valid way to go.
[13:21:45] <arschmitz> gabriel_schulhof: its not like you could not just add it your self it if you wanted
[13:21:48] <gabriel_schulhof> What sucks is that the li needs that ui-listview-item-has-count class ... 
[13:22:21] <gabriel_schulhof> If it didn't need that, you wouldn't need to call refresh() at all.
[13:22:26] <arschmitz> btu the whole point of list view is easy list generating if you want it micro performant don't use the widget 
[13:23:40] <gabriel_schulhof> Hmmm ... when we introduce the idle looping, if we find that it increases performance significantly, we can then add some of these features.
[13:24:33] <gabriel_schulhof> ... though I suspect that idle looping will not increase performance at all - it'll merely increase responsiveness.
[13:25:54] <gabriel_schulhof> So, OK. The addition of ui-listview-item-has-count remains within the scope. ‚úì
