[03:52:26] <doesallmagic> Project jQuery UI - git core build #148: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/148/
[04:13:42] <doesallmagic> Project jQuery UI - 1.6.x core build #86: STILL FAILING in 21 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/86/
[04:29:28] <doesallmagic> Project jQuery UI - 1.7.x core build #85: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/85/
[05:14:44] <doesallmagic> Project jQuery UI - 1.8.x core build #62: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/62/
[06:27:30] <jquicommit> [api.jqueryui.com] jzaefferer created 41 (+2 new commits): http://git.io/bHEzgQ
[06:27:30] <jquicommit> [api.jqueryui.com/41] Add a watch task to grunt file - Jörn Zaefferer
[06:27:30] <jquicommit> [api.jqueryui.com/41] Autocomplete Add example for using source callback, along with a note aobut the escapeRegex method. Fixes #41 - Jörn Zaefferer
[06:28:17] <jquicommit> [api.jqueryui.com] jzaefferer pushed 1 new commit to master: http://git.io/T_mYFg
[06:28:17] <jquicommit> [api.jqueryui.com/master] Add a watch task to grunt file - Jörn Zaefferer
[06:40:55] <jquicommit> [jquery-ui] jzaefferer created easing-comparison (+1 new commit): http://git.io/SMW8cg
[06:40:55] <jquicommit> [jquery-ui/easing-comparison] Effects: Easing comparison demo - Jörn Zaefferer
[06:55:20] <couchand> anybody have an idea why all the jshint tests would be failing for me out of the box?
[06:55:25] <couchand> am i missing some dependency?
[07:29:50] <couchand> well i got this far.  the ajax load for the jshintrc file is failing with a:
[07:29:53] <couchand> "Access to restricted URI denied"  code: "1012"
[07:30:30] <couchand> hmmm... perhaps the issue is loading the files directly rather than serving them?
[07:30:35] <couchand> trying that now.
[07:34:01] <couchand> indeed it appears that was the stumbling block.
[07:34:37] <couchand> for reference - you must be serving the files from a webserver for the JSHint tests to pass
[09:10:31] <_zoggy_> morning
[09:16:01] <_zoggy_> 179 grabs of that fringe ep
[11:12:07] <scott_gonzalez> DaveMethvin: Just found a regression in UI from upgrading to jQuery 1.8.0.
[11:12:15] <scott_gonzalez> Time to bisect...
[11:23:14] <scott_gonzalez> https://github.com/jquery/jquery/commit/05aff402310d7db5d15f96b15071af6aa21a2afc
[11:37:33] <_zoggy_> scott_gonzalez, care to lend a hand at trying to figure out where this bug is at?
[11:37:35] <_zoggy_> test: http://jsfiddle.net/haeVa/ -- bug: http://dl.dropbox.com/u/1187645/TableSorterIssue.png -- In Internet Explorer 9 (IE 9.0.8112.16421 win7 x64): the occasional, random row in the table has an extra blank cell inserted in the second column. In this fiddle see row 87. It is rendering as if I had inserted an extra td element in the row. Small changes in the data lead to wildly different
[11:37:35] <_zoggy_> rows exhibiting this problem (or no rows at all). Renders correctly in Chrome/FF.
[11:38:14] <_zoggy_> if i tried using the gh file but add a '?test' at the end.. the bug magically goes away... http://jsfiddle.net/haeVa/2/
[11:42:03] <scott_gonzalez> _zoggy_: Not sure what might be causing that.
[11:43:08] <_zoggy_> :(
[11:50:04] <scott_gonzalez> I'm making what looks like an innocent change, let's hope this don't blow up for some crazy reason...
[11:51:22] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/pTeImQ
[11:51:22] <jquicommit> [jquery-ui/master] Resizable: Use .insertAfter() instead of .after() to avoid recursively destroying. Fixes #8662 - Infinite loop - new to jQuery UI 1.9.0. - Scott González
[11:51:55] <DaveMethvin> scott_gonzalez: so there was a bug in.after()?
[11:52:06] <scott_gonzalez> I'm not really sure what was going on.
[11:52:14] <DaveMethvin> what did the code look like?
[11:52:20] <scott_gonzalez> https://github.com/jquery/jquery-ui/commit/025266e00270d155f45550b6838ddd6f4a44470b?w=1
[11:52:41] <scott_gonzalez> I feel like those two should be equivalent.
[11:52:54] <scott_gonzalez> But the former causes an infinite loop.
[11:52:56] <DaveMethvin> is element in the doc?
[11:53:01] <scott_gonzalez> yes
[11:53:10] <scott_gonzalez> It's a direct child of the wrapper.
[11:53:28] <scott_gonzalez> Sorry, originalElement is a direct child of element (wrapper)
[11:53:40] <scott_gonzalez> And they're in the doc.
[11:53:40] <DaveMethvin> and wrapper is in the doc i guess
[11:54:00] <scott_gonzalez> They're in the process of being removed.
[11:54:05] <scott_gonzalez> So many not?
[11:54:16] <DaveMethvin> i think this maybe some result of the "detached" behavior
[11:54:19] <scott_gonzalez> The bug occurs on .remove()
[11:54:23] <DaveMethvin> which i would love to eliminate
[11:54:59] <scott_gonzalez> It's kind of consfusing because the bug only exists in 1.9.0, not 1.8.24.
[11:55:05] <scott_gonzalez> But we didn't change resizable.
[11:55:36] <scott_gonzalez> But while I was debugging this I noticed that even before the infinite loop existed, there was a lot of recursion.
[11:55:55] <scott_gonzalez> Resizable's _destroy() would be called 600+ times before the widget actually destroyed.
[11:56:12] <DaveMethvin> so destroy removes this.element from the doc
[11:56:33] <scott_gonzalez> Yes.
[11:56:42] <scott_gonzalez> In this case, this.element is a generated wrapper div.
[11:56:49] <scott_gonzalez> Because this.originalElement is a textarea.
[11:57:00] <scott_gonzalez> And we can't append the resize handles to the textarea.
[11:57:25] <scott_gonzalez> Wrapped resizables are definitely a bit ghetto.
[11:57:33] <scott_gonzalez> They copy the widget instance data to the wrapper.
[11:57:35] <DaveMethvin> at this point I'm pretty damn set on having .after() and .before() eliminate their stupid detached-element behavior
[11:58:04] <DaveMethvin> it makes their behavior very hard to understand
[11:58:10] <scott_gonzalez> This seems to be in the second portion of .after() though.
[11:58:24] <scott_gonzalez> Inisde the `if ( this.arguments )`
[11:58:38] <scott_gonzalez> At least, that's what changed in the commit where the infinite loop started.
[11:59:08] <doesallmagic> Project jQuery UI build #700: STILL FAILING in 7 min 50 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/700/
[11:59:08] <doesallmagic> Scott González: Resizable: Use .insertAfter() instead of .after() to avoid recursively destroying. Fixes #8662 - Infinite loop - new to jQuery UI 1.9.0.
[12:00:12] <scott_gonzalez> The thing that's surprising to me is that `.after()` and `.insertAfter()` have such different behavior.
[12:00:37] <scott_gonzalez> Shouldn't one just delegte to the other?
[12:00:55] <DaveMethvin> they do delegate
[12:01:00] <scott_gonzalez> Oh, insertAfter does, huh?
[12:01:03] <DaveMethvin> however there are some long standing bugs
[12:01:15] <DaveMethvin> related to the fact that jQuery.merge() clobbers its first arg
[12:01:22] <DaveMethvin> they'll be fixed in 1.9
[12:01:36] <DaveMethvin> and also the fact that some methods CONDITIONALLY pushStack
[12:01:39] <DaveMethvin> depending on their args
[12:01:44] <DaveMethvin> which i think SUCKS
[12:01:47] <scott_gonzalez> Yeah, that's bd.
[12:01:50] <scott_gonzalez> *bad
[12:02:27] <scott_gonzalez> That's actually worse than plugins that don't have a return value.
[12:06:31] <scott_gonzalez> DaveMethvin: Did snover mention a timeline for Dojo 2?
[12:06:40] <DaveMethvin> not that I recall
[12:07:21] <scott_gonzalez> Oh, another good collabortion point would be Globalize.
[12:07:50] <scott_gonzalez> I wonder how much back compat they're willing to break in the interest of better APIs.
[12:08:01] <DaveMethvin> good q
[12:08:19] <DaveMethvin> i feel like we're breaking about as much as we can on our side
[12:09:20] <scott_gonzalez> BREAK ALL THE THINGS
[12:09:26] <DaveMethvin> that's my motto
[12:09:35] <scott_gonzalez> We're pretty good at it too.
[12:09:39] <DaveMethvin> damn right
[12:12:16] <DaveMethvin> scott_gonzalez: i see the prob now: return this.pushStack( jQuery.merge( this, set ), "after", this.selector );
[12:12:29] <DaveMethvin> and yes, it's the merge
[12:12:44] <DaveMethvin> it is clobbering the current set (this) before doing the pushstack
[12:13:25] <DaveMethvin> whereas the before is fine because it uses its own copy to merge into:  return this.pushStack( jQuery.merge( set, this ), "before", this.selector );
[12:14:18] <DaveMethvin> hmm, now i need to figure out a test case from that resizable code
[12:14:33] <scott_gonzalez> :-)
[12:14:38] <DaveMethvin> we  have pretty much NO unit tests for this code
[12:14:47] <DaveMethvin> has'
[12:14:53] <DaveMethvin> nt been touched in  years
[12:16:51] <scott_gonzalez> Same for resizable :-P
[12:17:03] <scott_gonzalez> It's a match made in heaven.
[12:17:17] <DaveMethvin> right, we'll touch the code just enough to break it
[12:18:08] <scott_gonzalez> That's the way to do it. If you make large changes then it's an obvious suspect when things break down the line.
[12:18:28] <scott_gonzalez> You gotta stay under the radar with your breaking changes.
[12:18:58] <DaveMethvin> stealth mode commits
[12:19:18] <DaveMethvin> "general cleanup"
[12:20:44] <scott_gonzalez> "whitespace" :-P
[12:20:59] <DaveMethvin> "style sweep"
[12:21:23] <scott_gonzalez> "Gibson transform"
[12:21:25] <scott_gonzalez> oh wait
[12:21:29] <DaveMethvin> lol ouch!
[12:21:55] <DaveMethvin> atm none of our before/after/replaceWith tests ensure the original set was unmolested
[12:21:58] <scott_gonzalez> This actually wasn't Gibson.
[12:22:18] <DaveMethvin> they're just seeing if the doc got changed
[12:22:20] <scott_gonzalez> I hope you include the word molestation in your commit.
[12:22:42] <DaveMethvin> naw, I'll call it the "Penn State treatment" :P
[12:22:53] <scott_gonzalez> ouch
[12:23:09] <DaveMethvin> speaking of penna, did your basement ever dry out?
[12:23:46] <scott_gonzalez> Yup, now we've got the first floor...sorto f
[12:23:52] <DaveMethvin> you know, a roof might help there, not that i'm an expert or anything
[12:24:01] <scott_gonzalez> No roof yet.
[12:26:05] <scott_gonzalez> http://sphotos-a.xx.fbcdn.net/hphotos-ash3/69066_610875429340_1932842911_n.jpg
[12:26:25] <DaveMethvin> looking more complete at least
[12:27:51] <scott_gonzalez> http://sphotos-b.xx.fbcdn.net/hphotos-prn1/66512_610875479240_1460646037_n.jpg
[12:28:25] <DaveMethvin> $("#floor2").insertAfter("#floor1")
[12:28:46] <DaveMethvin> so why is the house wrap up like that and the last foot not covered?
[12:29:03] <scott_gonzalez> Yeah, just don't do $( "#floor1" ).after( "#floor2" ) ;-)
[12:29:21] <DaveMethvin> they'll never get the house finished
[12:29:32] <DaveMethvin> "sorry we hit an infinte loop"
[12:29:57] <scott_gonzalez> I'm not sure. I'm guessing maybe so they can run the ducts easier?
[12:30:17] <scott_gonzalez> Because it's more than just the wrap, there's no actual wall there.
[12:30:34] <DaveMethvin> yeah, maybe so and they have a rim joist missing as well so maybe it's just making it easier to get stuff in/out for now
[12:47:49] <_zoggy_> scott_gonzalez: http://hsmoore.com/blog/ie9-adding-empty-table-cells-in-large-table/
[12:48:33] <scott_gonzalez> WTF?
[12:49:10] <scott_gonzalez> I've never heard of that before. That's good to know.
[12:54:57] <ryanneufeld> scott_gonzalez: could they have left the wrap up like that because they haven't cut the strips of plywood to clad that part of the wall? Or perhaps it's for inspections?
[12:56:07] <ryanneufeld> _zoggy_: I am also wtf on that one.
[12:56:08] <DaveMethvin> _zoggy_: wow, i'd never heard of that bug
[12:56:37] <DaveMethvin> ryanneufeld: yeah, that's definitely why the wrap is pinned up but i didn't know why they hadn't clad it yet
[12:57:04] <ryanneufeld> DaveMethvin: do you live in an earthquake area?
[12:57:05] <DaveMethvin> perhaps to allow getting stuff in easier through the walls, or getting stuff (leaves, water) out of the house by sweeping it
[12:57:13] <DaveMethvin> no, Baltimer
[12:57:17] <DaveMethvin> Baltimore
[12:57:19] <DaveMethvin> even
[12:58:30] <ryanneufeld> so tropical storms that sort of thing isn't an issue?
[12:59:07] <DaveMethvin> i think scott gave up on getting water out of the basement and the kids are just going to use it as a swimmin hole
[12:59:07] <ryanneufeld> In vancouver I could see them doing that so an inspector could see that the walls were properly secured to the foundation.
[12:59:23] <DaveMethvin> oh ryanneufeld maybe that's it
[12:59:38] <DaveMethvin> gotta leave it visible for an inspectino
[12:59:54] <ryanneufeld> usually when you see builders do odd 'unfinished' stuff that's why
[13:00:03] <ryanneufeld> but sometimes they're just out of sync
[13:00:18] <ryanneufeld> could be that they ran out of materials, but my first assumption is inspection
[13:00:26] <ryanneufeld> since it's a multi storey house
[13:00:43] <ryanneufeld> (I wasn't always a programmer)
[13:06:03] <ryanneufeld> DaveMethvin: Would there be any interest in a group picture of everyone at the summit?
[13:06:35] <DaveMethvin> yeah! we try to get one at every conf, i think we missed one or two
[13:07:00] <ryanneufeld> k, ajpiano asked me to bring my camera stuffs, so I'll make sure I'm prepared for that too :)
[13:07:07] <DaveMethvin> awesome
[13:07:14] <ryanneufeld> is ben coming? I know he's a photog as well
[13:07:28] <DaveMethvin> ben should be there
[13:08:35] <ryanneufeld> cool, bring some toys then. I can do video too. But the audio could be an issue
[13:40:12] <_zoggy_> hehe
[14:32:52] <jquicommit> [jquery-ui] jzaefferer created spinner-stateless (+1 new commit): http://git.io/CwAuqA
[14:32:52] <jquicommit> [jquery-ui/spinner-stateless] Spinner: Remove ui-state-default and ui-state-active from spinner, along with the background:none TR override. Fixes #8654 - Spinner background-color - Jörn Zaefferer
[14:35:31] <jquicommit> [jquery-ui] jzaefferer force-pushed spinner-stateless from de3b581 to 60cd500: http://git.io/FNYToA
[14:35:31] <jquicommit> [jquery-ui/spinner-stateless] Spinner: Remove ui-state-default and ui-state-hover from spinner, along with the background:none TR override. Fixes #8654 - Spinner background-color - Jörn Zaefferer
