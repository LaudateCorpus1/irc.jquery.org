[04:30:51] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/V8O38A
[04:30:51] <jquicommit> 13globalize/06fix-265-message-format 147ad3c17 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[04:32:34] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/8bZIcw
[04:32:34] <jquicommit> 13globalize/06fix-265-message-format 14adeee9d 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[04:41:02] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/POhjBg
[04:41:02] <jquicommit> 13globalize/06fix-265-message-format 14a1e819d 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[04:45:02] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/LXADjA
[04:45:02] <jquicommit> 13globalize/06fix-265-message-format 1425816ef 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[04:50:58] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/JpFgNQ
[04:50:58] <jquicommit> 13globalize/06fix-265-message-format 14f182ef5 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[04:54:48] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-265-message-format from 14f182ef5 to 14309ea0d: 02http://git.io/La103g
[04:54:48] <jquicommit> 13globalize/06fix-265-message-format 141a71ed1 15Rafael Xavier de Souza: Example: Minor fix examples/amd-bower/.bower...
[04:54:48] <jquicommit> 13globalize/06fix-265-message-format 14309ea0d 15Rafael Xavier de Souza: Message: Support ICU MessageFormat using slexaxton/messageformat.js
[05:02:17] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/ZylwsQ
[05:02:17] <jquicommit> 13globalize/06fix-265-message-format 141790ed5 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[05:06:23] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/6TzrSg
[05:06:23] <jquicommit> 13globalize/06fix-265-message-format 14e627a6b 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[05:15:41] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/UWNCZw
[05:15:41] <jquicommit> 13globalize/06fix-265-message-format 14b16fb8d 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[08:30:07] <arschmitz> gabriel_schulhof: Ping!
[10:13:39] <gabriel_schulhof> arschmitz: What'
[10:13:42] <gabriel_schulhof> s  up?
[10:14:09] <arschmitz> i was looking for thoughts on what to do about links.js
[10:14:21] <arschmitz> and auto init
[10:14:30] <arschmitz> but i think i figured it out
[10:15:50] <arschmitz> gabriel_schulhof: because its specific to popup
[10:16:08] <arschmitz> gabriel_schulhof: so it really has no business being part of the new enhancer module
[10:17:11] <gabriel_schulhof> Yeah, for sure.
[10:17:39] <arschmitz> gabriel_schulhof: but i think i figured out the best way
[10:18:34] <arschmitz> gabriel_schulhof: something along the lins of this at the top of popup.js https://gist.github.com/arschmitz/2d418be3940b9ca738b4
[10:19:23] <gabriel_schulhof> arschmitz: Actually, this should go into popup's create.
[10:19:38] <gabriel_schulhof> arschmitz: It should reach out to all the links that can open it, and add ARIA attributes to them.
[10:19:58] <arschmitz> no then what happenes if a new link is added
[10:20:20] <arschmitz> create is not good enough every time enhancer is called it needs to look for new links in the content
[10:21:27] <gabriel_schulhof> Well, the enhancer only runs when a new page is loaded via Ajax, so it's a better solution than what I have suggested, but it still does not address the problem of a link that is injected into an already enhanced page.
[10:21:32] <gabriel_schulhof> I guess there's no good way.
[10:21:34] <arschmitz> thats not true
[10:21:47] <gabriel_schulhof> I mean, you'd have to call .enhance() on it.
[10:21:50] <arschmitz> its ran any time someone calls $().enahnce
[10:22:18] <arschmitz> right so people are always either responsible for using page init or calling an enhance method of some sort or doing it them selves
[10:22:28] <gabriel_schulhof> Yeah, OK. I'll buy that for a â‚¬ :)
[10:22:29] <arschmitz> thats just life lol
[10:23:01] <arschmitz> we dont watch the dom for changes whcih is the only other way
[10:24:08] <gabriel_schulhof> arschmitz: One day we will have mutation observers. Today is not that day.
[10:24:08] <arschmitz> this is also how its done already
[10:24:28] <arschmitz> just moving it into popup where it should be
[10:24:51] <arschmitz> enhancer cant have anything at all mobile specific
[10:25:15] <arschmitz> gabriel_schulhof: which brings up something else i have been struggling with
[10:25:16] <gabriel_schulhof> arschmitz: OK.
[10:25:34] <arschmitz> using the ui namespace for data attributes
[10:25:39] <arschmitz> and how we do backcompat
[10:25:46] <gabriel_schulhof> We can't.
[10:25:56] <arschmitz> scott_gonzalez: and i have talked about it and it seems the only sane thing is to check both
[10:26:01] <arschmitz> gabriel_schulhof: yes we can
[10:26:06] <arschmitz> first we check ui
[10:26:10] <arschmitz> if it exists use it
[10:26:14] <arschmitz> then check nothing
[10:26:23] <gabriel_schulhof> What about in the CSS?
[10:26:26] <arschmitz> or rather check $.mobile.ns
[10:26:39] <arschmitz> gabriel_schulhof: we dont use it in css
[10:26:44] <arschmitz> well we use it in one rule
[10:26:48] <gabriel_schulhof> Yeah.
[10:26:55] <arschmitz> but thats hard coded
[10:27:02] <arschmitz> and has never used $.mobile.ns
[10:27:05] <gabriel_schulhof> arschmitz: Actually, yeah, and it always has been.
[10:27:16] <arschmitz> we documented you have to change it your self
[10:27:52] <arschmitz> which is still fine we just do [data-role=page],[data-ui-role=page]
[10:28:03] <gabriel_schulhof> ... and since IIRC we've eliminated the performance penalty of retrieving data attributes, it should not be that expensive retrieving twice as many, right?
[10:28:14] <arschmitz> not true at all
[10:28:24] <arschmitz> these are not .data()
[10:28:29] <arschmitz> they are attributes
[10:28:48] <arschmitz> and we use it via selector
[10:29:08] <gabriel_schulhof> Yeah, I thought we had some recipe for vastly improving attribute retrieval in _getCreateOptions ...
[10:29:09] <arschmitz> gabriel_schulhof: i have perf data just a sec
[10:29:19] <arschmitz> no thats data
[10:29:30] <arschmitz> in get create options we are getting data not using selectors
[10:29:42] <arschmitz> very different
[10:29:48] <gabriel_schulhof> Yeah, so we're going via core, which seems to be waaay faster for some reason, right?
[10:30:12] <arschmitz> this is not an issue in get create options
[10:31:03] <arschmitz> $( "[data-" + $.mobile.ns + "role='page']" )
[10:31:06] <arschmitz> or similar
[10:31:13] <gabriel_schulhof> Isn't it? Right now, we need to retrieve data-abc="def" in _getCreateOptions, whereas in 1.5 we'll bee to retrieve both data-abc="def" and also check data-ui-abc="def", right?
[10:31:31] <arschmitz> gabriel_schulhof: not an issue because we dont do it that way any more
[10:31:37] <arschmitz> we do $( target ).data()
[10:31:42] <gabriel_schulhof> Yes, exactly.
[10:31:46] <arschmitz> this is only an issue for selectors
[10:31:47] <gabriel_schulhof> ... and that results in a hash.
[10:31:59] <gabriel_schulhof> Oh, OK.
[10:32:04] <gabriel_schulhof> You're talking about selectors.
[10:32:17] <arschmitz> thats what i said 
[10:32:24] <gabriel_schulhof> Those will be bad, because now we'll have two everywhere, and that makes it slow.
[10:32:32] <gabriel_schulhof> I get it now.
[10:32:46] <arschmitz> http://jsperf.com/dom-attributes-raw
[10:36:10] <gabriel_schulhof> Our case is much more expensive still, because we're talking about evaluating $( "[data-abc='def']" ) (the situation now) and $( "[data-abc='def'],[data-ui-abc='def']" ) (the situation in 1.5).
[10:36:25] <gabriel_schulhof> So, the selector itself is much more complex.
[10:36:52] <arschmitz> no what we talked about was
[10:36:57] <arschmitz> doing just ui first
[10:37:09] <arschmitz> if length is not === 0 stop there
[10:37:23] <arschmitz> if length is 0 check $.mobile.ns
[10:37:49] <gabriel_schulhof> Yeah, that means that people will have a ... ahem ... strong ... incentive to move all their data-attributes to data-ui-* ...
[10:38:05] <arschmitz> well considdering they have no choice for 1.6
[10:38:10] <gabriel_schulhof> Otherwise performance nosedives.
[10:38:23] <arschmitz> having a name space will be completely deprecated
[10:38:30] <arschmitz> it will me ui
[10:38:30] <gabriel_schulhof> Yeah.
[10:38:49] <arschmitz> so basicly change and you get no penalty
[10:38:57] <arschmitz> dont change and it will hurt
[10:38:58] <gabriel_schulhof> Yeah, so, we're basically saying "Sure, there's backwards compatibility, but you'd be a fool to rely on it" :)
[10:39:21] <arschmitz> also remember the numbers in perspective
[10:39:31] <arschmitz> how many of these do you expect to be selecting per second
[10:39:57] <gabriel_schulhof> Yeah, after all, the ops in that perf report is in the millions.
[10:40:14] <gabriel_schulhof> Still, I'm thinking startup. Startup is always bad.
[10:40:32] <gabriel_schulhof> But hey, we have a way out of any performance headaches. Just add "ui-"
[10:42:25] <gabriel_schulhof> arschmitz: I'll assign https://github.com/jquery/jquery-mobile/issues/5945 to myself.
[10:43:22] <gabriel_schulhof> arschmitz: I'm already working on splitting up events/touch.js ... I've managed to split it into scroll.js, tap.js, and swipe.js while keeping all tests green.
[10:46:43] <arschmitz> gabriel_schulhof: its already done in auto init im working on
[10:47:01] <arschmitz> hence how i had a gist of it already
[10:47:04] <gabriel_schulhof> arschmitz: Oh, OK. In that case, I'll give it to you.
[10:47:22] <gabriel_schulhof> arschmitz: Gotta make sure that $.fn.enhance is available though.
[10:47:42] <arschmitz> exactly why i need to do it as part of that
[10:48:39] <gabriel_schulhof> arschmitz: I guess you could put that whole gist in a if ( $.fn.enhance ) { /* the gist */ }
[10:48:50] <arschmitz> basicly
[10:48:58] <gabriel_schulhof> arschmitz: But that's not good.
[10:49:14] <gabriel_schulhof> ... because if the enhancer is added later, it will not work.
[10:49:43] <gabriel_schulhof> Maybe we can rely on _init()
[10:49:51] <gabriel_schulhof> Put the code inside popup's _init()
[10:50:04] <arschmitz> it cant go in the widget
[10:50:05] <gabriel_schulhof> The factory calls _init() on widgets that are already instantiated.
[10:50:26] <arschmitz> because then its in every inctance 
[10:50:28] <gabriel_schulhof> So if you call .enhance() on a snippet that is already enhanced, it will pick up new links.
[10:50:53] <gabriel_schulhof> Well, yeah, because different instances look for different links.
[10:51:25] <gabriel_schulhof> You have to set aria-expanded to true/false for your own links anyway. That's already in popup now.
[10:52:30] <gabriel_schulhof> I see how it's a perf penalty though :/
[10:52:34] <arschmitz> links is not specific to a given popup
[10:53:06] <gabriel_schulhof> No, but the code for updating the aria-expanded attribute is. Dang.
[10:53:40] <arschmitz> this needs to be outside the popup or it will run once for every popup instance every time enhance is caled
[10:54:02] <gabriel_schulhof> *sigh* ... yeah ...
[10:55:49] <gabriel_schulhof> *sigh* ... OK, here's where it can fail: Since the enhancer and popup are independent of each other, care must be taken that popup load before the enhancer, otherwise the shim will not work.
[10:56:18] <gabriel_schulhof> Actually, wait! enhancer should be written such that if $.fn.enhance() is already present, then the enhancer becomes a shim on the existing enhancer.
[10:56:25] <gabriel_schulhof> Then the order doesn't matter.
[10:56:39] <gabriel_schulhof> So, this kinda turns into a poor man's extension mechanism.
[10:56:50] <gabriel_schulhof> ... where the order in which extensions are defined doesn't matter.
[10:58:41] <gabriel_schulhof> So, if the enhancer defines itself as $.fn.enhance = ( function( orig ) { /* enhancer */ return ( orig ? orig.apply( this, arguments ) : /* whatever enhancer normally returns */ ); } )( $.fn.enhancer ); and so does the portion inside popup, then, whichever order they may end up loading, both will work.
[10:59:46] <gabriel_schulhof> This is especially true since the return value in this case doesn't really matter.
[11:00:25] <arschmitz> well it needs to always return this
[11:00:47] <gabriel_schulhof> arschmitz: OK, then it's settled.
[11:01:00] <gabriel_schulhof> arschmitz: The popup portion returns this, and so does the enhancer proper.
[11:01:05] <gabriel_schulhof> arschmitz: OK, let's meet.
[11:16:01] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof reopened issue #7862: Input Text Into Popups Failing for JQM 1.4.5 on Android 4.3 02http://git.io/hSzvZg
