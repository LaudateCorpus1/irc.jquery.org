[02:14:36] <doesallmagic> Project jQuery UI - git core build #356: STILL FAILING in 18 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/356/
[02:14:47] <doesallmagic> Project jQuery UI 1-9-stable - git core build #143: STILL FAILING in 10 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/143/
[02:46:26] <doesallmagic> Project jQuery UI - 1.6.x core build #251: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/251/
[03:10:18] <codacoder> Hello world?
[03:16:10] <doesallmagic> Project jQuery UI - 1.7.x core build #253: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/253/
[03:24:05] <codacoder> anyone care to look at an issue?
[03:36:48] <codacoder> http://forum.jquery.com/topic/resizable-rendering-failure-in-firefox
[03:46:12] <doesallmagic> Project jQuery UI - 1.8.x core build #228: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/228/
[09:44:46] <agcolom> scott_gonzalez: hi!
[09:50:47] <scott_gonzalez> hey agcolom
[09:51:14] <agcolom> hey, I got rid of 16 iframes on the button page!
[09:52:18] <agcolom> and no examples were removed... just merged! Can you see an improvement when loading the page?
[09:53:06] <scott_gonzalez> Let me check.
[09:55:11] <agcolom> I can still probably optimise a bit more... but I'm starting to feel a bit better about that page (I can stay at the entrance of the cave now ;-) )
[09:56:03] <scott_gonzalez> I think it dropped a bit.
[09:56:13] <scott_gonzalez> I still have 5 seconds on not being able to use the page though.
[09:56:22] <agcolom> dropped? (perf dropped ?)
[09:56:32] <scott_gonzalez> page load time dropped
[09:56:53] <agcolom> ok... yes, I still have 31 iframes!
[09:57:52] <agcolom> don't scream, I'm probably about to ask a stupid/crazy question...
[09:58:15] <agcolom> can an iframe use resources in another iframe on the same browser page?
[10:07:54] <scott_gonzalez> no
[10:08:20] <scott_gonzalez> Well, it depends what you mean.
[10:08:33] <scott_gonzalez> You can do `otherIframeWindowReference.someProp`
[10:08:51] <scott_gonzalez> Assuming you don't have CORS limitations (which you wouldn't here).
[10:09:44] <agcolom> it was just to see whether we could avoid loading JQM 31 times...
[10:10:39] <scott_gonzalez> Your iframes would be crazy.
[10:10:52] <agcolom> ok. 
[10:10:56] <scott_gonzalez> And I'm not sure jQuery Mobile would support it.
[10:11:22] <agcolom> I'll see whether there are more examples that I can merge... I'm sure there's still room for optimization...
[10:11:41] <agcolom> (and I'll look at doing that for other pages too...)
[10:14:06] <agcolom> btw, do we have some sort of tracking to see whether these pages are being accessed? 
[10:29:13] <scott_gonzalez> This guy must be smoking crack: https://twitter.com/lucasmciruzzi/status/317327076585783296
[10:29:14] <b-ot> scott_gonzalez: @lucasmciruzzi: @scott_gonzalez You're talking about JS Widgets, that means structure/style edited from Javascript. That is messing around with layers.
[10:37:39] <rxaviers> lol
[10:49:11] <scott_gonzalez> OMG, this guy is such a troll.
[10:49:22] <scott_gonzalez> "I mean, things like "ui-corner-top" is ridiculous. Do you ever think about screen readers at all?"
[10:49:28] <scott_gonzalez> How are they even related?
[11:01:01] <lucasmciruzzi> hi there! I was invited here to get the explanation behind the jQueryUI behavior (things like ui-corner-top)
[11:06:24] <scott_gonzalez> lucasmciruzzi: Hey
[11:06:43] <scott_gonzalez> So, before we get into ui-corner-top, let's start with the basic conept of separation of concerns.
[11:06:51] <scott_gonzalez> We have a very clear separation between JS and CSS.
[11:06:58] <scott_gonzalez> All sytles are handled by classes.
[11:07:09] <scott_gonzalez> And JS only applies styles via adding/removing classes.
[11:07:19] <scott_gonzalez> The only exception is position/dimension.
[11:07:29] <scott_gonzalez> For example, placing the suggestion menu before the text field for autocomplete.
[11:07:34] <scott_gonzalez> Or centering a dialog in the window.
[11:07:41] <scott_gonzalez> That obviously needs to happen in JS.
[11:07:47] <scott_gonzalez> And isn't really style-related.
[11:08:19] <scott_gonzalez> s/menu before/menu below/
[11:08:52] <scott_gonzalez> As a general concept, do you agree with that separation?
[11:09:47] <lucasmciruzzi> Yep, that is was I was saying when I tweet "unless they are strictly function related". What I don't get is the meaning of setting certain classes from JS when they must be in the structure.
[11:10:16] <scott_gonzalez> What do you mean "when they must be in the structure"?
[11:10:46] <scott_gonzalez> Also, there's really nothing that's "strictly function related" when it comes to JS widget classes.
[11:11:05] <scott_gonzalez> Our vocabulary is extremely limited by HTML.
[11:11:20] <lucasmciruzzi> The ones that are strictly style related, must be in the HTML (structure).
[11:11:31] <lucasmciruzzi> I mean the classes must be there before the JS load.
[11:11:37] <scott_gonzalez> So the only things that are strictly style related are ui-corner-*
[11:11:51] <scott_gonzalez> No, in fact in many cases they shouldn't exist befor the JS loads.
[11:11:54] <lucasmciruzzi> UI corners, gradients, etc.
[11:12:05] <lucasmciruzzi> why not?
[11:12:08] <scott_gonzalez> We most certainly do not have classes for gradients.
[11:12:12] <scott_gonzalez> Take tabs for example.
[11:12:34] <scott_gonzalez> Before you call .tabs(), you shouldn't have the elements styled as if they are tabs.
[11:13:14] <scott_gonzalez> There are "layers" phases a page goes through.
[11:13:32] <scott_gonzalez> HTML - no CSS, no JS. Your page should be built with sane semantics so that this works.
[11:13:50] <scott_gonzalez> HTML + CSS - no JS, your page should look nicer, but there is no functionality enhancement.
[11:14:33] <scott_gonzalez> HTML + CSS + JS (+ JS-CSS) - Functionality is enhanced and styles are updated to match the enhanced functionality.
[11:15:09] <lucasmciruzzi> why not? I mean, if they are tabs, they must look like tabs from the start.
[11:15:09] <scott_gonzalez> They are not tabs until the JS has run.
[11:15:09] <scott_gonzalez> Prior to that, they're just plain old links and content.
[11:15:20] <scott_gonzalez> Imagine if you loaded a page and the JS failed and you saw styled tabs.
[11:15:34] <lucasmciruzzi> HTML - no CSS, no JS. Links and content.
[11:16:03] <lucasmciruzzi> HTML + CSS. No JS. They now look like tabs, but they still don't work.
[11:16:34] <lucasmciruzzi> HTML + CSS + JS. Tabs with functionality like tabs.
[11:16:34] <scott_gonzalez> That is what we avoid.
[11:16:34] <scott_gonzalez> The middle step should never occur.
[11:16:34] <scott_gonzalez> And it never does with jQuery UI.
[11:16:35] <scott_gonzalez> Unless you, as the author, manually add the classes.
[11:17:30] <lucasmciruzzi> But if the only class you have is "tabs" in the container, and that container and his childs styled from CSS, that is not a problem.
[11:19:02] <scott_gonzalez> I don't understand what you're saying.
[11:19:14] <scott_gonzalez> There is necessarily more than just a single class.
[11:19:23] <scott_gonzalez> And even if there was a single class, adding that when the JS hasn't run is wrong.
[11:19:32] <lucasmciruzzi> Is not a problem to add classes manually as an author, if the classes are simple.
[11:19:34] <scott_gonzalez> Assuming you care about your site ever working without JS.
[11:20:01] <scott_gonzalez> It's not about whether it's easy or hard to add the classes.
[11:20:08] <scott_gonzalez> If you care about progressive enhancement, it's wrong to add them.
[11:21:08] <lucasmciruzzi> I don't understand now. Progressive enhancement is not a problem if you have the layers separated.
[11:21:08] <scott_gonzalez> There's a reason people use .js and .no_js classes
[11:21:24] <scott_gonzalez> lucasmciruzzi: It most certainly is a problem because you're unseparating them.
[11:21:48] <scott_gonzalez> As I said, there HTML, HTML+CSS, HTML+CSS+JS+CSS
[11:22:04] <scott_gonzalez> You CANNOT style something to represent functionality that doens't exist.
[11:22:17] <scott_gonzalez> Which is exactly what you're doing if your'e styling the unenhanced content as if it were enhanced.
[11:23:16] <scott_gonzalez> Here's a clearer example:
[11:23:28] <scott_gonzalez> Let's say you decide to generate the content for a spinner.
[11:23:38] <scott_gonzalez> And your page loads showing up and down arrows next to the text field.
[11:23:43] <scott_gonzalez> But the JS hasn't run.
[11:23:47] <scott_gonzalez> That's horrible.
[11:25:01] <lucasmciruzzi> Spinners are easy to make, you just set an element with the class ".spin" or something like that, and in the CSS you add the "transform" for spinning.
[11:25:21] <scott_gonzalez> You clearly don't use jQuery UI.
[11:25:47] <scott_gonzalez> spinner = <input type="number">
[11:25:59] <scott_gonzalez> http://view.jqueryui.com/master/demos/spinner/default.html
[11:27:05] <lucasmciruzzi> ok ok, I just confused it with the ajax animation for loading. But for that is a input type.
[11:27:24] <lucasmciruzzi> *an
[11:28:37] <lucasmciruzzi> HTML5 solve that kind of things. Is like "required" attribute.
[11:28:48] <scott_gonzalez> You cannot rely on HTML5.
[11:28:59] <scott_gonzalez> First of all, HTML5 doesn't exist everywhere.
[11:29:04] <lucasmciruzzi> yet
[11:29:05] <scott_gonzalez> Even if it did, it's a shitty solution.
[11:29:11] <lucasmciruzzi> why?
[11:29:12] <scott_gonzalez> It's not the future.
[11:29:19] <scott_gonzalez> Because expanding the language forever is a horrible idea.
[11:29:25] <scott_gonzalez> And it's super limiting.
[11:29:35] <scott_gonzalez> Even the W3C says JS is the answer.
[11:30:18] <scott_gonzalez> Have you seen http://www.w3.org/TR/2012/WD-components-intro-20120522/ ?
[11:33:52] <lucasmciruzzi> Nope. HTML templates?
[11:35:47] <scott_gonzalez> Not just template.
[11:35:52] <scott_gonzalez> Custom elements.
[11:35:58] <scott_gonzalez> Built with HTML + JS + CSS.
[11:36:06] <scott_gonzalez> All packaged together and exposed as new elements.
[11:37:50] <lucasmciruzzi> Nice. So, why use things like "required" are "shitty solutions"?
[11:38:27] <scott_gonzalez> required isn't shitty, because it's very basic.
[11:38:35] <scott_gonzalez> <input type="number"> is super limited
[11:38:41] <scott_gonzalez> <input type="date"> is super limited
[11:38:50] <scott_gonzalez> You get the most basic functionality and that's it.
[11:38:58] <scott_gonzalez> You can hook into them and add features.
[11:39:17] <scott_gonzalez> And if you think the W3C is going to continue to add features to those, you're kidding yourself.
[11:39:33] <scott_gonzalez> Native HTML components will ALWAYS be less flexible than JS widgets.
[11:40:08] <scott_gonzalez> HTML is only concerned with solving the most common problems and expecting JS to solve the remaining problems.
[11:41:09] <scott_gonzalez> Until Web Components are widely supported, we can't even build on top of <input type="date>
[11:41:22] <scott_gonzalez> That's how shitty of a solution HTML5 is for custom widgets.
[11:41:59] <scott_gonzalez> The official stance is: If you want to customize the behavior, use web componetns.
[11:42:00] <lucasmciruzzi> But, in the future they can keep that as a base, and add events related to that type of input (like "onError" when they not type a number, or "onDateSet" when they select a date), and use a standarized structure for the representation, to let the authors style the element.
[11:42:40] <scott_gonzalez> I'm telling you, straight from Hixie's mouth, the in the future, they will tell you to write JS and replace the native solution.
[11:44:04] <scott_gonzalez> BTW, it's really hard to style something that isn't standardized.
[11:44:21] <scott_gonzalez> W3C isn't going to spec the layout of a datepicker.
[11:44:57] <scott_gonzalez> Even if they did, the only way to really customize it (not just change colors, fonts, etc) would be generting content via CSS.
[11:45:07] <scott_gonzalez> And you have to admit that would be insane.
[11:45:14] <scott_gonzalez> And a horrible separation of layers.
[11:45:40] <scott_gonzalez> The answer they will give, and the correct answer, is to just build it with JS.
[11:46:38] <lucasmciruzzi> But, for common things like date, number, email is nice to have elements in the HTML, for behavior in the virtual keyboard of mobile devices for example, or for screen readers.
[11:49:13] <lucasmciruzzi> Besides if they standarize the structure of the date picker (that is almost the same for every date picker out there), setting it from CSS will not be so hard. Besides if you want other functionality that is not in HTML, simply code another one and use the regular "text" field.
[11:49:58] <scott_gonzalez> ZOMG, this is what I've been saying.
[11:50:07] <scott_gonzalez> HTML5 will never solve the problems that jQuery UI solves.
[11:50:19] <scott_gonzalez> Therefore, the problems can ONLY be solved in JS.
[11:50:36] <scott_gonzalez> Also "use the regular text field" sucks.
[11:50:39] <scott_gonzalez> You lose all semantics.
[11:50:56] <scott_gonzalez> I want <input type="date" noui>
[11:51:00] <scott_gonzalez> And web components will give us that.
[11:51:26] <scott_gonzalez> By just using a custom element to replace <input type="date">
[11:54:20] <lucasmciruzzi> '<input type="date" noui>' is good, still: You have to give the developer the option to use the native HTML with basic functionality.
[11:56:29] <scott_gonzalez> Nobody is taking that away.
[11:57:18] <lucasmciruzzi> "the future is JS Widgets"
[12:00:07] <scott_gonzalez> Oh, right, clearly when I said that I meant that everything that's been added to HTML should be taken away.
[12:01:04] <scott_gonzalez> And the future IS JS widgets.
[12:01:30] <scott_gonzalez> You do realize that people use JS for almost everything, right?
[12:01:34] <scott_gonzalez> And that's not going to stop.
[12:02:13] <scott_gonzalez> And despite HTML5 and CSS3 becoming more widely available, usage of JS widget libraries continues to increase.
[12:06:06] <lucasmciruzzi> Is good to use JS for ajax, events handling, and other functionality related stuff, but for the rest...... for styles (like center in the screen, or stuff like that) CSS (and every day it covers more design basics), and for the structure (elements) HTML.
[12:06:50] <lucasmciruzzi> If you look out there, is CSS3 only tabs, galleries, etc.
[12:08:34] <lucasmciruzzi> I'm not saying that the use of JS will stop, I'm saying that with the time it will be easy to separate function/style/structure layers.
[12:11:53] <lucasmciruzzi> I must go, it was a pleasure to talk to you :)
[12:24:10] <tj_vantoll> Someone else want to see if they can recreate http://bugs.jqueryui.com/ticket/9192?  I tried on a VM and BrowserStack and couldn't recreate any problems.
[12:30:27] <scott_gonzalez> DaveMethvin: ^
[12:30:41] <scott_gonzalez> I think DaveMethvin is the only one with a real IE10.
[12:30:58] <scott_gonzalez> I need to find my tablet and update it.
[12:31:08] <scott_gonzalez> It's in a pile somewhere (gotta love moving).
[12:31:56] <tj_vantoll> I've been considering getting a real IE10, testing through VMs and emulators get frustrating.
[12:33:51] <DaveMethvin> scott_gonzalez tj_vantoll it works for me on real IE10
[12:34:18] <scott_gonzalez> closed: sendmeyourcomputer
[12:34:30] <DaveMethvin> the obvious checks come to mind, look at extensions etc
[12:34:30] <tj_vantoll> :)
[12:34:37] <tj_vantoll> Cache
[12:34:39] <tj_vantoll> yep
[12:34:51] <tj_vantoll> Thanks.
[12:35:14] <DaveMethvin> also look at the console, which yo have to have open and reload to make sure you see messages
[12:35:45] <DaveMethvin> when i reload the console is clean, which is good
[12:36:02] <DaveMethvin> in fact it's incredible ... i hardly ever see that
[12:36:16] <scott_gonzalez> We're amazing.
[12:36:19] <scott_gonzalez> Or your console is broken.
[12:36:32] <DaveMethvin> e.g. cnn.com http://wnd8.com/grab/2f1d3c.png
[12:40:00] <tj_vantoll> cnn.com also features my favorite, a:link, a:visited, a:focus { outline: 0; }
[12:41:37] <scott_gonzalez> :-(
[12:42:15] <DaveMethvin> designers, there're so inaccessible
[13:39:57] <djQuery> gnarf, you around? 
[15:35:59] <scott_gonzalez> mikesherov ngsilverman kborchers (everyone else)
[15:36:18] <scott_gonzalez> One of the most common mistakes with sortable is changing the cancel option and then breaking interactions with form controls
[15:36:50] <scott_gonzalez> What do people think of making the default cancel (exclude in 2.0) option null and always canceling on form controls?
[17:07:31] <jquicommit> [13jquery-ui] 15antishok opened pull request #947: Draggable: Set explicit width/height instead of right/bottom css. Fixes #7772 - ... (06master...06draggable_fix_7772)  02http://git.io/AbVB6Q
[17:51:45] <kborchers> scott_gonzalez: if you're still around … not sure what you mean. you have a bug someone submitted illustrating the issue?
