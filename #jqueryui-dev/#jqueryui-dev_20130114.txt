[03:07:40] <doesallmagic> Project jQuery UI - git core build #284: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/284/
[03:34:51] <doesallmagic> Project jQuery UI 1-9-stable - git core build #71: STILL FAILING in 27 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/71/
[03:36:36] <mr_daniel> When I hold the slider and move the mouse over other elements or even leave the browser viewport at all, no elements get selected. How is this achieved? Here is a simple fiddle: http://jsfiddle.net/T2tYH/
[03:37:21] <mr_daniel> You can select both <p> elements. But when you hold the slider, the <p> elements get *not* selected, which is good. But how is this achieved? I am coding something and want this feature for code as well.
[03:44:07] <rxaviers> jzaefferer, figured out a way
[03:44:09] <rxaviers> im = gm.subClass({ imageMagick: true });
[03:44:14] <rxaviers> im('icons.png').background('red').out('-alpha', 'shape').write("output.png", function(err){ if(err) console.log(err)});
[03:44:20] <rxaviers> http://www.imagemagick.org/Usage/masking/
[03:44:25] <rxaviers> :)
[04:20:15] <doesallmagic> Project jQuery UI - 1.6.x core build #179: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/179/
[05:05:57] <scott_gonzalez> jzaefferer: ping
[05:06:29] <doesallmagic> Project jQuery UI - 1.7.x core build #180: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/180/
[05:28:58] <rxaviers> scott_gonzalez, are we changing stable to 1.10 and legacy to 1.9 on Fri?
[05:29:21] <rxaviers> (gd morning)
[05:29:32] <scott_gonzalez> rxaviers: Yea. I'm hoping jzaefferer is around today to do a dry run of the release.
[05:29:50] <rxaviers> ;) cool ok thks
[05:29:51] <scott_gonzalez> I'm still working on the plugins site for Wednesday.
[05:30:12] <scott_gonzalez> I'd like to make sure the release script is going to use the correct theme files and docs.
[05:30:38] <rxaviers> ok, any help on anything plz just let me know. In the meanwhile, Im porting icons/texture generation
[05:31:10] <rxaviers> ok
[05:32:21] <scott_gonzalez> I was hoping to have time to do the dry run this weekend so I could let you know if anything needed to change, but I didn't get a chance :-/
[05:34:50] <rxaviers> I've checked something and this is going to happen on DB with regards to documentation (I am not sure if this is the expected behaviour you want)
[05:35:10] <rxaviers> grunt prepares api.jqueryui.com according to this rule:
[05:35:26] <rxaviers> It gets jquery-ui corresponding <major>-<minor> branch if available or "master"
[05:35:41] <rxaviers> I saw we have a "1-10" branch, but not "1-9"
[05:36:02] <rxaviers> So 1.9* will use "master" api, while 1.10 will use the branch "1-10"
[05:40:13] <scott_gonzalez> We'll have a 1-9 branch before the release.
[05:40:44] <scott_gonzalez> But thanks for mentioning that, I'll get that branch created earlier for testing.
[05:51:57] <doesallmagic> Project jQuery UI - 1.8.x core build #155: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/155/
[05:58:54] <rxaviers> ah! cool alright ;)
[05:59:44] <rxaviers> \o/ got image magick `convert` parameters for icons and texture generation!
[06:08:17] <scott_gonzalez> :-)
[06:35:34] <DaveMethvin> rworth scott_gonzalez ajpiano this looks ready to go to me http://blog.jquery.com/?p=2407&preview=true&preview_id=2407&public=1&nonce=41bfc44e76
[06:35:40] <DaveMethvin> brb
[06:38:03] <DaveMethvin> back
[06:38:15] <ajpiano> DaveMethvin: couple minor things, should i tweak or tell you
[06:38:25] <DaveMethvin> feel free to tweak
[06:38:55] <scott_gonzalez> DaveMethvin: I thought you were going to include sponsors?
[06:39:11] <DaveMethvin> i can put them in if rworth has the list, or  a link to a page
[06:39:14] <ajpiano> DaveMethvin: also nothing in here about the confs
[06:39:16] <DaveMethvin> we have the sponsor page
[06:39:21] <DaveMethvin> confs are in there
[06:39:28] <ajpiano> oh man
[06:39:29] <ajpiano> i'm a dum
[06:39:37] <scott_gonzalez> ajpiano: They're in there.
[06:39:41] <ajpiano> i see that now
[06:39:46] <DaveMethvin> on second thought, what are your changes ajpiano?
[06:39:48] <DaveMethvin> :D
[06:39:51] <scott_gonzalez> heh
[06:40:11] <ajpiano> haha, just to change the middle of the 3rd paragraph
[06:40:15] <DaveMethvin> it probably is easier for me to change it if you want
[06:40:21] <ajpiano> so that we don't talk about "their" organization
[06:40:27] <ajpiano> and then refer to ourselves as we for the rest of the post
[06:40:45] <ajpiano> there shoudl be a comma between Portland and Oregon
[06:40:59] <ajpiano> then "Write, code, documentation or websites" is a bit awk
[06:41:00] <DaveMethvin> "a separate"
[06:41:39] <ajpiano> DaveMethvin: "Last year, we moved jQuery projects from under the wing of the Software Freedom Conservancy to our own non-profit organization: the jQuery Foundation."
[06:42:23] <DaveMethvin> better suggestion on  "Write, code, documentation or websites" ?
[06:42:40] <ajpiano> "Work on code, documentation, or web sites"
[06:42:45] <ajpiano> "Help with"
[06:42:47] <ajpiano> either way
[06:42:54] <ajpiano> just want to fix the "Write.... websites"
[06:43:33] <DaveMethvin> how about "content for websites" instead?
[06:43:54] <ajpiano> that doesn't get at the point that they can work on like design
[06:44:08] <DaveMethvin> i do mention it in the rest of the para
[06:44:22] <DaveMethvin> just need a pithy point to bold here :)
[06:44:58] <DaveMethvin> Maybe "Work on web sites for a jQuery project" ?
[06:45:00] <scott_gonzalez> "Stop bitching on Twitter, and lend a hand."
[06:45:15] <ajpiano> I'd go with "Help with code, documentation, or web sites for jQuery projects"
[06:45:15] <DaveMethvin> yeah i like that :)
[06:45:23] <ajpiano> omg btw you guys i don't know if you've done this
[06:45:33] <ajpiano> i did a filter in tweetdeck to get rid of @jquery4u
[06:45:40] <ajpiano> and now everything is so much better
[06:45:51] <scott_gonzalez> heh
[06:46:01] <scott_gonzalez> I still use Echofon, so I only have one search.
[06:46:13] <scott_gonzalez> And I have it set to jqueryui.
[06:46:15] <ajpiano> ah
[06:46:17] <ajpiano> dang, retro
[06:46:39] <ajpiano> @jquery4u has this like spammy jquery mobile website builder
[06:46:48] <ajpiano> and likle multiple times per day an army of spambots retweets it
[06:46:56] <scott_gonzalez> wonderful
[06:46:59] <ajpiano> and makes a @jquery search prretty useless
[06:47:15] <ajpiano> well, cluttered
[06:49:35] <DaveMethvin> we really need to get this post out soon ... i can add a link to the sponsor page but it seems incomplete without a member mention as well
[06:49:36] <DaveMethvin> so
[06:49:45] <DaveMethvin> i can either enumerate them in the blog post
[06:49:47] <rworth> DaveMethvin sorry I'm late
[06:49:54] <rworth> was just typing the list to you
[06:49:58] <DaveMethvin> or we could leave that to the membership blog post
[06:50:10] <ajpiano> i don't really want to link to old jquery.org if we can avoid it tbh
[06:50:28] <DaveMethvin> ok let's not link it then
[06:54:46] <rworth> DaveMethvin sent
[06:54:53] <DaveMethvin> thanks!
[06:55:07] <DaveMethvin> once I add that it's going live
[07:14:49] <petro> morning gents
[07:15:02] <petro> scott_gonzalez, you here?
[07:16:41] <scott_gonzalez> Hey petro
[07:22:01] <petro> I've started to rewrite the "blind" effect to use the clip effect, and I want to keep it as simple as possible. To achieve a blind effect, I was thinking of passing a (new) parameter to the clip effect that specifies the set of clip values to end at:
[07:22:02] <petro> $.effects.effect.blind = function( o, done ) {
[07:22:02] <petro> $(this).effect("clip", {
[07:22:02] <petro>     â€¦
[07:22:02] <petro>     to : {
[07:22:02] <petro>         top : â€¦
[07:22:03] <petro>         right : ...
[07:22:03] <petro>         bottom : ...
[07:22:03] <petro>         left : ...
[07:22:03] <petro>     }
[07:22:04] <petro> }, â€¦);
[07:22:58] <petro> Thoughts?
[07:24:16] <scott_gonzalez> Is there a reason that blind needs to depend on the clip effect instead of using the clip animation directly?
[07:26:08] <scott_gonzalez> petro: There's a comment on an outdated diff (I wish there was a good way to link to these):
[07:26:09] <scott_gonzalez> We should make a generalized stepHook for clip. See here: https://github.com/jquery/jquery-ui/blob/cc5ac08fdeac94c8ee0ccdf6c50e78de44db47fc/ui/jquery.ui.effect.js#L628
[07:26:09] <scott_gonzalez> Essentially, start, and end can be fx.start and fx.end.
[08:17:10] <petro> scott_gonzalez: just spoke with mikesherov and I agree, a step hook for clip is the better approach
[08:34:33] <wumbei> hey all
[08:35:03] <wumbei> i'm having trouble getting the jquery ui datepicker to select the default date to today. can anyone help?
[08:49:46] <scott_gonzalez> ?topic @wumbei
[08:49:46] <bot-t> wumbei, Topic: jQuery UI development (support at #jquery, core dev at #jquery-dev) Overview: http://wiki.jqueryui.com/Â - meeting at Wednesday, 12pm Eastern (9am Pacific, 6:00pm CEST), in #jquery-meetingÂ - Ag
[09:50:23] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/lrg6Yg
[09:50:23] <jquicommit> 13jquery-ui/06master 14176e0ed 15Dominic Barnes: Slider: Moved events to named functions (to allow extended plugins to hook in).
[10:37:32] <doesallmagic> Project jQuery UI build #925: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI/925/
[10:37:32] <doesallmagic> Scott GonzÃ¡lez: Slider: Moved events to named functions (to allow extended plugins to hook in).
[11:01:38] <jzaefferer> scott_gonzalez: pong
[11:02:04] <scott_gonzalez> jzaefferer: Can you do a dry run of the release script and make sure that it's using the right versions for themes and docs?
[11:02:23] <jzaefferer> okay
[11:02:43] <jzaefferer> the usual fork to my account, right?
[11:04:54] <scott_gonzalez> kborchers: ping
[11:04:57] <scott_gonzalez> jzaefferer: yeah
[11:05:04] <kborchers> scott_gonzalez: yo
[11:05:19] <scott_gonzalez> call?
[11:05:22] <scott_gonzalez> SFC
[11:05:39] <kborchers> i never saw an e-mail confirming which one was chosen
[11:05:44] <kborchers> give me a min and i'll join
[11:07:31] <kborchers> i'm in
[11:14:34] <jzaefferer> scott_gonzalez: https://gist.github.com/dbfc949fcacf8fa98c6f
[11:15:31] <scott_gonzalez> hmm...did rxaviers push the `git fetch -t` fix?
[11:15:51] <jzaefferer> why is it looking for 1.9.2?
[11:16:07] <scott_gonzalez> maybe because of config.json in the download builder?
[11:16:08] <rxaviers> scott_gonzalez commented fix is b87925a199ad9c8669874832e78766200ae7cac9
[11:16:47] <jzaefferer> yeah, still pointing at 1.9.2: https://github.com/jquery/download.jqueryui.com/blob/master/config.json
[11:17:02] <jzaefferer> download.jqueryui.com
[11:17:02] <jzaefferer> Â 
[11:17:02] <jzaefferer> 	1.	Update config.json to include the new version.Â Update the jQuery version if necessary.Â 
[11:17:26] <jzaefferer> did we really build a circular dependency here?
[11:18:02] <jzaefferer> for the release, we need downloadâ€¦ to point at the new version, for which the release should be tagged already
[11:19:16] <rxaviers> guys need a help?
[11:30:08] <jzaefferer> rxaviers: yeah, kinda. 
[11:30:24] <rxaviers> how can I help
[11:30:40] <jzaefferer> the jQuery UI release process has a dependency on the download builder, which itself has a dependency on the released jQuery UI tag
[11:30:53] <scott_gonzalez> rxaviers: Skype call?
[11:31:06] <scott_gonzalez> Now that jzaefferer and I are off of our other call.
[11:31:47] <rxaviers> sur
[11:31:48] <rxaviers> sure
[11:33:42] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/master/build/release/release.js
[11:49:18] <Dave_Stein> mikesherov scott_gonzalez in testsuite.js there is qunit-fixture, which happens to have a buncha elements in draggable.html... just wanted to double check that reset is automatically called per module
[11:49:24] <Dave_Stein> since reset nukes that thing
[11:49:31] <Dave_Stein> about to unit test up
[11:54:09] <scott_gonzalez> It's call per test, not per module.
[11:55:11] <Dave_Stein> scott_gonzalez: Am I losin my mind? I see that qunit-fixture contains draggable1 and draggable2, within draggable.html
[11:55:20] <Dave_Stein> yet all the tests reference those 2 elements
[11:56:02] <scott_gonzalez> The HTML is reset after every test.
[11:56:08] <scott_gonzalez> To whatever the original markup is.
[11:56:57] <Dave_Stein> oh ok so testsuite wipes the fixture and then QUnit.reset is what resets to original markup?
[12:00:20] <scott_gonzalez> What do you mean "testsuite wipes the fixture"?
[12:01:39] <Dave_Stein> scott_gonzalez jQuery("#qunit-fixture").empty();
[12:01:54] <scott_gonzalez> Oh, I forgot about that.
[12:02:01] <scott_gonzalez> QUnit used to do that on its own.
[12:02:16] <scott_gonzalez> That's to clean up any .data().
[12:02:32] <Dave_Stein> interactions overwrites reset with that line and then calling the original reset function
[12:02:37] <scott_gonzalez> So, yes, our testsuite.js wipes it out and then QUnit restores it.
[12:02:54] <Dave_Stein> im writing new tests so that setup makes an element and teardown removes element
[12:03:30] <Dave_Stein> that way we wont rely on the html anyway.. it's confusing within tests when its just picking "draggable1" "draggable2" randomly rather than test setting up the state it expects
[12:03:37] <Dave_Stein> absolute vs relative and whatever else
[12:03:52] <scott_gonzalez> Dave_Stein: So use descriptive names then.
[12:03:58] <Dave_Stein> i know other tests are doing that now and i believe it's preferred
[12:04:03] <scott_gonzalez> Please keep test markup in the actual markup.
[12:04:20] <Dave_Stein> draggable_relative_100x100 ?
[12:04:28] <Dave_Stein> :P
[12:04:46] <scott_gonzalez> Or just know that draggable-relative is 100x100.
[12:04:53] <scott_gonzalez> There aren't going to be that many variations of markup.
[12:05:41] <Dave_Stein> so you think its bad menu tests does that?
[12:06:04] <Dave_Stein> actually i lied
[12:06:08] <Dave_Stein> its in draggable_methods.js
[12:09:59] <jquicommit> 01[13jquery-ui01] 15jzaefferer pushed 1 new commit to 06master: 02http://git.io/sKdRsA
[12:09:59] <jquicommit> 13jquery-ui/06master 14d403e5a 15JÃ¶rn Zaefferer: Build: Fix generate_themes task to adopt to changes in download builder.
[12:10:31] <doesallmagic> Project jQuery UI build #926: STILL FAILING in 35 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/926/
[12:10:32] <doesallmagic> joern.zaefferer: Build: Fix generate_themes task to adopt to changes in download builder.
[12:16:52] <jquicommit> 01[13jquery-ui01] 15jzaefferer tagged 061.10.0 at 14d50a752: 02http://git.io/tlYI6Q
[12:16:52] <jquicommit> 13jquery-ui/061.10.0 14d50a752 15JÃ¶rn Zaefferer: Tagging the 1.10.0 release.
[12:17:13] <jquicommit> 01[13jquery-ui01] 15jzaefferer pushed 1 new commit to 06master: 02http://git.io/f1ktew
[12:17:13] <jquicommit> 13jquery-ui/06master 1420cf7ab 15JÃ¶rn Zaefferer: Updating the master version to 1.10.1pre.
[12:18:17] <jquicommit> 01[13jquery-ui01] 15scottgonzalez 04deleted 061.10.0 at 14d50a752: 02http://git.io/IM5NJg
[12:19:26] <scott_gonzalez> oh boy
[12:19:56] <jquicommit> 01[13jquery-ui01] 15jzaefferer pushed 1 new commit to 06master: 02http://git.io/8bdxrw
[12:19:56] <jquicommit> 13jquery-ui/06master 145549dfa 15JÃ¶rn Zaefferer: Revert "Updating the master version to 1.10.1pre."...
[12:20:02] <jzaefferer> well that was bad
[12:25:06] <Dave_Stein> scott_gonzalez: $('#box').draggable( 'option', 'appendTo', $('#main') ); is that only supposed to work with clone? docs make me think no
[12:25:28] <Dave_Stein> but i cant seem to get it to update after init, on master
[12:30:22] <scott_gonzalez> Old or new?
[12:30:29] <Dave_Stein> old
[12:30:41] <Dave_Stein> im making tests on branch of master with mikesherov  to port over to interactions
[12:31:01] <scott_gonzalez> In old draggable, it only applies for clone.
[12:33:36] <Dave_Stein> scott_gonzalez: that fixed half my test and broke the other half *sigh*
[12:34:54] <Dave_Stein> scott_gonzalez: http://pastebin.com/E6jJ3vQc without clone, shouldMove works and equal tests fail, with clone shouldMove breaks and my equal tests pass
[12:35:18] <Dave_Stein> ill be back in a bit
[12:37:51] <scott_gonzalez> I'm confused. Are you trying to run old tests with back compat turned on?
[12:37:59] <scott_gonzalez> Do you already have tests for the non-back-compat code?
[12:49:41] <agcolom> scott_gonzalez: hey! quick question: in the api docs, we have a rangeslider that is made by two sliders. It's got its own events but each slider inside the rangeslider still emit their normal event... 
[12:50:28] <agcolom> So I'd like to only document the rangeslider events in rangeslider, but add a note regarding the normal slider events.
[12:50:44] <scott_gonzalez> You shouldn't document those inside the rangeslider. Or, at least the rangeslider shouldn't be designed such that you should need to listen to the slider events.
[12:51:45] <agcolom> I don't think we need to listen to them, but they're still emitted....
[12:52:06] <scott_gonzalez> Sure, they shouldn't be documented in the rangeslider page though.
[12:52:14] <agcolom> I agree... 
[12:52:18] <scott_gonzalez> Just like we don't document draggable and resizable events in the dialog page.
[12:52:25] <scott_gonzalez> Or menu events in the autocomplete page.
[12:52:43] <scott_gonzalez> The relevant events are converted to events for the composite widget.
[12:52:55] <agcolom> but do you think I should add a note to say the normal events are still emitted by the sliders making up the rangeslider or?
[12:53:08] <agcolom> or not at all?
[12:53:33] <agcolom> (just want to be consistent with UI :-) )
[12:54:07] <scott_gonzalez> Don't mention it at all.
[12:54:24] <agcolom> ok :-) thank you :-)
[12:54:54] <scott_gonzalez> no problem
[12:55:16] <agcolom> and I LOVE my local setup :-)
[12:57:14] <scott_gonzalez> :-)
[12:59:48] <Dave_Stein> scott_gonzalez: mikesherov said that we should write tests against master to fill in the holes and then port them to interactions with backCompat to make sure everything is actually working as intended
[13:00:10] <Dave_Stein> so theorertically all tests on master shuold pass interactions with backCompat
[13:00:10] <Dave_Stein> minus the few that we removed
[13:00:30] <Dave_Stein> help me help you :)
[13:01:05] <scott_gonzalez> So you're working in master right now?
[13:01:21] <Dave_Stein> mikesherov made a branch off of master called master_tests
[13:01:22] <Dave_Stein> so we're in that
[13:01:40] <Dave_Stein> didn't really want to work on master directly
[13:02:41] <scott_gonzalez> Ok, so what is this supposed to be testing?
[13:02:54] <scott_gonzalez> Why would the element be moved in that test?
[13:03:17] <doesallmagic> Project jQuery UI build #927: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI/927/
[13:03:18] <doesallmagic> joern.zaefferer: Updating the master version to 1.10.1pre.
[13:03:20] <Dave_Stein> im testing appendTo which is "Which element the draggable helper should be appended to while dragging"
[13:03:24] <Dave_Stein> so i start off with parent
[13:03:29] <Dave_Stein> drag, make sure it was appaneded to parent
[13:03:41] <Dave_Stein> then i change it to another element, drag, make sure it was appended to other element
[13:03:52] <scott_gonzalez> But it shouldn't be appended after the drag, right?
[13:03:55] <scott_gonzalez> Only during the drag.
[13:04:08] <Dave_Stein> correct, which is why im setting parent during drag
[13:04:10] <scott_gonzalez> Also, it's not the original element that's appended, it's the clone.
[13:04:33] <Dave_Stein> i say parent is ui.helper.parent()
[13:04:40] <Dave_Stein> so that should be the clones parent at the time of dragging
[13:04:42] <Dave_Stein> right?
[13:05:03] <scott_gonzalez> Oh, I was misreading this test.
[13:05:10] <scott_gonzalez> yes
[13:05:18] <Dave_Stein> thought you were - i do the same all the time :)
[13:05:50] <scott_gonzalez> So, what's failing here?
[13:06:20] <scott_gonzalez> shouldMove() doesn't think it moved?
[13:06:36] <Dave_Stein> correct
[13:06:44] <scott_gonzalez> Because it hasn't, right?
[13:06:53] <scott_gonzalez> If you have a clone, the original element doens't move.
[13:07:25] <Dave_Stein> gd you are so right ha
[13:07:29] <Dave_Stein> that would be why adding clone broke it ;)
[13:07:38] <scott_gonzalez> :-P
[13:08:15] <scott_gonzalez> Yay, tasks.pop();
[13:08:26] <Dave_Stein> is that a thing?
[13:08:27] <scott_gonzalez> tasks.length === Infinity
[13:08:45] <scott_gonzalez> No, it's a comment on how many simultaneous tasks I'm working on :-P
[13:08:45] <Dave_Stein> well i can tell you the "tests" for appendTo aren't tests at all right now
[13:08:52] <Dave_Stein> haha
[13:09:00] <Dave_Stein> i have a meeting in "4 minutse" as someone just said walking by
[13:09:11] <scott_gonzalez> Yeah, there's a reason the test suite wasn't enabled for a very long time.
[13:09:23] <Dave_Stein> they just test shuoldMove and nothing having to do with appendTo
[13:09:25] <Dave_Stein> cuteness!
[13:09:26] <Dave_Stein> :P
[13:09:49] <Dave_Stein> ill just make a new set of tests on top of them
[13:09:57] <Dave_Stein> cause they test *something* maybe?
[13:13:08] <Dave_Stein> scott_gonzalez: I need to make the element move to make the clone appear but I can't call shouldMove on the helper as it doesnt exist at that time... is there any reason we only use simluate within helpers? 
[13:13:20] <Dave_Stein> scott_gonzalez: I would prefer to just simulate the move and not care about it's coordinates
[13:13:59] <scott_gonzalez> Because simulate is higher level than triggering an event.
[13:14:40] <scott_gonzalez> You can write a new helper if you need.
[13:14:46] <Dave_Stein> well I can make a function in test_helper for "move" rather than ...
[13:14:46] <Dave_Stein> yes
[13:14:47] <Dave_Stein> exactly
[13:14:48] <Dave_Stein> :D
[13:14:55] <scott_gonzalez> But that helper should still use .simulate()
[13:15:01] <Dave_Stein> okay using simulate solves my problem so after this meeting i shall do that
[13:15:05] <Dave_Stein> yeah exactly what i was gonna do
[13:15:29] <Dave_Stein> ill be back in 30-60 and back on this to actually make functional tests haha
[13:42:22] <jquicommit> 01[13jqueryui.com01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/AH3-kg
[13:42:22] <jquicommit> 13jqueryui.com/06master 14fedcde7 15Scott GonzÃ¡lez: Download all: Corrected description of zips.
[13:49:29] <doesallmagic> Project jQuery UI build #928: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI/928/
[13:49:29] <doesallmagic> joern.zaefferer: Revert "Updating the master version to 1.10.1pre."
[13:49:59] <scott_gonzalez> Yeah, that was a pretty big fail, wasn't it? :-P
[14:35:26] <jquicommit> [13jquery-ui] 15parkeryoung opened pull request #884: Multiple Select Sortable (06master...06master)  02http://git.io/8T76hw
[14:42:26] <mr_daniel> solved it: need to bind on 'window' instead on 'body'
[15:14:42] <Dave_Stein> mikesherov jzaefferer scott_gonzalez: So these two tests in maste, "test" appendTo but never set the option to clone so really it doesn't do anything... shall I just replace those? Or make ones that do and keep those thre "just in case"
[15:26:59] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06master_tests: 02http://git.io/2TvtYA
[15:26:59] <jquicommit> 13jquery-ui/06master_tests 14c900187 15Dave Stein: Draggable Tests: Added tests for appendTo and axis
[15:30:52] <mikesherov> Dave_Stein: Yeah, keep them there for now. 
[15:32:01] <Dave_Stein> mikesherov I did with TODOs although they heavily depress me as they literally test nothing
[15:32:17] <Dave_Stein> they test that you can pass 3 of the 5 possible options, and that the draggable drags, but not that anything was appended, as it wasnt
[15:32:37] <mikesherov> Oh. Well why wasn't it?
[15:32:53] <Dave_Stein> cause appendTo noly works if helper = 'clone' in 1.*
[15:33:04] <Dave_Stein> *only
[15:33:36] <Dave_Stein> i mean if they tested the appendTo and failed as it's technically a bug in 1.* that was never fixed, that would be okay, but it doesn't even do that
[15:33:57] <Dave_Stein> http://api.jqueryui.com/draggable/#option-appendTo doesn't say it needs to be a clone, and well in 2.0 that's already fixed
[15:34:47] <mikesherov> Oh, so it's just testing that the appendTo doesn't bork in 1.*
[15:35:28] <Dave_Stein> there is no emoticon I can make in here that is sad enough for me for that 
[15:35:43] <mikesherov> Ha
[15:35:48] <mikesherov> Hahahaha 
[15:35:57] <Dave_Stein> but you and me - we're gonna crush this bitch
[15:36:07] <mikesherov> Yeah.
[15:36:13] <Dave_Stein> the core guys are gonna be like "wtf, how did you test so awesomely"
[15:36:13] <Dave_Stein> lol
[15:36:43] <mikesherov> One thing I'd like to do is avoid making more test helpers if they are trivial. 
[15:37:03] <Dave_Stein> well scott wanted any calls to simulate to be in there so i added move
[15:37:04] <mikesherov> Like "move", that test helper seems like unnecessary misdirection
[15:37:10] <Dave_Stein> ha knew you were gonna say that
[15:37:14] <mikesherov> Oh, is that right?
[15:37:32] <mikesherov> Well, who am I to argue with scott_gonzalez 
[15:37:36] <Dave_Stein> haha
[15:37:49] <Dave_Stein> he also told me to keep the markup in the fixture because it resets everytime from the main qunit reset
[15:38:00] <mikesherov> I see though. He wants clean separation between testing code and tested code
[15:38:13] <mikesherov> Dave_Stein: It does do that
[15:38:27] <Dave_Stein> so like right now draggable_methods is using setup and teardown to make an element everytime
[15:38:32] <Dave_Stein> but we shuold just be using the elements within the fixture
[15:38:41] <mikesherov> Dave_Stein: Sure
[15:38:43] <Dave_Stein> which is the opposite of what we were thinking on friday
[15:39:04] <mikesherov> Or use the setUp to select the fixtured elements. 
[15:39:26] <Dave_Stein> true
[15:39:30] <Dave_Stein> that wont be hard to change later
[15:39:38] <mikesherov> Right
[15:40:01] <mikesherov> I already did it for a few of the suites
[15:40:07] <mikesherov> I'll make that change tonight
[15:40:20] <mikesherov> I'll be working from 7:15 to 9:15 ish
[15:40:25] <mikesherov> On it tonight
[15:40:37] <mikesherov> Alongside the effects rewrite
[15:40:57] <Dave_Stein> ok
[15:41:06] <Dave_Stein> im gonna blast through some more now for the next 20-40 or so
[15:41:41] <Dave_Stein> its not hard to get in the "check that option changing works" stuff
[15:41:54] <mikesherov> Cool
[15:42:28] <Dave_Stein> i also realized that i did not getting qunit:files working at work either, thought i had but remembered wrong 
[15:43:37] <mikesherov> ?
[15:43:43] <Dave_Stein> when i type grunt.cmd
[15:43:48] <Dave_Stein> it complains about phantomjs, that thing
[15:43:59] <mikesherov> Ohh. Yeah :/
[15:44:10] <mikesherov> Ask in #grunt
[15:45:10] <mikesherov> Ok. I'll be back in 25
[15:48:43] <jzaefferer> Dave_Stein mikesherov: Some of the grunt/qunit/phantomjs problems might get resolved by http://bugs.jqueryui.com/ticket/8954
[15:50:45] <Dave_Stein> jzaefferer well then I've upvoted it :)
[15:51:06] <mikesherov> jzaefferer: that's cool. Is there an option to specify non local?
[15:55:21] <jzaefferer> mikesherov: not really, check out the tests of the plugin
[15:55:33] <jzaefferer> maybe we should file a ticket for providing an option though...
[15:55:43] <jzaefferer> assuming that actually changes anything
[15:56:09] <mikesherov> jzaefferer: Right, I mean, isn't that what you're suggesting?
[15:57:46] <jzaefferer> maybe?
[15:57:50] <jzaefferer> I need sleep, ttyl
[15:58:12] <Dave_Stein> mikesherov comapring all this offset poop in containment tests vs testDrag is like woah... boy do i like testDrag
[15:58:34] <mikesherov> Wait, what?
[15:59:22] <Dave_Stein> the unit tests for containment manually use .offset() to see if things moved
[15:59:31] <Dave_Stein> whereas testdrag just tells me if things moved without all that
[16:00:06] <mikesherov> oh, yeah
[16:00:07] <mikesherov> You should check out a copy of 1.8.24
[16:00:33] <Dave_Stein> doesn't that just mean we should pull that into master_tests ?
[16:00:46] <mikesherov> The interactions test are pure insanity. It's no ones fault. Just rot.
[16:01:52] <mikesherov> Oh, I meant if you wanted to see what state I found it in
[16:01:52] <mikesherov> Not to literally pull it in
[16:04:49] <Dave_Stein> oh i found a bug! 
[16:04:53] <Dave_Stein> lovely
[16:05:14] <Dave_Stein> $('#box').draggable("option","containment", false ); doesn't work after setting it to parent
[16:05:30] <mikesherov> That's what I was hoping for. Leave it failing and comment it out.
[16:05:48] <Dave_Stein> im so useful! haha
[16:05:54] <mikesherov> My secret goal is to fix old draggable. 
[16:06:12] <Dave_Stein> why would you do such a horrible task
[16:06:31] * mikesherov ducks
[16:06:38] <Dave_Stein> you're not a politician
[16:06:51] <mikesherov> Well, to file them all as bugs in the tracker
[16:07:07] <mikesherov> And make them available to community to fix
[16:07:28] <mikesherov> I really really want to find the bugs
[16:07:31] <Dave_Stein> or just set them to 2.0 milestone as it seems strange to make community fix things that have existed forever, when we are about to fix them from scratch
[16:07:31] <mikesherov> Like badly
[16:07:42] <mikesherov> Right
[16:07:42] <Dave_Stein> well i suppose that's a silly statement from me
[16:07:45] <mikesherov> Either or
[16:07:54] <Dave_Stein> yeah guess set em as 2.0 and if someone decides to fix, then okay
[16:08:04] <mikesherov> If its easy to fix, it's good for a community member to
[16:08:15] <mikesherov> Fix and get his/her feet wet
[16:08:37] <mikesherov> Expose all the bugs
[16:08:48] <Dave_Stein> btw im leaving your simulates in there to change to the helper whenever we touch those tests specificallly... or do a regex replace out later
[16:08:55] <mikesherov> K
[16:09:01] <Dave_Stein> im good at finding bugs when its not my own code lol
[16:09:31] <mikesherov> Can you push up soon? I'll make another formatting pass soon with what we agreed upon.
[16:10:13] <mikesherov> Ok. G2G. Time to drive home
[16:10:32] <Dave_Stein> ill be gone in 20 an push up then
[16:10:40] <Dave_Stein> or are you coding on train?
[16:10:51] <Dave_Stein> or do you alternate driving days and train days? ha
[16:11:02] <mikesherov> I just got off train
[16:11:06] <mikesherov> On mobile
[16:11:07] <Dave_Stein> ah i see
[16:11:12] <Dave_Stein> i'll push after this next one then
[16:11:13] <mikesherov> 5 minutes to home
[16:11:28] <mikesherov> K. 20 minutes is fine too
[16:11:36] <Dave_Stein> fine then ill wait, fuck you ha
[16:11:59] <mikesherov> Have
[16:11:59] <mikesherov> Haha
[16:12:07] <mikesherov> Later!
[16:12:11] <Dave_Stein> ttyl
[16:27:19] <Dave_Stein> mikesherov scott_gonzalez there ya go http://bugs.jqueryui.com/ticket/8962
[16:27:43] <Dave_Stein> if you feel like making me an admin later, so i can assign myself and/or make milestones, let me know :)
[16:45:19] <scott_gonzalez> mikesherov: What I told Dave_Stein was to create helpers if he need them, but that everything should be using .simulate().
[16:52:59] <mikesherov> scott_gonzalez: that makes sense
[16:53:04] <mikesherov> petro!
[16:53:12] <petro> yo
[16:53:43] <mikesherov> scott_gonzalez: perhaps you and petro can talk out the clip stepHookâ€¦ we were both having trouble conceptualizing how that'd work
[16:54:44] <scott_gonzalez> mikesherov: You don't remember our discussion at my house? :-P
[16:54:58] <scott_gonzalez> petro: Did you look at the color animation?
[16:55:03] <mikesherov> scott_gonzalez: well, the thing is that the end position depends on the start position
[16:55:14] <petro> a little, i'll take a closer look
[16:55:19] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/1-8-stable/ui/jquery.effects.core.js#L20
[16:56:08] <petro> i gotta go, i have a 2hr workshop in a few minutes, but basically the other effects need to be able to animate clip to a custom end value
[16:56:09] <scott_gonzalez> mikesherov: Can you give an example so I can see what needs to be handled?
[16:56:29] <mikesherov> petro, I'll work it out with scott_gonzalez 
[16:56:29] <scott_gonzalez> petro: Ok, I can talk through it with mikesherov right now.
[16:56:31] <petro> and the default clip end value depends on the starting value
[16:56:37] <petro> thanks guys
[16:57:16] <mikesherov> https://github.com/jquery/jquery-ui/pull/876/files#L2R47
[16:57:17] <b-ot> mikesherov, pull request #876 by mpetrovich (1w 5d ago): Effects: Rewrote "clip" effect to animate CSS clip property
[16:57:45] <mikesherov> scott_gonzalez: ^
[16:57:52] <scott_gonzalez> Well, that's specific to the clip effect, right?
[16:58:11] <scott_gonzalez> The clip effect should be calculating those values and passing them to the clip animation.
[16:58:12] <mikesherov> scott_gonzalez: sure, but there's going to be that animating clip for all effects
[16:58:54] <mikesherov> scott_gonzalez: sure! that makes sense, and so we're still animating two objects?
[16:59:22] <scott_gonzalez> Yeah, if it's not already absolute/fixed.
[16:59:38] <mikesherov> sorry, that's not what I meant
[17:00:34] <scott_gonzalez> So we shouldn't be using a custom step callback.
[17:00:49] <mikesherov> so instead of $(start).animate( end, {
[17:00:52] <scott_gonzalez> That same logic should live in $.fx.step.clip.
[17:01:18] <mikesherov> but the "end" var is specific to the effect, not the property
[17:01:35] <mikesherov> sorry, I'm dense
[17:01:43] <mikesherov> I need it explained to me a bit more
[17:02:35] <mikesherov> scott_gonzalez: somehow, we need to specify to the animation a value to animate clip toâ€¦. which is based of the start position
[17:02:43] <scott_gonzalez> Assuming clip supported 4 properties, would this be easier?
[17:02:59] <scott_gonzalez> If you could do: .animate({ clipTop: "+20" })
[17:03:12] <mikesherov> that's what I was ORIGINALLY thinking
[17:03:22] <mikesherov> but those are fake properties
[17:03:30] <mikesherov> and see like more magic than is necessary
[17:03:31] <scott_gonzalez> So, then we can make the clip step smart enough to handle "+20 -15 +20 +100"
[17:03:50] <scott_gonzalez> Just like you can do { height: "+200" }
[17:04:01] <mikesherov> right, also thought about that too
[17:04:36] <mikesherov> but the thing is that the "+20 -15 +20 +100" would be a string constructed off of the starting value of clip
[17:04:59] <scott_gonzalez> Would it be based on the starting value or just based on the dimensions?
[17:05:16] <mikesherov> start = parseClip( el );end = {
[17:05:16] <mikesherov>  	 48	
[17:05:17] <mikesherov> +    top: vertical ? ( start.bottom - start.top ) / 2 : start.top,
[17:05:34] <mikesherov> I mean, it's directly based off of complex math
[17:05:37] <scott_gonzalez> Hmmm..so in the case where there's already a clip in play?
[17:05:43] <mikesherov> right
[17:06:04] <mikesherov> and even when it's notâ€¦ the "default" clip is 0 outerWidth outerHeight 0
[17:06:16] <mikesherov> so it needs those starting values
[17:07:12] <scott_gonzalez> So it seems like what you really want is parseClip() exposed and $.fx.step.clip.
[17:07:27] <mikesherov> RIGHT
[17:07:41] <mikesherov> but $.fx.step.clip should take an object
[17:07:49] <mikesherov> as the value to animate to
[17:08:02] <mikesherov> or if you insist, we can make it a string :-)
[17:08:18] <mikesherov> and then inside the stepHook split it back out into an object
[17:08:43] <scott_gonzalez> We can make it support both, but if we're going to create $.fx.step.clip, I feel like it HAS to support a string.
[17:08:46] <mikesherov> but then that just seems like an object -> string -> object conversion for formalities sake
[17:08:57] <mikesherov> Yeah, I agree it has to also
[17:09:06] <scott_gonzalez> I'm fine if we support both and all of the internals are based on the object format.
[17:09:07] <mikesherov> but mostly to make us feel better :-P
[17:09:23] <mikesherov> so about exposing parseClip
[17:09:35] <mikesherov> effects don't depend on core, right?
[17:09:47] <scott_gonzalez> I mean, if you look at that color hook, we change the values to whatever we want to work with.
[17:09:57] <scott_gonzalez> Right, we'd put this in effects core.
[17:10:04] <mikesherov> right, we'll do the same for clip
[17:10:06] <mikesherov> that's fine
[17:10:20] <mikesherov> so we can make a generic clipHook for people who want to use it
[17:10:29] <mikesherov> but then the other thing isâ€¦
[17:10:43] <mikesherov> that more than a few effects will be animating clip
[17:11:05] <mikesherov> perhaps it makes sense to make an API for that
[17:11:24] <scott_gonzalez> What would the API do?
[17:11:33] <mikesherov> like it takes a callback that has as its argument the parsed clip value
[17:12:02] <mikesherov> and the return value gets piped back to an animation expecting the clip object
[17:12:09] <mikesherov> but that might be overkill
[17:12:14] <scott_gonzalez> Won't you generally be animating more than just clip though?
[17:12:18] <mikesherov> sure
[17:12:27] <mikesherov> but for blind, no
[17:12:31] <mikesherov> and a few others, no
[17:12:36] <scott_gonzalez> I'm not sure that it'd be easier/less code to write if we added more APIs.
[17:12:41] <scott_gonzalez> But I could be wrong.
[17:12:42] <mikesherov> fair enough
[17:12:59] <mikesherov> well, then when I get to the point of needing it, we'll discuss again
[17:13:03] <scott_gonzalez> Let's start with just exposing everythin and see what patterns emerge.
[17:13:11] <mikesherov> right
[17:13:38] <mikesherov> so for now, sounds like $.fn.parseClip gets exposed in effects.js?
[17:13:54] <scott_gonzalez> yeah
[17:14:23] <mikesherov> ok, cool
[17:14:40] <scott_gonzalez> We'll need to create an issue to document it on api.jqueryui.com too.
[17:14:46] <mikesherov> k
[17:14:54] <mikesherov> and so for the string argument, the format I assume should look like a normal clip value?
[17:15:30] <mikesherov> except for the special case of relative values too?
[17:15:55] <mikesherov> or ditch relative until we need it so we don't get fancy
[17:15:58] <scott_gonzalez> oh my https://github.com/jquery/jquery-ui/pull/884/files
[17:15:59] <b-ot> scott_gonzalez, pull request #884 by parkeryoung (2h 45m ago): Multiple Select Sortable
[17:16:20] <mikesherov> ha, I already "thanks, but no thanks"'d him
[17:16:20] <scott_gonzalez> We can skip the relative values.
[17:16:23] <mikesherov> ok
[17:16:32] <mikesherov> so if string, run parseClip on it :-)
[17:16:40] <scott_gonzalez> I just thought that it might solve the problem of needing to parse the start value outside of .animate().
[17:16:43] <scott_gonzalez> yup
[17:16:58] <mikesherov> ok, I can do that
[17:18:01] <mikesherov> ok, and just so we're on the same page, I'm no longer animating a plain object with a custom stepHook
[17:18:29] <mikesherov> I'm animating an element with the a clip property and a stepHook for clip
[17:18:52] <scott_gonzalez> correct
[17:18:58] <mikesherov> and $.fn.parseClip is okâ€¦ it doesn't need to be somewhere else?
[17:19:03] <scott_gonzalez> And we'll do { clip: { top: ... } }
[17:19:10] <scott_gonzalez> I think it's fine on $.fn.
[17:19:15] <mikesherov> k
[17:19:41] <mikesherov> the stepHook for clip should go in effects.js
[17:19:58] <scott_gonzalez> yup
[17:20:01] <mikesherov> OK, I got what I needâ€¦ thanks for the help!
[17:20:07] <scott_gonzalez> no problem
[17:20:15] <scott_gonzalez> Looking forward to this actually working :-)
[17:25:20] <scott_gonzalez> mikesherov: I gave you TRAC_ADMIN and I gave Dave developer (REPORT_ADMIN, TICKET_ADMIN, WIKI_ADMIN)
[17:25:35] <mikesherov> scott_gonzalez: great, thanks!
[17:25:46] <mikesherov> scott_gonzalez: let's make a new milestone called "none"
[17:25:50] <mikesherov> and set that to default
[17:26:00] <mikesherov> so much garbage ended up in 1.10
[17:26:07] <mikesherov> the milestone that is
[17:27:01] <scott_gonzalez> ok
[17:27:16] <scott_gonzalez> FWIW, we used to have TBD.
[17:27:52] <scott_gonzalez> done
[17:28:10] <mikesherov> thanks
[17:43:25] <mikesherov> scott_gonzalez: how do I expand 1 property into many properties in the hook?
[17:45:36] <mikesherov> scott_gonzalez: it's like I don't want a stepHook, I want a prefilter
[17:46:05] <scott_gonzalez> The fx object that's passed to the step is per property, so you have free reign over it.
[17:46:30] <scott_gonzalez> if ( !fx.init ) { $.extend( fx, $( elem ).parseClip() ); }
[17:46:41] <scott_gonzalez> s/elem/fx.elem/
[17:47:25] <scott_gonzalez> Well, that's obviously not all of the code :-P
[17:47:37] <scott_gonzalez> Not sure if that made it clear or not.
[17:47:39] <mikesherov> right, but I need to use the .now property to set after each stepâ€¦ right?
[17:48:11] <scott_gonzalez> Well, you'll probably want to get fx.start and fx.end to be objects.
[17:48:19] <mikesherov> right
[17:48:21] <mikesherov> which they are
[17:48:42] <scott_gonzalez> Then do fx.pos * (fx.end.top - fx.start.top) + fx.start.top
[17:48:45] <mikesherov> 	if ( !fx.init ) {
[17:48:46] <mikesherov> 		fx.start = $( fx.elem ).parseClip();
[17:48:47] <mikesherov> 		if ( typeof fx.end === "string" ) {
[17:48:49] <mikesherov> 			fx.end = parseClip( fx.end, fx.elem );
[17:48:50] <mikesherov> 		}
[17:48:51] <mikesherov> 		fx.init = true;
[17:48:52] <mikesherov> 	}
[17:48:56] <scott_gonzalez> yeah
[17:48:59] <mikesherov> ok, so don't manually rely on now
[17:49:01] <mikesherov> got it!
[17:49:36] <scott_gonzalez> Yeah, the only moving part in a step or an easing should be the state between 0 and 1.
[17:49:56] <scott_gonzalez> Even though they were originally designed to have like half a dozen pieces of state :-P
[18:05:07] <mikesherov> scott_gonzalez: last question, I swearâ€¦ It looks like then, if I'm "showing", I have to manually set the clip value before animating
[18:05:13] <mikesherov> so I can set the "start" state
[18:06:02] <scott_gonzalez> Because you want to start from 0x0 centered on some portion of the element?
[18:06:20] <mikesherov> right
[18:06:38] <mikesherov> where if I animate an object from and to, I can just "start" at the correct position
[18:06:56] <mikesherov> but here I have to manually set css clip to get the right starting position
[18:07:04] <mikesherov> which isn't the end of the world
[18:07:17] <mikesherov> just wondering if it's really cleaner this way or not
[18:07:55] <scott_gonzalez> Well, is it really any cleaner with plain objects?
[18:08:15] <mikesherov> Not really, I suppose
[18:08:19] <scott_gonzalez> Maybe you just need a helper for setting clip as a string from an object?
[18:08:20] <mikesherov> but thinking out loud
[18:08:24] <scott_gonzalez> You need that inside the step anyway.
[18:08:27] <mikesherov> right
[18:08:36] <mikesherov> so I think I'll do that too
[18:08:57] <scott_gonzalez> ok
[18:09:30] <scott_gonzalez> We could just have $.fn.cssClip() as a getter/setter.
[18:10:45] <mikesherov> good point
[18:10:49] <mikesherov> I'll do that
[18:11:23] <scott_gonzalez> Oh crap, I forgot to return my Redbox movie :-P
[18:13:45] <scott_gonzalez> Of course I remember 10 mintues after it's due back. Gonna go return this...
