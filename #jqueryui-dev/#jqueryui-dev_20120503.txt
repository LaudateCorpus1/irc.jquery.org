[06:05:09] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/prKgeQ
[06:05:09] <jquicommit> [jquery-ui/master] Datepicker range demo: Use public APIs. Fixes #8292 - Double Click on from date in Date range datepicker. - Scott González
[06:05:41] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/dtsA4Q
[06:05:41] <jquicommit> [jquery-ui/1-8-stable] Datepicker range demo: Use public APIs. Fixes #8292 - Double Click on from date in Date range datepicker. - Scott González
[06:22:13] <jq-jenkins> Project jQuery UI build #381: STILL FAILING in 16 min: http://swarm.jquery.org:8080/job/jQuery%20UI/381/
[06:22:13] <jq-jenkins> Scott González: Datepicker range demo: Use public APIs. Fixes #8292 - Double Click on from date in Date range datepicker.
[07:03:55] <scott_gonzalez> gnarf: This Firefox bug has existed forever :-/
[07:04:25] <scott_gonzalez> At least since 4.0
[07:46:31] <scott_gonzalez> gnarf: Looks like accessing ANYTHING on the node will throw; even constants.
[07:46:47] <scott_gonzalez> So we can detect it pretty easily, but there's no way to find the actually focused element :-(
[07:57:12] <rworth> scott_gonzalez I got api.jquery.com building taxonomies.json
[07:57:29] <scott_gonzalez> :-)
[07:57:52] <rworth> but we have child categories with duplicate names
[07:58:28] <rworth> were you saying we can't use slug as an id because of an XMLRPC limitation?
[07:58:46] <rworth> or is slug no better because it's not the full slug, just the child slug?
[07:59:03] <rworth> the XMLRPC error I'm getting suggests using the id, which of course we don't want
[08:00:17] <nacin> in WP, categories are most often identified via IDs to avoid issues referring to child categories
[08:00:35] <nacin> so you'd need to do a separate call to getTerm, I imagine
[08:01:37] <scott_gonzalez> rworth: Why are there duplicate names?
[08:01:56] <rworth> http://api.jquery.com/category/effects/custom-effects/
[08:02:08] <scott_gonzalez> nacin: I'm avoiding ids because that would be really painful for developers to list in their metadata.
[08:02:57] <nacin> scott_gonzalez: no need to use IDs in the XML stored in git, it would just be part of the import process
[08:03:29] <nacin> rworth: where is the duplicate name, exactly?
[08:03:43] <rworth> looks like the duplicate is custom-selectors which doesn't have any posts
[08:03:44] <scott_gonzalez> rworth: We can switch to slugs, it just means that we'll need to require slugs for every term.
[08:04:07] <scott_gonzalez> It also means that the author needs to know the limitations of the slugs.
[08:04:19] <rworth> can we just require a slug in the case of a duplicate, or do you now want to complicate things that much?
[08:04:39] <scott_gonzalez> rworth: I don't want to duplicate the logic for generating slugs in node.
[08:04:41] <rworth> hmm, I guess we don't want that inconsistency in how they're specified
[08:04:45] <rworth> in any case
[08:05:48] <rworth> I think requiring slugs is reasonable. It beats relying on the system for the generation of the url
[08:06:04] <scott_gonzalez> We can require slugs and limit them to [a-z-]
[08:06:09] <rworth> and I sure like linking posts to categories in the xml using slugs rather than category name
[08:06:33] <rworth> a-z0-9.-
[08:06:47] <scott_gonzalez> ok
[08:06:54] <rworth> ex http://api.jquery.com/category/version/1.0/
[08:07:17] <scott_gonzalez> a-z0-9._-
[08:07:27] <scott_gonzalez> not sure when we'd use an underscore, but seems reasonable.
[08:07:55] <rworth> yeah (though my preference is away from it)
[08:07:56] <nacin> the current jquery-slugs code does not make an exception for underscores, IIRC
[08:08:14] <scott_gonzalez> Ok, I'll keep underscore out then.
[08:08:18] <nacin> which means it is not used anywhere on the current site
[08:08:25] <rworth> cool
[08:08:33] <scott_gonzalez> If it's not accepted by default, might as well leave it out
[08:09:00] <rworth> Ok, I'll update the xml and the build task. thanks
[08:49:38] <scott_gonzalez> rworth: Using slugs means that for terms that aren't predefined, the slug has to match the title.
[08:50:10] <scott_gonzalez> That's probably fine, right?
[08:50:16] <scott_gonzalez> The only case we had for that was keywords.
[08:50:22] <rworth> is that lowercased and spaces replaced with hyphens?
[08:50:48] <scott_gonzalez> I guess spaces -> hyphens, but not lowercase
[08:51:09] <scott_gonzalez> Do we have multi-word keywords?
[08:51:20] <scott_gonzalez> I guess we would
[08:51:37] <scott_gonzalez> Though, you can just predefine them if you need to.
[08:51:41] <rworth> right
[08:53:02] <scott_gonzalez> Maybe termSlugs: [ ... ], termNames: [ ... ]
[08:53:22] <scott_gonzalez> termSlugs is for predefined, termNames is for dynamically generated.
[08:53:22] <rworth> yeah
[08:53:32] <scott_gonzalez> I need to preprocess termSlugs, but not termNames.
[09:01:36] <rworth> can we specify a hierarchical slug, or are we sticking with they have to be unique, even as children of different parents?
[09:04:20] <scott_gonzalez> They have to be unique within the taxonomy.
[09:04:29] <rworth> ok
[09:06:17] <scott_gonzalez> Do we need the hierarchy?
[09:06:27] <scott_gonzalez> We can do it, it's just gonna be more code.
[09:06:42] <scott_gonzalez> And then you'll always need to specify the hierarchy.
[09:06:54] <rworth> if we can do it, it might be nice. It would allow for /effects/custom and well as /events/custom
[09:07:17] <rworth> and alway's specifying the hierarchy seems better than the ambiguity of only specifying a unique child
[09:07:36] * scott_gonzalez rage quits
[09:07:44] <rworth> plus, it matches the url you might use in an anchor, at least the part after the taxonomy slug
[09:07:59] <rworth> ex. <a href="/category/effects/custom">...
[09:47:04] <toddparker> Hi guys - agenda for today's mobile call. I switched to Google docs to make this easier for everyone to jump in
[09:47:06] <toddparker> https://docs.google.com/document/d/1xiJPR3oGU4uhqkWpvGXHNtAwmVPBpSvA4-ZRhRh7k6Q/edit?pli=1
[10:22:41] <scott_gonzalez> rworth: http://github.com/scottgonzalez/grunt-wordpress/commit/HEAD
[10:22:41] <socialhapy> ★ Commit on grunt-wordpress by scottgonzalez (2h, 31m ago): Rework directory structure. Now expects /taxonomies.json and /posts/<post_type>/<post>.
[10:22:57] <scott_gonzalez> let's try that again after a push...
[10:23:00] <scott_gonzalez> rworth: http://github.com/scottgonzalez/grunt-wordpress/commit/HEAD
[10:23:01] <socialhapy> ★ Commit on grunt-wordpress by scottgonzalez (30.398s ago): Handle child terms with the same slug, but different parents.
[11:00:52] <toddparker> hangout: https://plus.google.com/hangouts/_/5a69651d14ada55ccb7e5dc15809dce43ac50741
[12:51:29] <scott_gonzalez> HAHAHA, someone just filed a bug that the link to the 1.8.20 themes is wrong, because they have an extra "0".
[13:09:08] <kborchers> scott_gonzalez: lol
[13:26:21] <scott_gonzalez> BOOM! https://bugzilla.mozilla.org/show_bug.cgi?id=561664
[13:26:44] <scott_gonzalez> gnarf: All you gotta do is nudge them a bit.
[13:26:47] <scott_gonzalez> That was actually pretty fast.
[13:27:02] <scott_gonzalez> I pinged Olli directly.
[13:32:17] <scott_gonzalez> focusedContent->FindFirstNonNativeAnonymous()
[13:33:00] <scott_gonzalez> I'm going to start refering to elemetns as non-native-anonymous elements.
[14:29:24] <gnarf> scott_gonzalez: heh
[14:29:56] <gnarf> scott_gonzalez: can we detect these non-native-anonymous elements?
[14:30:00] <gnarf> before they are removed?
[14:30:05] <scott_gonzalez> nope
[14:30:09] <gnarf> right above the .wrap() it's still in the DOM
[14:30:47] <scott_gonzalez> We can detect the anonymous element, but not the associated non-native-anonymous (real) element.
[14:31:02] <scott_gonzalez> You can detect that the element is anonymous by trying to access any property on it.
[14:31:06] <scott_gonzalez> It will throw.
[14:31:40] <scott_gonzalez> But there's no equivalent to FindFirstNonNativeAnonymous() in JS.
[14:32:04] <gnarf> crazy
[14:33:04] <gnarf> to think that bug has been in the repo since 2010 and noone else tried to fix it yet
[14:36:34] <scott_gonzalez> The odd thing is it was fixed by the person who filed it.
[14:36:48] <scott_gonzalez> He was probably busy with something else when he filed it and then forgot about it.
[14:41:24] <scott_gonzalez> gnarf: Confirmed it's impossible to do anything.
[14:41:53] <scott_gonzalez> Do you want to put together a patch that just does something like: try { active.id } catch( e ) {}
[14:42:14] <scott_gonzalez> I can patch it if you want.
[14:57:23] <gnarf> scott_gonzalez: if you could that would be great - busy day at work today
[14:59:00] <scott_gonzalez> ok
[15:01:58] <scott_gonzalez> Well, the good news is that on July 17th we should be able to delete our workaround.
[15:02:20] <scott_gonzalez> Assuming the tests pass on Mozilla's tryserver.
[15:02:33] <scott_gonzalez> The patch was already reviewed.
[17:48:04] <clarkbox> are we not testing in FF10 anymore?
[17:49:52] <clarkbox> shouldnt we keep it around since its the ESR?
[17:50:00] <clarkbox> 10.0.4esr to be specific
[20:15:43] <Krinkle> clarkbox: hm. ESR?
[20:16:17] <Krinkle> clarkbox: either way, the line we've been following on Firefox so far in TestSwarm is legacy + latest + prev (3.6, X, Y)
[20:16:36] <Krinkle> so when 12 went stable, 10+11 became 11+12
[20:19:15] <Krinkle> but set popular=1 for ff10 in testswarm and we'll test it again
[20:19:18] <Krinkle> I have no objections
