[02:52:37] <jquicommit> [jquery-ui] jzaefferer pushed 1 new commit to master: http://git.io/um3ZHQ
[02:52:37] <jquicommit> [jquery-ui/master] Update node-testswarm to 0.2.2 - Jörn Zaefferer
[03:08:59] <jq-jenkins> Project jQuery UI build #387: STILL FAILING in 16 min: http://swarm.jquery.org:8080/job/jQuery%20UI/387/
[03:08:59] <jq-jenkins> joern.zaefferer: Update node-testswarm to 0.2.2
[03:19:34] <jquicommit> [jquery-ui] jzaefferer pushed 2 new commits to master: http://git.io/abLlSg
[03:19:34] <jquicommit> [jquery-ui/master] Grunt: Cleanup testswarm task, increase timeout to 20 minutes (until BrowserStack queue is increased) - Jörn Zaefferer
[03:19:34] <jquicommit> [jquery-ui/master] Position: Apply IE6 line-height workaround to deprecated tests, too - Jörn Zaefferer
[03:54:29] <jq-jenkins> Project jQuery UI build #388: STILL FAILING in 21 min: http://swarm.jquery.org:8080/job/jQuery%20UI/388/
[03:54:29] <jq-jenkins> * joern.zaefferer: Grunt: Cleanup testswarm task, increase timeout to 20 minutes (until BrowserStack queue is increased)
[03:54:30] <jq-jenkins> * joern.zaefferer: Position: Apply IE6 line-height workaround to deprecated tests, too
[04:19:29] <jzaefferer> Aw man, timed out again, even though ITS ALL GREEN: http://swarm.jquery.org/job/41
[06:04:48] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/IVzJRg
[06:04:48] <jquicommit> [jquery-ui/master] Sortable: Moved change of helper position css. Fixed #5321 – Helper in a bottom-positioned Sortable is positioned wrong on drag start. - martinf55
[06:05:35] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/Eo6icQ
[06:05:35] <jquicommit> [jquery-ui/1-8-stable] Sortable: Moved change of helper position css. Fixed #5321 – Helper in a bottom-positioned Sortable is positioned wrong on drag start. - martinf55
[06:26:51] <jq-jenkins> Project jQuery UI build #389: STILL FAILING in 21 min: http://swarm.jquery.org:8080/job/jQuery%20UI/389/
[06:26:51] <jq-jenkins> Scott González: Sortable: Moved change of helper position css. Fixed #5321 ��� Helper in a bottom-positioned Sortable is positioned wrong on drag start.
[06:45:44] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/2myOqw
[06:45:44] <jquicommit> [jquery-ui/master] Dialog: Handle escape for all overlays. Fixes #8300 - Dialog: Incorrect behavior for ESCAPE with multiple modal dialogs. - Jay Merrifield
[06:45:57] <jq-jenkins> Project jQuery UI build #390: STILL FAILING in 9.5 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/390/
[06:45:57] <jq-jenkins> Scott González: Dialog: Handle escape for all overlays. Fixes #8300 - Dialog: Incorrect behavior for ESCAPE with multiple modal dialogs.
[06:50:21] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/Gn1x6g
[06:50:21] <jquicommit> [jquery-ui/1-8-stable] Autocomplete combobox demo: Define this.wrapper for use inside destroy(). - Scott González
[06:54:10] <jzaefferer> scott_gonzalez: http://swarm.jquery.org:8080/job/jQuery%20UI/390/console
[06:54:24] <jzaefferer> you should set up `grunt lint` in a pre-commit hook :-)
[06:54:33] <scott_gonzalez> :-(
[06:54:43] <scott_gonzalez> I'll add that.
[06:54:58] <scott_gonzalez> Actually, that would be hell for 1-8-stable.
[06:55:05] <scott_gonzalez> Can it be branch-specific?
[06:55:27] <scott_gonzalez> Or I guess we could just make 1-8-stable not run most files through lint.
[06:57:31] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/jIYiOw
[06:57:31] <jquicommit> [jquery-ui/master] Dialog: Removed trailing whitespace. - Scott González
[07:18:34] <jq-jenkins> Project jQuery UI build #391: STILL FAILING in 21 min: http://swarm.jquery.org:8080/job/jQuery%20UI/391/
[07:18:35] <jq-jenkins> Scott González: Dialog: Removed trailing whitespace.
[07:33:01] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/2Cif6Q
[07:33:01] <jquicommit> [jquery-ui/master] Effects: Check for anonymous content being exposed via document.activeElement. Fixes #8288 - Regression: jquery-ui animations focus fix causes Firefox Security Manager veto. - Scott González
[07:34:35] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/GJ8gFQ
[07:34:35] <jquicommit> [jquery-ui/1-8-stable] Effects: Check for anonymous content being exposed via document.activeElement. Fixes #8288 - Regression: jquery-ui animations focus fix causes Firefox Security Manager veto. - Scott González
[07:56:18] <jq-jenkins> Project jQuery UI build #392: STILL FAILING in 21 min: http://swarm.jquery.org:8080/job/jQuery%20UI/392/
[07:56:18] <jq-jenkins> Scott González: Effects: Check for anonymous content being exposed via document.activeElement. Fixes #8288 - Regression: jquery-ui animations focus fix causes Firefox Security Manager veto.
[11:06:01] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/djHNBA
[11:06:01] <jquicommit> [jquery-ui/master] grunt.js testswarm task: shorten job name - Timo Tijhof
[11:27:21] <jq-jenkins> Project jQuery UI build #393: STILL FAILING in 21 min: http://swarm.jquery.org:8080/job/jQuery%20UI/393/
[11:27:22] <jq-jenkins> Scott González: grunt.js testswarm task: shorten job name
[11:30:03] <scott_gonzalez> nacin: Does the XML-RPC server convert the array or args to a primitive if there's only one arg?
[11:30:34] <nacin> Doubtful. Example?
[11:32:39] <scott_gonzalez> I just updated node-wordpress to support non-authenticated calls.
[11:32:57] <scott_gonzalez> So I'm switching getPostPaths to not use auth.
[11:33:18] <scott_gonzalez> But now $args is a string instead of an array.
[11:34:00] <scott_gonzalez> Do you know if this looks correct?
[11:34:01] <scott_gonzalez> <?xml version="1.0"?><methodCall><methodName>gw.getPostPaths</methodName><params><param><value><string>any</string></value></param></params></methodCall>
[11:34:46] <scott_gonzalez> Seems correct to me.
[11:35:30] <scott_gonzalez> If I add a second param to my call, I get this (which comes through as an array):
[11:35:32] <scott_gonzalez> <?xml version="1.0"?><methodCall><methodName>gw.getPostPaths</methodName><params><param><value><string>hi</string></value></param><param><value><string>any</string></value></param></params></methodCall>
[11:36:01] <scott_gonzalez> The two demo methods use 0 and 2 params, so I can't test against those :-P
[11:36:26] <nacin> taking a closer look now.
[11:37:25] <nacin> scott_gonzalez: and so does getPostPaths accept $args and look in $args[0]?
[11:37:30] <nacin> Cause that would make the most sense to me.
[11:37:54] <scott_gonzalez> Yeah, the problem I'm running into is that $args is coming through as a string instead of an array.
[11:38:01] <scott_gonzalez> But only if I pass exactly one param.
[11:38:15] <scott_gonzalez> If I pass 2+, then it properly comes through as an array.
[11:40:03] <scott_gonzalez> Found it.
[11:40:20] <scott_gonzalez> Line 427 of class-IXR.php
[11:40:32] <nacin> Yep.
[11:40:53] <scott_gonzalez> Ok, I'll update it to expect a string.
[12:00:36] <scott_gonzalez> nacin: We had an idea to solve the issue of non-post resources such as images.
[12:00:43] <nacin> oh?
[12:00:59] <scott_gonzalez> We can create another XML-RPC method that takes a pathname and raw file data.
[12:01:14] <scott_gonzalez> It'll essentially be a direct upload of a the file.
[12:02:00] <scott_gonzalez> Then we can have paths like "/resources/foo.jpg"
[12:02:14] <scott_gonzalez> And that could work for local previes of the dist directory and published sites.
[12:03:16] <scott_gonzalez> https://github.com/scottgonzalez/grunt-wordpress#directory-structure
[12:03:34] <nacin> scott_gonzalez: sounds good. there are existing methods to upload things I think. For a custom method, look into media_handle_sideload().
[12:03:50] <nacin> and and media_sideload_image()
[12:04:20] <nacin> scott_gonzalez: looking at your ticket, which documentation are you referring to? Inline docs, or codex?
[12:05:01] <scott_gonzalez> Ugh, I meant to include the link.
[12:05:02] <scott_gonzalez> codex
[12:05:32] <scott_gonzalez> http://codex.wordpress.org/XML-RPC_Extending
[12:06:07] <nacin> thanks
[12:06:39] <scott_gonzalez> heh, you beat me to updating the ticket :-)
[12:09:19] <nacin> :)
[12:16:01] <scott_gonzalez> I don't think we need any of the logic from media_handle_sideload().
[12:16:17] <scott_gonzalez> We're just looking to write out the raw binary data to disk.
[12:17:00] <nacin> Seems fine.
[12:17:26] <nacin> Though I want to say XML-RPC already has a method for that. Again, perhaps with more logic than needed.
[12:19:04] <scott_gonzalez> I'll check what exists.
[12:19:48] <scott_gonzalez> wp.uploadFile?
[12:22:28] <scott_gonzalez> I'm not against using attachments if they can be arbitrary types and we can do the URL rewrites.
[12:26:48] <scott_gonzalez> nacin: Are attachments stored on disk or in the DB?
[12:27:06] <nacin> both. files on disk, metadata in the db.
[12:27:21] <scott_gonzalez> I must be missing the part where the file actually gets written to disk.
[12:28:14] <nacin> the method that wp.uploadFile calls, calls wp_upload_bits()
[12:28:33] <nacin> Which takes the data and writes to disk.
[12:28:40] <scott_gonzalez> ah, ok. I was looking at wp_insert_attachment()
[12:28:48] <nacin> Yeah, That's the DB part.
[12:29:01] <scott_gonzalez> SO AWEOMSE: @param null $deprecated Never used. Set to null.
[12:29:16] <scott_gonzalez> Also awesome is my inability to type...
[12:29:45] <nacin> Ah yes, PHP's argument order.
[12:29:55] <scott_gonzalez> I think I need a typewriter so that the keys will stick before I type too fast :-)
[12:32:28] <scott_gonzalez> Looks like we can probably use wp_upload_bits() :-)
[12:57:49] <scott_gonzalez> nacin: Can a pre_option hook not set the value to false?
[12:58:12] <nacin> it can set the value to 0 or null, which is generally going to be the same effect.
[12:58:32] <nacin> false is the default value of the filter. so if it remains false, no short-circuit occurs.
[12:58:35] <scott_gonzalez> ok
[12:58:43] <nacin> If I had my way, it would have been null, but that filter is probably 6 years old.
[13:04:07] <scott_gonzalez> I'm not seeing where the file is being decoded in mw_newMediaObject
[13:06:12] <scott_gonzalez> It's passing the bits directly to wp_upload_bits()
[14:01:39] <scott_gonzalez> nacin: How does this look? https://gist.github.com/489258738c82c355db85
[14:02:24] <nacin> scott_gonzalez: I see, you require that decoding?
[14:03:08] <scott_gonzalez> Well, I want to have files that can be served directly.
[14:03:15] <scott_gonzalez> Is that not how normal uploads work?
[14:03:40] <nacin> uploads via mw.newMediaObject can still be served directly without any issue
[14:04:27] <scott_gonzalez> How does that work?
[14:04:35] <nacin> simple URL of the image?
[14:05:14] <scott_gonzalez> I mean how does it work if they're encoded?
[14:07:07] <nacin> I think I am just confused what your goals are.
[14:11:14] <scott_gonzalez> Ok, let's start from the beginning.
[14:11:24] <scott_gonzalez> We'll have posts with references to static resources.
[14:11:33] <scott_gonzalez> Like <img src="/resources/foo.jpg">
[14:11:59] <scott_gonzalez> Our solution is to have a /dist/resources directory with all of the static content.
[14:12:15] <scott_gonzalez> I want to just upload all of that content as is, with the exact same directory structure.
[14:13:01] <scott_gonzalez> gw.uploadFile is my attempt at that.
[14:13:25] <scott_gonzalez> It's working, I just wanted to make sure it didn't seem crazy to you, and that I wasn't missing anything.
[14:13:37] <scott_gonzalez> Like "oh, when the user turns on X, this whole thing will blow up."
[14:15:17] <nacin> I got it.
[14:15:35] <nacin> So… Why not just git pull the resources onto the individual drives?
[14:17:34] <scott_gonzalez> hmm...
[14:17:57] <scott_gonzalez> rworth: ^
[14:19:00] <nacin> obviously you can't clone a directory within a repo, but you could do an rsync, or any number of things
[14:19:07] <scott_gonzalez> I'm not actually sure, but I assume we're cloning the repos onto the web servers and deploying locally anyway.
[14:19:11] <nacin> just seems easier. if you're going to manage binary data and just want to serve it, makes sense
[14:19:14] <rworth> the problem with that is our publishing model is not git pull of a content repo
[14:19:51] <scott_gonzalez> What is the model? It's `git pull && grunt wordpress-deploy` somewhere.
[14:19:56] <scott_gonzalez> Is that somewhere not the web server?
[14:20:13] <rworth> it is, but it's only a WordPress server with XML-RPC turned on
[14:20:25] <rworth> it's not a server with a git clone of the same tree you have locally
[14:20:48] <scott_gonzalez> How is `git pull` not going to produce the same thing?
[14:20:51] <rworth> those resource files could even be the result of a build process
[14:21:03] <rworth> ^^
[14:21:37] <scott_gonzalez> Which has to run on the server at the time of deployment.
[14:21:56] <nacin> Stepping away for a bit.
[14:22:15] <rworth> seems quite a hefty requirement to put on a local server or a staging server
[14:22:32] <scott_gonzalez> What's a hefty requirement?
[14:24:03] <rworth> the the resources can only make it to the target server via git, where posts (and all their metadata) can make it there by putting them in the dist folder
[14:25:03] <gnarf> the git repo for each site is (currently) not cloned on the wp server
[14:25:12] <rworth> right
[18:22:44] <scott_gonzalez> nacin: I've implemented full CRUD for resources: https://gist.github.com/489258738c82c355db85 Is there anything special I need to do for multisite?
[18:23:01] <scott_gonzalez> Specifically, the TODO on line 3.
[18:25:10] <nacin> looking
[18:25:46] <nacin> scott_gonzalez: the issue is that you're not keying things by domain, but everything gets served from one directory
[18:27:03] <scott_gonzalez> I wasn't sure if WP_CONTENT_DIR would be site-specific. I had a feeling it wasn't :-)
[18:28:35] <scott_gonzalez> So I need to use get_option( 'siteurl' ) and just throw that into the path?
[18:29:29] <scott_gonzalez> I don't really undersatnd the $main_override stuff in wp_upload_dir().
[18:30:00] <scott_gonzalez> Is that using $siteurl for all sites except the main site?
[18:30:30] <scott_gonzalez> I didn't even realize there was the concept of a main site in a multisite :-P
[23:18:53] <nacin> ?tell scott_gonzalez When setting up a multisite, the first site is going to be in wp-content/uploads, and the rest in blogs.dir. Hence $main_override. WP_CONTENT_DIR would not be site-specific. WP_CONTENT_URL (or rather, content_url()) would be. So I would do /resources/HTTP_HOST. Note that if you plan to have multiple app servers at one point, you may want to consider a separate VPS purely for serving static images, or an NFS mount 
[23:18:54] <bot-t> nacin, Okay.
