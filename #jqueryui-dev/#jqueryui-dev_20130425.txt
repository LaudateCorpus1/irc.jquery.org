[02:21:31] <doesallmagic> Project jQuery UI - git core build #382: STILL FAILING in 7 min 16 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/382/
[02:21:40] <doesallmagic> Project jQuery UI 1-9-stable - git core build #169: STILL FAILING in 8.3 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/169/
[02:46:19] <doesallmagic> Project jQuery UI - 1.6.x core build #277: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/277/
[03:16:14] <doesallmagic> Project jQuery UI - 1.7.x core build #279: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/279/
[03:37:36] <gs500e> Hi develpers
[03:46:19] <doesallmagic> Project jQuery UI - 1.8.x core build #254: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/254/
[05:01:22] <scott_gonzalez> Is it troll week or something?
[05:01:27] <scott_gonzalez> http://bugs.jqueryui.com/ticket/9253
[05:15:34] <kborchers> scott_gonzalez: "But how does it affect datepicker??" o_O
[05:15:49] <scott_gonzalez> I want to reply "Who the fuck cares? It's invalid and now it's broken."
[05:15:55] <kborchers> right
[05:16:01] <scott_gonzalez> But instead I'm just not going to respond.
[05:18:28] <kborchers> scott_gonzalez: i think my favorite part is how they are setting the id via attr() after initializing the datepicker too :D  it would work just fine if they didn't do that
[05:18:47] <scott_gonzalez> Yeah, what would be the purpose of doing that?
[05:18:55] <kborchers> no idea
[05:23:57] <scott_gonzalez> tj_vantoll kborchers jzaefferer anyone else: http://cl.ly/image/30293d2a3O3b
[05:24:07] <scott_gonzalez> kswedberg: ^
[05:25:02] <tj_vantoll> scott_gonzalez I prefer that but the <note> tag was stripping <code> tags.
[05:25:55] <scott_gonzalez> tj_vantoll: Yeah, I had to add some code to grunt-jquery-content to make it work.
[05:26:03] <kswedberg> scott_gonzalez: not sure what I'm looking at
[05:26:27] <scott_gonzalez> kswedberg: Wording variation for a note on api.jqueryui.com
[05:26:55] <kswedberg> they both look accurate to me, but I prefer the bottom variation.
[05:26:55] <kborchers> i prefer the second one i think
[05:26:59] <tj_vantoll> Excellent.  While you're at it:
[05:26:59] <tj_vantoll> "This widget manipulates its element's value programmatically, therefore a native change event may not be fired when the element's value changes."
[05:26:59] <tj_vantoll> I wanted <code></code> around "change" in that one as well.
[05:27:13] <scott_gonzalez> tj_vantoll: Ok, I'll add that too.
[05:34:41] <reqq> Greetings. Is there any plans to include the possibility of bigger icons in the future? Like 20x20 and 32x32 sets by using CSS classess ui-icon-32 instead of ui-icon. I don't think this is impossible and I recon it would be a welcomed addition for many. The  progress at http://wiki.jqueryui.com/w/page/26308090/ThemeRoller-icon-set seems to have grinded to a halt. 
[05:41:18] <scott_gonzalez> reqq: We're investigating how to move forward with icons.
[05:41:26] <scott_gonzalez> The state of icons on the web is a total mess.
[05:41:34] <scott_gonzalez> Nobody has a decent solution for this right now.
[05:42:00] <scott_gonzalez> And we're trying to avoid picking a crippled solution that will just need to be changed again in a year or two.
[05:42:39] <scott_gonzalez> FWIW, we're investigating all possibilities to figure out what the landscape really looks like.
[05:42:50] <scott_gonzalez> For example: http://temp.nemikor.com/icon-test/ (WebKit only)
[05:43:07] <scott_gonzalez> View source and look at lines 40 and 41.
[05:43:23] <scott_gonzalez> Not sure how far we can go with polyfills and fallbacks for this approach though.
[05:43:43] <scott_gonzalez> But at some point that will be valid HTML and a workable solution.
[05:43:51] <scott_gonzalez> It's not clear when "some point" is though :-/
[05:46:48] <reqq> scott_gonzalez: Icons are indeed a challenge, at one point I thought of using the icon font method, but it just seemed too complicated compared to using a stable framework like jqueryUI
[05:48:06] <scott_gonzalez> It's a bit complicated, plus it presents accessibility challenges, since you end up with a random character in your markup (usually through generated content).
[05:48:54] <reqq> Indeed.
[05:49:07] <reqq> Thanks for the info in any case! The page I linked to can be found high on Google when searching for this stuff, your answers could server a larger audience there instead of just myself, how about adding them as a comment?
[05:54:01] <scott_gonzalez> reqq: I'm going to be creating a GitHub repo to track all of this.
[05:54:08] <scott_gonzalez> And I'll link to it from the wiki page.
[05:54:25] <scott_gonzalez> This <ui-icon> test is brand new. I just created it a few days ago.
[05:54:28] <b-ot> scott_gonzalez: No output.
[05:54:46] <scott_gonzalez> hmm...what was b-ot responding to?
[05:55:13] <scott_gonzalez> foo <ui-icon> bar
[05:55:15] <b-ot> scott_gonzalez: No output.
[05:55:19] <scott_gonzalez> heh
[05:55:22] <scott_gonzalez> a <b> c
[05:55:35] <scott_gonzalez> a <b-c> d
[05:55:37] <b-ot> scott_gonzalez: No output.
[05:55:42] <scott_gonzalez> <a-b>
[05:55:55] <scott_gonzalez> hmm...
[05:55:56] <scott_gonzalez> 1+2
[05:56:09] <scott_gonzalez> What the hell is b-ot trying to parse?!?
[05:56:27] <tj_vantoll> a <b-c>
[05:56:31] <tj_vantoll> <a-b> c
[05:56:35] <scott_gonzalez> kborchers ajpiano gnarf: ^
[05:57:08] <kborchers> 3 < 4
[05:57:13] <kborchers> wierd
[05:57:39] <kborchers> x <> y
[05:59:40] <gnarf> c> writeln('test');
[05:59:43] <b-ot> gnarf: No output.
[05:59:48] <gnarf> js> print('hah');
[05:59:51] <b-ot> gnarf: hah 
[06:00:07] * gnarf shrugs
[06:00:08] <b-ot> gnarf: Â¯\_(ãƒ„)_/Â¯
[06:00:16] <gnarf> i want to turn that one off
[06:00:24] <gnarf> and replace it with a better eval anyway
[06:01:08] <scott_gonzalez> oh, interesting
[06:01:27] <scott_gonzalez> js> console
[06:01:30] <b-ot> scott_gonzalez: No output.
[06:01:53] <scott_gonzalez> So is this some made up API that contains print()?
[06:01:57] <scott_gonzalez> js> print
[06:01:59] <b-ot> scott_gonzalez: No output.
[06:02:11] <scott_gonzalez> js> console.log( "test" )
[06:02:14] <b-ot> scott_gonzalez: No output.
[06:02:17] <kborchers> heh
[06:02:28] <scott_gonzalez> js> .1 + .2
[06:02:31] <b-ot> scott_gonzalez: No output.
[06:02:35] <scott_gonzalez> I give up
[06:03:50] <reqq> : D the command parser behind that thing must be an interesting read
[06:07:30] <jquicommit> [13jquery-ui] 15netzaffin opened pull request #966: Bugfix: Datepicker tries to get an instance when he should not (06master...06master)  02http://git.io/Dn8N4A
[06:19:50] <petersendidit> scott_gonzalez: in the menu code we apply ui_corner-all to the <a> tag in a menu item
[06:20:06] <scott_gonzalez> :-/
[06:20:07] <petersendidit> it current doesn't have any other ui-menu classes applyed to it
[06:20:16] <scott_gonzalez> I never really liked the way that worked.
[06:20:25] <scott_gonzalez> Let's skip it for now, just add a comment on the PR.
[06:20:42] <petersendidit> Add a note in the code too?
[06:20:54] <scott_gonzalez> sure
[06:37:27] <petersendidit> any ideas on handling buttonsets rtl direction stuff
[06:38:00] <scott_gonzalez> Let me look.
[06:38:04] <petersendidit> add ui-buttonset-ltr and ui-buttonset-rtl? so the ui-corner-* classes can be on it?
[06:38:56] <petersendidit> and it removes ui-corner-all from button, which is aqward in this new setup
[06:40:11] <scott_gonzalez> Yeah, this is awkward.
[06:40:47] <petersendidit> yup
[06:41:24] <scott_gonzalez> So the sane way to handle this (sane being never using .ui-corner-*) would be:
[06:41:32] <scott_gonzalez> .ui-button { border-radius: 5px; }
[06:41:43] <scott_gonzalez> .ui-buttonset .ui-button { border-radius: 0; }
[06:41:59] <scott_gonzalez> .ui-buttonset-rtl .ui-button:first { border-radius: ... }
[06:42:00] <scott_gonzalez> right?
[06:42:25] <petersendidit> yea
[06:42:29] <petersendidit> that seems more logical
[06:42:40] <petersendidit> and means that javascript isn't doing the logic for styling
[06:43:10] <scott_gonzalez> Right, the problem is that we don't want to put border-radius rules into button.css.
[06:43:16] <petersendidit> ;-)
[06:43:24] <scott_gonzalez> Because that's supposed to be purely functional.
[06:43:47] <scott_gonzalez> So this is a place where ui-corner would still be an issue.
[06:43:53] <petersendidit> yup
[06:44:14] <petersendidit> for now I can just add a comment to the code and to the pr and we can deal with it later
[06:44:31] <scott_gonzalez> ok
[06:46:26] <scott_gonzalez> Heh, I just had a crazy thought.
[06:46:34] <scott_gonzalez> I don't like it though.
[06:46:48] <scott_gonzalez> "add me -but -not -me"
[06:47:20] <scott_gonzalez> Let's not even think about that right now.
[06:48:06] <tj_vantoll> I do think we need some better API for adding classes than what we have right now if we're going to eventually remove dialogClass, tooltipClass, etc...
[06:49:54] <petersendidit> The _classes change should replace both of those
[06:50:21] <scott_gonzalez> Yeah, assuming we can figure out how to get around these hurdles.
[06:52:23] <tj_vantoll> petersendidit Right, I'm just saying that this isn't very elegant:
[06:52:23] <tj_vantoll> $( "#dialog" ).dialog({
[06:52:23] <tj_vantoll>     classes: {
[06:52:23] <tj_vantoll>         "ui-dialog": "custom-class" + $.ui.dialog.prototype._classes( "ui-dialog" )
[06:52:24] <tj_vantoll>     }
[06:52:24] <tj_vantoll> });
[06:53:15] <scott_gonzalez> tj_vantoll: But it'll be null to begin with.
[06:53:50] <tj_vantoll> What would?
[06:53:58] <petersendidit> In some cases it would but not all
[06:54:01] <scott_gonzalez> classes[ "ui-dialog" ]
[06:54:29] <scott_gonzalez> tj_vantoll: We removed the ui-widget* classes from the option.
[06:54:30] <petersendidit> right now ui-dialog has ui-corner-all
[06:54:44] <scott_gonzalez> oh, right...
[06:55:16] <tj_vantoll> And you wouldn't want to remove "ui-dialog" probably either.  The use case of dialogClass is just adding a class.
[06:55:57] <tj_vantoll> And I think that's a far more common thing people would want to do than customizing the classes the framework uses.
[06:56:07] <tj_vantoll> So ideally we wouldn't make that harder.
[06:56:23] <scott_gonzalez> Well, it's already pretty easy without the option.
[06:56:33] <tj_vantoll> True
[06:56:35] <scott_gonzalez> elem.dialog().dialog( "widget" ).addClass( ... )
[06:56:54] <scott_gonzalez> Assuming you just want this on a single instance.
[06:57:03] <scott_gonzalez> If you're doing this for all instances, the classes option is easy to use.
[06:57:07] <scott_gonzalez> Because you do it once.
[06:57:17] <scott_gonzalez> So even if you had to change it over time for new releases, it's not hard.
[06:57:27] <scott_gonzalez> You can even write the long form and it'd be short
[06:59:15] <scott_gonzalez> Or we can just change ThemeRoller to inject the corner classes on the appriorate selectors.
[06:59:24] <scott_gonzalez> And stop using ui-corner in our widgets.
[06:59:34] <tj_vantoll> Yeah I agree.  I still think it would be nice to have some syntax sugar to make adding an additional class to the existing list easier.  But I don't have any good ideas on how to do that though :)
[06:59:40] <scott_gonzalez> Wow, I really butchered that word.
[07:00:14] <scott_gonzalez> It's a good thing I don't talk as poorly as I type.
[07:01:40] <scott_gonzalez> The problem with not having a preprocessor is that no 3rd party widgets can inline border-radius.
[07:54:33] <petersendidit> https://github.com/jquery/jquery-ui/pull/790
[07:54:40] <petersendidit> should have all the widgets using _classes now
[08:00:00] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/mXRY6w
[08:00:00] <jquicommit> 13jquery-ui/06master 14947d738 15Scott GonzÃ¡lez: Autocomplete: Refactored _response() so that requestIndex is defined closer to where it's used.
[08:06:21] <doesallmagic> Project jQuery UI build #1084: STILL FAILING in 6 min 19 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/1084/
[08:06:22] <doesallmagic> Scott GonzÃ¡lez: Autocomplete: Refactored _response() so that requestIndex is defined closer to where it's used.
[08:06:27] <doesallmagic> Project jQuery UI Selectmenu build #83: STILL FAILING in 5.5 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Selectmenu/83/
[08:14:08] <Krinkle> Warning: Task "junit" not found. Use --force to continue. 
[08:14:38] * Krinkle removes it from the jenkins job confguration for that job
[08:15:01] * Krinkle points out that this is why we want to maintain this in gruntfile.js under an alias instead of hardcoding it in jenkins, also makes it easier to use locally
[08:15:12] <doesallmagic> Project jQuery UI Selectmenu build #84: STILL FAILING in 0.81 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Selectmenu/84/
[08:16:38] <doesallmagic> Project jQuery UI Selectmenu build #85: STILL FAILING in 0.32 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Selectmenu/85/
[08:16:43] <Krinkle> wtf
[08:17:09] <Krinkle> cannot alocate memoery
[09:59:03] <doesallmagic> Project jQuery UI build #1085: STILL FAILING in 1.4 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/1085/
[09:59:17] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/asxtEQ
[09:59:17] <jquicommit> 13jquery-ui/06master 14cc37843 15Scott GonzÃ¡lez: Position demo: Fixed usage of center positioning.
[10:17:55] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/jiMqNw
[10:17:55] <jquicommit> 13jquery-ui/06master 14f5f0879 15Jason Moon: Autocomplete: Don't prevent keypress for multiline. Fixed #8911 - Autocomplete: Unable to use up/down arrow keys in a textarea (Firefox).
[10:18:40] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 061-10-stable: 02http://git.io/xbCBQw
[10:18:40] <jquicommit> 13jquery-ui/061-10-stable 14c1f7f52 15Jason Moon: Autocomplete: Don't prevent keypress for multiline. Fixed #8911 - Autocomplete: Unable to use up/down arrow keys in a textarea (Firefox)....
[10:25:48] <doesallmagic> Project jQuery UI build #1086: STILL FAILING in 8 min 9 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/1086/
[10:25:48] <doesallmagic> * Scott GonzÃ¡lez: Position demo: Fixed usage of center positioning.
[10:25:49] <doesallmagic> * Scott GonzÃ¡lez: Autocomplete: Don't prevent keypress for multiline. Fixed #8911 - Autocomplete: Unable to use up/down arrow keys in a textarea (Firefox).
[10:26:40] <doesallmagic> Project jQuery UI Mask build #35: STILL FAILING in 50 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Mask/35/
[10:33:10] <doesallmagic> Project jQuery UI Selectmenu build #86: STILL FAILING in 6 min 29 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Selectmenu/86/
[12:49:13] <agcolom> scott_gonzalez: when is a good time for you to help me setup the branches in the api docs? (would monday be ok?)
[13:15:40] <scott_gonzalez> agcolom: Monday is fine.
[13:16:12] <agcolom> perfect! what sort of time is good for you?
[13:16:36] <agcolom> I should be ok from say 8pm my time... 
[13:16:51] <scott_gonzalez> What time is that forme?
[13:19:57] <agcolom> Are you east coast time? 
[13:20:12] <agcolom> (what time is it now for you? it's 9.20pm for me)
[13:20:24] <agcolom> Boston is my time -5h
[13:20:48] <scott_gonzalez> yeah, I'm ET, same as Boston.
[13:20:55] <scott_gonzalez> It's 4:20p for me.
[13:21:02] <scott_gonzalez> 3p Monday works.
[13:24:15] <agcolom> perfect! Thank you!
[13:53:59] <arschmitz> scott_gonzalez or kborchers either of you around?
[14:57:19] <scott_gonzalez> arschmitz: I am now.
[15:03:14] <scott_gonzalez> HAHAHAHAHA http://twitter.com/cpalmatier/status/327523961908903936
[15:03:15] <b-ot> scott_gonzalez: @cpalmatier: setting jqueryUI datepicker options (ht: @jacobsenscott): http://t.co/qxVN1EtSmc
[18:18:35] <kborchers> scott_gonzalez: LOL
