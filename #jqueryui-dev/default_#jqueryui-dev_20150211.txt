[00:03:45] <doesallmagic2> Project jQuery UI - 1.8.x core build #670: STILL UNSTABLE in 7 min 44 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.8.x%20core/670/
[02:07:57] <rxaviers_> gabriel_schulhof, ok thanks
[02:08:09] <rxaviers_> re: "I've just sent an email to the combined list..."
[04:03:39] <jquicommit> [13download.jqueryui.com] 15rxaviers pushed 1 new commit to 06tr-fixes-258: 02http://git.io/NmWT
[04:03:39] <jquicommit> 13download.jqueryui.com/06tr-fixes-258 14875ec73 15Rafael Xavier de Souza: ThemeRoller: Fix 2-column layout...
[04:04:52] <jquicommit> [13download.jqueryui.com] 15rxaviers 04force-pushed 06tr-fixes-258 from 14875ec73 to 140d6ab9a: 02http://git.io/bzWH
[04:04:52] <jquicommit> 13download.jqueryui.com/06tr-fixes-258 140d6ab9a 15Rafael Xavier de Souza: ThemeRoller: Fix 2-column layout...
[04:36:04] <jquicommit> [13download.jqueryui.com] 15jzaefferer opened pull request #260: README: Update instructions for WordPress integration testing (06master...06readme-update) 02http://git.io/Nmgu
[04:45:32] <jquicommit> [13jquery-ui] 15scottgonzalez pushed 1 new commit to 061-11-stable: 02http://git.io/NmVa
[04:45:32] <jquicommit> 13jquery-ui/061-11-stable 148dfc67d 15Scott Gonz√°lez: Build: Update authors list
[04:54:21] <jquicommit> [13download.jqueryui.com] 15jzaefferer closed pull request #260: README: Update instructions for WordPress integration testing (06master...06readme-update) 02http://git.io/Nmgu
[04:58:08] <doesallmagic2> Project download.jqueryui.com build #263: SUCCESS in 4 min 1 sec: http://jenkins.jquery.com/job/download.jqueryui.com/263/
[04:58:09] <doesallmagic2> rxaviers: README: Update instructions for WordPress integration testing
[05:04:52] <jzaefferer> arschmitz: I found a few smallish issues on the classes PR: https://github.com/jquery/jquery-ui/pull/1411 - I can review again today, maybe we can actually finish it this week
[05:06:41] <arschmitz> jzaefferer: just saw yeah i can update that today no problem
[05:06:56] <arschmitz> weird on the tests though because they deffinitly pass local and on travis
[05:07:27] <jzaefferer> well, its not that weird. It takes more than five minutes to run on my local machine, and the page changes don't seem to extend the timeout
[05:07:37] <jzaefferer> so running the whole suite just takes too long
[05:07:43] <arschmitz> ahh gotcha
[05:07:55] <jzaefferer> though some pages like tabs seems to take half a minute, that's not okay
[05:08:11] <arschmitz> is that a change from master though?
[05:09:00] <jzaefferer> doesn't matter here
[05:09:30] <arschmitz> ok so its not like the classes stuff slowed it down 
[05:09:36] <jzaefferer> I don't think so
[05:09:44] <jzaefferer> doing a run on master now
[05:09:48] <arschmitz> just wanted to make sure there was not something crazy going on killing perf
[05:20:04] <jzaefferer> yeah, same issue on master
[05:20:15] <jzaefferer> I'll take a look at the autocomplete and tabs suites some time
[05:20:27] <arschmitz> Ok cool well not really but was not me lol
[05:20:30] <jzaefferer> with the runtime output from QUnit it should be easy to find the culprits
[05:21:03] <jzaefferer> arschmitz: well, you messed up that resizable update. And I didn't notice it at all when reviewing the commit /o\
[05:21:17] <arschmitz> yeah that was me
[05:21:22] <arschmitz> i just mean the slow tests
[05:40:53] <agcolom> arschmitz: gabriel_schulhof: I have found an interesting bug with collapsibles
[05:43:40] <agcolom> Say you have a collapsible next to an element that is floated. the header of the collapsible is by the side of the element, but its content takes full width of the page
[05:43:45] <agcolom> example: http://jsbin.com/cozino/edit
[06:19:49] <doesallmagic2> Project jQuery UI - git core build #828: STILL UNSTABLE in 2 min 29 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/828/
[06:40:07] <arschmitz> agcolom: thats not really a bug thats just how floats work http://jsbin.com/qinatu/1/edit
[06:46:53] <arschmitz> agcolom: this shows it a little better
[06:47:03] <arschmitz> http://jsbin.com/qinatu/2/edit?html,css,js,output
[06:49:44] <arschmitz> agcolom: set a margin on your collapsible to fix it http://jsbin.com/husofu/1/edit
[07:35:14] <arschmitz> jzaefferer: classes is updated with those 3 things
[08:09:55] <jzaefferer> arschmitz: when you update demos, always check the demo description as well; resizable/visual-feedback.html still mentions activeClass; searching for "activeClass" etc. in demos/ helps to find those
[08:10:12] <arschmitz> ill fix it right now
[08:11:45] <jzaefferer> arschmitz: let's delete droppable/shopping-cart.html - I built that, and now I hate it
[08:11:54] <arschmitz> lol ok
[08:12:09] <jzaefferer> the interaction is horrible and makes no sense
[08:20:25] <arschmitz> jzaefferer: scott_gonzalez: just realized the fact that you can set the ghost option to a string in resizable is not documented
[08:21:31] <arschmitz> so do we want to provide backcompat for that?
[08:23:08] <jzaefferer> arschmitz: you've already written the backcompat, right?
[08:23:22] <jzaefferer> I say keep it
[08:23:47] <arschmitz> yup
[08:23:48] <jzaefferer> there's so much stuff for interactions thats underdocumented, removing it all just due to lack of API docs would still be horrible
[08:24:08] <arschmitz> sure just wanted to check 
[08:27:09] <arschmitz> jzaefferer: classes pr is updated
[08:30:26] <jzaefferer> arschmitz: can you put "classes" in "classes option" in <code>? currently, this reads badly: "classes option to specify respective classes"
[08:30:38] <arschmitz> yup
[08:30:47] <jzaefferer> I prefer "properties" when talking about individual options
[08:30:54] <jzaefferer> more generic
[08:31:02] <jzaefferer> though I guess "setting" make sense in the context of options as well
[08:31:11] <arschmitz> yeah i debated on that
[08:31:14] <jzaefferer> I don't know if we have a preference there...
[08:31:50] <arschmitz> not sure
[08:32:50] <jzaefferer> Looks to me like we use "setting" only as a verb in other demos, but we have "properties" in two places. One of those is referring to options, I'm not sure about the other
[08:33:13] <arschmitz> im fine with changing to properties
[08:33:36] <jzaefferer> looking at API docs...
[08:33:58] <arschmitz> really though shouldnt it be the values of the property in this context 
[08:34:23] <jzaefferer> Not helpful: "Animation settings with <code>easing</code> and <code>duration</code> properties."
[08:34:56] <arschmitz> jzaefferer: maybe "Change the droppable's appearance on hover, or when the droppable is active (an acceptable draggable is dropped on it).  Set the values of the <code>ui-droppable-hover</code> or <code>ui-droppable-active</code> properties on the <code>classes</code> option to specify the respective classes."
[08:35:12] <jzaefferer> That sounds good to me
[08:35:29] <jzaefferer> I think we should stick with "setting" as a verb
[08:35:32] <arschmitz> ok ill use that
[08:37:04] <arschmitz> jzaefferer: updated
[08:38:35] <jzaefferer> meanwhile: https://github.com/jquery/api.jqueryui.com/issues/247
[08:38:36] <jquicommit> [13api.jqueryui.com] 15jzaefferer opened issue #247: Use consistent noun to refer to "nested options" (properties of an option) 02http://git.io/NOaD
[08:39:24] <jzaefferer> Well, that was the last known issue.. I'm not sure if I really want to do another code review...
[08:39:59] <jzaefferer> arschmitz: you should bump qunit-assert-classes to 1.0.0 the next time you change something
[08:40:03] <jzaefferer> or immediately
[08:40:29] <jzaefferer> doesn't matter here though
[08:40:42] <arschmitz> jzaefferer: i was actually going to ask you about adding a couple checks to it that came up in button
[08:40:51] <jzaefferer> oh, okay
[08:40:57] <jzaefferer> I wasn't aware of that
[08:41:06] <arschmitz> jzaefferer: because i had not asked yet
[08:41:13] <jzaefferer> heh, okay
[08:41:17] <jzaefferer> let's finish this PR...
[08:41:22] <arschmitz> jzaefferer: i was thinking about adding partial class checks
[08:41:26] <arschmitz> like begins with
[08:41:45] <arschmitz> in the button tests i do a bunch of checks for if something has class ui-corner-*
[08:42:06] <arschmitz> that seemed like something that would fit in there
[08:42:25] <arschmitz> but yeah unrelated to this pr
[08:42:26] <jzaefferer> can you update the commit message where you delete "demos/droppable/shopping-cart.html"? Add something like "This has terrible UX that we shouldn't promote anymore."
[08:42:47] <arschmitz> jzaefferer: lol i can i actually had something like that but changed it 
[08:43:55] <jzaefferer> seems finde to add that to the plugin
[08:44:29] <arschmitz> jzaefferer: pushed classes with that message change
[08:53:18] <jzaefferer> arschmitz: speaking of your plugin, I think you should add a header to the js file
[08:53:30] <arschmitz> I should
[08:53:53] <jzaefferer> what the hell is this? throw( "Class checks can only be performed on a single element on a collection" );
[08:54:04] <jzaefferer> throw isn't a function and you should never throw a string
[08:54:07] <jzaefferer> ehem
[08:54:17] <jzaefferer> this should be throw new Error( "Class checks can only be performed on a single element on a collection" );
[08:54:25] <arschmitz> yes it should
[08:54:37] <jzaefferer> very convenient to edit :-)
[08:54:57] <arschmitz> jzaefferer: just pushed button pr
[08:54:59] <arschmitz> updated
[08:55:13] <jzaefferer> I want to finish this before I look at button again...
[08:55:18] <jzaefferer> getting closer :-)
[08:55:26] <arschmitz> jzaefferer: i figured i was just letting you know
[08:58:32] <jzaefferer> arschmitz: `assert.hasClasses( $( this ), "ui-accordion-header" );` could be simplified to `assert.hasClasses( this , "ui-accordion-header" );`
[08:58:34] <jzaefferer> right?
[08:58:47] <arschmitz> yup
[08:59:30] <jzaefferer> should we bother?
[08:59:51] <arschmitz> it will only take a sec ill just fix it
[09:00:09] <jzaefferer> I mean, there's probably more than that one...
[09:00:20] <arschmitz> jzaefferer: might not be i tried to fix most
[09:00:23] <arschmitz> i just missed that one
[09:00:28] <jzaefferer> if you can just search-and-replace, I won't have to point them out
[09:00:30] <arschmitz> also i can do a search to check
[09:08:32] <arschmitz> jzaefferer: updated that test
[09:33:39] <agcolom> arschmitz: thanks a lot for the demo (float). I didn't realise only the text would go round the element but the text container takes full width. Is that correct? That's kind of confusing :-P
[09:34:54] <arschmitz> agcolom: well block elements basicly ignore the float
[09:35:08] <arschmitz> agcolom: but the inline element inside the block element still respects it
[09:35:43] <agcolom> right... so if we put the collapsible inside a span we wouldn't have a problem?
[09:35:49] <agcolom> let me try...
[09:38:29] <agcolom> nope :-(
[09:40:01] <agcolom> floats are very confusing!
[09:40:21] <arschmitz> agcolom: yes they are
[10:00:37] <jzaefferer> arschmitz: the chat here is confusing - did you fix assertClasses already?
[10:00:47] <jzaefferer> arschmitz: nevermind
[10:00:53] <arschmitz> no
[10:01:13] <jzaefferer> the commits aren't super helpful when you rebase, but since my comment is still there..
[10:01:34] <arschmitz> no i have not addressed your comment
[10:02:16] <arschmitz> i was waiting to see if you found anything else before i changed again since you actually commented on the pr didnt just tell me
[10:04:42] <jzaefferer> arschmitz: yeah, that didn't quite fit on IRC
[10:04:46] <jzaefferer> I'm still reviewing though
[10:04:57] <jzaefferer> I'm starting to think that changing datepicker tests was a bad idea
[10:05:07] <arschmitz> lol
[10:05:18] <arschmitz> i did much of it with a search and replace
[10:05:20] <jzaefferer> since that is just going to cause more tears and pain when rebase datepicker rewrite once more, which is already painful enough
[10:05:28] <arschmitz> so it was almost easier to do it 
[10:05:49] <arschmitz> ill happily do the rebase lol
[10:05:56] <jzaefferer> resolving those changes as merge conflicts might be a PITA
[10:06:22] <arschmitz> jzaefferer: and i fixed in button too
[10:06:24] <jzaefferer> how about you "unstage" those changes and rebase datepicker once classes and button is in master?
[10:06:31] <arschmitz> jzaefferer: and resolved all those in button branch
[10:07:15] <arschmitz> jzaefferer: to be fair i did find some problems that were fixed
[10:07:23] <arschmitz> with doing has class or is on multiple elements
[10:07:37] <arschmitz> so these should probably stay 
[10:07:42] <jzaefferer> oh well
[10:07:53] <arschmitz> since date picker wont be in 1.12 and these will
[10:07:54] <jzaefferer> if you volunteer to rebase datepicker, I'm fine with it
[10:08:02] <arschmitz> scott_gonzalez: what do you think?
[10:08:38] <jzaefferer> I see: dp.children().each(
[10:09:03] <scott_gonzalez> I'd prefer not changing datepicker tests.
[10:09:16] <scott_gonzalez> Every change has to be reviewed because the tests are basically rewritten.
[10:09:40] <scott_gonzalez> I don't really care if the current tests are "bad"
[10:09:49] <jzaefferer> so better to apply hasClasses again in the rewrite?
[10:10:10] <arschmitz> thats fine if the tests are a complete re-write
[10:10:17] <arschmitz> ill just unstage those
[10:10:48] <arschmitz> and either someone else or myself can update the datepicker tests when ever the time seems good
[10:11:32] <jzaefferer> once classes are in master you could do a PR to rebase datepicker, then switch to hasClasses
[10:16:57] <arschmitz> sure whatever works
[10:19:33] <jzaefferer> arschmitz: tests/unit/menu/menu_core.js has another one: assert.hasClasses( $( this ), "ui-menu-item" );
[10:20:04] <arschmitz> weird i wonder why that didnt come up on my search
[10:20:27] <jzaefferer> arschmitz: I found one in tests/unit/menu/menu_core.js, three in tests/unit/menu/menu_options.js
[10:20:47] <arschmitz> odd i find them when i search in the file
[10:20:54] <arschmitz> but when i do a find in files search i dont
[10:21:14] <jzaefferer> then your search is broken
[10:21:24] <jzaefferer> maybe you're matching regex?
[10:22:21] <arschmitz> nope checked that
[10:23:16] <jzaefferer> What editor are you using?
[10:23:34] <arschmitz> sublime text 2
[10:23:41] <arschmitz> i should try in 3 i have both
[10:24:52] <arschmitz> 3 works
[10:24:56] <arschmitz> thats weird
[10:27:14] <jzaefferer> I'm half-way through and have to leave in a few minutes
[10:45:24] <arschmitz> ok
[10:46:10] <jqcommit> [13api.jquerymobile.com] 15agcolom opened issue #358: Update core version to 1.11.2 02http://git.io/N392
[10:54:44] <rxaviers> scott_gonzalez, jzaefferer, arschmitz, I wait for everyone's agreement on https://github.com/jquery/download.jqueryui.com/pull/256#issuecomment-73939576 as a comment in the PR before I'm proceeding there
[11:56:24] <jqcommit> [13jquerymobile.com] 15smbgood opened issue #115: Custom Build of Only Radio buttons doesn't work (1.4.5) 02http://git.io/NsEf
[13:18:54] <jqcommit> [13jquerymobile.com] 15gabrielschulhof closed issue #115: Custom Build of Only Radio buttons doesn't work (1.4.5) 02http://git.io/NsEf
[14:48:17] <jquicommit> [13jquery-ui] 15arschmitz 04force-pushed 06classes from 14b5366bd to 1437ecb6b: 02http://git.io/s807XQ
[14:48:17] <jquicommit> 13jquery-ui/06classes 14aea42b4 15Alexander Schmitz: Build: Add qunit-assert-classes plug-in for classes tests
[14:48:17] <jquicommit> 13jquery-ui/06classes 144c47a26 15Alexander Schmitz: Widget: Add classes option and _add/_remove/_toggleClass methods
[14:48:17] <jquicommit> 13jquery-ui/06classes 14d13ecc8 15Alexander Schmitz: Button: Add classes option to please the tests
