[01:33:59] <gabriel_schulhof> arschmitz: Real useful, those tests :/
[02:54:01] <jqmobilecommit> [13jquery-mobile] 15evilripper opened issue #8127: Demos: copy and paste the sorce code in utf8  encoding fail  02http://git.io/vJXgH
[04:07:39] <arschmitz> gabriel_schulhof: i added new tests to replace them and pushed an update to the PR
[04:07:57] <arschmitz> a couple super minor things i noticed after im fixing right now 
[04:27:20] <gabriel_schulhof> arschmitz: Awesome. I'm grabbing some food and then I'll take a look.
[04:27:36] <gabriel_schulhof> arschmitz: I'm also making progress on the removal of the dialog widget.
[04:49:29] <arschmitz> gabriel_schulhof: also we should not have switched to core2.0 for our commited version
[04:49:35] <arschmitz> gabriel_schulhof: we need to revert that
[04:57:53] <gabriel_schulhof> Why not?
[04:59:13] <arschmitz> because then it does not work on ie8
[05:00:05] <gabriel_schulhof> Oh, I see! 2.0 does not support IE8 ... OK ...
[06:24:38] <gabriel_schulhof> arschmitz: hasClasses() + lacksClasses() !== hasClassesExact(), because there may be classes tat I don't care about either way, such as in the case of <body>: ui-viewport. So, it's not part of the scope of the test to assert its presence/absence. So, I have to keep using .hasClasses() + lacksClasses().
[06:25:54] <arschmitz> gabriel_schulhof: if the extra classes are still ones for that widget im fine with it
[06:26:03] <arschmitz> if they are not classes for that widget use has + lacks
[06:27:10] <gabriel_schulhof> In the case of https://github.com/jquery/jquery-mobile/pull/8121/#discussion_r29397963 I only care about whether the theme is being propagated to the page container. I don't care whether the page container functions correctly in that it adds ui-viewport. Thus, I have to leave it at has + lacks.
[06:27:34] <gabriel_schulhof> ... since I'm testing the dialog extension, not the page container.
[06:30:15] <gabriel_schulhof> I agree though that within a single widget where I can reasonably expect an exact list of classes, I should use hasClassesExact().
[06:32:38] <arschmitz> gabriel_schulhof: yeah i would not use exact there actually
[06:33:48] <gabriel_schulhof> Cool. I'm going over all the tests the PR touches and bringing them up-to-date.
[06:36:03] <gabriel_schulhof> arschmitz: So, what assertion should I use for primitive values? I'm thinking strictEqual, but I suppose equal is enough unless we're dealing with truthy/falsy in which case I can express a deeper concern about the value's type via strictEqual. How's that sound?
[06:36:55] <arschmitz> gabriel_schulhof: strictEqual i would say unless you explicitly want truthy / falsey
[06:37:14] <gabriel_schulhof> OK. That's what I'll use.
[06:37:31] <arschmitz> gabriel_schulhof: if your checking truthy / falsey you can also just use ok 
[06:37:47] <arschmitz> and notOk
[06:38:15] <gabriel_schulhof> Yeah, I guess if I explicitly wish to accept anything truthy/falsy, then that's how I should check.
[06:38:28] <gabriel_schulhof> So, like the converse of the previous situation.
[06:39:01] <arschmitz> yeah basicly
[06:39:30] <arschmitz> we prefer === in code so we should match in tests
[06:39:55] <arschmitz> but we also prefer if ( thing ) where it makes sense which is more or less the equivilent of ok
[06:40:10] <arschmitz> gabriel_schulhof: thats my rationale anyway lol
[06:42:16] <jquicommit> [13jquery-ui] 15scottgonzalez opened pull request #1548: [WIP] Draggable: Improve detection for when to blur the active element (06master...06draggable-blur) 02http://git.io/vJ17X
[07:18:03] <arschmitz> gabriel_schulhof: want to checkout the enhancer pr
[07:42:41] <gabriel_schulhof> arschmitz: OK.
[07:59:10] <gabriel_schulhof> arschmitz: Looks good to me aside from a few typos.
[07:59:23] <arschmitz> gabriel_schulhof: cool thanks
[07:59:27] <arschmitz> did you see my comments?
[07:59:35] <gabriel_schulhof> I guess we're keeping the search-to-text degrade, eh?
[08:00:16] <arschmitz> gabriel_schulhof: well we need to for at least 1.5
[08:00:16] <arschmitz> it was not deprecated in 1.4
[08:00:16] <gabriel_schulhof> Yeah ... maybe we can put the initSelectors in backcompat as part of the various widget PRs.
[08:01:05] <arschmitz> that works
[09:39:06] <doesallmagic2> Project jQuery UI - git core build #880: STILL UNSTABLE in 19 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/880/
[10:15:38] <scott_gonzalez> arschmitz: Is https://github.com/jquery/jquery-ui/pull/1546 waiting on me again or did you have updates to push?
[10:16:04] <arschmitz> scott_gonzalez: oh shoot i thought i pushed that
[10:16:08] <arschmitz> no its waiting on me but its done
[10:16:14] <scott_gonzalez> ok :-)
[10:16:17] <arschmitz> ill push it in a few minutes in chassis meeting right now
[10:16:25] <scott_gonzalez> thanks
[10:16:43] <arschmitz> there were more updates then what in the comments because we talked on skype about the tests
[11:40:16] <doesallmagic2> Project jQuery UI - git core build #881: STILL UNSTABLE in 2 min 48 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/881/
[11:40:46] <jquicommit> [13jquery-ui] 15scottgonzalez opened pull request #1549: Update JSCS (06master...06jscs) 02http://git.io/vJyz7
[11:54:17] <arschmitz> scott_gonzalez: https://github.com/jquery/jquery-ui/pull/1546 is all updated
[11:54:25] <scott_gonzalez> thanks
[11:54:45] <arschmitz> scott_gonzalez: also FYI we discussed indicating scroll-ability of a region in chassis meeting today 
[11:55:52] <scott_gonzalez> Anything for us to work from? Or just putting it on the radar?
[11:56:31] <arschmitz> scott_gonzalez: someone came up with this for using on tables which prompted it in a more general sense http://view.css-chassis.com/table/demos/tables.html
[11:56:58] <arschmitz> scott_gonzalez: we are going to look into solving this in a more general way since there are a bunch of usecases
[11:57:00] <scott_gonzalez> That's slick.
[11:57:12] <arschmitz> yeah i like it
[11:58:17] <arschmitz> scott_gonzalez: and sense selectmenu is in V1 we will be looking into this right off
[11:58:23] <arschmitz> since
[11:58:58] <arschmitz> might not be soon enough for ui right this second but something we should keep an eye on for sure
[11:58:58] <gabriel_schulhof> Very nice!
[16:41:42] <jquicommit> [13jquery-ui] 15scottgonzalez closed pull request #1549: Update JSCS (06master...06jscs) 02http://git.io/vJyz7
[19:29:47] <jquicommit> [13jquery-ui] 15arschmitz closed pull request #1546: Add methods for finding labels and forms for controls (06master...06input-methods) 02http://git.io/vfSiT
[19:49:11] <doesallmagic2> Project jQuery UI build #1598: SUCCESS in 19 min: http://jenkins.jquery.com/job/jQuery%20UI/1598/
[19:49:12] <doesallmagic2> * arschmitz: Core: Add $.fn.labels, $.fn.form, and $.ui.escapeSelector methods
[19:49:12] <doesallmagic2> * arschmitz: Selectmenu: Use $.ui.escapeSelector
[19:49:13] <doesallmagic2> * arschmitz: Tabs: Use $.ui.escapeSelector to avoid invalid selectors
[19:51:05] <jquicommit> [13api.jqueryui.com] 15arschmitz opened issue #270: Document $.fn.labels 02http://git.io/vJHms
[23:07:00] <doesallmagic2> Project jQuery UI - git core build #882: STILL UNSTABLE in 6 min 0 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/882/
[23:37:29] <doesallmagic2> Project jQuery UI - 1.10.x core build #25: STILL UNSTABLE in 30 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.10.x%20core/25/
