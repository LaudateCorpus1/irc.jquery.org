[02:57:38] <doesallmagic> Project jQuery UI - git core build #247: STILL FAILING in 38 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/247/
[03:07:14] <doesallmagic> Project jQuery UI 1-9-stable - git core build #34: STILL FAILING in 9 min 35 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/34/
[03:52:35] <doesallmagic> Project jQuery UI - 1.6.x core build #145: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/145/
[04:01:39] <jzaefferer> scott_gonzalez: I like that this is pretty much what we arrived at on our own, on how to use Git: http://sandofsky.com/blog/git-workflow.html - also I never used `git reset` without any argument, gonna have to try that
[04:37:59] <doesallmagic> Project jQuery UI - 1.7.x core build #146: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/146/
[05:23:13] <doesallmagic> Project jQuery UI - 1.8.x core build #121: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/121/
[05:53:25] <jquicommit> [13jquery-ui] 15simonpatonza opened pull request #864: Removed outline from slider handle (06master...06patch-1)  02http://git.io/T-VkFA
[06:08:28] <doesallmagic> Project jQuery UI 1-9-stable - 1.6.x core build #25: FAILURE in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%201.6.x%20core/25/
[06:24:18] <scott_gonzalez> kborchers: Are your browser sniffing skills getting rusty? :-P
[06:25:10] <kborchers> After I posted that comment I saw it was windows but does that tell me what version?
[06:29:31] <doesallmagic> Yippie, build fixed!
[06:29:32] <doesallmagic> Project jQuery UI 1-9-stable - 1.7.x core build #26: FIXED in 21 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%201.7.x%20core/26/
[06:30:27] <scott_gonzalez> It sure does :-) Windows NT 6.1 = Windows 7; WOW64 = 32-bit IE on 64-bit processor
[06:30:58] <scott_gonzalez> MSDN actually documents all of this: http://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx
[06:45:11] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/uhXxgA
[06:45:11] <jquicommit> 13jquery-ui/06master 14694987f 15Scott Gonz√°lez: Menu tests: Better handling of async focus in IE.
[07:06:29] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/tZHCqQ
[07:06:29] <jquicommit> 13jquery-ui/06master 1428fcef5 15Scott Gonz√°lez: Datepicker tests: Handle async focus in IE.
[07:14:41] <doesallmagic> Project jQuery UI 1-9-stable - 1.8.x core build #26: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%201.8.x%20core/26/
[08:50:58] <Dave_Stein> scott_gonzalez: son of a bitch, i forgot to camelcase my vars so before you say anything just know i noticed :)
[08:55:26] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/ehP2Xg
[08:55:26] <jquicommit> 13jquery-ui/06interactions 14f1f1b8d 15Dave Stein: Draggable: Fixed variable casing + added cursorAt backCompat based on cursor-style.html demo
[08:57:09] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/3OqQzA
[08:57:09] <jquicommit> 13jquery-ui/06interactions 149ef0828 15Dave Stein: Draggable: Fixed elem reference in cursorAt
[09:02:45] <rxaviers> gnarf, ping
[09:03:00] <doesallmagic> Project jQuery UI build #883: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI/883/
[09:03:01] <doesallmagic> * Scott Gonz√°lez: Menu tests: Better handling of async focus in IE.
[09:03:01] <doesallmagic> * Scott Gonz√°lez: Datepicker tests: Handle async focus in IE.
[09:05:42] <Dave_Stein> mikesherov: Had some questions about qunit for when you get backl
[09:09:40] <rxaviers> scott_gonzalez, jzaefferer, do you know where is nginx gateway configurations at? I didnt find it at /etc/nginx/**
[09:11:49] <rxaviers> Im pretty confident it's about an nginxpolicy (eg flood protection) limiting GET params
[09:12:05] <scott_gonzalez> nope
[09:12:26] <rxaviers> in a simple test, replacing `?` by `#`, (where the querystring is not treater in server, but in client), the url passes.
[09:12:37] <rxaviers> scott_gonzalez, who does, gnarf?
[09:15:14] <scott_gonzalez> Yeah, gnarf or ryanneufeld or danheberden probably
[09:15:31] <scott_gonzalez> Krinkle|detached might know too.
[09:15:47] <scott_gonzalez> And if none of them are around, maybe nacin.
[09:15:59] <rxaviers> thks, I've talked to ryanneufeld already. I will wait if the other two can help me. :)
[09:16:12] <ryanneufeld> my ears are ringing
[09:16:12] <rxaviers> three* than
[09:16:19] <rxaviers> hehe
[09:17:34] <rxaviers> scott_gonzalez, jzaefferer, anyway making the urls shorter is something we could still improve in the future. We do have a lot of variables to pass and first we need to think whether or not we want a server-saved solution (like bitly) or a parsed one (like current).
[09:18:55] <scott_gonzalez> If we could find something that's small (in bytes), and fast, that will run in both environments, that'd be ideal.
[09:19:47] <rxaviers> both env you mean client and server?
[09:19:50] <scott_gonzalez> yeah
[09:20:00] <scott_gonzalez> Maybe LZW?
[09:20:13] <rxaviers> ok. Do you care if it's not human readable?
[09:20:30] <scott_gonzalez> I don't really care.
[09:20:32] <ryanneufeld> is this for the theme roller?
[09:20:36] <scott_gonzalez> yeah
[09:20:48] <ryanneufeld> so everything is passed as get?
[09:20:51] <scott_gonzalez> yup
[09:20:57] <scott_gonzalez> And it makes the URLs crazy long.
[09:21:02] <rxaviers> ok
[09:21:17] <ryanneufeld> I don't understand why it would be done that way.
[09:21:27] <scott_gonzalez> You mean instead of POST since it's generating content?
[09:21:34] <scott_gonzalez> It's really just about having linkable URLs.
[09:21:35] <ryanneufeld> yesh
[09:21:54] <ryanneufeld> without having to store it in the DB
[09:21:58] <ryanneufeld> I got ya
[09:22:46] <scott_gonzalez> https://github.com/olle/lz77-kit/blob/master/src/main/js/lz77.js
[09:23:07] <scott_gonzalez> I don't really have any idea what's going to get us the best compression for the cheapest bytes/time.
[09:23:07] <rxaviers> cool, will check that out
[09:24:25] <rxaviers> maybe, the smallest sequence will be a ordered set of bytes
[09:24:27] <rxaviers> an*
[09:24:48] <ryanneufeld> what's the url currently look like?
[09:25:37] <rxaviers> http://stage.jqueryui.com/download?version=1.9.2&dialog=false&spinner=false&autocomplete=false&accordion=false&button=false&datepicker=false&menu=false&progressbar=false&slider=false&tabs=false&tooltip=false&themeParams=ffDefault%253DSegoe%252BUI%25252CArial%25252Csans-serif%2526fwDefault%253Dbold%2526fsDefault%253D1.1em%2526cornerRadius%253D6px%2526bgColorHeader%253D333333%2526bgTextureHeader%253D12_gloss_wave.png%2526bgImgOpacityHeader%253D25%2526
[09:25:38] <rxaviers> borderColorHeader%253D333333%2526fcHeader%253Dffffff%2526iconColorHeader%253Dffffff%2526bgColorContent%253D000000%2526bgTextureContent%253D05_inset_soft.png%2526bgImgOpacityContent%253D25%2526borderColorContent%253D666666%2526fcContent%253Dffffff%2526iconColorContent%253Dcccccc%2526bgColorDefault%253D555555%2526bgTextureDefault%253D02_glass.png%2526bgImgOpacityDefault%253D20%2526borderColorDefault%253D666666%2526fcDefault%253Deeeeee%2526iconColorDef
[09:25:38] <rxaviers> ault%253Dcccccc%2526bgColorHover%253D0078a3%2526bgTextureHover%253D02_glass.png%2526bgImgOpacityHover%253D40%2526borderColorHover%253D59b4d4%2526fcHover%253Dffffff%2526iconColorHover%253Dffffff%2526bgColorActive%253Df58400%2526bgTextureActive%253D05_inset_soft.png%2526bgImgOpacityActive%253D30%2526borderColorActive%253Dffaf0f%2526fcActive%253Dffffff%2526iconColorActive%253D222222%2526bgColorHighlight%253Deeeeee%2526bgTextureHighlight%253D03_highligh
[09:25:43] <rxaviers> t_soft.png%2526bgImgOpacityHighlight%253D80%2526borderColorHighlight%253Dcccccc%2526fcHighlight%253D2e7db2%2526iconColorHighlight%253D4b8e0b%2526bgColorError%253Dffc73d%2526bgTextureError%253D02_glass.png%2526bgImgOpacityError%253D40%2526borderColorError%253Dffb73d%2526fcError%253D111111%2526iconColorError%253Da83300%2526bgColorOverlay%253D5c5c5c%2526bgTextureOverlay%253D01_flat.png%2526bgImgOpacityOverlay%253D50%2526opacityOverlay%253D80%2526bgColo
[09:25:48] <rxaviers> rShadow%253Dcccccc%2526bgTextureShadow%253D01_flat.png%2526bgImgOpacityShadow%253D30%2526opacityShadow%253D60%2526thicknessShadow%253D7px%2526offsetTopShadow%253D-7px%2526offsetLeftShadow%253D-7px%2526cornerRadiusShadow%253D8px
[09:25:55] <ryanneufeld> whoa
[09:26:45] <ryanneufeld> would it be possible to map things like cornerRadiusShadow to ids instead?
[09:27:47] <scott_gonzalez> we could
[09:28:14] <scott_gonzalez> We haven't added any keys in years, so there's not really a concern of adding in one place and not the other.
[09:28:32] <scott_gonzalez> Plus, if we added a new key, we'd need to modify TR anyway, so it'd be obvious.
[09:28:56] <ryanneufeld> That would drastically reduce your url size
[09:29:07] <scott_gonzalez> yeah
[09:29:18] <ryanneufeld> I'm not sure it would be enough
[09:29:56] <ryanneufeld> also, if the image file names are standard, you could map those to ids as well
[09:30:39] <scott_gonzalez> Yup, there's a fixed set of images.
[09:30:59] <ryanneufeld> okay, so that drops another bunch of bytes
[09:31:33] <ryanneufeld> Though I'm not sure how much work it would be to implement that
[09:33:54] <scott_gonzalez> It's probably a bit annoying and error prone.
[09:34:11] <ryanneufeld> more than now?
[09:34:35] <scott_gonzalez> hmm...actually I'm not sure if we use native form submit for TR.
[09:34:46] <scott_gonzalez> If we're always generating the URLs, then it wouldn't be error prone.
[09:35:00] <scott_gonzalez> I'd only be concerned if we had to manually change the names of every form field.
[09:50:06] <doesallmagic> Project jQuery UI - git core build #248: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/248/
[09:54:04] <rxaviers> scott_gonzalez, the themeroller parameters would be better compressed anyway. The download components could be bytes-mapped. But, if we need to compress themeroller already. It should be easier to just compress it all anyway
[09:54:16] <rxaviers> will try the lib you showed me
[09:54:39] <scott_gonzalez> ok
[10:31:20] <rxaviers> scott_gonzalez, in the example above the querystring has 2004 chars. Using lz77 compression, the string got to 1301 chars. Although, URI encoding it makes it 2011 chars. :P
[10:31:38] <rxaviers> It seems that other lib will make it https://github.com/nmrugg/LZMA-JS
[10:31:56] <rxaviers> checking
[10:32:40] <rxaviers> the first lib uses the same chars as original, although it blocks stuff together (seems a huffman algo)
[10:33:34] <rxaviers> the second one may compress similarly but produces a int array. I think I can map it into a lexical array, so it doesnt need URI encoding.. That will be cool. Let's see
[10:33:45] <rxaviers> an* int array
[11:07:13] <rxaviers> basically, I can use the following chars as-is in uri: Letters (A-Z and a-z), numbers (0-9) and the characters '.','-','~' and '_' are left as-is. And '+'
[11:07:53] <rxaviers> That's 60 chars. So, that's the base I can convert the integers to.
[11:34:45] <gnarf> rxaviers: btw, the querystring issue is probably shuoshin settings or whatever that php security thing is
[11:34:49] <gnarf> i already upped it once
[11:35:01] <gnarf> but it is pretty darn long :)
[11:35:50] <rxaviers> gnarf, the issue is with nginx "gatewaying" it to node
[11:37:32] <gnarf> oh node proc?
[11:38:31] <gnarf> there shouldn't be any issues that I would be aware of then...
[11:38:47] <rxaviers> I suppose so. Try to access that pretty long url above
[11:38:53] <rxaviers> You may hit a gateway error
[11:39:51] <rxaviers> It seems nginx is rejecting to gatewat that huge url to node. In /var/log/nginx/download*, it doesnt even notice the GET
[11:43:34] <rxaviers> It's weird because I dont see that gateway error in any log actually.
[11:44:24] <rxaviers> I was wondering if that's about some security policy of nginx or something else
[11:45:11] <rxaviers> iptables seems off
[11:45:16] <rxaviers> so, good
[11:45:47] <rxaviers> this machine doesnt seem to have selinux, so it helps too
[11:46:23] <rxaviers> I did not find an evidence yet
[11:46:41] <rxaviers> gnarf, do you know where nginx gateway to download builder gateway is configured?
[11:47:00] <rxaviers> I found the service that starts download builder (at /etc/init.d). But, this starts the nodes
[11:47:19] <rxaviers> I suppose nginx is configured somehow to drive traffic from 80 to that port (3000)
[11:47:33] <rxaviers> But, I found no nginx config at /etc/nginx/**
[11:47:42] <rxaviers> (at least relevant config)
[11:50:11] <rxaviers> scott_gonzalez, in a sniff run using lzma lib above, I got a ~50% compression rate. So, from 2004 chars, I got 1230 chars. Better, but still big..
[11:50:53] <rxaviers> In the best case, we would be able to half that value (or at least near to half that)
[11:52:02] <scott_gonzalez> Well, it's a good start.
[11:55:16] <rxaviers> ok, I will write the 50% thing now
[11:55:26] <rxaviers> then we try to improve it
[11:59:04] <rxaviers> scott_gonzalez, fyi, we still have todos for 1.10: https://github.com/jquery/download.jqueryui.com/issues?milestone=1&page=1&state=open
[11:59:21] <rxaviers> if you need me to switch priority, plz just let me know
[12:00:18] <gnarf> rxaviers: /etc/nginx/conf.d/
[12:00:29] <gnarf> in the vhost_autogen.conf or something similarly named
[12:01:04] <rxaviers> jz, there is a download-ui-upstream.conf. How didnt I find that. Af
[12:01:05] <rxaviers> thks
[12:02:55] <scott_gonzalez> rxaviers: We'll need the 1.10 stuff done within 2 weeks.
[12:03:02] <scott_gonzalez> So you've got some time.
[12:03:17] <rxaviers> cool
[12:05:42] <rxaviers> gnarf, can we try? http://developernote.com/2012/09/how-i-fixed-nginx-502-bad-gateway-error/
[12:08:10] <gnarf> so it doesn't use fastcgi to proxy to node
[12:08:13] <gnarf> it uses a proxy
[12:08:44] <rxaviers> right..
[12:12:20] <rxaviers> what about proxy_buffers ?
[12:12:50] <rxaviers> currently we have [/etc/nginx/conf.d/proxy.conf]  32 4k;
[12:13:17] <gnarf> are we actually seeing that error in the error log?
[12:13:20] <rxaviers> I was wondering if we can increase that to 16k just to test
[12:13:27] <rxaviers> that's the point. Im not
[12:13:41] <rxaviers> There's no nginx log about that
[12:14:38] <rxaviers> finding this error explicitly in its log was my first attempt :P (ideally that's where we should go first)
[12:14:54] <gnarf> set it to 16k
[12:16:03] <gnarf> how many bytes is that URI?
[12:16:37] <rxaviers> < 4k.. but, I dont know how that maps in the muffer
[12:16:39] <rxaviers> buffer*
[12:17:04] <gnarf> well, is it >2k bytes?
[12:17:15] <rxaviers> yeap
[12:17:17] <rxaviers> 2044b
[12:17:19] <gnarf> hell >1k? why aren't we using POST ?
[12:17:28] <rxaviers> we want a linkable url
[12:17:45] <rxaviers> we're working on make it smaller
[12:17:49] <rxaviers> making*
[12:18:33] <rxaviers> so, Im increasing and `service nginx restart`, may I?
[12:18:42] <gnarf> i already did that...
[12:18:50] <rxaviers> cool thks, lets check
[12:19:12] <rxaviers> well, it's still 4k to me
[12:20:33] <gnarf> oh, i'm on jq02
[12:20:55] <rxaviers> jq02.stage.jquery.com ?
[12:21:13] <gnarf> no, i was on live
[12:21:18] <rxaviers> ah! :)
[12:21:19] <gnarf> sorry, can swap over to sage
[12:21:23] <gnarf> or yeah
[12:21:24] <gnarf> just do it
[12:21:27] <rxaviers> ok
[12:21:47] <gnarf> beware, puppet will eventually set it back for you
[12:22:22] <rxaviers> did it, and it didnt work!! :'(
[12:22:45] <rxaviers> reverted it
[12:22:52] <rxaviers> man, i dont know what's about
[12:23:01] <rxaviers> well, I will work quickly in compressing that url
[12:23:05] <rxaviers> thanks gnarf
[12:23:21] <gnarf> rxaviers: if you use :3000 it works?
[12:25:45] <rxaviers> m let's see
[12:26:26] <rxaviers> not, maybe it just listens to localhost at 3000, not external
[12:37:44] <mikesherov> Dave_Stein: yt?
[12:40:12] <Dave_Stein> mikesherov: probably in 40 minutes ill be here :) bb
[12:40:19] <Dave_Stein> just got to desk for a econd now
[12:59:26] <Dave_Stein> god damn i was going for coffee and i forgot i had another meeting - i never win!
[13:24:11] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/u4vqow
[13:24:11] <jquicommit> 13jquery-ui/06master 14b9f206d 15Scott Gonz√°lez: Dialog: Cleanup.
[14:29:20] <doesallmagic> Project jQuery UI build #884: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI/884/
[14:29:21] <doesallmagic> Scott Gonz√°lez: Dialog: Cleanup.
[14:54:19] <Dave_Stein> mikesherov: 4 hours of meetings + coffee later... you around?
[15:02:15] <mikesherov> Dave_Stein: I
[15:02:18] <mikesherov> I'm here
[15:02:26] <Dave_Stein> heyo
[15:02:37] <mikesherov> What's up man?
[15:02:44] <Dave_Stein> working on some things and im actually a minute away from comitting grid but gotta do some work work first for this build here
[15:02:58] <Dave_Stein> anywho when i run the draggable.html qunit
[15:03:20] <Dave_Stein> and it shows red for the tested defaults section and it even has exclude , whats the best way to make it green like what am i missing exactly
[15:04:21] <mikesherov> so, is your latest stuff committed? Maybe I can pull down the branch you're looking at
[15:04:39] <mikesherov> or I should say, is it pushed up?
[15:07:04] <mikesherov> the best way to make it green is to look at the diff, and see what it's expecting for the value
[15:07:16] <Dave_Stein> latest is comitted 
[15:07:17] <Dave_Stein> to interactions
[15:07:38] <Dave_Stein> i guess i'll just take a closer look into the lines that say its failing at later
[15:07:47] <Dave_Stein> i thought that like axis or cursor would work out of the box just like helper and handle did
[15:07:48] <Dave_Stein> and others
[15:08:19] <mikesherov> ok, let me take a look
[15:10:31] <mikesherov> oh, sure, so you've implemented exclude!
[15:11:38] <mikesherov> Dave_Stein: in tests/unit/draggable/draggable_common.js uncomment "exclude"
[15:12:12] <Dave_Stein> ah there we go
[15:12:21] <mikesherov> also, you have lint errors
[15:12:24] <Dave_Stein> i mean i didnt look but i was wondering which file that was as i havent looked into the files yet - the one you were working on with me
[15:12:25] <mikesherov> are you grunting?
[15:12:45] <Dave_Stein> no i've never used grunt so im not sure what i need to do locally to have same lint standards as you guys
[15:13:05] <mikesherov> you're windows, right?
[15:13:09] <mikesherov> grunt sucks on Windows
[15:13:14] <mikesherov> well, not sucks
[15:13:29] <mikesherov> it's actually pretty good to ben_alman's credit, but not tested as heavily
[15:13:50] <mikesherov> you just need a linter that runs the options from .jshintrc
[15:14:03] <mikesherov> but also, the test suite runs JSHint, so you can just look there
[15:14:15] <mikesherov> you have a few defined but never used parameters
[15:16:33] <Dave_Stein> ok cool
[15:16:45] <Dave_Stein> that makes sense to me seeing that my linter has unused in adiff tab i fail to look at too often
[15:16:49] <Dave_Stein> and well ill be able to help ben find some bugs ;)
[15:21:06] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/B-HHDw
[15:21:06] <jquicommit> 13jquery-ui/06interactions 143cd5010 15Dave Stein: Draggable: Added grid backCompat and fixed styles for single -> double quotes
[15:38:01] <Dave_Stein> mikesherov: btw if you didn't notice we aren't gonna backCompat addclasses anymore
[15:39:33] <Dave_Stein> mikesherov: as far as unused vars go, if the line  is  "this.element.on( "drag", function( e, ui ) {" and I need to get to ui, and e is unused, how do I make things happy
[15:39:56] <mikesherov> Dave_Stein: It won't complain for that. It's smart enough. 
[15:40:27] <mikesherov> Re: addClasses, agreed. There shouldn't be an option to break core functionality :)
[15:40:47] <Dave_Stein> okay i'll setup grunt sometime soon because my jslint in notepad++ is only showing unused vars that are in lines like the one above
[15:41:17] <Dave_Stein> so for addclasses doe s that also mean i delete all the unit tests for that in my branch? i would assume so
[15:41:23] <Dave_Stein> i just don't like deleting things :P
[15:42:12] <Dave_Stein> mikesherov: ^^
[15:42:39] <mikesherov> ^^?
[15:42:53] <Dave_Stein> i was just pinging you to look above ha we do that in hipchat all the time here
[15:43:15] <mikesherov> Right. Look above to what?
[15:43:32] <Dave_Stein> i should delete those two unit tests in draggable_options.js
[15:44:00] <mikesherov> Which tests?
[15:44:12] <Dave_Stein> test("{ addClasses: true }, default", function() {
[15:44:18] <mikesherov> Oh for addClasses, yeah
[15:44:29] <Dave_Stein> man i wonder if my messages went through - i wrote that above just about 
[15:45:25] <mikesherov> Yeah, and remove that key from the default tester
[15:45:32] <Dave_Stein> yeah from common
[15:45:38] <Dave_Stein> thats what you mean? i did that bit
[15:45:49] <Dave_Stein> just about to commit
[15:46:01] <mikesherov> Cool
[15:46:56] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/QoFOPg
[15:46:56] <jquicommit> 13jquery-ui/06interactions 14ee55a9d 15Dave Stein: Draggable Unit: Removed any references to addClasses
[15:47:27] <mikesherov> One thing is that you should really just uncomment all the defaults and let them fail till you implement 
[15:47:49] <Dave_Stein> ok 
[15:48:01] <mikesherov> So that way, I'm just writing the tests for current code, and yours should then all pass when you implement
[15:48:04] <Dave_Stein> ill do that and add in cancel which is missing from backcompat
[15:48:18] <mikesherov> Yup
[15:48:35] <Dave_Stein> and by defaults you also mean the methods and callbacks, not just the options rihght
[15:48:47] <mikesherov> Right
[15:49:49] <Dave_Stein> oh yeah i thought of a diff word for "helper" if the default turned from false to true it could be "dragged" so the element you make into a draggable would be dragged by default, false would mean its a clone cause its not being dragged and then a function callback that returns a dom node also returns whats dragged
[15:49:50] <Dave_Stein> eh eh :P
[15:50:32] <mikesherov> Ideally, revert the changes we made except removing the tests for things we're not backCompating
[15:51:20] <mikesherov> Those changes were just to clarify what we were doing. But then we decided to go for backCompat
[15:51:37] <mikesherov> Thanks again for everything you're doing!
[15:51:40] <Dave_Stein> np
[15:51:53] <Dave_Stein> no need to revert since you already ahve the complete list there minus canel
[15:51:55] <Dave_Stein> as far as i can tell
[15:51:56] <Dave_Stein> *cancel
[15:52:02] <mikesherov> Right
[15:52:21] <mikesherov> I meant "effectively" revert
[15:52:28] <Dave_Stein> although now im sad uncommenting that stuff made me fail more tests
[15:52:31] <Dave_Stein> i was getting so close :P
[15:53:11] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/kUcDNg
[15:53:11] <jquicommit> 13jquery-ui/06interactions 14b7b0fff 15Dave Stein: Draggable Unit: Common now has all failures until more backCompat gets in
[15:53:24] <mikesherov> Ha. Awesome. 
[15:53:32] <Dave_Stein> shitbags i think i have a syntax error
[15:53:35] <Dave_Stein> *sigh*
[15:53:37] <Dave_Stein> silly me
[15:53:42] <mikesherov> g2g. Later
[15:53:47] <Dave_Stein> c ya
[15:53:49] <mikesherov> Email me if you have more q's
[15:53:56] <Dave_Stein> kk
[15:54:20] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/NnDEyA
[15:54:20] <jquicommit> 13jquery-ui/06interactions 14bef0072 15Dave Stein: Draggable Unit: Common file syntax error fix
[15:58:03] <Dave_Stein> scott_gonzalez: if cancel backCompat overwrites exclude entirely, and cancel defaults to that string of inputs, how will my backCompat know whether or not to be used... I'm thinking backCompat of cancel will default to false which will fall back to proper default 
[16:04:37] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/Nosd6w
[16:04:37] <jquicommit> 13jquery-ui/06interactions 14855416e 15Dave Stein: Draggable Unit: Removed distance test since that is not getting backCompat
[16:07:17] <Dave_Stein> scott_gonzalez: I run into problem with iframefix since it's doing it always in new code while the old code defaults it to false so backCompat would always turn it off somehow. Thinking we should chop like addClasses
[16:16:37] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/pBN6kg
[16:16:37] <jquicommit> 13jquery-ui/06interactions 14421f6af 15Dave Stein: Draggable: Added opacity backCompat along with some more comments in other areas
[16:22:09] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/wz0SYg
[16:22:09] <jquicommit> 13jquery-ui/06interactions 145a2e5a0 15Dave Stein: Draggable: Added revert backCompat with TODO for droppable strings, since that is not written yet
[16:29:05] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/M_8y5Q
[16:29:05] <jquicommit> 13jquery-ui/06interactions 1434b4fbf 15Dave Stein: Draggable: Added revertDuration backCompat.
[16:49:59] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/TA3ytg
[16:49:59] <jquicommit> 13jquery-ui/06interactions 14d2e726d 15Dave Stein: Draggable: Added zIndex backCompat
[17:07:27] <scott_gonzalez> Dave_Stein: Yeah, kill iframeFix.
[17:08:12] <Dave_Stein> heyo
[17:08:42] <Dave_Stein> was just making some more tweaks where i was using dragbeforestart rather than dragstart since i noticed preventing default on beforestart would keep weird opacity and shit
[17:09:28] <Dave_Stein> scott_gonzalez: I'm about to head about, but before I go - since you want preventDefault on beforeStart rather than start in 2.0, how should I handle that in unit? just swap to beforeStart or should that be backwards compatible?
[17:10:32] <scott_gonzalez> hmm...that might be tricky to do back compat for.
[17:11:12] <scott_gonzalez> That might need to actually go in the main create :-(
[17:11:36] <scott_gonzalez> As for options like cancel, the default should be null. On _create(), check if it's not null and if so, overwrite exclude.
[17:12:00] <Dave_Stein> makes sense
[17:12:19] <scott_gonzalez> Did you clean up all the stuff I commented on?
[17:12:29] <Dave_Stein> i didn't get any emails about comments
[17:12:31] <Dave_Stein> odd i used to
[17:12:48] <Dave_Stein> and mikesherov told me to get grunt going for lint stuffs
[17:12:57] <scott_gonzalez> You didn't get comments? How did you know about the camel case comment then?
[17:13:07] <Dave_Stein> im probably done for the week for coding
[17:13:10] <Dave_Stein> i remembered the style guide :)
[17:13:31] <scott_gonzalez> Look through the commits that have comments on https://github.com/jquery/jquery-ui/commits/interactions
[17:13:36] <Dave_Stein> ok
[17:13:39] <Dave_Stein> will do when i can
[17:13:41] <scott_gonzalez> Also, make sure you have your email setup properly in GitHub.
[17:13:44] <Dave_Stein> i might actually be in luck this week and get to more on it
[17:13:49] <scott_gonzalez> Getting comments is very important.
[17:13:52] <Dave_Stein> yeah i dont know what happened its weird i didnt get the emails
[17:13:57] <Dave_Stein> i havent changed any settings
[17:13:59] <Dave_Stein> since the last time
[17:14:12] <scott_gonzalez> weird
[17:14:27] <Dave_Stein> well they've def had al ot of issues since then so many some email settings changed
[17:14:40] <Dave_Stein> ill look into that tomorrow plus browse your comments 
[17:14:49] <Dave_Stein> ill be around during meeting anwyay tomorrow so ill prob do it during then
[17:15:13] <scott_gonzalez> ok
[17:15:18] <scott_gonzalez> Have a good night.
[17:15:23] <Dave_Stein> so for that create thing... were you impling that interaction create would prevent _start from firing
[17:15:30] <Dave_Stein> just want to settle on that before i go 
[17:15:43] <scott_gonzalez> No, tha'ts a drag-specific thing.
[17:15:52] <Dave_Stein> yeah i was confused by "main" create
[17:16:01] <Dave_Stein> right now draggable goes beforeStart -> setcss -> set start members -> start -> blockframes
[17:16:02] <scott_gonzalez> main create = not in a back compat extension.
[17:16:11] <Dave_Stein> ah 
[17:16:20] <Dave_Stein> and that logic is in _start
[17:16:51] <scott_gonzalez> yeah
[17:17:02] <Dave_Stein> so I'm not sure how to make that work still since even if user prevents in start, 3 things already happened 
[17:17:08] <Dave_Stein> unless i catch that and revert to before the start was fired
[17:17:21] <Dave_Stein> just thinking off top of my head so maybe there's a better way
[17:18:44] <scott_gonzalez> You'll just need to undo them.
[17:18:53] <Dave_Stein> i hate when my first thought is the one you agree with
[17:18:57] <scott_gonzalez> heh
[17:19:03] <scott_gonzalez> Ok, gotta put the kids to bed.
[17:19:05] <Dave_Stein> so i'll update the wiki about that
[17:19:09] <Dave_Stein> i gotta head to my fiance and eat dinner
[17:19:24] <scott_gonzalez> Enjoy dinner.
[17:19:25] <scott_gonzalez> later
[17:19:45] <Dave_Stein> ttyl
[17:21:13] <jquicommit> 01[13jquery-ui01] 15DaveStein pushed 1 new commit to 06interactions: 02http://git.io/0NxCZw
[17:21:13] <jquicommit> 13jquery-ui/06interactions 147cd8deb 15Dave Stein: Draggable: Modified some backCompats to use dragstart rather than dragbeforestart
