[05:52:06] <gnarf> jzaefferer: ping
[05:55:07] <jzaefferer> gnarf: hey hey
[05:57:52] <gnarf> jzaefferer: I'm working on seting up jq02.stage.jquery.com now
[05:58:01] <jzaefferer> gnarf: ah, great
[06:03:37] <scott_gonzalez> OMG, there's so much to write about for widget in the upgrade guide.
[06:23:45] <scott_gonzalez> Hmm...we don't have a ticket for this: https://github.com/jquery/jquery-ui/commit/2a6ca3f
[06:23:46] <socialhapy> ★ Github API: no ref/branch found
[06:24:23] <scott_gonzalez> I guess I should just retroactively make a ticket to create a trail in Trac?
[06:31:34] <jzaefferer> scott_gonzalez: yeah, let's do that
[06:33:08] <scott_gonzalez> done
[07:04:54] <doesallmagic> Project jQuery UI - git core build #54: SUCCESS in 3 min 28 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/54/
[07:04:54] <doesallmagic> Scott González: Mouse: Don't try to unbind delegated event handlers if they don't exist. Fixes #8416 - Draggable breaks during drag if any other draggable is removed or destroyed.
[07:17:38] <gnarf> jzaefferer: so um, according to this readme, i need to grunt build ui for a release?
[07:20:07] <gnarf> but there doesn't seem to be a "versions" directory?
[07:25:18] <gnarf> jzaefferer: also, can you get it so that the port is a command line option?
[07:25:33] <gnarf> jzaefferer: perhaps default to 8088 but i want to be able to node build-server.js --port 3000
[07:25:35] <gnarf> or whatever
[07:30:21] <scott_gonzalez> We should probably standardize on command line options across projects.
[07:30:45] <scott_gonzalez> The plugins site supports specifying a port: https://github.com/jquery/plugins.jquery.com/blob/master/scripts/update-server.js#L6
[07:31:09] <scott_gonzalez> It uses -p, but I'd be happy to change to whatever we decide to standardize on, like --port
[07:31:34] <scott_gonzalez> We should probably also standardize the default port.
[07:31:46] <gnarf> scott - can you make it -p or --port ?
[07:32:07] <gnarf> scott_gonzalez: also - for some reason I don't see you as being in this channel... oddd
[07:32:13] <scott_gonzalez> gnarf: Sure. We should pick an option parsing module then :-)
[07:32:32] <gnarf> scott_gonzalez agree
[07:32:49] <gnarf> brb, gonna try restarting my irc client to see if it will let me tab complete you then :)
[07:33:00] <scott_gonzalez> https://github.com/substack/node-optimist/
[07:33:54] <gnarf> scott_gonzalez: yay!
[07:33:56] <gnarf> scott_gonzalez: i take whatever module you think is best
[07:33:58] <gnarf> as far as I can tell - you're our node expert now ;)
[07:34:21] <scott_gonzalez> \o/
[07:35:33] <gnarf> also scott_gonzalez - can you look at jquery/download.jqueryui.com ?
[07:35:49] <gnarf> see if you can get a "daemon" script for it?
[07:35:49] <scott_gonzalez> For the port setting or for something else?
[07:35:53] <scott_gonzalez> oh.
[07:36:03] <gnarf> i.e. forever, or a looping restarter thing like you did with plugins
[07:36:07] <scott_gonzalez> sure
[07:36:10] <gnarf> i'd like to get somewhat "standardized"
[07:36:17] <gnarf> also jzaefferer - thought....
[07:36:55] <gnarf> could the "build jqueryui from version tag" part be a grunt task inside download.jqueryui.com's grunt.js ?
[07:37:25] <gnarf> something like grunt prepare:1.9b1
[07:37:43] <gnarf> would git checkout jquery-ui to that tag and build it and store it in this elusive "versions" directory?
[07:51:05] <gnarf> jzaefferer: basically, as it is now, setting up a "new version" in this builder will be a painful task, it feels like it could be abstracted to a simple git post-receive hook
[07:52:32] <gnarf> also scott_gonzalez - where was that repo for "gith" ?
[07:52:43] <gnarf> i kinda wanna play with trying to get that running today
[07:56:30] <scott_gonzalez> gnarf: https://github.com/scottgonzalez/node-git-notifier
[07:56:45] <scott_gonzalez> gnarf: https://gist.github.com/871a3f0c37d7f9cba50a
[07:57:27] <doesallmagic> Project jQuery UI - 1.6.x core build #11: STILL FAILING in 26 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/11/
[07:57:28] <doesallmagic> Scott González: Mouse: Don't try to unbind delegated event handlers if they don't exist. Fixes #8416 - Draggable breaks during drag if any other draggable is removed or destroyed.
[08:00:12] <gnarf> scott_gonzalez: so, to use it, i can just git clone https://github.com/scottgonzalez/node-git-notifier.git and write a "server.js" that server = require("./Notifier.js").createServer(); server.listen( port ); and then add my .on's?
[08:00:20] <scott_gonzalez> yup
[08:00:40] <gnarf> scott_gonzalez: cool, second random question related to this
[08:01:04] <gnarf> could i set up a "notifier.d/jquery-ui.js" "notifier.d/web-base-template.js" type situation?
[08:01:19] <gnarf> and include all those js files / pass them "server" ?
[08:01:43] <scott_gonzalez> Yeah, you could have a main file that creates the server then implement those as:
[08:01:54] <gnarf> or even a .json ?
[08:02:05] <scott_gonzalez> module.exports = function( server ) {
[08:02:20] <scott_gonzalez> You could do json too if you want, if you can parse out the info and generate the handlers.
[08:02:27] <gnarf> that makes sense too
[08:02:38] <gnarf> i want to basically have a ".sh" and a ".js" for each of them
[08:02:47] <gnarf> figure the "listener" can spawn the .sh
[08:07:25] <gnarf> scott_gonzalez: would notifier.on( "jquery/web-base-template/tags/*.*" ) find only tags with a "." in them?
[08:07:32] <gnarf> for detecting the "symver" tags?
[08:18:55] <scott_gonzalez> gnarf: Sorry, was on a call.
[08:19:06] <scott_gonzalez> I'm not sure if that works, let me check.
[08:23:56] <scott_gonzalez> gnarf: Doesn't work. The wildcards are only for sections, not names within sections.
[08:24:30] <gnarf> scott_gonzalez: so i need to write a function to verify that its a semver tag then?
[08:25:10] <scott_gonzalez> Yeah
[08:25:16] <scott_gonzalez> You can npm install semver
[08:25:23] <scott_gonzalez> Then it'll just be one line of code :-)
[08:31:42] <doesallmagic> Project jQuery UI - 1.7.x core build #11: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/11/
[08:31:43] <doesallmagic> Scott González: Mouse: Don't try to unbind delegated event handlers if they don't exist. Fixes #8416 - Draggable breaks during drag if any other draggable is removed or destroyed.
[08:31:48] <gnarf> scott_gonzalez: cool
[08:31:56] <gnarf> scott_gonzalez: how do i best spawn a process?
[08:33:55] <gnarf> and/or how can i resolve notifier.d/*.js
[08:51:09] <gnarf> scott_gonzalez: child_process.spawn ??
[08:51:51] <scott_gonzalez> What about it?
[08:52:24] <gnarf> is that the best thing for spawning something?
[08:52:37] <scott_gonzalez> Yeah, spawn or exec
[08:52:41] <gnarf> also - how can I do something for each ./notifier.d/*.js
[08:53:41] <scott_gonzalez> fs.readdir()
[08:53:48] <scott_gonzalez> or, since this is startup, fs.readdirSync()
[08:54:32] <scott_gonzalez> Do you want different processes for each one though?
[09:00:47] <jzaefferer> gnarf: all the above is great input. My assumption so far was that it would somehow get integrated with the release process, but having something similar to the plugins site makes sense
[09:00:52] <scott_gonzalez> gnarf: I forgot how to op myself :-/
[09:01:02] <gnarf> scott_gonzalez: /msg chanserv op #channel
[09:02:11] <scott_gonzalez> Thanks. I was using nickserv instead :-p
[09:02:14] <gnarf> scott_gonzalez: can i borrow your test packet script for this thing?
[09:02:24] <jzaefferer> gnarf: can you put together a ticket (or update the existing infra ticket) with that information? I can then implement whatever is needed
[09:03:15] <scott_gonzalez> gnarf: You mean the script I run to populate the plugins site?
[09:04:23] <gnarf> scott_gonzalez: or the test you had for this post-receive --- or were you just hitting the test button on github?
[09:04:33] <gnarf> but i guess the one for the plugins site works
[09:04:37] <gnarf> i can just change the repo
[09:05:53] <scott_gonzalez> I was using the test button on GitHub.
[09:05:59] <gnarf> damn
[09:06:04] <gnarf> i need it for local testing
[09:06:14] <gnarf> im sure i can manually craft one based on your test for the plugins site
[09:06:15] <gnarf> right?
[09:06:26] <scott_gonzalez> gnarf: I have some data you can use.
[09:06:35] <scott_gonzalez> https://gist.github.com/871a3f0c37d7f9cba50a
[09:06:51] <scott_gonzalez> There are files with full post-receive hook data.
[09:07:11] <scott_gonzalez> You should be able to combine that with https://gist.github.com/2932451
[09:07:29] <scott_gonzalez> I have a script that does that, but it's on my other laptop and I'm in Panera.
[09:08:12] <gnarf> panera day!
[09:08:43] <scott_gonzalez> Yup, a day early cuz I'm going up to PA tomorrow.
[09:19:36] <scott_gonzalez> jzaefferer: If you use optimist (https://github.com/substack/node-optimist/) for the option parsing, I'll just copy what you do into the plugins site.
[09:19:51] <jzaefferer> okay, that works
[11:15:43] <gnarf> scott_gonzalez: this is kinda working
[11:15:46] <gnarf> wee!!!
[11:15:49] <scott_gonzalez> :-)
[11:16:01] <scott_gonzalez> gnarf: Let me know if you want me to review anything.
[11:16:04] <gnarf> i just got it to update the notifier
[11:16:05] <gnarf> :)
[11:16:12] <scott_gonzalez> nice
[11:18:24] <gnarf> scott_gonzalez: this was what i was playing with: https://github.com/jquery/infrastructure/commit/1f8748e
[11:18:25] <socialhapy> ★ Github API: no ref/branch found
[11:25:25] <gnarf> scott_gonzalez: i think i might just pull request this notify-server.js and make a lib/logger.js
[11:26:41] <scott_gonzalez> I can just make the logger code from the plugins site into a module if we're going to use that everywhere.
[11:27:16] <scott_gonzalez> It's pretty much the same code you have for the logger, right?
[11:27:25] <gnarf> exact ripoff
[11:27:39] <gnarf> i just changed module.exports to a return in a IIFE
[11:27:59] <scott_gonzalez> Yeah, we can just have a jquery-logger repo and then use that for all of our projects.
[11:29:00] <scott_gonzalez> We wouldn't even need to put it on npm: https://github.com/jquery/download.jqueryui.com/blob/master/package.json#L14
[11:29:24] <scott_gonzalez> It's so simple and it'll never break, so we could just point all of our projects directly at it.
[11:32:26] <gnarf> lets do it
[11:33:40] <scott_gonzalez> Ok, I'll put that on my list. I'll get to it today.
[11:40:03] <gnarf> k - afk a bit, lunch
[12:08:19] <scott_gonzalez> Widget upgrade guide is huge: https://gist.github.com/4b08ed85f1302cf1005b#widget
[12:14:28] <gnarf> scott_gonzalez: "and the _focusable method adds the ui-state-focus class on hover"
[12:14:34] <gnarf> ^^^ im sure that should be focus ?
[12:14:47] <scott_gonzalez> yes, thanks
[12:16:26] <scott_gonzalez> Only 1600 lines so far...
[12:17:07] <scott_gonzalez> Effects are next on the list.
[12:38:54] <gnarf> scott_gonzalez: i wanna talk to mikesherov about https://github.com/jquery/jquery-color/issues/13
[12:38:54] <socialhapy> ★ Issue #13 on jquery-color (gnarf37; 1y, 4m ago): borderColor as an animation key should prefilter to the 4 individual border*Color properties
[12:39:06] <gnarf> he had shown interest in solving it
[12:39:45] <scott_gonzalez> ok
[12:40:25] <gnarf> the other open issue i'm comfortable shipping with
[12:42:05] <gnarf> scott_gonzalez: see #jquery-dev for that resolution
[12:42:58] <scott_gonzalez> :-)
[12:50:37] <scott_gonzalez> Just need to document the effects API redesign :-)
[12:51:20] <scott_gonzalez> I've got the rest of the effects changes documented: https://gist.github.com/4b08ed85f1302cf1005b#effects
[13:06:55] <gnarf> scott_gonzalez: with mikesherov's fix 2.0 is probably ready
[13:07:03] <gnarf> 2.0.0 ;)
[13:14:55] <gnarf> scott_gonzalez: can you give me push to node-git-notifier - or should I pull request you? :)
[13:40:33] <scott_gonzalez> gnarf: What are you adding?
[13:49:31] <scott_gonzalez> gnarf: This isn't back-compat is it? http://bugs.jqueryui.com/ticket/7318
[13:50:00] <scott_gonzalez> Oh, nevermind, it is.
[14:06:44] <scott_gonzalez> gnarf: https://gist.github.com/4b08ed85f1302cf1005b#redesigned-effects-api
[14:35:14] <scott_gonzalez> gnarf: Pulling the logging code into a module would require a way to set the name to pass to syslog.init()
[14:35:42] <scott_gonzalez> I'd rather not have to do that every place it's required, since that's cumbersome and error prone.
[14:36:49] * scott_gonzalez We could always just define a local logger file like:
[14:37:32] <scott_gonzalez> module.exports = require( "logger" ).init( "some name" );
[14:38:00] <scott_gonzalez> Then have everything in the project use require( "./logger" ) instead of require( "logger" )
[17:25:26] <scott_gonzalez> DONE! https://gist.github.com/4b08ed85f1302cf1005b
[17:49:45] <scott_gonzalez> gnarf: .
[17:50:03] <gnarf> scott_gonzalez:
[17:50:29] <scott_gonzalez> ^^^
[17:50:54] <scott_gonzalez> Thoughts on a one line local logger which uses the logger module?
[17:51:03] <scott_gonzalez> In order to set the name in one place.
[17:53:27] <gnarf> hrm
[17:54:11] <gnarf> each require gets its own logger right
[17:54:23] <scott_gonzalez> They all get the same.
[17:54:28] <scott_gonzalez> Well, it depends what you mean.
[17:54:32] <scott_gonzalez> They all load the same module instance.
[17:54:45] <scott_gonzalez> But the addition of the .init() method would mean that .init() would return a new logger instance.
[17:55:01] <gnarf> require( "logger" ).init( "proc-name" )
[17:55:14] <gnarf> scott_gonzalez: or it could store in a "singleton"
[17:55:34] <scott_gonzalez> Right, but the problem is that some repos won't have a single main script.
[17:55:39] <gnarf> sure
[17:55:50] <gnarf> i would say we use a different name than "logger" then
[17:55:56] <gnarf> for one of them
[17:56:04] <gnarf> because otherwise thats gonna be a little confusing i think
[17:56:18] <gnarf> even just "plugins-logger" or something
[17:56:21] <scott_gonzalez> So if the project does have a main script, you could just do `require( "logger" ).init( "proc-name" )` and use the singleton.
[17:56:26] <gnarf> for the "plugins" site logger
[17:57:08] <scott_gonzalez> But for something like the plugins site which has many individual scripts, I'd want to have a local file which just do that one line so that every script is guaranteed to use the same name.
[17:57:37] <scott_gonzalez> Or we can just decide that we want different names within the same repo.
[17:58:04] <scott_gonzalez> Like "plugins.jquery.com-update-server" "plugins.jquery.com-wordpress", etc.
[17:58:23] <scott_gonzalez> They'll have different pids anyway.
[17:58:27] <scott_gonzalez> Since they're different scripts.
[18:00:49] <scott_gonzalez> This is probably not a big deal.
[18:00:55] <scott_gonzalez> It's less than one line per script.
[18:01:12] <scott_gonzalez> I should probably just add the .init() method and let each repo deal with it however it wants.
[18:02:23] <gnarf> true
[18:02:33] <scott_gonzalez> Ok, I'll go implement this.
[18:08:06] <gnarf> scott_gonzalez: whats the way to get the dirname of $0 ?
[18:08:13] <gnarf> or like the dirname of the file you're in?
[18:08:53] <scott_gonzalez> require( "path" ).dirname( __filename )
[18:09:28] <gnarf> thx :)
[18:15:59] <scott_gonzalez> gnarf: This seems to work: https://github.com/scottgonzalez/node-logger
[18:16:21] <scott_gonzalez> Super minimal package.json and I can reference it via the git URL if we want and not publish to npm.
[18:16:35] <scott_gonzalez> If that looks good I'll make the repo in the jquery account and push it up.
[18:20:34] <gnarf> scott_gonzalez:     "logger": "https://github.com/scottgonzalez/node-logger.git"  ?
[18:21:08] <scott_gonzalez> I used "logger": "git://github.com/scottgonzalez/node-logger.git" but I should try with a read-only HTTP URL.
[18:21:09] <scott_gonzalez> one sec
[18:21:40] <scott_gonzalez> Oh, well I guess that's a read-only git URL.
[18:21:43] <scott_gonzalez> That should be fine, right?
[18:21:45] <gnarf> hrm
[18:21:54] <gnarf> node syslog requires node 0.8
[18:22:11] <gnarf> i suppose we should push 0.8 to stage right now anyway
[18:22:26] <scott_gonzalez> Well, it doesn't actually require 0.8
[18:22:35] <scott_gonzalez> I'm running 0.6.20 right now.
[18:23:03] <scott_gonzalez> But, the version of node-syslog that's in the plugins site doesn't support 0.8.
[18:23:12] <scott_gonzalez> That was actually on my list to look into.
[18:23:19] <scott_gonzalez> So if the new version supports 0.8, that's great.
[18:23:26] <scott_gonzalez> I really want to get all of our repos onto 0.8.
[18:23:47] <gnarf> scott_gonzalez: npm install failed when i used it
[18:23:49] <gnarf> :)
[18:23:53] <scott_gonzalez> I landed a fix in grunt for 0.8 the other day.
[18:23:57] <scott_gonzalez> hmm...worked for me.
[18:24:33] <scott_gonzalez> gnarf: What version of node/npm?
[18:24:40] <gnarf> i dunno
[18:24:47] <gnarf> lemme check
[18:24:55] <gnarf> 0.6.19
[18:24:57] <scott_gonzalez> https://gist.github.com/3232280
[18:25:07] <gnarf> 1.1.24
[18:25:29] <scott_gonzalez> It might be npm 1.1.24 enforcing engines.
[18:25:40] <scott_gonzalez> There was a discussion about this when 0.8 came out.
[18:26:39] <gnarf> im installing 0.8.4 as my main
[18:26:41] <gnarf> right now
[18:27:45] <gnarf> also, you never responded about push to node-git-notify so i forked
[18:27:46] <gnarf> :)
[18:28:23] <scott_gonzalez> I asked what you wanted to push, but you never responded :-P
[18:29:21] <gnarf> oh
[18:29:25] <gnarf> notify-server.js
[18:29:39] <scott_gonzalez> gnarf: https://github.com/isaacs/npm/commit/ee1d168d7a4798b67bb9a7667b5ec93a8be3d953
[18:29:40] <socialhapy> ★ Commit on npm by isaacs (1m, 4d ago): Make 'engines' field advisory  Discussion: https://groups.google.com/group/nodejs/browse_thread/thread/fd98204ce250d919
[18:29:41] <gnarf> even if its just an "example"
[18:29:55] <scott_gonzalez> Introduced in 1.1.33
[18:29:59] <scott_gonzalez> So I was right.
[18:30:03] <scott_gonzalez> And this is why he made that change.
[18:30:11] <gnarf> npm install -g npm ?
[18:30:18] <scott_gonzalez> Because the engine field in most modules is a lie.
[18:30:33] <scott_gonzalez> I guess.
[19:20:32] <gnarf> scott_gonzalez: sent a pull
