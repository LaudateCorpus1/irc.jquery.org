[02:42:58] <doesallmagic> Project jQuery UI - git core build #327: STILL FAILING in 18 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/327/
[02:44:47] <pbakaus> yo
[03:06:43] <doesallmagic> Project jQuery UI 1-9-stable - git core build #114: STILL FAILING in 23 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/114/
[03:16:36] <doesallmagic> Project jQuery UI - 1.6.x core build #222: STILL FAILING in 8 min 22 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/222/
[03:21:42] <doesallmagic> Project jQuery UI - 1.7.x core build #223: STILL FAILING in 5 min 3 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/223/
[03:41:46] <doesallmagic> Project jQuery UI - 1.8.x core build #198: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/198/
[04:51:48] <jquicommit> 01[13download.jqueryui.com01] 15rxaviers pushed 1 new commit to 06master: 02http://git.io/ak97qw
[04:51:48] <jquicommit> 13download.jqueryui.com/06master 14e2de8b8 15Rafael Xavier de Souza: Update README. Fixes #116
[04:55:13] <doesallmagic> Project download.jqueryui.com build #142: SUCCESS in 3 min 4 sec: http://swarm.jquery.org:8080/job/download.jqueryui.com/142/
[04:55:13] <doesallmagic> rxaviers: Update README. Fixes #116
[05:18:46] <scott_gonzalez> Hey pbakaus!
[05:19:00] <pbakaus> morning!
[05:47:26] <scott_gonzalez> kborchers jzaefferer: Do either of you remember why we added the scrollbar code to position?
[05:47:42] <scott_gonzalez> I found this commit: https://github.com/jquery/jquery-ui/commit/c11ac9c3f30d923164dea9cbe6982d212388fddb#commitcomment-2695533
[05:47:43] <b-ot> scott_gonzalez: David Murdoch (21mon 3d ago): Now takes scrollbar width into account in collision detection
[05:47:46] <scott_gonzalez> No ticket.
[05:48:45] <jzaefferer> scott_gonzalez: there should be a visual testcase covering this. Drag the item to the lower right and look for collision. With a scrollbar in place, it needs to happen earlier.
[05:48:48] <kborchers> scott_gonzalez: i think exactly what that commit message says ‚Ä¶ it causes the collision to happen at the scrollbar when present instead of the window
[05:49:52] <scott_gonzalez> There's definitely no visual test case.
[05:50:03] <scott_gonzalez> And the collision definitely isn't happening before the scrollbar.
[05:52:01] <kborchers> scott_gonzalez: i know it did. maybe something changed?
[05:52:03] <scott_gonzalez> hmm..wait a second.
[05:52:59] <scott_gonzalez> Ok, confirmed.
[05:53:06] <scott_gonzalez> The scrollbar logic is in fact reversed.
[05:54:45] <scott_gonzalez> I hate position.
[05:56:40] <kborchers> scott_gonzalez: really ‚Ä¶ it's weird. it seems like every month or two i look at that and think "it's reversed, no it isn't, yes it is, no it isn't" then give up :P
[05:56:55] <scott_gonzalez> It's definitely reversed.
[05:57:05] <kborchers> ok
[05:57:08] <scott_gonzalez> I really don't want to write a test for this.
[05:57:20] <scott_gonzalez> Seems like it's only going to validate that the function returns what it does.
[05:57:21] <kborchers> i here mikesherov likes tests :P
[05:57:31] <scott_gonzalez> Not that it does the right thing.
[05:57:34] <kborchers> s/here/hear
[05:57:43] <scott_gonzalez> Since some browsers won't even have scrollbars.
[05:57:50] <kborchers> yeah
[05:59:52] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/4Lhagg
[05:59:52] <jquicommit> 13jquery-ui/06master 14e9c04bf 15Scott Gonz√°lez: Position: Fix orientation check for scrollbar widths. Fixes #8763 - Position: getScrollInfo() swapped width and height.
[06:01:51] <doesallmagic> Project jQuery UI build #980: STILL FAILING in 2 min 2 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/980/
[06:01:52] <doesallmagic> Scott Gonz√°lez: Position: Fix orientation check for scrollbar widths. Fixes #8763 - Position: getScrollInfo() swapped width and height.
[06:57:15] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/apMTUQ
[06:57:15] <jquicommit> 13jquery-ui/06master 141c80735 15Zaven Muradyan: Droppable: Changed drop event to loop over a copied array instead of the droppables directly. Fixed #9116 - Droppable: Drop event can cause droppables to remain active if any droppable is created/destroyed in the event handler.
[06:57:48] <doesallmagic> Project jQuery UI build #981: STILL FAILING in 36 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/981/
[06:57:48] <doesallmagic> Scott Gonz√°lez: Droppable: Changed drop event to loop over a copied array instead of the droppables directly. Fixed #9116 - Droppable: Drop event can cause droppables to remain active if any droppable is created/destroyed in the event handler.
[07:14:01] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/Ge3IFw
[07:14:01] <jquicommit> 13jquery-ui/06master 14d0ad572 15Scott Gonz√°lez: Droppable tests: Cleanup.
[07:32:19] <doesallmagic> Project jQuery UI build #982: STILL FAILING in 18 min: http://swarm.jquery.org:8080/job/jQuery%20UI/982/
[07:32:20] <doesallmagic> Scott Gonz√°lez: Droppable tests: Cleanup.
[07:36:31] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/opQ2WA
[07:36:31] <jquicommit> 13jquery-ui/06master 14948563b 15Scott Gonz√°lez: Effects: Delegate to core show/hide when the element is already in the correct final state. This forces the element to go through the olddisplay tracking and forces styles on elements even if they're hidden via an ancestor. Fixes #9120 - Effects: .hide() inconsistent with core with a hidden parent.
[07:58:19] <doesallmagic> Project jQuery UI build #983: STILL FAILING in 17 min: http://swarm.jquery.org:8080/job/jQuery%20UI/983/
[07:58:20] <doesallmagic> Scott Gonz√°lez: Effects: Delegate to core show/hide when the element is already in the correct final state. This forces the element to go through the olddisplay tracking and forces styles on elements even if they're hidden via an ancestor. Fixes #9120 - Effects: .hide() inconsistent with core with a hidden parent.
[08:39:41] <scott_gonzalez> kborchers: Why did we need isNewMenu in autocomplete?
[08:40:16] <scott_gonzalez> I know it's working around Firefox craziness, but why, well, let me ask you this instead....
[08:40:39] <scott_gonzalez> Can you think of any problems with this? https://github.com/jquery/jquery-ui/commit/d5d3a745b00dd476195cf25b35cc02f3bc31f814
[08:40:40] <b-ot> scott_gonzalez: Scott Gonz√°lez (20h 4m ago): Autocomplete: Set isNewMenu flag on every suggestion. Fixes #9118 - Autocomplete: Mouse auto-highlights option in Firefox.
[08:41:58] <kborchers> scott_gonzalez: looking
[08:46:14] <kborchers> scott_gonzalez: i can't think of an issue with that ‚Ä¶ not that it makes that big of a difference but do you think https://github.com/jquery/jquery-ui/blob/d5d3a745b00dd476195cf25b35cc02f3bc31f814/ui/jquery.ui.autocomplete.js#L494 should maybe go here https://github.com/jquery/jquery-ui/blob/d5d3a745b00dd476195cf25b35cc02f3bc31f814/ui/jquery.ui.autocomplete.js#L524 ?  just seems better organized in my head but not necessary
[08:47:28] <scott_gonzalez> kborchers: That was my first plan, but I think we want to expose _renderMenu() as something that people can override.
[08:47:47] <kborchers> oh. ok then it makes sense where it is
[08:56:19] <rxaviers> jzaefferer, wanna review concat-minify or shall I go ahead and land it?
[08:56:39] <rxaviers> I've fixed last comments there
[09:03:05] <jzaefferer> rxaviers: what did you change?
[09:04:15] <rxaviers> concat-minify: prepare grunt task does that, not default.
[10:28:48] <scott_gonzalez> PEOPLE!
[10:28:50] <scott_gonzalez> https://gist.github.com/scottgonzalez/83e5471837d73a5c6057
[10:29:05] <scott_gonzalez> gnarf jzaefferer kborchers tj_vantoll petersendidit mikesherov
[10:29:08] <scott_gonzalez> I want to land that.
[10:29:11] <scott_gonzalez> Like now.
[10:29:16] <mikesherov> Hello
[10:29:25] <scott_gonzalez> And break everyone's code if they're using our custom remove events.
[10:29:47] <mikesherov> hm
[10:29:51] <mikesherov> what's the benefit?
[10:29:58] <scott_gonzalez> It should be faster.
[10:30:04] <scott_gonzalez> Also less hacky.
[10:30:14] <scott_gonzalez> And public API.
[10:30:29] <scott_gonzalez> cleanData can blow up on us any day.
[10:30:32] <scott_gonzalez> It has in the past.
[10:30:48] <mikesherov> so, less duckpunching
[10:30:50] <scott_gonzalez> I've also wanted to rename the event for a while.
[10:30:59] <mikesherov> Yeah, I can dig
[10:31:09] <mikesherov> does this belong in a point release, though?
[10:31:18] <mikesherov> just asking
[10:31:19] <scott_gonzalez> Well, that's the thing, this is completely undocumented.
[10:31:25] <mikesherov> oh, fuck it
[10:31:30] <mikesherov> remove then
[10:31:33] <scott_gonzalez> But I'm pretty sure people are hooking into the remove event.
[10:31:56] <kborchers> scott_gonzalez: i would maybe check with mobile?
[10:32:08] <scott_gonzalez> On the other hand, we also got a bug report at one point for someone who was triggering a bubbling remove event.
[10:32:17] <scott_gonzalez> And it was causing widgets higher up to get destroyed.
[10:32:21] <scott_gonzalez> So we had to guard against that.
[10:32:34] <scott_gonzalez> Moving to widget:remove shoud alleviate that.
[10:32:46] <mikesherov> I mean, is it accidentally, or purposefully undocumented?
[10:32:55] <scott_gonzalez> purposefully
[10:32:58] <mikesherov> as long as no other jQuery projects rely on this, nuke.
[10:33:08] <mikesherov> that's IMHO
[10:33:12] <scott_gonzalez> It's an implementation detail for being able to clean up widgets when removed from the DOM.
[10:33:21] <scott_gonzalez> Ok, I'll ask mobile.
[10:35:46] <rxaviers> Just read the above thread.
[10:35:51] <tj_vantoll> +1 If you do happen to be using this, it's a pretty quick change from one hook to another.  I didn't know this existed, so it would nice to have this functionality documentable; I could see where it might be useful.
[10:35:56] <rxaviers> It seems we dont have the "official" obligation to support it, since it's not documented
[10:36:10] <scott_gonzalez> tj_vantoll: But that's the thing, it's not a feature of UI.
[10:36:16] <scott_gonzalez> It's just an implementation detail.
[10:36:28] <rxaviers> But, if people will be impacted. Maybe, the change could go together with a documentation on how to port former code.
[10:36:41] <tj_vantoll> What exactly is the old code doing, I think I'm misunderstanding.
[10:36:58] <scott_gonzalez> It listens for when $.cleanData() is called and triggers a remove event on the element.
[10:37:08] <scott_gonzalez> This is the code that auto-destroys a widget if you call .remove()
[10:37:41] <tj_vantoll> Ah ok.  So $.cleanData is going away in favor of a friendlier API.
[10:38:06] <scott_gonzalez> $.cleanData() is also a private method in jQuery core.
[10:38:22] <scott_gonzalez> We're duck punching to give ourselves a way to know when an element is removed.
[10:38:44] <scott_gonzalez> The idea is to stop duck punching undocumented methods and use the public special events API to accomplish the same thing.
[10:38:59] <scott_gonzalez> We're creating a special event named "widget:remove"
[10:39:06] <scott_gonzalez> And we bind to it whenever a widget is created.
[10:39:25] <scott_gonzalez> Then if the element is removed, jQuery will automatically remove the event handlers.
[10:39:38] <scott_gonzalez> So we use that as a signal that the widget should be destroyed.
[10:39:50] <scott_gonzalez> Hmm...actually, this might not be the best.
[10:40:18] <tj_vantoll> Ok thanks.  How would that affect end users then?
[10:41:35] <scott_gonzalez> It only affects them if they're doing elem.on( "remove", ... ) and treating our implementation as a public API.
[10:42:11] <scott_gonzalez> So, I just realized this isn't great because destroy will be called twice if you manually destroy.
[10:42:39] <tj_vantoll> Explicitly calling destroy?
[10:42:57] <scott_gonzalez> The manual call will happen, then all events will be removed, which will cause the special event to kick in and destroy will be called again.
[10:43:05] <scott_gonzalez> Yeah like elem.tabs( "destroy" )
[10:43:05] <djQuery> isn't destroy also a private?
[10:43:09] <scott_gonzalez> no
[10:43:13] <scott_gonzalez> It's public.
[10:45:12] <tj_vantoll> Indeed.  Thanks for the explanation, that part of the widget factory has always seemed a bit like magic to me.
[10:45:29] <scott_gonzalez> Heh, it is a bit like magic. Magic that occassionally breaks when core changes :-P
[10:49:41] <scott_gonzalez> I went into the future and commented on GitHub :-P http://cl.ly/image/10110T2Y2E3Q
[10:50:47] <tj_vantoll> Or GitHub has become self aware.
[10:55:08] <scott_gonzalez> DaveMethvin: https://github.com/jquery/jquery-ui/pull/886#issuecomment-14132116 special events didn't work out
[10:55:09] <b-ot> scott_gonzalez: Pull request #886 by boraMan (1mon 1w ago): Replaced $.cleanData-hook with $.event.special
[12:25:26] <gnarf> hrm
[12:25:28] <gnarf> rxaviers: around?
[12:25:34] <rxaviers> yep
[12:25:46] <gnarf> jqdeploy 12048 92.4  0.0  21032  2032 ?        R    05:47 368:29 convert -size 1x44444444400 xc:#555 /var/www/download.jqueryui.com/lib/../template/themeroller/texture/glass.png -compose dissolve -define compose:args=100,100 -composite PNG:-
[12:25:53] <gnarf> can we add some sane size checks?
[12:26:24] <gnarf> there were two of those giant images running
[12:26:40] <gnarf> thats a potential DOS
[12:31:48] <rxaviers> wow
[12:32:10] <rxaviers> sure
[12:32:28] <rxaviers> I will check the biggest we use and limit to that
[12:32:37] <rxaviers> plz, can you file an issue?
[12:33:19] <gnarf> i think like 3k could be a sane
[12:33:24] <gnarf> and yeah, will do
[12:34:09] <jquicommit> [13download.jqueryui.com] 15gnarf37 opened issue #117: Limit dimensions of generated images.  02http://git.io/Pxbr1g
[12:34:18] <gnarf> ^ rxaviers
[12:34:26] <rxaviers> ;) thks
[12:42:15] <gnarf> hrm rxaviers - looking at your splunk dashboard
[12:42:29] <gnarf> i'm wondering if there would be a way to graph min / avg / max on that build time
[12:42:45] <rxaviers> that would be cool
[12:44:01] <rxaviers> Lately (more precisely to write a DB post), I've done some tweaks there...
[12:44:16] <rxaviers> but I still have some doubts
[12:44:45] <rxaviers> like some charts takes long to load. I've just asked clarkbox in a issue about that
[12:45:09] <rxaviers> it would be more nice to have that prepared prior to page load
[12:45:15] <rxaviers> updated like daily
[12:45:44] <rxaviers> Last ones I created was to investigate requests
[12:45:52] <rxaviers> its #
[12:46:22] <clarkbox> that can be sped up rxaviers
[12:46:34] <rxaviers> \o/
