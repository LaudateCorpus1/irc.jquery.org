[06:16:06] <jquicommit> [13jquery-ui] 15tjvantoll pushed 1 new commit to 06master: 02http://git.io/2IwDvQ
[06:16:06] <jquicommit> 13jquery-ui/06master 14e91f38e 15Usman Akeju: Progressbar: replace image reference in base CSS with data URI...
[07:47:47] <scott_gonzalez> ?tell fnagel Please make sure to always use tabs for indentation. I'm getting lots of conflicts because of this.
[07:47:47] <b-ot> scott_gonzalez: Iâ€™ll tell fnagel about that.
[08:14:26] <scott_gonzalez> tj_vantoll: Well, the "simple" part is done: https://github.com/scottgonzalez/jquery-ui/tree/calendar-simple
[08:14:37] <scott_gonzalez> The PR is now rebased onto datepicker-rebase-cleanup :-)
[08:14:50] <scott_gonzalez> Now for the fun part of curating the history...
[08:15:37] <scott_gonzalez> I haven't done anything to the PR itself (both branches are still at their old states).
[08:15:38] <tj_vantoll> 131 commits. Does that includes the original rewrite stuff?
[08:15:42] <scott_gonzalez> yeah
[08:15:46] <tj_vantoll> ah okay
[08:15:56] <scott_gonzalez> There were 105 real commits in the PR.
[08:16:06] <tj_vantoll> oh woah
[08:16:23] <scott_gonzalez> That was reduced to 103 during the rebase because two of the commits no longer resulted in any changes.
[08:16:28] <tj_vantoll> Time to rewrite history :P
[08:16:34] <scott_gonzalez> yeah, seriously
[08:16:43] <scott_gonzalez> The unit tests don't pass though :-/
[08:16:51] <scott_gonzalez> They pass before the PR, but not after.
[08:17:02] <scott_gonzalez> I confirmed that the results are the same for the rebase and the PR.
[08:17:09] <scott_gonzalez> So it's not something that broke during the rebase.
[08:17:10] <tj_vantoll> They should pass until the calendar/datepicker split.
[08:17:16] <scott_gonzalez> Yeah, they do.
[08:17:38] <tj_vantoll> And I thought fnagel had datepicker's suite cleaned up in the PR.
[08:17:43] <scott_gonzalez> At the end of the PR, there are 2 failing assertions.
[08:17:56] <tj_vantoll> Ok, that sounds familiar.
[08:18:07] <scott_gonzalez> I didn't look at the tests to see if the failures are bad code or bad tests.
[08:18:12] <scott_gonzalez> I just verified that the results are the same before and after my rebase.
[08:18:24] <scott_gonzalez> But the state of the unit tests in between is actually pretty bad.
[08:18:36] <tj_vantoll> And the failing tests aren't those flaky keyboard testing too right?
[08:18:38] <scott_gonzalez> So I'd like to try to fix that during the history cleanup.
[08:18:49] <scott_gonzalez> Nope, both failures are for events.
[08:18:55] <scott_gonzalez> close and select
[08:19:02] <tj_vantoll> ugh
[08:19:27] <tj_vantoll> That's going to be really really hard to reconcile during a rebase.
[08:20:18] <scott_gonzalez> Well, at least we're at a point where rebasing doesn't result in conflicts.
[08:20:26] <scott_gonzalez> So making changes is much easier now.
[08:20:29] <tj_vantoll> progress
[09:17:49] <jqmobilecommit> [13jquery-mobile] 15ganchenkor opened issue #7554: Bower install jquery-mobile 02http://git.io/AhoEuw
[09:55:21] <jquicommit> [13api.jqueryui.com] 15tjvantoll opened issue #211: Document selectmenu's extension points 02http://git.io/xH6m8Q
[11:31:50] <gabriel_schulhof> scott_gonzalez: Ping! Hey! I'm working on API docs for web-ui-fw using the jQuery infrastructure. I'm wondering if the result is sufficiently de-branded so as not to infringe on the jQuery copyright: http://babulina.go-nix.ca:8080/nix/web-ui-fw-api-docs/local.api.jquerymobile.com/ What do you think?
[11:32:28] <gabriel_schulhof> scott_gonzalez: All the branded stuff is still there, but hidden. My next step is to process the pages through cheerio and actually remove those elements from the DOM.
[11:32:31] <scott_gonzalez> yeah
[11:32:59] <gabriel_schulhof> scott_gonzalez: Do I need to go the extra step and actually remove the stuff from the DOM?
[11:33:45] <scott_gonzalez> Well, you shouldn't be working from jquery-wp-content.
[11:33:55] <scott_gonzalez> Using grunt-jquery-content for the generation is fine.
[11:34:32] <gabriel_schulhof> I'm not too familiar with the wordpress side of things. That's why I'm reusing the content.
[11:34:51] <gabriel_schulhof> ... and I need to render the site using wget --mirror, because I can't officially host a wordpress site.
[11:34:53] <scott_gonzalez> jquery-wp-content is not allowed to be used.
[11:35:19] <gabriel_schulhof> Aha, OK.
[11:35:34] <scott_gonzalez> I mean, the PHP files are GPL.
[11:36:11] <scott_gonzalez> But you still shouldn't be using them.
[11:36:17] <gabriel_schulhof> So, I basically have to do my own blog, upload to it with grunt wordpress-deploy, and then render that. Right?
[11:36:19] <scott_gonzalez> There's really no reason to use them anyway.
[11:36:37] <scott_gonzalez> Yeah, it should actually be easier than what you're doing now.
[11:36:54] <gabriel_schulhof> OK.
[11:36:58] <scott_gonzalez> grunt-jquery-content and `grunt wordpress-deploy` will work with any WordPress site.
[11:37:40] <scott_gonzalez> So building that site from scratch (or even just pulling the structural CSS as a starting point) is what you'll want to do.
[11:37:56] <scott_gonzalez> It'll end up being much easier to build up than tear down.
[11:38:10] <gabriel_schulhof> OK. That makes sense.
[11:38:32] <gabriel_schulhof> Right now, I have about 45 steps of sed-ing and grepping and awking that needs to be done after the mirroring.
[11:38:34] <scott_gonzalez> If you have any questions about any of it, just ask.
[11:38:42] <gabriel_schulhof> OK. Thanks!
[11:39:16] <gabriel_schulhof> scott_gonzalez: The only interesting part will be deploying a second wordpress next to the jquery one.
[11:39:31] <scott_gonzalez> Why do you need to do so much post-processing to copy it over?
[11:39:50] <gabriel_schulhof> scott_gonzalez: Well, things like all links pointing to http://local.jquery*
[11:39:51] <scott_gonzalez> If you use rooted URLs for everything, it should be simple.
[11:40:06] <scott_gonzalez> Right, so that's why you don't want jquery-wp-content.
[11:41:31] <scott_gonzalez> All the URLs with domains are going to be things that you don't want on your site anyway.
[11:41:37] <scott_gonzalez> Because it's all the jQuery branding.
[11:43:14] <scott_gonzalez> gabriel_schulhof: You might want to check out https://github.com/jzaefferer/validation-theme
[11:44:10] <scott_gonzalez> Shows how simple it can be to create a custom site using grunt-jquery-content for the API docs.
[11:44:19] <gabriel_schulhof> scott_gonzalez: Well, I do want URLs like http://api.jquery.com/Types/#String to remain intact.
[11:44:56] <scott_gonzalez> Sure. My point is that if you're not working from jquery-wp-content, there are no URLs that need to be rewritten.
[11:47:40] <gabriel_schulhof> OK. So, that's exactly what I'll get. Excellent!
