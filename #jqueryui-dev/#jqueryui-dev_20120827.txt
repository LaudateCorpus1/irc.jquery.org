[02:14:30] <doesallmagic> Project jQuery UI - git core build #89: STILL FAILING in 13 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/89/
[03:01:07] <doesallmagic> Project jQuery UI - 1.6.x core build #38: SUCCESS in 29 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/38/
[03:18:13] <doesallmagic> Project jQuery UI - 1.7.x core build #37: SUCCESS in 16 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/37/
[03:43:25] <doesallmagic> Project jQuery UI - 1.8.x core build #13: STILL FAILING in 11 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/13/
[05:01:24] <scott_gonzalez> kborchers: https://gist.github.com/868d338e09fab7b669d7
[05:04:15] <kborchers> scott_gonzalez: yep, i think it makes sense for that to happen in menu
[05:04:22] <scott_gonzalez> ok
[05:05:42] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/BAsT6g
[05:05:42] <jquicommit> [jquery-ui/master] Menu: If the active element no longer exists after a refresh, blur the menu. - Scott González
[05:22:18] <doesallmagic> Yippie, build fixed!
[05:22:19] <doesallmagic> Project jQuery UI build #638: FIXED in 16 min: http://swarm.jquery.org:8080/job/jQuery%20UI/638/
[05:22:19] <doesallmagic> Scott González: Menu: If the active element no longer exists after a refresh, blur the menu.
[05:30:27] <scott_gonzalez> kborchers: Any progress on API site?
[05:32:01] <kswedberg> scott_gonzalez: (after my clean infall of Mt. Lion) grunt deploy is failing at wordpress-validate with "Error: connect ECONNREFUSED". Any ideas?
[05:32:31] <scott_gonzalez> hmm...bad user/pass?
[05:32:37] <scott_gonzalez> or bad URL?
[05:33:59] <kborchers> scott_gonzalez: a little, i was in a wedding this weekend so wasn't able to work but i plan on working tonight. hardest part is tracking down where some of the markup is generated in web-base-template so i can wrap things up in containing divs, etc. to be able to better match styles in the mockups
[05:34:45] <scott_gonzalez> kborchers: I tried to break up the templates in a logical way so that it's easy to follow.
[05:35:49] <scott_gonzalez> kswedberg: Were you able to verify the login info from config.json?
[05:36:02] <kborchers> scott_gonzalez: that part makes sense but since i'm not that familiar with the inner workings of wordpress, it's hard to figure out which php file is creating the content and where the functions it's using are at
[05:36:04] <kswedberg> scott_gonzalez: oh crap. MAMP wasn't running all weekend. Not sure how that happened. :-( trying again.
[05:36:19] <scott_gonzalez> kswedberg: heh
[05:36:48] <scott_gonzalez> kborchers: Ah, yeah. Most of the files are in the jquery theme, with -api.php in the name.
[05:37:00] <scott_gonzalez> Since they're shared across all API sites.
[05:37:25] <scott_gonzalez> Oh, also, I assume you're doing this anyway, but make sure you're working on the UI site.
[05:37:27] <kswedberg> scott_gonzalez: there we go. In case you hadn't noticed before … I'm a doofus.
[05:37:37] <scott_gonzalez> There are changes in the XSL that only exist in UI right now.
[05:37:52] <kborchers> scott_gonzalez: yes, i have been doing my work on UI
[05:37:57] <scott_gonzalez> kswedberg: Sometimes it's the simple things...
[05:38:06] <kswedberg> :)
[06:05:42] <kswedberg> scott_gonzalez: can we standardize on CSS rule brackets? base.css has most opening brackets —"{" — on a new line, but quite a few on the same line. I much prefer same line but will go with the majority opinion.
[06:05:55] <kswedberg> I just hate seeing some one way and some the other.
[06:06:03] <scott_gonzalez> same line
[06:06:27] <scott_gonzalez> I'm not sure who put those on a separate line, but it bothers me too.
[06:06:28] <kswedberg> thx. You and I constitute a majority then. ;-)
[06:06:37] <kswedberg> I'll fix.
[06:06:40] <scott_gonzalez> thanks
[06:07:13] <kswedberg> what about indenting some rules? seems needless to me.
[06:08:34] <scott_gonzalez> Seems silly.
[06:08:46] <kswedberg> k. I'll clean that up too. :)
[06:08:53] <scott_gonzalez> The only place I've seen it that seems ok is when prefixed rules are listed after a standard rule.
[06:09:04] <kswedberg> right.
[06:09:16] <scott_gonzalez> But I don't like when people do things like indenting top and left under position.
[06:14:12] <kborchers> kswedberg: thank you! that stuff has been driving me crazy!
[06:15:00] <kswedberg> kborchers: no problem! It's a little thing, but I find that it both distracts and fatigues me. (I'm a sensitive guy.)
[06:15:53] <kborchers> kswedberg: that must make me sensitive as well :)
[06:17:17] <kswedberg> ha! maybe so.
[06:18:34] <scott_gonzalez> Thoughts? https://github.com/jquery/jquery-ui/blob/651460792b3aeb7f05cbad5dc8f7b2276bdd9b29/ui/jquery.ui.spinner.js#L185
[06:48:02] <scott_gonzalez> gnarf: Did you see this? http://cl.ly/image/2O0y0m3T0F3o
[06:49:07] <jquicommit> [api.jqueryui.com] scottgonzalez pushed 1 new commit to master: http://git.io/NjSQZw
[06:49:07] <jquicommit> [api.jqueryui.com/master] Dialog: Fixed position option. - Scott González
[08:03:43] <jquicommit> [api.jqueryui.com] scottgonzalez pushed 1 new commit to master: http://git.io/uXHW8A
[08:03:43] <jquicommit> [api.jqueryui.com/master] data-selector: Added example. - Scott González
[09:07:40] <toddparker> morning all
[09:16:59] <toddparker> so we should re-group on where we are with popup stuffs
[09:17:24] <toddparker> also seems like we have an issue with fixed toolbars and android with popups. super.
[09:17:37] <toddparker> https://github.com/jquery/jquery-mobile/issues/4816#issuecomment-8046178
[09:22:59] <toddparker> https://github.com/jquery/jquery-mobile/issues/4874#issuecomment-8050741
[09:23:07] <toddparker> anyone have time to give these a look?
[09:25:44] <kborchers> toddparker: i think you meant to ask these in #jquerymobile-dev :D
[09:39:26] <jzaefferer> toddparker: even if I had time I wouldn't!!!11
[10:21:13] <toddparker> heh, sorry guys!
[10:22:21] <toddparker> fix it jzaefferer!
[14:26:03] <doesallmagic> Yippie, build fixed!
[14:26:04] <doesallmagic> Project jQuery UI - git core build #90: FIXED in 14 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/90/
[17:50:40] <jquicommit> [api.jqueryui.com] scottgonzalez pushed 8 new commits to master: http://git.io/3lkfVA
[17:50:40] <jquicommit> [api.jqueryui.com/master] Added long description and example for :focusable and :tabbable selectors. - Scott González
[17:50:40] <jquicommit> [api.jqueryui.com/master] .removeUniqueId(): Added note about not affecting elements with regular or no ids. - Scott González
[17:50:40] <jquicommit> [api.jqueryui.com/master] .disableSelection(): typo. - Scott González
[17:50:48] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/CPG3eQ
[17:50:48] <jquicommit> [jquery-ui/master] Effects: Cleanup. - Scott González
[17:57:29] <doesallmagic> Project jQuery UI build #639: FAILURE in 6 min 32 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/639/
[17:57:30] <doesallmagic> Scott González: Effects: Cleanup.
[18:05:09] <jquicommit> [api.jqueryui.com] scottgonzalez pushed 1 new commit to master: http://git.io/8Skj3Q
[18:05:09] <jquicommit> [api.jqueryui.com/master] Fixed typos. - Scott González
[18:13:30] <jquicommit> [api.jqueryui.com] scottgonzalez pushed 1 new commit to master: http://git.io/Kd_EKA
[18:13:30] <jquicommit> [api.jqueryui.com/master] .toggleClass(): Document switch parameter. - Scott González
[18:18:17] <jquicommit> [api.jqueryui.com] scottgonzalez pushed 1 new commit to master: http://git.io/xgp8Bg
[18:18:17] <jquicommit> [api.jqueryui.com/master] Added .switchClass(). - Scott González
[18:19:36] <scott_gonzalez> gnarf: ping
[18:31:46] <jquicommit> [api.jqueryui.com] scottgonzalez pushed 1 new commit to master: http://git.io/_Nh0gQ
[18:31:46] <jquicommit> [api.jqueryui.com/master] Sort options, methods and events by name. - Scott González
[18:43:00] <gnarf> scott_gonzalez: pong
[18:43:18] <scott_gonzalez> I noticed that we don't support .addClass( function() { return "foo"; }, 1000 )
[18:43:35] <scott_gonzalez> Think you can get that done for 1.9.0?
[18:43:46] <gnarf> hrm
[18:43:59] <scott_gonzalez> If not, I can tackle it.
[18:44:01] <gnarf> addClass( fn( i, currentClass ) ?
[18:44:04] <scott_gonzalez> yeah
[18:44:11] <scott_gonzalez> and removeClass, toggleClass.
[18:44:46] <gnarf> whats the delivery date?
[18:44:51] <gnarf> I could prolly get it done this week
[18:45:06] <scott_gonzalez> Hmm...actually, we already did an RC, maybe we should wait.
[18:45:51] <gnarf> this isn't a new issue
[18:45:55] <gnarf> it could wait
[18:46:00] <scott_gonzalez> yeah
[18:46:02] <gnarf> is there a ticket for it already?
[18:46:08] <scott_gonzalez> nope
[18:46:12] <gnarf> it could be fixed in a .1
[18:46:13] <scott_gonzalez> I noticed it while writing docs.
[18:46:39] <scott_gonzalez> Yeah, I'll file tickets for each method.
[18:46:42] <gnarf> scott_gonzalez: did you see my jquery PR about doing a .data( callback )
[18:46:42] <gnarf> ?
[18:46:48] <scott_gonzalez> We can land it right after 1.9.0.
[18:46:52] <gnarf> scott_gonzalez: curious if you had any opinions
[18:47:08] <gnarf> scott_gonzalez: I dunno that it needs 3 tickets... :)
[18:47:30] <scott_gonzalez> I'm not sure how I feel about the .data( callback ) API.
[18:47:51] <scott_gonzalez> Unless we do the return value.
[18:48:16] <gnarf> the return value makes more sense as I think about it
[18:48:32] <gnarf> but realistically, it just "extends" anyway
[18:48:47] <gnarf> modifying it directly is more useful
[18:50:21] <scott_gonzalez> http://bugs.jqueryui.com/ticket/8525
[18:50:41] <scott_gonzalez> It's just an inconsistency with other APIs.
[18:50:54] <scott_gonzalez> So saying that we're adding the function signature for consistency is odd.
[18:51:59] <gnarf> right, the return value thing is kinda nessecary
[18:52:06] <gnarf> like i said, makes more sense as I think about it
[18:52:37] <gnarf> I'm really looking forward to never having to do an .each( function(){ var data = jQuery(this).data(); }); again :)
[18:53:37] <scott_gonzalez> :-)
[19:05:47] <scott_gonzalez> kborchers: Any idea why this didn't work to get placeholder support for longdesc? https://gist.github.com/4ebabac5fa0187964a24
[19:06:06] <kborchers> looking
[19:07:32] <kborchers> scott_gonzalez: while i'm looking, i'm trying to clean up some things i was in the middle of on qunit before i dive back into the api sites. thoughts on organization change on this page? http://stage.qunitjs.com/
[19:07:44] <kborchers> also, the download link won't be there
[19:08:14] <scott_gonzalez> Looks good.
[19:08:35] <scott_gonzalez> I think download should be there, it should just be less cluttered.
[19:13:48] <kborchers> scott_gonzalez: does it work for desc?
[19:13:52] <scott_gonzalez> yup
[19:13:56] <kborchers> hmmmm
[19:16:21] <scott_gonzalez> There is a difference in that <desc> is only ever one level deep.
[19:16:43] <scott_gonzalez> But I changed from desc/* to desc//*, so I don't see why that wouldn't work.
[19:16:55] <scott_gonzalez> ugh, yes I do
[19:17:32] <kborchers> i was just about to ask why you did https://gist.github.com/4ebabac5fa0187964a24#L27
[19:17:38] <kborchers> the //
[19:17:40] <kborchers> :)
[19:18:17] <scott_gonzalez> So the problem is that the template for longdesc//* is just doing a copy.
[19:18:27] <scott_gonzalez> So it never gets to the template for longdesc//placeholder.
[19:18:59] <kborchers> ah, i see
[19:21:25] <scott_gonzalez> I'm not sure how to handle that :-/
[19:21:50] <scott_gonzalez> hmm...
[19:43:30] <scott_gonzalez> kborchers: https://gist.github.com/5b4a96ef6b42d230e7c2
[19:43:49] <scott_gonzalez> That works for recursively walking the elements so that it reaches the placeholders.
[19:44:05] <scott_gonzalez> It's kind of annoying that you have to explicitly handle attributes.
[19:45:14] <kborchers> scott_gonzalez: hmm, that doesn't get messy at all? Wouldn't //placeholder would get processed every time apply-templates is used?
[19:45:57] <scott_gonzalez> Only when it reaches a placholder element
[19:47:56] <kborchers> i guess that works if you don't process an ancestor of a placeholder element since that would say find a placeholder anywhere below this element right? maybe i'm just confused by only looking at the diff
[19:48:06] <scott_gonzalez> I'm pretty sure that apply-templates can only ever choose one template.
[19:48:37] <scott_gonzalez> It's kind of like CSS.
[19:48:45] <scott_gonzalez> The most specific selector wins.
[19:50:07] <scott_gonzalez> So what's happening is I call <xsl:apply-templates select="longdesc"/>
[19:50:19] <scott_gonzalez> The best match for that is <xsl:template match="desc|longdesc">
[19:50:35] <scott_gonzalez> Which then iterates over its children and applies templates.
[19:50:53] <scott_gonzalez> The best match for each child is the templat that matches "desc//*|desc//@*|longdesc//*|longdesc//@*"
[19:51:02] <scott_gonzalez> unless the child happens to be a placeholder.
[19:51:18] <scott_gonzalez> In which case the best match is "//placeholder"
[19:51:48] <scott_gonzalez> If the placeholder template wins, then it processes the placeholder and stops (because that template doesn't do any recursion).
[19:52:13] <scott_gonzalez> For all other nodes and attributes, it will continue to apply templates on the children and that same template will keep matching for all descendants.
[19:52:23] <scott_gonzalez> (again, unless a placeholder is found)
[19:54:29] <kborchers> right, that all makes sense. my point was if you had some other bit of XML being processed that contained placeholder elements and apply-templates was called on it's children, the placeholder elements would get processed by that //placeholder template so as long as all placeholders work the same (i honestly haven't looked recently at what you have done with placeholders) then that would be fine
[19:54:59] <scott_gonzalez> Yup, all placeholders will work the same.
[19:55:05] <kborchers> ok, cool
[19:55:28] <scott_gonzalez> I could limit it to desc//placeholder|longdesc//placeholder if you think that's clearer
[19:55:37] <scott_gonzalez> Since the other selectors follow that format.
[19:55:42] <scott_gonzalez> And they're all tied together.
[19:56:09] <kborchers> it's probably better to leave it more general so you can reuse that template if placeholders are ever used elsewhere in that entry
[20:01:46] <scott_gonzalez> ugh, it's copying xml:base from the import.
[20:06:04] <scott_gonzalez> Ok, I think I've got that all fixed now.
[20:06:21] <scott_gonzalez> time for bed
[20:08:55] <kborchers> good night … i'll keep making the api sites pretty :)
[20:11:34] <kborchers> scott_gonzalez: still here?
