[05:13:35] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/hGiTpQ
[05:13:35] <jquicommit> 13globalize/06fix-265-message-format 1404d74d9 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[05:18:06] <jquicommit> [13globalize] 15rxaviers fast-forwarded 06master from 1487655e2 to 141a71ed1: 02http://git.io/2dfeDw
[05:20:49] <gabriel_schulhof> arschmitz: Ping!
[05:26:20] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7880: Events: Split up touch events (06master...067805-factor-out-swipe) 02http://git.io/LDbj1Q
[05:29:21] <arschmitz> gabriel_schulhof: Pong
[05:30:12] <gabriel_schulhof> arschmitz: Hey!
[05:30:21] <gabriel_schulhof> So, I just submitted the PR for the event splitup.
[05:30:28] <arschmitz> gabriel_schulhof: i was a little confused yesterday when you walked about splitting up touch
[05:30:37] <arschmitz> unless im going crazy we never discussed this
[05:30:40] <arschmitz> why are you doing this?
[05:30:45] <gabriel_schulhof>  https://github.com/jquery/jquery-mobile/issues/7805
[05:30:50] <arschmitz> talked
[05:31:56] <jquicommit> [13globalize] 15rxaviers pushed 2 new commits to 06fix-265-message-format: 02http://git.io/8BrPRw
[05:31:56] <jquicommit> 13globalize/06fix-265-message-format 140eecc30 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[05:31:56] <jquicommit> 13globalize/06fix-265-message-format 143f27cd7 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[05:32:42] <arschmitz> 7805 was about fixing dependencies
[05:32:56] <arschmitz> we never talked about splitting up the actual touch.js and i dont see why thats needed
[05:33:18] <gabriel_schulhof> Because you wanna have the rest of the touch events without having swipe.
[05:33:24] <gabriel_schulhof> Like scroll, and tap ...
[05:34:07] <arschmitz> well scroll is not even a touch even so that should be moved im not sure i see the use of seperating tap and swipe and taphold though
[05:34:13] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/p6TaPA
[05:34:13] <jquicommit> 13globalize/06fix-265-message-format 14dc9f75a 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[05:34:27] <arschmitz> they are very small and logicly grouped
[05:35:27] <arschmitz> espically since any other touch event implementation they pull in will be more then just swipe
[05:35:59] <gabriel_schulhof> Right, but if someone wants to build without swipe (because they wanna use swipe from hammer.js, for example), why should they be forced to also give up tap and taphold and scroll?
[05:36:12] <arschmitz> hammer.js is a LOT LOT more then swipe
[05:36:28] <arschmitz> and infact include tap
[05:38:29] <gabriel_schulhof> OK. So, lessee. We wanna be able to build without events/touch.js without it escalating into the loss of navigation.
[05:38:42] <gabriel_schulhof> That was the original problem.
[05:38:54] <jquicommit> [13globalize] 15rxaviers opened issue #369: Docs: No hard breaks in prose 02http://git.io/IdPorw
[05:38:59] <arschmitz> thats correct
[05:39:42] <arschmitz> fairly sure nav does not actually depend on swpie or tap
[05:43:07] <gabriel_schulhof> Yeah. It should only depend on vmouse.
[05:44:30] <arschmitz> correct
[05:44:44] <arschmitz> and im not inclined to move scroll until we update for pointer events
[05:46:31] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/cpf6SQ
[05:46:31] <jquicommit> 13globalize/06fix-265-message-format 1443119c2 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js...
[05:47:24] <gabriel_schulhof> arschmitz: transitions/transition.js for some reason depends on touch, and navigation depends on transitions
[05:48:22] <gabriel_schulhof> arschmitz: ... and it only depends on touch for scrollstart :) Precisely the piece you are not inclined to move :)
[05:48:28] <arschmitz> is it just amd someone messed up or is it actually using it
[05:48:43] <arschmitz> im ok with moving it if there is a good reason
[05:49:02] <gabriel_schulhof> It's actually using it.
[05:49:16] <gabriel_schulhof> ... so I think there /is/ a good reason for moving it.
[05:49:34] <arschmitz> yeah so i would update to just make scrollstart its own thing
[05:49:42] <gabriel_schulhof> So you can keep scroll for transitions and navigation, while getting rid of swipe and tap.
[05:49:57] <gabriel_schulhof> OK. That's easy.
[05:50:37] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/jQJPOg
[05:50:37] <jquicommit> 13globalize/06fix-265-message-format 1466400b7 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js
[05:50:59] <gabriel_schulhof> Independently of all this, I was gonna ask you: Should I implement proper instance handling for these touch events? It's already done for swipe, but the others do not have it.
[05:51:24] <arschmitz> i would not yet
[05:51:39] <gabriel_schulhof> OK.
[05:51:42] <arschmitz> there are bigger issues here and no one has ever complained
[05:51:55] <gabriel_schulhof> ... except about swipe.
[05:51:57] <arschmitz> this currently does not even work on a device with both a mouse and a touch screen
[05:52:11] <gabriel_schulhof> arschmitz: Right, because the source events are either-or.
[05:52:18] <arschmitz> no
[05:52:25] <arschmitz> because we make it choose
[05:52:34] <arschmitz> https://github.com/jquery/jquery-mobile/blob/master/js/events/touch.js#L15
[05:53:06] <gabriel_schulhof> You're right. That's slightly different.
[05:54:09] <gabriel_schulhof> Not that I'm trying to convince you that we should do it, but this is a deficiency in a slightly different part of the implementation. Regardless of which events you use to calculate the desired event, the handlers for the source events must be kept track of per-instance.
[05:55:22] <gabriel_schulhof> But OK. I'll factor out scroll for now ...
[05:55:48] <arschmitz> gabriel_schulhof: i understand i was not saying the two were related
[05:56:26] <gabriel_schulhof> arschmitz: I guess when we switch to pointer events will be the appropriate time to review touch events.
[05:56:37] <arschmitz> yes
[05:57:17] <gabriel_schulhof> I wonder if I made an issue about properly binding/unbinding the source event handlers ...
[05:57:40] <arschmitz> you should do that anyway so we dont forget
[05:58:06] <gabriel_schulhof> Yeah, but I might already have done it.
[05:58:18] <gabriel_schulhof> I dunno how to filter by reporter.
[05:59:49] <gabriel_schulhof> OK, it's called "Author"
[06:01:38] <gabriel_schulhof> Alright, I'll file an issue.
[06:03:11] <arschmitz> gabriel_schulhof: had an enhancer thought
[06:03:51] <arschmitz> what if we added $.enhancer.hooks which would be $.enhancer.hooks = $.enhancer.hooks || []; 
[06:04:12] <arschmitz> gabriel_schulhof: it would be an array of functions you could push to and in the main enhancer function it runs through them
[06:04:38] <arschmitz> then no crazy function wrapping
[06:06:47] <gabriel_schulhof> Yeah, that's good.
[06:07:09] <gabriel_schulhof> Wait: Isn't it $.fn.enhancer?
[06:07:13] <arschmitz> and you would just have to do some for of $.enahncer = $.enhancer ? {} : $.enhancer; before you pushed to it to avoid issues
[06:07:18] <arschmitz> yeah sorry
[06:07:21] <arschmitz> but same thing
[06:07:39] <arschmitz> just add fn everywhere lol
[06:07:40] <gabriel_schulhof> Well, hold on. $.fn.enhancer needs to be a function.
[06:07:50] <arschmitz> yeah sorry
[06:08:03] <arschmitz> but functions are first class objects in js
[06:08:05] <arschmitz> :)
[06:08:22] <arschmitz> so they can still have properties
[06:08:30] <arschmitz> so we can still do the exact same thing
[06:08:50] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/ymHX1Q
[06:08:50] <jquicommit> 13globalize/06fix-265-message-format 14ffde77f 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js
[06:08:56] <arschmitz> just changes how you do it slightly
[06:08:59] <gabriel_schulhof> Actually, not sure if this'll work. We may well need $.enhancer.
[06:09:03] <gabriel_schulhof> Without the .fn.
[06:09:07] <arschmitz> why?
[06:09:26] <gabriel_schulhof> Because the $.fn.enhancer /has/ to be a function, so you can't have $.enahncer = $.enhancer ? {} : $.enhancer
[06:09:45] <arschmitz> right thats easy to fix
[06:09:58] <gabriel_schulhof> If popup goes before enhancer, it has to define $.fn.enhancer = function() { /* ... */ };
[06:10:09] <gabriel_schulhof> ... and if enhancer goes before popup, same things.
[06:10:12] <gabriel_schulhof> thing.
[06:10:31] <gabriel_schulhof> But, doing $.fn.enhancer = function() { /* The main enhancer */ };
[06:10:37] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/KOW40A
[06:10:37] <jquicommit> 13globalize/06fix-265-message-format 142573b2c 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js
[06:11:11] <arschmitz> you check if it exists if it does you copy its hooks property to the new one
[06:11:22] <gabriel_schulhof> ... and $.enhancerHooks = $.enhancerHooks ? $.enhancerHooks : []; $.enhancerHooks.push( function() { /* enhancer hook */ }); would work.
[06:11:30] <arschmitz> because all you care about is the hooks prop if its been defined anywhere besides in the actual enhancer
[06:12:06] <gabriel_schulhof> ... and if it doesn't?
[06:12:21] <arschmitz> if what doesnt what?
[06:12:42] <gabriel_schulhof> Suppose I'm popup. If $.fn.enhancer doesn't exist, what do I do?
[06:12:53] <arschmitz> in what file?
[06:13:22] <gabriel_schulhof> When the popup widget's IIFE executes, what if at the time of its execution $.fn.enhancer is not yet defined?
[06:13:47] <arschmitz> it defines it to just do nothing and then adds a hooks prop
[06:14:24] <arschmitz> when later enhancer is added it checks if it exists if it does it copys the hooks prop before overwriting
[06:15:30] <gabriel_schulhof> OK. So, the first guy around sets up the function and the hooks array, if absent. All others will simply add themselves to the hooks array - except enhancer itself, which provides the actual implementation that makes use of the hooks array.
[06:15:47] <arschmitz> correct
[06:15:51] <gabriel_schulhof> Sounds good.
[06:16:09] <gabriel_schulhof> Though this is not that different from just doing shims.
[06:16:12] <arschmitz> and $.enhancer anywhere it does not exist can just be $.noop
[06:16:20] <gabriel_schulhof> Yeah, exactly.
[06:16:56] <gabriel_schulhof> As for not being different, in the case of hooks, you're explicitly storing the hooks in an array, whereas in the shim chain, you're storing the hooks in a stack of closures.
[06:17:11] <gabriel_schulhof> I suppose the array is ever so slightly cheaper.
[06:17:12] <arschmitz> so you get in any given file just $.enhancer = $.enhancer || $.noop; thats a lot less work then the other way
[06:17:31] <gabriel_schulhof> Yeah, I guess that way you don't have to chain up.
[06:18:05] <gabriel_schulhof> You will have a second line after that: $.enhancer.hooks = $.enhancer.hooks || [];
[06:18:30] <gabriel_schulhof> ... and then the third line will be the payload: $.enhancer.hooks.push( function() { /* ... */ });
[06:18:50] <arschmitz> gabriel_schulhof: dont need the second
[06:18:59] <gabriel_schulhof> No?
[06:19:02] <arschmitz> if $.enahncer exists you can assume hooks does
[06:19:09] <arschmitz> $.fn.enhance i mean
[06:19:51] <gabriel_schulhof> Yes, but then you have to change the first line to say $.enhancer = $.enhancer || $.extend( function(){}, { hooks: [] } );
[06:20:03] <arschmitz> yeah 
[06:20:07] <gabriel_schulhof> ... and you can't use $.noop, because you have to create a new function that is distinct from $.noop.
[06:20:17] <gabriel_schulhof> ... because you're decorating it with hooks.
[06:20:37] <gabriel_schulhof> OK. So, two lines it is.
[06:20:37] <arschmitz> hmm still either way its a lot less crazy and easy to understand then wrapping functions and a call chain
[06:21:10] <gabriel_schulhof> ... and probably cheaper, too, even if not by much.
[06:21:19] <gabriel_schulhof> ... because it creates fewer scopes.
[06:26:08] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened issue #7881: Events: Implement proper source event binding/unbinding 02http://git.io/MOUmiw
[07:48:53] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/DD42bQ
[07:48:53] <jquicommit> 13globalize/06fix-265-message-format 140a22be1 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js
[07:50:25] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-265-message-format from 140a22be1 to 146319478: 02http://git.io/La103g
[07:50:25] <jquicommit> 13globalize/06fix-265-message-format 146319478 15Rafael Xavier de Souza: Message: Support ICU MessageFormat using slexaxton/messageformat.js
[08:12:47] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/E8zTBw
[08:12:47] <jquicommit> 13globalize/06fix-265-message-format 145308338 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js
[09:29:10] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-265-message-format: 02http://git.io/j4Nh0g
[09:29:10] <jquicommit> 13globalize/06fix-265-message-format 14b14d3b9 15Rafael Xavier de Souza: fixup! Message: Support ICU MessageFormat using slexaxton/messageformat.js
[09:42:02] <jquicommit> [13globalize] 15rxaviers closed issue #265: Support ICU MessageFormat 02http://git.io/Simd-w
[09:45:43] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06master: 02http://git.io/FVQ6Jg
[09:45:43] <jquicommit> 13globalize/06master 14cf52d58 15Rafael Xavier de Souza: 1.0.0-alpha.14
[09:46:02] <jquicommit> [13globalize] 15rxaviers tagged 061.0.0-alpha.14 at 1467db1e9: 02http://git.io/tsIQxw
[09:46:02] <jquicommit> 13globalize/061.0.0-alpha.14 1437efd45 15Rafael Xavier de Souza: Build
[09:47:27] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof closed pull request #7880: Events: Split up touch events (06master...067805-factor-out-swipe) 02http://git.io/LDbj1Q
[09:48:10] <rxaviers> all: Globalize now supports ICU MessageFormat (released at 1.0.0-alpha.14)
[09:48:30] <rxaviers> scott_gonzalez, jzaefferer, arschmitz, ^
[09:48:31] <rxaviers> \o/
[09:48:36] <gabriel_schulhof> Time to grab the champagne?
[09:48:36] <scott_gonzalez> woohoo
[09:48:59] <rxaviers> thanks to Alex Sexton's https://github.com/SlexAxton/messageformat.js/ and https://github.com/eemeli/make-plural.js
[09:49:02] <rxaviers> too
[09:49:12] <rxaviers> Yeap :D
[09:49:47] <gabriel_schulhof> https://www.youtube.com/watch?v=FPyFRa39AMk
[09:51:06] <rxaviers> LoL
[10:00:47] <gabriel_schulhof> :)
[10:10:33] <arschmitz> rxaviers: awesome!
[11:25:15] <jquicommit> [13globalize] 15rxaviers created 06fix-unit-test-dependencies (+2 new commits): 02http://git.io/NwLSjQ
[11:25:15] <jquicommit> 13globalize/06fix-unit-test-dependencies 14645f8c8 15Rafael Xavier de Souza: Manifest: Update QUnit to 1.16
[11:25:15] <jquicommit> 13globalize/06fix-unit-test-dependencies 1426e2636 15Rafael Xavier de Souza: lala
[11:25:45] <jquicommit> [13globalize] 15rxaviers opened pull request #370: Fix unit test dependencies (06master...06fix-unit-test-dependencies) 02http://git.io/KPKw0g
[11:27:08] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-unit-test-dependencies from 1426e2636 to 14bcbe081: 02http://git.io/RfRTsQ
[11:27:08] <jquicommit> 13globalize/06fix-unit-test-dependencies 14bcbe081 15Rafael Xavier de Souza: Various: Include cldr/event and cldr/supplemental to missing places...
[12:00:19] <jquicommit> [13globalize] 15jzaefferer opened issue #371: Add a build step that checks built files don't contain cldrjs 02http://git.io/oWozug
[12:04:09] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-unit-test-dependencies from 14bcbe081 to 14cf327a7: 02http://git.io/RfRTsQ
[12:04:09] <jquicommit> 13globalize/06fix-unit-test-dependencies 14bfa663d 15Rafael Xavier de Souza: Various: Include cldr/event and cldr/supplemental to missing places...
[12:04:09] <jquicommit> 13globalize/06fix-unit-test-dependencies 14cf327a7 15Rafael Xavier de Souza: fixup! Various: Include cldr/event and cldr/supplemental to missing places
[12:31:04] <jquicommit> [13globalize] 15rxaviers opened issue #372: Tests: Dependencies 02http://git.io/Ocxa5A
[12:34:01] <jquicommit> [13globalize] 15rxaviers closed pull request #370: Fix unit test dependencies (06master...06fix-unit-test-dependencies) 02http://git.io/KPKw0g
