[02:21:23] <doesallmagic> Project jQuery UI - git core build #111: SUCCESS in 11 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/111/
[03:16:26] <doesallmagic> Project jQuery UI - 1.6.x core build #54: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/54/
[03:17:19] <doesallmagic> Project jQuery UI - 1.7.x core build #53: SUCCESS in 16 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/53/
[03:22:11] <erethnor> hiya, I found a bug in the latest jquery ui commit on github
[03:22:38] <erethnor>  I'm trying to report it but I cannot access jquery TRAC as there's an error?
[03:23:52] <erethnor> File "/usr/local/lib/python2.6/dist-packages/Trac-0.12.1-py2.6.egg/trac/web/api.py", line 436, in send_error     data, 'text/html')
[03:34:46] <doesallmagic> Project jQuery UI - 1.8.x core build #29: FAILURE in 3 min 27 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/29/
[05:29:54] <jquicommit> [download.jqueryui.com] rxaviers pushed 1 new commit to themeroller: http://git.io/KzbdoA
[05:29:54] <jquicommit> [download.jqueryui.com/themeroller] ThemeRoller frontend shows dynamic images - Rafael Xavier de Souza
[05:47:04] <scott_gonzalez> gnarf: The u/p for stage.blog.jqueryui.com is different from all other stage sites.
[05:47:30] <xavier_> jzaefferer, in the download builder, shall we mimic theme section style (right panel with different color, etc). Or is it just fine to add a theme section underneath components?
[05:57:27] <xavier_> jzaefferer, for another talk: Right now, if a user wants to download jQuery UI plus tweak its styles a little bit, he needs to jump from DownloadBuilder to TR page and click back to DownloadBuilder (two separate pages). I was wondering if it would be better to inline TR in DownloadBuilder, so when user chooses "Custom Theme" we show up TR (like in a accordion way to slide-show-up things), where he tweaks the styles and click then simply click downloa
[05:57:28] <xavier_> d. I dont know if we have any reason not to...
[06:29:15] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/XGkr6Q
[06:29:15] <jquicommit> [jquery-ui/master] Tabs: Account for non-tab list items on init. Fixes #8568 - jQuery ui tabs: wrong default active li if ul contains extraneous elements. - Scott González
[06:39:10] <gnarf> scott_gonzalez: the u/p for stage.blog.jqueryui.com is the same as the old blog.jqueryui.com
[06:39:19] <gnarf> and I don't even have a user there I don't think
[06:40:32] <scott_gonzalez> ok
[06:42:27] <doesallmagic> Project jQuery UI build #657: SUCCESS in 13 min: http://swarm.jquery.org:8080/job/jQuery%20UI/657/
[06:42:27] <doesallmagic> Scott González: Tabs: Account for non-tab list items on init. Fixes #8568 - jQuery ui tabs: wrong default active li if ul contains extraneous elements.
[07:07:24] <scott_gonzalez> kswedberg: https://gist.github.com/3706831
[07:07:48] <scott_gonzalez> Anything that came in though an include has an xml:base
[07:07:48] <scott_gonzalez> https://gist.github.com/3706831#L473
[07:07:58] <scott_gonzalez> Should I write some logic to remove those or just leave them?
[07:08:57] <scott_gonzalez> Nevermind, adding a template to remove them was super easy.
[07:09:05] <scott_gonzalez> <xsl:template match="//@xml:base"/> :-P
[07:10:33] <scott_gonzalez> Are these supposed to be encoded? https://gist.github.com/3706831#L7
[07:13:43] <kswedberg> scott_gonzalez: heh. having a hard time keeping up with you.
[07:14:13] <kswedberg> oh, no, those aren't supposed to be encoded. wonder why they are.
[07:14:54] <scott_gonzalez> hmm....
[07:15:44] <scott_gonzalez> kswedberg: Here's the XSL I'm using: https://gist.github.com/3706831#file_all_entries.xsl
[07:17:16] <kswedberg> scott_gonzalez: do you need to do document(@file)//entry/* ?
[07:18:07] <scott_gonzalez> No, we want to apply the template the <entry>. Then it recurses with the identity transform on line 17.
[07:18:22] <kswedberg> I suck at xsl. I usually get things to work by trying a million different fails before I succeed
[07:18:41] <kswedberg> ah. ok.
[07:19:07] <kswedberg> is kborchers around?
[07:19:34] <scott_gonzalez> heh, ok
[07:20:18] <scott_gonzalez> Oh, I see what's happening.
[07:20:18] <kborchers> what's the question?
[07:20:23] <scott_gonzalez> The encoding problem is only in categories.
[07:20:38] <scott_gonzalez> That's because categories.xml puts everything in CDATA.
[07:20:48] <scott_gonzalez> This should be easy to fix. I'll just loop over the categories instead of doing a copy.
[07:21:21] <kborchers> scott_gonzalez: that sounds like it should work
[07:26:42] <scott_gonzalez> kswedberg: The current XML dump actually doesn't contain the category descriptions.
[07:26:49] <scott_gonzalez> It only contains the names.
[07:28:18] <kswedberg> you're right!
[07:29:47] <kswedberg> scott_gonzalez: problem solved!
[07:30:04] <scott_gonzalez> heh
[07:30:41] <scott_gonzalez> Well, I have a solution for this, so we might as well include it.
[07:30:46] <scott_gonzalez> Seems better to have all the data.
[07:30:51] <scott_gonzalez> <xsl:value-of select="text()" disable-output-escaping="yes"/>
[07:31:25] <scott_gonzalez> Figuring out what words to include in a search for XSL problems is...umm...interesting.
[07:34:22] <scott_gonzalez> https://gist.github.com/3706831
[07:35:01] <scott_gonzalez> I think everything is correct now (and provides more data than what we have today).
[07:35:20] <scott_gonzalez> Now I just need to write the code to generate the source XML file.
[07:38:22] <scott_gonzalez> Nope, not done. Need to process <placeholder>s.
[07:42:33] <nacin> scott_gonzalez: following up from yesterday, would it make sense to detect checksums on the fly?
[07:43:15] <scott_gonzalez> nacin: I was thinking about that, I'm just not sure what the perf hit would be.
[07:43:27] <scott_gonzalez> When we ask, we ask for the checksum of every resource at once.
[07:43:47] <nacin> and if you're running it in parallel, yeah, I see.
[07:44:06] <nacin> why not just read from the file, and not write? then spin up parallel tasks for every item in the file, and replace it when done?
[07:46:14] <scott_gonzalez> I'm not sure what you mean.
[07:46:40] <nacin> So I guess I'm just confused how you're using the file.
[07:47:41] <scott_gonzalez> This is the workflow from node:
[07:48:07] <scott_gonzalez> Call gw.getResources() which returns a map of filepath -> checksum for all existing resources.
[07:48:27] <scott_gonzalez> Loop through all local resources and check if the file already exists on the site.
[07:48:31] <scott_gonzalez> If it doens't, add it.
[07:48:39] <scott_gonzalez> If it does, calculate a checksum and see if it matches.
[07:48:42] <scott_gonzalez> If it doesn't, add it.
[07:48:45] <scott_gonzalez> If it does, skip it.
[07:49:15] <scott_gonzalez> Regardless of the action taken, remove that entry from the local copy of the map.
[07:49:31] <nacin> Okay. So, is it actually necessary to remove the entry?
[07:49:36] <scott_gonzalez> Loop through the local copy of the map and call gw.deleteResource() for all remaining entries.
[07:50:07] <scott_gonzalez> The removal of the entry in this case is just on an in-memory copy in node.
[07:50:12] <scott_gonzalez> So that we know what resources to delete at the end.
[07:50:30] <nacin> Okay. So where does the locking of the flat file come into play? It's not that file?
[07:50:34] <scott_gonzalez> On the WordPress side, the file is updated on every call to gw.addResource() or gw.deleteResource().
[07:51:04] <scott_gonzalez> So the locking would come into play during calls to gw.addResource() and gw.deleteResource().
[07:53:59] <scott_gonzalez> Is there an existing table we can use? Like the options table?
[07:54:23] <scott_gonzalez> The options table would limit the length of the file path.
[07:55:01] <nacin> Could you point me to this script?
[07:55:19] <nacin> I'm still just not seeing the purpose of the locking.
[07:56:07] <scott_gonzalez> Here's the node script: https://github.com/scottgonzalez/grunt-wordpress/blob/master/tasks/wordpress/resources.js
[07:56:21] <scott_gonzalez> Here's the WordPress script: https://github.com/jquery/web-base-template/blob/master/mu-plugins/grunt-wordpress.php
[07:56:45] <scott_gonzalez> https://github.com/jquery/web-base-template/blob/master/mu-plugins/grunt-wordpress.php#L99
[07:57:33] <scott_gonzalez> I'm pretty sure that we're hitting cases where multiple addResource calls are happening at the same time and one is overwriting the other.
[07:57:41] <scott_gonzalez> So the resource never gets logged.
[08:04:24] <jquicommit> [download.jqueryui.com] rxaviers pushed 1 new commit to themeroller: http://git.io/QI39cA
[08:04:24] <jquicommit> [download.jqueryui.com/themeroller] Add theme in download builder (support "no theme" and "custom theme") - Rafael Xavier de Souza
[09:37:49] <jzaefferer> rxaviers: you should set up web-base-template according to the readme here: https://github.com/jquery/web-base-template/
[09:38:18] <jzaefferer> then clone https://github.com/jquery/jqueryui.com and deploy that (see readme there)
[09:38:44] <jzaefferer> that also loads download.jqueryui.com to create the download page, and needs to be updated to include the themeroller page
[09:39:38] <rxaviers> excelent, will check then
[09:39:44] <rxaviers> thks
[09:41:29] <jzaefferer> if something doesn't work according to the readme, let us know
[09:42:06] <jzaefferer> don't bother trying to solve it yourself too much, there's more important work to get done
[09:53:02] <rxaviers> ok
[09:53:02] <bot-t> (137 hours ago) <scott_gonzalez> tell rxaviers https://groups.google.com/d/topic/nodejs/QDB1ccpG67U/discussion
[09:53:14] <scott_gonzalez> ZOMG, so late
[09:53:42] <rxaviers> ah! lol
[09:55:53] <rxaviers> scott_gonzalez,
[09:55:55] <rxaviers> >> I believe the directory support comes from just setting the path when calling .addFile().
[09:55:57] <rxaviers> correct
[10:49:37] <gnarf> scott_gonzalez: should http://stage.api.jqueryui.com/focusable-selector/ and tabbable really have () after them? - makes sense for :data() but not the other two
[10:49:58] <scott_gonzalez> No, they should not
[10:50:30] <gnarf> i'll push a fix
[10:50:48] <scott_gonzalez> thanks
[10:52:13] <jquicommit> [api.jqueryui.com] gnarf37 pushed 1 new commit to master: http://git.io/KqZffg
[10:52:13] <jquicommit> [api.jqueryui.com/master] Remove () from :focusable and :tabbable - Corey Frang
[10:53:54] <gnarf> so easy...
[10:54:00] <gnarf> :)
[10:54:23] <scott_gonzalez> :-)
[10:56:03] <gnarf> scott_gonzalez: where do the version numbers in http://stage.jqueryui.com/ come from?
[10:56:10] <gnarf> at the quick access section
[10:56:16] <scott_gonzalez> web-base-template
[10:56:47] <jzaefferer> rxaviers: just checked jqueryui.com's `grunt build-download` task. That now fails as download.js expects params. Considering that both pages need to be statically generated, we need to create the theme select on the client side, based on hash parameters.
[10:56:56] <gnarf> scott_gonzalez: :(
[10:57:12] <scott_gonzalez> gnarf: Don't worry about updating that yet.
[10:57:27] <jzaefferer> rxaviers: To test, go to the download repo, run `npm link`, then go to your jqueryui.com clone and run `npm link download.jqueryui.com`, then `grunt build-download`
[10:57:35] <scott_gonzalez> gnarf: But for the record, it's here: https://github.com/jquery/web-base-template/blob/master/themes/jquery/footer-ui.php#L11-36
[10:58:04] <scott_gonzalez> This is tricky because we'll want to link to 1.9.0 on launch.
[10:58:10] <scott_gonzalez> But we'll need to wait for Google.
[10:58:28] <gnarf> scott_gonzalez: can't we link to code. ?
[10:58:34] <jzaefferer> scott_gonzalez: our own CDN now has Expire headers, so it should be fine to use that
[10:58:39] <scott_gonzalez> ok
[10:58:54] <jzaefferer> gnarf: no Cache-Control though, right?
[10:59:01] <gnarf> jzaefferer: it should be proper
[10:59:09] <jzaefferer> kk
[10:59:27] <scott_gonzalez> If we're going to link to our CDN, we should get HTTPS working.
[10:59:33] <gnarf> from jquery-1.8.1.js - http://cl.ly/image/1E0s1p0x2X2a
[10:59:41] <gnarf> scott_gonzalez: ooo damn
[10:59:58] <gnarf> danheberden: ^^^ ?
[11:01:07] <rxaviers> jzaefferer, thks will check it in a sec, just finishing up the named themes.
[11:01:31] <gnarf> jzaefferer: headers look right, right?
[11:05:35] <danheberden> scott_gonzalez: i can ask if they support https
[11:30:18] <scott_gonzalez> kswedberg: Final output (and the XSL): https://gist.github.com/3706831
[11:31:17] <kswedberg> scott_gonzalez: beautiful!
[11:31:42] <kswedberg> how did you get the category descriptions not to encode?
[11:35:50] <jzaefferer> gnarf: yeah, looking good
[12:03:25] <scott_gonzalez> kswedberg: <xsl:value-of select="text()" disable-output-escaping="yes"/>
[12:03:49] <kswedberg> aha. so logical. :)
[13:50:17] <gnarf> jzaefferer: should update http://qunitjs.com/ for 1.10
[13:53:17] <jzaefferer> true, true
[15:00:08] <jquicommit> [download.jqueryui.com] rxaviers pushed 1 new commit to themeroller: http://git.io/BImkFw
[15:00:09] <jquicommit> [download.jqueryui.com/themeroller] Support named themes - Rafael Xavier de Souza
[19:01:13] <kborchers> scott_gonzalez: around?
[19:01:57] <scott_gonzalez> yeah
[19:03:40] <kborchers> scott_gonzalez: is it expected that tooltip doesn't hide if you click the trigger? like on here http://view.jqueryui.com/master/tests/visual/tooltip/tooltip.html if you hover a link, tooltip appears, click then move mouse the tooltip stays
[19:03:55] <kborchers> seems like all browsers
[19:04:53] <scott_gonzalez> umm...I'm not seeing that in Chrome, but my guess is that the element is focused on click.
[19:05:02] <scott_gonzalez> Chrome doesn't tend to keep focus on clicks though.
[19:05:13] <scott_gonzalez> The logic is that focus always wins over hover.
[19:05:37] <scott_gonzalez> So if you focus an element then mousing out will not make the tooltip go away.
[19:05:57] <scott_gonzalez> I usually test that with text inputs.
[19:05:59] <kborchers> scott_gonzalez: oh it happens in chrome here on a tab http://view.jqueryui.com/master/tests/visual/compound/tabs_tooltips.html
[19:06:02] <kborchers> same thing, focus
[19:06:38] <scott_gonzalez> I'm not sure why the anchors aren't retaining focus for me but they are for you.
[19:06:45] <scott_gonzalez> What version of Chrome?
[19:06:54] <scott_gonzalez> 21.0.1180.89
[19:07:04] <kborchers> they aren't in chrome except on the tab
[19:07:08] <scott_gonzalez> ok
[19:07:12] <scott_gonzalez> That makes sense.
[19:07:19] <scott_gonzalez> I'm pretty sure Firefox keeps focus on click though.
[19:07:23] <kborchers> yep
[19:08:35] <kborchers> so we're ok with this? just seems weird if i have a tooltip on an anchor that say, loads some new content, so it doesn't lose focus so the tooltip doesn't go away
[19:09:19] <kborchers> scott_gonzalez: feels broken but could just be me
[19:10:57] <scott_gonzalez> It's better to have to manually close the tooltip than to have it disappear because you moved your mouse.
[19:11:19] <scott_gonzalez> Imagine clicking into a text field, getting a tooltip, then moving our mouse away so you can focus on what you're doing.
[19:28:51] <scott_gonzalez> WTF?
[19:29:15] <scott_gonzalez> `xsltproc --xinclude foo.xsl foo.xml` processing includes just fine
[19:29:31] <scott_gonzalez> `xslproc --xinclude --output bar.xml foo.xsl foo.xml` doesn't process includes at all.
[19:29:54] <scott_gonzalez> s/xslproc/xsltproc/
[19:38:50] <kborchers> scott_gonzalez: sorry, was afk for a few. i see your point about inputs but anything else seems weird. almost seems like they should be handled different. focus only wins on inputs
[19:39:31] <scott_gonzalez> Focus should always win though.
[19:39:46] <kborchers> hmm, yeah, keyboard nav
[19:40:11] <kborchers> ok, you win :0
[19:40:14] <kborchers> :)
[19:40:19] <scott_gonzalez> :-P
[19:40:44] <kborchers> still feels weird on anchors on mouseout but not a huge deal
[19:41:23] <scott_gonzalez> Probably just because we're not used to seeing tooltips on focus at all.
[19:41:43] <kborchers> that could be it
[19:41:59] <kborchers> ok, back to visual tests / demos … zzzzzzzzzzzzzzzzzzzzz
[19:42:14] <scott_gonzalez> We'll see what kind of feedback we get from users.
[19:42:19] <kborchers> yeah
[19:42:54] <scott_gonzalez> I'm so confused by this xinclude stuff.
[19:43:12] <scott_gonzalez> Even if I do `xsltproc --xinclude foo.xsl foo.xml > bar.xml` the includes blow up.
[19:43:22] <scott_gonzalez> So we have three differnet behaviors.
[19:43:34] <scott_gonzalez> stdout = correct
[19:43:42] <scott_gonzalez> --output = no include processing
[19:43:53] <scott_gonzalez> piping to file = errors
[19:44:27] <kborchers> :/
[19:45:39] <scott_gonzalez> I guess I'm going with stdout.
[19:46:03] <scott_gonzalez> I'll see if this blows up on me from buffering the output.
[19:46:32] <scott_gonzalez> If it doess I'll have to spawn a child process directly instead of using grunt.utils.spawn().
[19:47:16] <kborchers> scott_gonzalez: i'll just stop complaining about running through tests now :)
[19:47:51] <scott_gonzalez> haha
[19:47:57] <scott_gonzalez> It's definitely boring.
[19:48:15] <scott_gonzalez> I had to go through all the demos the other day when I did that cleanup.
[19:48:31] <scott_gonzalez> But I only had to do it in one browser since I was just checking that I didn't break something horribly.
[19:49:24] <kborchers> chrome is good and almost done with FF 15 so only about 10 to go right?
[19:50:12] <scott_gonzalez> heh, you can do IE6 + IE9or10
[19:50:18] <scott_gonzalez> and skip 7/8
[19:50:31] <scott_gonzalez> That's usually good enough.
[19:50:45] <scott_gonzalez> If something is broken specifically in 7 or 8 we'll eventually find out.
[19:51:29] <kborchers> \o/
[19:51:34] <kborchers> 2 less :)
[19:52:16] <scott_gonzalez> I woudn't bother doing multiple versions of Firefox, Chrome, Safari, or Opera either.
[19:52:23] <scott_gonzalez> Just do latest of each.
[19:52:49] <kborchers> yeah? cool, i should be able to finish tonight then
[19:52:58] <scott_gonzalez> :-)
[19:53:01] <kborchers> latest of each and ie6 works for me
[19:53:27] <scott_gonzalez> Firefox and Chrome release every 6 weeks anyway.
[19:53:45] <scott_gonzalez> And who's really using Opera current-1?
[19:53:55] <kborchers> yeah
[19:54:13] <scott_gonzalez> Gotta be pragmatic if you want to stay sane :-)
[19:54:25] <scott_gonzalez> Well, it may be too late to *stay* sane.
[19:54:30] <kborchers> heh
[19:54:44] <kborchers> damn! something is eating my battery!
[19:54:56] * kborchers runs to grab cord before it dies
[20:12:22] <scott_gonzalez> Ok, this shit's getting committed tomorrow morning.
[20:12:40] <scott_gonzalez> I'm determined to be done with these API sites.
[20:12:50] <scott_gonzalez> And now, time for bed.
[20:14:14] <kborchers> later scott_gonzalez
[20:14:22] <scott_gonzalez> later kborchers
[22:22:01] <kborchers> scott_gonzalez: i'm going to bed but this has been driving me crazy. http://view.jqueryui.com/master/demos/sortable/portlets.html In FF15, if you drag the "minus", after the drag the click is fired and the content of that portlet minimizes. haven't been able to reduce and reproduce though. i'll try again tomorrow
