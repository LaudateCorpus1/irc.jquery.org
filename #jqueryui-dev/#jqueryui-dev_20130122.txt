[03:08:13] <doesallmagic> Project jQuery UI - git core build #292: STILL FAILING in 47 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/292/
[03:28:12] <doesallmagic> Project jQuery UI 1-9-stable - git core build #79: STILL FAILING in 19 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/79/
[04:08:14] <jquicommit> [13jquery-ui] 15sievlev opened pull request #889: Implementation of private methods (06master...06pull-request-private-methods)  02http://git.io/riETjA
[04:15:00] <doesallmagic> Project jQuery UI - 1.6.x core build #187: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/187/
[04:34:53] <jquicommit> 01[13download.jqueryui.com01] 15rxaviers pushed 1 new commit to 06master: 02http://git.io/5nOnsA
[04:34:53] <jquicommit> 13download.jqueryui.com/06master 1440e74bf 15Rafael Xavier de Souza: Revert "generateImages in series, not in parallel. It was spawning too many processes and crashing"...
[04:37:05] <doesallmagic> Project download.jqueryui.com build #110: SUCCESS in 2 min 10 sec: http://swarm.jquery.org:8080/job/download.jqueryui.com/110/
[04:37:05] <doesallmagic> rxaviers: Revert "generateImages in series, not in parallel. It was spawning too many processes and crashing"
[04:45:05] <jquicommit> 01[13download.jqueryui.com01] 15rxaviers 04deleted 06test-images at 149446883: 02http://git.io/bbWLBQ
[04:52:06] <rxaviers> scott_gonzalez, jzaefferer, give me your thoughts. If we implement this https://github.com/jquery/download.jqueryui.com/issues/83, it will save us a pretty good amount of length off url. It's gonna be something like this: ?components=010100010 (selecting or deleselecting per components order). (a) the back-n-forth DB-TR will work; (b) if user copies url and pastes in another window/tab it will work; What won't work (possibly) is: if user copies a li
[04:52:06] <b-ot> rxaviers, issue #83 by rxaviers (4d 2h ago): Shortner: use bit flags for component selection
[04:52:06] <rxaviers> nk today and paste it long time in the future (where we might have changed components order).
[04:53:00] <rxaviers> Benefit of this change: currently the worst case is ~1000bytes.. after the change the worst case will be ~50bytes (=components #)
[04:53:13] <rxaviers> Is it worth it in your opinion?
[05:01:17] <doesallmagic> Project jQuery UI - 1.7.x core build #188: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/188/
[05:20:02] <scott_gonzalez> rxaviers: The component order should be set in stone per version, which would guarantee that they will work in the future.
[05:20:12] <scott_gonzalez> rxaviers: This would require that the version number is always included in the URL.
[05:21:12] <scott_gonzalez> You can also use an actual bitmask to save more bytes.
[05:21:17] <rxaviers> and another thing: that we keep component order of versions other than simply {stable, legacy}
[05:21:26] <rxaviers> but previous too
[05:22:06] <scott_gonzalez> Yes, we would need to store the order for every version.
[05:22:16] <rxaviers> Is that feasible?
[05:22:28] <scott_gonzalez> Sure, why not?
[05:22:29] <rxaviers> That would add ugly codes
[05:23:02] <rxaviers> Right now, I can deduce that component orders by the installed releases referenced by config file
[05:23:27] <rxaviers> If we're going to keep component order of something that is not there, what do we need to do? Add a hardcoded reference in config?
[05:23:36] <scott_gonzalez> Not in config.
[05:23:40] <rxaviers> where
[05:23:45] <scott_gonzalez> In some other file.
[05:23:58] <rxaviers> component.order.json?
[05:24:01] <scott_gonzalez> sure
[05:24:02] <rxaviers> :'(
[05:24:06] <rxaviers> sure?
[05:24:26] <rxaviers> that's seems feasible now, but hard to maintain in my opinion
[05:24:35] <scott_gonzalez> Why is it hard to maintain?
[05:24:44] <rxaviers> every time we deprecate a version, we have to populate that file
[05:24:48] <scott_gonzalez> It can be as simple as a one line update every major version.
[05:25:11] <rxaviers> it will add version=something to every url
[05:25:28] <rxaviers> we cannot skip default `version=something`
[05:25:33] <scott_gonzalez> That seems fine.
[05:26:08] <scott_gonzalez> We can't break these URLs.
[05:27:32] <rxaviers> about bitmask, we can't use a full byte because it will produce invalid querystring characters. But, yes we can limit the "byte" to like 4 bits and produce hexes
[05:27:51] <rxaviers> but, that adds an issue, say we have a component list of 13 elements
[05:28:00] <rxaviers> 13%4 != 0
[05:28:18] <rxaviers> when we revert it back, we'll come up with 16 elements with false on last ones
[05:31:03] <rxaviers> well, we can workaround the above knowing the components length by advance and later ignore them..
[05:31:39] <scott_gonzalez> Wouldn't it by %7?
[05:31:52] <scott_gonzalez> If we're dropping to %4, it's not worth it.
[05:32:17] <scott_gonzalez> Becuase we're not actually concerned about bytes, we're concerned about number of digits.
[05:35:35] <rxaviers> anyway %4 is better than %1. rssr
[05:36:51] <rxaviers> the max bits will be the sqrt floor of the number of valid querystring characters
[05:38:07] <rxaviers> but, I think that's only a detail. The biggest benefit will be the drop from 1000 to 50
[05:38:23] <rxaviers> is it's 50 or 10 bytes, it wont be a trouble
[05:38:25] <rxaviers> if*
[05:38:42] <rxaviers> implementing %1 if much easier/faster
[05:38:50] <rxaviers> and smaller
[05:39:00] <scott_gonzalez> Sure, so let's go with that.
[05:39:06] <rxaviers> ok
[05:40:31] <rxaviers> scott_gonzalez, thanks for the thoughts. So, I see it's worth it and will implement it.
[05:46:36] <doesallmagic> Project jQuery UI - 1.8.x core build #163: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/163/
[05:57:07] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/0pTPnw
[05:57:07] <jquicommit> 13jquery-ui/06master 14673c655 15Scott Gonz√°lez: Accordion: Properly set corner classes on refresh. Fixes #8995 - Accordion: Corner display issues.
[06:08:18] <scott_gonzalez> jzaefferer tj_vantoll petersendidit kborchers mikesherov gnarf rxaviers: Thoughts? http://bugs.jqueryui.com/ticket/8998
[06:09:19] <petersendidit> yuck
[06:09:35] <scott_gonzalez> yeah
[06:09:43] <scott_gonzalez> Kinda sad that it got overlooked.
[06:10:05] <scott_gonzalez> I really want to fix it right now, but that would break everyone's code if they're using the create event.
[06:10:27] <scott_gonzalez> I guess I can just add panel and keep content.
[06:10:34] <scott_gonzalez> Retroactively put it in the upgrade guide?
[06:10:38] <scott_gonzalez> And then drop in 1.11.
[06:10:57] <petersendidit> yea
[06:10:58] <kborchers> scott_gonzalez: that's probably the "best" solution
[06:11:04] <tj_vantoll> If you put in both you really only have to put in the removal of content in 1.11's upgrade guide.
[06:11:28] <petersendidit> thats the only option that doesn't send people with pitch forks after us
[06:11:30] <tj_vantoll> Well I guess it makes sense to put it in 1.10's so people know about it before 1.11.
[06:11:48] <tj_vantoll> So yeah +1 to having both.
[06:12:49] <scott_gonzalez> ok
[06:27:54] <scott_gonzalez> hmm...jquicommit didn't announce that fix.
[06:28:14] <scott_gonzalez> Oh boy, I'm getting the angry unicorn.
[06:28:39] <scott_gonzalez> https://github.com/jquery/jquery-ui/commit/10c873ab6cf2333f7e51784e84c03a0fbb975e1f
[06:28:40] <b-ot> scott_gonzalez, Scott Gonz√°lez (14m 48s ago): Accordion: Add panel in addition to content for create event. Fixes #8998 - Accordion: Create event uses content instead of panel.
[06:29:47] <scott_gonzalez> upgrade guide: http://cl.ly/image/3G0O0J2r2e3W
[06:43:16] <doesallmagic> Project jQuery UI build #934: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI/934/
[06:43:16] <doesallmagic> Scott Gonz√°lez: Accordion: Properly set corner classes on refresh. Fixes #8995 - Accordion: Corner display issues.
[07:29:29] <doesallmagic> Project jQuery UI build #935: STILL FAILING in 46 min: http://swarm.jquery.org:8080/job/jQuery%20UI/935/
[07:29:30] <doesallmagic> Scott Gonz√°lez: Accordion: Add panel in addition to content for create event. Fixes #8998 - Accordion: Create event uses content instead of panel.
[07:32:19] <tj_vantoll> IT'S OVER 9000
[07:49:42] <scott_gonzalez> OH NO
[07:56:11] <scott_gonzalez> I'm hoping to get back to UI this week and close a lot of the recent bugs.
[10:48:02] <scott_gonzalez> tj_vantoll: http://stage.api.jqueryui.com/1.8/
[10:48:22] <scott_gonzalez> And that page is implemented in the theme, so all old versions will use it.
[10:48:35] <scott_gonzalez> https://github.com/jquery/jquery-wp-content/commit/2d660ca6a243c31e9f7b16bef079ce7d5cd78c71
[10:48:36] <b-ot> scott_gonzalez, Scott Gonz√°lez (15h 35m ago): New index page for api.jqueryui.com/*
[10:50:50] <tj_vantoll> The "full listing of entries" link goes to the latest version's listing, not 1.8's.
[10:52:45] <scott_gonzalez> oh, good catch
[10:54:22] <tj_vantoll> Rest looks good.
[12:01:45] <scott_gonzalez> tj_vantoll: Updated index for the main site: http://cl.ly/image/3I0u0d2V1B1P
[12:02:36] <scott_gonzalez> The two paragraphs at the top have hard-coded version numbers, but it seems ok. It's just one page to update for every major release.
[12:03:20] <tj_vantoll> Looks good to me.
[12:03:29] <scott_gonzalez> Cool, gonna commit.
[12:04:50] <scott_gonzalez> Oh, look at that post-receive hooks are fast again.
[12:04:50] <scott_gonzalez> http://stage.api.jqueryui.com/
[12:50:44] <oliwe> the ui for resizable is broken in chrome: http://jsfiddle.net/9vpNE/1/
[12:50:58] <oliwe> after rezising it you can pull it out slowly at the bottom and right
[12:51:25] <oliwe> http://jsfiddle.net/9vpNE/ more extreme example with css showing what breaks it even more
[12:51:56] <oliwe> wait i got that wrong, AFTER you resize it once it works but not before
[13:16:35] <scott_gonzalez> oliwe: What exactly is broken?
[13:16:45] <oliwe> in chrome
[13:16:57] <oliwe> when you move the draggable item to the bottom right, try moving it even more
[13:17:02] <oliwe> it'll push itself out
[13:17:54] <oliwe> another user mentioned that if you put position:absolute; on #item
[13:17:55] <oliwe> it'll solve it
[13:18:04] <scott_gonzalez> I'm not seeing that problem.
[13:18:06] <oliwe> but since i need to know the relative position
[13:18:11] <oliwe> weird, a few others were
[13:18:16] <scott_gonzalez> Oh, you mean dragging, not resizing.
[13:18:18] <oliwe> yeah
[13:18:22] <oliwe> if you resize it once, it works
[13:18:31] <scott_gonzalez> Your desciption was horribly inaccurate :-)
[13:19:02] <oliwe> i copy pasted it strangely from another channel
[13:20:31] <scott_gonzalez> This has nothing to do with resizable.
[13:20:42] <scott_gonzalez> http://jsfiddle.net/9vpNE/3/
[13:21:10] <oliwe> ah
[13:22:29] <oliwe> didnt test it that much, since resizable adds that thing that messes it up
[13:22:59] <scott_gonzalez> This is a known bug.
[13:23:02] <oliwe> oh okey
[13:23:43] <scott_gonzalez> tj_vantoll: Want to do some triaging?
[13:23:56] <scott_gonzalez> http://bugs.jqueryui.com/ticket/7016 http://bugs.jqueryui.com/ticket/5912 http://bugs.jqueryui.com/ticket/5569 all look like they might be dupes.
[14:11:50] <tj_vantoll> scott_gonzalez I should be able to take a look at those tonight.
