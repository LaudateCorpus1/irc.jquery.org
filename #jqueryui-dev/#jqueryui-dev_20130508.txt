[02:20:37] <doesallmagic> Project jQuery UI - git core build #395: STILL FAILING in 6 min 1 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/395/
[02:20:45] <doesallmagic> Project jQuery UI 1-9-stable - git core build #182: STILL FAILING in 7.5 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/182/
[02:46:20] <doesallmagic> Project jQuery UI - 1.6.x core build #290: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/290/
[03:16:18] <doesallmagic> Project jQuery UI - 1.7.x core build #292: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/292/
[03:46:18] <doesallmagic> Project jQuery UI - 1.8.x core build #267: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/267/
[05:14:26] <jquicommit> 01[13jquery-ui01] 15rxaviers created 06scale-size-puff-effects (+1 new commit): 02http://git.io/dDJvNQ
[05:14:26] <jquicommit> 13jquery-ui/06scale-size-puff-effects 1449835a6 15Rafael Xavier de Souza: Effect: Give puff-effect and size-effect its own files. Previously, they were into scale-effect file.
[05:14:47] <doesallmagic> Project jQuery UI Selectmenu build #106: STILL FAILING in 24 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Selectmenu/106/
[05:14:47] <doesallmagic> * info: Selectmenu Tests: fixed spacing
[05:14:48] <doesallmagic> * info: Selectmenu Tests: simplify asyncTest
[05:16:33] <jquicommit> [13jquery-ui] 15rxaviers opened pull request #981: Give puff-effect and size-effect its own files. Previously, into scale-effect file. (06master...06scale-size-puff-effects)  02http://git.io/ItvQ2w
[05:41:12] <jquicommit> 01[13jquery-ui01] 15rxaviers created 06unite-core-effect-demos (+1 new commit): 02http://git.io/O9Ks-g
[05:41:12] <jquicommit> 13jquery-ui/06unite-core-effect-demos 14fc1b214 15Rafael Xavier de Souza: Effects (core): Unite demos into the same single effect/ path
[05:42:00] <jquicommit> [13jquery-ui] 15rxaviers opened pull request #982: Effects (core): Unite demos into the same single effect/ path (06master...06unite-core-effect-demos)  02http://git.io/Kg-1Ag
[05:48:58] <rxaviers> scott_gonzalez, above we have the prereq PRs for the duplication cutoff... As long as I saw it doesnt seem to hurt anything else. But... It's definitely good to have more eyes.
[07:18:06] <rxaviers> scott_gonzalez, thanks for checking the PR and for creating the ticket
[08:55:11] <tj_vantoll> fyi I'm going to be a bit late for the meeting. I don't have anything to bring up.
[08:55:22] <scott_gonzalez> ok
[09:54:03] <DaveStein> scott_gonzalez btw if you didnt notice i updated that PR from other day
[09:54:05] <DaveStein> ill be back tho
[10:27:50] <tj_vantoll> scott_gonzalez Sorry, had some unexpected connectivity issues. Read the meeting logs, the effects demo changes seem sane enough.
[10:34:41] <DaveStein> mikesherov I don't like you :P
[10:41:45] <DaveStein> scott_gonzalez: When I made the draggable actually be in viewport it fixed over half the tests. However I realize these tests were fales positives
[10:42:16] <DaveStein> scott_gonzalez: It would be testing that draggable is only partially in viewport and always drag to the right and down... so it wouldn't test the actual scrolling at all
[10:42:25] <DaveStein> scott_gonzalez: changing that made the tests break again so im looking into that now
[10:42:43] <DaveStein> im making it test drag up and to the left since its sitting at the top right
[10:43:14] <DaveStein> *top left
[13:19:19] <jquicommit> [13jquery-ui] 15daniel-o opened pull request #983: Allow adding html elements as tooltip content (06master...06master)  02http://git.io/xRw-GQ
[13:43:51] <scott_gonzalez> gnarf jzaefferer kborchers mikesherov petersendidit rxaviers tj_vantoll: Thumbs up/down on that PR ^
[13:45:06] <gnarf> scott_gonzalez: i like the api addition of passing a jQuery / DOMElement
[13:45:10] <gnarf> +1 on that regard
[13:45:25] <gnarf> you nailed all the sticks i saw in the comments also
[13:47:41] <tj_vantoll> +1 to the API addition. I think it's pretty common to have a DOM element with the desired tooltip content within it.
[13:55:41] <kborchers> scott_gonzalez: hmm, wouldn't this PR allow you to inject JS or is that not our problem?
[13:56:28] <scott_gonzalez> It's not an XSS vulnerability like a lot of the others.
[13:56:32] <rxaviers> I would make tooltip textual only, so it's only a replacement for the browser way to show a title (like what github uses to show icon-buttons more info). For a more complex things, I would have another widget like popover. Like twitter bootsrap does
[13:57:04] <scott_gonzalez> Tooltip is already HTML.
[13:57:16] <scott_gonzalez> There's no reason to limit it to text.
[13:57:18] <rxaviers> So, it seems good.
[13:58:03] <kborchers> scott_gonzalez: kk
[14:18:55] <DaveStein> .
[14:42:47] <DaveStein> anyone ever run into an issue when using jquery-simulate to drag using a different number of moves, would give you different results?
[14:44:34] <DaveStein> aka my test works on one move, but not three
[14:54:02] <jquicommit> [13jquery-ui] 15paneru opened pull request #984: New language (Nepali) for datapicker demo under localisation (06master...06datepicker-np)  02http://git.io/lIJ2Jw
[16:31:12] <axemclion> Hi, I was checking out the pull request on pointer events - https://github.com/jquery/jquery-ui/pull/957/ and had some questions on them ... 
[16:32:47] <axemclion> I noticed that the pointer events are support one of the three pointer types - i.e. if a touch is detected, then mouse is no longer active. Is that by design ? 
[18:50:14] <scott_gonzalez> jzaefferer: Any reason not to land this? https://gist.github.com/scottgonzalez/ac08922ca8c61c9606f8
[18:52:01] <kborchers> scott_gonzalez: so axemclion did bring up a good point â€¦ i wasn't considering laptops with touchscreens for example :/
[18:53:55] <kborchers> i mean win 8 uses MSPointer so that should be fine but what does a chromebook pixel do? Touch and Mouse?
[18:55:01] <scott_gonzalez> kborchers: Well, I already told you that you can't ignore mouse for touch :-P
[18:55:18] <scott_gonzalez> I think the Pixel does touch and mouse. I created a test page, but haven't run it on the pixel yet.
[18:55:26] <scott_gonzalez> Got distracted by a million other things :-/
[18:55:40] <scott_gonzalez> Remind me tomorrow and I'll run some tests.
[18:56:02] <kborchers> scott_gonzalez: ok â€¦ this makes ignoring compat events a lot harder :(
[18:59:58] <scott_gonzalez> yp
[19:00:08] <scott_gonzalez> s/yp/yup/
[19:01:22] <kborchers> scott_gonzalez: have you noticed if any of the other libs are dealing with those compat events or maybe they aren't an issue in their impl? i didn't notice anything in hand.js
[19:02:01] <kborchers> i guess i wasn't really looking for that when scanning the code so maybe i should take another look
[19:03:16] <scott_gonzalez> I think that new polyfill was just using a timeout and then checking x/y coords.
[19:03:40] <kborchers> i was specifically trying to avoid a timeout :/
[19:03:46] <kborchers> feels hacky
[19:05:27] <scott_gonzalez> Oh, I think the new polyfill specifically said that hand.js double fires events because it doesn't check for this.
[19:05:59] <kborchers> heh
[19:06:10] <scott_gonzalez> "Hand.js double-fires events because it 'translates' both touch events and the compatibility mouse events that mobile browsers fire after those touch events, and the other two don't fire pointerenter and pointerleave events."
[19:06:29] <kborchers> well that answers that question
[19:06:36] <kborchers> still don't like the timeout though
[19:06:38] <kborchers> hmmm
[19:06:45] <kborchers> i'll have to think about it
[19:06:53] <scott_gonzalez> Well, I don't like touch events :-P
[19:06:57] <kborchers> lol
[19:06:59] <kborchers> agree
[19:07:32] <scott_gonzalez> Thanks Apple.
[19:08:22] <kborchers> yeah, i love their devices but damn if they have given me headaches lately :)
[19:32:07] <kborchers> i wonder how many times i've typed git stash poop
[19:32:08] <kborchers> :D
