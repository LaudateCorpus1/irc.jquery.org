[05:15:36] <ajb> hi there - is there anybody here I can report a bug I suspect with the jQuery Mobile themeroller to?
[05:29:38] <gabriel_schulhof> ajb: https://github.com/jquery/themeroller.jquerymobile.com/issues/new (you need to sign into Github first)
[05:30:13] <gabriel_schulhof> ajb: We will receive a notification in this channel when you have filed the bug, so I can have a look at it at that point.
[05:30:20] <ajb> ahh great - I couldnâ€™t find a link to a github project on the websitem, but thatâ€™s great
[05:31:07] <gabriel_schulhof> ajb: Generally speaking, all our websites <xyz>.com have a corresponing https://github.com/jquery/<xyz>.com/ repository.
[05:31:30] <ajb> cool, will remember that for next time :)
[06:13:30] <gabriel_schulhof> arschmitz: Ping!
[06:13:44] <arschmitz> gabriel_schulhof: Pong!
[06:13:55] <gabriel_schulhof> Hey! Could you please remind me how to switch over from .hasClass()?
[06:14:11] <gabriel_schulhof> Is all set up on ui-1-12? Can I just replace the assertion?
[06:14:58] <gabriel_schulhof> I'm not finding any tell-tale signs of your new npm package in package.json ...
[06:15:45] <gabriel_schulhof> I think textinput is just about ready for another round of review. Now, I'm just fixing line lengths, and I'd like to move over to your new assertion.
[06:21:26] <gabriel_schulhof> Aha! I found your commit adding the package.
[06:23:01] <gabriel_schulhof> OK, I think I'm on my way ... 
[06:35:15] <gabriel_schulhof> arschmitz: Interesting that hasClasses() cannot be referred to the same way as other QUnit assertions like deepEqual(). What I means is that inside the callback passed to test(), you can run deepEqual() without referring to it as QUnit.assert.deepEqual().
[06:35:21] <gabriel_schulhof> You can't do the same with hasClasses().
[06:35:34] <gabriel_schulhof> You must always refer to it as QUnit.assert.hasClasses().
[06:35:38] <gabriel_schulhof> ... or so it seems.
[06:35:38] <arschmitz> no
[06:35:48] <arschmitz> gabriel_schulhof: did you read the documentation?
[06:35:59] <gabriel_schulhof> arschmitz: Just the code.
[06:36:10] <gabriel_schulhof> ... in external
[06:36:59] <arschmitz> gabriel_schulhof: read the documentation https://github.com/arschmitz/qunit-assert-classes
[06:37:02] <gabriel_schulhof> Oh, OK ... so you don't need QUnit, just assert ...
[06:37:09] <arschmitz> yes
[06:37:13] <gabriel_schulhof> I just did :) Thanks! I figured it was the README ...
[06:37:33] <arschmitz> gabriel_schulhof: FYI im adding 3 more tests
[06:37:33] <gabriel_schulhof> Interesting that for built-in assertions you don't even need that. Some syntactic sugar on the part of QUnit, no doubt.
[06:37:47] <arschmitz> gabriel_schulhof: its because we are using deprecated api
[06:37:58] <arschmitz> in qunit 2.0 you must do them this way
[06:38:06] <arschmitz> i just am not supporting the old global api
[06:38:14] <gabriel_schulhof> OK, great!
[06:38:54] <arschmitz> gabriel_schulhof: the 4 tests im adding are starts with, ends with, partial, and strict
[06:39:14] <arschmitz> strict enforces that those must be the only classes ( order independent ) 
[06:40:09] <gabriel_schulhof> Are you updating qunit-assert-classes to include more assertions regarding classes?
[06:40:22] <arschmitz> gabriel_schulhof: yes thats what im saying
[06:40:54] <gabriel_schulhof> I don't see how starts with and ends with helps. Does the order in which classes appear in the class attribute matter?
[06:41:04] * gabriel_schulhof showing his n00bness once more ...
[06:41:15] <arschmitz> gabriel_schulhof: starts with interms of a single class
[06:41:21] <gabriel_schulhof> Oh, OK!
[06:41:24] <arschmitz> like ui-corner-*
[06:41:32] <gabriel_schulhof> Why not go whole-hog and support regex?
[06:41:52] <arschmitz> if your going to do that just do it your self at that point
[06:42:02] <arschmitz> i mean what are you saving by using the plugin
[06:42:39] <gabriel_schulhof> That it .split( " " ).forEach( function() { this.match( theRegexPassedIn ); } for you
[06:42:44] <arschmitz> true
[06:42:55] <arschmitz> and it does it without jQuery
[06:43:00] <gabriel_schulhof> So you don't have any boilerplate.
[06:43:01] <arschmitz> if your not using it
[06:43:17] <arschmitz> id still at the other tests i think
[06:43:23] <arschmitz> because they are basicly shortcuts
[06:43:32] <gabriel_schulhof> Yeah, and they make the suites more legible.
[06:44:25] <gabriel_schulhof> ... and strict is good, because it checks whether all classes are present irrespective of the order in which they are present. That's a lot of value.
[06:44:35] <arschmitz> yes
[06:45:55] <arschmitz> makes tests less finicky to updates in the code that cant possibly break anything
[06:46:17] <arschmitz> and it often makes two tests into one
[06:46:39] <arschmitz> my usecase was i kept doing hasClasses(... _lacksClasses...
[06:46:49] <arschmitz> to make sure that both the old class had been removed and the newclass added
[06:47:51] <arschmitz> gabriel_schulhof: so makes those tests much easier
[06:51:39] <gabriel_schulhof> Really cool!
[06:52:43] <arschmitz> gabriel_schulhof: i think this covers every common use case i could think of
[06:52:57] <arschmitz> but if you think of another one you think it should cover let me know
[06:53:06] <arschmitz> for asserting classes
[06:59:01] <gabriel_schulhof> Roger that!
[07:00:02] <gabriel_schulhof> Oooh, and let's not forget the spacing before I re-submit for review.
[07:07:37] <jqcommit> [13themeroller.jquerymobile.com] 15alexjeffburke opened issue #218: import does not retain and display theme where background and border of buttons matches 02http://git.io/NAqc
[07:10:56] <ajb> hi there - just opened an issue to the themeroller project on github
[07:26:54] <arschmitz> ajb: ok thank you
[07:29:25] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof 04deleted 067730-textinput-classes-option at 1458f51c3: 02http://git.io/NAlB
[07:35:02] <gabriel_schulhof> arschmitz: What's the policy on a classes option where all the keys are empty? classes: {}?
[07:35:11] <arschmitz> gabriel_schulhof: yup
[07:35:16] <gabriel_schulhof> OK.
[07:36:08] <gabriel_schulhof> arschmitz: I've kinda introduced the convention whereby if a class key is empty I mention // We also have the following keys which are empty by default\n// "ui-widgetname-empty-key-1"\n// "ui-widgetname-empty-key-2"
[07:36:21] <gabriel_schulhof> So, I add those in a comment between classes: { /* here */ }
[07:36:34] <arschmitz> gabriel_schulhof: thats api
[07:36:43] <arschmitz> we dont document our api in comments
[07:37:12] <arschmitz> instead you should do a pr for the api site adding it :-)
[07:37:15] <gabriel_schulhof> That's a reminder to us, so we always use those classes via this._addClass()
[07:37:27] <gabriel_schulhof> I didn't add the comments for the sake of documenting API.
[07:37:30] <gabriel_schulhof> I know. I will.
[07:37:51] <arschmitz> gabriel_schulhof: i dont think we need that anything thats ui-widgetname is first classes
[07:39:36] <gabriel_schulhof> I dunno ... I fear we might start adding unnecessary class keys that way. Just come up with a new class that tweaks the style, when the style tweaks could've fit perfectly in an existing class key. But OK, I'll remove the comments.
[07:40:11] <arschmitz> gabriel_schulhof: well style stuff is css not js
[07:40:46] <arschmitz> and any class ui-widgetname is api now
[07:41:03] <arschmitz> so we cant just change them on a whim
[07:42:05] <gabriel_schulhof> OK.
[07:59:48] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7964: Textinput: Implement classes option (06ui-1-12...067730-textinput-classes-option) 02http://git.io/NAoZ
[10:54:37] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof closed issue #7963: "pageshow" trigger before panel "complete" when changing page from panel 02http://git.io/NuPn
[11:04:36] <gabriel_schulhof> arschmitz: Ping!
[11:04:55] <arschmitz> gabriel_schulhof: pong!
[11:05:24] <gabriel_schulhof> The widget factory no longer adds ui-state-disabled. How do we deal with disabled?
[11:05:36] <gabriel_schulhof> Do we add code to each widget to add ui-state-disabled?
[11:05:44] <gabriel_schulhof> We don't have per-widget disabled classes.
[11:05:48] <arschmitz> gabriel_schulhof: it has not in a long time
[11:06:13] <arschmitz> we should be adding it ourselves everywhere thought we fixed that everywhere in 1.4
[11:07:31] <gabriel_schulhof> Why though? If every single widget needs to add it, shouldn't we add that to the base class?
[11:07:44] <gabriel_schulhof> I mean the code that adds/removes it?
[11:20:59] <gabriel_schulhof> arschmitz: UI master still adds the class.
[11:21:36] <gabriel_schulhof> https://github.com/jquery/jquery-ui/blob/master/ui/widget.js#L311
[11:22:50] <gabriel_schulhof> arschmitz: 1.4.0 was about deprecating our ui-disabled in favour of UI's ui-state-disabled.
[11:22:55] <gabriel_schulhof> Now the latter's gone too.
[11:32:12] <scott_gonzalez> ui-state-disabled isn't added because it's not a "widget" thing it's a widget thing...Gotta love the lack of terminology here.
[11:32:37] <scott_gonzalez> Let's call $.Widget a module.
[11:32:42] <scott_gonzalez> There are types of modules.
[11:32:58] <scott_gonzalez> The main ones are widgets (element types) and interactions (behaviors)
[11:33:12] <scott_gonzalez> Widgets use ui-state-disabled, interactions don't.
[11:33:22] <scott_gonzalez> Because disabling a behavior does not disable the widget.
[11:33:37] <scott_gonzalez> For example, disabling the resizable aspect of a dialog should not apply ui-state-disabled to the dialog.
[11:38:25] <gabriel_schulhof> Right, gotcha. It's a visual thing vs. a behaviour.
[11:45:09] <gabriel_schulhof> arschmitz: I'm getting undefined if I use assert directly ... I have to use QUnit.assert. ... I don't get it. I thought it was working earlier.
[11:45:47] <arschmitz> are you passing in assert to the test
[11:48:25] <gabriel_schulhof> Like, test( "abce", function( assert ) {} );
[11:48:27] <gabriel_schulhof> ?
[11:49:16] <gabriel_schulhof> Aaah, I see from your UI tests that yes.
[12:02:22] <arschmitz> yes that
[12:03:12] <arschmitz> gabriel_schulhof: in qunit 2.0 all tests have to be done that way
[12:03:48] <gabriel_schulhof> Gotcha.
[23:04:11] <doesallmagic2> Project jQuery UI - git core build #832: STILL UNSTABLE in 3 min 10 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/832/
[23:15:43] <doesallmagic2> Project jQuery UI - 1.7.x core build #696: STILL UNSTABLE in 9 min 42 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.7.x%20core/696/
