[01:40:44] <YairRand> here's something I've noticed: the buttons made by jquery aren't always focusable. if the original element wasn't a focusable type, the button won't be focusable or reachable by tabbing at all. seems kind of strange to me. any reason not to just attach a tabindex=0 to buttons by default?
[02:25:51] <evenicoulddoit> Hi guys, I was wondering if it's possible to have a sortable list where the event is only triggered on a child of each node. i.e. I have a box, and I only want a small div in the box to intiate the sortable action? I've had a quick look in the API and I didn't see anything which immediately sprung out
[02:26:00] <evenicoulddoit> + no update on the web icons scott_gonzalez?
[02:55:25] <_|Nix|_> evenicoulddoit: Please ask in #jquery. This channel is for discussion regarding the development of jQuery UI and jQuery Mobile, not usage of these libraries.
[03:01:56] <evenicoulddoit> _|Nix|_: OK, thanks :)
[03:56:49] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06master: 02http://git.io/zCD_hQ
[03:56:49] <jqmobilecommit> 13jquery-mobile/06master 14de6c4f9 15Jasper de Groot: Controlgroup: Make legend wrap on IE10. Fixes #6139.
[04:02:12] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 061.3-stable: 02http://git.io/Oj6HEw
[04:02:12] <jqmobilecommit> 13jquery-mobile/061.3-stable 14321f0c7 15Jasper de Groot: Controlgroup: Make legend wrap on IE10. Fixes #6139.
[04:13:31] <travis-ci> [travis-ci] jquery/jquery-mobile#452 (master - de6c4f9 : Jasper de Groot): The build was fixed.
[04:13:31] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/5653444aa1b3...de6c4f9f6223
[04:13:31] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/8882541
[04:19:42] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof created 06collapsible-widget-review (+7 new commits): 02http://git.io/OHEp-w
[04:19:42] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 141ec1626 15Gabriel Schulhof: Collapsible: Renaming variable "o" to "opts" for options.
[04:19:42] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 141f9e699 15Gabriel Schulhof: Collapsible: Remove unneeded variables.
[04:19:42] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 149a14309 15Gabriel Schulhof: Collapsible: Shortening unnecessarily long variable names.
[05:28:51] <arschmitz> morning _|Nix|_ uGoMobi:
[05:29:00] <uGoMobi> morning arschmitz 
[05:29:50] <jqmobilecommit> [13jquery-mobile] 15DQvsRA opened issue #6141: Flip Slider Issue  02http://git.io/hiXqtQ
[05:31:56] <_|Nix|_> arschmitz: Hey!
[05:32:12] <_|Nix|_> arschmitz: I got option inheritance to work for collapsibleset/collapsible.
[05:32:21] <_|Nix|_> arschmitz: Performance impact is not so bad: http://jsperf.com/collapsible-widget-review
[05:32:58] <_|Nix|_> arschmitz: Basically, collapsibleset shares all the options from collapsible by doing options: $.mobile.collapsible.defaults in its prototype.
[05:33:08] <_|Nix|_> arschmitz: It AMD-depends on collapsible so that shouldn't be an issue.
[05:34:12] <_|Nix|_> arschmitz: ... and the initial value of a collapsible's inheritable options is null, which tells its _setOptions method to go to the parent collapsibleset for the value, or, failing that, to the defaults.
[05:34:40] <arschmitz> cool
[05:35:25] <_|Nix|_> arschmitz: ... and the collapsibleset's _setOptions method basically calls refresh() on its children.
[05:36:40] <_|Nix|_> arschmitz: Yeah, it /is/ kinda cool, however, I'd prefer to do as much of such inheritance via CSS as possible.
[05:38:28] <_|Nix|_> arschmitz: Fortunately, IINM we can take one option at-a-time and CSS-ify it (except for the expanded/collapsedIcon) by removing it from defaults and returning the value stored in defaults. IINM, that'd disable the js-based inheritance and make way for CSS-based inheritance.
[05:38:47] <arschmitz> cool
[05:39:40] <_|Nix|_> arschmitz: Now, on to ... *gulp* ... _destroy() *shudder*
[05:41:59] <uGoMobi> _|Nix|_: did you see this ticket? https://github.com/jquery/jquery-mobile/issues/5798
[05:43:26] <_|Nix|_> uGoMobi: Can do. However, it's really ugly because the collapsible reacts to its own event. It's actually a property change :/ A completely unhealthy combination.
[05:43:55] <arschmitz> _|Nix|_: collapsible reacts to its own events?
[05:44:36] <_|Nix|_> arschmitz: Yep. Reflecting the new expanded/collapsed state is the job of the default handler for the expand/collapse event.
[05:44:44] <_|Nix|_> arschmitz: ... currently.
[05:45:12] <_|Nix|_> arschmitz: ... and _setOption( "collapsed", bool ) triggers one of two events.
[05:45:31] <_|Nix|_> arschmitz: Insanity²
[05:46:06] <_|Nix|_> arschmitz: The reason for it is that collapsibleset also triggers these events.
[05:46:24] <_|Nix|_> arschmitz: I guess this code is from a time before public methods O_o
[05:47:08] <_|Nix|_> arschmitz: The cool thing is, collapsible{,set} now work outside pages too.
[05:47:08] <arschmitz> yeah it should not listen for its own events i dont think. it should trigger them then just do whatever it would in reaction to the event
[05:47:12] <uGoMobi> yeah, would have been nice if it were methods
[05:47:49] <_|Nix|_> OK. I'll turn it onto its ear - the way it's supposed to be :)
[05:48:03] <arschmitz> cool
[05:48:09] <uGoMobi> great :)
[05:53:00] <_|Nix|_> Oooh! https://github.com/jquery/jquery-mobile/issues/5989 is still present in 1.3-stable
[05:53:22] <_|Nix|_> Why is that bug closed?
[05:53:39] <_|Nix|_> It's fixed in the collapsible-widget-review branch ...
[05:54:04] <uGoMobi> _|Nix|_: we can't fix that in 1.3
[05:54:17] <_|Nix|_> uGoMobi: No? OK.
[05:55:00] <_|Nix|_> uGoMobi: I guess it would entail making _setOptions work for collapsible, which is the work for 1.4.0.
[05:55:36] <uGoMobi> _|Nix|_: right, it's to big change for 1.3-stable
[05:55:42] <uGoMobi> too*
[05:56:10] <_|Nix|_> uGoMobi: OK. WORKSFORME.
[05:56:58] <uGoMobi> _|Nix|_: that was based on this commit https://github.com/jquery/jquery-mobile/commit/133c81a
[05:58:09] <uGoMobi> _|Nix|_: not sure if adding _setOptions in general is something that shouldn't land in a maintenance release
[05:58:46] <_|Nix|_> uGoMobi: Well, we can take it one option at-a-time, but OK, let's not do it.
[05:59:10] <uGoMobi> _|Nix|_: OK
[05:59:58] <_|Nix|_> uGoMobi: If 1.4.0 turns out FUBAR (which I doubt), we can always release another 1.3.x /with/ the fix.
[06:00:58] <uGoMobi> I knew DBR, but FUBAR is new to me :)
[06:01:27] <uGoMobi> _|Nix|_: anyway... yeah that is an option, but let's hope we don't need to
[06:01:29] <_|Nix|_> uGoMobi: It's from WWII: F-ucked U-p B-eyond A-ll R-ecognition.
[06:01:44] <uGoMobi> yeah, I looked it up
[06:01:55] <uGoMobi> lol
[06:39:14] <jqmobilecommit> [13jquery-mobile] 15mlchevallier opened issue #6142: Listview: filter routine called each time when filter is empty  02http://git.io/-UKo3w
[06:45:25] <_|Nix|_> uGoMobi, arschmitz: Should I still trigger the non-namespaced signals "expand", "collapse" for one version?
[06:45:37] <arschmitz> are they documented
[06:45:38] <arschmitz> ?
[06:45:42] <_|Nix|_> Lessee ...
[06:45:50] <uGoMobi> I think they are
[06:46:07] <uGoMobi> that's why the issue ticket was created
[06:46:09] <_|Nix|_> uGoMobi: In https://github.com/jquery/jquery-mobile/issues/5898 uGoMobi said no, but they might have become doc-ed in the meantime.
[06:46:34] <arschmitz> nope they are documented with widget events http://api.jquerymobile.com/collapsible/#event-collapse
[06:46:52] <_|Nix|_> arschmitz: Yeah, actually, non-existing events are documented :)
[06:47:00] <uGoMobi> exactly
[06:47:21] <uGoMobi> so we don't have trigger the non-namespaced ones
[06:47:22] <_|Nix|_> uGoMobi: That's great, because we don't need to deprecate "expand" and "collapse". We can remove them outright.
[06:47:27] <_|Nix|_> uGoMobi: Awesome!
[06:47:30] <arschmitz> so no need to deprecate  
[06:47:31] <uGoMobi> yup :)
[06:47:40] <_|Nix|_> We rock!
[06:47:58] <arschmitz> something like that
[06:48:15] <_|Nix|_> Score -1 for team "don't make promises you can't keep" !
[06:52:08] <_|Nix|_> I believe https://github.com/jquery/jquery-mobile/issues/5271 is now also fixed, because popup produces namespaced events.
[06:54:41] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 3 new commits to 06collapsible-widget-review: 02http://git.io/nvg4kw
[06:54:41] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 1414b532b 15Gabriel Schulhof: Collapsible: Elaborating on the semantics behind $.mobile.collapsible.defaults....
[06:54:41] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 140fcb5c4 15Gabriel Schulhof: Collapsible: Implement public methods expand() and collapse() for programmatic manipulation and trigger namespaced signals via this._trigger() instead of non-namespaced ones....
[06:54:41] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 14fe60da4 15Gabriel Schulhof: Collapsible set: Start using the new expand()/collapse() public API instead of the signal-based one. Fixes #5271, #5798.
[07:04:26] <_|Nix|_> arschmitz: Why must the page and the toolbar be enhanced before collapsibles can be enhanced? (https://github.com/jquery/jquery-mobile/commit/2af091d5#L4R190)
[07:07:16] <arschmitz> _|Nix|_: are you seeing an issue somewhere?
[07:08:31] <arschmitz> or is this just a general question why is it that way in the enhancer setup?
[07:13:50] <_|Nix|_> arschmitz: Not seeing an issue. I'm asking because almost no widget has any dependencies, except of course controlgroup, and collapsible's dependency on page/toolbar is non-obvious.
[07:13:53] <arschmitz> _|Nix|_: either way the answer is that should not be there. My best guess as to why it is would be since its part of a commit where im fixing tests i was trying to get some test to pass and accidentally forgot to remove it. 
[07:14:14] <_|Nix|_> arschmitz: OK. I'll remove it and run the full suite.
[07:28:18] <jqmobilecommit> [13jquery-mobile] 15mlchevallier opened issue #6143: Defining popup events when creating a popup using JS and the popup() widget  02http://git.io/9xe4lw
[07:33:11] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06collapsible-widget-review: 02http://git.io/lEUIuw
[07:33:11] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 1400a29e7 15Gabriel Schulhof: Collapsible: There is no need to enhance-depend on page and toolbar....
[08:13:14] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/AKLWvQ
[08:13:14] <jquicommit> 13jquery-ui/06master 14382a775 15Scott GonzÃ¡lez: Widget: Remove leftover back-compat handling for widget instance storage (see #8801).
[08:18:14] <scott_gonzalez> kborchers jzaefferer: Can one of you write a unit test for https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.menu.js#L52-L54
[08:20:06] <kborchers> scott_gonzalez: if it can wait until this evening i can give it a shot â¦ hoping to get back to jQuery work tonight after being away for a bit. just had our baby
[08:20:20] <scott_gonzalez> That works.
[08:20:24] <scott_gonzalez> And congrats.
[08:20:29] <kborchers> thanks :)
[08:20:44] <arschmitz> kborchers: Congrats!
[08:21:15] <uGoMobi> kborchers: congrats!
[08:22:00] <kborchers> thanks all
[08:23:23] <uGoMobi> I think we need some jQuery baby swag :)
[08:23:44] <arschmitz> jQuery onsies and bibs lol 
[08:23:51] <uGoMobi> lol
[08:31:36] <gregfranko> @scott_gonzalez @jzaefferer What's going on fellas
[08:32:26] <scott_gonzalez> Hey gregfranko.
[08:32:36] <arschmitz> _|Nix|_: you still around?
[08:32:55] <gregfranko> @scott_gonzalez I'm sad that I made you sad
[08:32:59] <scott_gonzalez> gregfranko: So, the UI-oriented features, I agree with you. I've been thinking about how to split the widget factory for a while.
[08:33:20] <scott_gonzalez> Anyone that essentially duplicates the widget factory makes me sad.
[08:33:30] <scott_gonzalez> You're the second person to talk about it at a jQuery conf :-(
[08:33:35] <gregfranko> You know I did not duplicate the widget factory
[08:33:52] <scott_gonzalez> Your talk made it seem like it was 90% the same.
[08:34:01] <gregfranko> Well then my talk sucked lol
[08:34:07] <scott_gonzalez> That's the impression the entire audience will likely have.
[08:34:24] <gregfranko> gotcha, yea I should have done a better job of representing it
[08:34:30] <scott_gonzalez> It was basically, "The widget factory is great, so I rebuilt it and added these 2 functions."
[08:34:34] <gregfranko> haha
[08:34:53] <gregfranko> well a HUGE difference is you can't directly extend a widget using jqfactory
[08:35:02] <gregfranko> I'll make it more prominent in the README
[08:35:07] <gregfranko> if you want to extend widgets directly
[08:35:10] <gregfranko> use the widget factory
[08:35:27] <scott_gonzalez> That's a reason not to use jqfactory, not a reason why jqfactory should exist.
[08:35:30] <scott_gonzalez> So why should it exist?
[08:35:40] <gregfranko> I don't need to directly extend another widget
[08:35:44] <gregfranko> I have never extended another widget
[08:35:55] <gregfranko> I did not take the pieces of the widget factory that I do not like
[08:36:16] <scott_gonzalez> That you don't like or that you don't use?
[08:36:20] <gregfranko> both
[08:36:27] <gregfranko> there was a lot in the widget factory that I don't use
[08:36:30] <scott_gonzalez> You don't like the fact that extensions exist?
[08:36:44] <gregfranko> that's great, but I don't need it
[08:36:57] <gregfranko> As long as all instance properties are available for me to use, I am good
[08:37:09] <gregfranko> Everything is saved on $.namespace.basename
[08:37:12] <gregfranko> I just pluck what I need
[08:37:17] <gregfranko> not take everything and overwrite everything
[08:37:54] <scott_gonzalez> Please don't be hyperbolic.
[08:38:21] <scott_gonzalez> As someone extending a widget, you only extend what you want.
[08:38:31] <scott_gonzalez> The nature of extensions isn't that you necessarily overwrite everything.
[08:47:04] <gregfranko> I understand that, but I haven't needed to extend
[08:47:19] <gregfranko> and no one who has used my plugins has either
[08:47:27] <gregfranko> I keep it simple with jqfactory
[08:47:37] <gregfranko> what you pass in as your object are treated as instance properties
[08:47:44] <gregfranko> and the prototype always points at jqfactory.common
[08:49:04] <scott_gonzalez> Those jsut sound like negatives to me.
[08:49:16] <gregfranko> Another thing I never use is the ability to call API methods using the $( ".selector" ).widget( "option" ) syntax.
[08:49:22] <scott_gonzalez> So I guess your argument here is "widget factory is too big"
[08:49:46] <scott_gonzalez> But you also don't care about how jQuery is used normally.
[08:50:34] <gregfranko> what do you mean how jQuery is used normally?
[08:50:45] <scott_gonzalez> obj.method()
[08:50:53] <scott_gonzalez> You clearly don't care about that.
[08:51:11] <gregfranko> I guess not
[08:51:20] <gregfranko> I'm fine with grabbing the instance from the data method
[08:51:36] <scott_gonzalez> You're also fine with adding namespaces to $.fn.
[08:51:47] <gregfranko> and why is that bad?
[08:51:56] <gregfranko> libraries like jqueryui and bootstrap should already be doing this
[08:52:28] <scott_gonzalez> No, we shouldn't.
[08:52:34] <gregfranko> how does it make sense for bootstrap to take up 12 names on the jquery prototype
[08:52:37] <gregfranko> instead of 2?
[08:52:39] <scott_gonzalez> Anything that changes the context of a chain is terrible.
[08:52:41] <gregfranko> *1
[08:52:55] <gregfranko> The context doesn't change
[08:52:58] <gregfranko> it is maintained
[08:53:08] <scott_gonzalez> So all methods are available all the time?
[08:53:45] <scott_gonzalez> In your README: $('.test').person().greg();
[08:54:01] <scott_gonzalez> You're saying .person() doesn't change the context?
[08:55:07] <gregfranko> yea
[08:55:15] <gregfranko> the context is still the calling jquery object
[08:55:34] <scott_gonzalez> I'm not talking about $.fn.context.
[08:55:40] <scott_gonzalez> I'm talking about the object you're working with.
[08:55:51] <scott_gonzalez> This is very much not how normal jQuery works.
[08:56:23] <scott_gonzalez> Methods don't just come and go in the middle of a chain.
[08:56:46] <gregfranko> okay...
[08:56:50] <gregfranko> so why is this bad?
[08:57:15] <scott_gonzalez> Because it's breaks a known convention.
[08:57:24] <scott_gonzalez> And it makes chains confusing.
[08:58:39] <gregfranko> All it is doing is chaining
[08:58:52] <gregfranko> well, I take that back
[08:58:55] <gregfranko> I can see how it is confusing
[08:59:11] <gregfranko> but I personally find it very usable
[08:59:23] <gregfranko> and a solution to namespacing
[08:59:27] <gregfranko> when I see no other alternatives
[08:59:55] <scott_gonzalez> The solution is don't namespace. Just like HTML.
[09:00:30] <gregfranko> I disagree, obviously
[09:00:44] <gregfranko> and you aren't forced into the namespacing
[09:00:47] <gregfranko> by default it doesn't do that
[09:01:03] <gregfranko> it is an extra convenience that I think is important for large libraries
[09:01:14] <gregfranko> obviously not everyone agrees
[09:02:37] <gregfranko> besides that there is the trivial initialization difference that @jzaefferer mentioned
[09:02:54] <gregfranko> he says it is easy to implement in the widget factory, which it is
[09:02:59] <gregfranko> but that is boilerplate code
[09:03:04] <gregfranko> IMO
[09:03:23] <scott_gonzalez> It's boilerplate that you can make go away by just extending the base widget.
[09:06:21] <gregfranko> sure, but my point is that it should already be in core
[09:06:22] <gregfranko> brb
[09:06:25] <gregfranko> foosball lol
[09:37:34] <gregfranko> back
[09:37:51] <gregfranko> but anyway, there are also differences in the API methods between the widget factory and jqfactory
[09:38:39] <gregfranko> so I felt there was enough differences to break out into a brand new project
[09:38:43] <gregfranko> *were
[09:40:19] <jzaefferer> gregfranko: having three lines of method calls is hardly boiler plate. That and you just describe these methods, but we need at least one good usecase to add anything.
[09:40:53] <gregfranko> It's more than three lines of code if you depend on asynchronous behavior on initialization
[09:41:08] <jzaefferer> gregfranko: btw. hi! Nice to have you around here :-)
[09:41:28] <gregfranko> haha yes, much easier than Twitter
[09:41:42] <jzaefferer> gregfranko: can you elaborate on the async stuff? Your readme mentions it, but the API docs don't seem to cover it at all
[09:42:06] <gregfranko> say for example your writing a jquery Facebook plugin
[09:42:15] <gregfranko> you request some data from the Facebook graph api
[09:42:21] <gregfranko> and then want something to happen
[09:42:39] <jzaefferer> jQuery Facebook Plugin = Graph API client?
[09:42:55] <gregfranko> As long as you pass the _create method a deferred object, the _render method will wait until the deferred is resolved
[09:43:04] <gregfranko> this is just a trivial example lol
[09:43:16] <jzaefferer> gregfranko: autocomplete deals with async requests and renders stuff as a response
[09:43:23] <gregfranko> how does it deal with it?
[09:43:39] <jzaefferer> nothing special really
[09:44:05] <jzaefferer> there's an event handler to trigger a request; when its done, it calls other methods to do stuff
[09:44:28] <scott_gonzalez> The event handler is just for the user interaction.
[09:44:35] <scott_gonzalez> The async handling is decoupled from that.
[09:44:47] <gregfranko> all jqfactory does is provide a template for you to follow
[09:44:49] <gregfranko> you don't have to use it
[09:44:53] <gregfranko> you don't need a _render method
[09:44:55] <scott_gonzalez> But the point is that very few widgets need async initial rendering. Those that do can easily build it on their own.
[09:45:19] <gregfranko> it took a few lines of code to support it
[09:45:27] <gregfranko> and I disagree that few plugins need it
[09:45:31] <gregfranko> in my case, I wanted it
[09:47:19] <jzaefferer> btw kborchers congrats! Apparently I didn't actually tweeted something in that direction, as I thought...
[09:47:34] <kborchers> jzaefferer: thanks :)
[09:48:04] <scott_gonzalez> Well, at this point it doesn't really matter. You don't care about maintaining convention and we do, so we'll never agree.
[09:48:23] <scott_gonzalez> But you should clean up your messaging around jqfactory.
[09:48:33] <scott_gonzalez> Because the differnces you mentioned are superficial.
[09:48:47] <scott_gonzalez> And the real differences weren't even revealed at all.
[09:49:49] <gregfranko> I will revamp the README to make it very clear the use cases for both
[09:51:21] <jzaefferer> just read the backlog of the discussion I missed here earlier
[09:51:49] <jzaefferer> I agree, calling methods through the bridge and extending widgets are pretty significant features
[09:52:01] <jzaefferer> Making the lack of those more obvious would help
[09:52:38] <jzaefferer> Would still be nice if we could figure out a way for you to build on top of the widget factory.
[09:54:46] <gregfranko> Theres no doubt that I need to update the README to make it very clear that there are distinct differences
[09:54:51] <gregfranko> I'll get it done after work today
[09:55:03] <gregfranko> and ping you on here to see if you think it is better
[09:58:36] <arschmitz> johnbender: Ping!
[10:00:51] <scott_gonzalez> jzaefferer: Based on gregfranko's use of _super as a property, I don't think he'd ever be interested in building on top of the widget factory.
[10:01:46] <gregfranko> That's a major difference
[10:01:52] <gregfranko> the jqfactory methods are always the prototype
[10:01:57] <gregfranko> of each plugin instance
[10:02:22] <gregfranko> and the properties you pass into $.jqfactory method are attached on the Function constructor
[10:02:43] <gregfranko> A major advantage of this is that you can attach instance properties directly on the object
[10:02:56] <gregfranko> and not worry about other instances seeing it
[10:03:21] <gregfranko> if that floats your boat
[10:07:48] <jzaefferer> That's nice for ad-hoc additions, but having .super() just work, without any required arguments beats that
[10:08:01] <jzaefferer> Makes building any kind of extension so much easier
[10:08:40] <jzaefferer> _create: function() { this._super(); this._render(); this._on( this._events ); }
[10:08:45] <jzaefferer> or something like that...
[10:13:45] <gregfranko> I think just doing _create: function() { this._superMethod('create'); } is more readable
[10:14:10] <gregfranko> not everyone knows that _super() will call the current function
[10:19:10] <scott_gonzalez> Does anyone have real IE 8 available?
[10:19:36] <arschmitz> scott_gonzalez: i do but im running out be back in ~1 hour
[10:20:04] <scott_gonzalez> arschmitz: One super quick test?
[10:20:25] <scott_gonzalez> Oh, well, if you need to launch a VM, it can wait.
[10:20:27] <scott_gonzalez> http://view.jqueryui.com/master/tests/unit/core/core.html
[10:20:34] <scott_gonzalez> Just want to know if that runs to completion.
[10:23:28] <arschmitz> scott_gonzalez: Ok I'm in a car but be home in a minute 
[10:23:33] <scott_gonzalez> Thanks.
[10:24:43] <arschmitz> No prob ie8 is still standard browser where I work
[10:24:50] <arschmitz> It makes me very sad 
[10:28:09] <jop008> Hi
[10:28:20] <scott_gonzalez> Hi jop008
[10:28:39] <jop008> I have a table and I want to freeze the first header row
[10:28:54] <scott_gonzalez> ?topic @ jop008
[10:28:54] <bot-t> jop008, Topic: jQuery UI & Mobile development (support at #jquery, core dev at #jquery-dev) Overview: http://wiki.jqueryui.com/Â - meeting at Wednesday, 12pm Eastern (9am Pacific, 6:00pm CEST), in #jquery-meetingÂ - Agenda: http://bit.ly/jqueryui-agenda | This channel is publicly logged to http://irc.jquery.com
[10:29:08] <jop008> the table has 110 rows so you need the header visible and I have <input fields in the  table
[10:29:20] <scott_gonzalez> jop008: Please ask questions in #jquery.
[10:29:30] <jop008> I did no answers
[10:29:42] <scott_gonzalez> You won't get any answers here either.
[10:29:43] <jop008> where is this channel for?
[10:29:58] <scott_gonzalez> Development of jQuery UI and jQuery Mobile.
[10:30:33] <jop008> So is there a way to fix headers in jqM oterwise is it built in in newer versions?
[10:30:38] <jop008> a simple question
[10:30:44] <jqmobilecommit> [13jquery-mobile] 15pastudan opened pull request #6144: fixing vmouse start/stop events to use clientX/clientY rather than pageX/pageY (06master...06swipe-events)  02http://git.io/2_DaDg
[10:32:40] <jgornick> scott_gonzalez, Is it known that sortable/draggable performance is slow in IE8/IE9?
[10:33:17] <scott_gonzalez> jgornick: no
[10:34:39] <jgornick> scott_gonzalez, Based on what I have at http://jsfiddle.net/jgornick/Przxf/72/ I'm using a pretty basic sortable and the dragging of items is extremely slow in IE8/IE9. Can you see anything there that would cause it to be so slow?
[10:35:08] <jgornick> scott_gonzalez, this is 50% support/50% dev, because i will fix if there's an issue with sortable/draggable.
[10:35:18] <scott_gonzalez> 500 LOC isn't actually a reduced test case.
[10:35:23] <arschmitz> scott_gonzalez: Tests stall on 2
[10:35:38] <scott_gonzalez> arschmitz: Thanks. That's what I'm seeing in BrowserStack too.
[10:35:48] <jgornick> scott_gonzalez, Fair enough, let me reduce to see what's causing issues.
[10:36:19] <scott_gonzalez> jgornick: That's a pretty awesome UI though.
[10:36:46] <jgornick> scott_gonzalez, thank you :) getting close to being finished however, IE8/9 is killing performance right now.
[10:37:05] <jgornick> scott_gonzalez, it's been interesting tweaking the different ui widgets to work with eachother.
[10:37:41] <scott_gonzalez> :-/ Hopefully the interaction rewrites will make that easier.
[10:37:48] <scott_gonzalez> They're quite a mess internally.
[10:38:40] <scott_gonzalez> Oh, you're using refreshPositions.
[10:38:49] <scott_gonzalez> jgornick: I bet that's the perf killer.
[10:39:13] <jgornick> scott_gonzalez, I have taken that out and didn't see any difference :|
[10:41:08] <jop008> Is there a way to freeze a header row in a table?
[10:43:30] <jgornick> scott_gonzalez: http://jsfiddle.net/jgornick/YuMRr/3/ ... I've removed every other widget besides sortable. The lines in question are 15-120, the other lines of code are framework to setup the UI. I've also removed refreshPositions from the sortable config as well as on sort start. Still getting extremely slow performance in IE8.
[10:43:33] <scott_gonzalez> jop008: I don't see anything on http://api.jquerymobile.com/table/ about it.
[10:44:13] <jgornick> scott_gonzalez, However, IE9 is a bit better.
[10:47:29] <scott_gonzalez> How's the perf if you remove all the CSS?
[10:48:56] <scott_gonzalez> I can only test through BrowserStack right now, so it's hard for me to tell when perf is improving.
[10:53:29] <jop008> So how to implement such a feuture?
[10:53:35] <jop008> feature
[10:55:10] <scott_gonzalez> jop008: That's a question for #jquery or the forums or Stack Overflow.
[10:55:40] <jop008> I asked already
[10:55:48] <jgornick> scott_gonzalez, let me give that a shot.
[10:55:49] <jop008> in jquery forum
[10:56:08] <scott_gonzalez> jop008: As I already told you, asking in here will not get you an answer. This is not the appropriate place to ask.
[10:56:10] <jop008> strange that thead not freeezes the header row
[10:56:19] <jop008> it should be normal behaviour
[10:56:27] <jop008> why is it called head?
[10:56:30] <scott_gonzalez> You can ask for that via a GitHub issue.
[11:01:18] <jgornick> scott_gonzalez: Even after removing all CSS (http://jsfiddle.net/jgornick/YuMRr/7/) the dragging performance is slow on IE8.
[11:04:33] <scott_gonzalez> jgornick: Just to verify, is this slow for you? http://view.jqueryui.com/master/demos/sortable/default.html
[11:10:49] <jgornick> scott_gonzalez, it might be VirtualBox that is causing the issues...
[11:11:01] <jgornick> I'm testing on a physical machine with IE8 right now.
[11:13:45] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/4he4_w
[11:13:45] <jquicommit> 13jquery-ui/06master 14afeaf56 15Scott GonzÃ¡lez: Core tests: Explicitly focus the body during delayed .focus() test to avoid an issue in IE 8.
[11:14:50] <jgornick> scott_gonzalez, Meh.
[11:15:21] <jgornick> scott_gonzalez, Went to the physical machine with IE8 and works as smooth as IE8 allows it to be, even with refreshPositions.
[11:15:44] <jgornick> So, there's something up with VirtualBox on OS X and dragging that's causing some slowness.
[11:16:03] <scott_gonzalez> :-/
[11:16:12] <scott_gonzalez> Well, that's at least partially good news.
[11:16:21] <scott_gonzalez> Annoying for testing, but good to know that the plugin is working properly.
[11:16:59] <scott_gonzalez> refreshPositions might only become a problem with lots of elements.
[11:17:16] <scott_gonzalez> Since it's recalculating the positions on every mousemove.
[11:33:48] <scott_gonzalez> Hooray. That fixed the core tests in IE 8.
[11:49:58] <arschmitz> scott_gonzalez: quick question for you
[11:50:25] <scott_gonzalez> yeah?
[11:50:40] <arschmitz> kinda conceptual about _destroy
[11:50:55] <arschmitz> in the case of the enhanced option like in mobile
[11:51:30] <arschmitz> should destroy still revert the markup or just detach events?
[11:51:46] <scott_gonzalez> That's a good question.
[11:51:55] <scott_gonzalez> My initial reaction is that it should only detach events.
[11:51:58] <scott_gonzalez> BUT
[11:52:32] <scott_gonzalez> I can tell you that if I were to actually go down the road of implementing the worlds-collide optional-init code, destroy would always be a full destroy.
[11:52:47] <scott_gonzalez> But, there would also be a difference between destroy and remove.
[11:53:15] <scott_gonzalez> Not sure if that would make a difference in this case.
[11:53:39] <arschmitz> yeah iv been kinda debating with my self about which makes more sense from a user perspective
[11:53:50] <scott_gonzalez> Actually, I guess it wouldn't mkae a difference if the destroy and remove logic was split out.
[11:54:19] <scott_gonzalez> I could see just doing `if ( this.options.enchaned ) { return; }`
[11:54:31] <arschmitz> yeah 
[11:54:35] <scott_gonzalez> enchaned :-P Your widget is in chains!
[11:55:02] <arschmitz> lol
[11:58:09] <arschmitz> scott_gonzalez: so what your feeling full destroy or just events?
[11:58:37] <scott_gonzalez> I'd go with just events.
[11:58:47] <scott_gonzalez> So you shouldn't need to do anything but return.
[11:58:54] <scott_gonzalez> Since events are auto-removed.
[11:58:59] <arschmitz> yup
[11:59:57] <arschmitz> thats what id been leaning towards already i just figured id get your opinion incase there was a reason it should not be this way
[12:00:12] <arschmitz> that i was not aware of
[12:35:01] <jzaefferer> rxaviers: via znc now?
[12:35:10] <rxaviers> yepp via znc
[12:35:14] <rxaviers> :)
[12:35:44] <rxaviers> so, if I quit now, is my nickname still available?
[12:36:25] <jzaefferer> yeah, always online
[12:36:37] <rxaviers> interesting
[12:36:53] <rxaviers> thanks for the setup
[12:49:45] <jzaefferer> you may want to change the password
[12:49:54] <jzaefferer> its in my skype log and emails...
[12:51:50] <rxaviers> how do I change that? is it via irc commands/messages?
[14:01:17] <jquicommit> [13jquery-ui] 15fnagel synchronize pull request #1023: Selectmenu (06master...06selectmenu)  02http://git.io/SXDh7w
[14:04:00] <jquicommit> 01[13jquery-ui01] 15fnagel pushed 1 new commit to 06selectmenu: 02http://git.io/zp2qiA
[14:04:00] <jquicommit> 13jquery-ui/06selectmenu 14da4e238 15Felix Nagel: Selectmenu: remove ui-front from button
[14:23:12] <jqmobilecommit> [13jquery-mobile] 15frequent opened pull request #6145: filter widget - first commit (06master...06filter_widget)  02http://git.io/Pm0lNQ
[15:07:21] <jqmobilecommit> [13jquery-mobile] 15perara opened issue #6146: Clicking on a listview item before page is fully loaded produces error.  02http://git.io/2CvM5Q
[23:22:08] <jqmobilecommit> [13jquery-mobile] 15frequent synchronize pull request #6145: filter widget - first commit (06master...06filter_widget)  02http://git.io/Pm0lNQ
[23:38:54] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 2 new commits to 06master: 02http://git.io/B9ZH-Q
[23:38:54] <jqmobilecommit> 13jquery-mobile/06master 1495d9f7d 15Ghislain Seguin: Normalize line endings
[23:38:54] <jqmobilecommit> 13jquery-mobile/06master 1419a7f27 15Ghislain Seguin: Added shim config for widgets/jquery.ui.tabs
[23:39:31] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin created 06issue-2859 (+1 new commit): 02http://git.io/qB8k7g
[23:39:31] <jqmobilecommit> 13jquery-mobile/06issue-2859 14a6cbf80 15Ghislain Seguin: In changePage, call $.mobile.navigate with the non-stripped url (absUrl)
[23:41:59] <travis-ci> [travis-ci] jquery/jquery-mobile#457 (master - 19a7f27 : Ghislain Seguin): The build has errored.
[23:41:59] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/de6c4f9f6223...19a7f27a7987
[23:41:59] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/8915080
[23:47:44] <jqmobilecommit> [13jquery-mobile] 15frequent opened issue #6147: feature request - JQM carousel/slider widget  02http://git.io/rnOuXw
