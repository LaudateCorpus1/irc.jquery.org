[02:26:17] <doesallmagic> Project jQuery UI - git core build #320: STILL FAILING in 2 min 7 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/320/
[02:56:25] <doesallmagic> Project jQuery UI 1-9-stable - git core build #107: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/107/
[03:13:24] <doesallmagic> Project jQuery UI - 1.6.x core build #215: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/215/
[03:28:47] <doesallmagic> Project jQuery UI - 1.7.x core build #216: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/216/
[03:47:27] <doesallmagic> Project jQuery UI - 1.8.x core build #191: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/191/
[03:48:10] <rxaviers> scott_gonzalez, jzaefferer, shall we support old versions on themeroller? https://github.com/jquery/download.jqueryui.com/issues/109
[03:48:10] <b-ot> rxaviers: Issue #109 by nknapp (4h 6m 48s): Keep old versions of theme-roller available
[03:58:40] <jzaefferer> rxaviers: we won't put the 1.8 themeroller back up. As for anything newer, we should only consider that if there are actually compability issues.
[05:02:47] <jquicommit> 01[13download.jqueryui.com01] 15rxaviers pushed 2 new commits to 06master: 02http://git.io/8thn9g
[05:02:47] <jquicommit> 13download.jqueryui.com/06master 145e62e52 15Rafael Xavier de Souza: Log error
[05:02:47] <jquicommit> 13download.jqueryui.com/06master 140ed7665 15Rafael Xavier de Souza: Add comment making error handling scheme more explicit. Closes #105
[05:04:00] <doesallmagic> Project download.jqueryui.com build #130: STILL FAILING in 1 min 12 sec: http://swarm.jquery.org:8080/job/download.jqueryui.com/130/
[05:04:00] <doesallmagic> * rxaviers: Log error
[05:04:01] <doesallmagic> * rxaviers: Add comment making error handling scheme more explicit. Closes #105
[05:08:26] <rxaviers> gnarf, jzaefferer, guys can you point me where in infra I can tweak to fix this? ^ It's getting cloudy :-P
[05:09:04] <rxaviers> (ie. add imageMagick .deb in that machine)
[07:10:25] <ngsilverman> scott_gonzalez: also, what arguments do you think the tolerance functions should take?
[07:11:25] <scott_gonzalez> Can it match droppable? https://github.com/jquery/jquery-ui/blob/interactions/ui/jquery.ui.droppable.js#L150
[07:11:59] <scott_gonzalez> If it can, we can pull the tolerances into a shared file.
[07:14:21] <ngsilverman> well assuming we don't want to touch the droppable implementation I suppose it could match it sure
[07:28:09] <scott_gonzalez> ngsilverman: Nothing is set in stone.
[07:28:20] <scott_gonzalez> If there's a better API for droppable, we can change it.
[07:28:36] <scott_gonzalez> This is a brand new API, so anything goes.
[07:29:47] <ngsilverman> my understanding is we want users to be able to provide their own tolerance functions, correct?
[07:37:46] <ngsilverman> droppable's implementation takes 3 arguments: event, edges and ui
[07:39:12] <ngsilverman> edges contains the droppable and the draggable's edges
[07:39:31] <ngsilverman> ui contains the draggable's offset and the pointer position
[07:40:41] <ngsilverman> the droppable's offset is accessed through "this"
[07:40:48] <ngsilverman> and event is never used
[07:42:44] <ngsilverman> now on sortable I thought I could use: helper, item and pointerPosition
[07:43:07] <ngsilverman> with helper and item both containing the cached offsets, edges and proportions
[07:43:16] <scott_gonzalez> Krinkle: An internal error occurred. The following error message was caught:
[07:43:16] <scott_gonzalez> Corrupt run result #1127253
[07:43:39] <Krinkle> scott_gonzalez: Thanks, Just the one?
[07:43:48] <scott_gonzalez> That's all that's listed on http://swarm.jquery.org/user/jqueryui
[07:44:06] <Krinkle> I see
[07:44:31] <scott_gonzalez> ngsilverman: Implement whatever seems to make sense.
[07:44:33] <Krinkle> http://swarm.jquery.org/user/jquery is fine
[07:44:39] <ngsilverman> alright
[07:44:56] <scott_gonzalez> ngsilverman: We can then compare with droppable and see if it's possible refactor them to use the same API and still make sense.
[07:45:02] <scott_gonzalez> If they end up being separate, that's fine.
[07:45:13] <scott_gonzalez> They're separate today anyway.
[07:45:55] <scott_gonzalez> Krinkle: swarm seems really slow right now.
[07:46:03] <scott_gonzalez> Possibly related?
[07:46:44] <Krinkle> scott_gonzalez: Well, I'm in the middle of a major refactoring that's going to address the ongoing scalability issues with larger queries
[07:46:53] <Krinkle> Nothing that should affect regular flow thoug
[07:47:02] <Krinkle> only affects large queries like all of /user/jqueryui
[07:47:13] <Krinkle> Single /job and /run should be quick
[07:47:26] <Krinkle> Is it affecting clients? (e.g. browserstack workers?
[07:47:37] <Krinkle> Aside from the sql errors caused by unknown problems in NGINX.
[07:47:54] <Krinkle> It's really annoying since it seems to be an unpredictable blackbox lately
[07:48:08] <Krinkle> a similar scale swarm at wikimedia is running fine (though using Apache instead of NGINX)
[07:48:14] <Krinkle> also a single box (vm even)
[07:50:05] <Krinkle> scott_gonzalez: checking run 1127253 now. Not sure why or how it got corrupted
[07:50:15] <Krinkle> happened once before a few months back, likely a concurrency issue
[07:53:23] <Krinkle> Hm.. concurrency issue indeed. Crap, that was supposed to be fixed.
[07:56:03] <Krinkle> scott_gonzalez: Fixed manually, thanks for reporting.
[07:56:08] <Krinkle> Will work on a permanent fix that prevents it later
[07:57:19] <scott_gonzalez> Thanks Krinkle.
[07:57:37] <scott_gonzalez> Krinkle: Corrupt run result #1125904
[07:58:52] <Krinkle> scott_gonzalez: Which url?
[07:59:09] <Krinkle> (fixed that one as well in the db, but there may be related ones)
[07:59:29] <scott_gonzalez> I'm just using http://swarm.jquery.org/user/jqueryui
[07:59:43] <scott_gonzalez> Now I'm getting Corrupt run result #1125872
[08:03:06] <Krinkle> Okay, I'm not fixing more by hand. Let it be for now. If you need a specific job, just follow the link from the Jenkins job console.
[08:03:13] <Krinkle> it outputs a link to /job/### which should work
[08:03:26] <Krinkle> (except for the job that failed)
[08:03:37] <Krinkle> since /user will fail if any of the subjobs has the corruptoin
[08:03:54] <Krinkle> So you can't use the overview now, grab the direct links from the Jenkins job.
[08:14:14] <Krinkle> scott_gonzalez: https://github.com/jquery/testswarm/issues/262
[08:14:14] <b-ot> Krinkle: Issue #262 by Krinkle (9s): CleanupAction failing half-way causing corrupt data sets.
[08:25:17] <Krinkle> FixRunresultCorruption                        ------------------------------------------------------------------------
[08:25:17] <Krinkle> Scanning...
[08:25:17] <Krinkle> Result #990692 ... Fixed!
[08:25:19] <Krinkle> ...
[08:25:21] <Krinkle> Result #1125846 ... Fixed!
[08:25:23] <Krinkle> ...
[08:25:25] <Krinkle> Found 2 instances of corrupted data.
[08:26:31] <Krinkle> scott_gonzalez: should be fine now, again. Though it is merely mopping the floor, there is a tap running somewhere that caused these few drops to get out in the first place.
[08:35:31] <Dave_Stein> scott_gonzalez: Hey guy, I don't see any mention of Autocomplete on the roadmap on the wiki.... are there any plans at all?
[08:35:58] <Dave_Stein> scott_gonzalez: I wrote an autocomplete that is horribly bloated over the years, before UI had one, and we are about to start on a better version. The UI one is too limiting for us but I don't want to reinvent the wheel.
[08:38:38] <Dave_Stein> scott_gonzalez: let me know what you think about more options.. or at least a way to choose the markup for LI. ( I need to put profile images in my user suggestions )
[08:48:33] <Dave_Stein> scott_gonzalez: If anything I can just override methods but ick
[09:17:08] <ngsilverman> hey Dave_Stein
[09:17:16] <ngsilverman> what do you think about the arguments given to the tolerance functions?
[09:26:07] <Dave_Stein> ngsilverman: What is it? ui edges and another one right?
[09:26:44] <ngsilverman> yeah, event
[09:26:52] <ngsilverman> that's what you use on droppable
[09:27:00] <ngsilverman> I'm using helper, item and pointerPosition on sortable
[09:27:24] <Dave_Stein> i made the signature from what i needed to get it to work at the time
[09:28:26] <Dave_Stein> i can check your pull request later ( i think ) and then see what you're doing to make sure it's better and/or handles eevrything
[09:28:39] <ngsilverman> ok, well it makes more sense in the context of sortables
[09:28:57] <ngsilverman> and you might be able to use the same for droppable
[09:30:39] <Dave_Stein> well comparing notes is always a good thing :)
[09:31:18] <ngsilverman> yeah, let me know what you think when you get around to it ;)
[09:41:20] <scott_gonzalez> Dave_Stein: Autocomplete will never be on the roadmap again because it's released.
[09:41:32] <scott_gonzalez> There's nothing "ick" about overriding methods.
[09:41:38] <scott_gonzalez> Why is everyone so afraid of OO?
[09:42:38] <scott_gonzalez> Dave_Stein: BTW, I have yet to hear someone say "The UI one is too limiting" and be correct.
[10:28:58] <jquicommit> 01[13download.jqueryui.com01] 15rxaviers pushed 4 new commits to 06master: 02http://git.io/Y61FJA
[10:28:58] <jquicommit> 13download.jqueryui.com/06master 1462aa4de 15Rafael Xavier de Souza: Move download#create action from server into frontend.download
[10:28:58] <jquicommit> 13download.jqueryui.com/06master 146037bee 15Rafael Xavier de Souza: Clean up frontend.download.create code...
[10:28:58] <jquicommit> 13download.jqueryui.com/06master 142fc19de 15Rafael Xavier de Souza: Scope other-than-theme CSS support on Builder. Fixes #87...
[10:39:42] <Dave_Stein> scott_gonzalez: I have no problem overriding but it seems strange to need to override an undocumented function for the average user
[10:40:02] <scott_gonzalez> It's only undocumented because we don't have a good way to document it yet.
[10:41:48] <Dave_Stein> so is the future route "stop being babies and learn some real JS to get extra features for your use case" Which is actually fine by me cause people rely way too much on jquery as is and dont know any real JS
[10:42:11] <scott_gonzalez> Yes, but it's not future, it's what we've been doing for at least a year.
[10:42:47] <Dave_Stein> semantics ;) Yeah hence all the API cutting and whatnot. It's definitely good move. 
[10:42:49] <scott_gonzalez> It's probably been like 2 years.
[10:44:11] <doesallmagic> Project download.jqueryui.com build #131: STILL FAILING in 1 min 58 sec: http://swarm.jquery.org:8080/job/download.jqueryui.com/131/
[10:44:12] <doesallmagic> * rxaviers: Move download#create action from server into frontend.download
[10:44:12] <doesallmagic> * rxaviers: Clean up frontend.download.create code
[10:44:13] <doesallmagic> * rxaviers: Scope other-than-theme CSS support on Builder. Fixes #87
[10:44:13] <doesallmagic> * rxaviers: Inline extend options with its default values
[10:50:43] <scott_gonzalez> ngsilverman is schooling me in how to use jQuery o_O
[10:51:07] <Dave_Stein> haha how so
[10:51:37] <scott_gonzalez> https://github.com/jquery/jquery-ui/commit/436ddbdd81bc62035ae004cb38dcbda53cf3891e
[10:51:38] <b-ot> scott_gonzalez: Dave Stein (1d 1h ago): Draggable: Changed "is" to "closest" for isValidTarget
[10:52:20] <ngsilverman> scott_gonzalez: hehe ;-) I also happen to have a question
[10:52:37] <ngsilverman> do we really want the fit tolerance option for sortable?
[10:53:01] <ngsilverman> because that leads to really weird behavior on a simple list, there's pretty much always contact with one element or another
[10:53:07] <ngsilverman> so it jumps up and down
[10:53:18] <ngsilverman> eerrr
[10:53:21] <ngsilverman> not fit, touch, sorry
[10:53:43] <scott_gonzalez> Yeah, touch is probably strange.
[10:53:50] <ngsilverman> as a matter of fact do we want fit too? on the wiki it looks like a copy paste from droppable
[10:53:58] <ngsilverman> fit makes less sense with sortable
[10:54:06] <Dave_Stein> ah yes it was sorry... probably no "fit" on sortable
[10:54:08] <Dave_Stein> that's just wacky
[10:54:23] <Dave_Stein> touch makes sense in sortable tho
[10:54:36] <Dave_Stein> when the sorts are large and spaced apart
[10:54:57] <ngsilverman> yeah, but it looks broken in most cases
[10:55:26] <Dave_Stein> what's the default again?
[10:55:30] <ngsilverman> intersect
[10:55:46] <ngsilverman> half of the draggable element must overlap the droppable element horizontally and vertically
[10:56:01] <scott_gonzalez> Ok, so we probably don't want to share tolerance across plugins :-)
[10:56:10] <Dave_Stein> correct
[10:56:14] <scott_gonzalez> For sortable, intersect should probably be 50% in one direction.
[10:56:54] <ngsilverman> you think? it means you could intersect with only a tiny part of the element actually intersecting
[10:56:58] <scott_gonzalez> Hmm...does that get strange with floats?
[10:57:11] <Dave_Stein> There's a bug today with intersect on sortables that go both X and Y... if you go over halfway it doesn't care until I move a pixel vertically for some reason
[10:57:58] <ngsilverman> that's because... the way the current sortable decides whether to put the placeholder over or under is based on the direction of the drag
[10:58:00] <scott_gonzalez> We should look at other sortable implementations.
[10:58:25] <ngsilverman> don't you guys like my 50% surface overlap?
[10:58:25] <Dave_Stein> i strongly agree :)
[10:58:49] <ngsilverman> if half the surface of the helper is over the item, in any direction, intersect
[10:59:26] <Dave_Stein> I feel like that's something we'd need to play with in browser to be sure of
[10:59:34] <Dave_Stein> trying to think if that makes sense if it's a long rectangle 
[10:59:48] <ngsilverman> or we could do 25%
[11:00:12] <scott_gonzalez> I actually like just using pointer :-P
[11:00:36] <ngsilverman> except what if you're using a handle that's outside the element
[11:00:50] <ngsilverman> :p
[11:01:07] <scott_gonzalez> Check out http://tool-man.org/ToolManDHTML/sorting.html
[11:01:15] <scott_gonzalez> I'm not sure exactly what it's doing.
[11:01:22] <scott_gonzalez> But it's using the pointer, not the element.
[11:01:35] <scott_gonzalez> And yet it still handles being outside the list in a sane way.
[11:02:03] <ngsilverman> probably only takes into account the vertical position of the pointer
[11:02:17] <Dave_Stein> rewind a second though - are we killing touch on sortable for sure?
[11:02:40] <scott_gonzalez> ngsilverman: Check out the "Sorting in two dimensions" example.
[11:03:00] <Dave_Stein> He is only taking into accoutn the position of the pointer it looks like
[11:03:13] <Dave_Stein> the instant my mouse touches another block, it swaps
[11:03:25] <Dave_Stein> that's the "easiest" intersect mode
[11:03:25] <scott_gonzalez> I think that using pointer exclusively isn't a bad idea for sorting.
[11:03:34] <scott_gonzalez> Dave_Stein: It's not exactly easy.
[11:03:39] <scott_gonzalez> It's not pure intersection.
[11:03:51] <Dave_Stein> that's why it was in quotes :)
[11:04:17] <ngsilverman> that's neat but it still wouldn't work if we were using a handle positionned outside the sortable element
[11:04:43] <ngsilverman> because your mouse wouldn't necessarily be in the same axis as the element
[11:04:57] <ngsilverman> although... you could calculate that
[11:04:59] <Dave_Stein> what's the use-case for having a handle outside the element?
[11:05:12] <Dave_Stein> that seems bizarre
[11:05:24] <Dave_Stein> i can't think of an interface i've ever used that's like that
[11:05:42] <Dave_Stein> "TODO: Example: Sorting within nested lists" ha - the least good part of sortable
[11:09:00] <ngsilverman> Dave_Stein: I had a sortable once where I needed the handled to be positionned slightly outside
[11:09:04] <ngsilverman> because I had content in my element
[11:09:30] <ngsilverman> and there was no other way
[11:10:44] <Dave_Stein> that seems odd... like why wouldnt the handle be in the element and then css would make it look outside so it wasnt overlapping the content?
[11:11:19] <ngsilverman> I had to use the same markup for different templates
[11:11:34] <ngsilverman> on some templates, I had to place the handle outside
[11:11:42] <ngsilverman> it's a very marginal use case, I'll give you that
[11:11:58] <ngsilverman> regardless I think it makes sense to have a tolerance option different than pointer
[11:12:22] <Dave_Stein> well i use intersect all over the place personally so it's biased agreement there ;)
[11:12:22] <ngsilverman> because you can grab an element from the very edge, and then expect to be able to sort when most of the element overlaps but your pointer doesn't happen to
[11:13:28] <Dave_Stein> hm i might be lying i am testing my app and it's using pointer.... i just didn't notice cause apparently that weird bug of needing to move a vertical pixel somehow impacts pointer tolerance too
[11:15:54] <ngsilverman> do we agree not to implement touch and fit on sortables then?
[11:16:18] <scott_gonzalez> I agree with that.
[11:16:26] <Dave_Stein> yeah i can agree on that
[11:16:32] <Dave_Stein> im actually just looking at my website and noticing more bugs than i had
[11:16:41] <Dave_Stein> I apparently AM using intersect but it will sort on pointer
[11:16:51] <Dave_Stein> i can't find the word pointer anywhere which would make it be that tolerance
[11:17:31] <ngsilverman> eh yeah, the current code always checks for pointer
[11:17:44] <ngsilverman> if your tolerance is pointer, it checks for pointer
[11:17:50] <Dave_Stein> $('#action-step-noduedate-list').sortable('option','tolerance')
[11:17:50] <Dave_Stein> "intersect"
[11:17:54] <ngsilverman> if it's intersect, it checks for pointer and intersect
[11:17:58] <Dave_Stein> yet it's working even without intersect
[11:18:10] <Dave_Stein> it's only caring about pointer
[11:18:14] <Dave_Stein> can't wait for 2.0! :D
[11:18:53] <ngsilverman> https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.sortable.js#L360-363
[11:18:58] <rxaviers> gnarf, hi corey. I just checked and I have root access to swarm.jquery.org. May I install imagemagick_6.8.1-10-1_amd64.deb there?
[11:18:59] <ngsilverman> that's regardless of your option
[11:19:09] <rxaviers> it's x86_64
[11:19:31] <Dave_Stein> doesn't that make it seem it wont sort if you intersect and the pointer is off?
[11:19:36] <Dave_Stein> but youd still check for 50%?
[11:19:58] <ngsilverman> that's exactly what it does
[11:20:12] <ngsilverman> that's not my code
[11:20:14] <Dave_Stein> i'm certainly not over 50% an d this thing is sorting
[11:20:23] <Dave_Stein> very strangwe
[11:21:28] <ngsilverman> that file is the reason I'm here helping with the rewrite :p
[11:21:56] <Dave_Stein> me too 
[11:22:01] <Dave_Stein> you arrived at perfect time
[11:22:09] <Dave_Stein> just as i finished drag and drop ha
[11:22:36] <Dave_Stein> anyway let's forget my confusion with this bug in my current app.... we're gonna have intersect and pointer still right?
[11:23:02] <Dave_Stein> which are the originals... i forgot touch isn't even part of sortable today
[11:23:07] <ngsilverman> yeah I think they're both necessary
[11:23:09] <Dave_Stein> i think i got confused by testing my site
[11:23:13] <Dave_Stein> :P
[11:23:20] <ngsilverman> although we could discuss the way intersect works specifically
[11:25:41] <Dave_Stein> well for now if you just get pointer working on "all" the cases that's already magic
[11:26:08] <Dave_Stein> to see all behaviors work properly when we deem something is "intersected"
[11:26:12] <Dave_Stein> tolerated.. or whatever
[11:26:32] <Dave_Stein> the biggest challenge is gonna be nested I think, which is a nightmare
[11:27:14] <gnarf> rxaviers: sure, though getting it into puppet would be best yeah?
[11:27:18] <gnarf> do it by hand for now
[11:27:43] <rxaviers> yeap. Doing it now, so I dont get failures there for now :)
[11:41:22] <doesallmagic> Yippie, build fixed!
[11:41:22] <doesallmagic> Project download.jqueryui.com build #132: FIXED in 3 min 43 sec: http://swarm.jquery.org:8080/job/download.jqueryui.com/132/
[11:41:23] <doesallmagic> rxaviers: Include test/*js on lint check
[11:47:20] <jquicommit> 01[13download.jqueryui.com01] 15rxaviers created 06f103 (+1 new commit): 02http://git.io/Sbhvmw
[11:47:20] <jquicommit> 13download.jqueryui.com/06f103 145071b99 15Rafael Xavier de Souza: dd grunt-check-modules
[12:10:45] <jquicommit> [13jquery-ui] 15scottgonzalez opened pull request #921: Combobox Refactor (06master...06combobox)  02http://git.io/Qz6mpQ
[12:11:00] <scott_gonzalez> jzaefferer: ^
[12:22:20] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/Hp7hPA
[12:22:20] <jquicommit> 13jquery-ui/06master 1410ca483 15Christian Wenz: Datepicker: Updated German locale. Fixes #9098 - Datepicker German localization - make casing of previous/next/today consistent.
[12:38:33] <doesallmagic> Project jQuery UI build #971: STILL FAILING in 16 min: http://swarm.jquery.org:8080/job/jQuery%20UI/971/
[12:38:34] <doesallmagic> Scott González: Datepicker: Updated German locale. Fixes #9098 - Datepicker German localization - make casing of previous/next/today consistent.
[12:50:54] <tj_vantoll> scott_gonzalez I'll copy the descriptions for now and let someone else tackle the automation at a later date.  I can take a stab at improving some of the descriptions.  I'll see if inspiration strikes me.
[12:51:14] <scott_gonzalez> sounds good
[13:07:44] <ngsilverman> Dave_Stein: I think there's a problem with your implementation of intersect
[13:08:13] <ngsilverman> when the droppable is bigger than the draggable
[13:11:37] <ngsilverman> wait, I might be making this up
[13:13:23] <scott_gonzalez> Heh, Twitter just released an autocomplete widget.
[13:13:53] <scott_gonzalez> https://github.com/twitter/typeahead.js
[13:14:18] <scott_gonzalez> "At the time Twitter was looking to implement a typeahead, there wasn't a solution that allowed for prefetching data, searching that data on the client, and then falling back to the server."
[13:14:40] <ngsilverman> yeah, my bad
[13:14:54] <scott_gonzalez> At the time Twitter was existence, there was no project we ever planned on collaborating with.
[13:15:23] <scott_gonzalez> This is actually a pretty large implementation.
[13:15:44] <scott_gonzalez> With a quick run through http://closure-compiler.appspot.com/home I'm getting 5.51 KB.
[13:15:59] <scott_gonzalez> Seems big for something coming out of Twitter.
[13:55:16] <ngsilverman> scott_gonzalez, Dave_Stein: there's an issue that's well illustrated when one sortable item is bigger than the others
[13:55:33] <ngsilverman> because when you sort over it, you have to decide whether to put the placeholder above or below
[13:55:44] <ngsilverman> which is tricky
[13:57:36] <ngsilverman> in the "old" lib it relies on the drag direction, so if you're dragging down the placeholder goes below and vice-versa
[13:59:06] <ngsilverman> but that causes an issue when you're sorting and you come into the container from above or below
[13:59:36] <ngsilverman> another solution might be to look at whether we're in the top or bottom half of the items
[14:00:48] <ngsilverman> but that might not be the most user friendly because you'd have to go halfway across a big element to sort
[14:01:06] <ngsilverman> thoughts?
[14:31:15] <Dave_Stein> ngsilverman: hold on let me think :)
[14:32:24] <Dave_Stein> after my coworker finishes talking to me
[14:41:10] <Dave_Stein> ngsilverman: Is there a fiddle to look at with problem?
[14:45:46] <ngsilverman> Dave_Stein: I'll create a couple fiddles tomorrow, going to bed now ;)
[14:45:56] <Dave_Stein> where are you based?
[14:45:59] <Dave_Stein> im about to leave work :)
[14:48:01] <ngsilverman> france!
[14:48:08] <ngsilverman> it's nearly midnight here
[14:48:16] <Dave_Stein> ah
[14:48:31] <Dave_Stein> je peut parler francais
[14:48:33] <Dave_Stein> or at least a bit
[14:48:37] <ngsilverman> haha, nice
[14:48:44] <Dave_Stein> using rosetta... and i was there this summer
[14:48:46] <Dave_Stein> good night
[14:48:51] <ngsilverman> 'night ;)
[14:48:55] <gnarf> ngsilverman: above or below an item
[14:49:09] <gnarf> is it over the top half or bottom half of the item?
[14:49:45] <ngsilverman> gnarf: sorry what's the question?
[14:50:09] <gnarf> you were asking about how to determine if an item is getting added before or after a larger item in the sort right?
[14:50:22] <ngsilverman> yes
[14:50:31] <gnarf> i was saying, why not use the midpoint of the item itself
[14:50:48] <gnarf> before if > height/2 or after if < height/2 
[14:50:58] <ngsilverman> 'cause you'd have to go halfway across the item
[14:51:18] <Dave_Stein> which is a good point... sometimes draggables are pretty big :)
[14:51:41] <Dave_Stein> anyway g2g meeting somewhere
[14:51:46] <gnarf> and besides, the placeholder will fuck that plan up nicely, yeah?
[14:52:03] <gnarf> thats a stickly issue
[14:52:18] <ngsilverman> that would work, the halfway across approach
[14:52:37] <ngsilverman> but it's not very user friendly imo
[14:53:57] <gnarf> im trying to think of a system ui i can test
[14:54:00] <gnarf> to see how it handles it
[14:54:01] <gnarf> but like
[14:54:09] <gnarf> all the ones i can think of actually sort the elements
[14:54:17] <gnarf> like copying files around in finder
[14:54:19] <gnarf> or something
[14:54:39] <gnarf> so many things we look at how other interfaces handle it
[14:55:02] <gnarf> might be good to find some actual examples of sortable lists like these and see how they do it
[14:55:10] <gnarf> like maybe photoshop's layers list?
[14:55:12] <gnarf> if someone has it
[14:55:24] <ngsilverman> ah, good idea, let me fire up photoshop
[14:56:25] <ngsilverman> ok so what they do is they highlight the space between items
[14:57:16] <ngsilverman> photoshop is actually not a good example, because all the layer items are the same size
[14:57:31] <ngsilverman> there's no issue when items are the same size
[14:57:54] <ngsilverman> let's see, if I had some options to a layer...
[14:59:50] <ngsilverman> ok, so, when your cursor gets close to an in-between items, they highlight the in-between and that's when you can sort
[15:01:01] <ngsilverman> they seem to use the halfway point
[15:01:53] <ngsilverman> yep, they're using the halfway point
[15:03:32] <ngsilverman> I guess I'll give it a try then
[15:32:04] <scott_gonzalez> All these problems go away if you use pointer, right?
