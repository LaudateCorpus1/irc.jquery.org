[00:36:20] <jq-jenkins> Project jQuery Mobile Latest build #591: SUCCESS in 4 min 36 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/591/
[01:36:09] <jq-jenkins> Project jQuery Mobile Latest build #592: SUCCESS in 4 min 24 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/592/
[02:36:01] <jq-jenkins> Project jQuery Mobile Latest build #593: SUCCESS in 4 min 16 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/593/
[03:16:08] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/v7W_Mw
[03:16:08] <jquicommit> [jquery-ui/master] Resizable: Update aspectRatio to use calculated aspectRatio in case of: containment - parent; aspectRatio - true. Fixes #8158 - Resizable: aspectRatio: true isn't handled properly. - gromo
[03:16:56] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/0t_A-Q
[03:16:56] <jquicommit> [jquery-ui/1-8-stable] Resizable: Update aspectRatio to use calculated aspectRatio in case of: containment - parent; aspectRatio - true. Fixes #8158 - Resizable: aspectRatio: true isn't handled properly. - gromo
[03:17:16] <jq-jenkins> Project jQuery UI build #276: STILL FAILING in 50 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/276/
[03:17:17] <jq-jenkins> Scott González: Resizable: Update aspectRatio to use calculated aspectRatio in case of: containment - parent; aspectRatio - true. Fixes #8158 - Resizable: aspectRatio: true isn't handled properly.
[03:37:03] <jq-jenkins> Project jQuery Mobile Latest build #594: SUCCESS in 5 min 18 sec: http://swarm.jquery.org:8080/job/jQuery%20Mobile%20Latest/594/
[04:32:42] <kborchers> anyone know why jq-jenkins is telling us about mobile's builds? is he just rubbing the successes in our faces? :P
[04:37:38] <kborchers> jzaefferer: just read back in mobile and saw you fixed it :) ^^
[05:18:28] <jzaefferer> kborchers: its not even running any tests as part of that build
[05:18:45] <kborchers> awesome :/
[07:04:06] <scott_gonzalez> jzaefferer: 5 minutes to run 0 tests?
[07:16:31] <jzaefferer> scott_gonzalez: what?
[07:16:51] <jzaefferer> oh, yeah, concat, minify, deploy
[07:17:01] <scott_gonzalez> oh
[07:17:01] <jzaefferer> I think deploy takes several minutes
[07:17:04] <jzaefferer> no idea what its doing
[07:45:34] <jquicommit> [jquery-ui] jzaefferer created grunt (+1 new commit): http://git.io/k0_BRg
[07:45:34] <jquicommit> [jquery-ui/grunt] First iteration on grunt-based build. lint, qunit, concat, min and zip all work, but all have various limiations. - Jörn Zaefferer
[07:45:58] <jzaefferer> scott_gonzalez gnarf: ^^^ far from done, but a few things actually work
[07:46:19] <scott_gonzalez> nice :-)
[07:46:26] <jzaefferer> don't bother running it, requires grunt from master and a patched version of zipstream...
[07:46:44] <scott_gonzalez> heh, ok
[07:46:50] <jzaefferer> hoping to get an update on the latter issue next week, if not, I need to try another zip module again
[07:48:00] <scott_gonzalez> We could switch to tar :-P
[07:48:12] <jzaefferer> yeah, right
[07:48:16] <jzaefferer> at least node-tar would work
[07:48:25] <jzaefferer> but then windows people usually don't know how to untar
[07:48:27] <scott_gonzalez> Yup, that's my thought.
[07:49:01] <jzaefferer> while waiting for some feedback from Ben, I could start with the concat header
[07:49:20] <jzaefferer> here we just want a list of all files included, right?
[07:49:29] <scott_gonzalez> Yup.
[07:49:48] <scott_gonzalez> We probably want a full header and then rip out the header from the individual files.
[07:50:07] <scott_gonzalez> Core has a custom min header too, right?
[07:51:21] <jzaefferer> Yeah, and that's already part of this build thingie :-)
[07:53:38] <jzaefferer> Got this now:
[07:53:45] <jzaefferer> *gisting*
[07:53:58] <jzaefferer> https://gist.github.com/bf67f76baa630d571e35
[08:10:02] <jzaefferer> scott_gonzalez: https://gist.github.com/bf67f76baa630d571e35
[08:11:47] <scott_gonzalez> looks good
[08:12:07] <jquicommit> [jquery-ui] jzaefferer pushed 1 new commit to grunt: http://git.io/9pA50w
[08:12:07] <jquicommit> [jquery-ui/grunt] Add list of included files to min banner - Jörn Zaefferer
[08:12:09] <scott_gonzalez> Might want to switch the date formatting.
[08:12:18] <scott_gonzalez> 2012-03--02
[08:13:23] <jzaefferer> yeah
[08:13:33] <jzaefferer> once I figure out what this does: template.today("yyyy")
[08:18:40] <jzaefferer> looking at the right line helps
[08:20:03] <jquicommit> [jquery-ui] jzaefferer pushed 1 new commit to grunt: http://git.io/DhF8Yg
[08:20:03] <jquicommit> [jquery-ui/grunt] Use isoDate format for min banner - Jörn Zaefferer
[08:20:36] <jzaefferer> that wasn't so hard
[08:29:04] <jzaefferer> scott_gonzalez: this is the only relevant ui.build ticket I can find: http://bugs.jqueryui.com/ticket/8006 am I missing something? The closure compiler advanced mode and "work on windows" tickets don't matter, there are no untriaged tickets for ui.build
[08:29:33] <jzaefferer> not that I'm anywhere near the current build, but want to tackle tasks our current system doesn't even cover to make sure its feasible
[08:29:58] <scott_gonzalez> So you're looking for features that we want to add?
[08:40:17] <jzaefferer> scott_gonzalez: Yes!
[08:40:24] <jzaefferer> I feel like we had some more ideas
[08:41:48] <scott_gonzalez> We talked about the ability to list a set of components and do a custom build with dependency management.
[08:42:06] <scott_gonzalez> whitespace/BOM checking
[08:42:07] <scott_gonzalez> jsline
[08:42:12] <scott_gonzalez> *lint
[08:42:56] <scott_gonzalez> Oh, I mentioned HTML linting at my local JS meetup. A few people said they *might* be interested in creating the wrapper around validator.nu.
