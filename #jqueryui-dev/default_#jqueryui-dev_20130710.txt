[04:00:43] <_|Nix|_> arschmitz: Ping!
[04:40:26] <jzaefferer> arschmitz: regarding https://github.com/jquery/jquery-mobile/pull/6145 - where can I find some background on that? I wonder about the filter feature in listview, which seems to overlap with this
[04:40:27] <b-ot> jzaefferer: Pull request #6145 by frequent (14h 17m ago): filter widget - first commit
[04:41:03] <frequent> jzaefferer: the filter widget was meant as a replacement of the listview filter extension
[04:41:29] <frequent> generic filter for listview, tables, buttongroups, select options, etc
[04:42:29] <jzaefferer> frequent: okay, but since this isn't removing any code in listview, what's the next step?
[04:42:48] <jzaefferer> seems like replacing an existing extension would be a good way to prove that it actually works
[04:43:03] <frequent> true.
[04:43:41] <frequent> I will remove the listview.filter files later today and commit. 
[04:46:55] <agcolom_> uGoMobi: Hi :-) which version of jQuery should we recommend to work with mobile 1.3.1? (is it 1.10.0 or 1.10.1?) I want to update the footer of the docs and make sure all the docs and examples use the correct versions...
[04:50:21] <uGoMobi> agcolom_: 1.3.1 doesn't support 1.10
[04:50:43] <uGoMobi> agcolom_: 1.9.x is the recommended version
[04:50:57] <uGoMobi> agcolom_: also.. hi :)
[04:51:11] <agcolom_> oh, I that's what I had but the examples got changed to 1.10... 
[04:51:18] <agcolom_> I'll check...
[04:59:58] <agcolom_> uGoMobi: yep... here's the commit... https://github.com/jquery/api.jquerymobile.com/commit/387ea23a4f465ceeb92a89350184b5d12507a258
[05:01:00] <agcolom_> and https://github.com/jquery/api.jquerymobile.com/commit/887d039381a7aa178c1c39dc071eba40ae05a8d1
[05:01:03] <uGoMobi> agcolom_: hmm, that should have been committed to the 1.4 branch
[05:01:06] <agcolom_> do we need to revert that?
[05:02:15] <uGoMobi> agcolom_: I don't expect big problems but when we released 1.3.1 core 1.10 wasn't released yet so we never tested
[05:02:56] <agcolom_> right... 
[05:03:00] <uGoMobi> agcolom_: I still don't see the big picture of how we handle different versions in the API docs
[05:03:08] <uGoMobi> we have a 1.4 branch
[05:03:11] <agcolom_> going to lunch.... will be back later....
[05:03:26] <agcolom_> yes, but that was done in master I think
[05:03:28] <uGoMobi> agcolom_:  ok, let's talk about this later
[05:03:35] <uGoMobi> agcolom_: yes
[05:03:59] <uGoMobi> enjoy your lunch
[05:04:13] <agcolom_> thanks :-)
[05:07:52] <frequent> uGoMobi: hey
[05:08:00] <uGoMobi> hey frequent 
[05:08:12] <frequent> test files get lint-ed,too?
[05:08:39] <uGoMobi> frequent: not sure, but I don't think so
[05:08:59] <frequent> ok. I will just quickly run it through later.
[05:14:33] <arschmitz> uGoMobi: _|Nix|_: frequent: Morning
[05:14:46] <uGoMobi> morning arschmitz 
[05:15:01] <frequent> arschmitz: morning
[05:15:39] <arschmitz> uGoMobi: i bought most of the phones we still needed last night
[05:15:55] <uGoMobi> arschmitz: awesome!
[05:25:22] <jquicommit> [13download.jqueryui.com] 15rxaviers closed issue #151: Support jQuery UI 1.11  02http://git.io/jHQKMw
[05:30:34] <_|Nix|_> arschmitz: Hey!
[05:30:59] <_|Nix|_> arschmitz: I want to add a method to the base class: _toggleClasses: function( destination, varNameForOldClasses, newClasses )
[05:31:27] <_|Nix|_> arschmitz: It basically replaces the old classes with the new classes on @destination and updates this[ varNameForOldClasses ].
[05:31:32] <arschmitz> _|Nix|_: whats the value of just doing .toggleClass?
[05:32:13] <_|Nix|_> arschmitz: You can't toggleClass, because we're talking about two (potentially) different sets of classes.
[05:33:03] <_|Nix|_> arschmitz: ... and if you were to toggleClass for each class individually, you'd be causing a lot of reflows.
[05:34:04] <_|Nix|_> arschmitz: We do this a lot: https://gist.github.com/gabrielschulhof/5965921
[05:34:44] <_|Nix|_> arschmitz: We build up a list of classes with, like, classes = ""; if (something ) classes += " some-class"; if ( somethingElse ) classes += " some-other-class"; ... someElement.addClass( classes );
[05:35:28] <_|Nix|_> arschmitz: So, as I switch to on-the-fly options, this process needs to be repeated every time an option that serves as the check in one of these if-statements changes.
[05:35:44] <_|Nix|_> arschmitz: However, to do it a second time you need to first remove the prior classes.
[05:36:01] <_|Nix|_> arschmitz: Thus, you need to store them in an instance-level variable so you know which classes you added last time.
[05:36:29] <_|Nix|_> arschmitz: I do this in popup as well, but I do it very awkwardly - I search the "class" attribute.
[05:36:48] <arschmitz> _|Nix|_: arnt most of the classes associated with options?
[05:37:05] <arschmitz> like on a 1:1 ration class - option?
[05:37:09] <arschmitz> ratio
[05:37:10] <_|Nix|_> arschmitz: Not always.
[05:37:33] <arschmitz> execpt theme of course
[05:37:37] <_|Nix|_> arschmitz: For example,if (  o.inset && o.corners ) { classes += " ui-corner-all"; }
[05:37:57] <_|Nix|_> arschmitz: A collapsible that's not inset must not have ui-corner-all.
[05:38:12] <arschmitz> ok
[05:38:41] <_|Nix|_> arschmitz: So, basically, I compute a new classes string in _setOptions everytime.
[05:39:45] <arschmitz> _|Nix|_: ok the other option is to handle classes individually on option set which honestly im not that worried about reflow on setOptions as its not something that will happen often or in a loop
[05:40:22] <_|Nix|_> arschmitz: It will happen during startup if we call _setOptions during _create.
[05:40:38] <arschmitz> _|Nix|_: yeah iv been questioning if thats really a good idea though
[05:40:39] <_|Nix|_> arschmitz: ... and it will affect responsiveness.
[05:41:31] <arschmitz> i think generally its not needed to call set options these should be handled in enhance really as part of building the objects before they are inserted into dom
[05:41:37] <_|Nix|_> *sigh* ... if only we had DOM transactions ... I saw a spec about that ...
[05:41:45] <arschmitz> yeah
[05:42:19] <_|Nix|_> arschmitz: ... right. The tradeoff is that you then repeat the code in setOptions.
[05:42:23] <arschmitz> _|Nix|_: im not saying _toggleClass is a good idea i guess i would just want to see an implementation and usecase where it shows a clear advantage :)
[05:42:34] <arschmitz> i mean im not saying its a bad idea
[05:43:21] * _|Nix|_ is checking if he's already pushed the part of the collapsible-widget-review that uses toggleClass
[05:45:40] <_|Nix|_> arschmitz: https://github.com/jquery/jquery-mobile/commit/17d7b7733de2ab46f85ea87f57440ee3eedc5fa9#L0L40 and the new _setOptions at https://github.com/jquery/jquery-mobile/commit/17d7b7733de2ab46f85ea87f57440ee3eedc5fa9#L0R173
[05:46:59] <_|Nix|_> arschmitz: Basically: collapsible has three different sets of classes: One for the anchor, one for the heading, and one for the contents. Each one is affected by various options. Well, I guess contents is only affected by contentTheme, but the other two need that assembly process.
[05:50:02] <arschmitz> _|Nix|_: ok so you pass this an element, an instance variable containing a class string, and a new class string?
[05:50:33] <_|Nix|_> arschmitz: Yep.
[05:52:00] <agcolom_> scott_gonzalez: if you replied to me today, i won't see it until I get home. the firewall was supposed to be opened for me to get access to the znc server, but I'm still unable to connect from work... 
[05:53:16] <agcolom_> uGoMobi: scott_gonzalez can explain that... 
[05:53:42] <scott_gonzalez> explain what?
[05:53:47] <uGoMobi> agcolom_: ok will check with scott_gonzalez 
[05:54:01] <agcolom_> the versions of the api docs
[05:54:05] <uGoMobi> scott_gonzalez: documentation of different versions
[05:54:16] <scott_gonzalez> Oh, it's easy :-)
[05:54:22] <uGoMobi> we have a 1.4 branch
[05:54:34] <scott_gonzalez> Yup, so that branch should only contain 1.4 docs.
[05:54:54] <uGoMobi> okay so we should never merge master in it
[05:54:59] <agcolom_> and master only 1.3 docs for now? 
[05:55:04] <scott_gonzalez> yup
[05:55:05] <uGoMobi> if you fix a typo you have to cherry-pick
[05:55:24] <scott_gonzalez> Right.
[05:55:42] <uGoMobi> ok clear
[05:56:36] <scott_gonzalez> And you can test locally by just deploying the branch to local.api.jquerymobile.com
[05:56:59] <uGoMobi> ah ok
[05:57:40] <uGoMobi> agcolom_: since master will be 1.3 docs forever I think we should revert the change to core 1.10
[05:57:46] <uGoMobi> and commit it to the 1.4 branch
[05:58:45] <_|Nix|_> What ?! master will be 1.3 docs forever? Seriously?
[05:58:52] <scott_gonzalez> No.
[05:58:56] <uGoMobi> huh
[05:59:02] <agcolom_> for now only
[05:59:09] <agcolom_> until we move to 1.4
[05:59:14] <agcolom_> ?
[05:59:20] <uGoMobi> then we make a 1.3 branch?
[05:59:28] <scott_gonzalez> When 1.4 is released, the 1-4 branch will become master.
[05:59:55] <agcolom_> I'm glad I understood that right :-)
[06:00:13] <uGoMobi> where can people find API docs of previous versions?
[06:00:15] <scott_gonzalez> I think for UI we actually just rebased our future branches.
[06:00:31] <scott_gonzalez> api.jquerymobile.com/1.3 (but not until 1.4 is released)
[06:00:36] <agcolom_> there will be a link for other doc versions
[06:00:43] <scott_gonzalez> Just go look at api.jqueryui.com.
[06:01:04] <agcolom_> (bottom left menu)
[06:01:07] <uGoMobi> perfect
[06:01:53] <scott_gonzalez> There's one serious issue I need to fix before you release 1.4.
[06:02:11] <scott_gonzalez> It only causes a very small problem for UI.
[06:02:18] <scott_gonzalez> But it's going to cause serious problems for Mobile.
[06:02:33] <scott_gonzalez> Resources don't work properly on the sub-sites.
[06:03:27] <scott_gonzalez> agcolom_: I've passed you on the cleanup :-P
[06:03:32] <agcolom_> oh that is a problem... 
[06:03:40] <agcolom_> scott_gonzalez: Oh thatnks :-)
[06:03:43] <scott_gonzalez> It was quite obvious when I got to the first entry after you.
[06:04:27] <agcolom_> scott_gonzalez: do I get a certificate ;-)
[06:04:38] <scott_gonzalez> Heh, you get a very big THANK YOU.
[06:04:46] <agcolom_> do I just do a git pull --rebase ?
[06:05:02] <agcolom_> scott_gonzalez: that will do me :-)
[06:05:26] <scott_gonzalez> Yeah, if you have local commits that haven't been pushed.
[06:05:37] <scott_gonzalez> But if that's the case, you'll probably just get a conflict anyway.
[06:05:50] <scott_gonzalez> Actually, if that's the case, let me know and I'll just stop.
[06:06:19] <agcolom_> just on 2 files so I'll just do a checkout on those...
[06:06:54] <agcolom_> I was going to fix that spacing on 2 files, but you've done it now... :-)
[06:07:11] <agcolom_> so I checkout those 2 and just do a git pull?
[06:08:07] <scott_gonzalez> yeah
[06:08:25] <gseguin> mornin'
[06:08:36] <agcolom_> hey gseguin :-)
[06:08:38] <uGoMobi> morning gseguin 
[06:08:43] <gseguin> I pushed branch issue-2859 last night
[06:08:50] <uGoMobi> I saw that
[06:09:03] <uGoMobi> we need to discuss cherry-pick after review, right?
[06:09:05] <gseguin> with an attempt to fix the issue I've been telling you about
[06:09:17] <gseguin> now only navigation tests are failing
[06:09:34] <gseguin> which is much better and much more what I expected than before
[06:10:05] <gseguin> I need some eyes from you guys who know nav better than I do to help if you have time
[06:10:14] <arschmitz> gseguin: i can help
[06:10:21] <gseguin> arschmitz: http://pastebin.com/dEHebbxS
[06:10:23] <agcolom_> scott_gonzalez: so I'll study your changes, and then am I ok to carry on?
[06:10:28] <scott_gonzalez> yup
[06:10:35] <scott_gonzalez> I'll be pushing the updated commit in a minute.
[06:10:41] <scott_gonzalez> You might want to wait for that to pull.
[06:10:44] <scott_gonzalez> Because I'm going to force push.
[06:10:58] <gseguin> you're going to what? scott_gonzalez?
[06:11:04] <uGoMobi> lol
[06:11:18] <arschmitz> gseguin: cool im looking at something for _|Nix|_ right this sec but ill pull your branch and look at these tests after
[06:11:34] <scott_gonzalez> gseguin: It's a branch.
[06:11:36] <gseguin> awesome arschmitz! thank you
[06:12:26] <uGoMobi> gseguin: merging that branch will fix couple of query param issues, right?
[06:12:52] <uGoMobi> at least 2859 I suppose :)
[06:14:17] <uGoMobi> hmm 2859 is a closed ticket
[06:15:54] <uGoMobi> ha it's not, wrong repo :)
[06:16:59] <agcolom_> scott_gonzalez: oh yes, no rush :-)
[06:17:39] <agcolom_> will be doing some work (marking) in a minute... then will be back on this evening... 
[06:20:02] <scott_gonzalez> Showing 64 changed files with 902 additions and 801 deletions.
[06:20:13] <scott_gonzalez> Oy, that's a lot of cleanup.
[06:20:26] <scott_gonzalez> And that's only A-D on top of the cleanup you did.
[06:20:46] <scott_gonzalez> The full PR so far: Showing 71 changed files with 2,256 additions and 1,483 deletions.
[06:21:27] <scott_gonzalez> agcolom_: I'm done for now. You can pull whenever.
[06:21:57] <agcolom_> yes! and that's about 15% of the whole site
[06:22:19] <agcolom_> ok, will pull now, then I can do some on the train on my way home :-)
[06:25:44] <scott_gonzalez> Thanks :-)
[06:41:49] <gseguin> uGoMobi: yes it allows passing a querystring in the hash
[06:42:25] <uGoMobi> gseguin: great
[06:42:45] <uGoMobi> gseguin: the discussion was about whether to cherry-pick or not?
[06:43:00] <gseguin> yeah to 1.3-stable
[06:55:06] <arschmitz> _|Nix|_: you still around?
[06:56:15] <agcolom_> uGoMobi: gseguin arschmitz _|Nix|_ toddmparker : I have the possibility to get iOS 7 installed on an iPad 2 today or tomorrow, which I could then use for testing... would that be useful or do you have that installed somewhere already?
[06:56:48] <uGoMobi> agcolom_: oh nice!
[06:57:06] <uGoMobi> agcolom_: would be useful for sure
[06:57:17] <agcolom_> ok, will do that now :-)
[07:03:32] <_|Nix|_> arschmitz: I am.
[07:03:50] <_|Nix|_> arschmitz: Scrounging up a _destroy() for collapsible.
[07:07:09] <arschmitz> _|Nix|_: cool have a suggestion to speed up enhancement
[07:07:14] <arschmitz> on slow devices
[07:07:43] <arschmitz> http://jsperf.com/element-creation-replacewith
[07:08:30] <arschmitz> makes little difference on desktop but on android it makes a big difference
[07:10:08] <_|Nix|_> arschmitz: Right ... remove from DOM, make all manips, put it back. Yeah ...
[07:10:11] <_|Nix|_> arschmitz: Not bad.
[07:10:18] <arschmitz> yup
[07:10:40] <_|Nix|_> arschmitz: I was thinking, while we're at it, can we get the page enhanced before we attach it to the DOM?
[07:10:51] <arschmitz> _|Nix|_: would not make sense if you were putting it back in sameplace 
[07:10:51] <_|Nix|_> arschmitz: Imagine doing that even with the first page.
[07:10:56] <arschmitz> but because your moving it 
[07:11:38] <_|Nix|_> arschmitz: Well, it might still make sense. Two DOM manips might be waaay better than the myriad reflows caused by page enhancement.
[07:11:45] <arschmitz> _|Nix|_: yup
[07:11:56] <arschmitz> and actually brings up something i meant to talk to you about already
[07:12:23] <_|Nix|_> arschmitz: ... OTOH, the page is not visible while it's getting enhanced, because it does not have ui-page-active.
[07:12:39] <_|Nix|_> arschmitz: However, if it's visibility: hidden and not display: none, then it still causes reflows.
[07:12:42] <_|Nix|_> arschmitz: Need to check that.
[07:12:50] <arschmitz> i had an almost 2 hour call with scott_gonzalez the other day about autoinit
[07:12:55] <_|Nix|_> Right.
[07:13:09] <arschmitz> and we came up with a much more sane way to handle this
[07:13:17] <_|Nix|_> Do tell.
[07:13:53] <arschmitz> first we are going to make a default init selector
[07:14:05] <arschmitz> which will be data-role="widgetname"
[07:14:21] <arschmitz> this will be part of the widget prototype
[07:15:13] <arschmitz> so if you need something else you just override in your widget definition
[07:16:03] <arschmitz> this will be acomplished with something like https://gist.github.com/scottgonzalez/39173f8b5f52fe83c10f
[07:16:08] <arschmitz> Scott is going to make the change in the widgetfactory to make this work
[07:16:48] <arschmitz> this will also create an array of every widget thats loaded
[07:17:13] <arschmitz> then the page widget will enhance everything with in the page on create
[07:18:58] <_|Nix|_> ... based on the array of widgets. This is not that different from the registry.
[07:19:08] <scott_gonzalez> Right, it's the same concept.
[07:19:08] <_|Nix|_> The registry is the array of widgets plus some utility functions.
[07:19:08] <arschmitz> any widget that depends on another widget to be enhanced will just call that widget internally
[07:19:08] <scott_gonzalez> Just less code.
[07:19:08] <arschmitz> if it exists
[07:19:08] <scott_gonzalez> Importantly, widgets don't need to explicitly register.
[07:19:08] <arschmitz> ^^ exactly
[07:19:08] <arschmitz> also eliminates all the event binding
[07:19:15] <_|Nix|_> scott_gonzalez: The only reason I did the registry the way I did it is to not have to modify the widget factory.
[07:19:15] <scott_gonzalez> You should be able to take a 3rd party widget, drop it into your app, and have it just work.
[07:19:38] <arschmitz> _|Nix|_: for example this will make the file for tabs go away completely
[07:19:46] <arschmitz> ui tabs will just work when you include the file
[07:20:07] <arschmitz> and in theory any other widget 
[07:20:22] <scott_gonzalez> _|Nix|_: So there was a pattern of not modifying the widget factory already, with $.mobile.widget being it's own thing.
[07:20:34] <scott_gonzalez> But that was actually a bad road to go down (you didn't start it though).
[07:20:54] <scott_gonzalez> Because it split the community into Mobile code and non-Mobile code.
[07:21:08] <arschmitz> so now we are trying to unify everything basicly
[07:21:36] <_|Nix|_> OK, so correct me if I'm wrong: Controlgroup, which can have multiple different kinds of child widgets, will check whether any of them are in the array, and instantiate all widget types that it finds.
[07:21:49] <scott_gonzalez> no
[07:22:03] <scott_gonzalez> The controlgroup widget will be fully decoupled from the framework.
[07:22:32] <_|Nix|_> scott_gonzalez: Oh, so this code is still framework level?
[07:22:32] <scott_gonzalez> yes
[07:22:36] <_|Nix|_> scott_gonzalez: This array?
[07:22:39] <scott_gonzalez> yes
[07:22:47] <_|Nix|_> Oh, OK ...
[07:22:53] <arschmitz> yes every thing so far is frame work level
[07:23:45] <arschmitz> _|Nix|_: one of the big things this does to is there will be not more event binding for autoinit
[07:24:04] <arschmitz> we will have to support that for 1.4 but in 1.5 we will deprecate 
[07:24:11] <_|Nix|_> arschmitz: Currently there is exactly one event binding for autoinit. That of the widget registry.
[07:24:21] <_|Nix|_> arschmitz: ... and that's for backwards compat.
[07:24:34] <arschmitz> _|Nix|_: yes there will be none now and triggering create will not be supported
[07:25:04] <_|Nix|_> arschmitz: Ummm ... if it's a framework level thing, then why not add that support to the framework?
[07:25:26] <arschmitz> instead we will have a function that will enhance everything within a given element
[07:26:00] <scott_gonzalez> And that will be used by framework widgets, like page.
[07:26:00] <_|Nix|_> arschmitz: ... just like $.mobile._enhancer.enhance().
[07:26:06] <arschmitz> _|Nix|_: similar yes
[07:26:06] <_|Nix|_> scott_gonzalez: like the above function already is.
[07:26:09] <scott_gonzalez> Is there even any other widget beside page that cares about this?
[07:26:22] <arschmitz> no
[07:26:38] <_|Nix|_> arschmitz: No, but only because the registry takes care of enhancement order.
[07:27:00] <arschmitz> enhancment order wont matter
[07:27:09] <scott_gonzalez> Enhancement order will be document order.
[07:27:24] <arschmitz> because if a widget needs another widget to be enhanced it will do it itself internally
[07:27:29] <scott_gonzalez> If something else needs to happen, it's up to the individual widget to handle it.
[07:28:36] <scott_gonzalez> Gotta go, need to run an errand before the meeting.
[07:28:48] <_|Nix|_> scott_gonzalez: OK, in that case, open-ended widgets (meaning widgets that can contain more or less arbitrary children they need to enhance) will have to have an option called "possibleChildren" or something. Otherwise, the containment hierarchy is not configurable.
[07:29:09] <arschmitz> so controlgroup if it contains checkboxes and needs them enhanced to proceed it will check for the existance of the checkbox widget and if it exists call checkboxradio();
[07:29:33] <_|Nix|_> arschmitz: Yeah, it will basically do the same thing as $.mobile._enhancer.enhance().
[07:30:04] <_|Nix|_> arschmitz: ... and if I write some myMagicCheckbox() widget that works with controlgroup, then I have to tell the controlgroup to also enhance those.
[07:30:59] <arschmitz> thats a possibility but really i think if your writing a new widget to work with controlgroup then you need to extend controlgroup as well
[07:31:03] <_|Nix|_> arschmitz: Page has it easy, because it has access to that mythical array of widgets, but controlgroup does not. You need to modify /something/ about it to get it to also search for your new and awesome widget.
[07:31:19] <_|Nix|_> arschmitz: No! That's terrible!
[07:31:44] <arschmitz> why controlgroup is documented as working with buttons checkboxradio and select thats it
[07:31:55] <arschmitz> we dont say it will work with new magical widgets
[07:32:25] <_|Nix|_> True. And now it never will.
[07:32:43] <arschmitz> it would with a simple extension 
[07:33:01] <_|Nix|_> arschmitz: Actually, excellent point!
[07:33:24] <_|Nix|_> arschmitz: The extension is part of the framework and replaces the way controlgroup enhances its children with code that makes use of the mythical array!
[07:33:28] <arschmitz> and if your writing something intended to work with it its your responsibility to extend it to make that possible
[07:34:12] <_|Nix|_> arschmitz: ... and then you can just place a widget in there and it will be enhanced!
[07:34:41] <arschmitz> yes that would be possible but that would me up to the creator of said mythical widget to do not us
[07:35:42] <_|Nix|_> arschmitz: That's worse, because now two different authors would have to layer on two different extensions which basically do the same thing.
[07:35:56] <_|Nix|_> arschmitz: ... but fine ... I'm sure they can coordinate.
[07:36:39] <_|Nix|_> arschmitz: ... and the controlgroup currently treats checkboxradio specially by calling refresh() on them during its own refresh() code.
[07:36:59] <_|Nix|_> arschmitz: So, that would definitely have to be extended for arbitrary widgets also requiring special handling.
[07:37:06] <arschmitz> _|Nix|_: and really it would be something as simple as _create: function(){ this._super(); this.element.find(":jqmdata("mythical")").mythical();
[07:37:28] <arschmitz> in the simple case
[07:37:52] <_|Nix|_> arschmitz: Yeah ... and an additional, equally simple one for refresh()
[07:37:58] <arschmitz> yup
[07:38:37] <_|Nix|_> OK. I can live with that.
[07:38:40] <arschmitz> cool
[07:38:53] <arschmitz> im going to make the changes after alpha next week
[07:39:11] <arschmitz> scott_gonzalez: said its fine to make them post alpha because its all internal workings
[07:39:15] <arschmitz> nothing thats documented
[07:39:29] <_|Nix|_> arschmitz: Well, most of this release is internal workings :)
[07:39:50] <_|Nix|_> arschmitz: So, are we going to shim $.widget?
[07:39:57] <_|Nix|_> arschmitz: ... like that gist suggests?
[07:40:00] <arschmitz> yes
[07:40:21] <arschmitz> scott_gonzalez: is going to make the needed change in the widget factory and we will have to use an unreleased version for a bit
[07:40:25] <_|Nix|_> arschmitz: *sigh* ... I wish I had done that with registry in the first place.
[07:40:51] <arschmitz> _|Nix|_: and probably for 1.4 just go back to the old individual event bindings for backcompat
[07:40:55] <_|Nix|_> arschmitz: Wait ... what change needs to be made in the widget factory that cannot be made in the shim?
[07:41:13] <arschmitz> to return the constructor
[07:41:19] <arschmitz> it does not do that now
[07:41:30] <arschmitz> its a 1 line change
[07:42:14] <uGoMobi> arschmitz: update on ext-panels... looks like I can get both panel inside and outside page working, although panel outside page is still not working properly on Android (zoom issues)
[07:42:29] <arschmitz> uGoMobi: well thats some good news
[07:42:33] <arschmitz> mostly :)
[07:42:38] <uGoMobi> arschmitz: and I wonder what happens if you have one panel outside and one panel inside a page :/
[07:42:41] <_|Nix|_> arschmitz: He does not need to make that change.
[07:42:53] <_|Nix|_> arschmitz: All calls to $.widget create a new namespace.
[07:43:04] <_|Nix|_> arschmitz: We can just grab the object at that namespace after the call completes.
[07:43:44] <arschmitz> uGoMobi: should be fine in those example pages you have that
[07:43:47] <_|Nix|_> arschmitz: So, $.widget( "a.b", base, proto ); constructor = $.a.b;
[07:44:02] <arschmitz> the nav panel is internal and the example panels are external
[07:44:12] <uGoMobi> arschmitz: going to test it now
[07:44:16] <arschmitz> same with the quicklink panel
[07:44:24] <uGoMobi> arschmitz: yeah, but I had to make a few changes
[07:44:36] <uGoMobi> will see
[07:45:03] <uGoMobi> anyways, I have a general question about widgets outside page
[07:45:17] <uGoMobi> should we hide them during init
[07:45:19] <_|Nix|_> arschmitz: I guess this way you don't have to parse the arguments, but you can pass them clean through.
[07:46:18] <uGoMobi> sorry for interupting, you guys finish your convo and we can discuss my question after that
[07:46:36] <_|Nix|_> Nah, that's fine.
[07:46:45] <arschmitz> uGoMobi: ok well try it and if there are issues i can help if you push the changes
[07:46:52] <arschmitz> uGoMobi: no problem
[07:47:02] <_|Nix|_> uGoMobi: My last point is pretty minor.
[07:47:29] <uGoMobi> okay
[07:47:41] <_|Nix|_> arschmitz: I see a problem.
[07:48:00] <arschmitz> _|Nix|_: whats that?
[07:48:06] <_|Nix|_> arschmitz: Every time you extend an existing widget you're gonna end up with a duplicate in the mythical array.
[07:48:35] <_|Nix|_> arschmitz: ... and another copy of "data-role='" + widgetName "', " in the initSelector.
[07:48:46] <_|Nix|_> arschmitz: The array must be a hash keyed on the namespace.
[07:49:04] <_|Nix|_> arschmitz: So, if "mobile.popup" is already in the hash, you replace it.
[07:49:23] <_|Nix|_> arschmitz: ... and don't append another "data-role='popup', " to its initSelector.
[07:49:33] <arschmitz> _|Nix|_: yeah thats simple enough
[07:49:57] <_|Nix|_> arschmitz: This is exactly like registry, except no deps.
[07:50:02] <arschmitz> this was just what we came up with on the fly super fast it was only a like 5 minute effort 
[07:50:10] <arschmitz> and you dont need to add code to every widget
[07:50:18] <arschmitz> its all automatic
[07:50:57] <_|Nix|_> arschmitz: Well, yeah ... it's easier when you don't consider deps and you consider a $.widget shim OK.
[07:51:28] <_|Nix|_> arschmitz: I wanted to do it this way, but for some reason it was not OK to use a shim.
[07:52:03] <_|Nix|_> arschmitz: ... this way, even dep info wouldn't be difficult to add - just a magic property name on the proto. You can even strip it off before you send it to the real $.widget.
[07:52:29] <arschmitz> _|Nix|_: and i think to maintain backcompat for 1.4 we should probably just use the old event bindings rather then registry for simplicity
[07:52:30] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 06issue-2859: 02http://git.io/ax2D3A
[07:52:30] <jqmobilecommit> 13jquery-mobile/06issue-2859 14715c8b8 15Ghislain Seguin: Whitespace
[07:52:56] <arschmitz> but only on create not page create
[07:53:13] <_|Nix|_> arschmitz: Well, I never did check how much better the registry performs vs. the old event bindings.
[07:53:55] <arschmitz> _|Nix|_: and this is jsut for backcompat and will be deprecated officially 
[07:54:37] <_|Nix|_> arschmitz: I dunno ... the registry is internal, and reduces our /internal/ bindings from number_of_widgets to 1.
[07:54:49] <_|Nix|_> arschmitz: ... and we can get rid of that one as well, because nobody uses it.
[07:54:56] <_|Nix|_> arschmitz: Page calls enhance() directly.
[07:55:09] <_|Nix|_> arschmitz: Oh, actually, NM!
[07:55:17] <_|Nix|_> arschmitz: We don't have a single pagecreate binding.
[07:55:27] <_|Nix|_> arschmitz: We only have a backwards-compat "create" binding.
[07:56:35] <arschmitz> _|Nix|_: actually i could add a single binding to create that calls the new function
[07:56:36] <arschmitz> on the element its triggered on
[07:56:56] <_|Nix|_> arschmitz: Yeah, that's exactly how it is now, except it calls $.mobile.registry.enhance()
[07:57:05] <_|Nix|_> arschmitz: So, what will be the NS for this new function?
[07:57:11] <_|Nix|_> arschmitz: $.mobile.enhance()?
[07:57:20] <arschmitz> right this second it would be something like that
[07:57:35] <arschmitz> but we are switching to ui so $.ui.enhanceWithin maybe
[07:57:51] <arschmitz> for clairity that it will not enhance the element its called on only things within it
[07:57:51] <_|Nix|_> arschmitz: You know, you could just modify the shim to call $.mobile._enhancer.add() :)
[07:58:57] <arschmitz> yeah im sure ill reuse some of your code from in there
[07:58:57] <_|Nix|_> arschmitz: ... and then none of the widgets would have to have code that calls $.mobile._enhancer.add()
[07:59:17] <_|Nix|_> arschmitz: ... only things that are not widgets will have to retain their .add() calls.
[07:59:17] <arschmitz> but we dont need all the dependency stuff thats in registry
[07:59:25] <_|Nix|_> arschmitz: No. That can be stripped.
[07:59:45] <arschmitz> we really just need a single function in jquery.mobile.helpers.js
[07:59:54] <_|Nix|_> arschmitz: Actually, most of it will probably short-circuit on its own, because for every entry .deps will be empty.
[08:00:38] <arschmitz> _|Nix|_: yeah like im said im sure ill reuse a good chunk of what you have 
[08:00:53] <_|Nix|_> arschmitz: OK.
[08:01:09] <arschmitz> mostly just strip stuff out and move it 
[08:01:38] <arschmitz> we will have to make some small changes to a any widgets that use the deps though
[08:01:55] <arschmitz> to check for the existance of and call those widgets
[08:06:27] <arschmitz> _|Nix|_: ok well i just wanted to loop you in on everything i need to get back to finishing up the new slipswitch
[08:06:27] <arschmitz> flipswitch
[08:23:05] <arschmitz> _|Nix|_: if your still here detaching from the dom is still faster even if it is display:none;
[08:32:02] <mikesherov> DaveMethvin: I'm embarrasssed I don't know the answer to this question, but is there a way to change order of bound events on an element?
[08:32:07] <mikesherov> It's for a plugin
[08:33:35] <DaveMethvin> mikesherov: nope, it's not available in native addEventListener either ... so i'm interested in the situation where you need it
[08:34:22] <mikesherov> DaveMethvin: a third party lib attaches an event to an anchor tag with an empty href, and on click, builds the href and returns true
[08:34:41] <mikesherov> so, it's essentially build the link to navigate to when you click on the link itself
[08:35:05] <mikesherov> It's a dumb third party
[08:35:16] <mikesherov> but I want to intercept that URL and do something with it
[08:36:28] <DaveMethvin> can't think of a way to deal with it easily, unless you might be able to attach your event to an event up the tree
[08:36:55] <mikesherov> right, but the event itself doesn't preventDefault
[08:37:06] <DaveMethvin> like, either have your handler on body, or wrap the original <a> in a <span> or something and attach your event there
[08:37:09] <mikesherov> the one that build the url
[08:37:25] <mikesherov> builds*
[08:38:00] <DaveMethvin> so if the third party attaches directly to the <a> and doesn't stopProp you could catch the event in the <span> or <body>
[08:38:22] <mikesherov> oh, and I can preventDefault there?
[08:38:30] <mikesherov> to stop the navigation?
[08:38:32] <DaveMethvin> yeah
[08:38:35] <mikesherov> Thanks
[08:38:36] <mikesherov> duh
[09:00:40] <_|Nix|_> arschmitz: Awesome!
[09:00:47] <_|Nix|_> arschmitz: So, I'm definitely detach()ing.
[09:01:15] <arschmitz> in the collapsible case yes for sure
[09:01:35] <_|Nix|_> So, are we meeting, or did I miscalculate the timezone again?
[09:01:44] <_|Nix|_> NM.
[09:02:30] <arschmitz> just ui is not us
[09:02:34] <_|Nix|_> arschmitz: Oh, so that joint meeting was a one-time thing?
[09:02:34] <uGoMobi> yeah
[09:02:40] <uGoMobi> _|Nix|_: probably monthly
[09:02:46] <_|Nix|_> uGoMobi: OK ... so, the next one is ... two weeks away?
[09:03:13] <uGoMobi> yes
[09:03:19] <_|Nix|_> uGoMobi: OK.
[09:03:31] <uGoMobi> will check with scott_gonzalez and jzaefferer 
[09:03:45] <uGoMobi> but I think we go for once a month for now
[09:03:52] <uGoMobi> let you know in time
[09:03:58] <_|Nix|_> uGoMobi: Alright. Thanks!
[09:05:53] <uGoMobi> of course it's a good thing when we are around during weekly UI meeting :)
[09:06:05] <uGoMobi> so they can ping us if needed
[09:09:37] <_|Nix|_> uGoMobi: Yeah, true ...
[09:12:16] <_|Nix|_> OK ... I'll officially BBL.
[09:13:45] <jqmobilecommit> [13jquery-mobile] 15row1e opened issue #6148: Panel feature breaks down and die when scrolling fast in IOS 7  02http://git.io/Mq6N0Q
[09:15:19] <arschmitz> uGoMobi: you around?
[09:15:27] <uGoMobi> arschmitz: yes
[09:15:47] <arschmitz> do you think we should fix iOS7 issues before the final version is released?
[09:15:56] <uGoMobi> just saw that
[09:16:00] <arschmitz> i would tend to say no because they may change it
[09:16:36] <uGoMobi> agreed
[09:16:47] <uGoMobi> but it's good to know that we should test that
[09:17:02] <arschmitz> yeah track the issues and tag them ios7 for sure
[09:17:03] <uGoMobi> once final is released
[09:17:11] <arschmitz> but not actually make any changes or fixes
[09:17:14] <uGoMobi> that's good idea
[09:17:18] <uGoMobi> yup
[09:17:49] <arschmitz> uGoMobi: im buying new iphone on release day im pretty sure so we will have a device right off to test official version
[09:18:28] <uGoMobi> arschmitz: agcolom_ will install iOS7 on iPad2 so we can test panel when we are done with ext-panels
[09:18:37] <uGoMobi> maybe that will already fix it
[09:18:47] <arschmitz> yeah thats still not official version though so i would not make changes yet
[09:19:36] <uGoMobi> yes I agree we shouldn't fix an issue for a beta platform
[09:19:52] <arschmitz> thats just like ill test on firefox os
[09:20:01] <arschmitz> but wont make changes until its done 
[09:20:41] <arschmitz> (for 1.4)
[09:32:16] <jqmobilecommit> [13jquery-mobile] 15pastudan synchronize pull request #6144: fixing vmouse start/stop events to use clientX/clientY rather than pageX/pageY (06master...06swipe-events)  02http://git.io/2_DaDg
[09:34:50] <uGoMobi> arschmitz: what is the DBR label for in the issue tracker?
[09:35:12] <arschmitz> lol you dont remember?
[09:35:12] <uGoMobi> damaged beyond repair?
[09:35:13] <uGoMobi> lol
[09:35:22] <arschmitz> think last day in portland
[09:35:29] <arschmitz> after the conf
[09:35:31] <uGoMobi> aha
[09:35:35] <uGoMobi> lol
[09:35:38] <kborchers> scott_gonzalez: so about that unit test … i'm trying to figure out what that code is supposed to prevent that isn't already handled by the click handlers set in _on
[09:36:10] <arschmitz> uGoMobi: officially it stands for dedicated branch request
[09:36:28] <uGoMobi> arschmitz: ok, I'll try to remember ;)
[09:37:04] <arschmitz> uGoMobi: ok
[09:41:33] <scott_gonzalez> kborchers: Is it maybe for preventing <a href="..."> since we require anchors for menu items?
[09:42:29] <kborchers> scott_gonzalez: hmmm, let me check
[09:42:48] <_zoggy_> is jquery ui ever going to offer any webfont support (themebuilder)? // http://www.google.com/fonts/
[09:43:18] <scott_gonzalez> _zoggy_: Probably not fonts, just data-URI SVGs
[09:43:30] <scott_gonzalez> Oh, sorry.
[09:43:33] <scott_gonzalez> I was thinking of icon fonts.
[09:43:47] <scott_gonzalez> Are you asking if we'll support setings a web font via ThemeRoller?
[09:44:45] <_zoggy_> yes
[09:44:55] <kborchers> scott_gonzalez: if that's what it's for it's not working because clicking a menu item adds the anchor to the URL or navigates when the href is a URL
[09:44:58] <scott_gonzalez> I don't see why we would.
[09:45:10] <kborchers> which i think we want for nav menus
[09:45:18] <scott_gonzalez> Presumably you'd be using that font in other places, so the inclusion of the font would be in your own stylesheet.
[09:45:25] <scott_gonzalez> You'd just set the font name appropriately in ThemeRoller.
[09:45:52] <scott_gonzalez> kborchers: Heh, then I have no idea why it was added. Which is why I asked someone else to write the test :-P
[09:45:59] <arschmitz> scott_gonzalez: i was thinking on the lines of amd/umd and builder we should really try and share a builder in the future between ui and mobile. i would think this would be fairly easy once we share a common amd/umd setup
[09:46:05] <_zoggy_> yeah, but when you start changing fonts then you'd prob have to start changing the spacing/width/etc for other elements, which one would prob best do with themeroller/see other theme options to see what fits best
[09:46:21] <_zoggy_> not a big deal, just didnt know if it was in the scope of support on the roadmap of TR
[09:46:21] <scott_gonzalez> arschmitz: I'm pretty sure rxaviers has already been thinking about this for a while.
[09:46:35] <arschmitz> scott_gonzalez: awesome
[09:46:57] <scott_gonzalez> _zoggy_: Oh, I see. You're saying that right now when you enter a web font you don't get a real preview because the font isn't loaded.
[09:47:02] <_zoggy_> yes
[09:47:06] <scott_gonzalez> hmm...
[09:47:19] <kborchers> scott_gonzalez: i honestly think it can be removed from what i have tested but would like another opinion, maybe from jzaefferer since it looks like he added it way back … i think
[09:47:32] <scott_gonzalez> I could see us supporting the Google fonts, but I'm curious if that would confuse users about whether or not they need to include the font themselves.
[09:48:27] <_zoggy_> well could ask the user to provide the url to the font, example: http://fonts.googleapis.com/css?family=Numans
[09:48:45] <scott_gonzalez> _zoggy_: It's not on the roadmap, but feel free to file an issue at https://github.com/jquery/download.jqueryui.com/issues/new so we discuss it.
[09:49:02] <_zoggy_> which then we could load / and then also just include the font for the user as well in the build out? <link href='http://fonts.googleapis.com/css?family=Numans' rel='stylesheet' type='text/css'>
[09:49:36] <_zoggy_> ok will do
[09:50:46] <_zoggy_> https://github.com/jquery/download.jqueryui.com/issues/154
[09:50:53] <_zoggy_> ok be back in a few, haircut time
[09:50:56] <jquicommit> [13download.jqueryui.com] 15thezoggy opened issue #154: ThemeRoller - Google Webfont support  02http://git.io/JDx0Jg
[10:02:18] <uGoMobi> scott_gonzalez: do we have dev leads meeting?
[10:02:24] <scott_gonzalez> yup
[10:02:38] <uGoMobi> ok
[10:13:25] <agcolom> uGoMobi: I should get iOS installed tomorrow. the iPad was completely flat and I had to leave before it was charged enough to install iOS7. 
[10:14:18] <uGoMobi> agcolom: no rush
[10:15:04] <uGoMobi> we just got the first iOS7 issue reported today
[10:15:45] <uGoMobi> but won't actually work on fixes until iOS7 final release
[10:16:11] <uGoMobi> still nice if you have a device on which you can test things already
[10:16:14] <agcolom> sure, makes sense :-)
[10:24:11] <_|Nix|_> Back ...
[10:48:48] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 5 new commits to 06collapsible-widget-review: 02http://git.io/VW8hbw
[10:48:48] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 141b0b033 15Gabriel Schulhof: Collapsible: Collecting UI-related variables into this._ui.
[10:48:48] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 14a407376 15Gabriel Schulhof: Widget base class: Moving _toggleClasses from collapsible.
[10:48:48] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 1401301cc 15Gabriel Schulhof: Collapsible set: Reflect options that affect the collapsibleSet instead of merely forwarding them all to the children.
[10:55:43] <_|Nix|_> DaveMethvin: Ping!
[10:56:07] <DaveMethvin> sup _|Nix|_
[10:56:47] <_|Nix|_> DaveMethvin: Hey! I was just thinging: Would it be possible/feasible/worth it to have a way of storing the compiled result of a selector to quickly apply it later?
[10:56:56] <_|Nix|_> DaveMethvin: Much like with regular expressions ...
[10:57:10] <DaveMethvin> Sizzle does that for you, automatically
[10:57:20] <_|Nix|_> DaveMethvin: Oh, wow! Really? Nice!
[10:57:44] <_|Nix|_> DaveMethvin: Well, that was a short discussion :)
[10:57:53] <DaveMethvin> if your selector is really complex you may be able to do a better job of optimizing it by using the special case knowledge you have tho
[10:58:08] <DaveMethvin> i know that was the case for several of the Mobile situations
[10:59:23] <_|Nix|_> DaveMethvin: I'm not facing such a case right now. It was just that my storing selector expressions like that reminded me of all those regexs stored in the various jQuery core files, assigned once, and then used all over.
[11:00:29] <_|Nix|_> DaveMethvin: ... and selectors and regexs have this shared characteristic that they need to be parsed themselves before they can do any parsing of input.
[11:00:32] <DaveMethvin> right
[11:00:32] <_|Nix|_> DaveMethvin: ... but I guess this is handled, and transparently at that. Really cool!
[11:00:32] <DaveMethvin> here's where it happens in sizzle: https://github.com/jquery/sizzle/blob/e57fc4e51a3250e2db2c5e367bed5788aa52e7cd/sizzle.js#L1830
[11:02:04] <_|Nix|_> Really, really cool!
[11:13:54] <scott_gonzalez> arschmitz: When do you think you'll start on the registry update?
[11:21:49] <uGoMobi> agcolom agcolom_ 
[11:22:05] <agcolom> hi :-)
[11:22:07] <uGoMobi> Anne are you here?
[11:22:12] <agcolom> I am!
[11:22:17] <uGoMobi> hi :) I pressed enter too soon ;)
[11:22:40] <uGoMobi> were/are you also working on new jquerymobile.com?
[11:23:13] <agcolom> no, that was Ralph
[11:23:15] <uGoMobi> I asked Ralph about this in Portland
[11:23:25] <uGoMobi> oh ok, thanks
[11:23:37] <uGoMobi> haven't seen him around for a while
[11:29:44] <arschmitz> scott_gonzalez: probably this weekend
[11:30:21] <scott_gonzalez> arschmitz: Great. Can you just add the `return constructor` line in the widget factory for now, to verify that it works?
[11:30:29] <scott_gonzalez> Once we know it works, I'll add it in UI.
[11:30:30] <arschmitz> yeah
[11:30:36] <arschmitz> thats no problem
[11:30:57] <arschmitz> no point in making the change in ui until there is an actual use case in place
[11:32:08] <arschmitz> scott_gonzalez: i want to get this the namespace change and adding in ui core done pretty soon
[12:02:28] <arschmitz> johnbender: Ping!
[12:55:50] <jqmobilecommit> [13jquery-mobile] 15frequent synchronize pull request #6145: filter widget - first commit (06master...06filter_widget)  02http://git.io/Pm0lNQ
[13:09:37] <gseguin> scott_gonzalez: why no "use strict" in client code?
[13:10:24] <scott_gonzalez> http://bugs.jquery.com/ticket/13335
[13:11:26] <gseguin> thanks
[13:37:46] <jqmobilecommit> [13jquery-mobile] 15pastudan synchronize pull request #6144: fixing vmouse start/stop events to use clientX/clientY rather than pageX/pageY (06master...06swipe-events)  02http://git.io/2_DaDg
[13:46:21] <jqmobilecommit> [13jquery-mobile] 15frequent opened issue #6149: ui-screen-hidden is overruled by ui-li-static in latest  02http://git.io/zILXrg
[13:49:17] <jqmobilecommit> [13jquery-mobile] 15frequent synchronize pull request #6145: filter widget - first commit (06master...06filter_widget)  02http://git.io/Pm0lNQ
[14:09:42] <jqmobilecommit> [13jquery-mobile] 15frequent synchronize pull request #6145: filter widget - first commit (06master...06filter_widget)  02http://git.io/Pm0lNQ
[15:59:26] <jqmobilecommit> [13jquery-mobile] 15Palestinian opened issue #6150: Page transition animation dies  02http://git.io/PUGqhA
[15:59:37] <jquicommit> 01[13jquery-ui01] 15fnagel pushed 1 new commit to 06selectmenu: 02http://git.io/Yw1THw
[15:59:37] <jquicommit> 13jquery-ui/06selectmenu 14e217c40 15Felix Nagel: Selectmenu: introduce _position method for easier extending
[17:27:44] <jqmobilecommit> 01[13jquery-mobile01] 15arschmitz pushed 1 new commit to 06master: 02http://git.io/_CQQdA
[17:27:44] <jqmobilecommit> 13jquery-mobile/06master 142ef0b6f 15Alexander Schmitz: Swipe: Fix error in logic which caused swipe to be emmited after a click
[17:45:08] <travis-ci> [travis-ci] jquery/jquery-mobile#463 (master - 2ef0b6f : Alexander Schmitz): The build failed.
[17:45:08] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/19a7f27a7987...2ef0b6fb117d
[17:45:08] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/8948207
[17:55:49] <jqmobilecommit> [13jquery-mobile] 15ezzuah opened issue #6151: Preview my app in ripple emultor and android emulator doesn't work  02http://git.io/w5H5Fg
[21:57:37] <jqmobilecommit> 01[13jquery-mobile01] 15arschmitz created 06namespace (+4 new commits): 02http://git.io/LDEuAQ
[21:57:37] <jqmobilecommit> 13jquery-mobile/06namespace 14774761f 15Alexander Schmitz: Namespace: change from mobile to ui
[21:57:37] <jqmobilecommit> 13jquery-mobile/06namespace 14087db8a 15Alexander Schmitz: Namespace: Fix tests for change to ui namespace
[21:57:37] <jqmobilecommit> 13jquery-mobile/06namespace 14d5ba012 15Alexander Schmitz: Core: add ui core
[22:08:01] <jqmobilecommit> 01[13jquery-mobile01] 15arschmitz pushed 2 new commits to 06namespace: 02http://git.io/7xMg4g
[22:08:01] <jqmobilecommit> 13jquery-mobile/06namespace 14985ef8c 15Alexander Schmitz: Build: update gruntfile and requirejs config for inclusion of ui core
[22:08:01] <jqmobilecommit> 13jquery-mobile/06namespace 140051a29 15Alexander Schmitz: Core: update dependencies
[22:09:37] <jqmobilecommit> 01[13jquery-mobile01] 15arschmitz pushed 1 new commit to 06namespace: 02http://git.io/xn2Jcg
[22:09:37] <jqmobilecommit> 13jquery-mobile/06namespace 14dfc2e21 15Alexander Schmitz: Demos: fix event name
[22:22:21] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6151: Previewing apps in ripple emultor and android emulator doesn't work  02http://git.io/w5H5Fg
