[01:11:51] <AlexRS> Hi Friends
[01:12:26] <AlexRS> I'm searching for documentation about page() function. Do you know where to find it?
[01:22:33] <_|Nix|_> AlexRS: http://api.jquerymobile.com/page/
[01:22:45] <_|Nix|_> AlexRS: You can get more help at #jquery
[01:26:10] <jqmobilecommit> [13jquery-mobile] 15nschonni opened pull request #6152: One line upstream rebase command (06master...06patch-1)  02http://git.io/we9J-g
[01:30:30] <AlexRS> _|Nix|_: Thank you! That was what I'm looking for.
[01:37:02] <_|Nix|_> AlexRS: NP!
[01:43:51] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6150: Page transition animation dies  02http://git.io/PUGqhA
[02:03:25] <jqmobilecommit> [13jquery-mobile] 15Max-Might opened issue #6153: Calling buttonMarkup on cloned button ruins it.  02http://git.io/fos-KQ
[02:14:03] <jzaefferer> arschmitz: this ui/mobile document still hasn't seen any update or comments: https://docs.google.com/document/d/1N7XTqfU9dgIX_r3IxZu9OxA-4VdHIhPKC-NjmaSXeQo/edit#
[02:20:23] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6153: Calling buttonMarkup on cloned button ruins it.  02http://git.io/fos-KQ
[02:27:48] <uGoMobi> jzaefferer: we are releasing 1.4 alpha next week and still have a lotttt of work to do, so I suggest we work on that document after next week
[02:28:44] <jzaefferer> uGoMobi: okay, that makes sense, thanks
[02:29:03] <jzaefferer> uGoMobi: is there a roadmap document for mobile somewhere?
[02:29:37] <uGoMobi> jzaefferer: yes, https://github.com/jquery/jquery-mobile/wiki/Roadmap
[02:29:59] <uGoMobi> jzaefferer: we have to clean that up though
[02:30:09] <jzaefferer> uGoMobi: yeah, remove the 1.3 stuff...
[02:31:49] <uGoMobi> jzaefferer: done :)
[02:31:57] <uGoMobi> jzaefferer: when we are done with 1.4 we will have a meeting to discuss roadmap again
[03:38:46] <jzaefferer> uGoMobi: how about putting topcoat evaluation on the roadmap for 1.5, for now at least? https://github.com/jquery/jquery-mobile/issues/6110
[03:38:46] <b-ot> jzaefferer: Issue #6110 by jzaefferer (2w 5d ago): Using topcoat as alternative theme?
[03:39:45] <uGoMobi> jzaefferer: sure
[03:40:25] <uGoMobi> jzaefferer: I have been looking into Topcoat already, just didn't have time yet to put my findings in a comment on that ticket
[03:43:04] <jzaefferer> uGoMobi: okay
[03:44:18] <uGoMobi> jzaefferer: I added it to roadmap wiki page and set milestone on ticket
[04:01:25] <jzaefferer> kborchers: can you take a look at this? Work with Felix to get it resolved? http://bugs.jqueryui.com/ticket/8929
[05:25:09] <arschmitz> jzaefferer: Sorry i have not go to commenting on your doc its been crazy trying to get stuff done for our release next week and trying to get some of the ground work stuff done with scott for merge
[05:29:47] <scott_gonzalez> jzaefferer: I've been keeping arschmitz busy with foundational stuff for the merge.
[05:30:11] <arschmitz> scott_gonzalez: i did the name space change last night
[05:30:22] <arschmitz> scott_gonzalez: also pulled in ui core and removed dup stuff
[05:31:26] <scott_gonzalez> wow
[05:32:12] <arschmitz> scott_gonzalez: it was a long night fixing tests ha ha
[05:33:07] <scott_gonzalez> Did you make everything dependent on the ui namespace?
[05:33:17] <scott_gonzalez> We should try to make everything namespace independent.
[05:33:21] <scott_gonzalez> At least for widgets.
[05:34:40] <scott_gonzalez> You don't want to run into this problem: https://github.com/bergie/create/issues/173
[05:34:40] <b-ot> scott_gonzalez: Issue #173 by wimleers (3mon 1w ago): Create.js breaks when used with jQuery UI 1.10
[05:36:08] <scott_gonzalez> Actually, this might not be such a bad idea to have the widget factory do: https://github.com/bergie/create/issues/173#issuecomment-15841113
[05:36:08] <b-ot> scott_gonzalez: Issue #173 by wimleers (3mon 1w ago): Create.js breaks when used with jQuery UI 1.10
[05:36:14] <arschmitz> scott_gonzalez: for now all i did was basicly replace mobile with ui
[05:36:29] <arschmitz> no functional changes
[05:37:03] <arschmitz> scott_gonzalez: actually that does sound useful to be able to access the namespace
[05:37:22] <scott_gonzalez> I think making the change to ui right now might just mask some of the issues with generic namespace handling.
[05:37:34] <arschmitz> yea
[05:39:20] <jqmobilecommit> 01[13jquery-mobile01] 15arschmitz pushed 2 new commits to 06namespace: 02http://git.io/-x21iw
[05:39:20] <jqmobilecommit> 13jquery-mobile/06namespace 1434dfbab 15Alexander Schmitz: Tests: Fix dialog test for ui namespace
[05:39:20] <jqmobilecommit> 13jquery-mobile/06namespace 144a1145e 15Alexander Schmitz: Namespace: copy $.ui to $.mobile for back compat
[05:41:07] <arschmitz> scott_gonzalez: this is what i did https://github.com/jquery/jquery-mobile/pull/6154
[05:41:08] <b-ot> arschmitz: Pull request #6154 by arschmitz (14s ago): Namespace: Switch from mobile namespace to ui namespace and pull in ui core. 
[05:41:08] <jqmobilecommit> [13jquery-mobile] 15arschmitz opened pull request #6154: Namespace: Switch from mobile namespace to ui namespace and pull in ui core.  (06master...06namespace)  02http://git.io/e2ELtw
[05:41:50] <scott_gonzalez> So we probably don't want EVERYTHING in the ui namespace.
[05:42:10] <scott_gonzalez> Mobile will still be its own project. So things that are purely part of Mobile should probably remain in the mobile namespace.
[05:42:41] <arschmitz> you dont think it will be confusing to maintin 2 differnt js namespaces in a single project?
[05:43:01] <scott_gonzalez> You shouldn't be building anything in the ui namespace inside mobile.
[05:43:10] <scott_gonzalez> You should only be extending things in the ui namespace.
[05:43:51] <scott_gonzalez> Many of the widgets will move to UI and therefore get the ui namespace, but that will make them dependencies that get pulled in.
[05:44:53] <jqmobilecommit> [13jquery-mobile] 15arschmitz closed pull request #6154: Namespace: Switch from mobile namespace to ui namespace and pull in ui core.  (06master...06namespace)  02http://git.io/e2ELtw
[05:45:44] <arschmitz> scott_gonzalez: guess there was some confusion when we talked about this before
[05:47:08] <scott_gonzalez> sorry :-/
[05:47:21] <scott_gonzalez> Do you what I said makes sense?
[05:47:44] <scott_gonzalez> *Do you think
[05:49:03] <arschmitz> to an extent i just think it will be very confusing because we will have ui core and ui name spaced widgets but other things on the ui namespace and the ui name space in css
[05:49:23] <arschmitz> * other things on mobile namespace
[05:50:01] <arschmitz> all in a single project
[05:51:47] <scott_gonzalez> But this is what we've been telling people for years.
[05:52:03] <scott_gonzalez> Don't use the ui namespace in js. Use the CSS Framework with the ui- prefix.
[05:52:52] <arschmitz> right for third party stuff but this isnt truely third party espically when we are telling people about merging the projects
[05:52:53] <scott_gonzalez> I guess the thing is that we would tell you to use a different prefix for project specific CSS.
[05:53:28] <scott_gonzalez> Well, the two projects will remain separate. The merge is really about Mobile getting to the point it was supposed to be in the first place.
[05:53:39] <arschmitz> i think when some one pulls a library like ui or mobile they expect a single namespace
[05:54:17] <arschmitz> right im just trying to think from the stand point of some one using the librarys and the confusion to them
[05:54:25] <scott_gonzalez> Most people won't ever interact with the namespaces.
[05:54:46] <scott_gonzalez> The only interaction with namespaces for 99% of users is CSS prefixing.
[05:55:23] <scott_gonzalez> And even then, it's usually limited to CSS framework classes.
[05:55:29] <arschmitz> not true at all we have many documented helper functions on the mobile namespace and default settings that can be changed on initalization. 
[05:55:38] <scott_gonzalez> And that's a set of CSS we're talking about changing to use a 3rd party framework anyway.
[05:55:43] <scott_gonzalez> So those classes might change too.
[05:56:09] <scott_gonzalez> Those would all remain on the mobile namespace then.
[05:57:08] <scott_gonzalez> The only thing we put on $.ui for users is $.ui.keyCode.
[05:57:14] <scott_gonzalez> And I've always wanted that to be $.keyCode.
[05:58:18] <arschmitz> i don't know ill do what ever you think is best its just my opinion that having 2 js namespace in a single project is confusing.
[05:59:23] <arschmitz> scott_gonzalez: you have been doing this a lot longer then i have so ill trust your judgement
[05:59:35] <scott_gonzalez> jzaefferer: ^
[06:04:04] <_|Nix|_> Man, insanity ... all the collapsible tests were asynchronous, and each one did a single navigation to an internal page, but all the assertions could easily be made synchronously.
[06:04:27] <_|Nix|_> So, I'm consolidating all the tests into one test page. I've already quartered the execution time.
[06:04:54] <arschmitz> _|Nix|_: cool i noticed a ton of dup tests between integration and unit last night
[06:05:06] <arschmitz> files that are just plain copied in both places
[06:05:36] <_|Nix|_> arschmitz: I know ... it's a mess.
[06:06:03] <_|Nix|_> arschmitz: ... and we're gonna be waaaa-heh-heh-aaay behind with the API docs.
[06:07:09] <_|Nix|_> arschmitz: The reactoring battle rages on.
[06:46:33] <jquicommit> [13jquery-ui] 15tjvantoll synchronize pull request #1020: Datepicker: Replacing grid, title, and datepicker templates with builder methods (06datepicker...06datepicker_builders)  02http://git.io/jSVY9g
[06:47:48] <tj_vantoll> jzaefferer Around?
[06:49:51] <tj_vantoll> I get a JS error in IE8 in Globalize. The issue has since been fixed. Is it safe to just drop in the latest code in GitHub (e.g. https://github.com/jquery/globalize/blob/master/lib/globalize.js) or is there a certain "release" version I should be using?
[06:50:40] <jzaefferer> scott_gonzalez arschmitz: Moving to $.keyCode, keeping things in $.mobile that don't move to UI -> Yes please
[06:51:50] <jzaefferer> tj_vantoll: the last tag is 8 months old. But it looks like we didn't change anything since then, so using that tag should be fine
[06:52:05] <jzaefferer> or just a copy from master, probably no different
[06:52:24] <tj_vantoll> Ok will do.
[06:52:48] <jzaefferer> we should redo that branch, so just update it in the datepicker branch, and we can clean it up a little later
[06:52:58] <jzaefferer> or update Globalize in master and merge that
[06:53:31] <tj_vantoll> I'll do it in master so others don't run into this.
[06:55:08] <tj_vantoll> Let me know if you want anything else to happen on my pull, otherwise I think I'm ready to move onto whatever is next.
[06:55:27] <jqmobilecommit> [13jquery-mobile] 15arschmitz closed issue #6134: Switch mobile namespace to ui  02http://git.io/ExGy-Q
[06:57:45] <tj_vantoll> jzaefferer Should I squash it or just merge the branch?
[06:57:46] <jzaefferer> tj_vantoll: can you improve the numberOfMonths options next? Get the failing test that you added to pass?
[06:57:55] <jzaefferer> just merge the branch
[06:58:01] <tj_vantoll> kk
[06:58:09] <tj_vantoll> And yep that seems like a reasonable next step.
[06:58:52] <jzaefferer> tj_vantoll: beyond that, a good next step might be was on the wiki here: http://wiki.jqueryui.com/w/page/12137778/Datepicker
[06:58:57] <jzaefferer> "Add the ability to customize the buttons in the bottom button bar. "
[06:59:10] <arschmitz> scott_gonzalez: so unless im missing something there is nothing to do as far as namespace then because nothing in mobile will be moving to ui right now?
[06:59:25] <jzaefferer> then go through the rest of the page and see what we can evaluate?
[06:59:59] <scott_gonzalez> arschmitz: right
[07:00:32] <jzaefferer> beyond that, I'd like to throw away this branch, create a new one, replace the jquery.ui.datepicker.js content with the content of picker.js, and port whatever else we need
[07:00:33] <tj_vantoll> Yeah once we get numberOfMonths fully functional it might be worth trying to go through and try to finalize the API as much as possible.
[07:01:00] <jzaefferer> tj_vantoll: we'll loose some history but also won't have to deal with the menubar/popup mess in the history...
[07:01:19] <arschmitz> ok guess thats where the confusion was because we had a whole conversation about the inconsistency and switching it. which would imply there is actually something to switch
[07:01:22] <jquicommit> 01[13jquery-ui01] 15tjvantoll pushed 1 new commit to 06master: 02http://git.io/lQwv7A
[07:01:22] <jquicommit> 13jquery-ui/06master 142f49702 15TJ VanToll: Updating Globalize to v0.0.1.
[07:01:32] <jzaefferer> I suspect finalising the API will take a while
[07:01:41] <tj_vantoll> Yeah.
[07:02:39] <tj_vantoll> Cleaning up the branch is a good idea. I'll get the multi month calendars actually working and we can go from there.
[07:04:05] <scott_gonzalez> Speaking of cleaning up history. I'd love to squash the interactions branch.
[07:04:10] <jquicommit> [13jquery-ui] 15tjvantoll closed pull request #1020: Datepicker: Replacing grid, title, and datepicker templates with builder methods (06datepicker...06datepicker_builders)  02http://git.io/jSVY9g
[07:04:12] <scott_gonzalez> The history there is a total mess.
[07:04:51] <scott_gonzalez> I once tried to do an interactive rebase on it to keep the sane parts, but it was too much of a mess and there were conflicts everywhere.
[07:07:37] <jquicommit> 01[13jquery-ui01] 15tjvantoll pushed 2 new commits to 06datepicker: 02http://git.io/itu6dw
[07:07:37] <jquicommit> 13jquery-ui/06datepicker 14d971f48 15TJ VanToll: Merge branch 'master' into datepicker
[07:07:37] <jquicommit> 13jquery-ui/06datepicker 14e6f1047 15TJ VanToll: Upgrading jQuery core to 1.10.2 for datepicker rewrite demo page.
[07:10:09] <tj_vantoll> On an unrelated note anyone with an Android 4.2 device want to try to recreate this one http://bugs.jqueryui.com/ticket/9391. I couldn't, but would like someone else to verify.
[07:10:40] <arschmitz> tj_vantoll: uGoMobi has one 
[07:11:04] <arschmitz> tj_vantoll: i have 2 in the mail on the way to me but wont have them until at least tomorrow if not monday
[07:13:46] <arschmitz> tj_vantoll: actually i have the exact phone reported on on the way to me but wont have that one until monday
[07:15:46] <tj_vantoll> Ok cool. Issues like these are hard. I have a Nexus 7 with Android 4.2 and couldn't recreate it there.
[07:16:36] <arschmitz> tj_vantoll: feel free to ping me any time you need mobile testing done i have a lot of devices and a list of what everone on mobile has so good chance we can get exact device to test on
[07:16:49] <tj_vantoll> Cool, thanks.
[07:19:02] <scott_gonzalez> And then we can make them fix our bugs :D
[07:21:11] <arschmitz> lol
[07:21:56] <tj_vantoll> :)
[07:22:07] <arschmitz> good chance we have run into them already too
[07:28:19] <arschmitz> scott_gonzalez: https://github.com/jquery/jquery-wp-content/issues/224
[07:28:19] <b-ot> arschmitz: Issue #224 by scottgonzalez (3mon 3w ago): iPhone scroll to top doesn't work
[07:28:40] <arschmitz> realized a never actually confirmed the fix on this for you
[07:29:00] <arschmitz> scott_gonzalez: so i just did and it works.
[07:34:39] <uGoMobi> tj_vantoll: want me to test something?
[07:35:49] <tj_vantoll> uGoMobi Yeah http://bugs.jqueryui.com/ticket/9391
[07:36:29] <tj_vantoll> OP claims that on a Nexus 4 with Android 4.2 the autocomplete here http://jqueryui.com/resources/demos/autocomplete/default.html doesn't let them select options with touch correctly.
[07:36:39] <tj_vantoll> I can't recreate on my Nexus 7 running 4.2.
[07:36:47] <tj_vantoll> Wanted someone else to give it a shot though.
[07:37:05] <uGoMobi> tj_vantoll: I have Galaxy Nexus running 4.2.1
[07:37:12] <uGoMobi> will test now
[07:41:00] <uGoMobi> tj_vantoll: I can reproduce the issue
[07:41:19] <tj_vantoll> Ok thanks, I'll comment to that effect.
[07:44:11] <uGoMobi> tj_vantoll: actually AppleScript was selected, not ActionScript, but that's still not PHP
[07:45:24] <tj_vantoll> Did the plugin work as expected though? The options you meant to select were actually selected?
[07:46:38] <uGoMobi> tj_vantoll: no it did not, I tap on "php" in the list but "AppleScript" was selected
[07:47:04] <tj_vantoll> Oh, I completely misread your comment o_O
[07:47:19] <tj_vantoll> Whoops.
[07:47:55] <uGoMobi> tj_vantoll: I tried a couple more times and it seems like it does not always happen
[07:48:10] <uGoMobi> tj_vantoll: were a few times that PHP was selected
[07:51:49] <kborchers> scott_gonzalez: btw, i figured out what that .bind is for in menu. prevents clicks on items when entire menu is disabled instead of just certain items. i should be able to add a simple test for that today as well which is definitely needed since i removed it and the tests still pass :)
[07:52:27] <kborchers> jzaefferer: i'll also try to look at that bug today/tonight too. not exactly sure what the right solution is there but i'll think on it
[07:54:27] <scott_gonzalez> kborchers: Yeah, I had removed it and ran tests too :-P
[07:54:51] <scott_gonzalez> Once you have a a proper test for it, can you change it to use _on()?
[07:55:07] <scott_gonzalez> Since we have the new flag to run when disabled.
[07:55:18] <kborchers> will do
[07:56:17] <scott_gonzalez> Thanks.
[08:01:40] <scott_gonzalez> tj_vantoll: Can you check if http://bugs.jqueryui.com/ticket/4489 and http://bugs.jqueryui.com/ticket/7016 are the same?
[08:02:41] <tj_vantoll> Yeah.
[08:13:57] <tj_vantoll> scott_gonzalez: What's the purpose of this check https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.dialog.js#L181?
[08:15:57] <scott_gonzalez> When the dialog is opened, we capture which element has focus, so we can refocus it on close.
[08:16:08] <scott_gonzalez> That check ensures that the element which had focus before is still focusable.
[08:16:36] <scott_gonzalez> For example, if it was removed from the DOM or hidden while the dialog was open, we wouldn't be able to focus it again.
[08:17:04] <scott_gonzalez> I think what we should be doing for the fallback is focusing the body instead of blurring the active element
[08:17:25] <tj_vantoll> Yeah this has caused a few different issues.
[08:20:23] <scott_gonzalez> Ugh, why is there no reference to a ticket in OUR tracker?
[08:21:58] <tj_vantoll> Woah.
[08:21:58] <tj_vantoll> >> this.document[0].activeElement.tagName
[08:21:58] <tj_vantoll>   "BODY"
[08:21:59] <tj_vantoll> That's from that IE9 bug.
[08:22:45] <tj_vantoll> Yeah $( "body" ).blur() switches windows in IE9.
[08:23:11] <scott_gonzalez> That's crazy.
[08:23:50] <tj_vantoll> Yeah I had to check that about 4 times before I typed it.
[08:24:00] <tj_vantoll> Going to check IE10.
[08:29:32] <tj_vantoll> Wow yeah. In IE (9 and 10 at least) document.body.blur() makes the browser switch windows. What the hell.
[08:41:30] <kborchers> tj_vantoll: o_O
[08:42:44] <scott_gonzalez> tj_vantoll: That .blur() was added by jzaefferer for http://bugs.jqueryui.com/ticket/8730
[08:42:55] <scott_gonzalez> So there was no specific bug reported about the Safari behavior.
[08:43:46] <jqmobilecommit> [13jquery-mobile] 15jyohere opened issue #6155: Swiping not working on some devices and also not smooth  02http://git.io/E5GYcA
[08:44:11] <tj_vantoll> Yeah I'm curious what problem the Safari behavior would create.
[08:44:57] <scott_gonzalez> jzaefferer do you remember?
[08:48:03] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6155: Swiping not working on some devices and also not smooth  02http://git.io/E5GYcA
[08:48:40] <gseguin> arschmitz: did you have time to take a look at that branch?
[08:48:50] <gseguin> johnbender: ^
[08:49:07] <arschmitz> i did a bit but have not got all the tests fixed yet
[08:50:25] <arschmitz> gseguin: i think i know the problem though
[08:50:54] <gseguin> ok, tests are wrong or changes are missing something?
[08:52:17] <arschmitz> before the url was ran through a function that did a bunch of normalization 
[08:52:31] <arschmitz> gseguin: the convertUrlToDataUrl function
[08:52:55] <gseguin> yeah it strips the querystring
[08:53:03] <arschmitz> gseguin: it does more then that
[08:53:17] <gseguin> but from talking with johnbender it's been added on purpose
[08:54:23] <arschmitz> gseguin: it also decoded the uri
[08:54:34] <arschmitz> via decodeUriComponent
[09:05:34] <johnbender> gseguin: arschmitz: I'm under the impression that's in there for a reason but I could be wrong
[09:05:50] <gseguin> johnbender: https://github.com/jquery/jquery-mobile/compare/issue-2859
[09:05:59] <gseguin> these are my proposed changes
[09:06:30] <johnbender> gseguin: and all that was left was the tests
[09:06:30] <gseguin> johnbender: with those, only some nav tests fail: http://pastebin.com/dEHebbxS
[09:07:17] <johnbender> gseguin: hmm those seem fairly minor so maybe it'll probably be fine once those get sorted out
[09:07:47] <gseguin> johnbender: the additional change that fixed all the other tests is https://github.com/jquery/jquery-mobile/compare/issue-2859#L0L748
[09:11:48] <arschmitz> johnbender: as far as your concerned content widget branch is ready to merge right?
[09:12:59] <uGoMobi> toddmparker scottjehl__  johnbender gseguin _|Nix|_ agcolom agcolom_ arschmitz RWhitbec- : meeting agenda https://docs.google.com/document/d/1aRC1X8B6lCxk-LsrrSu5urH35pvMgegfFiHt3vT8-HA/edit#
[09:15:54] <gseguin> uGoMobi: I'm still not going to make the meeting this week and the week after (most likely). I should be resuming to my regular jQM schedule before the end of July
[09:16:21] <uGoMobi> gseguin: ok I understand
[09:17:36] <uGoMobi> gseguin: one question about issue-2859; does that fix something that use to work in 1.2?
[09:18:13] <gseguin> no the querystring has been a problem since the beginning
[09:18:26] <uGoMobi> gseguin: ok clear, thanks
[09:18:41] <gseguin> uGoMobi: in 1.2 the querystring was not stripped but it would cause an error 
[09:18:43] <uGoMobi> gseguin: then I think we can't cherry-pick 
[09:18:51] <uGoMobi> right
[09:19:01] <gseguin> in 1.3 the querystring is stripped
[09:19:15] <gseguin> I think we can cherry-pick in 1.3
[09:19:18] <gseguin> it's a bug
[09:19:25] <gseguin> it's not a new feature
[09:19:45] <gseguin> we should honor the full hash and use only the part that's meaningful to us
[09:20:24] <gseguin> arschmitz, johnbender: what's your take on this?
[09:20:31] <uGoMobi> I know we never supported query params
[09:20:39] <arschmitz> i think its a feature its always been documented as not supported
[09:20:44] <gseguin> backporting should not break existing uses
[09:21:08] <uGoMobi> was wondering if a change in 1.3 broke something that we can fix with this
[09:21:26] <gseguin> because if people are using querystring in the hash before 1.4 they had to have their own nav monkey patch
[09:21:38] <gseguin> uGoMobi: 1.3 in some ways yes
[09:21:45] <uGoMobi> I understand it does if you consider the stripping a bug
[09:21:50] <gseguin> because the behavior changed from 1.2 to 1.3
[09:22:09] <uGoMobi> right
[09:22:23] <arschmitz> i have to run right now but to me not supported means we hold no responsibility to what happens if you try this
[09:22:44] <arschmitz> it has never worked previously so making it work i see as a feature
[09:23:33] <gseguin> I disagree, if I have a <a href="#foo?bar"> and I click on it the url should reflect my href
[09:23:44] <arschmitz> not if we say that is not supported
[09:23:50] <arschmitz> if its not supported its not supported
[09:23:56] <gseguin> if I click on it and the url becomes "#foo" then it's a bug
[09:24:16] <gseguin> not supported means we don't do anything with the querystring
[09:24:22] <arschmitz> gseguin: that would imply support
[09:24:43] <gseguin> but we shouldn't lose it
[09:24:51] <uGoMobi> you can look at it from two angles... support something or no longer break something
[09:25:41] <gseguin> scott_gonzalez: any opinion here?
[09:26:40] <scott_gonzalez> Well, let's start by agreeing on terms.
[09:26:52] <scott_gonzalez> #foo?bar is only a hash and does not contain a query.
[09:26:59] <scott_gonzalez> ?bar#foo is both a query and a hash.
[09:27:00] <b-ot> scott_gonzalez: memorised “bar#foo”.
[09:27:00] <bot-t> foo is bar
[09:27:04] <gseguin> exactly
[09:27:08] <gseguin> it's a hash 
[09:27:20] <gseguin> agreed
[09:27:30] <scott_gonzalez> Ok, so which case are we talking about?
[09:27:33] <scott_gonzalez> Both or just one?
[09:27:37] <gseguin> the hash only
[09:27:46] <gseguin> #foo?bar
[09:28:02] <scott_gonzalez> And what's the situation that we're talking about where it gets stripped?
[09:28:30] <gseguin> scott_gonzalez: in 1.2 if you have an <a href="#foo?bar"> and you click on it the location changes to #foo?bar but jqm barfs
[09:28:55] <gseguin> scott_gonzalez: in 1.3 if you have an <a href="#foo?bar"> and you click on it the location changes to #foo and there is no jqm error
[09:29:28] <gseguin> scott_gonzalez: in 1.4 if you have an <a href="#foo?bar"> and you click on it the location changes to #foo?bar and there is no jqm error
[09:29:54] <gseguin> the only part of the hash that's meaningful to jqm is the part before the "?"
[09:30:11] <scott_gonzalez> That can't be true.
[09:30:19] <scott_gonzalez> A hash is a hash.
[09:30:20] <gseguin> what part?
[09:30:32] <scott_gonzalez> Question marks have no special meaning and therefore cannot just be ignored.
[09:30:43] <scott_gonzalez> So either mobile care about the whole thing or nothing, it can't care about part.
[09:31:06] <gseguin> scott_gonzalez: yes but we've always (IIRC) stripped the "querystring" from the hash
[09:31:09] <scott_gonzalez> If you're treating #foo?bar the same as #foo, that's a bug.
[09:31:28] <scott_gonzalez> why?
[09:31:33] <scott_gonzalez> It's not a query string if it's after the #
[09:31:56] <gseguin> because it's a way to do dynamic data in a page
[09:32:15] <gseguin> with regard to the spec that is correct
[09:32:15] <scott_gonzalez> :-(
[09:32:25] <scott_gonzalez> You mean if you're using hashchange?
[09:32:30] <gseguin> with regard to how people use jQM it's incorrect
[09:32:56] <arschmitz> scott_gonzalez: It's always been documented that putting a query parameter in hash like that is not supported
[09:33:44] <scott_gonzalez> Based on the behavior you're saying Mobile has in 1.2 and 1.3, I don't see how the statement "with regard to how people use jQM it's incorrect" can be true.
[09:33:48] <gseguin> scott_gonzalez: for instance in our product at jive we do things like: #jive-content?content=/api/blah/blah
[09:34:05] <scott_gonzalez> It sounds like people can't possibly be using queries inside the hash with any released version of Mobile.
[09:34:25] <scott_gonzalez> In your product. Is there a large portion of the community doing this?
[09:34:33] <_|Nix|_> scott_gonzalez: I guess we're breaking spec by cramming additional information into the hash at the expense of some characters in the hash which should not be treated specially.
[09:34:36] <gseguin> scott_gonzalez: because users have monkey patched the nav to intercept the hash containing a "querystring"
[09:35:13] <scott_gonzalez> This should be an idication that something needs to change. Not that we should special case monkey patched code.
[09:35:23] <_|Nix|_> gseguin: I think scott_gonzalez is right in that this is the first time when we'd have a version containing a working hash-based querystring.
[09:35:36] <gseguin> scott_gonzalez: I'm pretty sure we're not the only ones doing it as I don't see how you would consume API data to fill up the page dynamically
[09:36:05] <scott_gonzalez> Why does Mobile care about the hash?
[09:36:14] <scott_gonzalez> Why is it inspecting and editing?
[09:36:16] <_|Nix|_> gseguin: So, if we add this support, I think at the very least it should be in its own module so we can easily drop it, because it /does/ break spec after all. Don't ask me how else we're gonna pass data to internal pages though ...
[09:36:26] <arschmitz> It's how nav works
[09:36:31] <_|Nix|_> scott_gonzalez: ... because the hash represents internal pages.
[09:36:45] <scott_gonzalez> Ok, so you have something like:
[09:36:50] <scott_gonzalez> <div role="page" id="foo">
[09:36:56] <gseguin> yup
[09:36:57] <scott_gonzalez> And you link to it as <a href="#foo">
[09:36:57] <_|Nix|_> scott_gonzalez: The portion of the URL before the "#" never changes on a mobile site.
[09:37:11] <scott_gonzalez> So you're breaking valid pages by treating ? as special
[09:37:12] <gseguin> you can't have: <div role="page" id="foo?bar">
[09:37:23] <scott_gonzalez> gseguin: But you should be able to.
[09:37:28] <scott_gonzalez> Can't = there's a bug in Mobile.
[09:37:34] <scott_gonzalez> That's 100% valid.
[09:37:44] <gseguin> yeah I'm not saying it's not
[09:37:48] <_|Nix|_> scott_gonzalez: We have like http://example.com/startpage.html -> http://example.com/startpage.html#some-internal-page -> http://example.com/startpage.html#/path/to/page/loaded/via/ajax.html -> etc.
[09:37:49] <scott_gonzalez> (I'm assuming you just typod the #)
[09:38:18] <scott_gonzalez> That's only in UAs without pushState?
[09:38:41] <_|Nix|_> scott_gonzalez: Nono. That's how we do it everywhere. If you don't have pushState, you actually see those ugly URLs.
[09:38:46] <_|Nix|_> scott_gonzalez: If you have pushState, you don't.
[09:39:08] <scott_gonzalez> Right, so it's only in UAs without pushState.
[09:39:31] <jqmobilecommit> [13jquery-mobile] 15gzunino opened issue #6156: Provide scrolling withing Panels  02http://git.io/Je8slw
[09:40:01] <scott_gonzalez> So the point is we're breaking how URLs work if we just ignore the ? in a hash.
[09:40:38] <_|Nix|_> scott_gonzalez: I know, however, since our pages serve as quasi-html-documents, we need to support some of the html document features, such as query strings.
[09:41:09] <scott_gonzalez> So what happens in a monkey patched app when you click on #foo?bar
[09:41:15] <_|Nix|_> scott_gonzalez: ... and the only way to do that while using hashes to address the pages is to break the semantics of the hash.
[09:41:22] <scott_gonzalez> gseguin: What is jive doing to make this work for them?
[09:41:25] <_|Nix|_> scott_gonzalez: It loads foo and passes bar to it.
[09:41:34] <scott_gonzalez> Passes bar to it how?
[09:41:43] <scott_gonzalez> Isn't "it" a div on the page?
[09:42:09] <_|Nix|_> scott_gonzalez: I'm not actually sure. I'm assuming it sets the data-url of the page div.
[09:42:40] <_|Nix|_> scott_gonzalez: So, you can parse $.mobile.activePage.jqmData( "url" ) the same way you would parse the location for the query data.
[09:43:19] <scott_gonzalez> So there's a special data property that is updated dynamically as you navigate?
[09:43:33] <_|Nix|_> scott_gonzalez: Yes. All pages have a data-url.
[09:43:39] <_|Nix|_> scott_gonzalez: Each one has its own.
[09:43:40] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6156: Provide scrolling withing Panels  02http://git.io/Je8slw
[09:44:01] <_|Nix|_> scott_gonzalez: A page loaded via ajax has data-url=/path/to/page/loaded/via/ajax
[09:44:02] <scott_gonzalez> And it's set to the untouched URL? So #foo?bar not #foo?
[09:44:04] <_|Nix|_> .html
[09:44:29] <_|Nix|_> scott_gonzalez: Like I said, I'm not sure how johnbender did it in his branch, but I can certainly check.
[09:44:38] <gseguin> scott_gonzalez: until 1.3 we had a monkey patch of the nav code in place
[09:44:43] <_|Nix|_> scott_gonzalez: Clearly though it has to be accessible or else it'd be useless.
[09:45:02] <scott_gonzalez> gseguin: And what did it do with the query portion?
[09:45:59] <gseguin> it would strip the querystring to $.find the page 
[09:46:10] <gseguin> and set toPage to that page
[09:46:19] <gseguin> then let the thing roll
[09:46:44] <scott_gonzalez> And then when did the query portion get used?
[09:46:55] <gseguin> in pagebeforeshow
[09:47:32] <gseguin> we look at the location and get the querystring to do our API call and feed our templating function with the API data
[09:47:48] <gseguin> querystring in between quotes
[09:48:01] <scott_gonzalez> So what you really want is just a hook into the nav system that lets you choose the page to show.
[09:48:01] <gseguin> the querystring in the hash
[09:48:21] <scott_gonzalez> The default behavior should be look for an exact match of the hash (no characters have special meaning)
[09:48:22] <gseguin> and we have it: pagebeforechange
[09:48:38] <_|Nix|_> gseguin: I just tested the content-widget branch and I'm not seeing any "querystring" being set to anywhere.
[09:48:41] <gseguin> but the problem is that in 1.3 the hash got stripped of the querystring
[09:49:04] <gseguin> _|Nix|_: not sure what you mean
[09:49:06] <_|Nix|_> gseguin: I have <a href="#second-page?foo=bar"> and it goes to second-page, but I don't see ?foo=bar anywhere in the DOM.
[09:49:08] <bot-t> gseguin, (Should data-foo-bar be accessible via .data( 'fooBar' ) as well as - Opened 16 months ago http://bugs.jquery.com/ticket/7328
[09:49:19] <scott_gonzalez> So in 1.3, Mobile was changed to strip ? and then search for a page.
[09:49:35] <scott_gonzalez> So it treats #foo?bar the exact same as #foo.
[09:49:36] <gseguin> scott_gonzalez: correct
[09:49:41] <scott_gonzalez> Ok, so that is the bug.
[09:49:46] <gseguin> _|Nix|_: and that's the issue
[09:49:51] <scott_gonzalez> It sounds to me like the 1.2 behavior was correct.
[09:50:07] <arschmitz>  scott_gonzalez 1.2 it threw an error
[09:50:09] <scott_gonzalez> As long as there's a publicly supported API for changing how pages are found.
[09:50:10] <_|Nix|_> gseguin: Oh, I thought johnbender had implemented that.
[09:50:24] <gseguin> scott_gonzalez: except it crapped out if you provided a "querystring"
[09:50:26] <scott_gonzalez> arschmitz: It threw an error because it couldn't find the page, right?
[09:50:38] <gseguin> scott_gonzalez: let me check
[09:50:39] <arschmitz> No
[09:50:40] <scott_gonzalez> Or did it crap out because of an invalid selector?
[09:50:45] <_|Nix|_> scott_gonzalez: 1.2 behaviour was correct, but we were using the hash as a selector without escaping the special chars and jQuery was throwing an error.
[09:50:54] <scott_gonzalez> Yeah, so that bug just needs to be fixed.
[09:51:14] <scott_gonzalez> You can also just use getElementById() if you want to avoid escaping.
[09:51:30] <_|Nix|_> scott_gonzalez: Yes, however, there is great demand from our users that we do, in fact, implement this spec-breaking behaviour of using the hash to pass query information around.
[09:51:32] <johnbender> _|Nix|_: scott_gonzalez I believe those were separate issues
[09:51:43] <arschmitz> scott_gonzalez: So question is what if anything should be cherry picked to 1.3 
[09:51:59] <gseguin> scott_gonzalez: yes: Uncaught Error: Syntax error, unrecognized expression: #two?bar 
[09:51:59] <johnbender> I could be wrong though
[09:52:17] <_|Nix|_> gseguin: Wait a sec ... 1.3 errors?
[09:52:28] <gseguin> _|Nix|_: no 1.2
[09:52:42] <scott_gonzalez> I feel like chaning anything in 1.3 would be a breaking change within the 1.3 family.
[09:52:45] <_|Nix|_> gseguin: Oh ... why do we care? Are we planning on releasing another 1.2.x?
[09:52:45] <gseguin> _|Nix|_: 1.3 just discards the "querystring"
[09:53:04] <scott_gonzalez> _|Nix|_: No, just because I was saying 1.2 was the correct behavior.
[09:53:15] <scott_gonzalez> He was just pointing out that it did in fact have a bug.
[09:53:26] <_|Nix|_> scott_gonzalez: Right ...
[09:53:27] <johnbender> the reason I say that is that I thought we also switched to selecting with getElementById to avoid the invalid selector issue
[09:53:27] <gseguin> _|Nix|_: we don't I'm trying to make a case to cherry-pick this fix into 1.3-stable
[09:53:47] <johnbender> hmm, nevermind that was for the initial reference
[09:53:53] <scott_gonzalez> Was the change announced for 1.3?
[09:53:55] <_|Nix|_> johnbender: Yes. I believe the problem whereby we were passing invalid selectors to core is solved.
[09:54:05] <gseguin> scott_gonzalez: not really
[09:54:16] <johnbender> _|Nix|_: I meant outside of stripping the querystring
[09:54:36] <_|Nix|_> johnbender: I know. I meant to add "one way or another" to my previous statement :)
[09:54:37] <johnbender> I have a feeling that got changed for a different reason
[09:54:40] <scott_gonzalez> I'm just afraid of any users who have code that uses query strings and currently works with 1.3.
[09:54:45] <johnbender> not sure why
[09:54:49] <scott_gonzalez> If they upgrade and the behavior changes, their apps can break.
[09:55:20] <_|Nix|_> scott_gonzalez: Yeah, they got used to the stripping behaviour.
[09:55:33] <scott_gonzalez> Right, I feel like it's too late to change 1.3 again.
[09:55:36] <gseguin> scott_gonzalez: if they're using "querystring" and are moving to 1.3 they're in a lot of trouble already because we strip it
[09:55:42] <scott_gonzalez> If this was like a week after 1.3.0, I could see fixing it in 1.3.1.
[09:55:52] <scott_gonzalez> gseguin: This is about people already on 1.3
[09:56:19] <uGoMobi> good point
[09:56:33] <_|Nix|_> Yeah, I think in 1.4.0 we should definitely do it "right". That is not the same as following the spec, given the demand we're facing for breaking it.
[09:56:34] <gseguin> scott_gonzalez: if they started at 1.3 I don't know how they could be using a "querystring"
[09:56:35] <scott_gonzalez> For people on 1.2, I think the message is "wait for 1.4.0"
[09:56:40] <uGoMobi> people might already have made changes when they noticed this change
[09:56:57] <scott_gonzalez> gseguin: Wasn't the whole point of the 1.3 change to make it "work"
[09:57:05] <scott_gonzalez> For some definition of workk.
[09:57:20] <gseguin> scott_gonzalez: it doesn't because we strip it
[09:57:34] <arschmitz> scott_gonzalez: No I think it was a side effect of something else
[09:57:37] <_|Nix|_> gseguin: Nono. It does work, however, the channel for passing information is not there.
[09:57:45] <gseguin> in 1.2 there was a way around it by installing a pagebeforechange handler
[09:58:01] <gseguin> _|Nix|_: define work
[09:58:12] <_|Nix|_> gseguin: There is no error thrown by core.
[09:58:23] <scott_gonzalez> Before we can even discuss cherry-picking to 1.3, we need to figure out the exact API for 1.4.
[09:58:23] <gseguin> _|Nix|_: correct but the querystring is lost
[09:58:38] <gseguin> _|Nix|_: and there is no way I'm aware of to save it
[09:58:50] <gseguin> scott_gonzalez: agreed
[09:58:54] <_|Nix|_> gseguin: So, if we make the "querystring" work in 1.4.0, we will have the solution people have been asking of us.
[09:59:20] <gseguin> _|Nix|_: correct, but for people wanting to use 1.3 and querystring?
[09:59:20] <_|Nix|_> gseguin: I don't get why we can't save it. Once the selector returns a page, just stick it in the page's data-url.
[09:59:53] <gseguin> _|Nix|_: by the time pagebeforechange is triggered the querystring is already lost
[10:00:06] <_|Nix|_> gseguin: Weeeeell, if the demand is so great, we can create an equivalent solution that's a dedicated 1.3 commit, rather than a cherry-pick.
[10:00:10] <uGoMobi> gseguin: one thing we could do is releasing 1.3.2 without the fix and then release 1.3.3 with this fix as only change
[10:00:13] <_|Nix|_> gseguin: Call it backporting the solution.
[10:00:34] <_|Nix|_> uGoMobi: Yeah, not bad.
[10:01:00] <scott_gonzalez> uGoMobi: Nope. Point releases are point releases. They don't get special meaning for having a single commit.
[10:01:34] <_|Nix|_> scott_gonzalez: It's not special because of that.
[10:01:37] <scott_gonzalez> It's either a breaking change or it's not.
[10:01:42] <uGoMobi> scott_gonzalez: true, but that prevents problems for people that already adapted to the change in 1.3.0
[10:01:44] <gseguin> uGoMobi: that would work
[10:01:54] <scott_gonzalez> It doesn't prevent anythin.g
[10:02:01] <scott_gonzalez> People will upgrade to the latest 1.3.x
[10:02:42] <uGoMobi> not if we they know the only change is a bug that they won't want to be fixed because they "fixed" it in another way
[10:02:43] <gseguin> scott_gonzalez: I don't think people who started with 1.3 can (sanely) use a querystring
[10:03:04] <_|Nix|_> Well, we could store the querystring in a place other than data-url, and then 1.3.(>1) would work just like 1.3.1, except there'd be an aditional data parameter available with the query string.
[10:03:08] <gseguin> scott_gonzalez: and so adding the non-loss of it should not be a breaking change
[10:03:17] <scott_gonzalez> Sure they can. Maybe not how you're using it, but they can definitely be doing it.
[10:03:23] <uGoMobi> scott_gonzalez: I am just suggesting this because of your point about that we are not one week after 1.3.0 anymore
[10:03:45] <arschmitz> By the way there is a work around for this in 1.3 do your own linkbindig
[10:03:51] <scott_gonzalez> But all point releases must be treated equally.
[10:04:22] <arschmitz> Save the query call change page then call navigate at page change with the query in it
[10:05:09] <arschmitz> I don't think this belongs in a point release personally
[10:05:41] <_|Nix|_> arschmitz: If we start saving the querystring, where would we place it to make it available?
[10:06:06] <arschmitz> I'm saying it's a work around for individuals not for us to implement
[10:06:41] <_|Nix|_> arschmitz: OK, so we don't really need to do anything. We could provide a link to the workaround in our resources section or something.
[10:06:57] <arschmitz> There for changing now could break people's current 1.3 apps
[10:07:32] <gseguin> arschmitz: I tried that ($.mobile.navigate) but then you introduce a delay when you click
[10:08:25] <arschmitz> gseguin: I'm not saying its a solution for you I'm saying to a case where your change would break apps the work in 1.3 currently
[10:09:22] <arschmitz> They would end up with URL #foo?bar?bar
[10:09:35] <gseguin> arschmitz: how so?
[10:10:16] <arschmitz> Because they would be adding a query string to a page that already has it
[10:10:46] <_|Nix|_> I'm starting to think that maybe we should hold true to the spec and not strip anything out of the hash but use the whole thing as a selector. Deprecate the current stripping behaviour in 1.4 and remove it in 1.5. If people want to impose their own structure on top of the hash, let them do it via workarounds. We might even highlight one or more of these workarounds in our resources section.
[10:11:23] <arschmitz> _|Nix|_: I agree stick to spec!
[10:12:15] <_|Nix|_> Heck, I could add a workaround to web-ui-fw and have people use it ;)
[10:21:49] <scott_gonzalez> Not via workarounds. We should explicitly provide an API for intercepting navigation and let users change what happens.
[10:22:00] <scott_gonzalez> Nav shouldn't be a black box.
[10:31:09] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6140: White page after "back" from iOS PDF Viewer  02http://git.io/bcglTw
[10:31:19] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6141: Flip Slider Issue  02http://git.io/hiXqtQ
[10:31:41] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6146: Clicking on a listview item before page is fully loaded produces error.  02http://git.io/2CvM5Q
[10:43:59] <_|Nix|_> uGoMobi is running around with the issue-closing BFG :)
[10:45:09] <uGoMobi> lol
[10:46:22] <uGoMobi> _|Nix|_: https://github.com/jquery/jquery-mobile/pull/6152
[10:46:22] <b-ot> uGoMobi: Pull request #6152 by nschonni (9h 20m ago): One line upstream rebase command
[10:46:45] <uGoMobi> _|Nix|_: is that in any way better or just one versus two lines?
[10:46:48] <uGoMobi> pfff
[10:48:38] <scott_gonzalez> I always use pull --rebase
[10:49:06] <scott_gonzalez> It's literally the same as the two commands you have listed now.
[10:50:05] <scott_gonzalez> Rebasing should probably just be covered in the contribute site and linked to from the readme though.
[10:50:35] <uGoMobi> scott_gonzalez: thanks, and I agree we should port this over to contribute.md
[10:50:50] <scott_gonzalez> uGoMobi: https://github.com/jquery/foundation/issues/197
[10:55:57] <_|Nix|_> uGoMobi: Meh ... Doesn't really make a difference ...
[10:56:04] <uGoMobi> scott_gonzalez: thanks, will use that intro
[10:56:16] <uGoMobi> scott_gonzalez: we might want to add rebase info here http://contribute.jquery.org/commits-and-pull-requests/
[10:56:31] <uGoMobi> _|Nix|_: thanks
[10:57:05] <uGoMobi> I actually use the two line version, but that's probably because I learned it from our readme :)
[10:58:37] <arschmitz> johnbender: Ping!
[10:58:44] <uGoMobi> hmm... still can't op myself in -meeting
[10:59:10] <_|Nix|_> uGoMobi: My approach is this: git push origin master; echo "WTF?! that didn't work?!"; git checkout -b tmp; git checkout master; git reset --hard origin/master; git pull origin master; git checkout tmp; git rebase master; git checkout master; git merge tmp; git push origin master; git branch -d tmp; :)
[10:59:20] <uGoMobi> scott_gonzalez: can you -m -meeting for me?
[10:59:34] <scott_gonzalez> uGoMobi: done
[10:59:36] <uGoMobi> _|Nix|_: lol
[10:59:41] <uGoMobi> scott_gonzalez: thanks!
[10:59:59] <uGoMobi> _|Nix|_: I think you are the one that should write the instructions!
[11:00:28] <_|Nix|_> uGoMobi: Oh no ... definitely not. I know how git works to some extent, but I dunno all the niceties of the various commands.
[11:01:02] <_|Nix|_> uGoMobi: That lengthy command line above can probably be done in two commands. Like, that rebase one.
[11:01:11] <_|Nix|_> uGoMobi: That's one command, not two :)
[11:01:18] <uGoMobi> :)
[11:01:34] <johnbender> arschmitz: pong
[11:01:51] <arschmitz> johnbender: content-widget is ready to merge right?
[11:02:09] <arschmitz> or as ready as its going to be for right now anyway
[11:02:21] <johnbender> arschmitz: yah, it was passing all the tests the last time I checked
[11:02:36] <arschmitz> johnbender: yeah i merged master and ran full suite
[11:02:37] <uGoMobi> toddmparker: scottjehl__ can you guys make it to the meeting?
[11:02:39] <arschmitz> its all green
[11:02:49] <johnbender> arschmitz: win :)
[11:03:52] <arschmitz> cool i just wanted to check with you first that there were not any smoking guns i didnt know about :)
[11:15:34] <arschmitz> _|Nix|_: 10secs on 150row table is what i was told!
[11:15:57] <_|Nix|_> arschmitz: That's terrible! 150 rows is not that much!
[11:16:32] <arschmitz> i never saw in action my self but that was the claim
[11:45:32] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 6 new commits to 06collapsible-widget-review: 02http://git.io/ZlPXyw
[11:45:32] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 149943c87 15Gabriel Schulhof: Collapsible set: Implement _destroy().
[11:45:32] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 14def71da 15Gabriel Schulhof: Moving function domEqual to testHelper.
[11:45:32] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 14e723daf 15Gabriel Schulhof: Tests: Collapsible: Convert to sync tests.
[11:59:55] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06collapsible-widget-review: 02http://git.io/2dC8NQ
[11:59:55] <jqmobilecommit> 13jquery-mobile/06collapsible-widget-review 142efcb7a 15Gabriel Schulhof: Merge branch 'master' into collapsible-widget-review
[12:00:20] <uGoMobi> toddmparker: did I misunderstood something? can't we use :after for the png fallback?
[12:02:44] <toddmparker> I *think* I heard scott_gonzalez say that we're not going with sprites so no need for a container
[12:03:32] <toddmparker> was going to add a summary to the agenda but i can't edit
[12:03:45] <uGoMobi> but we need to put the bg image on some element... we used to add a span but I prefer :after
[12:04:07] <agcolom> toddmparker: I can add stuff for you if you like as a quick workaround
[12:04:08] <uGoMobi> toddmparker: hmm... can you request permission?
[12:04:08] <scott_gonzalez> Correct; no sprites.
[12:04:40] <toddmparker> wait, got it
[12:04:43] <toddmparker> i can edit
[12:05:07] <uGoMobi> ok :)
[12:05:41] <agcolom> hurray :-)
[12:11:00] <toddmparker> ok scott_gonzalez and uGoMobi - mind reading my summary of icons and editing for clarity?
[12:11:23] <uGoMobi> toddmparker: will do, thanks for adding that!
[12:12:26] <toddmparker> np, know this is confusing!
[12:12:34] <toddmparker> think this is a nice compromise
[12:29:38] <_|Nix|_> So, are any widgets scheduled for migration as part of 1.4.0?
[12:29:46] <arschmitz> just tabs
[12:30:02] <_|Nix|_> arschmitz: So UI is relinquishing tabs and bestowing them upon us?
[12:30:06] <arschmitz> no
[12:30:13] <arschmitz> we are just pulling in ui tabs
[12:30:21] <arschmitz> so it will be on ui namespace
[12:30:26] <arschmitz> and ui core
[12:32:29] <_|Nix|_> arschmitz: OK, so CMIIW: when we move something into UI, the NS changes to UI, but when we grab something from UI, the NS stays UI. That way, eventually, the NS for all widgets will be UI, and the remainder will be mobile. 
[12:33:00] <agcolom> uGoMobi: sorry Had someone at the door...
[12:33:11] <agcolom> (my neighbor!)
[12:33:28] <uGoMobi> agcolom: np
[12:33:31] <uGoMobi> everything ok?
[12:33:42] <agcolom> nothing to discuss really.... I've been at scott_gonzalez's school all week
[12:33:56] <arschmitz> _|Nix|_: right
[12:34:00] <agcolom> to learn how code example should be written :-)
[12:34:06] <uGoMobi> oh nice :)
[12:34:10] <_|Nix|_> arschmitz: OK. Good.
[12:34:22] <agcolom> so cleaning up all around :-)
[12:34:37] <agcolom> (mobile and core api docs)
[12:34:55] <_|Nix|_> arschmitz: OTOH, why should any part of UI reside inside our repo? People should just grab that bit from UI.
[12:34:57] <uGoMobi> agcolom: yeah I saw that
[12:35:01] <uGoMobi> awesome
[12:35:20] <arschmitz> _|Nix|_: because they should be able to get it as part of the build
[12:35:27] <arschmitz> and not include another file
[12:36:01] <_|Nix|_> arschmitz: Aaah, now there's the crux of the matter! They should be able to get it as part of the build without our having to copy it! Ideally, we should have a cross-project download builder!
[12:36:15] <agcolom> the emergency is about the new neighbors... something wrong with them! So my nice neighbour came round to talk about that...
[12:36:36] <_|Nix|_> agcolom: Why does this remind me of "Invasion Of The Body Snatchers"?
[12:36:46] <uGoMobi> lol
[12:36:49] <arschmitz> _|Nix|_: yes and the idea has been discussed
[12:36:53] <arschmitz> but its not there yet
[12:37:10] <_|Nix|_> arschmitz: No, definitely not.
[12:37:31] <uGoMobi> I would be in favor of one DB at some point
[12:37:45] <agcolom> _|Nix|_: at least that'd be kind of cool ;-)
[12:37:47] <arschmitz> _|Nix|_: that will be much easier once we share a common AMD Pattern
[12:37:52] <_|Nix|_> arschmitz: Again, CMIIW: Ideally, we'd want to go with something like bower.
[12:38:03] <_|Nix|_> arschmitz: Yeah, for sure.
[12:38:19] <arschmitz> _|Nix|_: its something rxaviers has already been looking into
[12:38:29] <arschmitz> a common builder that is
[12:38:51] <_|Nix|_> I'd be happy to see that. I've had a bear of a time doing cross-project builds between web-ui-fw and jQM.
[12:39:10] <_|Nix|_> It's possible, but it requires a lot of work.
[12:39:18] <_|Nix|_> ... and my approach is probably far from ideal.
[12:40:06] <arschmitz> _|Nix|_: yes and the hard part right now would also be excluding the parts of ui that are not currently compatible with mobile
[12:41:09] <_|Nix|_> arschmitz: Actually, that's not hard to exclude if you have a include-everything file for both mobile and UI.
[12:41:41] <_|Nix|_> arschmitz: You just say include this module (which depends on stuff in both mobile and UI), and exclude the UI everything-module.
[12:41:41] <_|Nix|_> arschmitz: That will shear off the UI deps.
[12:41:56] <arschmitz> anyway moot point right now
[12:42:02] <arschmitz> its not there and wont be for some time
[12:42:03] <_|Nix|_> arschmitz: It will result in a script which has to be preceded by the inclusion of (the right parts of) UI.
[12:44:04] <uGoMobi> scott_gonzalez: is it possible to add Github username to the CLA form?
[12:44:57] <scott_gonzalez> No, we don't care about that.
[12:44:57] <scott_gonzalez> I refuse to add it.
[12:44:57] <uGoMobi> ohw
[12:45:00] <scott_gonzalez> The only thing it will do is lead to problems.
[12:45:10] <scott_gonzalez> We care about what's stored in git, which is name + email.
[12:45:25] <scott_gonzalez> Anyone can completely screw that up without changing their GitHub username.
[12:45:37] <uGoMobi> I see
[12:46:01] <scott_gonzalez> I'll be removing all the contact info fields from the CLA form though.
[12:46:12] <scott_gonzalez> So no more phone/skype/address.
[12:49:34] <uGoMobi> scott_gonzalez: so how can I check before reviewing a PR if the contributor signed the CLA? (if their GH profile isn't showing full name)
[12:49:52] <scott_gonzalez> Add .patch to the PR URL.
[12:49:59] <scott_gonzalez> That will show the git info, which is what we care about.
[12:50:04] <uGoMobi> awesome
[12:50:09] <uGoMobi> didn't know that
[12:50:18] <uGoMobi> problem resolved :)
[13:16:17] <jqmobilecommit> [13jquery-mobile] 15frequent synchronize pull request #6145: filter widget - first commit (06master...06filter_widget)  02http://git.io/Pm0lNQ
[13:18:21] <jqmobilecommit> [13jquery-mobile] 15frequent closed issue #6149: ui-screen-hidden is overruled by ui-li-static in latest  02http://git.io/zILXrg
[13:20:03] <uGoMobi> toddmparker: your summary about icons is perfectly clear
[13:20:13] <uGoMobi> toddmparker: I will make the changes to the stylesheets
[13:21:22] <uGoMobi> toddmparker: then we only need a new loader script that adds no-svg class
[13:22:46] <uGoMobi> and we need to change the build script because we have 4 instead of 1 CSS file
[13:32:23] <agcolom> uGoMobi: I'll upload the meeting minutes tomorrow
[13:32:40] <uGoMobi> agcolom: great! thanks a lot!
[13:32:47] <agcolom> no problem :-)
[13:33:35] <agcolom> I'm just on the wrong computer right now and worried of messing things up :-)
[13:33:52] <uGoMobi> haha np
[13:33:59] <uGoMobi> wrong computer?
[13:34:08] <uGoMobi> no Mac?
[14:05:57] <toddmparker> uGoMobi: I owe you a blog post, I'll try and do that tomorrow.
[14:06:23] <toddmparker> i'm going to be traveling all of next week so i'm going to miss the meeting, sorry
[14:06:29] <uGoMobi> toddmparker: thanks
[14:06:39] <uGoMobi> toddmparker: ok np
[14:07:03] <uGoMobi> toddmparker: I was looking in grunticon for unminified script
[14:07:14] <uGoMobi> grunticon repo
[14:09:06] <uGoMobi> ah found it
[14:09:30] <toddmparker> cool
[14:10:36] <uGoMobi> I might need some help with removing the data-uri png fallback
[14:14:59] <uGoMobi> arschmitz: I think that script belongs in support.js but it would have to add no-svg class to html tag
[14:15:09] <uGoMobi> arschmitz: do you see any problems?
[14:15:21] <uGoMobi> normally support stuff only returns true or false
[14:15:23] <jqmobilecommit> [13jquery-mobile] 15frequent synchronize pull request #6145: filter widget - first commit (06master...06filter_widget)  02http://git.io/Pm0lNQ
[14:17:12] <timmywil> scott_gonzalez: ping
[14:17:54] <timmywil> scott_gonzalez, Krinkle : is it just my account or is the jQuery corporate account out of testing time on browserstack?
[14:18:09] <uGoMobi> arschmitz: actually I think the test should be in support.js but the code that adds the class somewhere else... where should we put that?
[14:18:44] <Krinkle> timmywil: afaik it is per account
[14:19:01] <Krinkle> checking testswarm account now
[14:19:06] <timmywil> I think I had an issue with my testswarm installation. It seems to hang sometimes.
[14:19:20] <Krinkle> [Thu, 11 Jul 2013 21:16:34 GMT] action=fatal {"message":"Error: You have run out of API time\n    at IncomingMessage.extend.request (/usr/local/bin/tools/testswarm-browserstack/node_modules/browserstack/lib/browserstack.js:170:10)\n    at IncomingMessage.EventEmitter.emit (events.js:126:20)\n    at IncomingMessage._emitEnd (http.js:366:10)\n    at HTTPParser.parserOnMessageComplete [as onMessageComplete
[14:19:20] <Krinkle> ] (http.js:149:23)\n    at Socket.socketOnData [as ondata] (http.js:1430:20)\n    at TCP.onread (net.js:404:27)"} 
[14:19:25] <Krinkle> No, we're out
[14:19:26] <timmywil> which probably ran out all of my allotted time, but I didn't know it was possible to run out of time
[14:19:26] <Krinkle> crap
[14:19:34] <Krinkle> TestSwarm will be unable to run anything
[14:19:34] <timmywil> ah
[14:19:36] <arschmitz> uGoMobi: On my phone but I would say test in support
[14:19:41] <Krinkle> http://swarm.jquery.org/
[14:19:44] <Krinkle> 218 unrun runs
[14:19:50] <uGoMobi> arschmitz: right
[14:19:56] <arschmitz> Add class in init
[14:20:04] <timmywil> Krinkle: ok, maybe we can ask browserstack for more time
[14:20:05] <uGoMobi> arschmitz: ok, thanks
[14:20:12] <timmywil> or even unlimited time
[14:20:48] <timmywil> assuming they can kick off a spun up browser if its connected for too long
[14:20:56] <timmywil> and not doing anything
[14:21:08] <timmywil> which seems to happen sometimes
[14:21:11] <arschmitz> timmywil: Pretty sure we can just ask for more time
[14:21:11] <uGoMobi> arschmitz: was thinking about issues when you use a widget without init
[14:21:30] <Krinkle> asking 
[14:22:14] <Krinkle> dang it, now splunk ran out as well: Daily indexing volume limit exceeded today. See License Manager for details. 
[14:22:26] <arschmitz> uGoMobi: Generally that means no support either
[14:22:28] <uGoMobi> arschmitz: this would also make a lot of widget depend on support
[14:22:49] <uGoMobi> hmm
[14:23:04] <arschmitz> uGoMobi: We just need to document loader script I think
[14:23:13] <uGoMobi> right
[14:23:41] <arschmitz> That fallbacks will not work with out 
[14:24:00] <uGoMobi> arschmitz: ok, support and init it is
[14:24:01] <arschmitz> Either script or init
[14:24:21] <uGoMobi> yup
[14:35:40] <jqmobilecommit> [13jquery-mobile] 15frequent synchronize pull request #6145: filter widget - first commit (06master...06filter_widget)  02http://git.io/Pm0lNQ
[14:38:08] <jquicommit> [13jquery-ui] 15jpdelmundo opened pull request #1026: Prevent event bubbling on prev/next (06master...06patch-1)  02http://git.io/aITV5A
[18:26:22] <scott_gonzalez> timmywil Krinkle|detached: It's more likely a bug in BrowserStack than us actually being out of time. We have 6 million seconds of time on our plan.
[18:26:46] <scott_gonzalez> Which works out to 1,666 hours per month, or 69.4 days.
[18:27:14] <scott_gonzalez> I doubt we've used solid 69.4 days collectively in the past 11 days.
[20:48:05] <jqmobilecommit> 01[13jquery-mobile01] 15arschmitz pushed 1 new commit to 06master: 02http://git.io/j2VaCQ
[20:48:05] <jqmobilecommit> 13jquery-mobile/06master 1441b7530 15Alexander Schmitz: Merge branch 'master' of https://github.com/jquery/jquery-mobile into content-widget...
[21:03:03] <travis-ci> [travis-ci] jquery/jquery-mobile#469 (master - 41b7530 : Alexander Schmitz): The build was fixed.
[21:03:03] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/2ef0b6fb117d...41b7530c6153
[21:03:03] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/8994236
[23:05:01] <jqmobilecommit> [13jquery-mobile] 15Al3xIT opened issue #6157: listview - 1.3.1 - (local)  02http://git.io/w3E1hw
[23:46:01] <jqmobilecommit> [13jquery-mobile] 15uGoMobi closed issue #6157: listview - 1.3.1 - (local)  02http://git.io/w3E1hw
