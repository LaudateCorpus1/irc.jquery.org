[00:15:14] <doesallmagic2> Project jQuery UI - 1.8.x core build #608: STILL UNSTABLE in 19 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.8.x%20core/608/
[01:56:20] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot closed issue #7688: On removing a data-role=page container, styling is lost on active page. 02http://git.io/IeL0vA
[01:56:40] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot labeled issue #7688: On removing a data-role=page container, styling is lost on active page. 02http://git.io/IeL0vA
[02:16:53] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067690-collapsible-classes-option (+2 new commits): 02http://git.io/6jeNVw
[02:16:53] <jqmobilecommit> 13jquery-mobile/067690-collapsible-classes-option 14587b2bc 15Gabriel Schulhof: Collapsible: Add classes option...
[02:16:53] <jqmobilecommit> 13jquery-mobile/067690-collapsible-classes-option 1433a9517 15Gabriel Schulhof: Collapsibleset: Add classes option
[02:17:33] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7691: Collapsible: Add classes option (06ui-1-12...067690-collapsible-classes-option) 02http://git.io/zZ8bqA
[04:10:52] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened issue #7692: Listview: Add classes option 02http://git.io/e-d-tQ
[04:11:25] <gabriel_schulhof> arschmitz: Ping!
[04:26:33] <jquicommit> [13globalize] 15rxaviers closed pull request #309: Fix 308 (06master...06fix-308) 02http://git.io/wyeDoQ
[04:54:55] <arschmitz> gabriel_schulhof: Pong!
[04:59:31] <gabriel_schulhof> arschmitz: Hey!
[04:59:47] <gabriel_schulhof> arschmitz: UI has both classes for structural elements as well as classes for state.
[04:59:55] <gabriel_schulhof> arschmitz: Like, "ui-dialog-buttons", for example.
[05:00:06] <gabriel_schulhof> It's a class that indicates that "this dialog has buttons".
[05:00:39] <gabriel_schulhof> ... which, of course, influences the styling, but it does not identify any one element as being part of the dialog's structure.
[05:00:47] <gabriel_schulhof> In fact, it's applied to the same element as ui-dialog.
[05:01:09] <gabriel_schulhof> So, we have things like ui-collapsible-inset and ui-listview-inset, which similarly indicate state, rather than structure.
[05:01:16] <gabriel_schulhof> Do we declare those in the classes option as well?
[05:01:24] <gabriel_schulhof> I guess, to stay consistent with UI, we should.
[05:01:48] <gabriel_schulhof> That way, the very definition of the inset state for a listview or a collapsible is itself up for re-implementation if so desired.
[05:12:30] <arschmitz> gabriel_schulhof: you can have multiple structural classes on the same element
[05:12:52] <arschmitz> and something like inset is structure not style
[05:13:26] <arschmitz> state and structure can often be the same thing
[05:13:38] <arschmitz> like the open and closed classes on a select
[05:13:54] <arschmitz> are both state and structure because it changes the layout
[05:15:31] <gabriel_schulhof> arschmitz: Right, but some classes do not tag structural elements.
[05:16:00] <arschmitz> your missing the point
[05:16:04] <arschmitz> its not about element mapping
[05:16:08] <arschmitz> its about class mapping
[05:16:22] <arschmitz> gabriel_schulhof: it maps structural classes not elements
[05:17:20] <gabriel_schulhof> OK. I get it. I just have a different concept in mind. I those classes without the present of which it is impossible to address elements which we create at runtime as one set of classes, and all others as another set of classes.
[05:17:33] <gabriel_schulhof> I consider those classess ...
[05:17:56] <arschmitz> well thats not what the classes option does or was intended to do
[05:18:45] <arschmitz> gabriel_schulhof: on an unrelated note i found a way to eliminate virtually ALL the perf penalty of checking data options!
[05:18:57] <gabriel_schulhof> Well, it does that as well, wether intentionally or as a side-effect, if every element ends up having a class that identifies it.
[05:19:04] <gabriel_schulhof> Cool!
[05:19:07] <gabriel_schulhof> Do tell ...
[05:19:15] <arschmitz> gabriel_schulhof: its very simple and will make you feel dumb
[05:19:26] <gabriel_schulhof> arschmitz: I love those moments! Bring it on!
[05:19:26] <arschmitz> var data = this.element.data();
[05:19:50] <gabriel_schulhof> arschmitz: So, you're relying on core to assemble all the data from the attributes.
[05:20:04] <arschmitz> gabriel_schulhof: just pull the whle data object
[05:20:11] <arschmitz> then check that for the attributes
[05:20:22] <arschmitz> rather then check them one at a time
[05:20:35] <gabriel_schulhof> arschmitz: Yeah, but behind the scenes core does the same thing we've been doing, which is to grab every attribute and store it at its corresponding data key.
[05:20:39] <arschmitz> you then only call data once not in a tight loop
[05:21:03] <arschmitz> gabriel_schulhof: its much faster its only slightly slower then grabbing one
[05:21:19] <arschmitz> gabriel_schulhof: the only thing that makes it any slower is doing the type sniffing
[05:21:28] <arschmitz> gabriel_schulhof: http://jsperf.com/jqm-data-bulk
[05:21:45] <gabriel_schulhof> arschmitz: OK, good. So, presumably, core has some optimizations in place that our use of .getAttribute() in a loop did not have.
[05:22:22] <gabriel_schulhof> arschmitz: Wait a sec! That's not a fair test.
[05:22:45] <gabriel_schulhof> "many" should be repeated .getAttribute() not repeated .data()
[05:23:11] <gabriel_schulhof> arschmitz: We use $.mobile.getAttribute() in a loop, not .data()
[05:23:35] <arschmitz> which will be pointless once we dont need to care about namespace
[05:24:17] <gabriel_schulhof> arschmitz: Yes, but the point is not the namespace, but the fact that we don't call .data() repeatedly, but ultimately the native element's .getAttribute() function.
[05:24:28] <gabriel_schulhof> arschmitz: So your test is not fair.
[05:27:58] <gabriel_schulhof> arschmitz: http://jsperf.com/jqm-data-bulk/2
[05:28:12] <arschmitz> also not a fair test
[05:28:16] <gabriel_schulhof> Why not?
[05:28:19] <arschmitz> your not doing anything with the data
[05:28:22] <arschmitz> your leaving it as strings
[05:28:30] <gabriel_schulhof> arschmitz: OK. Fair point.
[05:28:41] <gabriel_schulhof> I'll introduce the type conversion from $.mobile.getAttribute()
[05:32:35] <gabriel_schulhof> Wow! OK. Let's use .data()
[05:32:38] <gabriel_schulhof> http://jsperf.com/jqm-data-bulk/2
[05:33:02] <gabriel_schulhof> I dunno how it does it, but it retrieves and type-converts attributes much, much faster than our loop!
[05:33:21] <gabriel_schulhof> Like, wow!
[05:33:23] <gabriel_schulhof> Wow!
[05:38:22] <arschmitz> gabriel_schulhof: :)
[05:38:53] <arschmitz> gabriel_schulhof: it even basicly eliminates that need for data-defaults
[05:39:14] <arschmitz> because the difference between checking 1 and all is so small
[05:39:32] <gabriel_schulhof> arschmitz: Yeah.
[05:39:49] <gabriel_schulhof> I'm refining the test to also make sure the result is the same, and eliminating $( "#test" ) in a tight loop.
[05:40:10] <gabriel_schulhof> But I no longer doubt that it'll make a big difference.
[05:40:16] <gabriel_schulhof> I just want the test to be as clean as possible.
[05:40:58] <arschmitz> gabriel_schulhof: https://gist.github.com/arschmitz/47610f7fd7bf2d9fb2d5
[05:41:20] <arschmitz> i wrote that at 1am this morning :=)
[05:41:53] <arschmitz> it is faster then our current stands alone allows custom init selectors and load order does not matter
[05:43:44] <arschmitz> gabriel_schulhof: it also gives a way to change the generated initselector
[05:44:02] <arschmitz> it requires not proxying of methods either
[05:44:39] <gabriel_schulhof> arschmitz: Don't actually run .enhanceWithin() at the bottom of the file though. pagecontainer will run that on the first page etc.
[05:44:51] <arschmitz> yeah thats because i was testing it
[05:44:51] <gabriel_schulhof> arschmitz: ... and for everybody else, let them call it when they need to.
[05:44:55] <gabriel_schulhof> Oh, OK.
[05:44:59] <gabriel_schulhof> Yeah. Looks good!
[05:45:01] <arschmitz> i wrote it in a jsbin :)
[05:45:09] <arschmitz> thats just a gist
[05:45:39] <arschmitz> gabriel_schulhof: i also like that you can do $.fn.enhancer.initGenerator = function() ....
[05:45:54] <arschmitz> to return your own init selector based on the widget name
[05:46:23] <arschmitz> gabriel_schulhof: so you can instead of data-role="widgetName" use .enhnace-widgetName
[05:46:27] <arschmitz> or whatever you want
[05:47:25] <gabriel_schulhof> arschmitz: How does the constructor tree look like when you have an extension?
[05:47:46] <gabriel_schulhof> i.e., $.widget( "mobile.listview", $.mobile.listview, { /* extension definition */ })?
[05:48:10] <arschmitz> gabriel_schulhof: thats why its recursive
[05:48:52] <gabriel_schulhof> Right, but I'm just thinking, if you ultimately run .listview() on the element because you encounter the parent, you shouldn't run .listview() on it again because you encounter the extension during your tree traversal.
[05:49:22] <arschmitz> gabriel_schulhof: you wouldnt unless you had the initselector for both on it?
[05:49:55] <arschmitz> oh you mean are there 2 entires for listivew?
[05:49:59] <gabriel_schulhof> Yep.
[05:50:16] <gabriel_schulhof> n entires, where n = the number of extensions plus the base listview class.
[05:50:28] <arschmitz> oh ill check that im not entirey sure the recursion is for inheritance
[05:50:54] <gabriel_schulhof> arschmitz: You wanna make sure you never run the same selector twice.
[05:51:43] <gabriel_schulhof> Or rather ... that you don't run [ constructor.prototype.widgetName ]() more than once.
[05:52:18] <arschmitz> gabriel_schulhof: it wouldnt be the end of the world if you did it would do nothing lol
[05:52:27] <arschmitz> but your right
[05:52:32] <gabriel_schulhof> arschmitz: Yes, but performance wise it would be terrible.
[05:52:51] <gabriel_schulhof> Superfluous selectors /and/ superfluous re-instantiations.
[05:53:01] <arschmitz> well yeah
[05:53:26] <gabriel_schulhof> OK, this is really, really cool!@
[05:53:32] <arschmitz> its fine
[05:53:39] <arschmitz> there are not dups i dont think
[05:53:48] <arschmitz> the object im logging does not show them
[05:54:03] <gabriel_schulhof> OK. Good!
[06:01:56] <arschmitz> gabriel_schulhof: looking at the factory and remembering extensions use base.protorype only inheritance goes through childConstructors 
[06:02:06] <arschmitz> gabriel_schulhof: fundamentally different things
[06:19:35] <gabriel_schulhof> arschmitz: Back to the .data() test: .data() is not picking up data-bar-2 ...
[06:19:46] <gabriel_schulhof> arschmitz: It simply doesn't show up in the hash.
[06:19:48] <gabriel_schulhof> Weird.
[06:20:17] <gabriel_schulhof> OK, you can't have '-[0-9]+
[06:20:26] <gabriel_schulhof> I mean /-[0-9]+/
[06:20:34] <scott_gonzalez> arschmitz: Figure out if http://bugs.jqueryui.com/ticket/9657 stays alive or not based on the work you're doing with animations.
[06:20:35] <arschmitz> yeah thats my bad
[06:20:38] <gabriel_schulhof> I replaced it with data-bar-u2 and it's good.
[06:20:48] <arschmitz> scott_gonzalez: looking
[06:21:25] <arschmitz> scott_gonzalez: kill it i think we are in agreement that we want to go the js route
[06:23:28] <arschmitz> scott_gonzalez: the only real downside i have heard mentioned is battery consumption
[06:23:46] <arschmitz> scott_gonzalez: which while we dont want to kill things i dont think thats our primary concern?
[06:24:16] <scott_gonzalez> I certainly hope people aren't building such highly animated pages that it's killing the battery :-P
[06:24:36] <arschmitz> scott_gonzalez: exactly
[06:24:36] <scott_gonzalez> At that point, they'll most likely be using some other animation system.
[06:25:11] <arschmitz> yeah and we are not telling people to use this
[06:25:18] <jzaefferer> arschmitz: http://bugs.jqueryui.com/ticket/10616
[06:25:21] <arschmitz> we are just useing it for our few simple animations we do
[06:25:46] <arschmitz> jzaefferer: im actually doing it for everything
[06:25:56] <arschmitz> im making a grunt-spider plugin
[06:26:05] <jzaefferer> grunt-spiderman?
[06:26:13] <arschmitz> ha ha thats a better name
[06:28:25] <jzaefferer> jasperdegroot: http://bugs.jqueryui.com/ticket/10617
[06:30:38] <gabriel_schulhof> arschmitz: $.data( this.element[ 0 ] ) is faster still: http://jsperf.com/jqm-data-bulk/4
[06:30:53] <gabriel_schulhof> arschmitz: ... and we can do that because this.element is never more than one element.
[06:31:02] <arschmitz> gabriel_schulhof: yup
[06:31:06] <arschmitz> i knew that actually
[06:31:14] <arschmitz> $.data is always much much faster
[06:31:22] <gabriel_schulhof> OK, so we have our winner.
[06:31:25] <arschmitz> we switched it in the lib everywhere like a year ago
[06:31:40] <gabriel_schulhof> This is pretty sweet!
[06:31:57] <gabriel_schulhof> Now, if we could untangle our init so as for it not to need to be order-dependent, we'd be all set.
[06:32:15] <gabriel_schulhof> ... and if I could untangle the way I talk while we're at it :)
[06:33:22] <cgack> arschmitz: should I just go ahead and remove the 1.5 deprecated items in the add classes option PR, or should that be a new issue
[06:33:53] <gabriel_schulhof> I had the same temptation, but I'd rather not creep the scope.
[06:34:01] <arschmitz> cgack: no 
[06:34:09] <arschmitz> do those as prs on master and then we can rebase
[06:34:39] <arschmitz> only things that depend on classes / new widgets should go on that branch
[06:34:51] <cgack> okay great
[06:35:22] <arschmitz> cgack: feel free to submit prs for removing anything dperecated though
[06:35:49] <gabriel_schulhof> arschmitz: I'm afraid that'll introduce divergence.
[06:36:02] <arschmitz> gabriel_schulhof: no 
[06:36:18] <arschmitz> we will rebase the branch
[06:36:29] <arschmitz> ui-1-12 we will constantly rebase with master
[06:36:47] <gabriel_schulhof> arschmitz: OK, but then we have to rebase the PRs against ui-1-12 as well.
[06:37:01] <arschmitz> gabriel_schulhof: most of those prs should not be long lived
[06:37:13] <gabriel_schulhof> arschmitz: So, we /will/ get merge conflicts at one point or another.
[06:37:26] <arschmitz> gabriel_schulhof: yeah thats fine
[06:37:46] <arschmitz> we can deal with them its inevitable when working with any long lived branch
[06:37:58] <arschmitz> conflicts dont scare me none lol
[06:38:17] <gabriel_schulhof> :)
[06:38:31] <gabriel_schulhof> OK. I'll BBIAB ... 
[06:38:38] <gabriel_schulhof> arschmitz: Awesome work on the init.
[06:40:05] <arschmitz> gabriel_schulhof: thanks
[06:44:12] <jqmobilecommit> [13jquery-mobile] 15cgack opened pull request #7693: Toolbar: add classes option (06ui-1-12...06ui-1-12) 02http://git.io/VWaXSw
[06:57:21] <arschmitz> cgack: Ping!
[06:58:56] <cgack> arschmitz: pong
[06:59:20] <arschmitz> cgack: on your pr this is not reflected in the ui widgets yet
[06:59:31] <arschmitz> but for classes blank values should be "" not null
[06:59:49] <arschmitz> so that you can do += " some value"
[07:00:28] <arschmitz> cgack: pretty minor
[07:00:30] <cgack> okay, i'll swap those out
[07:00:46] <arschmitz> oh and since your right here
[07:00:48] <cgack> is there any work in progress documentation for the classes option
[07:01:10] <arschmitz> cgack: i just noticed you useing classes in side hasclass
[07:01:26] <arschmitz> just use the _classes for adding and removing not checking
[07:01:38] <cgack> right on.
[07:02:24] <arschmitz> othen then that it looks good skimming real quick
[07:02:56] <arschmitz> cgack: im cringing about some $page stuff lol
[07:03:03] <arschmitz> but thats another issue al together
[07:03:09] <cgack> indeed
[07:39:32] <jquicommit> [13globalize] 15rxaviers opened issue #310: Date: support short and narrow dayPeriod forms (a..aaa and aaaaa) 02http://git.io/QPqsew
[07:40:22] <arschmitz> tj_vantoll: when your around i wrote up an enhancer module last night
[07:40:45] <tj_vantoll> arschmitz: Ah cool.
[07:40:49] <tj_vantoll> I've got a minute.
[07:40:57] <arschmitz> https://gist.github.com/arschmitz/47610f7fd7bf2d9fb2d5
[07:41:21] <arschmitz> tj_vantoll: a couple things i changed of note we now pay almost no penalty for checking the data-options
[07:41:38] <arschmitz> tj_vantoll: and i added an extension point for generating the initSelector
[07:41:49] <arschmitz> tj_vantoll: and its not load order dependant
[07:41:57] <arschmitz> tj_vantoll: and has no method proxying
[07:42:56] <tj_vantoll> Is it defaulting to data-ui-role rather than data-role?
[07:43:55] <arschmitz> tj_vantoll: yeah we decided that in amsterdam
[07:44:07] <tj_vantoll> ok
[07:44:07] <arschmitz> tj_vantoll: right now we allow you to set a namespace if you want
[07:44:23] <arschmitz> tj_vantoll: we are removing that and will always use ui name space
[07:44:39] <tj_vantoll> I'm trying to grok this enhanceWithin implementation.
[07:45:07] <arschmitz> its crawling the _childSelectors array on $.Widget
[07:45:42] <arschmitz> and it has to be recursive to check for inherited widgets
[07:48:05] <jquicommit> [13api.jqueryui.com] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/lcoU8A
[07:48:06] <jquicommit> 13api.jqueryui.com/06master 14725f978 15Scott González: Selectmenu: Document extension points...
[07:48:30] <tj_vantoll> arschmitz: On line 17 you use “name” and I think that should be index, even though it's not used.
[07:49:36] <jquicommit> [13api.jqueryui.com] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/hdnqYQ
[07:49:37] <jquicommit> 13api.jqueryui.com/06master 148b1b394 15Scott González: Draggable: Document relationship between appendTo and helper options...
[07:49:43] <arschmitz> tj_vantoll: ah good point
[07:50:38] <tj_vantoll> That threw me off for a minute.
[07:51:00] <arschmitz> sorry about that i wrote this between 1 and 2 am
[07:51:09] <tj_vantoll> I didn't realize exactly what _childConstructors was until now. I didn't realize it had all widget constructors in it.
[07:51:17] <arschmitz> tj_vantoll: yup
[07:51:36] <arschmitz> tj_vantoll: previously scott_gonzalez said absolutely not to using it
[07:51:53] <scott_gonzalez> tj_vantoll: https://github.com/jquery/api.jqueryui.com/pull/230#issuecomment-56187364
[07:51:54] <arschmitz> tj_vantoll: but our talk of modifying the widget factory changed his mind :) 
[07:52:27] <tj_vantoll> arschmitz: Why is it called childConstructors and not something more generic?
[07:52:30] <tj_vantoll> scott_gonzalez: Makes sense
[07:52:43] <tj_vantoll> Because it's really all constructors.
[07:52:49] <tj_vantoll> Or it seems to be.
[07:52:52] <scott_gonzalez> tj_vantoll: Ok, I'll go ahead and land that.
[07:53:21] <scott_gonzalez> tj_vantoll: It's a list of child classes.
[07:53:35] <scott_gonzalez> Like draggable inherits from mouse.
[07:53:35] <arschmitz> tj_vantoll: because thats what scott called it ?
[07:53:44] <scott_gonzalez> So it won't be listed as a child of $.Widget.
[07:53:48] <tj_vantoll> Ah children of $.Widget.
[07:53:52] <scott_gonzalez> right
[07:53:54] <tj_vantoll> ok
[07:53:56] <tj_vantoll> That makes sense.
[07:54:49] <scott_gonzalez> arschmitz: You'll want a different implementation.
[07:54:54] <scott_gonzalez> Children may have the same name.
[07:55:04] <arschmitz> scott_gonzalez: ah so i should check for dups
[07:55:08] <scott_gonzalez> Because of extensions.
[07:55:14] <scott_gonzalez> You'll always want the first that you find.
[07:55:30] <arschmitz> scott_gonzalez: ok curios i tried this with mobile
[07:55:36] <arschmitz> and nothing was ever listed twice
[07:55:40] <tj_vantoll> The children could technically change the initSelector, but that would be a stupid thing to do.
[07:55:42] <arschmitz> and we have lots of extensions
[07:55:42] <jquicommit> [13globalize] 15rxaviers closed pull request #307: specify more things on npm and bower file (06master...06master) 02http://git.io/suopZQ
[07:55:56] <scott_gonzalez> They should be children of themselves.
[07:56:18] <scott_gonzalez> So if you extend foo.bar, the current foo.bar constructor will have a child of the old foo.bar constructor.
[07:56:24] <arschmitz> tj_vantoll: not really it may for example we have toolbar which just uses data-role=toolbar
[07:56:39] <arschmitz> but fixed toolbars and data-role="header/footer"
[07:56:56] <tj_vantoll> arschmitz: Wouldn't those get different names though?
[07:57:06] <arschmitz> no its an extension
[07:57:11] <arschmitz> they are both toolbars
[07:57:29] <tj_vantoll> I see. So the enhancer would have to check for different initSelectors on duplicate names then.
[07:57:31] <arschmitz> it adds a data-fixed="true" option
[07:57:38] <arschmitz> tj_vantoll: yup
[07:57:57] <arschmitz> tj_vantoll: and the child should always win
[07:58:07] <jquicommit> [13api.jqueryui.com] 15scottgonzalez created 06selectmenu-accesskey (+2 new commits): 02http://git.io/zU5ddQ
[07:58:07] <jquicommit> 13api.jqueryui.com/06selectmenu-accesskey 14b8e26e6 15Scott González: Selectmenu: Document lack of accesskey support...
[07:58:08] <jquicommit> 13api.jqueryui.com/06selectmenu-accesskey 1469e7a7d 15Scott González: [fixup]: Updates based on review
[07:58:43] <arschmitz> so need to fix some things but i think this basic implementation meets all the things we said we wanted
[07:59:02] <arschmitz> tj_vantoll: and the perf of getCreateOptions is dramatically improved
[08:00:11] <jquicommit> [13api.jqueryui.com] 15scottgonzalez 04deleted 06selectmenu-accesskey at 1469e7a7d: 02http://git.io/OuZ31Q
[08:00:31] <jquicommit> [13api.jqueryui.com] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/iKCiHQ
[08:00:32] <jquicommit> 13api.jqueryui.com/06master 1404040c4 15Scott González: Selectmenu: Document lack of accesskey support...
[08:00:41] <arschmitz> tj_vantoll: http://jsperf.com/jqm-data-bulk/4
[08:05:01] <arschmitz> tj_vantoll: the internets be unstable today
[08:05:19] <tj_vantoll1> Stupid Comcast
[08:05:30] <arschmitz> tons of net splits
[08:05:47] <tj_vantoll> Hmmmm
[08:05:47] <tj_vantoll> That'll make this logic more fun but it should work.
[08:06:19] <arschmitz> what will make what logic more fun?
[08:06:49] <tj_vantoll1> I think that's my IRC client resending something I tried to send earlier.
[08:07:17] <tj_vantoll1> I'm confused. Anyways the last thing I asked (and am not sure if it made it) was why enhanceWithin rather than enhance?
[08:13:09] <jzaefferer> arschmitz: How's button going? Are the CSS fixes from jasperdegroot done? I'd like to review again once that is finished
[08:15:59] <scott_gonzalez> tj_vantoll1: Can we talk about menus/items docs for menu?
[08:16:23] <scott_gonzalez> These options exist just to allow arbitrary markup to be used.
[08:16:26] <arschmitz> tj_vantoll1: just because thats what its called in mobile already
[08:16:42] <scott_gonzalez> So ul/li, div/div, whatever.
[08:16:50] <scott_gonzalez> It can also be based on classes, or complex markup.
[08:16:59] <arschmitz> jzaefferer: i got distracted working on the spider 
[08:17:12] <arschmitz> ill merge those all in later today
[08:17:22] <arschmitz> jzaefferer: after lunch :-)
[08:18:02] <arschmitz> jzaefferer: want me to ping you when its done?
[08:20:40] <arschmitz> tj_vantoll1: also there is a slight semantic difference
[08:21:01] <arschmitz> because if the element you call it on has a role it self it will not be enhanced
[08:21:12] <arschmitz> it enhanced the contents of whatever you call it on
[08:21:13] <jzaefferer> arschmitz: A comment on the PR should do
[08:21:22] <arschmitz> jzaefferer: sounds good
[08:22:17] <arschmitz> tj_vantoll1: but that could be changed in the implementation as well 
[08:29:34] <tj_vantoll1> Sorry I got pulled into a meeting.
[08:29:49] <tj_vantoll1> scott_gonzalez arschmitz: I'll be back in a bit.
[08:30:09] <arschmitz> tj_vantoll1: no problem
[08:54:59] <jquicommit> [13globalize] 15automaton82 opened issue #311: globalize parseDate doesn't work with Zulu time 02http://git.io/vx6nEQ
[09:03:33] <scott_gonzalez> The following pages have just been deleted from the planning wiki:
[09:03:46] <scott_gonzalez> AMD-Support, Big Projects, Carousel, Classes Option, Color Library, Commit Message Style Guide
[09:03:50] <scott_gonzalez> Coverflow, DataVisualization, DisableUI, Dock Effect, Download Builder Rewrite, Editable, Effects
[09:03:54] <scott_gonzalez> Essential Controls List, FormValidation, FullList, Globalize, History, HtmlToData, Image Preloading
[09:03:59] <scott_gonzalez> ImageCropper, ImageMagnifier, InfiniteScrolling, Keyboard, LayoutManager, Mousewheel
[09:04:05] <scott_gonzalez> MultiCheckboxPicker, New Widget Checklist, Overlay, Pagination, Panel, Photoviewer, Popup, Preloader
[09:04:10] <scott_gonzalez> Pull Requests, RibbonToolbar, RichTextEditor, SelectComboboxAutocomplete, Shadow, Slideshow, Spindown
[09:04:16] <scott_gonzalez> StarRating, Taskbar, Template, Template-Strawman, Timepicker, Todo, Toolbar, Tree, Virtual Keyboard
[09:04:20] <scott_gonzalez> Watermark, Website Architecture, Website Triage, Wheel, Wizard
[09:04:24] <scott_gonzalez> :-)
[09:05:22] <arschmitz> bye bye!
[09:05:28] <arschmitz> nice never having looked at ya!
[09:08:00] <jquicommit> [13globalize] 15rxaviers closed issue #311: globalize parseDate doesn't work with Zulu time 02http://git.io/vx6nEQ
[09:09:48] <rxaviers> jzaefferer, https://github.com/jquery/globalize/issues/181
[09:10:50] <rxaviers> Considering that parsing ISO dates are not related to i18n, do you have anything against me closing this issue?
[09:12:33] <jquicommit> [13globalize] 15rxaviers created 06fix-298-date-parse-generator (+5 new commits): 02http://git.io/-5_Fig
[09:12:33] <jquicommit> 13globalize/06fix-298-date-parse-generator 144a17a15 15Rafael Xavier de Souza: Date: Create .dateParser()
[09:12:33] <jquicommit> 13globalize/06fix-298-date-parse-generator 14699d366 15Rafael Xavier de Souza: Date: Create .dateParser()
[09:12:33] <jquicommit> 13globalize/06fix-298-date-parse-generator 1494945de 15Rafael Xavier de Souza: Date: Create .dateParser()
[09:18:19] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06master: 02http://git.io/aFMhig
[09:18:19] <jquicommit> 13globalize/06master 14d1c3143 15Rafael Xavier de Souza: Date: Fix retrieval of all dateTimeFormats presets (amend e426762)
[09:18:54] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-297-date-format-generator from 148b6954a to 146a1a95d: 02http://git.io/BN4QXQ
[09:18:54] <jquicommit> 13globalize/06fix-297-date-format-generator 14781e220 15Rafael Xavier de Souza: Date: Create .dateFormatter()...
[09:18:54] <jquicommit> 13globalize/06fix-297-date-format-generator 141e040cf 15Rafael Xavier de Souza: (fix) Date: Create .dateFormatter()...
[09:18:54] <jquicommit> 13globalize/06fix-297-date-format-generator 142598c78 15Rafael Xavier de Souza: (fix) Date: Create .dateFormatter()...
[09:19:19] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-298-date-parse-generator from 14a866786 to 14b97174b: 02http://git.io/Sk1R3A
[09:19:19] <jquicommit> 13globalize/06fix-298-date-parse-generator 14b97174b 15Rafael Xavier de Souza: Date: Create .dateParser()...
[09:23:58] <jquicommit> [13globalize] 15rxaviers opened pull request #312: Create .dateParser() (06fix-297-date-format-generator...06fix-298-date-parse-generator) 02http://git.io/JpsYsw
[10:06:14] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-298-date-parse-generator: 02http://git.io/D5C-UA
[10:06:14] <jquicommit> 13globalize/06fix-298-date-parse-generator 144ca69c3 15Rafael Xavier de Souza: (fix) Date: Create .dateParser()
[10:39:11] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-298-date-parse-generator: 02http://git.io/8UjYWA
[10:39:11] <jquicommit> 13globalize/06fix-298-date-parse-generator 14835b29b 15Rafael Xavier de Souza: (fix) Date: Create .dateParser()
[10:49:00] <jqcommit> [13jquerymobile.com] 15arschmitz pushed 2 new commits to 06master: 02http://git.io/-CQ8TA
[10:49:00] <jqcommit> 13jquerymobile.com/06master 149a4ef9c 15Alexander Schmitz: Changelog: Added content for 1.4.4
[10:49:01] <jqcommit> 13jquerymobile.com/06master 147da2430 15Alexander Schmitz: 1.4.19
[10:49:40] <jqcommit> [13jquerymobile.com] 15arschmitz closed pull request #104: Changelog: Added content for 1.4.4 (06master...061-4-changelog) 02http://git.io/GF-sSw
[10:59:05] <arschmitz> tj_vantoll1: so what do you think should the actual element its called on should be enhanced to so $( "#foo" ).enahnce() or enhanceWithin() should #foo itself be enhanced for just its contents ?
[11:02:08] <arschmitz> tj_vantoll1: the mobile one is enhanceWithin and does not do an addBack() yours is enhance and does an add back both names make sense for their individual implmentations
[11:37:02] <tj_vantoll> arschmitz: Agreed that both make more sense. I added the addBack() because I found oftentimes wanted the element I was making the call on to also be enhanced.
[11:37:16] <tj_vantoll> For instance inserting a view in an ajax call.
[11:38:04] <arschmitz> the reasoning in mobile is basicly that this is how our old event based system worked
[11:38:20] <arschmitz> and there was always a lot of confusion about it
[11:38:39] <arschmitz> so when i made the new method i named it very clearly to show that it didnt not include the current element
[11:38:58] <arschmitz> tj_vantoll: but for new module im very open to changing this
[11:39:25] <arschmitz> it shortens the method name to be a lot more reasonable and i think is probably the more common use case also
[11:39:48] <tj_vantoll> Agreed.
[11:39:52] <arschmitz> tj_vantoll: also with the within version its impossible to target a single element
[11:40:14] <arschmitz> while you should not really do that because if your targeting a single element you should know what you want to call on it probably
[11:40:17] <arschmitz> but still
[11:40:17] <tj_vantoll> Yeah I didn't even think about that.
[11:40:41] <jquicommit> [13globalize] 15rxaviers pushed 2 new commits to 06fix-297-date-format-generator: 02http://git.io/5i_9ew
[11:40:41] <jquicommit> 13globalize/06fix-297-date-format-generator 143a2186f 15Rafael Xavier de Souza: README: Fix date parameter name: s/format/pattern
[11:40:41] <jquicommit> 13globalize/06fix-297-date-format-generator 145f054c4 15Rafael Xavier de Souza: Test: Use consistent module names
[11:40:43] <arschmitz> so i think i switch to doing the add back
[11:40:56] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-298-date-parse-generator from 14835b29b to 145c9038c: 02http://git.io/Sk1R3A
[11:40:56] <jquicommit> 13globalize/06fix-298-date-parse-generator 14b64a01d 15Rafael Xavier de Souza: Date: Create .dateParser()...
[11:40:56] <jquicommit> 13globalize/06fix-298-date-parse-generator 14eb96a2c 15Rafael Xavier de Souza: (fix) Date: Create .dateParser()
[11:40:56] <jquicommit> 13globalize/06fix-298-date-parse-generator 14bb76301 15Rafael Xavier de Souza: (fix) Date: Create .dateParser()
[11:41:25] <tj_vantoll> To me the common use case is with MVC frameworks. I have a template string that I innerHTML in. So $( "#place-this-should-go" ).html( templateString ).enhance()
[11:41:45] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-298-date-parse-generator: 02http://git.io/gaEoaQ
[11:41:45] <jquicommit> 13globalize/06fix-298-date-parse-generator 14683e15a 15Rafael Xavier de Souza: (fix) Date: Create .dateParser()
[11:41:50] <arschmitz> tj_vantoll: yup i agree
[11:42:07] <arschmitz> i think with mobile it has to do with our page model too
[11:42:20] <arschmitz> we just call it on the page in the page's create method
[11:42:28] <arschmitz> and enhance everything within the current page
[11:43:04] <arschmitz> tj_vantoll: but we can just do this.element.children().enhance();
[11:43:29] <tj_vantoll> Yeah enhance is more flexible.
[11:43:36] <arschmitz> tj_vantoll: yup
[11:43:42] <arschmitz> i think its the better api
[11:44:59] <arschmitz> tj_vantoll: also i was right about child constructors for widgets we dont need to check for dups
[11:45:21] <tj_vantoll> oh?
[11:45:27] <arschmitz> tj_vantoll: extensions dont create dups they are tracked separately on base.prototype 
[11:45:42] <tj_vantoll> Ok
[11:45:47] <tj_vantoll> That makes sense.
[11:45:48] <arschmitz> tj_vantoll: the extension constructor replaces its parent constructor in child constructors
[11:46:09] <arschmitz> so my current implementation is correct
[11:46:17] <tj_vantoll> Nice
[11:46:25] <arschmitz> yup no need for added logic
[11:47:40] <tj_vantoll> scott_gonzalez: I'm (finally) available to talk menu if you have a minute.
[11:47:43] <arschmitz> tj_vantoll: so we should be able to keep this whole thing very small and simple
[11:47:50] <tj_vantoll> arschmitz: :)
[11:48:07] <scott_gonzalez> tj_vantoll: Great. Let's talk :-)
[11:48:36] <scott_gonzalez> So menu defaults to ul/li
[11:48:36] <tj_vantoll> Basically I want to see an example of the menus and items options used at the same time in the docs.
[11:48:47] <tj_vantoll> Yep
[11:49:05] <scott_gonzalez> Well, the only way that's going to happen is in a full example in the bottom.
[11:49:16] <scott_gonzalez> Otherwise the example won't do much beyond what the docs already show.
[11:49:48] <scott_gonzalez> You don't necessarily need to use both though.
[11:50:05] <scott_gonzalez> For example, you could be using ul/li, but not have all items be menu items.
[11:50:17] <scott_gonzalez> For example, building optgroups in selectmenu.
[11:51:57] <tj_vantoll> So are menu containers also items?
[11:52:17] <scott_gonzalez> No, they're descendants of items.
[11:52:40] <tj_vantoll> And parents right?
[11:53:41] <tj_vantoll> Check out this awesome URL I just got from jsFiddle: http://jsfiddle.net/tj_vantoll/tom8atoh/
[11:53:46] <scott_gonzalez> What do you mean by menu containers?
[11:53:55] <scott_gonzalez> Let's make sure we're talking about the same thing.
[11:54:03] <scott_gonzalez> I mean the thing that options.menus points to.
[11:54:07] <tj_vantoll> Yes
[11:54:53] <tj_vantoll> My fiddle is probably as simple as you can make it to show the concept.
[11:55:13] <tj_vantoll> My concern is that people will have no idea how to do that with the current docs.
[11:55:27] <scott_gonzalez> Well, will most people want to do that?
[11:55:35] <tj_vantoll> No
[11:55:46] <tj_vantoll> So maybe it's not that big of a deal.
[11:55:51] <scott_gonzalez> I think the real question is will someone who wants to do something custom be able to quickly figure out what to do with the custom docs.
[11:56:08] <scott_gonzalez> But I think you're approaching it from the other direction.
[11:56:21] <scott_gonzalez> I don't need these, but I see them in the docs, so I want to know how to use them.
[11:56:31] <scott_gonzalez> Which is probably a legitimate thing.
[11:56:45] <tj_vantoll> Fair, and no one has complained about this yet.
[11:56:54] <jquicommit> [13globalize] 15rxaviers pushed 2 new commits to 06master: 02http://git.io/bADGdQ
[11:56:54] <jquicommit> 13globalize/06master 1478f2770 15Rafael Xavier de Souza: Examples: Move doc/hello-world/ to examples/
[11:56:54] <jquicommit> 13globalize/06master 14fb73678 15Rafael Xavier de Souza: README: Update Travis image url to show master branch
[11:57:15] <scott_gonzalez> BTW, there's a typo in your fiddle, so this isn't doing what you think it is :-P
[11:57:29] <scott_gonzalez> You have item instead of items for the option name.
[11:57:36] <scott_gonzalez> But check this out: http://jsfiddle.net/tom8atoh/1/
[11:58:12] <tj_vantoll> Ah good catch. Yeah since it default to > * it just works.
[11:58:33] <scott_gonzalez> Styled a bit better: http://jsfiddle.net/tom8atoh/2/
[11:58:48] <scott_gonzalez> Right, that's why we chose that instead of "li"
[11:58:54] <tj_vantoll> This would make for a good demo.
[11:59:00] <scott_gonzalez> Kinda like the crazy selectors in accordion.
[11:59:35] <tj_vantoll> Like a categories or headings demo.
[11:59:42] <tj_vantoll> Menu's demos are kind of slim at the moment.
[12:00:45] <scott_gonzalez> So, for a demo like that, you don't need to use the menus option: http://jsfiddle.net/tom8atoh/3/
[12:01:01] <scott_gonzalez> Which is why I was saying that you don't necessarily need to use both at the same time.
[12:01:08] <scott_gonzalez> In many cases, you'll probably only use one of them.
[12:01:33] <scott_gonzalez> Becuase you're either limiting the items, or you're just using a differnet structure where direct children for items still works.
[12:01:38] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06master: 02http://git.io/7fsZqA
[12:01:38] <jquicommit> 13globalize/06master 145a8321c 15Rafael Xavier de Souza: README: Update Travis image url to show master branch (amend)
[12:01:53] <tj_vantoll> Ok that makes sense. Anyways go ahead and land the items documentation. If nothing else it's better than not having the option documented at all :P
[12:02:24] <scott_gonzalez> Ok, we can certainly add more examples.
[12:02:37] <scott_gonzalez> I just want to make sure we're showing things that users might actually be doing.
[12:02:43] <tj_vantoll> I like having a demo for headings.
[12:03:54] <scott_gonzalez> It's a bit strange to show in the context of just menu though, right?
[12:04:03] <scott_gonzalez> Unless you're talking about optgroup type headings where there's multiple of them.
[12:04:17] <tj_vantoll> Yeah I mean multiple.
[12:04:22] <scott_gonzalez> Ok, that'd be easy.
[12:04:25] <tj_vantoll> http://jsfiddle.net/tj_vantoll/tom8atoh/4/
[12:04:25] <scott_gonzalez> I can put together a PR for that.
[12:04:38] <scott_gonzalez> That works. Just add that :-)
[12:04:54] <tj_vantoll> Ok I can put that in a file and send a PR.
[12:11:46] <tj_vantoll> I also want to send a PR for font-size: 62.5%, because ugh, but I'm guessing we'll want to wait until 1.11.2 before putting stuff like that in master.
[12:13:23] <jquicommit> [13jquery-ui] 15tjvantoll opened pull request #1347: Menu: Adding a demo showing how to create category headers (06master...06menu-category-demo) 02http://git.io/W6hbXA
[12:13:25] <tj_vantoll> https://github.com/jquery/jquery-ui/pull/1347/files
[12:16:10] <jquicommit> [13api.jqueryui.com] 15scottgonzalez closed pull request #231: Menu: Document items option (06master...06menu-items) 02http://git.io/BVjiig
[12:16:31] <scott_gonzalez> Yeah, that change will have to wait.
[12:17:31] <jquicommit> [13api.jqueryui.com] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/m9JSgA
[12:17:32] <jquicommit> 13api.jqueryui.com/06master 14ee78f51 15Scott González: 1.11.4
[12:17:40] <jquicommit> [13jquery-ui] 15tjvantoll closed pull request #1347: Menu: Adding a demo showing how to create category headers (06master...06menu-category-demo) 02http://git.io/W6hbXA
[12:24:52] <doesallmagic2> Project jQuery UI build #1460: STILL UNSTABLE in 7 min 32 sec: http://jenkins.jquery.com/job/jQuery%20UI/1460/
[12:24:53] <doesallmagic2> tj.vantoll: Menu: Adding a demo showing how to create category headers
[13:02:52] <rxaviers> scott_gonzalez, did you have the chance to transform https://github.com/scottgonzalez/debt/blob/436174fbfb40344905eec7bb7cdf7205ccb41779/tests/all.js#L41 into a grunt task?
[13:03:13] <rxaviers> or into a standalone lib/
[13:03:32] <scott_gonzalez>  rxaviers: Yeah, a while ago: https://github.com/scottgonzalez/dco
[13:03:58] <scott_gonzalez> I sent you an email that day.
[13:04:08] <scott_gonzalez> As a reply to "Fwd: JavaScript Globalization APIs"
[13:04:19] <rxaviers> aaah! I had this feeling you did it. Sorry and thanks
[13:04:43] <scott_gonzalez> In fact, just change the URL you pasted to use master instead of a SHA :-P
[13:04:46] <rxaviers> It was in my todo list, Im implanting it on cldrjs now
[13:04:56] <scott_gonzalez> The line number is even still correct :-)
[13:05:03] <scott_gonzalez> cool
[13:05:07] <rxaviers> :D
[14:29:26] <rxaviers> scott_gonzalez, https://github.com/rxaviers/grunt-dco
[14:29:42] <rxaviers> :)
