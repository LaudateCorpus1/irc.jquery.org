[00:00:01] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot labeled issue #7704: Show left and right panels simultaneously 02http://git.io/8mzzjA
[00:00:36] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot labeled issue #7704: Show left and right panels simultaneously 02http://git.io/8mzzjA
[00:29:07] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof assigned issue #7705: Navbar: Add classes option 02http://git.io/FFLOnw
[00:31:04] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067705-navbar-classes-option (+1 new commit): 02http://git.io/s1v_ew
[00:31:04] <jqmobilecommit> 13jquery-mobile/067705-navbar-classes-option 14678cea0 15Gabriel Schulhof: Navbar: Add classes option...
[00:33:23] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7706: Navbar: Add classes option (06ui-1-12...067705-navbar-classes-option) 02http://git.io/Yt_C_A
[00:43:42] <gabriel_schulhof> ?tell arschmitz It occurs to me that people might have selectors such as ":mobile-checkboxradio" in their code. If, in 1.5.0, we yank that in favour of UI checkboxradio, their selectors will break.
[00:43:42] <b-ot> gabriel_schulhof: Iâ€™ll tell arschmitz about that.
[00:44:14] <gabriel_schulhof> ?tell arschmitz same goes for the other widgets.
[00:44:14] <b-ot> gabriel_schulhof: Iâ€™ll tell arschmitz about that.
[00:45:15] <gabriel_schulhof> ?tell arschmitz We may need to element.data( "mobile-checkboxradio", element.data( "ui-checkboxradio" ) ) somewhere.
[00:45:15] <b-ot> gabriel_schulhof: Iâ€™ll tell arschmitz about that.
[00:48:51] <gabriel_schulhof> ?tell arschmitz NM that last bit.
[00:48:51] <b-ot> gabriel_schulhof: Iâ€™ll tell arschmitz about that.
[00:57:56] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof assigned issue #7707: Page: Add classes option 02http://git.io/jC05_Q
[00:58:17] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof unlabeled issue #7707: Page: Add classes option 02http://git.io/jC05_Q
[01:01:21] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot closed issue #7704: Show left and right panels simultaneously 02http://git.io/8mzzjA
[02:40:14] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067707-page-classes-option (+1 new commit): 02http://git.io/8-Ew8w
[02:40:14] <jqmobilecommit> 13jquery-mobile/067707-page-classes-option 147a2760f 15Gabriel Schulhof: Page: Add classes option...
[02:42:41] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof 04force-pushed 067707-page-classes-option from 147a2760f to 142177e9d: 02http://git.io/qbw1ww
[02:42:41] <jqmobilecommit> 13jquery-mobile/067707-page-classes-option 142177e9d 15Gabriel Schulhof: Page: Add classes option...
[02:43:16] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7708: Page: Add classes option (06ui-1-12...067707-page-classes-option) 02http://git.io/_ZLkjg
[02:45:20] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof assigned issue #7709: Panel: Add classes option 02http://git.io/-LQRBA
[03:31:34] <jqmobilecommit> [13jquery-mobile] 15sucat opened issue #7710: Popup auto disappears on Safari 02http://git.io/Fr8Xfg
[03:38:24] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot reopened issue #7682: iOS7 / iPad body height issue 02http://git.io/xxtfbw
[04:02:16] <agcolom> gabriel_schulhof: ping
[04:19:13] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-295-number-format-generator from 14577325c to 145ee182f: 02http://git.io/xE6ZFg
[04:19:13] <jquicommit> 13globalize/06fix-295-number-format-generator 144647ef0 15Rafael Xavier de Souza: Number: Create .numberFormatter()...
[04:19:13] <jquicommit> 13globalize/06fix-295-number-format-generator 148cfa487 15Rafael Xavier de Souza: (fix) Number: Create .numberFormatter()...
[04:19:13] <jquicommit> 13globalize/06fix-295-number-format-generator 14777aa9c 15Rafael Xavier de Souza: Revert "(fix) Number: Create .numberFormatter()"...
[04:19:38] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-296-number-parse-generator from 147c554c0 to 1452a129c: 02http://git.io/TKdSXg
[04:19:38] <jquicommit> 13globalize/06fix-296-number-parse-generator 1496f8ced 15Rafael Xavier de Souza: Number: Create .parseFormatter()...
[04:19:38] <jquicommit> 13globalize/06fix-296-number-parse-generator 1452a129c 15Rafael Xavier de Souza: (fix) Number: Create .parseFormatter()...
[05:03:45] <gabriel_schulhof> agcolom: What's up?
[05:10:05] <agcolom> hi, gabriel_schulhof, are you ok for me to update the api docs to 1.4.4 manually?
[05:10:29] <gabriel_schulhof> agcolom: Yes, of course! I just wish I had more time to merge the three table-related docs.
[05:11:16] <agcolom> yes, I know the feeling ;-)
[05:12:00] <gabriel_schulhof> agcolom: Well, go on, I'll get to that whenever I'm done with the classes option.
[05:12:21] <agcolom> yes, we can update the docs as often as we want...
[05:12:41] <agcolom> or do you thnink you'll have time in the next few days?
[05:13:25] <gabriel_schulhof> agcolom: Honestly, I doubt it.
[05:13:26] <agcolom> (is the change to 1.4.4 going to make it more complicated for you? If that's the case we can wait a few days if you like
[05:13:29] <agcolom> ok
[05:13:34] <gabriel_schulhof> Nono.
[05:13:38] <gabriel_schulhof> Go right ahead.
[05:13:48] <gabriel_schulhof> I can resolve any merge conflicts that may arise.
[05:13:48] <agcolom> ok, great, I'll do that now. Thanks
[05:13:57] <gabriel_schulhof> Thanks!
[05:20:14] <jqmobilecommit> [13jquery-mobile] 15knobli opened issue #7711: Swipe panel with default transition none not run properly 02http://git.io/gZBzuQ
[05:42:16] <jqcommit> [13api.jquerymobile.com] 15agcolom opened pull request #334: All: Updated jQuery Mobile version to 1.4.4 (06master...06master) 02http://git.io/UflCnw
[05:50:05] <jqcommit> [13api.jquerymobile.com] 15agcolom closed pull request #334: All: Updated jQuery Mobile version to 1.4.4 (06master...06master) 02http://git.io/UflCnw
[06:55:13] <jqcommit> [13api.jquerymobile.com] 15agcolom opened pull request #335: All: Updated jQuery Mobile version to 1.4.4 (06master...06updateVersion) 02http://git.io/_aTbog
[07:24:07] <arschmitz> gabriel_schulhof: Ping!
[07:24:07] <b-ot> arschmitz: You have 4 new messages, use `read when you wish to read them.
[07:24:54] <arschmitz> `read
[07:24:54] <b-ot> arschmitz: From gabriel_schulhof, 6h 41m ago: It occurs to me that people might have selectors such as ":mobile-checkboxradio" in their code. If, in 1.5.0, we yank that in favour of UI checkboxradio, their selectors will break.
[07:24:59] <b-ot> arschmitz: From gabriel_schulhof, 6h 40m ago: same goes for the other widgets.
[07:25:04] <b-ot> arschmitz: From gabriel_schulhof, 6h 39m ago: We may need to element.data( "mobile-checkboxradio", element.data( "ui-checkboxradio" ) ) somewhere.
[07:25:09] <b-ot> arschmitz: From gabriel_schulhof, 6h 36m ago: NM that last bit.
[07:51:48] <jperrault> are there target dates for jQuery mobile 2 and jQuery UI 1.12? 
[07:52:08] <arschmitz> jperrault: jquery mobile 2 is a long ways off do you mean 1.5?
[07:52:58] <jperrault> based on last week's meeting, I know y'all are focused on 1.5 now, even though I didn't see a date for that either.
[07:53:17] <arschmitz> jperrault: well 1.5 and 1.12 are coming out at the same time
[07:53:31] <arschmitz> jperrault: because they share most of the changes
[07:53:41] <jperrault> but yes, I did mean 2.0. even if it is "1H2015", or something.
[07:53:54] <arschmitz> jperrault: when ever jquery ui 2.0 comes out lol 
[07:54:10] <jperrault> :-)
[07:54:27] <arschmitz> jperrault: lol its all based on theme and pointer stuff for 2.0 for both projects
[07:54:43] <arschmitz> jperrault: both of which have nothing solid going on right this second
[07:55:31] <jperrault> yeah, I've listened in on a few pointer debates.  But knowing that those are the dependencies helps.  thanks
[07:55:33] <arschmitz> jperrault: but i would guess next year some time
[08:39:19] <jqcommit> [13jquerymobile.com] 15edibmx opened issue #106: two css lines  at forms where it not should be 02http://git.io/zCU5Og
[08:55:01] <agcolom> arschmitz: https://github.com/jquery/api.jquerymobile.com/pull/335 when you get a chance. Thank you.
[09:04:04] <arschmitz> agcolom: done
[10:49:56] <arschmitz> gabriel_schulhof: Ping me about all your classes prs when your around
[11:21:34] <gabriel_schulhof> arschmitz: What's up?
[11:23:02] <gabriel_schulhof> arschmitz: Actually ... sorry ... gotta brush a little girl's teeth :)
[11:29:40] <gabriel_schulhof> arschmitz: OK, back.
[11:30:14] <gabriel_schulhof> arschmitz: I actually have some discussables re: the panel classes.
[11:30:26] <arschmitz> gabriel_schulhof: not every class should map to null
[11:30:35] <arschmitz> actually no class should map to null they should be ""
[11:30:43] <gabriel_schulhof> Oh, OK.
[11:30:46] <arschmitz> but that aside many of them should map to something
[11:30:48] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067709-panel-classes-option (+1 new commit): 02http://git.io/zhXV7w
[11:30:48] <jqmobilecommit> 13jquery-mobile/067709-panel-classes-option 149d6d796 15Gabriel Schulhof: Panel: Copy old classes option keys to new keys
[11:31:00] <gabriel_schulhof> arschmitz: Well, the code resolves them to the key itself.
[11:31:03] <arschmitz> they should map the structural classes to the theme classes
[11:31:19] <arschmitz> not if you dont put a value in the option declaration
[11:31:48] <gabriel_schulhof> arschmitz: Yes it does.
[11:31:57] <gabriel_schulhof> ui-listview-item is always added.
[11:32:01] <gabriel_schulhof> For example.
[11:32:06] <arschmitz> that the structure class
[11:32:10] <arschmitz> so of course it is
[11:32:15] <gabriel_schulhof> OK, I see.
[11:32:20] <gabriel_schulhof> Alright, I think I got this.
[11:32:24] <arschmitz> but you never added any theme classes in any of them
[11:32:40] <gabriel_schulhof> The value of the various keys supplants the corresponding style options, right?
[11:33:00] <arschmitz> right
[11:33:17] <arschmitz> so thinks like shadow, corners etc
[11:33:25] <arschmitz> should always be added through classes
[11:33:31] <gabriel_schulhof> OK. We currently have code to add those separately, but that code must be made to work through the classes option.
[11:33:35] <arschmitz> they should be the values
[11:33:40] <arschmitz> right
[11:33:41] <gabriel_schulhof> OK. Understood.
[11:33:47] <gabriel_schulhof> I'll modify the PRs accordingly.
[11:33:58] <arschmitz> gabriel_schulhof: thank you
[11:34:21] <gabriel_schulhof> Two things about panel classes: 1. https://github.com/jquery/jquery-mobile/compare/ui-1-12...7709-panel-classes-option
[11:34:24] <arschmitz> gabriel_schulhof: and anything that really does not have a theme class
[11:34:46] <arschmitz> should be "" so that you can do += " new-class";
[11:35:28] <gabriel_schulhof> Right. I'll make those changes.
[11:36:29] <gabriel_schulhof> arschmitz: As you can see, for panel we need code to transfer values from the old keys to the new keys, in case the old keys have been modified during mobileinit. This code needs to stay in place during the deprecation period.
[11:36:42] <gabriel_schulhof> arschmitz: The same thing will be true for tabe.
[11:36:43] <gabriel_schulhof> table.
[11:37:26] <arschmitz> yup
[11:38:38] <gabriel_schulhof> OK. Good. I'll copy that code between panel and table.
[11:39:01] <gabriel_schulhof> Second thing.
[11:39:22] <gabriel_schulhof> Part of the abuse of the old classes keys was that some classes keys referred not to classes, but to prefixes.
[11:40:08] <gabriel_schulhof> arschmitz: https://github.com/jquery/jquery-mobile/blob/master/js/widgets/panel.js#L132 and https://github.com/jquery/jquery-mobile/blob/master/js/widgets/panel.js#L328
[11:40:20] <gabriel_schulhof> So, I'm not quite sure how to handle those.
[11:41:26] <gabriel_schulhof> Are all the variations on ui-panel-position-* and ui-panel-page-content-position-* to become keys in the new classes option?
[11:41:51] <arschmitz> um i need to think about this and look at it for a minute
[11:41:55] <gabriel_schulhof> After all, it's not like those class names are open-ended. We have a very well defined list of possible positions. Right?
[11:42:25] <gabriel_schulhof> arschmitz: http://api.jquerymobile.com/panel/#option-position
[11:42:27] <arschmitz> gabriel_schulhof: in essence any class that starts with ui-panel should be a key
[11:42:45] <gabriel_schulhof> Yeah, so I think that we need to add all possible position classes.
[11:42:57] <arschmitz> yes
[11:43:12] <gabriel_schulhof> OK. Sounds good.
[11:43:20] <arschmitz> just like if a widget has an open and closed class
[11:43:24] <arschmitz> they should both be keys
[11:43:26] <gabriel_schulhof> Yep.
[11:43:34] <gabriel_schulhof> That's actually an interesting point.
[11:43:43] <gabriel_schulhof> Our collapsible has collapsed, but it does not have expanded.
[11:43:50] <gabriel_schulhof> The absence of collapsed === expanded.
[11:44:15] <arschmitz> if there is no class there is no key
[11:44:39] <arschmitz> our css is written in the way that thats how the classes of that widget work
[11:44:41] <gabriel_schulhof> No, I know. I'm just pointing out that we've taken the default + override route.
[11:44:56] <arschmitz> yeah im not really a fan of that
[11:45:18] <arschmitz> it can make sense for things that can work css only
[11:45:19] <gabriel_schulhof> I guess it's less CSS that way ... or is it?
[11:45:52] <gabriel_schulhof> But anyway ... that's currently beyond the scope of my efforts. Just noticed a few things along the way.
[11:45:56] <arschmitz> not really it can be more
[11:46:21] <arschmitz> overrides can be a real pain in the butt
[11:48:08] <arschmitz> gabriel_schulhof: the really tricky one with classes is theme
[11:48:25] <arschmitz> because we would have to put every possibility a-z lol
[11:48:32] <gabriel_schulhof> arschmitz: Actually, we should make the distinction between swatch and theme.
[11:48:36] <arschmitz> and thats not happening
[11:48:38] <gabriel_schulhof> arschmitz: ... and style.
[11:49:08] <gabriel_schulhof> arschmitz: swatch classes can only be values of class keys IMO.
[11:49:21] <gabriel_schulhof> arschmitz: Same with ui-corner-all, ui-shadow, etc./
[11:49:44] <arschmitz> gabriel_schulhof: but what about ui-page-theme-a?
[11:49:48] <arschmitz> thats a page class
[11:50:00] <gabriel_schulhof> No. That's the value of key "ui-page"
[11:50:03] <arschmitz> so shouldnt that be a value in there
[11:50:05] <arschmitz> right
[11:50:20] <arschmitz> but there is no direct way to handle that built in
[11:51:01] <arschmitz> well i guess we would just set it to the default
[11:51:05] <arschmitz> which is a
[11:51:13] <gabriel_schulhof> arschmitz: Well, if we assign such a class as the value of a class key we're expressing the fact that it's the default value we have chosen.
[11:51:26] <arschmitz> gabriel_schulhof: yes
[11:51:28] <gabriel_schulhof> arschmitz: This only really applies to pagecontainer.
[11:51:38] <gabriel_schulhof> ... because we inherit via CSS from there.
[11:51:58] <arschmitz> gabriel_schulhof: we have the -inherit classes though
[11:52:03] <gabriel_schulhof> I think we've gone to great lengths to avoid naming swatches in option values everywhere below pagecontainer.
[11:52:17] <gabriel_schulhof> arschmitz: That's fine. They are values of their corresponding class keys.
[11:52:23] <arschmitz> right
[11:52:57] <arschmitz> gabriel_schulhof: this makes deprecating the style options easy at least
[11:53:17] <arschmitz> no negating classes or anything needed just set this other option instead :)
[11:53:38] <gabriel_schulhof> arschmitz: Well, easy-ish. Unlike the classes option, style options can be set at runtime, so I'd have to update the class key during the handling of the style option at least for 1.5.0.
[11:54:02] <arschmitz> gabriel_schulhof: well thats still undecided
[11:54:21] <arschmitz> and an individual widget can easily handle as needed for deprecation
[11:54:26] <gabriel_schulhof> arschmitz: Well, it's easy enough to implement. All you need is an extension point that'll return the element given the class key.
[11:55:08] <gabriel_schulhof> I wouldn't say easily. You need to .replace() inside the class key's value with regex that's specific to each case.
[11:56:10] <gabriel_schulhof> arschmitz: For us here in mobile, having a _setOption-able classes option would be a huge benefit in our style option deprecating efforts, because then we could truly just redirect to setting some other option.
[11:56:32] <gabriel_schulhof> arschmitz: ... although I don't think we could get away from having to do the regex-replace()-ing.
[11:56:51] <gabriel_schulhof> ... but it would help make the concept clear.
[11:56:55] <arschmitz> gabriel_schulhof: we need to see what is decided for the classes option implementation
[11:58:16] <gabriel_schulhof> arschmitz: Well, these are the changes that need to be made to the widget factory if we want a _setOption-able classes option: https://github.com/gabrielschulhof/jquery-ui/compare/051c9c10490863511d006f2a7365ab25f80bbc2c...be5a22ebc6f7db35bd5b5eff20881366cdc5e6f2#diff-6d5657679729dec110717fc4d667b823L365
[11:58:47] <gabriel_schulhof> arschmitz: ... and then, for each widget, an implementation of the extension point: https://github.com/gabrielschulhof/jquery-ui/compare/051c9c10490863511d006f2a7365ab25f80bbc2c...be5a22ebc6f7db35bd5b5eff20881366cdc5e6f2#diff-41c93b2ab23a8fe42ea81b58be43d72fL264
[11:59:21] <gabriel_schulhof> arschmitz: That diff includes implementations of the extension point for all UI widgets.
[12:02:57] <arschmitz> gabriel_schulhof: ill bring it up in the meeting tomorrow
[12:03:21] <arschmitz> gabriel_schulhof: so we can try and get an decision to finalize implementation
[12:03:28] <gabriel_schulhof> arschmitz: OK. If you want me to turn that into a PR, I can, but I need to test via the testing infrastructure rather than by injecting a script into the demos :)
[12:03:34] <arschmitz> i dont mind ugly rebases but i dont want it to get tooo crazy lol
[12:04:33] <gabriel_schulhof> arschmitz: The extension point is only necessary because there's no systematic way of mapping elements to class keys.
[12:04:48] <gabriel_schulhof> arschmitz: I mean, you can construct a hash, but then you have to keep it updated.
[12:05:09] <gabriel_schulhof> arschmitz: That's too complicated, and pointless, when you have all your elements already stored inside the widget instance anyway.
[12:05:30] <gabriel_schulhof> arschmitz: Like you have this.button, and this._wrapper, and all those. What's the point of storing another reference elsewhere.
[12:05:49] <arschmitz> yeah i think manually tracking the elements like this would be the only way
[12:05:59] <gabriel_schulhof> arschmitz: I think it's the cleanest.
[12:06:59] <gabriel_schulhof> arschmitz: ... and if we have unit tests ensuring that classes option updates happen correctly, then those should fail when someone changes the contents of one of those widget-specific variables that stores an element, and forgets to update the extension point.
[12:07:57] <gabriel_schulhof> arschmitz: Of course, we could achieve some level of systematicity if we agreed that all a widget's elements shall henceforth be stored in a plain object under this._ui.
[12:08:10] <gabriel_schulhof> arschmitz: Like, this._ui.titleBar, this._ui.wrapper, etc.
[12:08:13] <gabriel_schulhof> Or something like that.
[12:08:22] <gabriel_schulhof> But that's asking too much right now.
[12:09:03] <arschmitz> gabriel_schulhof: and you would still need some built in logic in each or would have to store multiple refrences
[12:09:17] <arschmitz> because you can have multiple keys that are on the same element
[12:11:22] <gabriel_schulhof> Yeah, I mean, after all, if things were overly systematic, widgets wouldn't be structurally quite so distinct, embodying specific structures that people want, structures that vary from one another.
[12:13:14] <gabriel_schulhof> arschmitz: I'll try to swing by tomorrow's meeting. I should actually get into that habit.
[12:19:54] <gabriel_schulhof> arschmitz: Wow! We have another construction we need to unroll into class keys: ui-panel-display-(reveal|push|overlay) and ui-panel-page-content-display-(reveal|push|overlay) ...
[12:20:35] <arschmitz> gabriel_schulhof: yup panel is complicated because of transition types
[12:21:14] <gabriel_schulhof> arschmitz: It's gonna have a big, fat, classes option.
[12:21:22] <arschmitz> yup
[12:21:43] <arschmitz> gabriel_schulhof: it reflects the api
[12:21:50] <gabriel_schulhof> Yep.
[12:23:52] <gabriel_schulhof> arschmitz: It might suck for size though. We're kinda uncompressing ... OTOH, it's full of juicy prefixes.
[15:21:31] <jquicommit> [13globalize] 15raphamorim opened pull request #314: Use curl instead of wget (06master...06master) 02http://git.io/nIzKSA
[15:25:17] <jquicommit> [13globalize] 15rxaviers closed pull request #314: Use curl instead of wget (06master...06master) 02http://git.io/nIzKSA
[18:34:37] <jquicommit> [13globalize] 15rxaviers opened issue #315: Simplify node+npm example by using cldr-data module 02http://git.io/EMnC9A
[23:31:29] <doesallmagic2> Project jQuery UI - git core build #753: STILL UNSTABLE in 30 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/753/
[23:59:19] <doesallmagic2> Project jQuery UI - 1.7.x core build #633: STILL UNSTABLE in 27 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.7.x%20core/633/
