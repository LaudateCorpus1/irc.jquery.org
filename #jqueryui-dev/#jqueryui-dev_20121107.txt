[02:29:02] <jquicommit> [jqueryui.com] jzaefferer pushed 1 new commit to master: http://git.io/tKWb5A
[02:29:02] <jquicommit> jqueryui.com/master 6e1d031 J√∂rn Zaefferer: Don't need xml stuff for this site
[04:26:55] <doesallmagic> Project jQuery UI - git core build #201: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/201/
[05:14:02] <doesallmagic> Project jQuery UI - 1.6.x core build #111: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/111/
[05:17:24] <joflow> Hello all. I'm having a conflict between this OAuth library - https://github.com/andreassolberg/jso/blob/master/jso.js and JQuery UI. Once I load Jquery UI I can't run the $.oajax function declared in the other library. jquery_noconflict() might not be the best option here ? Anyone ?
[05:56:31] <scott_gonzalez> This is a decent summary of 1.9: http://jspro.com/jquery/whats-new-in-jquery-ui-1-9/#.UJpnk6Tya4c
[05:56:37] <scott_gonzalez> Seems to mostly just be a remix of our posts.
[05:56:50] <jquicommit> [jquery-ui] kborchers force-pushed progressbar from 844c017 to 0e1ed57: http://git.io/bEkFtA
[05:56:50] <jquicommit> jquery-ui/progressbar 0e1ed57 kborchers: Progressbar: Add ability to set value: false for an indeterminate progressbar. Fixes #7624 - Progressbar: Support value: false for indeterminate progressbar
[05:57:39] <kborchers> scott_gonzalez: jzaefferer hopefully that was the right way to squash all of those commits ^
[05:58:09] <scott_gonzalez> Looks like it.
[05:59:03] <scott_gonzalez> Why are we using a flag for indeterminate?
[05:59:14] <scott_gonzalez> I didn't understand why jzaefferer suggested that.
[05:59:24] <doesallmagic> Project jQuery UI - 1.7.x core build #110: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/110/
[05:59:26] <scott_gonzalez> It's not a complex check.
[05:59:29] <scott_gonzalez> val === false
[05:59:59] <kborchers> scott_gonzalez: i think it was just to make it more explicit as to what we were checking for
[06:00:15] <scott_gonzalez> :-/
[06:00:19] <scott_gonzalez> Seems very error prone.
[06:00:28] <scott_gonzalez> Especially with the flag being set in _value().
[06:01:01] <scott_gonzalez> The indeterminate status is now a side effect of asking for the status.
[06:01:25] <scott_gonzalez> I feel like progressbar wasn't built properly.
[06:01:48] <scott_gonzalez> this.options.value should never be invalid.
[06:02:16] <scott_gonzalez> Or, rather than saying it wasn't build properly, I'll say that it was built on a bad idea from rworth :-)
[06:02:16] <kborchers> scott_gonzalez: by invalid you mean false?
[06:02:25] <scott_gonzalez> false is a valid value.
[06:02:53] <scott_gonzalez> _value() does value "normalization"
[06:03:02] <scott_gonzalez> But really it's not normalizing, it's validating.
[06:03:19] <scott_gonzalez> _value() shouldn't need to exist.
[06:03:28] <scott_gonzalez> Because this.options.value should never be invalid.
[06:03:45] <kborchers> i see
[06:03:51] <scott_gonzalez> Back in the day, Richard felt strongly that options should be allowed to be invalid.
[06:04:07] <scott_gonzalez> But that's a bad idea.
[06:04:15] <scott_gonzalez> Options represent the state of the widget.
[06:04:45] <kborchers> scott_gonzalez: so do you think my next task should be reworking that widget to get rid of _value()?
[06:04:53] <scott_gonzalez> I think a large part of Richard's concern was this:
[06:05:09] <scott_gonzalez> .progressbar().progressbar({ value: -6, min: -10 })
[06:05:21] <scott_gonzalez> value will get updated first and restricted based on the old min (0)
[06:06:03] <scott_gonzalez> But now we have _setOptions(), which allows us to hold off on restrictions.
[06:07:07] <scott_gonzalez> It might be better to get rid of _value() first, then rebase the API change on top of that.
[06:08:01] <kborchers> scott_gonzalez: ok, you want to throw some of this info in an issue and i can take a stab at it tonight and then rebase this PR?
[06:08:14] <scott_gonzalez> sure
[06:08:31] <kborchers> thanks
[06:11:34] <scott_gonzalez> You're kborches in Trac, right?
[06:11:44] <scott_gonzalez> but with proper spelling...
[06:12:24] <scott_gonzalez> k_borchers?
[06:12:42] <kborchers> k_borchers
[06:12:48] <kborchers> don't know why i did that
[06:13:06] <scott_gonzalez> heh
[06:13:07] <scott_gonzalez> http://bugs.jqueryui.com/ticket/8785
[06:13:23] <kborchers> cool, thanks
[06:13:36] <kborchers> gotta run an errand. back in a bit
[06:29:48] <doesallmagic> Yippie, build fixed!
[06:29:48] <doesallmagic> Project jQuery UI - 1.8.x core build #87: FIXED in 30 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/87/
[06:39:11] <jzaefferer> scott_gonzalez: so once #8785 is implemented, _value() will be gone?
[06:39:42] <scott_gonzalez> yes
[06:40:48] <jzaefferer> scott_gonzalez: there are six places where the indeterminate flag is now being read, you want to replace them with `this.value === false`, right?
[06:41:59] <scott_gonzalez> yes
[06:43:47] <jzaefferer> kborchers: ^^^ I still like that flag for clarity, but I see the advantage of not dragging around that extra state
[06:44:58] <scott_gonzalez> If you really want the clarity, I'd rather see a _isDeterminate() method.
[07:08:19] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/8g4GRw
[07:08:19] <jquicommit> jquery-ui/master 75bd22e Avinash R: Widget: Bridge falls back to name if there is no widgetFullName, and always stores instances in data. Fixed #8775 - Widget: Bridge fails if widgetFullName is not supplied.
[07:11:15] <kborchers> scott_gonzalez: quick question. is the effects stuff on the roadmap for 1.10 what was already done for 1.9 or is that additional cleanup/animation changes?
[07:11:23] <kborchers> gnarf: ^^
[07:11:33] <scott_gonzalez> Additional cleanup.
[07:11:39] <scott_gonzalez> We want to rewrite all effects to use clip.
[07:11:55] <scott_gonzalez> Plus bug fixes (rewriting to use clip will solve a lot of bugs on its own).
[07:12:21] <kborchers> ok, thanks. just finalizing some points in my talk
[07:16:13] <doesallmagic> Yippie, build fixed!
[07:16:13] <doesallmagic> Project jQuery UI build #774: FIXED in 7 min 56 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/774/
[07:16:13] <doesallmagic> Scott Gonz√°lez: Widget: Bridge falls back to name if there is no widgetFullName, and always stores instances in data. Fixed #8775 - Widget: Bridge fails if widgetFullName is not supplied.
[07:21:26] <scott_gonzalez> FINALLy
[07:46:28] <rxaviers> jzaefferer, hi I saw your msg on issue #25
[07:47:45] <rxaviers> Well, like we talked yesterday, I could not reproduce this error locally. Ideally, grunt lands that fix and the error will be printed in the console. While it doesn't happen, one possible way to inspect the error would be to change our grunt file to print stdin instead of stderr on error, and commit that. But, I wouldnt like to leave master with debug commits. Are we able make jenkins check a branch?
[07:57:57] <kborchers> scott_gonzalez: just to verify, by clip are we talking about css clip or building on top of the existing clip effect itself as a base? or am i completely off?
[07:58:24] <scott_gonzalez> CSS clip.
[08:00:08] <kborchers> scott_gonzalez: ok ‚Ä¶ and that is supported by all of our 1.10 browsers? for some reason i thought it was ie9+ but maybe i'm thinking of background-clip
[08:05:31] <scott_gonzalez> It's supported by all browsers, even IE6.
[08:05:51] <kborchers> ok, i was thinking of background-clip i think. but checking MDN it looks like IE didn't support comma syntax until 8 so to support 7 and 6 we would have to use non-standard space syntax
[08:06:22] <kborchers> https://developer.mozilla.org/en-US/docs/CSS/clip
[08:18:54] <ajpiano> thanks muchly jzaefferer :)
[08:43:08] <ajpiano> scott_gonzalez: gnarf can one of you give me a quick tip on what the "right way" to merge pulls is
[08:43:15] <ajpiano> obviously it's not the big green button
[08:43:39] <gnarf> ajpiano: big green button might work for you - we do some strange things :)
[08:43:46] <ajpiano> is it essentially pull, check the merge, and if it's ok, push
[08:44:12] <scott_gonzalez> The green button is annoying because of the forced merge commits.
[08:44:14] <ajpiano> it seems like jzaefferer and scott_gonzalez are categorically against the big gren button
[08:44:15] <ajpiano> ha
[08:44:16] <ajpiano> ya*
[08:44:21] <gnarf> ajpiano: our method is basically, checkout the branch locally, then merge --squash
[08:44:33] <scott_gonzalez> ajpiano: Is it a single commit?
[08:44:38] <gnarf> then commit with --author="...."
[08:44:44] <gnarf> single commit you can just cherry-pick
[08:44:47] <ajpiano> scott_gonzalez: ya it's https://github.com/jquery/web-base-template/pull/126
[08:44:50] <scott_gonzalez> If so, the "fetch and cherry-pick" section of http://wiki.jqueryui.com/w/page/40154555/Pull%20Requests should work pretty easily.
[08:44:55] <ajpiano> rad
[08:45:16] <gnarf> the "green button" merge should be okay for the content repos IMO
[08:45:49] <scott_gonzalez> It really just depends on why you hate the green button :-P
[08:45:58] <scott_gonzalez> A big part of it is that the green button means you can't test.
[08:45:58] <ajpiano> i would prefer a deeper shade of green
[08:46:08] <scott_gonzalez> That's less likely to matter for content repos.
[08:46:09] <gnarf> the merge commits are kinda annoying - but I think our manual merges are more a matter of rewriting commit messages and squashing
[08:46:19] <scott_gonzalez> And ajpiano has already tested this PR anyway.
[08:46:49] <scott_gonzalez> But yeah, for UI we're strict about commit message format.
[08:47:09] <scott_gonzalez> So that's another big part of UI's constant cherry-picking.
[09:05:10] <petro> is the jq ui meeting happening today?
[09:05:25] <scott_gonzalez> petro: Yup, it's right now in #jquery-meeting
[09:05:31] <petro> cool thanks
[09:18:34] <ajpiano> scott_gonzalez: know you're mid meeting, and this is probably more a discussion for exec board
[09:18:47] <ajpiano> but are we gonna require CLA for ppl who contribute to website design/content
[09:19:10] <scott_gonzalez> We should.
[09:19:14] <scott_gonzalez> DaveMethvin: ^
[09:19:42] <DaveMethvin> yeah ajpiano i think that was the idea
[09:19:46] <scott_gonzalez> Well, website design and website content are two different things.
[09:19:51] <DaveMethvin> content
[09:19:53] <scott_gonzalez> Content is MIT.
[09:19:56] <scott_gonzalez> Design is not.
[09:20:10] <scott_gonzalez> I think for design we want CAA.
[09:20:36] <scott_gonzalez> For minor fixes to design, we can probably get away with nothing.
[09:20:48] <scott_gonzalez> But we don't license our design at all.
[09:21:03] <scott_gonzalez> We own the full copyright and don't allow reuse.
[09:27:05] <ajpiano> okey doke
[10:02:38] <gnarf> so petro / mikesherov - clip?
[10:02:46] <petro> yep
[10:03:16] <petro> mike will give me a quick run-through of the current csshooks and i'll take it from there
[10:03:21] <gnarf> one strange thing to get figured out is that the default value for it should be rect( 0px <outerWidth>px <outerHeight>px 0px )
[10:04:03] <gnarf> in that "right" and "bottom" values are measured from the outer border edge
[10:04:25] <mikesherov> using border-box, essentially
[10:04:56] <gnarf> default is height+(padding|border)
[10:05:50] <petro> yep, auto = width/height + padding + border
[10:06:18] <mikesherov> I se
[10:06:20] <mikesherov> see*
[10:06:37] <mikesherov> so you could essentially clip the border
[10:06:44] <gnarf> yup
[10:08:27] <gnarf> http://jsfiddle.net/QphHs/
[10:08:28] <petro> blind, clip, explode, fold seem to be the only effects that would be um, affected
[10:09:08] <gnarf> the other thing that is very strange about clip
[10:09:15] <gnarf> is that it doesn't actually reduce the size of the box
[10:09:18] <gnarf> as you can see
[10:09:25] <gnarf> left and top are still relative
[10:09:56] <gnarf> to where the box SHOULD be
[10:10:25] <petro> it's like a partial visibility:hidden in that sense
[10:10:35] <gnarf> yup
[10:10:59] <mikesherov> yes
[10:11:32] <gnarf> also strange
[10:11:35] <scott_gonzalez> petro: Why not slide?
[10:11:35] <petro> should we support negative values for bottom and right that are equivalent to outerWidth/Height - bottom/right?
[10:11:42] <gnarf> it ONLY applies to absolute elements
[10:12:27] <gnarf> position: absolute that is
[10:12:34] <petro> negative values aren't supported by the spec, but it could be a convenient feature
[10:12:36] <gnarf> scott_gonzalez: ^^^ that might put a show stopper on it
[10:12:39] <scott_gonzalez> Yikes.
[10:12:43] <scott_gonzalez> That sucks.
[10:13:02] <petro> why's that? i thought we wrap animated elements?
[10:13:11] <scott_gonzalez> petro: We want to use clip so we can stop wrapping.
[10:13:34] <petro> is that the only reason to use clip?
[10:13:38] <gnarf> I don't think it will help
[10:13:53] <gnarf> its the main reason its useful IMO
[10:13:59] <scott_gonzalez> yeah
[10:14:06] <gnarf> so we can stop using containers which are breaking peoples shit
[10:14:41] <gnarf> scott_gonzalez: after looking at the crazy - I'm suddenly way less confident in the clip plan
[10:15:18] <scott_gonzalez> Yeah, we can't force elements to absolute for animations.
[10:16:20] <gnarf> http://jsfiddle.net/QphHs/1/
[10:16:23] <gnarf> :(
[10:16:26] <petro> so let me get this straight: the aversion to wrapping is that we do it inconsistently and as a result we break people's selectors?
[10:16:57] <scott_gonzalez> It's not that it's inconsistent, it's that it breaks a lot of stuff.
[10:17:03] <scott_gonzalez> Wrapping/unwrapping kills focus.
[10:17:23] <scott_gonzalez> It's breaks selectors that are applying styles using a child selector.
[10:18:00] <gnarf> petro: http://bugs.jqueryui.com/ticket/6177
[10:18:02] <scott_gonzalez> And it's really hard to properly adjust the position/dimension styles properly when wrapping.
[10:18:40] <mikesherov> clip is dead in the water, IMHO
[10:18:46] <petro> for the > selector, i believe that can be resolved through better documentation and education
[10:18:49] <mikesherov> abspos as a requirement kills it
[10:19:18] <gnarf> it also doesn't shrink the box
[10:19:21] <gnarf> which we want
[10:19:23] <gnarf> but yeah
[10:19:23] <petro> tell people that all effects wrap, so they shouldn't rely on hierarchy. that's poor CSS design in most cases anyway
[10:19:40] <mikesherov> so, that's great
[10:20:06] <mikesherov> http://bugs.jqueryui.com/ticket/7123
[10:20:08] <mikesherov> :-\
[10:20:18] <scott_gonzalez> Well, we actually wouldn't need to shrink the box if it was absolute, right :-P
[10:20:23] <mikesherov> so now we need to fix all these bugs that clip was supposed to handle
[10:20:41] <mikesherov> scott_gonzalez: true
[10:20:54] <gnarf> scott_gonzalez: true
[10:20:58] <mikesherov> here's a crazy idea:
[10:21:09] <scott_gonzalez> So, how painful is it to write effects that use clip when already absolutely positioned?
[10:21:26] <scott_gonzalez> I feel like a fair amount of animations hit that case.
[10:21:28] <gnarf> scott_gonzalez: two paths for like 8 animations vs the one?
[10:21:37] <mikesherov> clone the element as a placeholder, make it transparent, make it animate without clip, then position the original absolutely...
[10:21:52] <mikesherov> and animate the original with clip
[10:21:55] <petro> what if the element in question contains IDs
[10:22:05] <petro> then you've broken some other JS
[10:22:05] <mikesherov> petro: we nuke the id
[10:22:13] <mikesherov> removeAttr('id')
[10:22:21] <gnarf> mikesherov: I can solve 7123 when 1.8 is minimum core
[10:22:29] <gnarf> mikesherov: there are now stop handles in the queue
[10:22:30] <mikesherov> sure\
[10:22:55] <gnarf> mikesherov: so that when someone calls stop, it can call a function that stops all the animation and does it's unwrapping
[10:23:34] <_zoggy_> BREAKING:  Apple Maps projecting Barack Obama to win Brazil and Poland.
[10:23:35] <gnarf> mikesherov: see the stop hook in .delay() in core queue.js
[10:24:35] <mikesherov> gnarf: so is 7123 wontfix ?
[10:24:49] <gnarf> its still possible to duck punch stop
[10:24:58] <mikesherov> so, then we should, no?
[10:25:11] <mikesherov> just haven't gotten around to it yet :-)
[10:25:30] <gnarf> yeah - i think it's solvable
[10:25:41] <mikesherov> k
[10:26:10] <petro> mikesherov's placeholder solution sounds like it'd work well‚Ä¶thoughts?
[10:26:19] <mikesherov> oh, it's crazy
[10:26:35] <gnarf> I'd love to have the "toggle" animations play out like the ones in core should be doing anyway
[10:26:59] <gnarf> like if you did .toggle( "explode" ).stop().toggle( "explode" )
[10:27:09] <gnarf> it would "undo" the explosion
[10:27:15] <gnarf> but thats a TON of work
[10:31:39] <mikesherov> wait, why can't we do that
[10:32:01] <scott_gonzalez> https://code.google.com/p/jquery-ui/source/detail?r=4154 :-)
[10:32:11] <gnarf> we can - its just a lot of thinking mikesherov :)
[10:32:16] <mikesherov> yeah
[10:33:55] <mikesherov> and then abspos the original, use clip, and then at the end, place it back in
[10:34:03] <mikesherov> I mean, that seems fairly crazy
[10:34:51] <scott_gonzalez> Crazy, but if it works, it would solve a lot of problems.
[10:35:01] <scott_gonzalez> Maybe prototype with a single effect?
[10:35:16] <scott_gonzalez> Something simple like sliding an element in.
[10:36:43] <mikesherov> k, I gotta run, but I'll think about it
[10:37:16] <_zoggy_> chrome 23 is out now
[10:37:39] <_zoggy_>  The company has enabled GPU-accelerated video decoding for Chrome on Windows, meaning GPU-accelerated video decoding while watching videos can increase battery life significantly since dedicated graphics chips draw far less power than CPUs.
[10:38:10] <scott_gonzalez> _zoggy_: Can you keep the discussions to things that affect UI?
[10:38:31] <_zoggy_> figure you guys would like to know, as it does relate to ui (performance/testing/etc)
[10:39:09] <scott_gonzalez> I'm not sure GPU accelerated video has any affect on us :-)
[11:06:51] <gnarf> scott_gonzalez: got any npm package suggestions for sending email?
[11:07:50] <scott_gonzalez> I know of Haraka, but I think that's a server, which isn't what you want, right?
[11:08:58] <scott_gonzalez> http://stackoverflow.com/questions/4113701/sending-emails-in-node-js
[11:09:48] <gnarf> scott_gonzalez: looks nice - thanks
[11:12:47] <scott_gonzalez> mikesherov: Any idea what's going on here? http://bugs.jqueryui.com/ticket/8786
[11:13:04] <scott_gonzalez> Open http://jsfiddle.net/RdY4y/4/ in IE9 and switch to IE7 mode.
[11:13:18] <scott_gonzalez> If you search for "a" the page looks fine, if you search for "j", the page is busted.
[11:27:28] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/e0vWAg
[11:27:28] <jquicommit> jquery-ui/master 1e19e5e Sergey Kartashov: Datepicker: Added Kyrgyz localization. Fixes #8787 - Datepicker: Add Kyrgyz localization.
[11:35:57] <doesallmagic> Project jQuery UI build #775: SUCCESS in 8 min 28 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/775/
[11:35:57] <doesallmagic> Scott Gonz√°lez: Datepicker: Added Kyrgyz localization. Fixes #8787 - Datepicker: Add Kyrgyz localization.
[11:58:03] <gnarf> scott_gonzalez: https://twitter.com/gnarf37/status/266268239145885696 RT? :)
[11:59:13] <gnarf> in the meantime, I think I can figure this out
[11:59:27] <gnarf> combine a github post-receive with wiki updates and the email template node thing
[11:59:58] <scott_gonzalez> done
[12:00:17] <scott_gonzalez> The big problem is that they don't provide diffs.
[12:00:30] <gnarf> on a pull request there is a link to the diff tho
[12:00:33] <gnarf> right?
[12:01:29] <gnarf> https://github.com/jquery/infrastructure/wiki/_compare/c669075d33e44014224c65df415062e8b37f7a27%5E...c669075d33e44014224c65df415062e8b37f7a27
[12:02:43] <gnarf> that or it wouldn't be too hard to have a clone of the wiki repo and do a git fetch ; git show commit and pipe it into the email template
[12:05:49] <scott_gonzalez> Oh, right, I forgot that the wiki was a repo.
[12:06:08] <scott_gonzalez> Nevermind, the diff is an easy problem.
[12:11:25] <gnarf> i eman
[12:11:38] <gnarf> we could just get a generic git monitor tool to monitor it and email
[12:11:48] <gnarf> but i think github letting you "watch" it would be really simple too
[12:28:40] <rxaviers> jzaefferer, Hi J√∂rn! I left a question for you above, did you find it?
[12:50:10] <petersendidit> scott_gonzalez: have you had any time to reveiw https://github.com/jquery/jquery-ui/pull/790
[12:55:28] <scott_gonzalez> petersendidit: Not yet. I've had a ton of stuff to catch up on from vacation.
[12:55:38] <petersendidit> np
[12:56:19] <scott_gonzalez> Hoping to get to it this week. It's still in my inbox.
[12:56:24] <scott_gonzalez> Which is down to 20 :-)
[12:57:11] <kborchers> scott_gonzalez: so where did that clip conversation end? are we not going that route now? it's a small part of my talk about effects plans for 1.10 so want to be accurate if we're removing that from the roadmap
[12:58:23] <kborchers> i was just mentioning it so i can easily remove it if it's not the case anymore
[13:00:34] <kborchers> gnarf: ^^
[13:01:07] <gnarf> kborchers: i don't think we can use it like we wanted to
[13:01:10] <gnarf> because of what we found
[13:01:16] <gnarf> there is still looking into it to be done
[13:01:35] <kborchers> ok, reading back looks like mikesherov was going to do some testing i guess
[13:01:49] <kborchers> thanks gnarf
[13:01:58] <kborchers> i'll just not mention it for now
[13:16:49] <gnarf> rxaviers: https://github.com/jquery/download.jqueryui.com/pull/54
[13:20:10] <rxaviers> gnarf, cool thks, looking
[13:21:22] <gnarf> cc jzaefferer
[13:21:56] <gnarf> tested it with a ton of fake version #'s locally - seemed to always get the result we want
[13:22:15] <gnarf> [ '1.10.0', '1.9.1', '1.9.1pre', '1.9.1-rc2', '1.9.1-rc1', '1.9.0' ]
[13:22:26] <rxaviers> cool!
[13:23:08] <gnarf> the "pre" > "-rc2" is a potential issue, but we shouldn't ever be "building" a pre anyway
[13:23:39] <rxaviers> If you are ok with, I have some minor comments... posting
[13:26:38] <gnarf> responded ;)
[13:27:44] <gnarf> if it looks good / makes sense to you - I can land it and then fix that as well
[13:28:12] <gnarf> I'm not sure what impact that change might have tho - I assume none?
[13:28:56] <gnarf> Or is that saying that you should include core before widget before mouse/position before everything else
[13:29:11] <gnarf> if so, effect should probably be added to that too
[13:29:23] <gnarf> either way, its not a part of issue 53
[13:29:46] <rxaviers> nope, just estetic
[13:30:40] <rxaviers> gnarf, there's a node semver module, that could help with
[13:30:40] <rxaviers> semver.gt('1.2.3', '9.8.7') //
[13:30:58] <rxaviers> just thinking loud
[13:30:59] <gnarf> does it handle the -build's correctly?
[13:34:04] <rxaviers> gnarf, yes for the examples above.. Using it save us from implementing that logic. But, adds one more dependency
[13:34:39] <gnarf> shrug - scott_gonzalez?
[13:36:54] <rxaviers> gnarf, but in the overall thks, it's pretty cool and will be used further with mult versions
[13:37:15] <scott_gonzalez> gnarf: Why not use node-semver?
[13:37:38] <gnarf> scott_gonzalez: cuz i'm lame and like writing sort methods? *shrug* node-semver it is
[13:37:39] <gnarf> :)
[13:37:49] <rxaviers> :)
[13:37:56] <rxaviers> gnarf, feel free to commit that once you're done
[13:37:57] <rxaviers> tks
[13:38:34] <scott_gonzalez> And now that I've read the full backlog, I see rxaviers suggested that too.
[13:38:48] <rxaviers> :)
[13:39:22] <scott_gonzalez> Why do the releases need to be sorted?
[13:40:15] <gnarf> because it picks [0] to build?
[13:40:20] <gnarf> so we want the best
[13:40:21] <scott_gonzalez> Yeah, that's just wrong.
[13:40:21] <gnarf> not the first
[13:40:29] <scott_gonzalez> We need to be asking for a specific version.
[13:41:11] <scott_gonzalez> I mean, the bug only exists because download builder was only partly built for multiple versions and is broken.
[13:42:10] <gnarf> true
[13:42:22] <rxaviers> scott_gonzalez, download builder so far is built with the premise of only having one version. As soon as mult versions is implemented, it will be able to show all the prepared releases.
[13:43:00] <scott_gonzalez> Except that the builds are put into a directory with a version number, which seems to be for supporting multiple versions.
[13:43:02] <rxaviers> how is mult versions supposed to work? show all prepared releases or a subset of it?
[13:43:06] <scott_gonzalez> Although no other part supports multiple versions.
[13:43:35] <scott_gonzalez> As it is now, it will be a subset.
[13:43:48] <scott_gonzalez> But I'd personally prefer to have the prepared code in the repo.
[13:44:06] <scott_gonzalez> There will only ever be 2 versions to choose from.
[13:44:15] <scott_gonzalez> But download builder will be updated for ever release.
[13:44:24] <scott_gonzalez> *every
[13:44:58] <gnarf> https://github.com/gnarf37/download.jqueryui.com/commit/d907875d946ed64c0d69e538fe3cda36c9ad8401
[13:45:40] <gnarf> scott_gonzalez: just trying to land a temporary fix for the "builder isn't deploying" issue which is really "builder using wrong prepared version" issue
[13:46:05] <scott_gonzalez> sure
[13:46:10] <scott_gonzalez> Let me look at what's going on.
[13:46:23] <gnarf> it might make sense for all of the available releases to be sorted anyway
[13:46:31] <gnarf> if we ever made it a drop down to choose a build or something
[13:46:34] <gnarf> we'd want newer higher
[13:47:09] <rxaviers> yeap, that being sorted is something we definitely would have I think,
[13:48:04] <scott_gonzalez> Can you figure out the directory name based on config.jqueryUI?
[13:48:10] <jquicommit> [download.jqueryui.com] gnarf37 pushed 1 new commit to master: http://git.io/xcrLyw
[13:48:10] <jquicommit> download.jqueryui.com/master 43116ab Corey Frang: Add a sortRelease function to sort by release using semver - Fixes #53 - Closes #54...
[13:48:28] <scott_gonzalez> It's going to be two versions, and those values will be stored in a config.
[13:48:53] <scott_gonzalez> We know the directory name.
[13:49:11] <scott_gonzalez> It's jquery-ui-{config.jqueryUI}
[13:51:13] <gnarf> thats where I was leaning at first - but really, the .all() grabs all available we could add another entry that gets the current version(s) only
[13:52:10] <gnarf> for now, everything was using .all()[0] so
[13:52:34] <gnarf> this was a quick ass fix that hopefully removes a little pain from the deploy
[13:52:38] <scott_gonzalez> It shouldn't though.
[13:52:46] <gnarf> agree
[13:52:51] <gnarf> I'll make a new issue about it
[13:52:57] <scott_gonzalez> You should do release.all( "1.1.0.0" )
[13:53:01] <jquicommit> [download.jqueryui.com] rxaviers pushed 1 new commit to master: http://git.io/keuL9g
[13:53:01] <jquicommit> download.jqueryui.com/master 699e1a9 Rafael Xavier de Souza: Sort variables (minor change)
[13:53:13] <scott_gonzalez> release should be a required param when we have version support.
[13:53:24] <scott_gonzalez> For now, it should just always use config.jqueryUi.
[13:53:42] <gnarf> hrm
[13:54:07] <gnarf> i like the filter on semver argument to all
[13:54:12] <gnarf> makes sense
[13:54:25] <gnarf> but then why is it "all"
[13:54:25] <rxaviers> scott_gonzalez, yeap in fact gnarf was in your line of thought.
[13:54:41] <rxaviers> scott_gonzalez, but what's the point of having a bunch of releases prepared if it's not going use them.
[13:54:45] <rxaviers> (?)
[13:55:11] <gnarf> the old - unprepared releases are just noise probably - it could clean them up in the grunt task perhaps
[13:55:21] <gnarf> er the old prepared releases
[13:55:22] <gnarf> *
[14:07:20] <doesallmagic> Project download.jqueryui.com build #25: STILL FAILING in 33 sec: http://swarm.jquery.org:8080/job/download.jqueryui.com/25/
[14:07:20] <doesallmagic> * Corey Frang: Add a sortRelease function to sort by release using semver - Fixes #53 - Closes #54
[14:07:21] <doesallmagic> * rxaviers: Sort variables (minor change)
[14:08:44] <rxaviers> scott_gonzalez, question.. Having two or multiple jQueryUI versions available for download, should TR load the latest jQuery version for any jQueryUI version, or we're going to have a map jQueryUIVersion <-> jQueryVersion?
[14:08:46] <doesallmagic> Project download.jqueryui.com build #26: STILL FAILING in 22 sec: http://swarm.jquery.org:8080/job/download.jqueryui.com/26/
[14:09:30] <scott_gonzalez> Well, hopefully they'll always be compatible with the latest version of jQuery.
[14:09:30] <rxaviers> (so far, our ThemeRoller loads jQuery and jQueryUI js libs)
[14:09:37] <rxaviers> great
[14:09:38] <rxaviers> ok
[14:17:30] <rxaviers> gnarf, scott_gonzalez, thinking more about it, I agree it is more solid if DB simply checks config file instead of listing all release/* folders. It can warn user that a certain release has not been built yet, stuff like that.
[14:18:59] <scott_gonzalez> Is there a reason not to commit the prepared files?
[14:19:12] <rxaviers> size?
[14:19:47] <rxaviers> I think having DB to dynamically build it makes it more clean
[14:20:27] <rxaviers> I think it's easier for maintenance
[14:20:35] <scott_gonzalez> How so?
[14:21:33] <rxaviers> on new releases, you simply need to change the config file, and push that few bytes change instead of pushing all the jqueryUI repo
[14:22:19] <rxaviers> I see a overhead there
[14:22:27] <scott_gonzalez> That's not any easier or harder. This is all automated.
[14:23:03] <rxaviers> what's the benefit of commiting the whole prepared files?
[14:24:23] <scott_gonzalez> Well, it was automated: https://github.com/jquery/jquery-ui/commit/666014e8e5272f75e37a1b2987542fe552b1a082
[14:26:06] <scott_gonzalez> The only benefit is that we can make the release directory contain the files built during the actual release.
[14:26:41] <scott_gonzalez> Download builder doesn't use the jquery-ui repo for anything other than the prepare task, does it?
[14:28:11] <rxaviers> right, only for the prepare task
[14:28:19] <rxaviers> (in* the)
[14:29:09] <scott_gonzalez> Right, so download builder would actually lose the jquery-ui dependency if we committed the prepared files.
[14:29:35] <rxaviers> Im afraid we will change names, but keep doing the same thing. I mean, we'll need to automate the preparation, then commit the files.
[14:29:49] <rxaviers> it's what's being done actually. Isnt it?
[14:30:12] <rxaviers> the only diff is that we dont commit the prepared files
[14:30:27] <rxaviers> and we prepare on the fly
[14:30:56] <rxaviers> if preparing was a very expensive task, it would make sense IMO to prepare it first, commit them, then use it.
[14:31:10] <rxaviers> but, the preparation is kinda quick think
[14:31:12] <rxaviers> thing*
[14:31:13] <scott_gonzalez> Gotta go.
[14:31:19] <rxaviers> scott_gonzalez,
[14:31:31] <rxaviers> I said I would give you an estimate by today
[14:31:58] <rxaviers> It seems I will need to postpone that to tomorrow? Is that ok
[15:14:18] <jquicommit> [api.jqueryui.com] none pushed 3 new commits to master: http://git.io/GXXX5w
[15:14:18] <jquicommit> api.jqueryui.com/master cec5d5f Scott Gonz√°lez: Tooltip: Added note about disabled elements.
[15:14:18] <jquicommit> api.jqueryui.com/master 3e97a79 J√∂rn Zaefferer: Add examples for methods. Partial fix for #64
[15:14:18] <jquicommit> api.jqueryui.com/master f4a2e63 J√∂rn Zaefferer: Disable method examples for jQuery.Widget. Update to latest grunt-jquery-content
[16:14:42] <scott_gonzalez> rxaviers: That's fine.
[16:15:09] <scott_gonzalez> Also, I have no objection to doing the prepare the way it's currently done.
[18:02:50] <doesallmagic> Project jQuery UI - git core build #202: STILL FAILING in 6 min 53 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/202/
[20:11:36] <doesallmagic> Project jQuery UI - git core build #203: STILL FAILING in 8 min 42 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/203/
[21:21:00] <doesallmagic> Project jQuery UI - git core build #204: STILL FAILING in 7 min 48 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/204/
