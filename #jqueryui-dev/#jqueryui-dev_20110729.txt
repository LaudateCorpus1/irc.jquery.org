[04:58:33] <jquicommit> [jquery-ui] jzaefferer pushed 3 new commits to grid: https://github.com/jquery/jquery-ui/compare/cb3de14...7e9bce1
[04:58:33] <jquicommit> [jquery-ui/grid] Widget Editing: Introduce $.observable - Jörn Zaefferer
[04:58:33] <jquicommit> [jquery-ui/grid] Grid Editing: Use dblclick (or enter keypress) to activate inline editor, fixes various focus handling issues and makes it more usable. - Jörn Zaefferer
[04:58:33] <jquicommit> [jquery-ui/grid] Widget Editing: Update grid implementation to read type property from data-attributes and store in columns option. Expand option when specified as just a string array. - Jörn Zaefferer
[05:00:50] <jquicommit> [jquery-ui] jzaefferer pushed 1 new commit to master: https://github.com/jquery/jquery-ui/commit/982b752c3507f8e8512ca02f365a2d854d65a5cc
[05:00:50] <jquicommit> [jquery-ui/master] Merge branch 'widget-delegation' - Jörn Zaefferer
[05:03:22] <jquicommit> [jquery-ui] jzaefferer pushed 1 new commit to grid: https://github.com/jquery/jquery-ui/commit/d841380f96352d8083c08476617d94d506b3d088
[05:03:22] <jquicommit> [jquery-ui/grid] Merge branch 'master' into grid - Jörn Zaefferer
[06:39:09] <scott_gonzalez> jzaefferer: accordion isn't the only widget with configurable options, tabs has it too
[06:52:21] <scott_gonzalez> kborchers: thoughts on getting this to work with the keyboard? http://scottgonzalez.github.com/jquery-examples/autocomplete/similar-results.html
[06:52:58] <scott_gonzalez> the problem is that the focus stays in the text field
[06:53:06] <scott_gonzalez> so right/left just move the cursor
[06:53:15] <scott_gonzalez> I want to be able to expand/collapse the menu, if there is something to do
[06:53:20] <scott_gonzalez> and move the cursor otherwise
[06:53:29] <scott_gonzalez> pretty much how a toolbar works
[06:54:05] <kborchers> scott_gonzalez: looking
[07:00:36] <kborchers> hmmm, couldn't you just bind a handler to the text input's keydown(UP and DOWN) to move focus to the menu, since it looks like autocomplete already "overrides" the menu's keydown(UP and DOWN) to know to move focus (even though focus never leaves) back to the text input when at the top or bottom of the menu. that's just off the top of my head.
[07:02:54] <kborchers> basically i think it's a modification to autocomplete's keydown for UP and DOWN to to move focus to the menu if it's visible right?
[07:04:32] <kborchers> hmmm, not that simple. since that would break getting the value into the autocomplete because the menu's key handlers would take over. shoot
[07:05:15] <kborchers> you can stop me at any time if i'm just blabbering
[07:07:21] <kborchers> maybe what would work is to add cases for right and left to autocomplete (or your version of it that is)
[07:07:40] <kborchers> then you could check if the menu is visible
[07:08:04] <kborchers> then if the currently active menu item has a submenu and if so, open close the menu
[07:08:20] <kborchers> else just do default which would move the cursor in the autocomplete
[07:09:50] <scott_gonzalez> ok, so digging into this, the collapse and expand methods will actually tell me whether they did anything
[07:09:52] <scott_gonzalez> which is perfect
[07:10:08] <scott_gonzalez> because I can use that to determine if we should let the arrow keys move the caret
[07:10:29] <kborchers> right
[07:10:37] <scott_gonzalez> but now I'm running into a problem where that causes the autocomplete to select the first item in the submenu
[07:11:12] <scott_gonzalez> because it triggers focus, which we use to determine a selection in autocomplete :-/
[07:11:51] <scott_gonzalez> hmm....no, we just use focus to update the value of the field
[07:12:58] <kborchers> right it just sets value. it's actually selecting the first item in the submenu and closing the menu?
[07:13:04] <scott_gonzalez> yeah
[07:13:12] <kborchers> hmmm
[07:15:00] <scott_gonzalez> I wonder if it's not actually preventing the caret from moving
[07:15:23] <kborchers> which you can't tell cuz it changes the value right?
[07:16:10] <scott_gonzalez> ah, figured it out
[07:16:23] <scott_gonzalez> the default keydown handler in autocomplete runs a new search
[07:16:34] <kborchers> ahhh
[07:16:47] <scott_gonzalez> so the left/right handling needs to happen first and stopImmediatePropagation()
[07:17:24] <kborchers> makes sense ... glad i could be not much more help than someone to bounce your own ideas off of ;)
[07:18:09] <scott_gonzalez> heh
[07:19:29] <scott_gonzalez> http://scottgonzalez.github.com/jquery-examples/autocomplete/similar-results.html
[07:19:54] <kborchers> nice
[07:20:50] <kborchers> btw, did you get my message about flip testing. i think my changes work pretty well but i want to make sure i'm thinking off all cases where flip should/shouldn't happen
[07:23:24] <scott_gonzalez> looking at it right now
[07:24:11] <rworth> scott_gonzalez: nice. Would be really cool to do that as a slide-down rather than pop-out
[07:24:46] <rworth> so it stays within the autocomplete menu, no wider, just taller/more content (and potentially scrolling)
[07:25:01] <scott_gonzalez> the keyboard interaction on that is odd, unless you can't select the top level items
[07:25:21] <rworth> You can press tab or enter to select the top level items
[07:25:44] <rworth> but I agree, right arrow icon and right arrow key doesn't really match slide down
[07:25:48] <rworth> just a thought
[07:28:50] <scott_gonzalez> haha, that page looks like complete crap without your changes :-P
[07:29:00] <scott_gonzalez> those look right ot me
[07:29:25] <scott_gonzalez> rworth: oh, I see, same key handling, just different visual
[07:29:31] <rworth> yeah
[07:29:33] <scott_gonzalez> yeah, I can try that
[07:29:40] <scott_gonzalez> that was the original UI, I think
[07:29:48] <scott_gonzalez> I forget where this came from
[07:29:52] <kborchers> cool, thanks. on to fit
[08:13:15] <jzaefferer> scott_gonzalez: in your similar_results demo, when you hit right again on one of the submenus, it breaks
[08:15:16] <scott_gonzalez> you're talking about keyboard interaction after that, right?
[08:15:21] <scott_gonzalez> the actual right arrow key works fine
[08:19:08] <jzaefferer> type L, hit down, right, focus is now on the submenu, hit right again and it selects that value, which shouldn't happen; afterwards, when deleting a few characters and hitting down again, a bunch of errors is thrown
[08:27:06] <jzaefferer> scott_gonzalez: can you repro that?
[08:28:37] <scott_gonzalez> the selection is actually correct
[08:28:47] <scott_gonzalez> the down arrow errors are fixed now
[08:29:08] <scott_gonzalez> it doesn't actually select the item, but it does leave the modified text in the text field
[08:29:15] <scott_gonzalez> that's how the autocomplete works normally
[08:29:21] <scott_gonzalez> it's just that all options are valid
[08:29:42] <scott_gonzalez> this code only runs searches against the top level names
[08:29:50] <scott_gonzalez> which is why the menu disappears when you go too far right
[08:29:59] <scott_gonzalez> it runs a new search for the nested name, which has no results
[08:31:39] <scott_gonzalez> so that bug needs to be fixed in autocomplete
[08:31:46] <scott_gonzalez> I shouldn't have to fix it in the extension
[08:31:55] <scott_gonzalez> when we close the menu, we need to call collapseAll
[08:39:34] <scott_gonzalez> hmm....we must finally be doing something right: http://www.google.com/search?q=autocomplete
[08:40:37] <scott_gonzalez> whoa, what is Google doing to list demos in the description?
[09:23:47] <scott_gonzalez> ok, put together an example of a non-ul-based autocomplete: http://scottgonzalez.github.com/jquery-examples/autocomplete/table-display.html
[09:23:55] <scott_gonzalez> won't work until menu supports other markup
[09:43:12] <gnarf> http://stackoverflow.com/questions/6876317/has-datepicker-changed-yearrange-functionality-from-1-7-to-1-8
[09:43:27] <gnarf> anyone happen to know that one? :)
[09:44:38] <scott_gonzalez> sounds like it was broken in 1.7 :-P
[09:45:22] <scott_gonzalez> rephrasing the post: "In 1.7, you could enter values outside the allowed range and it was fine with that"
[10:49:39] <scott_gonzalez> can someone fix this right now, before I forget?
[10:49:41] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.autocomplete.js#L66
[10:49:51] <scott_gonzalez> should be camel case readOnly
[10:51:13] <scott_gonzalez> would be good to get a test for that too
[11:08:33] <gnarf> scott_gonzalez: got it
[11:08:38] <scott_gonzalez> thanks
[11:11:23] <gnarf> not having a clever unit test so just commiting the fix
[11:12:53] <jquicommit> [jquery-ui] gnarf37 pushed 1 new commit to master: https://github.com/jquery/jquery-ui/commit/38028f6de1ae1bb34a30d04cacab5d49a1433e7a
[11:12:53] <jquicommit> [jquery-ui/master] Autocomplete: Correcting readOnly from readonly - @scottgonzalez - Corey Frang
[11:56:05] <kborchers> scott_gonzalez: mind checking my fit updates and let me know if you see anything i missed here as well? http://jsfiddle.net/kborchers/Mgrvk/
[11:57:44] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: https://github.com/jquery/jquery-ui/commit/b796cc57bd1eb0557849ece88c5794b70656f5cd
[11:57:44] <jquicommit> [jquery-ui/1-8-stable] jQuery 1.6 support. - Scott González
[11:59:14] <scott_gonzalez> seems right :-)
[12:01:15] <scott_gonzalez> 1-8-stable tests don't pass in IE 6
[12:01:26] <scott_gonzalez> haven't tested anything other than Chrome and IE 6 though
[12:02:01] <scott_gonzalez> so while /tests/unit/all.html is much more useful than anything we used to have, it's still not great :-/
[12:02:50] <kborchers> ok, i was just about to say i was going to check the unit tests. i have IE 6 - 9, Chrome, FF, Safari
[12:04:07] <scott_gonzalez> if you compare # of failures for /tests/unit/all.html to /tests/unit/all.html?jquery=1.6.2 that should at least be a useful check
[12:04:20] <scott_gonzalez> 1-8-stable is still defaulting to 1.5.1 right now
[12:04:41] <kborchers> ok
[12:05:24] <scott_gonzalez> but I had all tests passing for all versions in Chrome when I committed :-)
[12:08:49] <kborchers> i think tests/unit/all.html just gave my IE6 VM a heart attack :/
[12:10:04] <scott_gonzalez> haha
[12:14:47] <kborchers> ok, even without all of the tests i think i know what is wrong.
[12:19:04] <kborchers> position does some rounding of left and top to fix http://jqbug.com/ui/5280 but those calculations seemed slightly off so i changed it to round after the margin was taken into account. that fixed my flip/fit issues but it appears that expected positions in those tests are off by a pixel or two now (which is what prompted me to change them in the first place). thoughts?
[12:19:18] <kborchers> also, the tests keep dying in the middle of the tabs tests
[12:19:36] <scott_gonzalez> kborchers: https://github.com/jquery/jquery-ui/pull/190#issuecomment-1640284
[12:19:50] <scott_gonzalez> errr....minus the comment hash :-P
[12:20:25] <scott_gonzalez> I'm headed out, gotta drive across the state
[12:20:55] <kborchers> ok, thanks.
[12:28:02] <gnarf> kborchers: if you changed something that tweaks a test, post something on the pull about it and just change the test
[12:28:37] <gnarf> it might be the reason not to pull it tho
[12:31:02] <kborchers> it's a little more involved than that. it has to do with position and it breaks a bunch of tests but I think that's going to happen anyway with that pull scott mentioned ^^^
[12:31:18] <kborchers> I think all of those tests will have to be updated
[12:31:38] <kborchers> just makes it hard to find tests that really are failing right now
[13:20:35] <gnarf> kborchers: if a test gets broken, its either because it was the wrong way to write the test, or the requirements of the library are changing
[13:20:57] <gnarf> updating the tests to account for new position calculations could be hand
[13:27:02] <kborchers> yeah, i'm adding that to my list of things i hope to do soon ;)
[13:31:15] <gnarf> heh
[16:14:03] <rubyruy> can i submit patches as github pull requests?
