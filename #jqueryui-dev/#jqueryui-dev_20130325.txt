[02:20:27] <doesallmagic> Project jQuery UI - git core build #353: STILL FAILING in 6 min 7 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/353/
[02:34:35] <doesallmagic> Project jQuery UI 1-9-stable - git core build #140: STILL FAILING in 14 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/140/
[02:50:33] <doesallmagic> Project jQuery UI - 1.6.x core build #248: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/248/
[03:16:10] <doesallmagic> Project jQuery UI - 1.7.x core build #250: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/250/
[03:46:06] <rxaviers> jzaefferer, ping
[03:46:10] <doesallmagic> Project jQuery UI - 1.8.x core build #225: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/225/
[03:46:36] <rxaviers> whenever you're available to skype about #102
[05:57:04] <jzaefferer> rxaviers: ping
[05:57:10] <rxaviers> hey
[05:57:16] <rxaviers> skype?
[05:58:57] <jzaefferer> yeah
[06:34:25] <jzaefferer> rxaviers: https://github.com/jquery/download.jqueryui.com/issues/137
[06:34:26] <b-ot> jzaefferer: Issue #137 by jzaefferer (9s ago): Prototype adding support for jQuery Mobile
[06:34:32] <jquicommit> [13download.jqueryui.com] 15jzaefferer opened issue #137: Prototype adding support for jQuery Mobile  02http://git.io/gk2xWw
[06:43:28] <jzaefferer> rxaviers: https://github.com/jquery/download.jqueryui.com/issues/138
[06:43:29] <b-ot> jzaefferer: Issue #138 by jzaefferer (6s ago): Link to this issue tracker on /downloadand and /themeroller
[06:43:37] <jquicommit> [13download.jqueryui.com] 15jzaefferer opened issue #138: Link to this issue tracker on /downloadand and /themeroller  02http://git.io/5d54ZQ
[06:58:05] <scott_gonzalez> kborchers: Did we decide not to prevent the default action on purpose? http://bugs.jqueryui.com/ticket/9178
[06:58:19] <scott_gonzalez> I feel like we had a lot of discussion about this, but I don't really remember them too well.
[06:58:52] <kborchers> scott_gonzalez: navigation menus?
[07:00:38] <kborchers> scott_gonzalez: that is the only reason off the top of my head
[07:00:48] <tj_vantoll> That makes sense.
[07:01:40] <scott_gonzalez> I thought navigation menus were bad with ARIA.
[07:01:52] <scott_gonzalez> Because native menus don't navigate.
[07:02:03] <scott_gonzalez> Maybe it's not an issue though.
[07:02:30] <scott_gonzalez> .menu().on( false )
[07:02:41] <scott_gonzalez> Is that a valid signature yet?
[07:03:40] <tj_vantoll> Should be http://api.jqueryui.com/jQuery.widget/#method-_on.
[07:04:32] <scott_gonzalez> Hmm...doesn't seem to be supported.
[07:04:32] <jquicommit> [13jquery-ui] 15UltCombo opened pull request #945: Button: Fixed #7665 - Radio button & checkboxes ignore mouseclicks for minor mouse movements (2) (06master...06button7665)  02http://git.io/ZzMRxA
[07:04:47] <scott_gonzalez> DaveMethvin: Did we decide not to implement .on( false ) ?
[07:04:53] <scott_gonzalez> I remember discussion about it.
[07:05:03] <scott_gonzalez> But I think it was a long time ago.
[07:05:21] <tj_vantoll> Ah .on, not ._on.
[07:05:22] <DaveMethvin> do you mean .on("click", false) ?
[07:05:32] <DaveMethvin> it's there
[07:05:58] <scott_gonzalez> Oh, heh, yes.
[07:06:05] <scott_gonzalez> I suppose it would help to specify the event type.
[07:06:39] <tj_vantoll> http://api.jquery.com/on/ "The value false is also allowed as a shorthand for a function that simply does return false."
[07:07:58] <scott_gonzalez> Yeah, now that my brain is workig properly, I see that :-P
[07:21:30] <scott_gonzalez> One of these days, I'm going to have a heart attack because of <base>
[07:21:59] <scott_gonzalez> I did a lot of deleting before clicking the "Comment" button: https://github.com/jquery/jquery-ui/pull/853#issuecomment-15395703
[07:22:00] <b-ot> scott_gonzalez: Pull request #853 by blesh (3mon 3w ago): Support for <base /> tag.
[07:23:09] <scott_gonzalez> This guy joined GitHub specifically to rant about <base> o_O
[07:24:37] <tj_vantoll> Wow.
[07:24:46] <scott_gonzalez> My first response was just going to be "CONFIRM!"
[07:24:55] <scott_gonzalez> Then it quickly turned into a big rant.
[07:25:25] <scott_gonzalez> Then I realized this isn't going to end well, and I deleted pretty much everything.
[07:27:53] <tj_vantoll> I like their statement that a small code change is akin to playing god.
[07:52:12] <scott_gonzalez> Heh, yeah, especially when all we've done is fix a bug and followed standards.
[07:54:20] <tj_vantoll> Should've replied: "WE HATH DECREED IT. IT SHALT BE SO."
[08:30:50] <scott_gonzalez> So, who deleted the GH comment?
[08:59:52] <DaveMethvin> scott_gonzalez can you open #jquery-meeting for me?
[09:00:07] <DaveMethvin> my sysop seems to have fallen off
[09:00:42] <jquicommit> [13jquery-ui] 15gordalina opened pull request #946: Prevent update of active datepicker if a background datepicker was updated (06master...06prevent-active-dp-update)  02http://git.io/P8LXDw
[09:11:12] <scott_gonzalez> jzaefferer: Just got the GitHub survey you were talking about.
[09:11:24] <scott_gonzalez> This is the group that I did a phone interview with.
[09:11:51] <scott_gonzalez> Actually, Corey and Dave did interviews with them.
[09:11:58] <scott_gonzalez> My interview was with CMU.
[09:12:06] <scott_gonzalez> But they all happened at the same time.
[09:12:29] <scott_gonzalez> I forget what the CMU people said when I asked if they were working with Drexel.
[10:22:54] <DaveMethvin> scott_gonzalez is the wp-login for jquery.org/updates dead now?
[10:24:00] <scott_gonzalez> hmm....I dunno.
[10:31:49] <scott_gonzalez> People never cease to amaze me: `new $.Zebra_Accordion($('.Zebra_Accordion'));`
[10:32:38] <DaveMethvin> that is just stupid!  
[10:32:42] <DaveMethvin> zebras can't play accordions
[10:33:13] <DaveMethvin> i once had a horse that played a mean oboe
[11:18:09] <jzaefferer> scott_gonzalez: Can you respond to the comment here, part 2? I've replied to this and would like to have your confirmation:  http://wiki.jqueryui.com/w/page/12138056/Selectmenu#comment1361961761
[11:20:47] <scott_gonzalez> jzaefferer: Replied.
[11:20:53] <scott_gonzalez> It's not something we want to handle.
[11:20:59] <scott_gonzalez> Your comment about using appendTo was correct.
[11:21:24] <rxaviers> jzaefferer, scott_gonzalez, I've put a comment at https://github.com/jquery/download.jqueryui.com/issues/122#issuecomment-15411059
[11:21:28] <b-ot> rxaviers: Issue #122 by jzaefferer (1w 4d ago): Move release build from jQuery UI's grunt to here
[11:21:36] <rxaviers> If you have anything against please say it now :P
[11:21:49] <rxaviers> (Im working on that direction)
[11:23:20] <scott_gonzalez> rxaviers: There is VERY little benefit to moving it out of jquery-ui.
[11:23:54] <rxaviers> :'(, why?
[11:24:14] <rxaviers> why not?
[11:24:22] <scott_gonzalez> Well, you're the one that wants to move it. So you tell me what the benefits are.
[11:24:47] <scott_gonzalez> You have 2 points listed in the comment.
[11:25:02] <scott_gonzalez> Not needing to create a directory and using package.json for dependencies.
[11:25:10] <scott_gonzalez> If the script is automating those, why does it matter?
[11:25:39] <scott_gonzalez> I actually view these as negatives.
[11:26:01] <scott_gonzalez> Unless you're suggesting that we should create a fresh clone of the repo for every release.
[11:26:36] <rxaviers> Those two points are immediate ones. No, there's no need to clone it everytime. That's the point. 
[11:26:42] <scott_gonzalez> The purpose of doing releases from a fresh directory is to ensure cleanliness.
[11:26:42] <rxaviers> The release is an independent thing
[11:27:38] <scott_gonzalez> So the suggestion is to create a new repo which you would clone locally and keep forever.
[11:27:54] <scott_gonzalez> And then the script would need to create a clean environment on every run.
[11:28:08] <rxaviers> The script would still do it, yeap.
[11:28:30] <scott_gonzalez> Ok, so the package.json benefit is moot.
[11:28:56] <scott_gonzalez> `npm install` from inside a script isn't worse than parsing `npm ls` to verify cleanliness.
[11:29:05] <rxaviers> The release in a independent thing. The new repo holds its configs and its dependencies.
[11:29:18] <rxaviers> the release is an*
[11:29:33] <scott_gonzalez> It already has all of that. In a single file.
[11:30:25] <rxaviers> It's weird having all sorts of things inside DownloadBuilder, which are not actually download builder.
[11:30:49] <scott_gonzalez> If they're not part of download builder, then they shouldn't be in there.
[11:30:52] <scott_gonzalez> Put them in the release script.
[11:31:25] <rxaviers> and where can we place (version control) that script?
[11:31:37] <scott_gonzalez> Don't move it.
[11:31:42] <scott_gonzalez> It's already version controlled.
[11:31:55] <rxaviers> and still in download builder :P
[11:32:11] <scott_gonzalez> I don't know what code you're referring to.
[11:32:16] <rxaviers> is it expensive having multiple repos?
[11:32:37] <scott_gonzalez> I honestly don't know what problem you're trying to solve.
[11:32:46] <scott_gonzalez> I don't think you outlined the actual problem you want to solve in your comment.
[11:33:00] <scott_gonzalez> What currently exists in download builder that shouldn't?
[11:33:15] <jzaefferer> scott_gonzalez: some guy is loading menubar from view.jqueryui.com, emailed me about his site breaking one or two days ago m(
[11:33:18] <rxaviers> It simply has nothing to do with download bulder
[11:33:24] <scott_gonzalez> jzaefferer: haha
[11:33:35] <scott_gonzalez> rxaviers: WHAT has nothing to do with download builder?
[11:33:46] <scott_gonzalez> I don't know what you're referring to.
[11:34:17] <rxaviers> the release script in very independent in its own. The only thing it uses from Download Builder is the theme lib.
[11:34:41] <scott_gonzalez> Nobody said to move the release script to download builder.
[11:34:47] <scott_gonzalez> I certainly don't want that to happen.
[11:35:01] <jzaefferer> That's what I said today to Rafael as well :-)
[11:35:19] <rxaviers> You said to move the release grunt tasks to DB, right?
[11:36:05] <scott_gonzalez> Yes, we talked about moving release* tasks from grunt to DB.
[11:36:12] <rxaviers> please, correct me if Im wrong. But, the idea was to move release processes away from jQueryUI
[11:36:13] <scott_gonzalez> We never said to move the release script itself.
[11:36:32] <scott_gonzalez> Sounds like you're misunderstanding.
[11:36:39] <rxaviers> yeap, we talked about grunt release tasks*
[11:36:40] <scott_gonzalez> We don't want to move the release process away from jquery-ui
[11:36:52] <rxaviers> although, release grunt tasks are simply part of the release script
[11:36:53] <scott_gonzalez> We want to remove any duplication that currently exists across repos.
[11:37:02] <rxaviers> does any other code uses the grunt release tasks?
[11:37:06] <scott_gonzalez> no
[11:37:16] <rxaviers> The release script and the release grunt tasks are very tied together
[11:37:31] <scott_gonzalez> The goal is to remove duplication.
[11:37:33] <scott_gonzalez> That's it.
[11:37:53] <rxaviers> Why are they grunt tasks and not part of the script?
[11:37:55] <scott_gonzalez> Moving the release script doesn't help that in any way.
[11:38:21] <scott_gonzalez> Because grunt is how we were doing releases.
[11:38:30] <scott_gonzalez> The release script is how we automate the full process.
[11:38:46] <scott_gonzalez> Now that we have a release script, there's no need to do a lot of this in grunt.
[11:38:52] <scott_gonzalez> It doesn't matter where that code lives.
[11:38:58] <scott_gonzalez> As long as it's not duplicated across repos.
[11:39:15] <scott_gonzalez> We've had a single build system forever.
[11:39:19] <scott_gonzalez> It used to be Ant, it's not Grunt.
[11:39:36] <scott_gonzalez> The release process is a very large, not-just-code process.
[11:39:46] <scott_gonzalez> release.js is just the second incarnation of automating as much as possible.
[11:39:59] <scott_gonzalez> s/not Grunt/now Grunt/
[11:45:32] <jzaefferer> rxaviers: Scott is talking about the duplication for concatenating and minifying files, copying them to the right location, creating a zip file. All the tasks that the release and download builder have in common
[11:46:13] <jzaefferer> On the other hand, download builder doesn't have to create a git tag or branch or generate a changelog, so that stays in the release script
[11:46:45] <scott_gonzalez> Right. I don't believe that the release script has any duplication with grunt or download builder.
[11:46:50] <scott_gonzalez> But grunt does have duplication with download builder.
[11:50:03] <rxaviers> I thought that you guys were concerned with the duplicate code + having release code/automation in jQueryUI
[11:50:16] <scott_gonzalez> No, we want the release script in jquery-ui.
[11:50:29] <rxaviers> I can move the duplicate parts and leave the not-duplicate stuff there
[11:50:35] <rxaviers> non*-dupl
[11:51:00] <rxaviers> Moving the release script out of jquery-ui would be much cleaner in a separate repo
[11:51:15] <rxaviers> but, that's not the point. So, alright
[11:53:03] <rxaviers> (I mean, if it was to move all the release stuff away from jquery-ui, than it would make sense not to move it all into DB)
[11:53:03] <scott_gonzalez> It's not actually cleaner, but that's not something I want to continue discussing.
[11:53:25] <scott_gonzalez> If something doesn't make sense in DB, don't put it there.
[11:53:29] <scott_gonzalez> This is about removing duplication.
[11:53:36] <scott_gonzalez> Not arbitrarily getting code out of jquery-ui.
[11:54:13] <scott_gonzalez> But, FWIW, download builder is intended to be useful as a low level tool.
[13:42:27] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/D9rOFw
[13:42:27] <jquicommit> 13jquery-ui/06master 1453c88a7 15Suhail Alkowaileet: Datepicker demo: Corrected the Arabic word for Arabic.
[13:46:21] <mikesherov> scott_gonzalez: got a minute?
[13:46:26] <scott_gonzalez> yeah
[13:46:34] <mikesherov> wanted to discuss the approach on a few tickets I have.
[13:47:02] <mikesherov> http://bugs.jqueryui.com/ticket/6871
[13:47:45] <mikesherov> scott_gonzalez: just not sure what the correct behavior should be if the original is removed from the dom during drag...
[13:48:09] <mikesherov> I'd want to know the case for all "helper" options
[13:48:38] <doesallmagic> Project jQuery UI build #1040: STILL FAILING in 6 min 24 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/1040/
[13:48:38] <doesallmagic> Scott González: Datepicker demo: Corrected the Arabic word for Arabic.
[13:49:05] <scott_gonzalez> Hmm...
[13:49:28] <mikesherov> yeah, hmmmm is right
[13:49:29] <scott_gonzalez> I think the fiddle example is silly. I was expecting this to remove on stop.
[13:49:53] <mikesherov> so what happens is the original gets removed which calls destroy...
[13:50:01] <scott_gonzalez> right
[13:50:20] <scott_gonzalez> I think that is a silly thing to do (removing the original mid-drag.
[13:50:55] <scott_gonzalez> But, ignoring of that, if there's a helper, we probably want to keep it around until the interaciton is over.
[13:51:02] <scott_gonzalez> s/of//
[13:51:22] <scott_gonzalez> So _destroy() probably shouldn't do anything with the helper.
[13:51:32] <mikesherov> and then, does it to the whole revert, etc.
[13:51:38] <mikesherov> ?
[13:51:45] <scott_gonzalez> Yeah, I think we let it do its thing.
[13:51:55] <scott_gonzalez> Whatever the end result is should always be correct.
[13:52:04] <scott_gonzalez> Either the helper reverts and goes away as per normal.
[13:52:22] <scott_gonzalez> Or the helper gets cloned via some stop handler and the original helper still goes away as per normal.
[13:52:33] <mikesherov> right, so removing mid-drag should theoretically shouldn't call _destroy… it should then destroy after stop()?
[13:52:37] <scott_gonzalez> Or there is no helper, and the whole thing just stops on the .remove() call (which is pretty shitty UX).
[13:53:02] <scott_gonzalez> Let me see what draggable is doing on destroy right now.
[13:53:18] <mikesherov> https://github.com/jquery/jquery-ui/commit/4da1716cfd88ac9b4a8362f715c081c2f75bd316
[13:53:18] <b-ot> mikesherov: Scott González (10mon 16h ago): Draggable: Fixed destroy method.
[13:53:23] <scott_gonzalez> Oh, hmm...I guess destroying needs to be delayed, huh?
[13:53:29] <scott_gonzalez> Because of event bindings that would go away.
[13:53:35] <mikesherov> Right
[13:53:45] <mikesherov> during drag, _destroy gets defered
[13:53:46] <mikesherov> brb
[13:54:22] <scott_gonzalez> I honestly think it's fine for this to be broken if you .remove() on start.
[13:54:38] <scott_gonzalez> The only time it's sane to call .remove() inside a callback is on stop.
[13:59:17] <mikesherov> scott_gonzalez: whatever you'd like. I can close as wontfix. I think though I can check pretty simply on destroy whether to defer or not based on is_dragging
[13:59:30] <mikesherov> I'll do whatever you like. I just like closing tickets :-P
[13:59:48] <mikesherov> we have a precedence for fixing this though
[13:59:55] <scott_gonzalez> I'd personally close as wontfix (or if we had it badux :-P)
[14:00:20] <mikesherov> https://github.com/jquery/jquery-ui/commit/0ed452bf2581a83781c417dffe6ed4e3dbe2d676/
[14:00:29] <mikesherov> we previously fixed this
[14:01:03] <agcolom> scott_gonzalez: can I borrow you after you're finished with mikesherov ;-)
[14:01:18] <scott_gonzalez> mikesherov: Sure, ideally that code never runs.
[14:01:21] <mikesherov> and tj fixed this other similar issue: http://bugs.jqueryui.com/ticket/7000
[14:01:27] <scott_gonzalez> It seems like a hack on a hack :-P
[14:02:06] <scott_gonzalez> mikesherov: wrong link?
[14:02:23] <mikesherov> no, right link
[14:02:23] <scott_gonzalez> Ah, the duplicate.
[14:02:46] <mikesherov> there are like 5 tickets that deal with "something was removed during one of the callbacks"
[14:03:12] <mikesherov> tj fixed this other similar one: http://bugs.jqueryui.com/ticket/8269
[14:03:14] <scott_gonzalez> If the callback is stop, I think it's sane for us to handle it.
[14:03:42] <mikesherov> but not before then. tj fixed "drop" on droppable, which also is sane.
[14:04:05] <scott_gonzalez> Yeah, that's also sane.
[14:04:08] <scott_gonzalez> And equivalent to stop.
[14:04:10] <mikesherov> so you're saying then that we only support removing the original element in a "stop" or "drop"
[14:04:16] <mikesherov> how about "roll"?
[14:04:19] <scott_gonzalez> heh
[14:04:23] <scott_gonzalez> definitely in a roll.
[14:04:34] <scott_gonzalez> Especially if it's spicy tuna.
[14:04:47] <scott_gonzalez> If it happens at the end of the interaction.
[14:04:55] <scott_gonzalez> Drop can only occur when the interaction is complete.
[14:05:08] <scott_gonzalez> That's a sane time to remove the element the user is interacting with.
[14:05:35] <scott_gonzalez> Start seems like an insane time to remove the element.
[14:05:49] <mikesherov> OK, so then I'll open a documentation ticket saying we only support removing the original during "final" callbacks
[14:06:11] <mikesherov> and then wontfix all of these issues?
[14:07:22] <scott_gonzalez> Sounds good.
[14:07:26] <scott_gonzalez> agcolom: What's up?
[14:07:30] <mikesherov> thanks scott_gonzalez 
[14:07:40] <scott_gonzalez> Thank YOU, mikesherov :-)
[14:08:57] <agcolom> scott_gonzalez: right I've attempted to turn data-attribute to a page, but grunt is not happy :-(
[14:09:26] <agcolom> I've just kept the longdesc, but removed the longdesc tags.
[14:09:39] <scott_gonzalez> Get rid of the <longdesc> tags.
[14:09:45] <agcolom> I've also removed everything before and added the script
[14:09:45] <scott_gonzalez> pages are just pure HTML.
[14:09:50] <agcolom> yes
[14:10:11] <scott_gonzalez> Skype with screenshare?
[14:10:18] <agcolom> ok...
[14:13:56] <scott_gonzalez> mikesherov: Oh good, that was one of the tickets that was starred in my inbox.
[14:14:02] <scott_gonzalez> Down to 47 emails!
[14:51:02] <kborchers> scott_gonzalez: hey, any chance you've been able to take a peek at that pointer branch? going to be working tonight so some feedback to work off of would be great. understand if you're too busy
[14:51:19] <scott_gonzalez> I can try to look after dinner.
[14:51:29] <kborchers> scott_gonzalez: that would be great, thanks!
[18:08:27] <shoky> hey, wondering about: http://git.io/v0doTw   is the !this.options.axis  part necessary for something? same thing 3 lines below
[18:16:21] <shoky> oh, i suppose it's for performance sake for the most common case of no axis. or i'm totally misreading it and need sleep <- if thats the case, apologies.
[19:40:31] <scott_gonzalez> shoky: Since it's using !== instead of ===, it doesn't look like it's necessary.
[19:44:18] <shoky> ah true
[19:45:47] <shoky> er, did you mean !== instead of !=  ?
[19:46:28] <scott_gonzalez> no
[19:46:48] <scott_gonzalez> If it was implemented as axis === "x" then it would need the !axis check.
[19:47:01] <scott_gonzalez> But since it's implemented as axis !== "x" it doesn't.
[19:47:44] <shoky> gotcha. thanks
[19:47:47] <kborchers> scott_gonzalez: as i'm working on pointer stuff, should i continue maintaining it in my repo or just edit the file directly in the ui repo in the external folder?
[19:48:07] <scott_gonzalez> You can just keep working in the UI branch.
[19:48:13] <kborchers> ok
