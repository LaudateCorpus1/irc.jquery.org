[00:15:29] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof labeled issue #7679: Demos: Menu appears twice in C-grade 02http://git.io/K52BOw
[00:26:37] <jqmobilecommit> [13jquery-mobile] 15rajzshkr opened issue #7680: Swipe up and down implementation. 02http://git.io/zxmhhg
[00:44:21] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067677-selectmenu-custom-filter-data-filterable (+1 new commit): 02http://git.io/rzmEoA
[00:44:21] <jqmobilecommit> 13jquery-mobile/067677-selectmenu-custom-filter-data-filterable 142e61ffd 15Gabriel Schulhof: Selectmenu: Filterable demo now filters/refreshes selectmenu widget...
[00:48:34] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7681: Selectmenu: Filterable demo now filters/refreshes selectmenu widget (06master...067677-selectmenu-custom-filter-data-filterable) 02http://git.io/n63WXg
[00:48:54] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof labeled issue #7677: Filterable inside custom select: data-filtertext is ignored 02http://git.io/IE3dZw
[00:49:07] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof labeled issue #7677: Filterable inside custom select: data-filtertext is ignored 02http://git.io/IE3dZw
[03:15:33] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof labeled issue #7676: data-role="none" buttons still enhanced when used in controlgroup 02http://git.io/dcueHg
[03:17:56] <jqmobilecommit> [13jquery-mobile] 15plkilroy opened issue #7682: iPad os7 .ui-body height taller than window height causes problems 02http://git.io/xxtfbw
[04:56:29] <arschmitz> gabriel_schulhof: Ping!
[05:16:44] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-297-date-format-generator: 02http://git.io/D9k-lQ
[05:16:44] <jquicommit> 13globalize/06fix-297-date-format-generator 14edf1e80 15Rafael Xavier de Souza: (fix) Date: Create .dateFormatter()...
[05:23:35] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067676-controlgroup-buttonMarkup-honour-keepNative (+2 new commits): 02http://git.io/s41msw
[05:23:35] <jqmobilecommit> 13jquery-mobile/067676-controlgroup-buttonMarkup-honour-keepNative 149e7b35b 15Gabriel Schulhof: Controlgroup: Honor keepNative even for buttonMarkup()...
[05:23:35] <jqmobilecommit> 13jquery-mobile/067676-controlgroup-buttonMarkup-honour-keepNative 142e12112 15Gabriel Schulhof: Controlgroup: Test use of keepNative
[05:24:40] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7683: Controlgroup: Honor keepNative even for buttonMarkup() (06master...067676-controlgroup-buttonMarkup-honour-keepNative) 02http://git.io/G6ZoCQ
[05:27:04] <gabriel_schulhof> arschmitz: What's up?
[05:27:08] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof pushed 1 new commit to 067676-controlgroup-buttonMarkup-honour-keepNative: 02http://git.io/9Svh1Q
[05:27:08] <jqmobilecommit> 13jquery-mobile/067676-controlgroup-buttonMarkup-honour-keepNative 14695b906 15Gabriel Schulhof: Controlgroup: Change the indentation a bit
[05:28:38] <arschmitz> gabriel_schulhof: KeepNAtive
[05:28:54] <arschmitz> we should remove it completely 
[05:29:33] <gabriel_schulhof> arschmitz: I guess in the case of https://github.com/jquery/jquery-mobile/issues/7676, he should've used an <input type="hidden">
[05:29:56] <arschmitz> gabriel_schulhof: well also just change the widget your concenred abouts init selector
[05:29:57] <gabriel_schulhof> ... but the fact is our addFirstLastClasses was the actual cause, not keepNative.
[05:30:27] <arschmitz> right im just saying we should completely remove keepNative it does not do anything you cant do with just changing an init selector
[05:30:27] <gabriel_schulhof> Yeah ... so, many ways around it.
[05:30:58] <arschmitz> we should not have multiple options or ways to do the same thing 
[05:31:37] <gabriel_schulhof> I'm good with seeing it go, but I'm just thinking that it's convenient ... though I suspect it's not used enough to warrant maintaining such convenience.
[05:32:01] <arschmitz> well we CANT have overlapping init selectors
[05:32:10] <gabriel_schulhof> Like, if you wanna affect multiple widgets, now you need to go in there and modify a bunch of initSelectors.
[05:32:21] <arschmitz> and if your doing a keep native on an element clearly you know what your trying to prevent
[05:32:31] <gabriel_schulhof> Yeah, it's true.
[05:32:58] <gabriel_schulhof> arschmitz: I guess it happens rarely enough that you don't need to keepNative half your widgets.
[05:33:02] <arschmitz> this is the sort of thing that just complicates the api and implementation for absolutly no good reason
[05:33:23] <gabriel_schulhof> I wonder what the original motivation behind it was.
[05:33:25] <arschmitz> well and if your doing keepnative for a widget why are you including it in the first place?
[05:33:42] <gabriel_schulhof> ... and wait! we have this thing behind a flag where it checks the ancestry for a flag and doesn't enhance.
[05:33:53] <gabriel_schulhof> arschmitz: Maybe because you don't control the widget.
[05:34:00] <gabriel_schulhof> arschmitz: Modular programming.
[05:34:08] <gabriel_schulhof> arschmitz: that's the only reason I can think og.
[05:34:10] <gabriel_schulhof> of.
[05:34:19] <arschmitz> i feel like that case is pretty rare
[05:34:24] <arschmitz> and can still be handled regardless
[05:34:33] <gabriel_schulhof> Well, we kinda had one at the Conference ... was it Lon?
[05:34:51] <gabriel_schulhof> A small widget on a page provided by a whole different company - not an iframe, either.
[05:35:04] <gabriel_schulhof> ... not to say that that justifies it.
[05:35:18] <arschmitz> gabriel_schulhof: and yes its behind a flag
[05:35:42] <arschmitz> wait no
[05:35:45] <gabriel_schulhof> arschmitz: Man ... we should've deprecated that. I don't even remember what it is ... $.mobile.????? = true or whatever.
[05:35:47] <arschmitz> thats ignore content enabled
[05:35:51] <gabriel_schulhof> That's it!
[05:35:56] <arschmitz> thats different
[05:35:57] <gabriel_schulhof> Yeah, that's behind a flag.
[05:36:01] <arschmitz> thats to stop children
[05:36:02] <gabriel_schulhof> keepNative is not.
[05:36:04] <gabriel_schulhof> Yeah.
[05:36:09] <gabriel_schulhof> We need to get rid of both.
[05:36:46] <gabriel_schulhof> I was hoping we had deprecated ignoreContentEnabled ...
[05:36:52] <gabriel_schulhof> I'm afraid I'm wrong.
[05:36:54] <gabriel_schulhof> Checking now ...
[05:37:01] <arschmitz> gabriel_schulhof: actually im not so sure i would deprecate that
[05:37:41] <arschmitz> gabriel_schulhof: infact scott_gonzalez and i belive at one point were talking about a way to eliminate any real perf penalty so it would not need to be behind a flag
[05:37:59] <gabriel_schulhof> There's a way?
[05:38:20] <gabriel_schulhof> Too bad we can't use a normally-inherited CSS property, and check its value on the element/.
[05:38:27] <arschmitz> yeah i think scott_gonzalez had an idea but it was a long time ago when we re-wrote how autoinit worked
[05:38:36] <gabriel_schulhof> Wow!
[05:38:45] <gabriel_schulhof> I'd soooo love to see such an idea.
[05:39:43] <gabriel_schulhof> Maybe we could reduce the price somewhat by painting the nodes underneath the root which has ignore content.
[05:39:55] <gabriel_schulhof> Like, the first node you iterate all the way to the root marked ignore.
[05:40:07] <gabriel_schulhof> The second node may descend from a node you've already visited.
[05:40:21] <gabriel_schulhof> So, if you paint all the nodes towards the root, you need not traverse all the way to the root the second time.
[05:40:28] <gabriel_schulhof> But paint them how?
[05:40:33] <gabriel_schulhof> .jqmDat()?
[05:40:43] <gabriel_schulhof> That might actually be slower than traversing all the time.
[05:44:16] <arschmitz> gabriel_schulhof: remember jqmData is getting deprecated too
[05:44:31] <arschmitz> we wont need it once we use a fixed namespace
[05:44:32] <gabriel_schulhof> arschmitz: Well, OK, but I meant like, generic element-associated data.
[05:44:50] <gabriel_schulhof> arschmitz: I guess s/jqmData/data/
[05:45:37] <gabriel_schulhof> In practice, this would still mean checking the parent for every element, so that loop would still iterate at least once for each element.
[05:47:06] <gabriel_schulhof> Thing is, this is beginning to sound like we're implementing CSS inheritance in JS. That is bad.
[05:51:15] <jquicommit> [13globalize] 15rxaviers pushed 2 new commits to 06fix-297-date-format-generator: 02http://git.io/AABEkg
[05:51:15] <jquicommit> 13globalize/06fix-297-date-format-generator 14aa5ecca 15Rafael Xavier de Souza: (fix) Date: Create .dateFormatter()...
[05:51:15] <jquicommit> 13globalize/06fix-297-date-format-generator 14f2cb720 15Rafael Xavier de Souza: (fix) Date: Create .dateFormatter()...
[06:26:21] <jquicommit> [13globalize] 15YasuhiroYoshida opened pull request #308: Fix amd-bower hello-world (06master...06fix-281) 02http://git.io/cph-Vw
[06:36:35] <scott_gonzalez> jzaefferer tj_vantoll kborchers arschmitz (anyone familiar with menu/selectmenu): Do you agree that the selectmenu-specific test isn't necessary in https://github.com/jquery/jquery-ui/pull/1329?
[06:37:04] <scott_gonzalez> The test exists because the bug was discovered in selectmenu, but the bug is actually in menu.
[06:38:11] <kborchers> agree ... seems redundant if it's being tested in menu
[06:38:21] <arschmitz> scott_gonzalez: yeah i agree as long as the test for menu is in place it seems unnecessary 
[06:38:30] <scott_gonzalez> great
[06:39:09] <tj_vantoll> Agreed. Redundant.
[07:18:08] <jquicommit> [13api.jqueryui.com] 15scottgonzalez opened pull request #230: Selectmenu: Document lack of accesskey support (06master...06selectmenu-accesskey) 02http://git.io/sITjoA
[07:24:06] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-297-date-format-generator: 02http://git.io/gHcyCg
[07:24:06] <jquicommit> 13globalize/06fix-297-date-format-generator 1407d8a33 15Rafael Xavier de Souza: (fix) Date: Create .dateFormatter()...
[07:25:47] <jquicommit> [13api.jqueryui.com] 15scottgonzalez opened pull request #231: Menu: Document items option (06master...06menu-items) 02http://git.io/BVjiig
[07:29:07] <jquicommit> [13api.jqueryui.com] 15scottgonzalez opened pull request #232: Draggable: Document relationship between appendTo and helper options (06master...06draggable-appendto) 02http://git.io/P7sC2Q
[07:44:52] <jquicommit> [13jquery-ui] 15fernandowobeto opened pull request #1346: Datepicker: prevent calendar open when input is disabled (06master...06master) 02http://git.io/OglAnw
[07:48:32] <jquicommit> [13jquery-ui] 15scottgonzalez closed pull request #1346: Datepicker: prevent calendar open when input is disabled (06master...06master) 02http://git.io/OglAnw
[07:51:50] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot assigned issue #7679: Demos: Menu appears twice in C-grade 02http://git.io/K52BOw
[08:06:26] <jqmobilecommit> [13jquery-mobile] 15caipigott opened issue #7684: Strange behavior of movie-list 02http://git.io/d6O8BQ
[08:38:01] <gabriel_schulhof> agcolom: Ping!
[09:01:13] <jqcommit> [13jquerymobile.com] 15carlospalacin opened issue #105: Loader don't work alone 02http://git.io/pakoVw
[09:27:33] <sheppard> so i finally updated my jquery mobile scss/compass file to 1.4
[09:27:53] <sheppard> i knew it was "flatter" but i hadn't realized all the gradient stuff was literally taken out
[09:28:16] <sheppard> makes it easier to maintain anyway
[09:29:46] <sheppard> here's the file: https://github.com/wq/wq.app/blob/master/scss/wq/jquery-mobile.scss
[10:27:27] <jqmobilecommit> [13jquery-mobile] 15arschmitz created 06ui-1-12 (+1 new commit): 02http://git.io/ws52QQ
[10:27:27] <jqmobilecommit> 13jquery-mobile/06ui-1-12 14983e9d1 15Alexander Schmitz: Widgets: begin updating to ui widgets for 1.5
[10:31:45] <arschmitz> sheppard: you still around?
[10:31:56] <sheppard> still here
[10:32:09] <arschmitz> just a heads up 1.5 will go back to spans for icons
[10:32:27] <arschmitz> :pseudo elements was not as good an idea as we had hoped :/
[10:32:38] <sheppard> browser support?
[10:32:46] <arschmitz> no
[10:32:57] <arschmitz> but you cant directly select them in js
[10:33:00] <arschmitz> they are very slow
[10:33:12] <arschmitz> and it makes the classes become weird and not very semantic
[10:33:58] <sheppard> hmm, makes sense
[10:35:08] <sheppard> i was originally planning on going straight to 1.5-dev but it seemed like it's a bit early yet
[10:35:11] <arschmitz> sheppard: mobile will also be using the new button, checkboxradio, and controlgroup widgets from ui
[10:35:27] <arschmitz> sheppard: we are planning on beta in less then 2 months
[10:35:45] <sheppard> arschmitz: oh ok, good to know
[10:35:48] <arschmitz> sheppard: but the changes you will care about have not landed yet
[10:36:04] <sheppard> arschmitz: yeah i'm looking forward to the nav stuff
[10:36:21] <arschmitz> sheppard: there wont be as much of that as we planned on in 1.5
[10:36:39] <arschmitz> sheppard: its going to be more about merging stuff between ui and mobile
[10:36:54] <arschmitz> sheppard: the nav stuff will still be coming just will take a bit longer
[10:37:48] <sheppard> arschmitz: the ui merge is an important task in itself
[10:38:11] <arschmitz> sheppard: yup and sharing 3 re-written widgets is a big step forward 
[10:38:24] <arschmitz> sheppard: also we will have a new classes option in all widgets
[10:38:39] <arschmitz> that will allow you to map structural classes to theme classes
[10:38:54] <arschmitz> to be able to modify the classes added to any piece of a widget
[10:40:01] <sheppard> look forward to seeing it
[10:40:12] <sheppard> arschmitz: i was pleasantly surprised that so far master hasn't broken my existing router
[10:40:15] <sheppard> though i should probably at least switch to the pagecontainer events
[10:40:40] <arschmitz> sheppard: you can see all the classes stuff and new widgets in ui already
[10:40:43] <arschmitz> its in the button branch
[10:41:06] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot labeled issue #7684: Strange behavior of movie-list 02http://git.io/d6O8BQ
[10:42:18] <sheppard> so the same button code but just different css?
[10:47:21] <jqcommit> [13api.jquerymobile.com] 15jaspermdegroot closed issue #333: On page remove, styling is lost on active page. 02http://git.io/0S7qRg
[10:50:27] <jqmobilecommit> [13jquery-mobile] 15ptrln opened issue #7685: jQuery Mobile pages crash in mobile Safari when tapping away from select 02http://git.io/JS--Vg
[10:53:12] <arschmitz> sheppard: yup
[10:55:15] <agcolom> gabriel_schulhof: I'm here :-)
[10:55:54] <jasperdegroot> arschmitz: mind commenting on this ticket https://github.com/jquery/jquery-mobile/issues/7680?
[10:56:18] <jasperdegroot> arschmitz: I remember we talked about it before, just don't remember the outcome :/
[10:59:05] <jqmobilecommit> [13jquery-mobile] 15arschmitz closed issue #7680: Swipe up and down implementation. 02http://git.io/zxmhhg
[10:59:59] <gabriel_schulhof> agcolom: Hey! Do you remember the bug related to https://github.com/jquery/jquery-mobile/issues/7684?
[11:00:05] <gabriel_schulhof> agcolom: You looked at it a while back.
[11:00:33] <agcolom> oh yes I do
[11:00:38] <jasperdegroot> arschmitz: thanks!
[11:00:46] <jqmobilecommit> [13jquery-mobile] 15jaspermdegroot labeled issue #7680: Swipe up and down implementation. 02http://git.io/zxmhhg
[11:01:14] <gabriel_schulhof> agcolom: Do you remember its number?
[11:01:21] <agcolom> https://github.com/jquery/jquery-mobile/issues/5380
[11:01:28] <gabriel_schulhof> agcolom: Awesome! Thanks!
[11:02:50] <agcolom> no problem :-)
[11:03:06] <gabriel_schulhof> agcolom: jasperdegroot already nailed it. I made my comment too late :)
[11:03:13] <agcolom> yep ;-)
[11:03:22] <agcolom> are we having a meeting today?
[11:03:30] <gabriel_schulhof> Good question.
[11:03:32] <gabriel_schulhof> arschmitz: ^
[11:03:42] <arschmitz> ah sorry
[11:03:53] <arschmitz> was updating meeting notes not paying attention
[11:04:18] <gabriel_schulhof> No worries ...
[11:04:58] <jasperdegroot> gabriel_schulhof: ah, didn't know you were looking for that ticket
[11:06:07] <gabriel_schulhof> jasperdegroot: No worries. Your issue-fu > my issue-fu :)
[11:06:25] <jasperdegroot> lol
[11:21:01] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened issue #7686: Popup: Start using the classes option 02http://git.io/YeJNHg
[11:21:09] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof labeled issue #7686: Popup: Start using the classes option 02http://git.io/YeJNHg
[11:21:17] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof assigned issue #7686: Popup: Start using the classes option 02http://git.io/YeJNHg
[11:52:48] <jquicommit> [13api.jqueryui.com] 15scottgonzalez opened pull request #233: Selectmenu: Document extension points (06master...06selectmenu-extensions) 02http://git.io/YudRIQ
[12:08:08] <scott_gonzalez> tj_vantoll: ping
[12:08:42] <tj_vantoll> scott_gonzalez: hey
[12:09:01] <scott_gonzalez> I just saw that https://github.com/jquery/api.jqueryui.com/pull/223 has been hanging around for a while.
[12:09:21] <scott_gonzalez> It wasn't mentioned in https://github.com/jquery/api.jqueryui.com/issues/211
[12:09:35] <scott_gonzalez> So I ended up duplicating the work: https://github.com/jquery/api.jqueryui.com/pull/233
[12:09:50] <tj_vantoll> uh
[12:10:20] <tj_vantoll> Yeah I forgot to note that.
[12:10:28] <tj_vantoll> Well I only tackled one of the methods though.
[12:10:32] <arschmitz> tj_vantoll: since your here i want to talk to you about your declarative widgets repo when you hace a few minutes
[12:10:36] <tj_vantoll> Looks like you did them all.
[12:10:36] <scott_gonzalez> I'm guessing something prompted you to write the PR (something that wasn't seeing the issue you filed).
[12:11:03] <scott_gonzalez> And then we all dropped the ball on getting it merged.
[12:11:08] <scott_gonzalez> Should we just close it now?
[12:11:13] <tj_vantoll> Nah I think I just forgot to tie the two together. Yeah close it.
[12:11:23] <tj_vantoll> I'll read over yours in a few minutes so we can get it merged in.
[12:12:18] <jquicommit> [13api.jqueryui.com] 15scottgonzalez closed pull request #223: Selectmenu: Documenting `renderItem()` extension point (06master...06selectmenu-extension-points) 02http://git.io/UdxZYg
[12:12:19] <scott_gonzalez> Thanks. I sent a bunch of PRs today.
[12:12:26] <tj_vantoll> arschmitz: Yep. Give me one minute. Have to step away for a bit.
[12:12:38] <scott_gonzalez> They're all for master.
[12:12:52] <scott_gonzalez> Unlike fnagel's, which is for 1.12.
[12:18:40] <tj_vantoll> arschmitz: I have a minute now. What's up?
[12:19:03] <arschmitz> well we want to seperate out the mobile version into its own module
[12:19:22] <tj_vantoll> “mobile version”?
[12:19:27] <arschmitz> basicly trying to make it so your repo would not be needed :)
[12:19:40] <arschmitz> well we have essentilly the exact same thing built into mobile
[12:19:44] <tj_vantoll> Ah ok
[12:19:54] <arschmitz> but it could not be used on its own
[12:20:14] <tj_vantoll> The one in mobile you mean?
[12:20:19] <arschmitz> yes
[12:20:24] <tj_vantoll> Ok I'm with you.
[12:20:57] <arschmitz> so since your currently maintaing something thats essentially an exact duplicate of what we have i thought you would be interested in giving your input
[12:21:25] <tj_vantoll> Yeah sure. Presumably this would live in the jquery-mobile repo?
[12:21:43] <arschmitz> it can or if people thing it should be on its own that could be done too
[12:21:55] <arschmitz> im open to either way
[12:22:28] <arschmitz> but even if its in mobile we want it to be a single stand alone file that depends only on the factory and core
[12:23:03] <tj_vantoll> Yeah I like it living in mobile, at least to start with.
[12:23:17] <arschmitz> that was what i was figuring since its there already
[12:23:20] <arschmitz> and we have the builder
[12:23:35] <arschmitz> and its amd so really no matter how you want to use it 
[12:24:07] <tj_vantoll> Yeah exactly. bower install jquery-mobile. require[ 'jquery-mobile/whatever-we-call-this' ]
[12:24:15] <arschmitz> tj_vantoll: yup
[12:24:54] <arschmitz> the main difference in our current implementations is you a only init based on data-role
[12:24:58] <arschmitz> we allow any selector
[12:25:17] <tj_vantoll> With initSelector correct?
[12:25:22] <arschmitz> yup
[12:25:36] <arschmitz> and we hijack any requests to the widget factory
[12:25:50] <arschmitz> and add one based on the widget name if they dont have one
[12:25:58] <arschmitz> which defaults to data-role=widget name like yours
[12:26:29] <tj_vantoll> Oh nice I didn't even realize that.
[12:26:32] <arschmitz> the big difference implementation wise is it MUST load after the widget factory but before ANY widget
[12:26:36] <tj_vantoll> So it's optional really.
[12:26:41] <arschmitz> yes
[12:27:14] <tj_vantoll> Why would a widget loading before the “enhancer” matter?
[12:27:27] <arschmitz> we wont get its call to the widget factory
[12:28:13] <arschmitz> tj_vantoll: https://github.com/jquery/jquery-mobile/blob/master/js/widgets/page.js#L17
[12:28:34] <tj_vantoll> Could that be a problem for widgets that only depend on the widget factory and not the enhancer though?
[12:28:53] <arschmitz> right no widget should ever depend on the enhancer
[12:29:03] <tj_vantoll> require([ "jquery-mobile/enhancer", "jquery-ui/dialog" ])
[12:29:07] <arschmitz> it should always be optional but that creates a load order issue
[12:29:15] <tj_vantoll> Right
[12:29:50] <arschmitz> this is fixable with a requirejs config though
[12:30:06] <tj_vantoll> Yes, but it's a bit unintuitive.
[12:30:10] <arschmitz> you can shim all the widgets to depend on it if your doing a build
[12:30:31] <arschmitz> tj_vantoll: agreed its really not an issue with a build and not an issue with script tags
[12:30:52] <arschmitz> well execpt if you wanted to use the ui monolith
[12:30:58] <arschmitz> and the enhancer its impossible
[12:31:58] <tj_vantoll> On an unrelated note I really like the name enhancer.
[12:32:22] <arschmitz> yeah our method is called enhanceWithin
[12:32:38] <arschmitz> so its actually consistent too
[12:33:29] <arschmitz> tj_vantoll: the need for the custom selectors for init comes from in mobile we auto enhance all inputs 
[12:33:44] <arschmitz> or all buttons
[12:34:28] <arschmitz> so we have things like "input[type='text']"
[12:34:56] <tj_vantoll> Yeah I'm ok with the functionality, but it is unfortunate that it has that required execution order.
[12:35:39] <arschmitz> yeah i agree
[12:35:49] <arschmitz> id like to think of a way around it
[12:36:12] <arschmitz> we also get to use faster selectors
[12:36:36] <arschmitz> because if you wanted you could change them all to classes with the mobile one
[12:36:46] <tj_vantoll> What's your timeframe for this?
[12:36:48] <arschmitz> and no look at everything with a data-role
[12:37:06] <arschmitz> tj_vantoll: would like 1.5 but not set on that we have a lot going on
[12:37:14] <jqmobilecommit> [13jquery-mobile] 15cgack opened issue #7687: Toolbar: Add classes option 02http://git.io/B87eMg
[12:40:59] <tj_vantoll> arschmitz: Anyways, I really like the idea of having an enhancer module in jQuery Mobile that is only dependent on Core and the widget factory. When you get around to implementing I can give feedback on some of these implementation details.
[12:41:23] <arschmitz> tj_vantoll: cool sounds good
[12:41:34] <arschmitz> based on your repo i thought you would like the idea
[12:42:41] <tj_vantoll> Indeed :)
[12:43:00] <arschmitz> tj_vantoll: dont tell scott_gonzalez but the simple solution is build it into the factory lol
[12:43:42] <tj_vantoll> Or an optional module that lives in ui :P
[12:43:47] <arschmitz> yup
[12:44:04] <arschmitz> much easier to not worry about load order then
[12:44:28] <tj_vantoll> It's more sensical semantically too. Common stuff goes in ui rather than mobile.
[12:44:40] <arschmitz> as long as it didnt read options by default
[12:44:50] <arschmitz> it could be in the factory with no real addition of code
[12:44:54] <arschmitz> or effect on perf
[12:45:17] <arschmitz> because the factory is already handling every widget instance
[12:45:38] <tj_vantoll> Yep
[12:45:43] <arschmitz> thats one line to add and resolve the initselector
[12:46:00] <arschmitz> then the getcreateoptions could be seperate
[12:46:06] <arschmitz> along with the enhance function
[12:46:30] <arschmitz> but the resolving of the initselector works the best in the factory
[12:46:43] <tj_vantoll> Yeah you avoid a level of indirection.
[12:46:56] <arschmitz> it can be a single line there anywhere else its complicated and load order dependant
[12:47:07] <arschmitz> scott_gonzalez: you around?
[12:49:02] <scott_gonzalez> I don't want this in the widget factory.
[12:49:06] <arschmitz> lol
[12:49:07] <tj_vantoll> lol
[12:49:24] <scott_gonzalez> It's effectively broken for everyone using ajax that's not using Mobile.
[12:49:40] <scott_gonzalez> That's been my #1 complaint about this concept for years.
[12:49:41] <arschmitz> scott_gonzalez: how its just a method call?
[12:49:52] <scott_gonzalez> Because the method won't be called automatically.
[12:49:53] <arschmitz> it does not run on document ready
[12:50:00] <scott_gonzalez> But it's called automatically on doc ready, right?
[12:50:03] <scott_gonzalez> pj
[12:50:04] <arschmitz> its never called automaticly execpt in mobile
[12:50:04] <scott_gonzalez> oh
[12:50:08] <scott_gonzalez> If it's not run, we shouldn't have it.
[12:50:25] <arschmitz> scott_gonzalez: all we are suggesting adding is resolving the init selector
[12:50:39] <arschmitz> becasue if its not done in the facotry its load order dependant
[12:50:48] <arschmitz> so it could never be used with the ui monolith for example
[12:50:52] <scott_gonzalez> I don't want widget factory to know about init slectors.
[12:51:07] <arschmitz> because it needs to be after the factory and before any widget
[12:51:44] <scott_gonzalez> We can solve the order problem easily.
[12:52:06] <scott_gonzalez> But that's really getting into build systems and dependency resolution, which I've said that I don't want to ever discuss again :-P
[12:52:15] <arschmitz> lol
[12:52:18] <scott_gonzalez> But I'd be open to exposing a list of all registered constructors.
[12:52:27] <scott_gonzalez> Which removes the order problem.
[12:52:28] <arschmitz> that would be all we need
[12:52:31] <arschmitz> yeah 
[12:52:51] <scott_gonzalez> We already expose child constructors
[12:52:52] <arschmitz> if your open to that thats all it needs
[12:52:56] <scott_gonzalez> actually...
[12:53:17] <arschmitz> i feel like we did this already for something else?
[12:53:40] <scott_gonzalez> Do you care about things that don't inherit from $.Widget?
[12:53:54] <arschmitz> like?
[12:54:04] <scott_gonzalez> 3rd party widgets with their own base widgets.
[12:54:21] <scott_gonzalez> Likely 0.01% or less of widgets in existence.
[12:54:23] <scott_gonzalez> I've never seen one.
[12:54:30] <arschmitz> ok yeah no
[12:54:35] <scott_gonzalez> So you can do this today.
[12:54:40] <tj_vantoll> It has to be $.Widget based because the mechanism depends on _getCreateOptions().
[12:54:44] <scott_gonzalez> It just requires walking the children.
[12:54:58] <arschmitz> yeah i suggested this before
[12:55:04] <arschmitz> and you said ABSOLUTLY NOT lol
[12:55:32] <scott_gonzalez> This is already possible.
[12:55:35] <arschmitz> i dont recall the reason
[12:55:38] <scott_gonzalez> Just recursively walk the children.
[12:55:46] <arschmitz> yeah i asked if it was ok to do that
[12:55:49] <arschmitz> and you told me no
[12:56:05] <scott_gonzalez> Oh, well, it all depends on how much offiicial support you want ;-)
[12:56:11] <arschmitz> lol
[12:56:14] <arschmitz> its in mobile
[12:56:14] <scott_gonzalez> child constructor lisst are not a public API
[12:56:25] <arschmitz> so about as much as $.support
[12:56:29] <arschmitz> dont break us
[12:56:48] <scott_gonzalez> Well, let us know if we break you :-P
[12:56:54] <arschmitz> lol
[12:57:11] <scott_gonzalez> I'm sure you'll notice if we rewrite how inheritance works :-)
[12:57:24] <arschmitz> yeah i hope i would know about that one
[12:57:35] <scott_gonzalez> The problem with making child constructors public is that it ties us to a specific implementation for inheritance.
[12:57:36] <arschmitz> honestly id hope i would know about any breaking change like that
[12:57:49] <arschmitz> yeah im ok with it not being public
[12:57:50] <scott_gonzalez> Well, it wouldn't be a breaking change. That's the point.
[12:57:57] <scott_gonzalez> If it's not public API, it's not breaking.
[12:58:04] <arschmitz> well "breaking to mobile change"
[12:58:08] <scott_gonzalez> sure
[12:58:09] <arschmitz> :)
[12:58:23] <scott_gonzalez> We've done this plenty of times with core.
[12:58:27] <scott_gonzalez> It only bites us like once a year.
[12:58:32] <arschmitz> oh yeah 
[12:58:48] <arschmitz> well at least in THEORY if im paying attention id know well ahead
[12:58:51] <arschmitz> being on both teams lol
[12:59:07] <arschmitz> guess it all depends on how well im doing my job lol
[12:59:59] <scott_gonzalez> That's why you have automated daily/weekly tests that run against ui-git.
[13:00:11] <scott_gonzalez> They'll catch the error for you
[13:00:15] <arschmitz> yup
[13:21:39] <gabriel_schulhof> arschmitz: Ping!
[13:21:51] <arschmitz> gabriel_schulhof: Pong!
[13:22:34] <gabriel_schulhof> arschmitz: What if we stored initSelectors completely separately from widgets.
[13:22:37] <gabriel_schulhof> ?
[13:23:10] <gabriel_schulhof> We'd have  a hash: "value-of-initSelector": widgetName
[13:23:23] <gabriel_schulhof> ... and store that in a module.
[13:23:32] <gabriel_schulhof> It would be the configuration for the enhancer.
[13:23:54] <gabriel_schulhof> Then you wouldn't need to intercept any widget definition calls.
[13:23:55] <arschmitz> gabriel_schulhof: then it would be included even if you didnt have that widget in your build
[13:24:17] <arschmitz> and or the widgets would have to opt in them selves
[13:24:47] <gabriel_schulhof> Nono. For most widgets, there is no value in this hash.
[13:25:58] <gabriel_schulhof> I guess this kinda assumes that data-role is the go-to attribute for deciding what widget it is to be.
[13:26:47] <gabriel_schulhof> So, if you encounter data-role on an element, that's it - BAM, that's the kind of widget it will be - assuming $.ui[.attr( "data-ui-role" ) ] is defined.
[13:26:51] <arschmitz> gabriel_schulhof: we can just use _childConstructors 
[13:27:31] <arschmitz> i got scott to agree to to break us on purpose if we do lol
[13:30:16] <gabriel_schulhof> arschmitz: In UI you always need to tell the enhancer what widget is to be made of a given element via data-ui-role or whatever, because they have no initSelectors, right?
[13:30:39] <arschmitz> gabriel_schulhof: what do you mean?
[13:30:49] <gabriel_schulhof> arschmitz: https://github.com/tjvantoll/declarative-widgets/blob/master/declarative-widgets.js#L21
[13:30:54] <arschmitz> we dont even have init selectors on most of our mobile widgets
[13:31:05] <arschmitz> gabriel_schulhof: thats not ui thats tj_vantoll repo
[13:31:21] <gabriel_schulhof> I know, but I'm just pointing out how he does it.
[13:31:46] <scott_gonzalez> arschmitz gnarf jzaefferer kborchers petersendidit rxaviers tj_vantoll: kill list: https://gist.github.com/scottgonzalez/469c88bb3872f5bf2e06
[13:31:47] <arschmitz> well its just a different implementation he assumes 1 to 1 mapping name to role
[13:31:48] <gabriel_schulhof> For mobile, we could do the exact same thing, except run some additional pre-configured selectors stored in a hash.
[13:32:10] <gabriel_schulhof> ... and we only run those selectors for which we find widget definitions.
[13:32:40] <gabriel_schulhof> So we don't pointlessly run selectors if the corresponding widget definition is not present.
[13:32:50] <arschmitz> gabriel_schulhof: or just use child widgets
[13:32:54] <arschmitz> only capture what exist
[13:33:01] <arschmitz> and allow a widget to specifiy it if it please
[13:33:04] <tj_vantoll> scott_gonzalez: wow
[13:33:09] <tj_vantoll> That's quite the hit list.
[13:33:10] <arschmitz> nd not care about load order
[13:33:21] <arschmitz> i mean childConstructors 
[13:33:39] <arschmitz> gabriel_schulhof: also it allows use of much faster selectors
[13:33:48] <arschmitz> for example to use a class instead of a role
[13:39:47] <arschmitz> scott_gonzalez: i say kill em all lol
[13:40:13] <arschmitz> panel could stay if you wanted but likely we would start from scratch based on current mobile one
[13:40:18] <arschmitz> same with like toolbars
[13:40:39] <arschmitz> scott_gonzalez: thats kinda same with any of these
[13:40:58] <arschmitz> if we actually made them we would likely delete the current one and start from scratch anyway
[13:41:01] <rxaviers> scott_gonzalez, big list. Nice! I understood we want to kill them from wiki, because they are stalled for a long time and there's no interest on implementing any of those.
[13:41:09] <rxaviers> from the* wiki
[13:41:17] <rxaviers> to* implement
[13:41:41] <tj_vantoll> scott_gonzalez: I could see keeping mask. Other than maybe that I say kill them all. There are a lot that I didn't even know existed.
[13:42:45] <scott_gonzalez> Yeah, some obscure stuff and some duplicative stuff.
[13:42:52] <rxaviers> When someone brings the idea of implementing a "new" widget, we potentially could check the history of those already raised ideas. Do we lose anything losing that history?
[13:43:14] <rxaviers> I guess not, right.
[13:43:43] <scott_gonzalez> I have no idea how to see old content.
[13:43:50] <scott_gonzalez> But these pages don't really contain useful information.
[13:43:58] <scott_gonzalez> Hence the desire to remove them.
[13:44:19] <scott_gonzalez> Todd just went on a rampage creating essentially blank pages.
[13:44:29] <scott_gonzalez> But a blank widget page has so much content on it that it looks like it's not blank.
[13:45:00] <scott_gonzalez> And then over time, random people filled in random data.
[13:45:11] <scott_gonzalez> So the pages that do have data, don't have anything at all about what we actually want.
[13:45:24] <scott_gonzalez> Usually just some poorly designed, bloated API.
[13:45:39] <rxaviers> and probably outdated stuff
[13:45:41] <rxaviers> I see
[13:45:50] <arschmitz> right thats what i was saying even whats there 
[13:45:55] <arschmitz> if we made one of these
[13:46:00] <arschmitz> we would start from scratch
[13:46:03] <scott_gonzalez> yeah
[13:48:13] <arschmitz> scott_gonzalez: starting to get all horders up in that wiki lol
[13:48:21] <scott_gonzalez> heh
[15:14:36] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06master: 02http://git.io/V43ueA
[15:14:36] <jquicommit> 13globalize/06master 14e426762 15Rafael Xavier de Souza: Date: Fix retrieval of all dateTimeFormats presets
[15:15:21] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-297-date-format-generator from 1407d8a33 to 148b6954a: 02http://git.io/BN4QXQ
[15:15:21] <jquicommit> 13globalize/06fix-297-date-format-generator 1443a6bd5 15Rafael Xavier de Souza: Date: Create .dateFormatter()...
[15:15:21] <jquicommit> 13globalize/06fix-297-date-format-generator 141a7b4f7 15Rafael Xavier de Souza: (fix) Date: Create .dateFormatter()...
[15:15:21] <jquicommit> 13globalize/06fix-297-date-format-generator 14d04bd08 15Rafael Xavier de Souza: (fix) Date: Create .dateFormatter()...
[18:47:59] <jqmobilecommit> [13jquery-mobile] 15doomsy opened issue #7688: On removing a data-role=page container, styling is lost on active page. 02http://git.io/IeL0vA
[19:37:37] <jquicommit> [13globalize] 15YasuhiroYoshida opened pull request #309: Fix 308 (06master...06fix-308) 02http://git.io/wyeDoQ
[23:06:30] <doesallmagic2> Project jQuery UI - git core build #751: STILL UNSTABLE in 5 min 29 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/751/
[23:16:54] <doesallmagic2> Project jQuery UI - 1.7.x core build #631: STILL UNSTABLE in 10 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.7.x%20core/631/
[23:26:15] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067686-popup-classes-option (+3 new commits): 02http://git.io/OeKZDA
[23:26:15] <jqmobilecommit> 13jquery-mobile/067686-popup-classes-option 14180174a 15Gabriel Schulhof: Button: Remove console.log()
[23:26:15] <jqmobilecommit> 13jquery-mobile/067686-popup-classes-option 14fffdb18 15Gabriel Schulhof: Table: Update columntoggle dependency
[23:26:15] <jqmobilecommit> 13jquery-mobile/067686-popup-classes-option 143239594 15Gabriel Schulhof: Popup: Add classes option...
[23:32:31] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7689: Popup: Add classes option (06ui-1-12...067686-popup-classes-option) 02http://git.io/pYPrvQ
[23:34:26] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof assigned issue #7690: Collapsible: add classes option 02http://git.io/v95Jcg
