[00:16:37] <jqcommit> [13api.jquerymobile.com] 15agcolom closed issue #296: Documented default values for collapsible are incorrect 02http://git.io/Y4M1DA
[00:33:28] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof closed issue #7939: Toolbar: Footer is offset during transition 02http://git.io/m6zLZw
[02:44:37] <agcolom> arschmitz: gabriel_schulhof: I have an interesting case where one of my students is using a column toggle table inside a page with tabs. So we lose ui-btn-active class from the active tab when clicking on the button to select columns as this is actually a link (<a>) and not a button...
[02:46:02] <agcolom> We recommend in this case (tabs) not to use links but to use buttons instead, but here the link comes from our widget... 
[02:47:06] <agcolom> just an interesting use case I didn't think of before when the issue was open: https://github.com/jquery/jquery-mobile/issues/7873
[04:11:31] <gabriel_schulhof> agcolom: Interesting point ... maybe we should generate a button for the column toggle table.
[04:13:34] <gabriel_schulhof> agcolom: Actually, in https://github.com/jquery/jquery-mobile/issues/7873#issuecomment-67052396, arschmitz states that opening a popup is a navigation event and so it warrants the removal of the active class.
[04:25:21] <scott_gonzalez> arschmitz: Did Ariya get you that contact info yet?
[04:25:34] <scott_gonzalez> The call is going to be next week, so we're running out of time.
[05:18:16] <agcolom> gabriel_schulhof: if we had a button, instead of the link, would that work or because the button opens a popup that wouldn't work anyway?
[05:24:22] <arschmitz> agcolom: that would work
[05:24:35] <arschmitz> agcolom: because the intent of a link is to navigate somewhere
[05:24:43] <arschmitz> agcolom: so it removes the active link class
[05:25:17] <arschmitz> agcolom: but a button is meant to trigger some sort of action not necessarily navigation so it does not remove the active class.
[05:38:19] <gabriel_schulhof> arschmitz: ... but you claimed that the act of opening a popup constitutes navigation, which means that a popup, including the column toggle popup, should be opened from a link.
[05:39:10] <gabriel_schulhof> arschmitz: This particular use case will be addresses to some extent by the table review, because I break apart the column toggle extension such that the UI for toggling columns can be dropped in.
[05:42:07] <scott_gonzalez> Opening a popup, in the sense of a widget that is overlaying other content, is not navigation.
[05:42:25] <scott_gonzalez> Opening a popup, in the sense of opening a new window on top of the current window, is navigation.
[05:44:07] <arschmitz> gabriel_schulhof: opening a popup from a button does not remove the class
[05:44:16] <arschmitz> gabriel_schulhof: because the class remove is in the link handler
[05:46:31] <gabriel_schulhof> arschmitz: Popup opens via the link handler.
[05:46:56] <gabriel_schulhof> That is, it is handled by the click routing in navigation.js
[05:47:30] <gabriel_schulhof> ... although I suppose we can get rid of that, because it turns out that handling popups via the central click routing is not the solution to preventing the blue flash on Android.
[05:47:52] <gabriel_schulhof> Originally, routing popups through the central click handler appeared to prevent the blue flash on android.
[05:49:09] <jquicommit> [13download.jqueryui.com] 15rxaviers opened issue #252: Affix ThemeRoller panel 02http://git.io/FwWJ
[05:50:43] <arschmitz> gabriel_schulhof: my point is if you dont want that you should call .popup( "open" );
[05:50:47] <arschmitz> not use the link handler
[05:51:05] <arschmitz> not use a link
[05:52:09] <jquicommit> [13jquery-ui] 15tjvantoll closed pull request #1439: Dialog: Remove overflow: hidden and reposition resize handles (06master...06dialog-resize-handlers) 02http://git.io/Fuuo
[05:53:14] <gabriel_schulhof> arschmitz: Right, but in this case we're talking about a link/popup pair generated by the columntoggle extension. As it stands, the user has no choice but to intercept popupcreate, remove the link, and replace it with their choice of UI for opening the popup.
[05:53:35] <arschmitz> gabriel_schulhof: right we should fix that in the extension
[05:54:24] <gabriel_schulhof> Yeah. That's in work for 1.5.0, although currently the scope extends only to breaking it up, not to opening the popup via custom code. I can add the latter to the table review ticket.
[05:54:30] <arschmitz> we should not be using link handler for that your making it basicly rely on all of nav instead of just calling a method
[05:57:08] <gabriel_schulhof> Well, popup already pulls in all of nav, so that part doesn't matter. Not only that, but this dependency is unlikely to change, since we're dropping popup altogether.
[05:57:11] <jquicommit> [13download.jqueryui.com] 15rxaviers pushed 1 new commit to 06new-tr-demos: 02http://git.io/Fw4i
[05:57:11] <jquicommit> 13download.jqueryui.com/06new-tr-demos 1427f5f5c 15Rafael Xavier de Souza: fixup! ThemeRoller: Update demo page...
[05:58:04] <arschmitz> we should still fix table in this case for 1.5
[05:59:20] <gabriel_schulhof> Yeah, definitely. I'll add it to the scope.
[06:09:19] <jquicommit> [13download.jqueryui.com] 15rxaviers opened issue #253: Use the same template for zip's index.html and themeroller demos 02http://git.io/Fwzg
[07:26:21] <jqcommit> [13themeroller.jquerymobile.com] 15agcolom opened issue #217: Pop up on Kuler colors is unreachable 02http://git.io/FrkD
[07:28:37] <arschmitz> gabriel_schulhof: to fix that table test can you just change the markup to make the input not a child?
[07:28:40] <arschmitz> of the label
[07:29:06] <arschmitz> so we can merge that branch
[07:54:44] <gabriel_schulhof> arschmitz: OK.
[07:55:21] <gabriel_schulhof> arschmitz: Wait - I can only do that if it's pre-rendered. If you want me to change the widget, we're gonna have to create a bunch of unique IDs to link the labels to the inputs.
[07:55:41] <arschmitz> gabriel_schulhof: and whats the problem with theat?
[07:55:52] <arschmitz> thats why we have $.fn.uniqueId
[07:56:13] <gabriel_schulhof> OK. I guess I can do it that way then.
[08:00:57] <gabriel_schulhof> arschmitz: Also, we shouldn't be using element.id ... I've had an instance (and I only remember vaguely) where there was a child with the ID set to "id", and so when you retrieved element.id, it gave you the child element. In contrast element.getAttribute( "id" ), although slower, will always give you the ID attribute.
[08:01:11] <gabriel_schulhof> (I was looking at the code for $.fn.uniqueId).
[08:01:30] <gabriel_schulhof> *sigh* ... it was one of the many issues I've encountered along the way.
[08:01:33] <arschmitz> gabriel_schulhof: inside forms using element.id can get weird
[08:01:53] <gabriel_schulhof> Yeah, might've been inside a form. I don't remember.
[08:02:17] <gabriel_schulhof> Bottom line is, I see a lot of .id in UI, and it makes me uneasy because of that one instance where I encountered that weirdness.
[08:02:49] <arschmitz> gabriel_schulhof: dont worry about it unless an issue acutally comes up
[08:03:03] <arschmitz> ui has been around longer and has a much larger user base hen mobile
[08:03:11] <arschmitz> so if it was a real problem it likely would have come up 
[08:03:33] <arschmitz> and if it does come up then we fix it
[08:03:39] <gabriel_schulhof> Well, that's just it. An issue did come up, but it wasn't about this particular problem, so I worked around it for that particular issue and reminded myself never to use .id, but always to use .getAttribute( "id" ).
[08:04:00] <arschmitz> gabriel_schulhof: unless you can find a specific case
[08:04:09] <arschmitz> to show where that will break
[08:04:20] <gabriel_schulhof> I wish I could find that issue amidst the deluge.
[08:04:35] <arschmitz> gabriel_schulhof: we cant really go on i know i remember this thing once :-)
[08:04:54] <gabriel_schulhof> arschmitz: If .getAttribute( "id" ) is indeed slower than .id, then it makes sense to use .id although it may break in very rare instances.
[08:05:13] <gabriel_schulhof> I mean, how often do you write id="id" as an attribute.
[08:06:14] <gabriel_schulhof> Usually, it's id="cityId" or id="purchaseId" or something like that. This one guy had id="id", and so the element got assigned to its parent's .id property.
[08:07:49] <arschmitz> scott_gonzalez: ^^
[08:08:52] <gabriel_schulhof> ... and for completeness sake, when you did parent.id, you got the child element, not the id of the parent.
[08:09:01] <gabriel_schulhof> Might've been IE.
[08:09:21] <gabriel_schulhof> I've certainly tried http://jsbin.com/jesose/1/ on Chrome, and it's fine.
[08:11:17] <scott_gonzalez> "If .getAttribute( "id" ) is indeed slower than .id, then it makes sense to use .id" You're killing me.
[08:11:41] <scott_gonzalez> FWIW, I've always said "use jQuery"
[08:11:53] <gabriel_schulhof> scott_gonzalez: I'm sorry.
[08:12:01] <scott_gonzalez> So I opt for the slowest choice of all, which is $( elem ).attr( "id" )
[08:12:13] <scott_gonzalez> But whatever.
[08:12:50] <arschmitz> gabriel_schulhof: is there even actually a big enough difference that its ever going to matter?
[08:13:22] <gabriel_schulhof> Well, I tried http://jsbin.com/jesose/2/ on IE7, and it alerts correctly, but then it gives an error message about "Operation aborted"
[08:13:39] <arschmitz> gabriel_schulhof: scott_gonzalez: wait though was not your concern about that ui currently DOES USE element.id?
[08:13:52] <arschmitz> and not jquery
[08:13:54] <gabriel_schulhof> Yes, it was.
[08:14:12] <gabriel_schulhof> We should at least use .getAttribute( "id" ) everywhere.
[08:14:37] <scott_gonzalez> My general answer is always use jQuery.
[08:14:40] <arschmitz> so i think your actually on the same page and gabriel_schulhof is just suggesting a patch to be consistent about this basiclu
[08:14:41] <gabriel_schulhof> ... and if we have the element in a jQuery object already, we should use .attr();
[08:14:54] <gabriel_schulhof> Yep.
[08:20:20] <jqmobilecommit> [13jquery-mobile] 15gseguin created 06bithound (+1 new commit): 02http://git.io/Fro5
[08:20:20] <jqmobilecommit> 13jquery-mobile/06bithound 140ce19a9 15Ghislain Seguin: Build: Added .bithoundrc to exclude external code
[08:20:34] <gabriel_schulhof> OK. I give up. IE7 cannot display either http://jsbin.com/jesose/2/ or http://jsbin.com/jesose/3/ (the latter does not have id="id" anywhere in the markup)
[08:21:14] <jqmobilecommit> [13jquery-mobile] 15gseguin opened pull request #7948: Build: Added .bithoundrc to exclude external code (06master...06bithound) 02http://git.io/FrKB
[08:22:19] <gseguin> arschmitz: bithound was introduced last year at JSConf. It seems pretty cool and kind of combine the complexity analisys with gemnasium.
[08:22:51] <gseguin> arschmitz: I just added a .bithoundrc in a PR to have it report only on the actual code
[08:23:06] <arschmitz> gseguin: cool ill check it out
[08:23:29] <gseguin> might want to add "tests" to the exclusions as well
[08:23:59] <arschmitz> makes sense
[08:26:24] <arschmitz> gseguin: wow this is a terrible graph
[08:26:25] <arschmitz> https://app.bithound.io/jquery/jquery-mobile
[08:26:38] <gseguin> it's because of external
[08:26:50] <gseguin> let me add tests
[08:26:53] <arschmitz> gseguin: no its because it uses a scale of 68 - 82
[08:27:49] <arschmitz> its intentionally deceiving to make it look like your terrible right now but by using their tool could be awesome. 
[08:28:30] <jqmobilecommit> [13jquery-mobile] 15gseguin pushed 1 new commit to 06bithound: 02http://git.io/FrXl
[08:28:30] <jqmobilecommit> 13jquery-mobile/06bithound 1491be22a 15Ghislain Seguin: Build: Added tests to ignore list for bithound
[08:29:35] <gseguin> I don't know https://app.bithound.io/jquery/jquery-mobile/blob/57a8fff8a223ee6b61664c1ce83dd968aa58c51e/js/widgets/pagecontainer.js seems pretty accurate to me
[08:29:49] <gseguin> and it keeps track of TODOs
[08:30:13] <arschmitz> im not saying its not useful or accurate
[08:30:32] <gseguin> just wanted to try it out
[08:30:33] <arschmitz> im saying that chart is intentionally deceiving to get people to use their tool
[08:30:41] <gseguin> not saying it's a must use
[08:30:59] <arschmitz> gseguin: yeah no im going to look at it i was only commenting about that one chart 
[08:31:06] <arschmitz> that chart is pure marketing 
[08:31:13] <gseguin> true
[08:31:36] <gseguin> landing that .bithoundrc wouldn't hurt and may be helpful in pointing out potential issues in code quality
[08:31:58] <gseguin> it doesn't add a dependency
[08:32:03] <arschmitz> gseguin: yeah im going to look at it and probably talk to the other leads about it
[08:32:10] <gseguin> ok
[08:35:20] <gseguin> arschmitz: I like this: https://app.bithound.io/jquery/jquery/dependencies/npm
[08:35:57] <gseguin> arschmitz: I don't know if it notifies you but this is good to keep track of outdated dependencies 
[08:36:03] <arschmitz> gseguin: interesting 
[08:36:27] <arschmitz> gseguin: scott_gonzalez has a script he uses to make sure all the projects are using same versions 
[08:36:38] <arschmitz> scott_gonzalez: does that also check current version it does not does it?
[08:36:52] <scott_gonzalez> It doesn't check anything.
[08:36:58] <scott_gonzalez> It just lists what versions are used.
[08:37:05] <arschmitz> right
[08:37:50] <scott_gonzalez> https://david-dm.org/ has existed for a long time for that same purpose.
[08:38:14] <scott_gonzalez> https://david-dm.org/jquery/jquery#info=devDependencies&view=table
[08:38:19] <gseguin> scott_gonzalez: I didn't say it was anything new
[08:38:25] <gseguin> gemnasium did that too
[08:38:52] <gseguin> however it does list requested and last version
[08:55:20] <jquicommit> [13download.jqueryui.com] 15rxaviers pushed 1 new commit to 06master: 02http://git.io/FrpA
[08:55:20] <jquicommit> 13download.jqueryui.com/06master 146ae5a1e 15Rafael Xavier de Souza: ThemeRoller: Update demo page...
[08:55:32] <gabriel_schulhof> arschmitz: Found it! https://github.com/jquery/jquery-mobile/issues/7223
[08:56:05] <jquicommit> [13download.jqueryui.com] 15rxaviers closed pull request #244: jQuery UI: Handle manifest info from JS comments (06master...06fix-243) 02http://git.io/Tm5C9A
[08:56:07] <gabriel_schulhof> arschmitz: <form id="abc">...<input id="id">...</form> ... accessing form.id gives you the input, not "abc".
[08:56:24] <gabriel_schulhof> arschmitz: We needed that for checking whether a checkboxradio is inside a form or not.
[08:57:33] <gabriel_schulhof> arschmitz: We're still using that code in _getInputSet() for assembling the list of radios that belong together.
[08:57:57] <arschmitz> gabriel_schulhof: well not in ui-1-12
[08:58:44] <arschmitz> but i may or may not use .id in button re-write
[08:58:48] <arschmitz> but ill switch it if i do
[09:00:50] <gabriel_schulhof> arschmitz: Currently, UI's checkboxradio does not care about radio buttons which are outside a form but which have form="id-of-form" set on them. It should, and it should search this.document.find( "input[type='radio'][form='" + $.mobile.path.hashToSelector( form.getAttribute( "id" ) + "']" )
[09:01:09] <gabriel_schulhof> Yeah, so you need the selector escaping as well.
[09:01:36] <gabriel_schulhof> ... whenever you grab an ID from the DOM and stick it into a selector, you need to escape it.
[09:01:47] <gabriel_schulhof> Man ... so many issues leading into one another.
[09:01:49] <gabriel_schulhof> *whew*
[09:02:51] <gabriel_schulhof> I just hope we don't lose track of all the little fixes we've made to our widgets over time as we swap over to UI's widgets.
[09:03:25] <arschmitz> gabriel_schulhof: its not like the history is lost
[09:03:58] <arschmitz> if anything the new widgets are better tested and will get a lot more real world testing then ours
[09:03:59] <gabriel_schulhof> No, it's not, but I'd hate to get another report for a bug that was fixed, even if I have the history to rely upon to re-fix it quickly.
[09:04:11] <arschmitz> because ui has many more users
[09:04:43] <arschmitz> our user base cant even begin to compare with that of ui
[09:05:06] <gabriel_schulhof> Still, we may have fixed some things that have never come up in UI. Not that I disagree. UI indeed has a much wider user base, so absolutely.
[09:05:54] <gabriel_schulhof> Well, given the wider user base, I guess if anything comes up, it'll get fixed pretty quickly, so it's not so bad.
[09:06:01] <arschmitz> gabriel_schulhof: your sounding like a little bit of the not built here syndrom 
[09:06:09] <arschmitz> :-)
[09:06:19] <gabriel_schulhof> arschmitz: Nono. I know it comes across like that but no, definitely not.
[09:06:40] <arschmitz> gabriel_schulhof: there will be betas
[09:06:51] <gabriel_schulhof> I fully support that we have a single set of widgets.
[09:07:27] <gabriel_schulhof> In fact, I fully support grabbing /all/ widgets from UI, and concentrating on that which makes mobile mobile, namely the transitions, nav, events, autoinit, etc.
[09:08:07] <gabriel_schulhof> Hmmm ... I guess there's no actual "etc." in that enumeration :)
[09:09:57] <arschmitz> lol
[10:11:23] <jquicommit> [13download.jqueryui.com] 15rxaviers opened issue #254: Improve banner.js test to use a more legitimate authors.txt 02http://git.io/FoXy
[10:17:10] <jquicommit> [13download.jqueryui.com] 15rxaviers pushed 1 new commit to 06master: 02http://git.io/Foy9
[10:17:10] <jquicommit> 13download.jqueryui.com/06master 14b5bd225 15Anne-Gaelle Colom: Build: Remove dates from copyright notice...
[10:17:17] <jquicommit> [13download.jqueryui.com] 15rxaviers closed pull request #247: Build: Remove dates from copyright notice (06master...06updateLicense) 02http://git.io/frg7vw
[10:19:03] <scott_gonzalez> Can someone do a quick test for me?
[10:19:32] <scott_gonzalez> Should just take one minute if you already have a clone of jquery-ui.
[10:19:37] <rxaviers> sure
[10:19:49] <scott_gonzalez> rxaviers: `git checkout f83580cd7db86da8c36a5816e9ebcdf1758ec797`
[10:20:04] <scott_gonzalez> Then run the datepicker tests in your browser.
[10:20:18] <scott_gonzalez> Do you get tons of failures?
[10:20:32] <scott_gonzalez> I'm in the middle of a rebase, so I don't want to abort just to check.
[10:21:15] <rxaviers> Just to be clear, I ran `python -m SimpleHTTPServer` on the root of jquery-ui repo and browed http://localhost:8000/tests/unit/datepicker/datepicker.html
[10:21:20] <rxaviers> Yeap, I get several issues
[10:22:05] <scott_gonzalez> Ok, first two tests pass, then everything is red after that, right?
[10:22:08] <rxaviers> If I run the same test on master, I get 4 failures "only".
[10:22:14] <rxaviers> Correct
[10:22:16] <scott_gonzalez> thanks
[10:22:28] <rxaviers> ywc
[10:34:44] <jqcommit> [13themeroller.jquerymobile.com] 15jaspermdegroot closed issue #217: Pop up on Kuler colors is unreachable 02http://git.io/FrkD
[10:47:42] <scott_gonzalez> :-(
[10:47:55] <scott_gonzalez> There are test failures after the rebase that don't exist before the rebase.
[10:50:13] <scott_gonzalez> Interesting, it's definitely not a bug in the source code.
[10:51:58] <scott_gonzalez> Oh boy, it's not a diff in the tests either.
[10:54:50] <scott_gonzalez> It must be a change in jquery-simulate.
[10:55:25] <jquicommit> [13jquery-ui] 15rxaviers 04force-pushed 06ref-1029-css-dependency-comments from 1444c6f7c to 1443605c6: 02http://git.io/FKTM
[10:55:26] <jquicommit> 13jquery-ui/06ref-1029-css-dependency-comments 1443605c6 15Rafael Xavier de Souza: Various: Add css-dependency-comments based on jQuery Mobile...
[10:55:56] <jquicommit> [13jquery-ui] 15rxaviers opened pull request #1440: Add css-dependency-comments based on jQuery Mobile (06master...06ref-1029-css-dependency-comments) 02http://git.io/FKTA
[10:58:05] <scott_gonzalez> Hmm...that's not it either.
[10:58:10] <scott_gonzalez> I'm totally stumped now.
[11:02:21] <rxaviers> \\/o\
[11:02:25] <rxaviers> \/o\
[11:02:33] <rxaviers> /o\
[11:02:38] <rxaviers> (there we go)
[11:06:32] <scott_gonzalez> haha
[11:07:29] <scott_gonzalez> I have 8 assertions in 1 test failing for calendar and 2 assertions in 1 test failing for datepicker.
[11:07:32] <scott_gonzalez> I have no idea why.
[11:07:41] <scott_gonzalez> The test files are the same as in the datepicker branch.
[11:07:50] <scott_gonzalez> The source files are the same as in the datepicker branch.
[11:08:07] <scott_gonzalez> Obviously the rest of the repo has had major changes.
[11:08:13] <scott_gonzalez> But I'm not sure what's causing this.
[11:09:07] <scott_gonzalez> I've pushed the rebase to the datepicker-rebase branch in my fork.
[11:51:03] <arschmitz> gabriel_schulhof: im going to blow you mind lol
[11:51:14] <arschmitz> gabriel_schulhof: http://jsbin.com/qozujo/1/edit?html,js,console,output
[11:53:45] <gabriel_schulhof> arschmitz: Holy shitsu! That's a bug in core!
[11:53:52] <arschmitz> no its not
[11:53:55] <gabriel_schulhof> arschmitz: Is it even possible to fix that?
[11:54:02] <arschmitz> i highly doubt it
[11:54:11] <gabriel_schulhof> Don't tell me "getAttribute" is not a valid ID?
[11:54:27] <arschmitz> when you asign an id to something in a form it overights that property on the form lol
[11:54:28] <gabriel_schulhof> arschmitz: Core is assuming that getAttribute() is a function on the element.
[11:54:40] <arthurvr> lol :-)
[11:54:51] <gabriel_schulhof> Yeah, OK, but there has to be an API for retrieving the attributes nonetheless.
[11:54:54] <arschmitz> so unless you just recreate everything
[11:55:07] <arschmitz> every single method is unsafe
[11:55:12] <arschmitz> every property is unseafe
[11:55:15] <arschmitz> lol
[11:55:20] <gabriel_schulhof> arschmitz: This is a bug in the spec then.
[11:55:34] <arschmitz> just dont use them as ids lol
[11:56:06] <arschmitz> i wonder if there is somewhere in the spec where they say you can use any native property as an id?
[11:56:25] <arschmitz> scott_gonzalez: ^^
[11:56:46] <gabriel_schulhof> arschmitz: I think IDs must satisfy very few conditions - like start with a letter, I think, or something like that.
[11:56:59] <gabriel_schulhof> ... and there's a limited set of valid characters, but no more.
[11:57:15] <gabriel_schulhof> ... and, I mean, getAttribute is [a-zA-Z], so that's definitely valid.
[11:57:21] <scott_gonzalez> I doubt it, but htmllint would yell at you for this, I'm sure.
[11:57:46] <gabriel_schulhof> Yeah, like, you have to draw the line somewhere.
[11:58:03] <arschmitz> but like for example a common one
[11:58:11] <gabriel_schulhof> I mean, you could render an element's attributes completely off-limits, short of parsing the HTML by hand.
[11:58:12] <arschmitz> naming your submit button with an id of submit
[11:58:18] <arschmitz> will break form submission lol
[11:58:31] <arschmitz> because you overwrite the submit method
[11:58:43] <gabriel_schulhof> Actually, only if you submit programmatically
[11:58:52] <gabriel_schulhof> If you don't, the submission happens via native code.
[11:58:59] <arschmitz> yes
[11:59:09] <gabriel_schulhof> But yeah, I see how that's totally common.
[11:59:21] <gabriel_schulhof> Probably one of the first wounds in a budding Web developer's foot.
[11:59:26] <scott_gonzalez> gabriel_schulhof: Certainly not in modern browsers.
[11:59:41] <scott_gonzalez> You can always Element.prototype.getAttribute.call( elem, name )
[11:59:55] <scott_gonzalez> It's the exact same situation as safe-guaring Object methods
[12:00:13] <scott_gonzalez> Object.prototype.hasOwnProperty.call(), etc.
[12:00:13] <gabriel_schulhof> Hmmm ... good point. I wonder why core doesn't do this.
[12:00:26] <scott_gonzalez> Because we don't care about stupid shit that people do.
[12:01:00] <gabriel_schulhof> *hmmm* ... *nod* ...
[12:01:15] <arschmitz> lol
[12:01:41] <arschmitz> gabriel_schulhof: its not like this is a cross browser breakage
[12:01:47] <arschmitz> that it would be fixing
[12:01:53] <arschmitz> this is how its intended to worj
[12:01:55] <arschmitz> work
[12:02:20] <gabriel_schulhof> I guess this is limited to forms, so I'm sure it's amply documented.
[12:02:31] <gabriel_schulhof> Anyway, it's not like I'm gonna lose sleep over this :)
[12:04:07] <arschmitz> yeah
[14:57:42] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof pushed 1 new commit to 06ui-1-12-tests: 02http://git.io/F6j7
[14:57:42] <jqmobilecommit> 13jquery-mobile/06ui-1-12-tests 14d27cb58 15Gabriel Schulhof: Table: Arrange columntoggle popup checkboxes controlgroup-pleasingly
[15:05:45] <jquicommit> [13jquery-ui] 15scottgonzalez 04force-pushed 06datepicker from 14e21a56d to 142ea46ae: 02http://git.io/o2MLZQ
[15:05:45] <jquicommit> 13jquery-ui/06datepicker 1468f8e3c 15TJ VanToll: Datepicker: Initial commit of widget rewrite work from old branch...
[15:05:45] <jquicommit> 13jquery-ui/06datepicker 145a78355 15Scott González: Datepicker: Remove delayed focus
[15:05:45] <jquicommit> 13jquery-ui/06datepicker 14e50d6d3 15TJ VanToll: Datepicker: Update tests and demos for new structure
[15:06:00] <scott_gonzalez> YAY!!!!!
[15:06:24] <scott_gonzalez> jzaefferer helped me track down that pesky bug. It was the removal of delayed focus from core.js.
[15:44:38] <travis-ci> jquery/jquery-mobile#2302 (ui-1-12-tests - d27cb58 : Gabriel Schulhof): The build is still failing.
[15:44:38] <travis-ci> Change view : https://github.com/jquery/jquery-mobile/compare/c2b912d2cfb2...d27cb58c354c
[15:44:38] <travis-ci> Build details : http://travis-ci.org/jquery/jquery-mobile/builds/48828511
