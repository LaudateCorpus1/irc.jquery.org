[05:24:03] <scott_gonzalez> kborchers: Could you not have done something like this.active.parents( ".ui-menu" ) for the prev check?
[05:24:24] <scott_gonzalez> Rather than tracking how many submenus are open.
[05:26:09] <kborchers> scott_gonzalez: from what i could tell active is only the top level and isn't updated to the submenu so i couldn't do that
[05:26:15] <kborchers> maybe i missed something
[05:26:58] <scott_gonzalez> .activeMenu?
[05:30:14] <scott_gonzalez> Looks like .active is always the correct item, even in submenus.
[05:30:25] <scott_gonzalez> And .activeMenu is the parent of .active
[05:30:46] <kborchers> scott_gonzalez: you're talking about in menu?
[05:30:51] <scott_gonzalez> yeah
[05:31:05] <kborchers> scott_gonzalez: this.active is the menubar item in menubar right?
[05:31:10] <scott_gonzalez> Oh, I see what you're saying.
[05:31:40] <scott_gonzalez> this.active.data( "menu" ).activeMenu.parent() ?
[05:32:18] <kborchers> scott_gonzalez: tried that but the submenu closes before that check happens so it only works if you are more than one level deep
[05:32:41] <scott_gonzalez> Can that be your check then?
[05:32:46] <scott_gonzalez> If the menu is open?
[05:34:46] <kborchers> i am checking if the menu is open but if it's open and no submenus are open, then it needs to jump to the next menubar item and open that menu
[05:35:06] <kborchers> if i only check open, i would be stuck on that menu until they closed it
[05:36:37] <kborchers> scott_gonzalez: am i making sense? ^  it's early and i'm in 2 other conversations right now :P
[05:38:41] <scott_gonzalez> Oh, so you're saying that the nested menu is closed before the menubar gets a chance to look?
[05:38:50] <kborchers> right
[05:38:56] <scott_gonzalez> So the problem is when you go from 2 levels deep to the top level.
[05:39:11] <scott_gonzalez> At that point you'd think you were going from the top level to a different menubar item.
[05:39:20] <kborchers> right
[05:39:48] <kborchers> thus, i settled on the counting submenus
[05:40:22] <kborchers> which i didn't like as much and led me to ask for input :)
[05:44:49] <scott_gonzalez> So, we had a solution for this at one point.
[05:45:13] <scott_gonzalez> The solution was to trigger an overflow event when you press an arrow key that can't do anything.
[05:45:52] <scott_gonzalez> Keep that in your head in case we ever discover some cases where the current solution doesn't work.
[05:45:57] <scott_gonzalez> For now, keep what you've got :-)
[05:46:17] <scott_gonzalez> BTW, there is a solution that you can implement today without modifying menu, but it's annoying.
[05:46:30] <scott_gonzalez> You need to bind before instantiating the menus and then bind again after.
[05:46:45] <kborchers> oh, that sounds fun
[05:46:46] <scott_gonzalez> Set a flag in the before event handler and check it in the after.
[05:49:54] <kborchers> scott_gonzalez: i think i'll pass on that for now :)
[05:50:02] <scott_gonzalez> indeed :-)
[05:50:28] <scott_gonzalez> You might be able to do it with just the before, but that might require duplicating menu logic into menubar.
[05:51:26] <kborchers> scott_gonzalez: yeah, i don't like that either ... i like the idea of the overflow event but i think the current way should work
[05:51:35] <scott_gonzalez> yup
[06:44:00] <scott_gonzalez> nacin: What's your schedule look like today?
[08:05:08] <jzaefferer> kswedberg: there's a lot of stuff in api.jquery.com's functions.php - are all those actually needed? If not, could you clean that up a bit, maybe move the functions that all API sites should use to the parent theme?
[08:06:25] <kswedberg> jzaefferer: a lot of it is cruft. yeah, I can clean it up. might not get to it until tomorrow, though.
[08:09:36] <jzaefferer> okay, that's fine - there's a lot of other work left on the UI API repo
[08:10:06] <jzaefferer> I'd rather not clone all of that multiple times
[08:17:02] <jzaefferer> deploying your changes locally now to see what it looks like
[08:18:48] <scott_gonzalez> jzaefferer rworth kborchers gnarf: You guys available for a call as 12:30 or 1:00 ET?
[08:18:58] <rworth> scott_gonzalez yeah
[08:19:28] <jzaefferer> 12:30 would work, for half an hour max
[08:19:38] <kborchers> scott_gonzalez: that should work ... i would have a hard stop at 2 ET
[08:20:19] <jzaefferer> kswedberg: index is looking good - do the category links work for you?
[08:20:30] <scott_gonzalez> 12:30 for half hour it is
[08:22:08] <kswedberg> jzaefferer: thx. yeah, all the category links work for me. you talking about the ones in the sidebar or the ones below each entry?
[08:22:43] <rworth> kswedberg jzaefferer just about finished getting xinclude working for notes in api.jquery.com
[08:22:56] <kswedberg> rworth: nice!
[08:23:21] <rworth> was a bit tricky to get parameters to work. good ole xsl
[08:23:28] <jzaefferer> kswedberg: both - they don't work for me at all, always getting Wordpress' 404 page
[08:23:30] <kswedberg> :)
[08:23:50] <kswedberg> jzaefferer: sorry, man. gotta run. be back in about 1.5hrs
[08:24:29] <kswedberg> jzaefferer: what are the hrefs pointing to? /category/[categoryname]?
[08:24:36] <jzaefferer> yep
[08:24:41] <jzaefferer> are there plugins I need to enable?
[08:24:46] <kswedberg> huh.
[08:25:03] <kswedberg> dunno.
[08:25:15] <kswedberg> bbl
[08:25:22] <jzaefferer> mh, looks like the mu-plugins are all activated automatically
[08:28:20] <jzaefferer> scott_gonzalez: any objections to extracting a few custom tasks from grunt.js into build/tasks? I currently tend to two files: testswarm.js for the testswarm task, build.js for everything else
[08:28:35] <scott_gonzalez> worksforme
[08:28:40] <jzaefferer> would still leave us with 340loc for the config
[08:28:45] <scott_gonzalez> Yeah mu-plugins are always on for all sites
[08:31:57] <jzaefferer> also adds some consistency with mobile
[08:40:50] <jzaefferer> just tested John Bender's grunt-junit plugin https://github.com/johnbender/grunt-junit - that's not quite working yet: https://github.com/johnbender/grunt-junit/issues/1
[08:40:51] <socialhapy> ★ Github API: no issue found
[08:41:51] <jquicommit> [jquery-ui] jzaefferer pushed 1 new commit to master: http://git.io/YTDrmQ
[08:41:51] <jquicommit> [jquery-ui/master] Grunt: Extract testswarm and build tasks into separate files - Jörn Zaefferer
[08:41:56] <jzaefferer> mhm, socialhapy thinks there is no issue :/
[09:09:13] <jq-jenkins> Project jQuery UI build #503: SUCCESS in 27 min: http://swarm.jquery.org:8080/job/jQuery%20UI/503/
[09:09:13] <jq-jenkins> joern.zaefferer: Grunt: Extract testswarm and build tasks into separate files
[09:24:08] <Guest76454> jzaefferer: do the tests timeout on you (re: the issue you logged)
[09:24:09] <Guest76454> ps
[09:24:12] <Guest76454> thanks for taking a look
[09:26:25] <Guest76454> ugh
[09:26:29] <Guest76454> nick fail
[09:30:59] <jzaefferer> johnbender: no timeout as far as I can tell
[09:51:09] <kswedberg> jzaefferer: I'm back. btw, mu_plugins ~ "must use" plugins
[09:51:23] <jzaefferer> right, makes sense
[10:15:33] <johnbender> jzaefferer: I guess I'm unclear on what actuall happens based on the ticket
[10:16:02] <johnbender> jzaefferer: it get's stuck perpetually?
[10:16:22] <johnbender> jzaefferer: as a side note it will create the output dir if it doesn't exist
[10:16:26] <johnbender> obviousy that doesn't matter
[10:16:30] <johnbender> in this case
[10:24:28] <scott_gonzalez> kborchers: We should make menu tests run faster by dropping the delay :-)
[10:26:43] <kborchers> scott_gonzalez: duh! yeah!
[10:27:35] <scott_gonzalez> The amount of state to check for keyboard handling in tabs is crazy.
[12:56:53] <scott_gonzalez> nacin: ping
[12:57:09] <scott_gonzalez> I guess that would work better if he was here :-(
[19:06:57] <scott_gonzalez> kborchers: I want to kill myself right now.
[19:07:08] <scott_gonzalez> IE is killing me with focus.
[19:07:14] <kborchers> i assume it has to do with ie focus
[19:07:15] <kborchers> :P
[19:07:19] <scott_gonzalez> http://twitter.com/scott_gonzalez/status/211277201306427392
[19:07:20] <socialhapy> ★ Tweet from scott_gonzalez: Focus handling in IE still hurts my head, but at least I'm getting good at identifying the problems and working around them consistently. ★ http://bit.ly/Kicu1z
[19:07:26] <kborchers> yep, just saw it :)
[19:07:35] <scott_gonzalez> I write that after refreshing my tests multiple times and getting all green
[19:07:46] <scott_gonzalez> Then, I refersh again...red
[19:08:03] <kborchers> awesome
[19:08:12] <kborchers> just old IE or all?
[19:08:26] <scott_gonzalez> Not sure, I'm only testing in IE6 right now.
[19:08:41] <scott_gonzalez> Here's the really annoying part: It's a race condition between tests.
[19:08:52] <kborchers> one thing i have loved about my job ... we only support IE9 :)
[19:09:00] <kborchers> oh, that sucks :/
[19:09:17] <kborchers> setTimeout for EVERYONE :P
[19:09:56] <scott_gonzalez> That's what I thought.
[19:10:01] <scott_gonzalez> It's not a timing issues.
[19:10:07] <scott_gonzalez> I don't know what's happening.
[19:10:10] <scott_gonzalez> :-(
[19:10:12] <kborchers> o.O
[19:10:53] <kborchers> oh i know what to do ... refresh until you see all green, screenshot for proof, commit and move on :)
[19:11:46] <scott_gonzalez> haha
[19:13:32] <scott_gonzalez> :-(
[19:13:40] <scott_gonzalez> alert( document.activeElement );
[19:13:45] <scott_gonzalez> / [object]
[19:13:51] <scott_gonzalez> yeah, thanks IE
[19:13:58] <scott_gonzalez> remove alert
[19:14:01] <scott_gonzalez> all green
[19:14:02] <scott_gonzalez> refresh
[19:14:04] <scott_gonzalez> all green
[19:14:27] <scott_gonzalez> ...wait a minute...
[19:14:29] <scott_gonzalez> refresh
[19:14:30] <scott_gonzalez> all green
[19:14:31] <scott_gonzalez> WTF?
[19:14:48] <scott_gonzalez> The magical add then remove alert fix?!?
[19:15:26] * scott_gonzalez moves along, writes more tests...
[19:15:45] <scott_gonzalez> There are literally hundreds of assertions for tabs ARIA/key handling
[19:15:54] <scott_gonzalez> This is ridiculous.
[19:26:29] <scott_gonzalez> here it comes :-)
[19:26:37] <jquicommit> [jquery-ui] scottgonzalez pushed 5 new commits to master: http://git.io/O4Z3SQ
[19:26:37] <jquicommit> [jquery-ui/master] Tabs: Implement ARIA + Key handling. Fixes #3079 - Tabs: keyboard accessibility. Fixes #7845 - Tabs: default accessibility. - Scott González
[19:26:37] <jquicommit> [jquery-ui/master] Tabs: ARIA tests. - Scott González
[19:26:37] <jquicommit> [jquery-ui/master] Tabs: Basic keyboard support tests. - Scott González
[19:29:05] <scott_gonzalez> Not even waiting to see the swarm results.
[19:29:10] <scott_gonzalez> Closing my laptop :-)
[19:55:03] <jq-jenkins> Project jQuery UI build #504: FAILURE in 28 min: http://swarm.jquery.org:8080/job/jQuery%20UI/504/
[19:55:03] <jq-jenkins> * Scott González: Tabs: Implement ARIA + Key handling. Fixes #3079 - Tabs: keyboard accessibility. Fixes #7845 - Tabs: default accessibility.
[19:55:04] <jq-jenkins> * Scott González: Tabs: ARIA tests.
[19:55:04] <jq-jenkins> * Scott González: Tabs: Basic keyboard support tests.
[19:55:05] <jq-jenkins> * Scott González: Tabs: CTRL navigation tests.
[19:55:05] <jq-jenkins> * Scott González: Tabs: Panel keyboard support tests.
