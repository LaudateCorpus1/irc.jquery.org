[02:02:19] <doesallmagic2> Project jQuery UI - git core build #635: STILL UNSTABLE in 1 min 8 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/635/
[02:03:21] <doesallmagic2> Project jQuery UI 1-9-stable - git core build #426: STILL UNSTABLE in 1 min 2 sec: http://jenkins.jquery.com/job/jQuery%20UI%201-9-stable%20-%20git%20core/426/
[02:46:17] <doesallmagic2> Project jQuery UI - 1.6.x core build #521: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.6.x%20core/521/
[03:16:16] <doesallmagic2> Project jQuery UI - 1.7.x core build #520: STILL UNSTABLE in 15 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.7.x%20core/520/
[03:46:18] <doesallmagic2> Project jQuery UI - 1.8.x core build #496: STILL UNSTABLE in 15 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.8.x%20core/496/
[07:20:08] <jqmobilecommit> [13jquery-mobile] 15Radstake opened issue #6884: Style header changes on page transition 02http://git.io/Eei0OQ
[07:52:33] <gseguin> arschmitz: you here?
[09:55:05] <gseguin> uGoMobi: ping
[09:55:41] <uGoMobi> gseguin: pong
[09:57:43] <gseguin> uGoMobi: any chance you could look into this PR: https://github.com/jquery/jquery-mobile/pull/6883 ?
[09:59:07] <uGoMobi> gseguin: that's for 1.5
[09:59:34] <gseguin> I was hoping 1.4.1 it's kind of bug
[09:59:49] <uGoMobi> gseguin: why is it a bug?
[10:00:02] <uGoMobi> gseguin: it adds option enhanced, right?
[10:00:13] <gseguin> a missing one yeah
[10:00:21] <gseguin> most of the other widgets have it
[10:00:41] <uGoMobi> I know
[10:00:41] <gseguin> it allows user to pre-enhance a select
[10:00:48] <uGoMobi> yes
[10:01:18] <uGoMobi> a few widgets haven't been reviewed for 1.4 so those don't have the option
[10:01:50] <uGoMobi> but this isn't something that can land in 1.4.1
[10:03:36] <uGoMobi> gseguin: also, we might replace our selectmenu widget for 1.5 by the new UI selectmenu widget if it's ready
[10:03:42] <uGoMobi> gseguin: see the roadmap http://jquerymobile.com/roadmap/
[10:06:40] <gseguin> uGoMobi: ok, then that would make sense to land this in 1.4.1
[10:07:01] <uGoMobi> gseguin: why?
[10:07:22] <gseguin> otherwise it's not going to get fixed in 1.4, will it?
[10:07:37] <gseguin> I was hitting that bug on a project I'm working on. I've monkey patched for now
[10:07:56] <gseguin> but was hoping to realign on an official version
[10:08:00] <gseguin> hate forking
[10:08:02] <uGoMobi> gseguin: that is correct
[10:08:22] <uGoMobi> gseguin:  I understand
[10:08:53] <uGoMobi> gseguin: but the fact that other widgets have the option doesn't make it a bug, so it won't land in a maintenance release
[10:10:01] <uGoMobi> I think that in general anything that would require a change in API docs is not something that can land in a maintenance release
[10:18:30] <gseguin> hmm ok I thought it was a missing feature
[10:18:51] <gseguin> but it is deliberate, then
[10:20:53] <gseguin> uGoMobi: also why don't we add the attribute data-enhanced once we've enhanced to prevent double enhancing?
[10:22:52] <uGoMobi> gseguin: when will something be double enhanced?
[10:23:18] <gseguin> so in my use case I use the widgets in a carousel 
[10:23:50] <gseguin> and the carousel clones the LIs to do the infinite loop
[10:24:49] <gseguin> if something calls .enhanceWithin in the container the content of the carousel that has been cloned gets double enhanced
[10:25:04] <gseguin> I know it's kind of a corner case
[10:25:18] <gseguin> but it's really hard to work around
[10:25:36] <gseguin> uGoMobi: ^
[10:26:07] <uGoMobi> gseguin: so it's more about initializing than enhancing markup
[10:27:42] <uGoMobi> I mean, it's just about generating elements or adding class, but the whole widget is initialized again, right?
[10:28:27] <gseguin> yes and double enhanced
[10:28:40] <gseguin> because the clone already is enhanced
[10:29:02] <gseguin> I think we need to put a guard in the markup as well as the widget
[10:29:03] <uGoMobi> unless you set option enhance to true, then it will never be enhanced
[10:29:30] <uGoMobi> gseguin: we have to check with arschmitz and _|Nix|_ 
[10:29:46] <gseguin> absolutely
[10:30:53] <uGoMobi> gseguin: but aren't you talking about a widget that does *not* have option enhanced?
[10:31:12] <uGoMobi> because if it has that option you set it to true and it will never be enhanced
[10:31:31] <gseguin> yeah that's my issue with select right now
[10:31:43] <uGoMobi> right
[10:32:33] <uGoMobi> just checking because you said data-enhanced
[10:33:15] <gseguin> yeah data-enhanced sets the enhanced option
[10:33:26] <uGoMobi> I know
[10:34:24] <uGoMobi> but we are talking about a case where that option doesn't exist
[10:34:41] <uGoMobi> (selectmenu)
[10:34:41] <gseguin> correct
[10:34:53] <gseguin> doesn't exist yet ;)
[10:34:59] <uGoMobi> right :)
[10:35:39] <gseguin> gotta go make food for the kiddos
[10:35:48] <gseguin> we'll pick up the discussion later
[10:35:50] <uGoMobi> gseguin: enjoy your weekend
[10:35:54] <uGoMobi> ok
[10:35:58] <gseguin> thanks you too
[10:36:03] <uGoMobi> thanks
[13:03:05] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin created 06istanbul (+1 new commit): 02http://git.io/hVfycQ
[13:03:05] <jqmobilecommit> 13jquery-mobile/06istanbul 1469b425c 15Ghislain Seguin: Tests: Code coverage via Istanbul and report to coveralls.io
[13:05:28] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 06istanbul: 02http://git.io/z74IYA
[13:05:28] <jqmobilecommit> 13jquery-mobile/06istanbul 1467aa9a4 15Ghislain Seguin: Fixed lint
[14:08:34] <_|Nix|_> gseguin|away: Can you create a bug showing the double-enhance? AFAIK the widget factory should prevent this. If an instance of type x is already associated with an element, then, upon reinstantiation, the widget factory will simply call this._init() on the pre-existing widget instance instead of re-instantiating.
[14:15:35] <gseguin> _|Nix|_: The problem is in that case the cloned intance is not an instantiated widget per se
[14:15:45] <gseguin> _|Nix|_: it's just a dom clone
[14:16:21] <_|Nix|_> gseguin: Oh, I see!
[14:16:33] <_|Nix|_> gseguin: So you're cloning the enhanced markup ...
[14:16:38] <gseguin> correct
[14:16:57] <gseguin> "I" am not the widget I use does
[14:17:23] <_|Nix|_> gseguin: OK, I can see how a missing enhanced attribute might present a problem.
[14:17:39] <gseguin> yeah indeed
[14:17:50] <gseguin> that's why I would consider that a bug
[14:18:10] <gseguin> but it's not a common nor a recommended use
[14:18:29] <_|Nix|_> gseguin: Hmmm ... can you write an extension for select?
[14:18:35] <_|Nix|_> gseguin: Override _create()
[14:18:41] <_|Nix|_> ?
[14:20:07] <_|Nix|_> gseguin: The code might even implement exactly what we plan on doing for the widget review, but it could live in your repo, because it's a third-party widget.
[14:20:51] <_|Nix|_> gseguin: ... and you might even later on, in the course of the 1.5.0 development process submit the extension for inclusion inline in the selectmenu widget - if it sticks around. Otherwise it can continue to live in your repo.
[14:21:34] <_|Nix|_> Basically, you could if ( !this.options.enhanced ) { this._super(); } else { /* custom init */ }
[14:22:26] <gseguin> _|Nix|_: and we might want to add the data-enhanced attribute ourself when enhancing
[14:22:36] <gseguin> that would solve the issue both ways
[14:22:44] <_|Nix|_> gseguin: Yes, you need both.
[14:23:05] <_|Nix|_> You need the extension to recognize the enhanced option, and you need code to add the enhanced option to the clone.
[14:23:43] <gseguin> ok
[14:23:50] <_|Nix|_> That might actually be a fairly elegant solution.
[14:50:21] <jquicommit> [13globalize] 15blixt opened pull request #201: Improve language in README (06master...06patch-1) 02http://git.io/hyJiug
[15:04:52] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 06istanbul: 02http://git.io/OoPYuQ
[15:04:52] <jqmobilecommit> 13jquery-mobile/06istanbul 149e91428 15Ghislain Seguin: Tests: set coverage threshold to 0 so build doesn't fail
[15:12:49] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 06istanbul: 02http://git.io/BWtj6Q
[15:12:49] <jqmobilecommit> 13jquery-mobile/06istanbul 142a77985 15Ghislain Seguin: Readme: Added coverage badge
[15:13:28] <gseguin> _|Nix|_: still there?
[15:16:07] <jqmobilecommit> [13jquery-mobile] 15Palestinian opened issue #6885: Panel reloads content div on first open 02http://git.io/ni5oIA
[15:28:49] <gseguin> BOOM! https://coveralls.io/builds/418068 
[15:30:46] <gseguin> OMG OMG OMG! Code coverage is there! Though the numbers are not flattering... Let's remediate that and write more tests!
[15:35:01] <jqmobilecommit> 01[13jquery-mobile01] 15gseguin pushed 1 new commit to 06istanbul: 02http://git.io/q3Lnuw
[15:35:01] <jqmobilecommit> 13jquery-mobile/06istanbul 14111a575 15Ghislain Seguin: Tests: Exclude third-party code from test coverage reporting
[15:39:57] <_|Nix|_> gseguin: I'm still here. Nice!
[15:40:14] <gseguin> did you see that !?!
[15:40:20] <gseguin> this is awesome!
[15:40:36] <gseguin> and much less work than using karma
[15:40:48] <_|Nix|_> gseguin: Very, highly cool!
[15:41:19] <_|Nix|_> gseguin: The best part is, this tells us what kinds of tests to write.
[15:41:21] <gseguin> I mean karma is cool don't get me wrong but the amount of work required to use it is not worth it
[15:41:29] <gseguin> exactly!
[15:41:48] <gseguin> I'll look at the result of the last push and will submit a PR
[15:41:57] <gseguin> there is practically no change
[15:42:00] <_|Nix|_> Absolutely! Wow!
[15:42:21] <gseguin> The next step is to use sinon to write real unit tests
[15:42:35] <gseguin> and move everything else in integration tests
[15:44:12] * gseguin is very happy about this'
[15:48:47] <_|Nix|_> gseguin: Awesome work!
[15:49:06] <gseguin> thanks
[15:52:03] <jqmobilecommit> [13jquery-mobile] 15Palestinian opened issue #6886: One button Navbar 02http://git.io/Vy_rgw
[15:57:47] <gseguin> _|Nix|_: much better! 82%
[15:58:35] <gseguin> excluding third-party code probably was a good idea for our morale ;)
[16:00:05] <jqmobilecommit> [13jquery-mobile] 15gseguin opened pull request #6887: Tests: Code coverage via Istanbul and report to coveralls.io (06master...06istanbul) 02http://git.io/Oj3Sow
[16:03:33] <_|Nix|_> gseguin: :)
