[02:35:05] <doesallmagic> Project jQuery UI - git core build #337: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%20git%20core/337/
[03:07:59] <jquicommit> [13jquery-ui] 15EaterOfCorpses opened pull request #932: Sortable axis revert movement (06master...06master)  02http://git.io/LvGtPg
[03:20:23] <doesallmagic> Project jQuery UI 1-9-stable - git core build #124: STILL FAILING in 45 min: http://swarm.jquery.org:8080/job/jQuery%20UI%201-9-stable%20-%20git%20core/124/
[03:36:13] <doesallmagic> Project jQuery UI - 1.6.x core build #232: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.6.x%20core/232/
[03:51:35] <doesallmagic> Project jQuery UI - 1.7.x core build #233: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.7.x%20core/233/
[04:06:50] <doesallmagic> Project jQuery UI - 1.8.x core build #208: STILL FAILING in 15 min: http://swarm.jquery.org:8080/job/jQuery%20UI%20-%201.8.x%20core/208/
[06:45:33] <scott_gonzalez> mikesherov: You broke the world!
[06:45:43] <mikesherov> scott_gonzalez: how?
[06:45:53] <scott_gonzalez> https://github.com/jquery/jquery-ui/commit/c278a4461b399c5b84abf4e03c1d902bfd130441#L9R287 doesn't account for nested elements inside the handle.
[06:45:53] <b-ot> scott_gonzalez: Mike Sherov (1mon 3w ago): Draggable Tests: Add test coverage for supported options
[06:45:55] <mikesherov> I honestly can't get phantom to fail
[06:45:57] <scott_gonzalez> I'll land a fix.
[06:46:05] <scott_gonzalez> I have no idea if this is related to the phantom fail or not.
[06:46:16] <scott_gonzalez> I just noticed that it's really hard to drag a dialog now.
[06:46:35] <scott_gonzalez> We actually have a clean solution for this in the interactions branch, I'll port it to master right now.
[06:47:29] <mikesherov> scott_gonzalez: My bad, actually, I think that's where I plucked that from
[06:48:21] <scott_gonzalez> You might've copied it before I reviewed it.
[06:48:34] <scott_gonzalez> It was actually ngsilverman who came up with the correct fix.
[06:48:46] <mikesherov> Well, I did say I'd be creating short term instability :-\
[06:48:48] <scott_gonzalez> element.is( this.element.find( this.options.handle ) )
[06:48:56] <mikesherov> OH
[06:49:03] <scott_gonzalez> At least we didn't release it :-)
[06:49:14] <ngsilverman> hey scott_gonzalez 
[06:49:18] <mikesherov> tests would be nice :-P
[06:49:22] <scott_gonzalez> yup
[06:49:34] <ngsilverman> don't forget me!
[06:49:34] <mikesherov> so, with regards to that, I'm landed zhi's change as we speak
[06:49:37] <scott_gonzalez> hey ngsilverman, I *will* get to your PR next week.
[06:49:43] <ngsilverman> ok :P
[06:49:45] <scott_gonzalez> mikesherov: perfect
[06:49:53] <mikesherov> landing*
[06:55:15] <scott_gonzalez> Ugh, these tests in the interactions branch don't event test what we discussed :-(
[06:55:17] <scott_gonzalez> The code is wrong.
[06:55:39] <scott_gonzalez> I think it's time for Dave Stein to start working in a branch.
[06:56:20] <scott_gonzalez> ngsilverman: Do you remember which commit we had that discussion about?
[06:56:30] <scott_gonzalez> Finding comments on commits is always such a pain.
[06:57:07] <scott_gonzalez> found it: https://github.com/jquery/jquery-ui/commit/436ddbdd81bc62035ae004cb38dcbda53cf3891e
[06:57:08] <b-ot> scott_gonzalez: Dave Stein (2w 3d ago): Draggable: Changed "is" to "closest" for isValidTarget
[06:58:46] <scott_gonzalez> Ugh, so after that discussion, we agreed that .closest() was the correct solution, and then he used .is() :-(
[06:59:14] <ngsilverman> well he said closest wasn't passing the tests
[06:59:22] <ngsilverman> so that's probably why he changed it up again
[07:00:24] <mikesherov> right, that's the point
[07:00:40] <scott_gonzalez> That probably means the tests were bad.
[07:00:45] <ngsilverman> yep
[07:00:53] <mikesherov> OK then
[07:00:55] <scott_gonzalez> We clearly pointed out a scenario that fails with .is()
[07:01:05] <scott_gonzalez> And he used it and didn't write a test for the case we discussed.
[07:01:35] <scott_gonzalez> All of mikesherov's new tests pass with the .closest() implementation.
[07:01:46] <scott_gonzalez> Now I just need to write a test that fails against master, but pases with .closest().
[07:02:08] <mikesherov> OK, so you're going to cover that, scott_gonzalez?
[07:02:14] <scott_gonzalez> yup
[07:02:41] <mikesherov> Sorry for the confusion.
[07:02:51] <mikesherov> I copied the code and the test from interactions
[07:03:17] <mikesherov>  I'm just glad we actually have decent coverage on draggable now. Should be easier to write more tests now considering the existing base.
[07:04:36] <scott_gonzalez> Well, the test you copied from interactions was commented out :-P
[07:04:45] <scott_gonzalez> I'm cleaning that up to test what we actually want to test.
[07:04:56] <mikesherov> ok
[07:09:26] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/yzScpA
[07:09:26] <jquicommit> 13jquery-ui/06master 14cdff72e 15Scott Gonz√°lez: Draggable: Account for descendants in handle.
[07:09:44] <doesallmagic> Project jQuery UI build #998: STILL FAILING in 27 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/998/
[07:09:44] <doesallmagic> Scott Gonz√°lez: Draggable: Account for descendants in handle.
[07:11:04] <scott_gonzalez> I guess it's a good thing that I use the default dialog demo for all of my random testing :-P
[07:16:18] <doesallmagic> Project jQuery UI Mask build #14: STILL FAILING in 6 min 34 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Mask/14/
[07:23:46] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/5_9-7Q
[07:23:46] <jquicommit> 13jquery-ui/06master 14e0b2644 15Scott Gonz√°lez: Removed guard against duplicate loading. Use safe references to original functions when proxying, don't rename originals.
[07:23:59] <doesallmagic> Project jQuery UI build #999: STILL FAILING in 25 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/999/
[07:24:00] <doesallmagic> Scott Gonz√°lez: Removed guard against duplicate loading. Use safe references to original functions when proxying, don't rename originals.
[07:30:41] <darkfrog> guys, you really need to add a flag to autocomplete to allow HTML in the results!
[07:30:47] <doesallmagic> Project jQuery UI Mask build #15: STILL FAILING in 6 min 47 sec: http://swarm.jquery.org:8080/job/jQuery%20UI%20Mask/15/
[07:31:06] <darkfrog> I just upgraded from 1.9.1 to 1.10.1 and now my hack to introduce HTML in the results doesn't work anymore.
[07:31:20] <darkfrog> and all of the examples online are useless as well
[07:32:23] <darkfrog> what replaces .data('autocomplete')._renderItem in 1.10.1?
[07:34:22] <tj_vantoll> darkfrog http://jqueryui.com/upgrade-guide/1.10/#removed-data-fallbacks-for-widget-names
[07:37:00] <darkfrog> tj_vantoll: so I should reference 'ui-autocomplete' instead of 'autocomplete'?
[07:37:44] <tj_vantoll> Yes.
[07:38:52] <darkfrog> tj_vantoll: I'm curious why HTML support in results hasn't been a flag you can set?  I mean, it's the difference between calling text() and html().
[07:39:19] <darkfrog> tj_vantoll: btw, that did the trick, thanks!
[07:41:30] <tj_vantoll> I'd have to defer to others to answer that question, but one reason is that it presents a big XSS vulnerability.
[07:46:45] <scott_gonzalez> That's the answer.
[07:46:56] <scott_gonzalez> We ripped out HTML by default because of XSS.
[07:47:03] <scott_gonzalez> HTML via extension is super simple.
[07:47:20] <scott_gonzalez> hmm...our docs like to my extension, don't they?
[07:47:40] <scott_gonzalez> s/like/link/
[07:48:00] <scott_gonzalez> Ok, well, I guess that is a good reason for me to update my repo.
[07:48:16] * scott_gonzalez shuffles items on todo list
[07:49:19] <darkfrog> scott_gonzalez: shouldn't the control be in the hands of the developer?  I understand defaulting it to false, but forcing some boilerplate JS to make it possible because of potential abuse seems overly controlling for an API.
[07:49:36] <scott_gonzalez> Forcing boilerplate?
[07:49:41] <scott_gonzalez> What are you talking aobut?
[07:49:57] <darkfrog> scott_gonzalez: forcing you to override the plugin rather than it just being an option.
[07:50:13] <scott_gonzalez> You mean loading an extension to add non-default behavior?
[07:50:52] <scott_gonzalez> FWIW, there is no argument you can make to change this general rule.
[07:50:55] <darkfrog> $('#myfield').autocomplete({ allowHTML: true }); <-- it should be as simple as that.
[07:51:15] <scott_gonzalez> darkfrog: It is...if you load the extension.
[07:51:37] <darkfrog> scott_gonzalez: what extension?
[07:51:54] <scott_gonzalez> https://github.com/scottgonzalez/jquery-ui-extensions/blob/master/autocomplete/jquery.ui.autocomplete.html.js
[07:52:02] <scott_gonzalez> The one that's linked to from the documentation.
[07:52:16] <scott_gonzalez> Which needs to be updated to use .data( "ui-autocomplete" )
[07:52:34] <scott_gonzalez> And the implementation is NOT just changing .text() to .html()
[07:55:47] <darkfrog> scott_gonzalez: thanks for the link, I may start using that instead of my own little hack. :o
[07:57:24] <scott_gonzalez> darkfrog: I'll try to update that today.
[07:57:47] <scott_gonzalez> But in the meantime, just updating the data keys should fix it.
[07:57:54] <scott_gonzalez> I'll have bigger changes than that for my updates though.
[07:57:55] <darkfrog> scott_gonzalez: it did
[07:58:00] <scott_gonzalez> great
[07:58:40] <darkfrog> better multiple select support would be nice as well as an extension. ;)
[07:59:03] <darkfrog> I have multi-select support but it's not all that great
[07:59:13] <scott_gonzalez> multi-select is generally best done with tokens.
[07:59:27] <darkfrog> scott_gonzalez: how do you mean?
[08:00:02] <scott_gonzalez> like http://www.emposha.com/javascript/jquerymultiselect.html
[08:00:25] <scott_gonzalez> or http://devthought.com/wp-content/projects/jquery/textboxlist/Demo/
[08:01:26] <darkfrog> awesome
[08:02:10] <darkfrog> that second one is really nice
[08:02:55] <darkfrog> scott_gonzalez: thanks for the link, I'll have to start using that instead of jQuery UI's autocomplete
[08:03:33] <scott_gonzalez> We'll eventually have something like that in UI, but not for a while.
[08:04:42] <scott_gonzalez> Time to go build more walls, back in a few hours...
[08:08:15] <darkfrog> scott_gonzalez: thanks for your help and links. :)
[11:10:36] <mikesherov> scott_gonzalez: yt?
[11:39:51] <mikesherov> https://github.com/jquery/jquery-ui/pull/916/files has a bug
[11:39:51] <b-ot> mikesherov: Pull request #916 by zhizhangchen (2w 5d ago): Fix sortable for floating items
[11:57:23] <mikesherov> I have a fix for https://github.com/jquery/jquery-ui/pull/916/files 
[11:57:23] <b-ot> mikesherov: Pull request #916 by zhizhangchen (2w 5d ago): Fix sortable for floating items
[11:57:27] <mikesherov> scott_gonzalez: ^
[11:59:52] <scott_gonzalez> mikesherov: What's up?
[12:00:22] <mikesherov> so, I found a bug in that PR
[12:00:29] <scott_gonzalez> I'm sick, my wall is backward, and the only thing 1.10.2 is waiting on has a bug...
[12:00:31] <scott_gonzalez> what a wonderful day
[12:00:58] <mikesherov> and I think the fix is to move the the early return up to the other gaurd clause
[12:01:29] <mikesherov> https://github.com/mikesherov/jquery-ui/commit/02cb4cc20f98fb729039f84f66e8eba0ad2052a0
[12:01:29] <b-ot> mikesherov: Mike Sherov (43m 49s ago): testing
[12:02:25] <scott_gonzalez> If that makes sense and fixes all the related tickets, land it.
[12:02:49] <scott_gonzalez> I don't really trust myself to make decisions right now.
[12:03:07] <mikesherov> scott_gonzalez: just confirm for me that change should only fire when the element actually visually moves
[12:03:11] <mikesherov> http://jsfiddle.net/3JdaT/2/ is my version
[12:03:16] <scott_gonzalez> Yes, that's correct.
[12:03:44] <mikesherov> OK, then that's the fix
[12:03:48] <mikesherov> OK, landing shortly
[12:03:53] <mikesherov> just cleaning up tests
[12:04:09] <scott_gonzalez> Thanks.
[13:44:25] <mikesherov> scott_gonzalez: quick review? https://github.com/mikesherov/jquery-ui/compare/zhizhangchen-fix-sortable-for-floating-items
[13:58:13] <doesallmagic> Project jQuery UI build #1000: STILL FAILING in 1.8 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/1000/
[13:58:14] <doesallmagic> * Mike Sherov: Sortable: Skip items that are not at the same line as the cursor when floating. Fixes #8792: Issue with floated items in connected lists.
[13:58:14] <doesallmagic> * Mike Sherov: Sortable: Skip triggering over event if it's alreay over the continer. Fixes #9041: the over event fires on every pixel movement
[13:58:15] <doesallmagic> * Mike Sherov: Sortable Tests: Add tests to support #9041 and #8792
[13:58:26] <jquicommit> 01[13jquery-ui01] 15mikesherov pushed 3 new commits to 06master: 02http://git.io/eyWjLw
[13:58:26] <jquicommit> 13jquery-ui/06master 1489473f6 15John Chen: Sortable: Skip items that are not at the same line as the cursor when floating. Fixes #8792: Issue with floated items in connected lists.
[13:58:26] <jquicommit> 13jquery-ui/06master 1407ce771 15John Chen: Sortable: Skip triggering over event if it's alreay over the continer. Fixes #9041: the over event fires on every pixel movement
[13:58:26] <jquicommit> 13jquery-ui/06master 148b1b34c 15Mike Sherov: Sortable Tests: Add tests to support #9041 and #8792
