[00:05:34] <sergejack> Hi
[00:05:37] <sergejack> With all the new input type of HTML5 which currently doesn't offer any CSS control, I'm looking for a javascript way to replace all "range", "date","color" inputs by widgets
[00:05:39] <sergejack> Is JQueryUI doing all this?
[00:21:41] <_|Nix|_> sergejack: This is a question better suited for #jquery.
[00:22:13] <sergejack> Isn't JQueryUI about adding UI widgets?
[00:38:45] <_|Nix|_> sergejack: If you're talking about adding a widget to the library, then yes. If you're talking about adding a widget to your application, then #jquery is the channel for you.
[00:39:05] <sergejack> ok
[00:39:12] <sergejack> then what is jqueryui for?
[00:40:35] <_|Nix|_> sergejack: For creating widgets in your applications. For example, the jQuery UI slider widget will give you a slider for selecting a numeric value.
[00:41:24] <_|Nix|_> sergejack: However, if you want to turn an existing range input into a slider, you may be better off with jQuery Mobile's slider, which automatically connects the sliding button to the native input's value.
[00:42:16] <sergejack> ok
[00:42:31] <sergejack> I'll check it out
[00:43:06] <_|Nix|_> sergejack: Also look at http://api.jqueryui.com/category/widgets ... there you will see how each widget is created.
[00:43:18] <_|Nix|_> sergejack: There are complete examples at the bottom of each widget page.
[00:44:01] <sergejack> Thank you
[03:27:31] <nullbytes> Is there something like jQuery Accordion with custom sorting and filtering of headers and a scrollbar that lazy loads the headers when they are scrolled to?
[04:11:11] <arschmitz> _|Nix|_: Ping!
[05:20:14] <_|Nix|_> arschmitz: What's up?
[05:47:59] <arschmitz> _|Nix|_: you still here
[06:01:18] <_|Nix|_> arschmitz: yeah.
[06:01:27] <_|Nix|_> arschmitz: Sorry. Hectic day here.
[06:07:52] <arschmitz> _|Nix|_: so i think we need to take some drastic steps with the page events
[06:08:11] <_|Nix|_> arschmitz: Lay it on me, bruh!
[06:08:24] <arschmitz> people are seriously not happy and honestly i can see why our api is in such a broken state right now for the page events 
[06:08:30] <arschmitz> ok so here is my proposal 
[06:09:04] <arschmitz> https://docs.google.com/spreadsheets/d/10FBrCSUFCmLIbJlODJCXvLNmKSUqQesWIX41H26YWsc/edit?usp=sharing
[06:09:39] <arschmitz> the big thing is i think we should consider this a bug and make the change in 1.4.3
[06:10:49] <arschmitz> there is no consistency in the pagecontainer events
[06:10:55] <arschmitz> they are missing vital information
[06:11:10] <arschmitz> some of the events are completely missing resulting in us telling people to use a mishmash
[06:11:33] <arschmitz> the way you have to figure out toPage / prevPage is completely inconsistent between events
[06:12:39] <arschmitz> _|Nix|_: pageContainer's events are essentially only half implemented this never should have made it into a stable version in its current state i don't think. 
[06:12:42] <_|Nix|_> arschmitz: Yeah. For sure. I guesss toPage and prevPage should be present in all page change events. toPage first as a string, then as a jQuery object.
[06:12:55] <arschmitz> _|Nix|_: yup
[06:13:03] <_|Nix|_> arschmitz: That's a very comprehensive review! Very nice!
[06:13:34] <arschmitz> _|Nix|_: yeah working on demos and some tools convinced me this was needed
[06:14:41] <arschmitz> _|Nix|_: i already made all these changes in a local branch
[06:15:01] <_|Nix|_> arschmitz: Not sure about toPage/fromPage during load. Load is not really a directional thing.
[06:15:20] <_|Nix|_> arschmitz: load can happen independently of a page change.
[06:15:25] <arschmitz> _|Nix|_: its the current page and the page being loaded
[06:15:40] <arschmitz> and its for consistency
[06:15:45] <_|Nix|_> arschmitz: Right, but toPage indeicates that it's the page being navigated /to/.
[06:16:22] <arschmitz> yeah i thnink for consistency we should keep the names though
[06:16:32] <_|Nix|_> arschmitz: I'm a bit torn between the consistency of having it always called toPage, and the ambiguity it introduces.
[06:17:04] <arschmitz> _|Nix|_: there is no real ambiguity in the docs you define toPage in the ui object as the page being loaded
[06:17:07] <_|Nix|_> arschmitz: ... in that during load, it's not necessarily a destination. A page can be loaded by hand.
[06:17:48] <arschmitz> _|Nix|_: considder the case you want to make a tool to handle your event binding 
[06:18:06] <arschmitz> that allows you to just pass an event and page 
[06:18:15] <arschmitz> so that you could basicly bind in the old way
[06:18:19] <_|Nix|_> arschmitz: Yeah, you're right. That also allows you to move code from one handler to another.
[06:18:34] <arschmitz> it would be best to allow checking a single prop in all events
[06:18:41] <_|Nix|_> Yeah.
[06:18:46] <arschmitz> and not have to do special handling of some
[06:19:00] <arschmitz> and that will address people complaining about the new way not being modular enough
[06:19:07] <_|Nix|_> arschmitz: What's gonna be the fromPage during load?
[06:19:16] <arschmitz> whatever the current page is
[06:19:30] <_|Nix|_> arschmitz: OK.
[06:20:06] <arschmitz> in any of the events the two main things you will generally care about is what is the current page and what page is being loaded  / navigated to
[06:20:34] <_|Nix|_> Yeah, for sure.
[06:20:43] <arschmitz> generally any logic surrounding these events will examine these two things 
[06:21:00] <arschmitz> so i want to make those consistent and and easy to access
[06:21:24] <_|Nix|_> Sounds good. Where do I sign? :)
[06:21:38] <arschmitz> _|Nix|_: to address the modular concerns im making a tool thats a plugin im calling onPage
[06:21:43] <arschmitz> it uses same api as on
[06:22:00] <arschmitz> but you just pass like "beforechange", "pageid"
[06:22:20] <arschmitz> and it handles all your pagecontainer event binding
[06:22:43] <arschmitz> and it uses the pagecontainer options and saves all your callbacks in an array
[06:22:51] <arschmitz> and executes them in order 
[06:23:19] <arschmitz> and this way your not even actually binding events your getting your callbacks executed directly via the option so its a bit better performance
[06:23:38] <_|Nix|_> arschmitz: I suggested to one OP that verbosity can be reduced by using the widget factory's .pagecontainer({ eventname: handler() {} }) syntax.
[06:23:53] <arschmitz> _|Nix|_: the modular concern is valid thre though
[06:24:06] <arschmitz> because that means only one place in yoru code can you set a callback on that event
[06:24:23] <arschmitz> if its set somewhere else your original one is ovewritten
[06:24:30] <arschmitz> so with multiple devs this is a pain
[06:25:11] <arschmitz> thats where this onPage plugin comes in it saves the callbacks in an array so you can attach multiple callbacks to a single event still
[06:26:54] <arschmitz> _|Nix|_: if every one agrees on the changes to the events i think we should do 1.4.3 as soon as the changes are in master
[06:27:19] <arschmitz> with demos for all this page stuff
[06:27:27] <arschmitz> then hopefully that will quiet the masses
[06:27:56] <_|Nix|_> arschmitz: I'm good, but I think we need to test this a lot.
[06:28:16] <arschmitz> _|Nix|_: there are no realy api changes here
[06:28:26] <arschmitz> _|Nix|_: we are just adding props to the ui object
[06:28:39] <arschmitz> i mean we want to properly test of course
[06:28:46] <_|Nix|_> arschmitz: Well, the API replacing the deprecated page events is being improved significantly before the deprecated events are removed.
[06:28:54] <arschmitz> but there are no changes in how anything works 
[06:29:00] <_|Nix|_> arschmitz: No, that's true.
[06:29:11] <_|Nix|_> arschmitz: I guess we're simply completing the API before removing the old one.
[06:29:51] <arschmitz> _|Nix|_: what i mean is it does not change anything only adds the props to the object
[06:30:08] <arschmitz> all the old events are still triggered
[06:30:11] <arschmitz> nothing is removed
[06:30:19] <arschmitz> no names are changed
[06:30:30] <_|Nix|_> Yeah, I know. There's no API breakage.
[06:30:35] <arschmitz> yeah
[06:30:45] <arschmitz> we are just making the api actually usable
[06:30:56] <_|Nix|_> In fact, the API is broken now, because it does not provide an adequate replacement for the things we're deprecating.
[06:31:06] <arschmitz> _|Nix|_: exactly
[06:31:33] <_|Nix|_> arschmitz: IINM, there's already a PR for adding pagecontainerchange.
[06:31:56] <_|Nix|_> arschmitz: So you should probably fold that in with the rest of your changes.
[06:32:11] <arschmitz> _|Nix|_: basicly the changes i outline in the doc make it how i essentially thought it was based on what john had told us
[06:32:20] <_|Nix|_> :)
[06:32:42] <_|Nix|_> Yep - I also had some conceptions that I later realized were of the mis-* variety :)
[06:34:24] <_|Nix|_> I hope uGoMobi gets settled in by Thursday's meeting (at the latest), so we can hash this out.
[06:34:26] <arschmitz> i think the combo of the api fixes, the event inspector, and the onPage plugin should address all the concerns
[06:34:41] <arschmitz> people raise in the issues
[06:35:10] <_|Nix|_> arschmitz: How exactly do you use the onPage plugin? Like $( ":mobile-pagecontainer" ).onPage( "load", function( event, ui ) {});?
[06:35:44] <arschmitz> with the plugin people will be able to take the event bindings they already have in 1.3 and they will not only work in 1.4 but have better performance
[06:36:17] <arschmitz> _|Nix|_: so if in 1.3 you did $( document ).on( "pagechange", "#page-id", function(){});
[06:36:42] <arschmitz> _|Nix|_: so if in 1.4 you would do $( document ).onPage( "change", "#page-id", function(){});
[06:37:12] <arschmitz> you just move "page" from the event name to the method name :)
[06:37:27] <_|Nix|_> arschmitz: ... and in the implementation you look up and down the DOM for the closest pagecontainer?
[06:38:07] <arschmitz> _|Nix|_: i just do $( document ).find( :mobile-pagecontainer ).eq( 0 ) right now
[06:38:35] <arschmitz> so i just pick the first pagecontainer i find
[06:38:36] <_|Nix|_> arschmitz: You should do closest() first and, failing that, .find().
[06:38:48] <arschmitz> closest to what?
[06:39:06] <_|Nix|_> arschmitz: Well, it's a jQuery plugin. It can be called on a page, for example.
[06:39:29] <_|Nix|_> arschmitz: If people have existing pages, like in a multipage template, they may have $( "#page1" ).on( "pagebeforechange", ... );
[06:39:32] <arschmitz> _|Nix|_: only if its already in the dom and then all your events would never happen because you would be delegating from a page
[06:40:47] <arschmitz> _|Nix|_: i was planning on only supporting delegation since i dont think that for page events direct binding is common or generally good practice the way pages work
[06:41:07] <_|Nix|_> arschmitz: Actually, before you didn't need to delegate. It was $( document ).on( "pagecreate", function( event ){ var page = $( event.target ); });
[06:41:26] <arschmitz> pagecreate is different
[06:41:36] <_|Nix|_> Yeah, bad example. Sorry.
[06:41:38] <arschmitz> thats a widget factory event from the pagewidget
[06:41:57] <arschmitz> _|Nix|_: that would still work though
[06:42:29] <arschmitz> i mean to say direct binding from page
[06:42:38] <arschmitz> not all direct binding
[06:43:01] <_|Nix|_> What do you mean by direct binding from page?
[06:43:12] <arschmitz> so $( "#page-id" ).on( "pagechange", function(){});
[06:43:15] <arschmitz> would not work
[06:43:21] <_|Nix|_> No. That's right.
[06:43:45] <arschmitz> so $( "#page-id" ).onPage( "change", function(){});
[06:43:49] <arschmitz> i mean
[06:43:57] <arschmitz> i was not planning on making that valid
[06:44:06] <_|Nix|_> That's an example where you should use .closest()
[06:44:18] <arschmitz> thats an example im not planning on supporting lol
[06:44:35] <_|Nix|_> arschmitz: Why's that though? It's easy enough.
[06:44:54] <_|Nix|_> arschmitz: You just look up the tree with .closest() instead of down the tree with .find()
[06:45:02] <_|Nix|_> arschmitz: ... in fact, it's more accurate.
[06:45:08] <arschmitz> _|Nix|_: the only reason i would is that it would complete the api for on
[06:45:12] <arschmitz> which is what its based on
[06:45:25] <arschmitz> _|Nix|_: but it only works in one specific case
[06:45:32] <arschmitz> and i think leads to confusion
[06:45:44] <_|Nix|_> arschmitz: In the future, if/when we support multiple pagecontainers you can't even use .find() because .find() may return the wrong pagecontainer.
[06:46:08] <arschmitz> _|Nix|_: this is not for the future this is to help the transition from 1.3 to 1.4
[06:46:55] <_|Nix|_> OK, so it'll help those who do not use $( "#page1" ).on( "pagechange", ... ), right?
[06:47:07] <arschmitz> _|Nix|_: currently right
[06:47:22] <arschmitz> but that only even works if your using multipage template
[06:47:32] <arschmitz> and dont bind until document ready
[06:47:37] <_|Nix|_> Yeah, exactly.
[06:48:03] <_|Nix|_> Not sure how n00bs do it. I've left that camp a while (but not too long) ago
[06:48:18] <arschmitz> _|Nix|_: i suppose i could add that
[06:48:22] <_|Nix|_> ... at least when it comes to page events.
[06:48:33] <arschmitz> just to completely replicate the api of on
[06:48:40] <arschmitz> so that it requires less explination 
[06:48:51] <_|Nix|_> At that point it's basically syntactic sugar.
[06:48:57] <arschmitz> yeah
[06:49:43] <_|Nix|_> arschmitz: Well, with a perf benefit - although I'm not so sure how big of a benefit it will be, because you'll end up replicating some of core's event handling code.
[06:49:45] <arschmitz> _|Nix|_: this is also useful in the future because its better then actual event binding 
[06:50:08] <arschmitz> _|Nix|_: nope no events are bound
[06:50:26] <arschmitz> option callbacks are not events
[06:50:46] <arschmitz> they are called directly
[06:51:24] <_|Nix|_> arschmitz: OK, but some handlers may make use of event.target.
[06:51:49] <_|Nix|_> arschmitz: So converting them over using onPage may not work in that case.
[06:52:19] <_|Nix|_> arschmitz: Well, in any case. It's a plugin, it's optional, and people have a migration path with or without it.
[06:52:53] <arschmitz> _|Nix|_: you still get an event
[06:53:21] <arschmitz> _|Nix|_: but you dont bind its called directly internally in _trigger
[06:53:45] <arschmitz> https://github.com/jquery/jquery-ui/blob/master/ui/widget.js#L476
[06:54:42] <_|Nix|_> arschmitz: OK, and is this that much faster than simply binding?
[06:54:52] <arschmitz> i dont know that i would say much
[06:55:07] <arschmitz> _|Nix|_: but you are avoiding extra event bindings
[06:55:21] <arschmitz> because at no point is an event actually bound
[06:55:43] <arschmitz> and lots of event bindings are a known performance issue on mobile
[06:55:52] <arschmitz> _|Nix|_: we used to have this problem with listview
[06:56:40] <arschmitz> _|Nix|_: so in cases where your developing a highly modular application you could potentially have a lot of event bindings after a while
[06:57:31] <arschmitz> _|Nix|_: this eliminates all those and uses a central pageevent callback mechanism which is clearly a more modular approach then everyone binding stuff all over the place
[06:57:39] <arschmitz> and yields better performance
[06:58:18] <arschmitz> _|Nix|_: this was one of the main complaints of the current pagecontainer events that they were poor for modular programming
[06:58:46] <arschmitz> this plugin is basicly my retort to that saying this is actually an opportunity for more modular programming
[06:59:25] <_|Nix|_> OK. Sounds good. Either way, the pagecontainer API improvements will do a lot of good.
[06:59:54] <arschmitz> _|Nix|_: yeah for sure
[07:00:32] <arschmitz> _|Nix|_: oh i had something i wanted you to look at too
[07:01:12] <arschmitz> _|Nix|_: remember the nested lists plugin
[07:01:12] <_|Nix|_> URL it my way.
[07:01:19] <_|Nix|_> Right ...
[07:01:41] <arschmitz> https://github.com/arschmitz/jquery-mobile-nestedlists
[07:01:46] <arschmitz> you had done a couple commits on it
[07:02:26] <_|Nix|_> Yeah, some styling stuff.
[07:02:26] <arschmitz> _|Nix|_: i completely re-wrote it because people complained you could not use it on a dynamicly created list
[07:02:39] <arschmitz> its an extension no
[07:03:21] <arschmitz> its soooo much simpler now dont know why we didnt think of this ?
[07:03:25] <_|Nix|_> arschmitz: Yeah, that was my original idea for doing nested lists - to make it an extension.
[07:03:39] <_|Nix|_> arschmitz: ... but you said that it should be a demo illustrating the markup necessary for it.
[07:03:42] <_|Nix|_> arschmitz: So I made it a demo.
[07:03:59] <arschmitz> _|Nix|_: this is for the ones that actually make a new page
[07:04:06] <arschmitz> thats all this does
[07:04:22] <_|Nix|_> arschmitz: Yeah, I guess it essentially revives the old nested lists.
[07:04:33] <_|Nix|_> arschmitz: How are you handling the navigation?
[07:04:37] <arschmitz> your thinking of an old version where it did it a bunch of different ways
[07:04:49] <arschmitz> https://github.com/arschmitz/jquery-mobile-nestedlists/blob/master/jquery.mobile.nestedlists.js#L23
[07:04:58] <_|Nix|_> arschmitz: Nono. I'm thinking about what used to be in the library.
[07:05:12] <_|Nix|_> arschmitz: That which we were oh-so-eager to excise.
[07:05:17] <arschmitz> there is no special handeling here
[07:06:18] <_|Nix|_> arschmitz: Oh, I see. The pages are deep-linkable, and I'm assuming the IDs are autogenerated.
[07:06:26] <arschmitz> _|Nix_: yup
[07:06:44] <_|Nix|_> arschmitz: This could /sooo/ benefit from { deepLink: false } on .change() options.
[07:06:48] <arschmitz> but if you save the link to one it just loads the main page
[07:06:53] <arschmitz> _|Nix|_: yeah
[07:07:00] <arschmitz> i just bailed on any concept of that for this
[07:07:24] <_|Nix|_> arschmitz: No. That concept should be implemented independently, and this should use its public API.
[07:07:37] <arschmitz> but this is so much better then before 
[07:07:45] <arschmitz> there was like 3 nested .one's before lol
[07:08:43] <_|Nix|_> Insaaaane!
[07:09:12] <arschmitz> _|Nix|_: https://github.com/arschmitz/jquery-mobile-nestedlists/commit/8ec70da4b1e1dff8e804031ea2cc6df2c63b5399#diff-dc019591a0e8c264b69c6fc8e1ad580bL24
[07:10:04] * _|Nix|_ 's head is spinning
[07:10:27] <arschmitz> yeah oh well better now lol
[07:10:33] <_|Nix|_> Yeah ... I would say it's /slightly/ simpler now :)
[07:12:12] <arschmitz> _|Nix|_: my datepicker-wrapper has been pretty popular
[07:12:21] <arschmitz> _|Nix|_: iv had like 10 pull requests
[07:12:26] <arschmitz> from random people
[07:12:27] <_|Nix|_> Cool!
[07:12:53] <arschmitz> _|Nix|_: one person is even working on a 1.3 branch
[07:12:55] <_|Nix|_> arschmitz: ... and I just went to get my car saftied (a yearly affair in Finland) and I booked my appointment over jQM 1.1 :)
[07:13:09] <arschmitz> i just need to finish testing it
[07:13:20] <_|Nix|_> safetied
[07:13:27] <_|Nix|_> Is that right? No idea ...
[07:13:29] <arschmitz> _|Nix|_: nice so many pages and apps use some version of it
[07:13:45] <_|Nix|_> arschmitz: Oh, and datepicker? Man! Like, every airline.
[07:13:59] <arschmitz> _|Nix|_: we call it an inspection sticker
[07:14:14] <arschmitz> _|Nix|_: datepicker is used on like every site with a datepicker ever
[07:14:15] <_|Nix|_> :)
[07:14:41] <_|Nix|_> Anyhoo ... all very cool! I gotta go lunch now. BBIAB!
[07:14:47] <arschmitz> later
[07:26:11] <frequent> arschmitz: ping
[07:27:08] <frequent> arschmitz: if you want to take a round in my mostly done carousel widget - http://jsbin.com/ofuhaw/1289
[07:29:54] <arschmitz> frequent: wow on a big monitor its like huge
[07:30:11] <frequent> arschmitz: it extends to the parent.
[07:30:39] <arschmitz> yeah on my monitor the buttons to change slides are at the very bottom
[07:31:01] <frequent> arschmitz: (thinks of a big screen)
[07:31:23] <frequent> arschmitz: one idea I tried was to not have to hardcode any dimensions 
[07:31:33] <frequent> arschmitz: and not using pos:absolute
[07:31:46] <frequent> arschmitz: so it's fully "elastic"
[07:32:03] <arschmitz> frequent: also on iphone 5s i cant even see buttons in landscape
[07:32:34] <frequent> arschmitz: I only have a few devices to test, no iphone currently
[07:32:57] <arschmitz> frequent: yeah i think i would work on some other way to set a size
[07:33:16] <arschmitz> because this too big in most things in landscape it seems
[07:33:30] <frequent> arschmitz: ok. will give it a look.
[07:33:56] <arschmitz> frequent: have a link to your repo?
[07:34:29] <frequent> arschmitz: https://github.com/frequent/JQM-carousel
[07:34:52] <arschmitz> frequent: last week i saw what i could build for a carousel in under 2 hours using jqm
[07:35:07] <arschmitz> just using built in transitions
[07:35:39] <frequent> arschmitz: yes, JQM has everything to make a carousel, so I always hate adding 3rd party things
[07:37:20] <arschmitz> frequent: im confused by one thing
[07:37:37] <arschmitz> why is there a widget and an extension to the widget in the same file?
[07:38:29] <frequent> arschmitz: I tried making the enhancement a extension. This way, pre-enhanced would allow to drop it and I don't need to parse the enhancement-options
[07:38:43] <arschmitz> ok
[07:39:10] <frequent> arschmitz: i'm a pre-enhance fan...
[07:39:49] <arschmitz> frequent: but wouldnt you want them in different files then??
[07:40:05] <frequent> arschmitz: uhm... yes :-)
[07:40:28] <arschmitz> :) ok just checking that was the part i thought was odd
[07:40:37] <frequent> arschmitz: np
[07:40:49] <arschmitz> what the usecase for an extension and a widget in same file were
[07:40:59] <arschmitz> generally the point of an extension is so you can exclude it
[07:41:42] <frequent> :-)
[07:48:51] <rxaviers> scott_gonzalez, jzaefferer, by the way, I very much liked the approach you've chosen of keeping the release specifics into each respective project. I wonder if we could do something similar with DB.
[07:50:07] <rxaviers> Another piece I liked is the use of shelljs, it makes the code a lot cleaner (compared to grunt utils).
[07:50:26] <scott_gonzalez> rxaviers: We can look into changing the API to be pluggable.
[07:50:32] <scott_gonzalez> Though I wouldn't recommend using shelljs.
[07:50:41] <scott_gonzalez> I plan on dropping it as soon as we can.
[07:50:49] <rxaviers> oh really, why? compatibility?
[07:51:02] <scott_gonzalez> It's a terrible implementation. It's just a super hack that melts your computer.
[07:51:12] <scott_gonzalez> node 0.12 has execSync().
[07:51:53] <rxaviers> so, performance?
[07:52:07] <scott_gonzalez> yeah
[07:52:17] <scott_gonzalez> It really overworks your computer.
[07:52:29] <rxaviers> Im afraid that by using exec(), you will face compatibility issues through diff OSes
[07:52:37] <scott_gonzalez> Why?
[07:52:56] <rxaviers> well, *nix vs. windows is very clear, eg. cp.
[07:53:08] <rxaviers> if you consider it's to be supported for *nix envs only, it helps.
[07:53:19] <scott_gonzalez> You wouldn't execSync( "cp" ), you'd use the fs module.
[07:53:23] <rxaviers> (it's supposed to support)*
[07:53:57] <rxaviers> using those low level functions make the code look ugly again :(
[07:54:18] <rxaviers> I mean: how do you `cp -r dir1 dir2`?
[07:54:40] <scott_gonzalez> We can provide helpers for that.
[07:54:43] <rxaviers> you'll prob need to iterate using forEach()
[07:54:46] <rxaviers> I see
[07:55:28] <rxaviers> Those helpers are what shelljs was supposed to be. :p
[07:55:31] <scott_gonzalez> There's also ncp: https://www.npmjs.org/package/ncp
[07:57:12] <rxaviers> Cherry-picking each helper seems exhaustive. Anyway, good to know shelljs isn't what I expected it to be.
[07:57:19] <rxaviers> anyway..
[08:00:17] <rxaviers> scott_gonzalez, about the stable download vs. site download, vs. any other UI distribution... (cc jzaefferer). My current position is whatever you and jzaefferer thinks it's good, Im good with. But, something bothers me. Stable download is different than custom download (using all defaults).
[08:01:35] <rxaviers> Talking with jzaefferer, he suggested that we make the stable download similar to custom download.
[08:03:00] <scott_gonzalez> I'm fine with that.
[08:03:08] <scott_gonzalez> It's just adding more stuff, not removing anything, right?
[08:03:15] <rxaviers> Right
[08:03:21] <scott_gonzalez> That's fine with me.
[08:03:27] <rxaviers> actually, almost true
[08:03:57] <scott_gonzalez> I thought Jörn's comment on the ticket meant that both of you thought it shouldn't change.
[08:04:00] <rxaviers> the change will add docs and remove tests (as jzaefferer has pointed out)
[08:04:41] <jzaefferer> the output of the create-quickdownload task wouldn't change, except for the file name
[08:04:51] <jzaefferer> what it currently generates looked good to us
[08:05:08] <jzaefferer> it would be a tiny bit different to the quick download we have right now, as described
[08:05:24] <scott_gonzalez> rxaviers is saying that he doesn't think it should be what it is.
[08:05:56] <rxaviers> wait
[08:06:25] <rxaviers> I think the change will make things (stable and custom download w/ all defaults) similar and it's a better thing.
[08:07:14] <rxaviers> But, previous quickdownload grunt task was building "smoothness + base theme".
[08:07:24] <rxaviers> Instead, it should build "lightness + base theme"
[08:07:33] <rxaviers> Base theme is part of the source code, it's always there.
[08:08:40] <rxaviers> One of the differences between the current stable and the proposed stable is: the proposed stable now carries a theme.
[08:09:14] <jzaefferer> sounds good to me
[08:10:37] <rxaviers> scott_gonzalez, do you confirm too?
[08:11:13] <scott_gonzalez> The current stable does contain a theme.
[08:11:23] <rxaviers> which one
[08:11:28] <scott_gonzalez> smoothness (base)
[08:11:31] <rxaviers> base right?
[08:12:10] <scott_gonzalez> I agree we should make the stable download be the equivalent of a custom download with all components.
[08:12:23] <rxaviers> cool
[08:12:23] <rxaviers> ok
[08:12:47] <scott_gonzalez> I think it should continue to use base (smoothness), but I don't really care that much.
[08:13:07] <scott_gonzalez> If you want to change it to ui-lightness, I won't argue.
[08:13:21] <rxaviers> I don't want to. I just want to understand what's your idea.
[08:13:47] <rxaviers> If you both want the stable to be equal to the custom using all defaults, I got it.
[08:14:47] <rxaviers> It just happens that a custom download using smoothness does not produce the same thing as prev stable, neither custom using all defaults. It would produce a third thing.
[08:15:07] <jquicommit> [13api.jqueryui.com] 15scottgonzalez closed pull request #199: jQuery.widget: Add link to learn articles (06master...06widget-tuts) 02http://git.io/ple_sQ
[08:15:20] <rxaviers> But, I understood we are all in the same page: new stable = custom download using all defaults.
[08:15:21] <rxaviers> Ok
[08:15:34] <rxaviers> Just let me know if anyone things otherwise
[08:16:19] <jquicommit> [13api.jqueryui.com] 15scottgonzalez tagged 06v1.10.17 at 1464fb755: 02http://git.io/CYJnBQ
[08:55:45] <jqmobilecommit> [13jquery-mobile] 15cgack opened pull request #7289: Slider: value not updated on button  when input changes (06master...067137-slider-value-on-button-not-updated) 02http://git.io/AR0pzQ
[09:24:30] <jzaefferer> rxaviers: did you look into this already? http://bugs.jqueryui.com/ticket/9759 only other blocker for 1.11 (according to Trac)
[09:26:43] <rxaviers> jzaefferer, I havent. Thanks for bringing this into my attention. I will check.
[09:54:03] <rxaviers> checked and commented on issue...
[11:28:20] <scott_gonzalez> ZOMG, I thought I was going crazy just now.
[11:28:39] <scott_gonzalez> I pulled an old PR locally and started making some changes.
[11:29:00] <scott_gonzalez> But the error that I expected to be there continued to be there even after I removed all the code related to it.
[11:29:25] <scott_gonzalez> And the stack trace had very odd line numbers, but they all lined up with the methods that I would expect, just nonsensical lines.
[11:29:29] <scott_gonzalez> Like `} else {`
[11:29:49] <scott_gonzalez> Turns out the PR is from before the file renames, so I wasn't working in the right file :-/
[11:30:03] <rxaviers> jeez
[11:30:06] <rxaviers> haha
[11:32:43] <rxaviers> I love those moments when you swear the computer just developed its own life
[11:33:08] <rxaviers> it's so mind blowing
[11:38:50] <scott_gonzalez> Yeah, the weird stack trace was really confusing.
[11:44:48] <jquicommit> [13jquery-ui] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/Nco0rw
[11:44:48] <jquicommit> 13jquery-ui/06master 140059722 15Scott González: Button: Properly refresh button sets with new radio buttons...
[11:51:01] <doesallmagic2> Project jQuery UI build #1321: STILL UNSTABLE in 6 min 29 sec: http://jenkins.jquery.com/job/jQuery%20UI/1321/
[11:51:02] <doesallmagic2> Scott González: Button: Properly refresh button sets with new radio buttons
[15:17:17] <jquicommit> [13download.jqueryui.com] 15rxaviers created 06fix-9743-release-quick-downloads (+2 new commits): 02http://git.io/7_dt_g
[15:17:17] <jquicommit> 13download.jqueryui.com/06fix-9743-release-quick-downloads 14104b7d3 15Rafael Xavier de Souza: Config: Revert a521d22
[15:17:17] <jquicommit> 13download.jqueryui.com/06fix-9743-release-quick-downloads 147b709d7 15Rafael Xavier de Souza: Gruntfile: Upadte quick download tasks...
[15:19:23] <jquicommit> [13download.jqueryui.com] 15rxaviers 04force-pushed 06fix-9743-release-quick-downloads from 147b709d7 to 14779b2df: 02http://git.io/TCYh8A
[15:19:23] <jquicommit> 13download.jqueryui.com/06fix-9743-release-quick-downloads 14779b2df 15Rafael Xavier de Souza: Gruntfile: Update quick build-packages task...
[15:30:57] <rxaviers> hmm
[15:30:57] <rxaviers> fatal: protocol error: expected sha/ref, got 'GitHub SSH access is temporarily unavailable'
[17:26:26] <jqmobilecommit> [13jquery-mobile] 15Merlin-Xu opened pull request #7290: Add the popup enhance before it open (06master...06patch-1) 02http://git.io/uDoP5w
[17:37:03] <jquicommit> [13download.jqueryui.com] 15rxaviers merged 06fix-9743-release-quick-downloads into 06master: 02http://git.io/4kqfKw
[17:37:42] <jqmobilecommit> [13jquery-mobile] 15Merlin-Xu opened issue #7291: Can't open 2+ popup at same time 02http://git.io/vANo7g
[17:38:02] <jquicommit> [13download.jqueryui.com] 15rxaviers 04deleted 06fix-9743-release-quick-downloads at 14779b2df: 02http://git.io/RkC-nw
[17:38:49] <doesallmagic2> Project download.jqueryui.com build #211: SUCCESS in 2 min 0 sec: http://jenkins.jquery.com/job/download.jqueryui.com/211/
[17:38:49] <doesallmagic2> * rxaviers: Config: Revert a521d22
[17:38:49] <doesallmagic2> * rxaviers: Gruntfile: Update quick build-packages task
[17:39:16] <jquicommit> [13download.jqueryui.com] 15rxaviers 04deleted 06fix-197 at 14a521d22: 02http://git.io/-ZUFWg
[18:44:15] <jqmobilecommit> [13jquery-mobile] 15arschmitz closed issue #7291: Can't open 2+ popup at same time 02http://git.io/vANo7g
[23:07:07] <doesallmagic2> Yippee, build fixed!
[23:07:07] <doesallmagic2> Project jQuery UI - git core build #676: FIXED in 4 min 37 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/676/
[23:23:40] <doesallmagic2> Project jQuery UI - 1.7.x core build #560: STILL UNSTABLE in 16 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.7.x%20core/560/
[23:43:06] <doesallmagic2> Project jQuery UI - 1.6.x core build #561: STILL FAILING in 19 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.6.x%20core/561/
