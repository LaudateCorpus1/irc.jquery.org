[00:20:50] <doesallmagic2> Project jQuery UI - 1.7.x core build #730: STILL UNSTABLE in 30 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.7.x%20core/730/
[00:31:52] <doesallmagic2> Project jQuery UI - 1.9.x core build #26: STILL UNSTABLE in 11 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.9.x%20core/26/
[00:52:14] <doesallmagic2> Project jQuery UI - 1.11.x core build #26: SUCCESS in 20 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.11.x%20core/26/
[01:20:31] <doesallmagic2> Project jQuery UI - 1.8.x core build #707: STILL UNSTABLE in 28 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.8.x%20core/707/
[04:12:13] <arschmitz> gabriel_schulhof: Ping
[10:01:30] <arschmitz> gabriel_schulhof: cgack: have something i want to run by the two of you
[10:01:38] <cgack> go for it
[10:02:00] <arschmitz> so i extended the widgetBackcompat and width theme extensions
[10:02:58] <arschmitz> so it could now handle your case in flipswitch
[10:04:21] <arschmitz> cgack: https://github.com/jquery/jquery-mobile/compare/1.5-dev...arschmitz:widget-extensions
[10:05:47] <arschmitz> cgack: so each widget would just define _themeElements
[10:06:00] <arschmitz> which returns an array of themeable elements
[10:06:13] <arschmitz> well an array of objects of them lol
[10:06:27] <arschmitz> for each one you set the element to apply the classes to and the theme prefix
[10:07:24] <cgack> I like this
[10:07:28] <arschmitz> i have not looked closely at every widget
[10:07:40] <arschmitz> but i think this would mean we could use this for every widget
[10:07:51] <arschmitz> including plugging into the ui ones
[10:08:26] <arschmitz> heck this would even make it possible to theme anywidget really just add an extension setting it up
[10:08:51] <arschmitz> so that diff does one other think
[10:09:05] <arschmitz> which is to move all the custom init selectors into backcompat
[10:09:35] <arschmitz> meaning from now on the only valid init selectors by default would be data-role=""
[10:10:42] <arschmitz> this comes to play in what we talked about in the meeting yesterday about using multiple widget on a single element
[10:10:56] <arschmitz> cgack: i did an implementation of this last night
[10:12:12] <arschmitz> cgack: https://github.com/jquery/jquery-mobile/compare/1.5-dev...arschmitz:enhancer-multiple
[10:13:05] <arschmitz> cgack: so that actually improves the performance of the enhancer substantially
[10:13:33] <arschmitz> while adding the ability to do data-role="widget1 widget2 widget3"
[10:13:57] <arschmitz> it fast lines any thing with data-role="" for its init selector
[10:14:17] <arschmitz> and only handles custom initSelectors via an extension
[10:14:35] <arschmitz> and you pay a lookup penelty for that ( but no worse then it ws before )
[10:15:08] <arschmitz> cgack: interesting side effect this now works with any jquery function not just widgets
[10:15:27] <arschmitz> so if you do data-role="something"
[10:15:43] <arschmitz> something just needs to be $.fn.something not necessarily a widget 
[10:16:09] <cgack> interesting indeed
[10:16:33] <arschmitz> it also adds some new things available to hooks
[10:16:40] <arschmitz> it passes an enhancables argument
[10:16:52] <arschmitz> which is the collection [data-role]
[10:17:05] <arschmitz> and makes a public function getOptions
[10:17:12] <arschmitz> on the enhancer
[10:17:28] <arschmitz> which generates and options object from the data-*
[10:18:02] <arschmitz> this is what is used in getCreateOptions for the data translation as well it just abstracts it and makes it public
[10:19:01] <arschmitz> so you can do all sorts of fun stuff with the enhancer with this for making your app declarative 
[10:19:10] <arschmitz> cgack: oh and it no longer depends on the widget factory at all
[10:19:16] <arschmitz> it only depends on jquery core
[10:21:01] <cgack> arschmitz: that seems awesome, are you gonna try to land that in 1.5-dev
[10:21:06] <arschmitz> yes
[10:22:11] <cgack> super. can't wait to pull that and the _themeElements into my branches
[10:22:30] <arschmitz> cgack: so the last thing i was looking at is the dependencies on defaults.js, helpers.js, and navigation.js, the idea being to break them down into individual modules 
[10:22:44] <arschmitz> cgack: https://docs.google.com/spreadsheets/d/17YuKwz0Qq0aAwi6oqQ7KmDkTDN8LHipjuuL91nwAwCI/edit#gid=559838114
[10:22:51] <arschmitz> there are tabs for each file
[13:18:28] <gabriel_schulhof> arschmitz: Some widgets have multiple theme-related options - especially listview.
[13:18:47] <gabriel_schulhof> arschmitz: So, you have multiple options referring to different sets of elements.
[13:22:48] <gabriel_schulhof> arschmitz: Seems like defaultPageTransition should be renamed to defaultTransition and it should become an option of pagecontainer.
[13:23:33] <gabriel_schulhof> ... or more precisely an option of the pagecontainer extension linking to transitions.
[14:01:49] <arschmitz> gabriel_schulhof: thats why it accepts an array
[14:02:15] <arschmitz> gabriel_schulhof: so it can theme multiple sets of elements
