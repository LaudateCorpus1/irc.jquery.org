[06:00:11] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/a9ty6w
[06:00:11] <jquicommit> [jquery-ui/master] Simulate: Define getters for pageX and pageY in mouse events if they come through as 0. Fixes #7324 - simulate mouse events broken for IE 9. - Scott González
[06:07:14] <jquicommit> [jquery-ui] scottgonzalez pushed 5 new commits to 1-8-stable: http://git.io/m6YeIw
[06:07:14] <jquicommit> [jquery-ui/1-8-stable] Tests (Simulate): Whitespace cleanup. - Scott González
[06:07:14] <jquicommit> [jquery-ui/1-8-stable] Tests (Simulate): Added focus and blur support. - Scott González
[06:07:14] <jquicommit> [jquery-ui/1-8-stable] Tests (Simulate): Make the blur event async to deal with IE's native blur being async. - Scott González
[06:21:11] * rxaviers is back
[06:31:24] <jq-jenkins> Project jQuery UI build #194: STILL FAILING in 30 min: http://swarm.jquery.org:8080/job/jQuery%20UI/194/
[06:31:24] <jq-jenkins> Scott González: Simulate: Define getters for pageX and pageY in mouse events if they come through as 0. Fixes #7324 - simulate mouse events broken for IE 9.
[08:31:14] <jzaefferer> hey rxaviers, welcome back!
[08:46:02] <rxaviers> jzaefferer, :) thks
[08:46:03] <bot-t> (425 hours ago) <kborchers> tell rxaviers Same to you! Happy Holidays!
[08:46:16] <jzaefferer> haha, 425 hours ago :-)
[08:46:18] <kborchers> hah!
[08:46:23] <rxaviers> eheh
[08:47:48] <jzaefferer> jQuery was released 52512 hours ago (or close to that)
[08:49:05] <jzaefferer> its like a trick question, except for forcing people to do some math first before they get any useful information out of a sentence
[08:49:18] <jzaefferer> there's probably a name for that, too
[09:24:24] <gnarf> Dear Everyone: PLEASE TEST bugs.jqueryui.com
[09:27:15] <kborchers> gnarf: goes to jquery bugs not UI O.O
[09:27:40] <gnarf> damnit
[09:28:08] <gnarf> fixed :)
[09:28:48] <kborchers> looks good
[09:28:55] <gnarf> try logging out / back in?
[09:29:28] <kborchers> seems fine
[09:31:04] <gnarf> does it feel more responsive than normal?
[09:32:27] <kborchers> i would say yes ... a little. never had much of an issue with responsiveness except with a few of the big lists which still take a while to load but seem better.
[09:35:35] <gnarf> rebooting it now
[09:35:38] <gnarf> so don't fear
[09:38:54] <gnarf> i don't understand why that didn't start up
[09:39:58] <gnarf> i had to /etc/init.d trac-bugs.jquery.com start
[10:03:31] <gnarf> hey guys
[10:03:35] <gnarf> scott_gonzalez jzaefferer
[10:03:42] <jzaefferer> gnarf
[10:03:44] <gnarf> any opinion on putting Makefile in the root of the project
[10:03:46] <gnarf> instead of build/
[10:03:47] <gnarf> ?
[10:03:52] <jzaefferer> fine by me
[10:04:01] <gnarf> I'd prefer it there myself
[10:04:05] <jzaefferer> or rather, yes please
[10:04:09] <gnarf> scott_gonzalez: rworth?
[10:04:16] <jzaefferer> any dependencies can stay in build
[10:04:21] <gnarf> yeah
[10:04:25] <jzaefferer> but makefile itself is better at the root
[10:04:29] <gnarf> gets rid of the build/build/ issue
[10:04:38] <jzaefferer> dunno why build.xml was nested
[10:04:59] <rworth> yeah, fixit
[10:05:04] <gnarf> k
[10:10:21] <scott_gonzalez> +1 root
[10:20:01] <jzaefferer> yeah gnarf, how would you get LOC in a JS project?
[10:20:18] <jzaefferer> this produces something, but not really what I'm looking for:
[10:20:19] <jzaefferer> find . -name "*.js" -print | wc -l
[10:20:21] <gnarf> LOC line of code?
[10:20:26] <jzaefferer> can't figure out how -exec works either
[10:20:35] <gnarf> -exec -- wc -l
[10:20:41] <gnarf> ?
[10:20:59] <gnarf> i usually do find . -name \*.js | xargs wc -l
[10:21:15] <jzaefferer> that one works, thanks
[10:24:04] <scott_gonzalez> You might want to check out cloc (http://cloc.sourceforge.net/) if you care about SLOC
[10:27:27] <scott_gonzalez> That project also lists other projects that do line counts: http://cloc.sourceforge.net/#Other_Counters
[10:29:52] <gnarf> hrm
[10:30:03] <gnarf> this docs-download build target is pretty nasty
[10:31:49] <gnarf> out of curiosity
[10:32:04] <gnarf> why are the "Effects" docs not versioned like the API docs are
[10:32:23] <gnarf> http://docs.jquery.com/action/render/UI/API/1.8.18/Draggable -> draggable.html
[10:32:31] <jquicommit> [jquery-ui] fnagel pushed 1 new commit to selectmenu: http://git.io/sYRORQ
[10:32:31] <jquicommit> [jquery-ui/selectmenu] Selectmenu: removed forgotten console statement - Felix Nagel
[10:32:36] <gnarf> http://docs.jquery.com/action/render/UI/Effects/animate -> animate.html
[10:34:11] <gnarf> i assume this is all changing for 1.8 ?
[10:34:21] <gnarf> er 1.9
[10:36:21] <gnarf> also
[10:36:30] <gnarf> why is this using the dot versions for docs
[10:36:37] <gnarf> shouldn't that just be a "major version" number?
[10:36:45] <gnarf> http://docs.jquery.com/action/render/UI/API/1.8/Resizable for instance?
[10:57:08] <gnarf> adding perl as a build dependency
[10:57:21] <gnarf> to make simpler command line regexp replaces than sed?
[10:57:27] <gnarf> jzaefferer scott_gonzalez rworth?
[10:58:49] <scott_gonzalez> I assume everyone has perl
[10:59:07] <scott_gonzalez> That's fine with me.
[10:59:17] <jzaefferer> same here
[10:59:37] <scott_gonzalez> gnarf: Are you working from 1-8-stable or master?
[11:00:02] <scott_gonzalez> nvm, you're working on build.xml, not prepare-release.
[11:00:21] <gnarf> whats prepare-release? :)
[11:00:34] <scott_gonzalez> It's the script that does the first half of an actual release.
[11:00:48] <scott_gonzalez>  /build/release/prepare-release
[11:00:49] <gnarf> aha
[11:00:59] <scott_gonzalez> I curl it from GitHub and then run it through bash
[11:01:25] <scott_gonzalez> Writing that was interesting, since I had pretty much no bash knowledge :-P
[11:02:25] <scott_gonzalez> I also once made the mistake of piping it straight from curl to sh, which killed all the places that stop and wait for input :-/
[11:03:39] <gnarf> i wonder if docs-download might make a better node script than make file
[11:04:33] <scott_gonzalez> maybe
[11:33:30] <gnarf> scott_gonzalez: got a better way to do this than adding curl to the build requirements too? https://gist.github.com/040a01bb97585fc80189
[11:34:46] <scott_gonzalez> haha
[11:35:13] <scott_gonzalez> http.get()
[11:35:17] * gnarf is still a little node newb
[11:36:24] <gnarf> http://search.npmjs.org/#/http-get ?
[11:36:39] <gnarf> that apparently handles redirects too
[11:37:52] <scott_gonzalez> http://nodejs.org/docs/v0.6.7/api/http.html#http.get
[11:38:35] <scott_gonzalez> If you want a module, mikeal's request module is really popular
[11:38:50] <scott_gonzalez> but simple downloads should be straight forward without modules
[11:41:40] <scott_gonzalez> Also, make sure you're using full paths for filename
[11:42:40] <scott_gonzalez> If you want them relative to the script, you can use path.resolve() and __dirname
[11:43:05] <scott_gonzalez> And you have console.log() for writing to stdout.
[11:43:22] <scott_gonzalez> Not sure what you've defined echo() to be in that gist
[11:44:02] <scott_gonzalez> Also, process.exit()
[11:44:07] <gnarf> echo is sys.print(...,"\n")
[11:44:09] <scott_gonzalez> Are you on an old version of node?
[11:44:23] <gnarf> nope, it hadn't errored
[11:44:37] <scott_gonzalez> Use process.exit() and console.log() :-)
[11:45:05] <gnarf> so like
[11:45:12] <scott_gonzalez> brb
[11:46:05] <gnarf> i have no clue what to put in here to actually write to the file
[11:46:12] <gnarf> and like deal with possible buffering
[11:46:14] <gnarf> etc
[11:47:25] <scott_gonzalez> back
[11:47:55] <gnarf> https://gist.github.com/433f336f562c6897aff7
[11:47:57] <scott_gonzalez> use file.createWriteStream()
[11:48:14] <scott_gonzalez> and just pump data straight from the HTTP request to the file
[11:48:20] <scott_gonzalez> Node will buffer if it needs to.
[11:48:33] <gnarf> aha
[11:48:34] <gnarf> http://stackoverflow.com/questions/7654523/node-js-piping-http-clientrequest-into-fs-createwritestream-with-binary-files-le
[11:50:08] <scott_gonzalez> Yes, do that.
[11:50:18] <gnarf> how can i know when its complete?
[11:50:21] <gnarf> on end?
[11:50:24] <scott_gonzalez> Yeah
[11:51:07] <scott_gonzalez> I haven't used pipe yet, but that's what I was suggesting you do right before you found that link :-)
[11:51:31] <scott_gonzalez> You'll still want to handle the errors though
[11:52:03] <gnarf> hrm
[11:52:08] <gnarf> my http doesn't seem to have "get"
[11:52:47] <scott_gonzalez> I believe you'll just need to listen for end so you can call file.destroySoon() to close the file
[11:52:53] <scott_gonzalez> node -v?
[11:53:04] <gnarf> 0.2.6
[11:53:08] <scott_gonzalez> HAHAHA
[11:53:14] <scott_gonzalez> install .0.6.7
[11:53:35] <gnarf> on a mac
[11:53:43] <gnarf> which one of these package managers do i want?
[11:53:49] <scott_gonzalez> I use nave
[11:54:31] <scott_gonzalez> Though if you already use homebrew, I believe you can use that
[11:55:26] <gnarf> brew is 0.4.5 it seems
[11:58:38] <scott_gonzalez> heh
[11:58:41] <scott_gonzalez> so use nave
[12:16:53] * gnarf waits for node to compile forever
[12:29:01] <scott_gonzalez> :-)
[12:29:16] <gnarf> this is taking a while
[12:29:28] <gnarf> and making my poor macbook almost useless in the meantime
[12:32:33] <scott_gonzalez> That's what happens when I install too.
[13:02:29] <jquicommit> [jquery-ui] fnagel pushed 1 new commit to selectmenu: http://git.io/6fhVOA
[13:02:29] <jquicommit> [jquery-ui/selectmenu] Selectmenu: removed option value - Felix Nagel
[13:45:29] <gnarf> scott_gonzalez: did you ever push that bomfix?
[13:45:49] <scott_gonzalez> oops, never committed to git
[13:46:07] <scott_gonzalez> But we fixed it in Google Code SVN + Google Code download + web site
[13:46:22] <gnarf> its causing my minify tests to fail
[13:46:23] <gnarf> :)
[13:46:25] <gnarf> which is neat
[13:46:25] <scott_gonzalez> heh
[13:46:29] <gnarf> cuz the build is failing
[13:46:33] <scott_gonzalez> :-)
[13:47:07] <scott_gonzalez> Are you going to do that now or do you want me to do it?
[13:47:19] <gnarf> if you could, itd be useful
[13:47:24] <gnarf> my working tree is dirty as shit
[13:48:48] <scott_gonzalez> ok, I'll do that now
[13:50:07] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/c9lStg
[13:50:07] <jquicommit> [jquery-ui/master] Datepicker i18n (nl-BE): Removed BOM. - Scott González
[13:50:29] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/AX56Nw
[13:50:29] <jquicommit> [jquery-ui/1-8-stable] Datepicker i18n (nl-BE): Removed BOM. - Scott González
[13:52:43] <jq-jenkins> Project jQuery UI build #195: STILL FAILING in 2 min 29 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/195/
[13:52:43] <jq-jenkins> Scott González: Datepicker i18n (nl-BE): Removed BOM.
[14:27:42] <gnarf> so i think i got a Makefile that does deploy-release now
[18:07:31] <clarkbox> i have just prototyped a method to get the list of browsers "needed" for testing
[18:07:32] <clarkbox> http://swarm.jquery.org/index.php?state=getneeded
[18:08:30] <clarkbox> RE: testswarm integration with browserstack
[18:09:08] <clarkbox> next im going to build a python script (that will be run via cron) that will get this array, and then spark up a browserstack session as needed
[18:09:41] <clarkbox> scott_gonzalez, jzafferer ^^
[18:10:30] <scott_gonzalez> clarkbox: Have you seen my node module for BrowserStack?
[18:11:18] <clarkbox> i have not
[18:13:26] <clarkbox> where is it?
[18:13:53] <clarkbox> i was going to submit the request to the browserstack API via curl (pycurl)
[18:14:29] <clarkbox> does that getneeded endpoint make sense ^
[18:14:41] <scott_gonzalez> You can do that, but we have many more people who will understand a node script than a python script
[18:15:00] <clarkbox> ok i can do that in node. np
[18:15:15] <scott_gonzalez> Yeah, it's probably good for limiting the number of active clients
[18:15:38] <scott_gonzalez> Especially since BrowserStack will queue up the workers if the load gets high.
[18:16:00] <scott_gonzalez> We wouldn't want workers queued if we didn't need them, since they might end up blocking workers that we do need.
[18:16:22] <clarkbox> ya. it will ensure we dont over-use browserstack
[18:18:05] <scott_gonzalez> Let me know if you need help with anything or if you have any questions about the BrowserStack API.
[18:18:25] <scott_gonzalez> I did a bunch of early testing for them and I have contacts there.
[18:19:04] <scott_gonzalez> We also have influence over the API, they're willing to add stuff if it would make integrating easier.
[18:19:14] <scott_gonzalez> But I think we've got everything we need.
[18:19:16] <clarkbox> cool. i have tested out the endpoint, and it worked great.
[18:19:38] <clarkbox> where should i put this node script?
[18:19:47] <clarkbox> what repo?
[18:20:17] <scott_gonzalez> That's probably a question for danheberden
[18:20:36] <clarkbox> k ill hit him up
[18:21:06] <scott_gonzalez> jzaefferer might have some input as well
[18:21:16] <scott_gonzalez> I haven't been keeping up with where all the testing code lives.
[18:25:31] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to interactions: http://git.io/QAdjbg
[18:25:31] <jquicommit> [jquery-ui/interactions] Interaction: Ignore MSPointer events if they're initiated from a mouse, but not from the primary button. - Scott González
[19:06:52] <gnarf> scott_gonzalez: this build is crazy
[19:07:26] <scott_gonzalez> Anything specific or just how much stuff we do?
[19:07:40] <gnarf> just a crazy amount in the "make" file
[19:08:33] <gnarf> ant whitespace, really? :)
[19:08:44] <scott_gonzalez> :-)
[19:09:06] <scott_gonzalez> it's like nobomb, but the build was explode if we don't run it...
[19:09:26] <scott_gonzalez> s/was/won't/
[19:09:35] <gnarf> yeah
[19:09:55] <scott_gonzalez> speaking of which, do you have a BOM test in their?
[19:09:56] <gnarf> is there a way to use vi in a command line way to open a file, nobomb, remove trailing whitespace and save it?
[19:10:08] <scott_gonzalez> or do we just properly die if one exists?
[19:10:16] <gnarf> scott_gonzalez: no, but the build actually FAILS if there if something can't minify
[19:10:44] <scott_gonzalez> Can you put a TODO in the build to check for BOMs first?
[19:11:01] <gnarf> well i was thinking about baking it into the whitespace
[19:11:19] <scott_gonzalez> It's good that the build fails right now, but even if uglify learns how to handle BOMs, we don't want them in the individual files.
[19:11:23] <gnarf> maybe even "lint"
[19:11:33] <scott_gonzalez> Yeah, part of lint would be good
[19:11:36] <gnarf> make lint - have it warn about all sorts of shit
[19:12:03] <gnarf> im skipiing the whitespace target for now
[19:12:07] <gnarf> its trivial anyway
[19:27:45] <gnarf> scott_gonzalez: i'm going to push a "make" branch to master, based on 1-8-stable
[19:27:49] <gnarf> er not master
[19:27:53] <gnarf> "upstream"
[19:28:15] <scott_gonzalez> which branch in upstream?
[19:28:16] <gnarf> or should i keep it in gnarf37/jquery ?
[19:28:23] <gnarf> scott_gonzalez: i was just going to make a "make" branch
[19:28:28] <scott_gonzalez> upstream is fine
[19:28:46] <gnarf> just a place for us to play
[19:28:56] <scott_gonzalez> Anything that we're committed to working on can just go straight to upstream.
[19:29:24] <jquicommit> [jquery-ui] gnarf37 created make (+1 new commit): http://git.io/vdyqSQ
[19:29:24] <jquicommit> [jquery-ui/make] Build: First draft of Makefile - Corey Frang
[19:30:09] <gnarf> there are some ugly parts
[19:30:23] <gnarf> the only two targets i haven't copied out of ant now are "cdn" and "whitespace"
[19:30:44] <scott_gonzalez> CDN is going to be different anyway
[19:31:30] <gnarf> im trying to figure out which make target should be the "default"
[19:32:01] <scott_gonzalez> min + concat
[19:32:26] <scott_gonzalez> maybe lint + min + concat
[19:32:32] <gnarf> default is deploy-release
[19:32:46] <gnarf> which is clean, docs-download, copy, minify, replace-version, prepend-header, zip
[19:32:57] <gnarf> at least in ant
[19:33:21] <scott_gonzalez> I run default, themes, cdn for a full release
[19:35:59] <gnarf> well do some testing with the new one if you want - I'm basically just trying to copy what's in ant right now
[19:36:05] <gnarf> then we can work on cleanin it up a little
[19:43:26] <scott_gonzalez> ok
[19:43:28] <scott_gonzalez> heading to bed
[20:10:35] <jquicommit> [jquery-ui] gnarf37 pushed 1 new commit to make: http://git.io/6gK8Dw
[20:10:35] <jquicommit> [jquery-ui/make] Build: porting the current cdn target to the Makefile - Corey Frang
[22:38:22] <clarkbox> scott_gonzalez is there a way i  can see the status of the browserstack que?
[22:38:38] <clarkbox> im having trouble debugging the integration.
[22:39:46] <clarkbox> i am aware of the calls to get the status of a worker etc. but is there any kind of (hidden) interface within browserstack? im guessing no.
