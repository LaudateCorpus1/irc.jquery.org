[06:44:35] <kborchers> scott_gonzalez: did you see that stuff about detached body in support.js causing issues in IE8 in dev yesterday? which we just landed a version of in position
[06:44:55] <kborchers> i think we've determined it's not a problem for us but wanted to make sure you're aware
[08:15:33] <scott_gonzalez> kborchers: I didn't see the discussion, but now that you mention, I think I saw that there was a pull request about it
[08:16:18] <kborchers> oh really?
[08:17:24] <kborchers> all testing i have done can not reproduce the issue they were having
[08:17:57] <kborchers> it was caused by having a background image on the real body, then creating the fake body in IE8 would throw an error
[08:18:43] <kborchers> while testing i determined that all of our visual tests should look like this http://gyazo.com/1cb25a5bd39bc6baf7d8ff6d47930e5a
[08:21:57] <gnarf> once we get 1.7rc2 out the door, maybe you should ask timmy to see if he can repro his crash scenario using the .position from 1-8-stable
[08:23:22] <kborchers> yeah, maybe there's a small detail he missed but from what he described, i can not reproduce
[08:26:39] <scott_gonzalez> oh, it wasn't a pull request, it was the meeting update from core
[08:26:46] <scott_gonzalez> I knew I had heard something about it :-P
[08:27:56] <scott_gonzalez> http://bugs.jquery.com/ticket/10613
[08:28:09] <scott_gonzalez> rwaldron's comment makes it sound like it may not be a real problem
[08:28:17] <scott_gonzalez> there's no detail in that ticket
[08:41:55] <kborchers> scott_gonzalez: not sure if you are paying attention but they have been talking about the issue again in dev
[08:44:10] <gnarf> scott_gonzalez: rwaldrons comment regards his testing of the branch where he restructured those tests
[08:44:20] <gnarf> meaning, he never saw a crash cuz he was using the "standalones"
[08:44:38] <gnarf> which we all know aren't effective test clients
[08:50:09] <gnarf> seems like the crash in IE8 is realated to teseting fixed position specifically in a fake body element
[08:50:32] <gnarf> i.e. something in this block of code was causing it: https://github.com/jquery/jquery/blob/master/src/support.js#L257-305
[08:50:41] <gnarf> only in a disconnected body envrionment
[08:50:41] <kborchers> which we aren't doing
[10:47:55] <scott_gonzalez> gnarf, kborchers: cool, so it sounds like we're fine
[11:02:13] <kborchers> yeah, i think so.
[13:26:51] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/cbS6xQ
[13:26:51] <jquicommit> [jquery-ui/master] Autocomplete tests: Fixed typo. - Scott Gonz치lez
[13:37:15] <jq-jenkins> Project jQuery UI build #134: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/jQuery%20UI/134/
[13:37:16] <jq-jenkins> Scott Gonz치lez: Autocomplete tests: Fixed typo.
[13:38:56] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/jdjeVA
[13:38:56] <jquicommit> [jquery-ui/master] Tests (Simulate): Make the blur event async to deal with IE's native blur being async. - Scott Gonz치lez
[13:42:19] <jq-jenkins> Project jQuery UI build #135: STILL FAILING in 4 min 57 sec: http://swarm.jquery.org:8080/job/jQuery%20UI/135/
[13:42:20] <jq-jenkins> Scott Gonz치lez: Tests (Simulate): Make the blur event async to deal with IE's native blur being async.
[13:45:32] <gnarf> :/
[13:45:32] <gnarf> that simulate commit scares me
[13:45:33] <gnarf> is that bit about blur not working on invisible tabs still true if we async it?
[13:52:38] <scott_gonzalez> yeah
[13:52:48] <scott_gonzalez> my original test page was all async
[13:53:20] <scott_gonzalez> https://gist.github.com/1331866
[13:54:07] <scott_gonzalez> there's something wrong with my Opera 11.1x install right now
[13:54:10] <scott_gonzalez> it's not loading stylesheets
[13:54:12] <scott_gonzalez> http://swarm.jquery.org/job/212/
[13:54:19] <scott_gonzalez> so ignore that botched column
[13:54:25] <scott_gonzalez> we're getting very close
[13:54:53] <scott_gonzalez> I'll contact BrowserStack about getting 11.1x available
[13:55:37] <scott_gonzalez> heading out, gotta take Mya to dance class
[14:16:36] <kborchers> ?tell scott_gonzalez i ran the tests with Opera 11.1 and between job 211 and 212, it looks like only issue is an error being thrown by the tabs tests
[14:16:37] <bot-t> kborchers, Okay.
[14:21:52] <kborchers> ?tell scott_gonzalez actually, looks like the latest commit may have fixed that tabs error so might be all green
[14:21:52] <bot-t> kborchers, Okay.
[14:22:45] <gnarf> autocomplete / accordion ?
[14:26:40] <kborchers> ?tell scott_gonzalez ok, so i was wrong. seems like those tests fail randomly and i don't see any errors in dragonfly. hmmm
[14:26:40] <bot-t> kborchers, Okay.
[14:26:44] <kborchers> gnarf: ^
[14:39:32] <gnarf> kborchers: have you been testing with tab visibility
[14:46:39] <Dave_Stein> scott_gonzalez: holy shit we're on at the same time
[14:46:41] <Dave_Stein> :)
[14:46:53] <scott_gonzalez> heh
[14:46:53] <bot-t> (30 mins 10 secs ago) <kborchers> tell scott_gonzalez i ran the tests with Opera 11.1 and between job 211 and 212, it looks like only issue is an error being thrown by the tabs tests
[14:46:54] <bot-t> (25 mins 1 sec ago) <kborchers> tell scott_gonzalez actually, looks like the latest commit may have fixed that tabs error so might be all green
[14:46:54] <bot-t> (20 mins 10 secs ago) <kborchers> tell scott_gonzalez ok, so i was wrong. seems like those tests fail randomly and i don't see any errors in dragonfly. hmmm
[14:47:22] <Dave_Stein> scott_gonzalez: I was wondering what the timeline is for UI2? I skipped this weekend due to some work + being sick hell
[14:47:29] <scott_gonzalez> kborchers: weird
[14:47:44] <scott_gonzalez> Dave_Stein: many many months
[14:48:03] <Dave_Stein> i was telling Corey that I thought the mobile meeting was gonna be more about figuring out connecting me with rich and less figuring out mobile from ground up - although it was good learning experience :)
[14:48:07] <scott_gonzalez> though it gets a little shorter every time you do work :-)
[14:48:21] <Dave_Stein> haha yeah i know that. i'm just wondering how fast i need to move to stay in sync with the other working parts
[14:48:36] <scott_gonzalez> well, you're months ahead of schedule
[14:48:43] <Dave_Stein> haha
[14:48:45] <Dave_Stein> well then
[14:48:54] <scott_gonzalez> if you weren't working on this right now, I'd be doing it and I wouldn't be starting until 1.9 final
[14:49:00] <Dave_Stein> i'm gonna kick the crap out of interactions and get on rich to figure out mobile together
[14:49:10] <Dave_Stein> yeah i knew it was far out which is why i jumped onto helping
[14:49:18] <Dave_Stein> ie: all my lovely interaction tickets haha
[14:49:44] <Dave_Stein> okay so basically i can take my tiem without bothering anyone, but i personally don't wanna take too long :)
[14:49:47] <Dave_Stein> *time
[14:49:55] <scott_gonzalez> yeah, don't feel rushed
[14:50:29] <Dave_Stein> got it
[14:50:37] <scott_gonzalez> also, when the interactions become high priority, we'll have more resources available to help
[14:51:02] <scott_gonzalez> presumably after 1.9 I'll be more available for new development
[14:51:06] <Dave_Stein> cool
[14:51:10] <Dave_Stein> i actually had one question for when i get to droppable
[14:51:16] <scott_gonzalez> since existing plugins should be more stable
[14:51:21] <scott_gonzalez> which is what my focus is
[14:51:36] <Dave_Stein> yeah i understand :0
[14:51:37] <Dave_Stein> :)
[14:51:53] <Dave_Stein> so currently we cached positions of droppables right... so when draggables are moving around we can compare to see if its over the droppable
[14:52:01] <Dave_Stein> and that goes on mainly in the private $.ui.ddmanager stuff right?
[14:52:12] <Dave_Stein> im just inferring from the prepareOffsets function i know i had to use
[14:52:25] <scott_gonzalez> yeah, the positions are cached
[14:52:46] <Dave_Stein> so since draggable is from scratch and only using widget
[14:52:49] <Dave_Stein> when i go to droppable
[14:52:51] <scott_gonzalez> there should be a refreshPositions method on draggable that refreshes that cache
[14:52:57] <Dave_Stein> where / how do you want me to handle the interactions between the two widgets
[14:53:15] <scott_gonzalez> that code should live in the droppable file
[14:53:28] <Dave_Stein> okay
[14:53:30] <scott_gonzalez> I'm not sure that we'll need an equivalent of $.ui.ddmanager
[14:53:32] <Dave_Stein> so we are killing the ddmanager stuff
[14:53:34] <Dave_Stein> gotcha
[14:53:36] <scott_gonzalez> but honestly I haven't looked at the code too much
[14:53:46] <scott_gonzalez> if you don't find a major need for it, just leave it out
[14:53:46] <Dave_Stein> yeah neither have i
[14:53:53] <Dave_Stein> k
[14:54:04] <Dave_Stein> and for future reference, this even came up in the mobile conversation
[14:54:08] <Dave_Stein> someone asked if sortables are draggable
[14:54:13] <Dave_Stein> and the answer is no
[14:54:19] <Dave_Stein> but do we wanna change that for 2?
[14:54:54] <Dave_Stein> i never understood it esp cause i knew the same events fired for a draggable and sortable over a droppable which lended to confusion for a new person using
[14:55:00] <Dave_Stein> and it was kinda ambiguous why some things would fire within the docs
[14:55:44] <Dave_Stein> a sortable is really just a draggable that moves other draggables, other than wanting to keep them completely independent as files/modules
[14:55:57] <Dave_Stein> or am i way off base on that one
[14:57:33] <scott_gonzalez> I think there are a few reasons
[14:57:50] <scott_gonzalez> like the fact that the draggable elements within a sortable are dynamic
[14:58:02] <scott_gonzalez> and the droppable areas within a sortable don't actually exist
[14:58:29] <Dave_Stein> but they do interact with droppables, aside from that fakeness in the sort
[14:58:33] <scott_gonzalez> we do want to be able to have sortable items work with droppables directly though
[14:58:45] <Dave_Stein> yeah
[14:59:16] <Dave_Stein> a sortable has all the functionality of a draggable + the actual ability to sort with the "non-exisant" droppable areas
[14:59:49] <Dave_Stein> and won't they also be sharing a lot of the same methods/options like grid, refreshPositions, etc
[15:01:20] <scott_gonzalez> maybe
[15:01:32] <scott_gonzalez> if sortable can build on top of draggable, we can do that
[15:01:42] <scott_gonzalez> but sortable can't make the items draggables directly
[15:01:46] <scott_gonzalez> because they're dynamic
[15:02:22] <Dave_Stein> yeah i want to build sortable on top of draggable
[15:02:34] <Dave_Stein> i know they are dynamic in the sense that new LIs added to a UL are automatically sortable
[15:02:39] <Dave_Stein> i never looked at how you do that
[15:02:48] <Dave_Stein> a delegate on mousedown?
[15:04:13] <Dave_Stein> cause if i did $('#list').sortable() and internally it did $('#list').delegate( 'li', 'mousedown', function() { ... init draggable ... });
[15:04:17] <Dave_Stein> and then on mouseup destroy draggable
[15:04:49] <scott_gonzalez> I have a feeling that won't work as well as you want
[15:04:57] <scott_gonzalez> since there are no actual drop targets
[15:05:27] <Dave_Stein> when i'm done with droppable i'll take a look at the current sortable code and figure it out better / if it's possible like i'm thinking
[15:05:40] <scott_gonzalez> ok
[15:06:12] <Dave_Stein> okay that covers me for a while. gonna get back to work. thx for direction.
[15:16:50] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: http://git.io/P5zWSA
[15:16:50] <jquicommit> [jquery-ui/master] Datepicker: Changed Kazakh locale from kz to kk. Fixes #7829 - Kazakhstan language code. - Scott Gonz치lez
[15:18:19] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: http://git.io/3i7CAg
[15:18:19] <jquicommit> [jquery-ui/1-8-stable] Datepicker: Changed Kazakh locale from kz to kk. Fixes #7829 - Kazakhstan language code. - Scott Gonz치lez
[15:27:10] <jq-jenkins> Project jQuery UI build #136: STILL FAILING in 10 min: http://swarm.jquery.org:8080/job/jQuery%20UI/136/
[15:27:10] <jq-jenkins> Scott Gonz치lez: Datepicker: Changed Kazakh locale from kz to kk. Fixes #7829 - Kazakhstan language code.
