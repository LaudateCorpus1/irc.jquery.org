[04:22:07] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067236-keep-_openedPage-up-to-date (+2 new commits): 02http://git.io/vOcnCQ
[04:22:07] <jqmobilecommit> 13jquery-mobile/067236-keep-_openedPage-up-to-date 1479f8bb1 15Gabriel Schulhof: Panel: Bail upon opening animationComplete() if the panel has closed...
[04:22:07] <jqmobilecommit> 13jquery-mobile/067236-keep-_openedPage-up-to-date 148c1eb6a 15Gabriel Schulhof: Panel: Hook up animationComplete() to the wrapper, not the element
[04:24:04] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7264: Panel: Bail upon opening animationComplete() if the panel has closed (06master...067236-keep-_openedPage-up-to-date) 02http://git.io/uIL8aA
[04:24:24] <_|Nix|_> arschmitz: Ping!
[04:36:30] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened issue #7265: animationComplete: Remove only the handler if the timeout fires first 02http://git.io/mxXgAA
[05:13:23] <arschmitz> _|Nix|_: Pong!
[05:19:12] <_|Nix|_> arschmitz: Hey!
[05:20:01] <_|Nix|_> arschmitz: So, I was looking at .animationComplete() and I was thinking we should simply .off( theEventName ) if the failsafe timer fires, but we should .off( theEventName, eventHandlerWeAttached ) instead. 
[05:20:18] <_|Nix|_> arschmitz: So, we only detach whatever we've attached ourselves.
[05:20:41] <arschmitz> ok
[05:20:57] <_|Nix|_> Working on the tests for that right now ...
[05:21:00] <arschmitz> _|Nix|_: so i have a 100% working select menu with fallback on ALL platforms
[05:21:14] <_|Nix|_> Cool!
[05:21:19] <_|Nix|_> Very, very nice!
[05:21:29] <_|Nix|_> How did you handle the desktop?
[05:21:50] <arschmitz> _|Nix|_: well i got thinking about what native is on desktop
[05:22:03] <arschmitz> and realized that i dont need to worry about list opening or closing
[05:22:15] <_|Nix|_> Right, because it's always open.
[05:22:22] <arschmitz> so i can show hide ad will
[05:22:34] <arschmitz> so i have the button morph into a list when you click it
[05:22:36] <arschmitz> on desktop
[05:22:44] <_|Nix|_> Nice!
[05:22:47] <arschmitz> and on mobile its normal native multiselect
[05:22:48] <_|Nix|_> Into the native list.
[05:22:55] <_|Nix|_> Bam!
[05:22:56] <arschmitz> yes into the native list
[05:23:03] <_|Nix|_> Your work here is done.
[05:23:18] <arschmitz> _|Nix|_: the key was figuring out how to feature detect a softkeyboard
[05:23:35] <arschmitz> which your not supposed to be able to do
[05:23:51] <_|Nix|_> Now, this I'm curious about :)
[05:24:32] <arschmitz> _|Nix|_: so i was inspired by autogrow
[05:24:49] <arschmitz> _|Nix|_: i was looking at multi select and realize how similar they are
[05:25:15] <_|Nix|_> autogrow and multiselect?
[05:25:22] <arschmitz> which made me realize you can detect the softkeyboard by checking the height of the multiselect
[05:25:42] <arschmitz> on mobile phones its always normal single item height
[05:25:56] <arschmitz> because it shows as a normal select essentially
[05:26:02] <_|Nix|_> ... whereas on desktop it has the height of all items. Nice!
[05:26:09] <arschmitz> :) yup
[05:26:23] <_|Nix|_> How do you know the height of one item?
[05:26:34] <_|Nix|_> Does the .style tell you via the font-size?
[05:26:35] <arschmitz> _|Nix|_: will not all but at least 4
[05:26:54] <arschmitz> _|Nix|_: dont really need to worry we set font size
[05:27:17] <arschmitz> so i have a lot of leway in the cut off
[05:27:40] <_|Nix|_> arschmitz: I'm just curious about the heuristic. Is it that if ( element.height() > 2 * parseInt( element.css( "font-size" ) ) { /* we're on desktop */ }?
[05:27:56] <arschmitz> _|Nix|_: will its not done yet
[05:28:04] <arschmitz> it works but not polished
[05:28:25] <arschmitz> and we set the dimensions of it
[05:28:37] <arschmitz> so i do some unsetting and check if its greater then we set it to
[05:28:49] <_|Nix|_> Oh, I see.
[05:28:52] <arschmitz> and if so say we are on desktop
[05:29:14] <_|Nix|_> Clever.
[05:29:31] <arschmitz> because unless you did like font-size:5px it will always grow
[05:29:51] <arschmitz> because we set it much smaller then it would be for 4 items
[05:30:16] <arschmitz> _|Nix|_: and you can even set how big you want the button to expand to show the list just by setting the size attribute on the select
[05:30:36] <arschmitz> _|Nix|_: it will show how ever any options you set the size attribute to when it morphs
[05:30:49] <arschmitz> because i just detect the size of the multiselect
[05:31:03] <arschmitz> and set the height of the button to match when you click it and show the select
[05:31:11] <_|Nix|_> This is definitely a good heuristic.
[05:31:20] <arschmitz> and when you click out it goes back to a normal button showing your selections
[05:31:49] <arschmitz> just a sec this is a super rough implementation just showing the function
[05:31:53] <arschmitz> but ill push it
[05:35:54] <jqmobilecommit> [13jquery-mobile] 15arschmitz created 06select-fallback (+1 new commit): 02http://git.io/yW5lJg
[05:35:54] <jqmobilecommit> 13jquery-mobile/06select-fallback 147eade19 15Alexander Schmitz: Select: Implement native fallback to replace dialog
[05:36:17] <arschmitz> _|Nix|_: just pushed to a branch 
[05:39:35] <_|Nix|_> arschmitz: .appendTo() causes a remove() first. You should detach() first.
[05:39:51] <arschmitz> _|Nix|_: dont worry about the code this would never work in production
[05:40:01] <arschmitz> this is just to show function
[05:40:17] <_|Nix|_> arschmitz: No, I get it. I just wanna make sure we don't miss it in the end.
[05:40:55] <_|Nix|_> arschmitz: this._destroy() :)
[05:41:12] <_|Nix|_> I cannot go on living!
[05:41:14] <_|Nix|_> :)
[05:41:24] <arschmitz> _|Nix|_: yup widget suicide it was the quickest way to see if this approach would work at all
[05:41:57] <arschmitz> i think we should re think how custom select works and interacts as an option when we actually implment this
[05:42:08] <_|Nix|_> arschmitz: Yeah, but in the end we'd want to this._unenhance(), since we're going to have a this._enhance() anyway.
[05:42:23] <_|Nix|_> For sure.
[05:42:55] <arschmitz> _|Nix|_: also realized im ok with a little more work put into select / custom then we had talked about
[05:43:07] <arschmitz> because ui select wont be usable for quite a while ithink
[05:43:21] <_|Nix|_> arschmitz: ... and we still have some bugs/fixes that need to go into 1.4.x.
[05:43:41] <arschmitz> even though it will be in next version of ui it completely lacks native fallback and multiple select
[05:43:43] <_|Nix|_> arschmitz: ... like https://github.com/jquery/jquery-mobile/pull/7197
[05:43:48] <arschmitz> and will be a while before either lands
[05:43:59] <_|Nix|_> Right.
[05:44:30] <arschmitz> _|Nix|_: well bugs have nothing to do with how much effort we put into improving select
[05:44:43] <arschmitz> bugs are bugs as long as the widget exists we fix them
[05:45:45] <arschmitz> _|Nix|_: did you actually try the custom select or just look at the code?
[05:50:25] <arschmitz> _|Nix|_: iv tested on several android, ios, chrome, safari, ie8,9,10,11, opera
[05:50:48] <arschmitz> and the only issue i see so far is simeple in that in ie it closes the list when you select an item
[05:50:54] <arschmitz> and that should be an easy fix
[06:01:28] <_|Nix|_> No, I haven't tried it - sorry! I'm working on the animationComplete tests. I'm changing them to look for a single handler instead of no handler in $._data()
[06:01:55] <_|Nix|_> ... because I attach a dummy handler during setup and detach it during teardown.
[06:02:15] <_|Nix|_> So, during the test, if things work correctly, after the event/timeout fires, only the dummy I attach should be lef.t
[06:03:35] <arschmitz> ok
[06:07:18] <arschmitz> _|Nix|_: so i just realized this whole self destroy business will be solved already anyway
[06:07:48] <arschmitz> _|Nix|_: because once nativeMenu actually works via set options this becomes as easy as changing an option
[06:08:52] <arschmitz> then all we need to do is any time a page is shown or resized check if it fits and set the option
[06:10:55] <_|Nix|_> arschmitz: Well, actually, I don't think we should do that, because then we forget whether the dev originally wanted us to try and not be native.
[06:11:17] <arschmitz> _|Nix|_: not actually change value
[06:11:23] <arschmitz> but the functionality is the same i meant
[06:11:28] <_|Nix|_> Yeah, for sure.
[06:12:04] <arschmitz> we would have an internal state varible like this.forceNative that we would track it with
[06:12:07] <arschmitz> not the option
[06:12:29] <arschmitz> but could share a call to the function that does the actuall manipulations
[06:28:57] <arschmitz> uGoMobi: so i think i found a solution to native multiselect
[06:29:03] <arschmitz> http://view.jquerymobile.com/select-fallback/demos/selectmenu-custom/
[06:29:19] * uGoMobi is looking
[06:29:33] <arschmitz> uGoMobi: scroll down to the multiselect long list
[06:30:23] <uGoMobi> arschmitz: that looks pretty decent
[06:30:44] <arschmitz> just shows the native one in the button
[06:30:56] <arschmitz> uGoMobi: and on mobile it is normal it opens in the spinner thing
[06:31:12] <arschmitz> so basicly its native to the platform
[06:31:30] <uGoMobi> on Android you'll get list with checkboxes
[06:31:36] <arschmitz> yeah
[06:32:09] <uGoMobi> looks good
[06:32:19] <arschmitz> iv tested it on several android and ios, chrome, firefox, safari, opera, ie8,9,10
[06:32:20] <uGoMobi> you can't prevent the content shift
[06:32:38] <arschmitz> yeah not really i dont think
[06:32:52] <uGoMobi> yeah so that's acceptable
[06:33:34] <arschmitz> uGoMobi: you can set the size it expands to
[06:33:46] <arschmitz> by setting the size property on the select
[06:34:02] <arschmitz> becausethe button just expands to fit the select
[06:34:17] <arschmitz> and i just let the select be its native size
[06:35:47] <arschmitz> uGoMobi: the only bug i found anywhere was on ie the select closes back to button when you chose an option
[06:36:10] <arschmitz> so it seems to work consistently and im sure that will be fixed easily
[06:36:33] <arschmitz> uGoMobi: also when we review this widget it will basicly be doing all the work for this already
[06:37:20] <uGoMobi> I think this is a neat fallback
[06:37:21] <arschmitz> uGoMobi: because once you can set the option nativeMenu via setOption then all we have to do is set the option basicly when ever the size changes or page shows etc
[06:37:32] <arschmitz> uGoMobi: its basicly regular native
[06:37:48] <arschmitz> just making it have corners and shadow
[06:38:16] <arschmitz> uGoMobi: i was inspired by textarea autogrow
[06:38:42] <arschmitz> i also found out how to do something your not supposed to be able to do
[06:38:57] <arschmitz> detect if the device has a soft keyboard 
[06:39:06] <uGoMobi> arschmitz: what do you mean by "set the option basicly whenever the size changes"?
[06:39:40] <arschmitz> uGoMobi: so once we have a mechanism to set the option native menu at run time
[06:39:43] <uGoMobi> oh wait, you mean we will have option nativeMenu and the fallback also sets that option to true
[06:39:59] <uGoMobi> gotcha
[06:40:02] <arschmitz> well not set the option
[06:40:06] <arschmitz> but use the mechanism
[06:40:17] <arschmitz> because we dont want to wipe out what the dev set
[06:40:53] <_|Nix|_> Great ... the event stuff doesn't work in phantomjs :(
[06:41:06] <uGoMobi> ok, the option should still return false for nativeMenu but we use the exact same code
[06:44:32] <uGoMobi> I am not a big fan of the multiple select native UI on desktop, but that's a different story
[06:45:25] <uGoMobi> I think many people don't know you should hold cmd/cntrl to select multiple so you have to add that info to the label
[06:48:24] <arschmitz> uGoMobi: yeah but its the native ui cant do much about it but provide the custom one
[06:48:41] <arschmitz> uGoMobi: which i think we should have an option to allow it to be custom no matter what
[06:48:46] <uGoMobi> arschmitz: yes I know, just sayin' :)
[06:50:00] <uGoMobi> arschmitz: you mean that you can turn off the fallback and use the popup even if it's a long list?
[06:50:08] <arschmitz> yes
[06:51:52] <arschmitz> uGoMobi: if you happen to have a second i would love your opinion on this https://github.com/arschmitz/jquery-mobile-datepicker-wrapper/pull/16#issuecomment-38274826
[06:52:12] <arschmitz> since you made the theme :)
[06:52:29] <uGoMobi> sure
[06:54:50] <uGoMobi> arschmitz: I wouldn't add an option header theme
[06:55:05] <arschmitz> make it just match every time
[06:55:14] <uGoMobi> arschmitz: because we are planning on stop using swatches
[06:55:21] <arschmitz> true
[06:55:28] <arschmitz> ok thanks
[06:56:05] <uGoMobi> and it's not that it doesn't look good with just one theme
[06:57:36] <arschmitz> yeah
[07:12:27] <scott_gonzalez> "If I look at the sky in my dreams, my brain creates C# in an electronic sine wave because the sky usually sounds C#"
[07:12:30] <scott_gonzalez> AMAZING
[07:12:42] <scott_gonzalez> This guy hears sound through electronic vibrations on his skull.
[07:12:46] <scott_gonzalez> http://www.odditycentral.com/news/color-blind-artist-implants-antenna-in-his-skull-to-hear-colors.html
[07:13:35] <scott_gonzalez> The sounds represent colors.
[07:14:40] <arschmitz> that is pretty cool
[07:15:07] <scott_gonzalez> Whoa. He can hear infrared and ultraviolet.
[07:15:43] <scott_gonzalez> Heh, he knows if you should wear sun screen cuz he can hear the UV rays.
[07:15:53] <jquicommit> [13globalize] 15rxaviers created 06fix-214-number-significant-digits-format (+5 new commits): 02http://git.io/LosNeQ
[07:15:53] <jquicommit> 13globalize/06fix-214-number-significant-digits-format 14643278f 15Rafael Xavier de Souza: Number: Decouple format setup from execution...
[07:15:53] <jquicommit> 13globalize/06fix-214-number-significant-digits-format 14c786e35 15Rafael Xavier de Souza: Number: Format options for integer and fraction...
[07:15:53] <jquicommit> 13globalize/06fix-214-number-significant-digits-format 14f5bbf1f 15Rafael Xavier de Souza: Number: Allow different rounding mode...
[07:16:03] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06number from 147424019 to 14f5bbf1f: 02http://git.io/I-IriA
[07:17:16] <jquicommit> [13globalize] 15rxaviers opened pull request #215: Fix 214 Number: Significant digits format (06master...06fix-214-number-significant-digits-format) 02http://git.io/FozxtQ
[07:17:57] <_|Nix|_> OK ... this is insane ... it's not running setup for a certain module!
[07:18:05] <_|Nix|_> I mean phantomjs isn't.
[07:18:18] <_|Nix|_> I added a console.log into setup and it's not printing it, whereas Chrome is.
[07:18:23] <_|Nix|_> WTF?!
[07:18:28] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-214-number-significant-digits-format from 147c1c301 to 1467d9660: 02http://git.io/-0HLNw
[07:18:28] <jquicommit> 13globalize/06fix-214-number-significant-digits-format 1467d9660 15Rafael Xavier de Souza: Number: Significant digits...
[07:19:17] <_|Nix|_> ... and it's not like I can conveniently debug things with developer tools - it's fscking phantomjs :(
[07:29:56] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06number from 14f5bbf1f to 143fbe076: 02http://git.io/I-IriA
[07:29:56] <jquicommit> 13globalize/06number 1483e0a4f 15Rafael Xavier de Souza: Number: Create initial public API...
[07:29:56] <jquicommit> 13globalize/06number 14aff956c 15Rafael Xavier de Souza: Number: Create initial format function...
[07:29:56] <jquicommit> 13globalize/06number 14c2ff75e 15Rafael Xavier de Souza: Number: Decouple format setup from execution...
[07:30:46] <jquicommit> [13globalize] 15rxaviers 04force-pushed 06fix-214-number-significant-digits-format from 1467d9660 to 1446cc4ec: 02http://git.io/-0HLNw
[07:30:46] <jquicommit> 13globalize/06fix-214-number-significant-digits-format 140c95cdb 15Rafael Xavier de Souza: Number: Move format integer fraction...
[07:30:46] <jquicommit> 13globalize/06fix-214-number-significant-digits-format 1446cc4ec 15Rafael Xavier de Souza: Number: Significant digits...
[07:40:13] <_|Nix|_> arschmitz: You can't currently mock transitions and animations via .trigger( "transitionend" ), because .animationComplete() behaves according to real transition/animation support in the given browser.
[07:40:40] <arschmitz> ok
[07:41:06] <_|Nix|_> In order to provide tests that make sure only the handler attached by .animationComplete() is removed, I need to be able to .trigger( "transitionend" )
[07:41:30] <arschmitz> _|Nix|_: do you have a suggestion?
[07:41:35] <_|Nix|_> ... so I may need access to the properties computed at the top of the file.
[07:42:44] <_|Nix|_> arschmitz: *sigh* ... I dunno ... $.support.cssTransitions = props[ "transition" ]?
[07:42:56] <_|Nix|_> arschmitz: ... and simmilar for animations ... ?
[07:43:48] <_|Nix|_> arschmitz: After all, the support variable is supposed to be boolean, right? Or is it supposed to have the value "transition" and "animation"? Did it have that string value in earlier versions?
[07:43:55] <arschmitz> is there a valid use case for this besides just wanting them for your test?
[07:44:14] <_|Nix|_> arschmitz: Well, if you wanna attach your own animation handler, you'd want to know the name.
[07:44:26] <_|Nix|_> arschmitz: Not have to make the same computation yourself.
[07:44:45] <arschmitz> ok but why wouldnt you use animation complete?
[07:45:13] <_|Nix|_> No idea ...
[07:45:23] <arschmitz> why is this something we should off or support?
[07:45:46] <_|Nix|_> I don't understand ... "off or support"?
[07:45:54] <arschmitz> offer or sorry
[07:45:58] <_|Nix|_> Oh.
[07:46:47] <_|Nix|_> You're right. .animationComplete() encapsulates the functionality nicely, but it's not testable.
[07:47:13] <_|Nix|_> I can't tell .animationComplete() "ignore the device - /I'm/ telling you there's support."
[07:48:37] <arschmitz> why cant you ? 
[07:49:07] <arschmitz> _|Nix|_: https://github.com/jquery/jquery-mobile/blob/master/tests/integration/animation-complete/animationComplete.js#L65
[07:49:25] <arschmitz> you can also set it to true
[07:49:25] <_|Nix|_> arschmitz: That's to turn it off.
[07:49:43] <_|Nix|_> arschmitz: Yes, but if you do, the values inside props will not work.
[07:50:08] <arschmitz> oh right
[07:51:09] <_|Nix|_> arschmitz: The /only/ way I can think of is to override jQuery itself so that the custom element it uses for testing is actually an object with all the right properties.
[07:51:46] <_|Nix|_> arschmitz: Anyway ... I'll think of something ... right now I gotta go to the playground before my daughter explodes :)
[07:57:32] <arschmitz> ok have fun
[08:01:05] <jqmobilecommit> [13jquery-mobile] 15jeremyhill-up opened issue #7266: Normal and icon-only buttons in controlgroups contained in footers do not have the same height 02http://git.io/6b-GMg
[08:06:47] <_|Nix|_> arschmitz: We can add a fallback: If the $.support tests pass, and the props[] have invalid values, then provide a fallback.
[08:06:55] <_|Nix|_> arschmitz: ... the unprefixed value, for example.
[08:07:07] <arschmitz> but does this make sense for anything besides tests 
[08:07:28] <arschmitz> is there a use case because that has potential implications
[08:07:49] <_|Nix|_> arschmitz: It does, because it will be props[ animationType ].event || "transitionend"
[08:08:02] <_|Nix|_> arschmitz: So, in production, you'll never hit the other side of the ||
[08:08:33] <_|Nix|_> arschmitz: Because $.support.cssTransitions will be false, so the if-statement will protect the code from hitting the right hand side of the ||
[08:08:39] <arschmitz> right but $.support.cssTransitions is public so people can override it
[08:08:50] <arschmitz> just the same as your going to do
[08:08:52] <_|Nix|_> arschmitz: Yes, and if they do, the code will behave as if there are transitions.
[08:09:01] <arschmitz> yeah 
[08:09:07] <_|Nix|_> Good. That's what they wanted.
[08:09:13] <arschmitz> hmm yeah maybe
[08:09:48] <_|Nix|_> arschmitz: Anyway, my daughter's done dressing, so now I'm off to the playground :)
[08:09:55] <arschmitz> lol ok
[08:28:58] <arschmitz> _|Nix|_: uGoMobi: WOOOO found the problem with swipe on android 4.4
[09:29:44] <_|Nix|_> arschmitz: Cool!
[09:29:53] <arschmitz> no
[09:29:56] <arschmitz> not at all
[09:30:02] <arschmitz> i dont think we can support swipe in chrome
[09:30:21] <arschmitz> well if you like scrolling that is
[09:30:51] <arschmitz> _|Nix|_: there is nothing good about what i found :(
[09:31:18] <_|Nix|_> arschmitz: Oh, I see ... so, it's really "-WOOOO", eh?
[09:31:52] <arschmitz> chrome only fires one touchmove event for any sequence unless you prevent default on touchstart or that first touch move
[09:32:08] <arschmitz> and if you go for touch move and for every touchmove after
[09:32:23] <arschmitz> _|Nix|_: and if you prevent default then you dont get scrolling
[09:43:21] <_|Nix|_> OK, so either you handle the whole shebang, or you let Chrome handle it. No inbetweenzies.
[09:46:00] <arschmitz> _|Nix|_: there is an open bug for it
[09:46:15] <arschmitz> it was a bug in android at one point but was fixed
[09:46:27] <arschmitz> but never fixed in chrome
[09:46:42] <arschmitz> but then there is http://developer.android.com/guide/webapps/migrating.html#TouchCancel
[09:46:56] <arschmitz> which leads me to believe that its intentional ( though very stupid )
[09:47:55] <arschmitz> so scott_gonzalez is going to talk to one of the guys he knows on chrome team thats in charge of pointer events and see if he can help
[09:48:03] <arschmitz> its the same in chrome ios i think its all chrome
[09:49:17] <arschmitz> _|Nix|_: to bad you cant preventDefault on the touchcancel to say hey no im still listening 
[09:49:44] <arschmitz> but still do your thing
[09:53:24] <_|Nix|_> arschmitz: Can you not scroll on the browser's behalf if it turns out that there's not gonna be a swipe? I suppose you can't imitate the kinematics ...
[09:53:37] <_|Nix|_> arschmitz: ... I guess that's asking a lot.
[09:54:02] <arschmitz> yeah we are not going to re implement scrolling
[09:54:05] <arschmitz> lol
[09:54:10] <_|Nix|_> :)
[11:08:49] <jquicommit> [13globalize] 15rxaviers pushed 1 new commit to 06fix-214-number-significant-digits-format: 02http://git.io/nvPJMA
[11:08:49] <jquicommit> 13globalize/06fix-214-number-significant-digits-format 143b778ba 15Rafael Xavier de Souza: (fix) Number: Significant digits...
[13:38:31] <scott_gonzalez> tj_vantoll: Do you know where this was cherry-picked from? https://github.com/jquery/jquery-ui/commit/d65cc9350fa205a46031a9b9b95cf04d98394036
[13:38:36] <scott_gonzalez> It exists in the repo, but not in any branch.
[13:38:39] <scott_gonzalez> Just curious.
[13:39:07] <tj_vantoll> I believe it was from my fork.
[15:56:43] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof created 067265-do-not-remove-all-handlers (+2 new commits): 02http://git.io/b-TC7w
[15:56:43] <jqmobilecommit> 13jquery-mobile/067265-do-not-remove-all-handlers 1401133b7 15Gabriel Schulhof: animationComplete: Remove only the handler attached by us...
[15:56:43] <jqmobilecommit> 13jquery-mobile/067265-do-not-remove-all-handlers 144f8524b 15Gabriel Schulhof: animationComplete: Make sure no foreign handlers are removed
[15:57:53] <jqmobilecommit> [13jquery-mobile] 15gabrielschulhof opened pull request #7267: animationComplete: Remove only the handler attached by us (06master...067265-do-not-remove-all-handlers) 02http://git.io/Q6WVrQ
[16:05:44] <jqmobilecommit> [13jquery-mobile] 15livewire1407 opened issue #7268: <button> inside of popup causes page to refresh 02http://git.io/fR322A
[22:53:00] <jqmobilecommit> [13jquery-mobile] 15KupueIIIKo opened issue #7269: Not correctly panel works 02http://git.io/EKM1Jw
