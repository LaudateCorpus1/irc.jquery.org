[00:01:23] <uGoMobi> morning _|Nix|_ 
[02:02:00] <doesallmagic2> Project jQuery UI - git core build #591: STILL UNSTABLE in 1 min 28 sec: http://jenkins.jquery.com/job/jQuery%20UI%20-%20git%20core/591/
[02:03:17] <doesallmagic2> Project jQuery UI 1-9-stable - git core build #382: STILL UNSTABLE in 1 min 17 sec: http://jenkins.jquery.com/job/jQuery%20UI%201-9-stable%20-%20git%20core/382/
[02:34:32] <_|Nix|_> uGoMobi: The data-form attribute for buttons has to stay ui-btn-up-a so that when clicking on one with the inspector it will identify the correct accordion to open.
[02:35:02] <_|Nix|_> uGoMobi: That's just an internal link inside the TR, so it has nothing to do with our new class setup.
[02:35:30] <uGoMobi> _|Nix|_: yeah, I wasn't sure if we should use... if 1.4 then... else ...
[02:35:41] <uGoMobi> _|Nix|_: right
[02:36:13] <uGoMobi> the markup of the preview can be whatever we want it to be
[02:36:15] <_|Nix|_> uGoMobi: No point doing that version check ... I mean, I can replace ui-btn-up-a with the-colour-of-the-button-when-idle
[02:36:29] <_|Nix|_> uGoMobi: ... and go back to version 1.0 and replace all the way back.
[02:36:34] <_|Nix|_> Exactly.
[02:36:57] <_|Nix|_> So, I'm going to keep it ui-btn-up-a, because that's the simplest.
[02:37:16] <_|Nix|_> Also, setting the colour for all three states covered by the accordions /does/ seem to work.
[02:37:21] <uGoMobi> sounds good
[02:37:44] <_|Nix|_> Do you mean in https://github.com/jquery/web-jquery-mobile-theme-roller/issues/145 that the resulting CSS file has incorrect contents (like ui-btn-hover-a)?
[02:37:44] <b-ot> _|Nix|_: Issue #145 by uGoMobi (10h 44m ago): Make applying a color to buttons work again
[02:38:17] <uGoMobi> _|Nix|_: no
[02:39:06] <uGoMobi> _|Nix|_: I mean that the reason it doesn't work in TR 1.4-update branch has to do with that change
[02:39:30] <_|Nix|_> uGoMobi: OK, but what do you mean by "doesn't work"?
[02:39:38] <uGoMobi> _|Nix|_: I updated the preview markup, so we probably have to put those classes back in the markup
[02:39:57] <_|Nix|_> uGoMobi: I can select a colour for the hover state, and that colour is immediately reflected in the preview.
[02:40:07] <uGoMobi> _|Nix|_: when you drop a color above a button element it isn't applied
[02:40:17] <_|Nix|_> uGoMobi: Oh, OK.
[02:40:24] <uGoMobi> _|Nix|_: I am talking about drag and drop
[02:40:30] <_|Nix|_> uGoMobi: OK. Gotcha!
[02:40:35] <uGoMobi> sorry, didn't make that clear in the ticket
[02:40:44] <_|Nix|_> uGoMobi: OK. NP!
[02:40:49] <_|Nix|_> Gotta go eat now ...
[02:41:01] <uGoMobi> ok, enjoy your lunch
[02:46:06] <doesallmagic2> Project jQuery UI - 1.6.x core build #478: STILL FAILING in 15 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.6.x%20core/478/
[03:10:09] <_|Nix|_> uGoMobi: Lunch? I wish ... it was breakfast :)
[03:10:52] <uGoMobi> _|Nix|_: ohh
[03:16:05] <doesallmagic2> Project jQuery UI - 1.7.x core build #477: STILL UNSTABLE in 15 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.7.x%20core/477/
[03:20:09] <_|Nix|_> uGoMobi: OK ... I know why it's not working. It's because you're hitting the wrong classtokey ...
[03:20:27] <_|Nix|_> uGoMobi: However, I'm not sure how some of the classtokey keys would get hit at all.
[03:20:41] <_|Nix|_> uGoMobi: Like, how would you ever hit .ui-btn-down?
[03:21:19] <_|Nix|_> uGoMobi: That is, how would you ever drop a colour onto a depressed button?
[03:21:41] <uGoMobi> _|Nix|_: right, I didn't understand that part either
[03:21:45] <_|Nix|_> I mean, unless you have multitouch and you drag the colour with one finger, while keeping the button depressed with another finger ...
[03:21:57] <uGoMobi> _|Nix|_: I did add ui-btn-a to that array, didn't I?
[03:22:02] <_|Nix|_> uGoMobi: Maybe early templates had a button with a hardcoded class of ui-btn-down-x
[03:22:29] <_|Nix|_> uGoMobi: So there was actually a button in the template that was permanently depressed.
[03:22:34] <uGoMobi> _|Nix|_: no, that hasn't been the case
[03:22:48] <_|Nix|_> uGoMobi: OK, but maybe the code can accommodate that.
[03:23:16] <uGoMobi> _|Nix|_: I was thinking it was just to be sure that things also work when a button somehow got the :active (down) state
[03:23:52] <uGoMobi> but when you drop a color on a button in the "up" state it applies style for hover and down as well
[03:24:19] <_|Nix|_> uGoMobi: Well, maybe, but in those cases the colour should apply to the "down" state.
[03:24:32] <_|Nix|_> Right.
[03:24:36] <uGoMobi> _|Nix|_: yeah
[03:25:01] <uGoMobi> not sure if it works like that
[03:25:34] <_|Nix|_> Well, I'm going to make a minimal adjustment. When it checks for .ui-btn-up the check will also be successful if version >= 1.4 and the element has class ui-btn-[a-z].
[03:32:57] <_|Nix|_> uGoMobi: I totally don't get which colour gets set by .ui-btn-
[03:35:14] <uGoMobi> _|Nix|_: I had the same plan, if >= 1.4 check for .ui-btn-[a-z], but couldn't figure out how it works exactly
[03:35:59] <uGoMobi> _|Nix|_: when a color is dropped above an element with .ui-btn- it should set the color for all 3 states
[03:36:10] <uGoMobi> up, hover, down/:active
[03:36:59] <uGoMobi> _|Nix|_: so it's not possible to set blue color for up, red for hover and green for down
[03:37:12] <uGoMobi> _|Nix|_: unless you manually enter it in the left panel
[03:39:57] <_|Nix|_> uGoMobi: The thing is the theme file contains comments with things like a-bup-blah, but never a-btn-blah
[03:40:15] <_|Nix|_> uGoMobi: So, I don't think a-btn-* is ever used as a colour key.
[03:40:37] <_|Nix|_> uGoMobi: I went back all the way to 1.1-stable looking for a-btn-something and I couldn't find it.
[03:41:09] <_|Nix|_> uGoMobi: Make that 1.0-stable.
[03:45:53] <_|Nix|_> uGoMobi: if ( TR.version.indexOf( "1.4." ) < 0 ) { classtokey[ ".ui-btn-" ] = "-bup"; }
[03:46:06] <doesallmagic2> Project jQuery UI - 1.8.x core build #453: STILL UNSTABLE in 15 min: http://jenkins.jquery.com/job/jQuery%20UI%20-%201.8.x%20core/453/
[03:46:09] <_|Nix|_> uGoMobi: That makes it work for 1.4.
[03:46:23] <_|Nix|_> uGoMobi: I mean that makes colour dropping work for 1.4.
[03:47:16] <uGoMobi> _|Nix|_: ah you're right, the comments for buttons in the theme CSS didn't change
[03:48:42] <uGoMobi> _|Nix|_: I'd say... whatever makes it work with 1.4 and previous versions is fine :)
[03:53:44] <_|Nix|_> Man ... I don't get it ... now there's some kind of JS error, and I didn't change anything!
[03:53:48] <_|Nix|_> WTF?!
[03:54:48] <_|Nix|_> I fscking hate Chrome caching!
[03:56:05] <_|Nix|_> uGoMobi: Do incognito tabs share the cache?
[03:56:26] <_|Nix|_> uGoMobi: That is, if I open the same page in a second incognito tab, does it use the cache from the first page?
[03:56:42] <uGoMobi> _|Nix|_: as far as I know incognito tabs never use cache
[03:56:58] <_|Nix|_> uGoMobi: I think they use cache, but they don't write it to disk, no?
[03:57:28] <_|Nix|_> uGoMobi: Well, OK, whatever ... I'll assume you're right :)
[03:58:25] <uGoMobi> _|Nix|_: BTW... you can also enable the option to disable cache if you have the developer tools
[03:58:42] <uGoMobi> it's in the settings menu of the developer tools
[04:00:22] <_|Nix|_> uGoMobi: Yeah, but that means I have to have dev tools open all the time.
[04:02:02] <_|Nix|_> uGoMobi: Grrr! OTOH, if I open devtools in incognito I have to set up all the breakpoints all the time :(
[04:02:50] <_|Nix|_> uGoMobi: Maybe there's a command line switch to turn off the cache.
[04:05:43] <jqcommit> [13api.jquerymobile.com] 15agcolom opened issue #198: changePage examples in 1-4 branch do not work 02http://git.io/TeHN0g
[04:20:41] <_|Nix|_> uGoMobi: OK. Colour dropping works on all but checkboxradio widgets. For some reason the colour does not affect static list items.
[04:23:52] <uGoMobi> _|Nix|_: note that static list items use ui-body- class now
[04:24:21] <uGoMobi> _|Nix|_: in 1.3 that was ui-btn-down- (and we unset the gradient)
[04:25:16] <_|Nix|_> uGoMobi: So in 1.4 dragging a colour onto a button is not /supposed/ to set the static link colour, right?
[04:25:34] <_|Nix|_> uGoMobi: Because ui-body-* is now responsible for that.
[04:26:40] <uGoMobi> _|Nix|_: static link?
[04:26:52] <_|Nix|_> uGoMobi: Sorry ... static list item.
[04:27:09] <uGoMobi> _|Nix|_: ah ok, yeah that's correct
[04:34:01] <_|Nix|_> uGoMobi: What can I drop onto to set ui-body-?
[04:34:13] <_|Nix|_> uGoMobi: I guess the static list item, but is there anything else?
[04:34:30] <_|Nix|_> I can't drop onto the ui-content anymore, because that's ui-page-theme, not ui-body.
[04:35:20] <_|Nix|_> I also need to correctly identify the active stat.e
[04:35:27] <_|Nix|_> It doesn't do that anymore ...
[04:35:47] <_|Nix|_> You know what? I'll push what I have for now ...
[04:36:37] <_|Nix|_> There ... I pushed it.
[04:41:32] <_|Nix|_> uGoMobi: Well, there's still a bit of a disconnect. The accordion reads "Content Body", but that should really be page theme, right?
[04:41:59] <_|Nix|_> uGoMobi: We need a new accordion for page theme.
[04:43:12] <uGoMobi> _|Nix|_: yeah we need to adjust that
[04:43:36] <uGoMobi> _|Nix|_: we need two collapsibles, one for page, one for body
[04:43:52] <uGoMobi> _|Nix|_: we can add a div with body theme in the preview
[04:44:24] <uGoMobi> _|Nix|_: as a wrapper around "Sample text and links."
[04:44:57] <uGoMobi> besides that the static list item and text input get body theme
[04:46:13] <_|Nix|_> uGoMobi: Actually, the page theme can be set by dropping a colour onto the content div.
[04:46:33] <_|Nix|_> uGoMobi: The body theme can be set by dropping a colour onto the static list item - but that is not obvious.
[04:46:35] <uGoMobi> _|Nix|_: yes, I did that
[04:47:14] <uGoMobi> _|Nix|_: because wrapping the whole thing in a div with class ui-page and ui-page-theme-a broke everything
[04:47:31] <_|Nix|_> Riiight ...
[04:47:54] <_|Nix|_> uGoMobi: However, wrapping the whole thing in a div with class ui-body-* may not break everything, right?
[04:47:55] <jquicommit> [13globalize] 15mackshot opened pull request #192: Update globalize.js (06master...06master) 02http://git.io/lElA4w
[04:48:14] <_|Nix|_> uGoMobi: So, we could make that an additional dropzone for ui-body-* right?
[04:48:49] <uGoMobi> _|Nix|_: I am not sure if I follow
[04:49:15] <_|Nix|_> uGoMobi: Currently, to set a colour for ui-body-* your only option is to drop it onto the static list item.
[04:49:22] <_|Nix|_> uGoMobi: No other element exposes ui-body-*
[04:49:28] <_|Nix|_> Right?
[04:49:29] <uGoMobi> _|Nix|_: I meant that when I wrapped header and content in a div with ui-page and ui-page-theme-a it broke
[04:49:43] <uGoMobi> _|Nix|_: also the text input
[04:49:59] <_|Nix|_> uGoMobi: Right, but what if you wrap header and content in a div with ui-body-*?
[04:50:03] <_|Nix|_> uGoMobi: Will it break?
[04:50:03] <uGoMobi> _|Nix|_: we can create a dropzone for ui-body-a
[04:50:31] <uGoMobi> _|Nix|_: but then we don't have a dropzone for ui-page-theme-* anymore
[04:51:06] <_|Nix|_> uGoMobi: I think it finds the innermost DOM element first.
[04:51:20] <_|Nix|_> Otherwise it would find ui-page-theme-a when you drop something onto a button.
[04:52:12] <_|Nix|_> So if you surrounded header and content with a div.ui-body-a, it would find that div, but only where that div contains nothing. So, if you add ample padding around the div, you should be able to drop onto it.
[04:53:00] <_|Nix|_> So, like this: [ .ui-body-a [ ui-page-theme-a [ ui-btn-a [] ] ] ]
[04:53:01] <uGoMobi> and where can you drop a color to set page theme color?
[04:53:09] <_|Nix|_> uGoMobi: The content.
[04:53:29] <uGoMobi> ah ok, but body should be nested in page
[04:53:36] <uGoMobi> not the other way around
[04:54:12] <_|Nix|_> uGoMobi: Then you can create a <p class="ui-body-a">This is a separately themed paragraph.</p>
[04:55:07] <_|Nix|_> uGoMobi: ... and dropping onto either the static list item or the paragraph will then set the colour for ui-body-*.
[04:55:34] <_|Nix|_> uGoMobi: The paragraph is more obvious than the static list item ...
[04:57:08] <uGoMobi> http://jsbin.com/AKOmUxa/88/edit
[04:57:14] <_|Nix|_> uGoMobi: Oh, wow! How do we set ui-overlay-*?
[04:57:53] <uGoMobi> _|Nix|_: overlay is same as page-theme
[04:57:59] <_|Nix|_> uGoMobi: That's not bad, but make sure there's room to drop onto the content page as well.
[04:58:10] <_|Nix|_> uGoMobi: Oh, really? OK.
[04:58:31] <_|Nix|_> uGoMobi: So, ui-overlay-* is taken care of during actual CSS generation by copying the values for ui-page-theme-*?
[04:58:42] <uGoMobi> it was always like this to set body theme so I guess there is enough room
[04:58:50] <_|Nix|_> OK ...
[04:58:53] <uGoMobi> _|Nix|_: no
[04:59:10] <uGoMobi> _|Nix|_: it's simply another selector for the same rule
[04:59:19] <_|Nix|_> uGoMobi: Oh, OK.
[04:59:21] <uGoMobi> check the theme CSS
[04:59:31] <_|Nix|_> Gotcha.
[04:59:35] <_|Nix|_> So, it's almost like an alias.
[05:19:50] <_|Nix|_> uGoMobi: OK, so I still have to make dropping a colour onto a checkboxradio work, and then I can consider https://github.com/jquery/web-jquery-mobile-theme-roller/issues/145 fixed.
[05:19:50] <b-ot> _|Nix|_: Issue #145 by uGoMobi (13h 26m ago): Make applying a color to buttons work again
[05:20:32] <uGoMobi> _|Nix|_: great!
[05:55:32] <jquicommit> 01[13jquery-ui01] 15tjvantoll pushed 1 new commit to 06datepicker: 02http://git.io/-NdnyQ
[05:55:32] <jquicommit> 13jquery-ui/06datepicker 14560e704 15TJ VanToll: Datepicker: Support destroying inline datepickers.
[06:03:07] <jquicommit> 01[13jquery-ui01] 15tjvantoll pushed 1 new commit to 06datepicker: 02http://git.io/j_rcxQ
[06:03:07] <jquicommit> 13jquery-ui/06datepicker 1444eb843 15TJ VanToll: Datepicker: Add tests for the value() and valueAsDate() methods and inline pickers.
[06:08:21] <tj_vantoll> Question: Currently if you hit the enter key in an empty <input> (that is a datepicker), it'll be filled with today's date - http://jsfiddle.net/tj_vantoll/tRdpr/.
[06:08:33] <tj_vantoll> The question is should this behavior be preserved?
[06:09:37] <jqmobilecommit> [13jquery-mobile] 15hejjahejja opened issue #6755: datepicker webshim 02http://git.io/4urYXA
[06:09:37] <tj_vantoll> arschmitz scott_gonzalez jzaefferer rxaviers Thoughts on ^ ?
[06:11:56] <scott_gonzalez> I think it has to be.
[06:12:13] <scott_gonzalez> When the datepicker is open, a date has focus.
[06:12:21] <scott_gonzalez> And whenever a date has focus, enter has to select it.
[06:12:43] <tj_vantoll> Ah true. I didn't think about it that way.
[06:13:14] <jzaefferer> Yeah, that seems reasonable
[06:13:45] <tj_vantoll> It's not working in the rewrite so I'll look into that. Hooray for existing tests.
[06:14:18] <scott_gonzalez> Yeah, that is one good thing about datepicker: it has a lot of tests.
[06:15:45] <tj_vantoll> Indeed. I'm finding functionality I didn't know existed.
[06:20:25] <jqmobilecommit> [13jquery-mobile] 15arschmitz closed issue #6755: datepicker webshim 02http://git.io/4urYXA
[06:29:14] <arschmitz> tj_vantoll: you confused the me very much lol because it looked like you were pointing at that jqm issue about a datepicker
[06:30:04] <tj_vantoll> Yeah sorry about that. Unfortunate timing :)
[06:30:05] <arschmitz> tj_vantoll: but now that i understand i agree it should stay as well
[06:30:20] <arschmitz> lol yeah i was very confused for a few minutes
[06:31:09] <jquicommit> 01[13jquery-ui01] 15tjvantoll pushed 2 new commits to 06datepicker: 02http://git.io/y6UmHQ
[06:31:09] <jquicommit> 13jquery-ui/06datepicker 143333c70 15TJ VanToll: Datepicker: Remove unnecessary code now that destroying inline pickers is supported.
[06:31:09] <jquicommit> 13jquery-ui/06datepicker 14fd94740 15TJ VanToll: Datepicker: Enter keypresses on the <input> should select the current date
[06:45:59] <tj_vantoll> Oh man, almost none of the keyboard shortcuts when the <input> has focus work in the rewrite yet. And there are way more of them than I remember.
[06:49:30] <jquicommit> 01[13jquery-ui01] 15tjvantoll pushed 1 new commit to 06datepicker: 02http://git.io/WOPQLQ
[06:49:30] <jquicommit> 13jquery-ui/06datepicker 14a089c49 15TJ VanToll: Datepicker: Enable enter with existing value test. Coding standards cleanup of keyboard tests.
[06:55:15] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/T50jqw
[06:55:15] <jquicommit> 13jquery-ui/06master 14f848ae3 15Scott González: Build: Include es3 option for JSHint.
[06:56:14] <doesallmagic2> Project jQuery UI build #1228: FAILURE in 1 min 13 sec: http://jenkins.jquery.com/job/jQuery%20UI/1228/
[06:56:14] <doesallmagic2> Scott González: Build: Include es3 option for JSHint.
[07:07:25] <scott_gonzalez> jzaefferer Krinkle|detached: ping
[07:08:09] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/_XGRWQ
[07:08:09] <jquicommit> 13jquery-ui/06master 148f3454f 15Scott González: Upgrade to JSHint 2.3.0 for browser version.
[07:08:25] <doesallmagic2> Project jQuery UI build #1229: STILL FAILING in 27 sec: http://jenkins.jquery.com/job/jQuery%20UI/1229/
[07:08:25] <doesallmagic2> Scott González: Upgrade to JSHint 2.3.0 for browser version.
[07:13:23] <jzaefferer> scott_gonzalez: pong?
[07:13:50] <scott_gonzalez> jzaefferer: Can you figure out why `grunt qunit` is failing for jquery-ui after I updated JSHint?
[07:21:01] <Krinkle> scott_gonzalez: failing how?
[07:21:05] <Krinkle> scott_gonzalez: you mean the error shown in jenkins?
[07:21:09] <Krinkle> Warning: PhantomJS timed out, possibly due to a missing QUnit start() call. Use --force to continue. 
[07:21:10] <Krinkle> http://jenkins.jquery.com/job/jQuery%20UI/1229/console
[07:21:17] <Krinkle> I don't think that's related to jshint
[07:21:34] <Krinkle> probably one of the npm dependencies silently upgrading between the two builds due to tilde version number ranges
[07:21:47] <scott_gonzalez> nope
[07:22:26] <scott_gonzalez> If I checkout HEAD^ it runs.
[07:23:15] <Krinkle> scott_gonzalez: as for es3/es5 option, that's in the jshint release notes (they changed from es5:false by default and using es5:true to opt-in, to removing the es5 option and adding es3:false by default and one uses es3:true to opt back)
[07:23:29] <Krinkle> scott_gonzalez: does it pass locally in a real browser? 
[07:23:35] <scott_gonzalez> yes
[07:31:24] <Krinkle> scott_gonzalez: checking out..
[07:41:23] <Krinkle> GET http://krinkle.dev/jquery/themes/base/jquery.ui.core.css 404 (Not Found) krinkle.dev/:6
[07:41:23] <Krinkle> GET http://krinkle.dev/jquery/themes/base/jquery.ui.theme.css 404 (Not Found) 
[07:41:33] <Krinkle> scott_gonzalez: probably not related, but noteworthy
[07:43:00] <scott_gonzalez> Those should exist.
[07:43:15] <Krinkle> scott_gonzalez: Not until the css build task was removed
[07:43:18] <Krinkle> since*
[07:43:25] <doesallmagic2> Project jQuery UI build #1230: STILL FAILING in 26 sec: http://jenkins.jquery.com/job/jQuery%20UI/1230/
[07:43:34] <scott_gonzalez> Those aren't built files.
[07:43:44] <Krinkle> http://krinkle.dev/jquery/jquery-ui/tests/unit/accordion/accordion.html
[07:43:48] <Krinkle> (localhost, ofc)
[07:44:06] <Krinkle> from there those 404s are given
[07:44:07] <scott_gonzalez> Oh, your paths are wrong.
[07:44:12] <scott_gonzalez> Hmm...
[07:44:13] <Krinkle> my paths are wrong
[07:44:18] <scott_gonzalez> They shouldn't be rooted.
[07:44:52] <Krinkle> it goes up one directory to many
[07:45:07] <Krinkle> 	document.write( "<link rel='stylesheet' href='../../../" + url + "'>" ); 
[07:45:51] <scott_gonzalez> Three levels is correct.
[07:45:56] <scott_gonzalez> accordion, unit, tests
[07:46:24] <Krinkle> well, something is messing it up
[07:46:43] <Krinkle> actually, they're from http://krinkle.dev/jquery/jquery-ui/tests/
[07:46:52] <scott_gonzalez> They're loading properly for me.
[07:47:02] <Krinkle> yeah, the 404s were still in the console from the previous page
[07:47:07] <scott_gonzalez> ah
[07:47:56] <scott_gonzalez> I'll fix those now.
[07:47:57] <Krinkle> scott_gonzalez: also, the link to testswarm should be updated to swarm.jquery.org (when was it swarm.jquery.com?)
[07:48:18] <scott_gonzalez> Yeah, I'll fix that too (and use project)
[07:49:51] <scott_gonzalez> Fixed both of those.
[07:50:03] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 2 new commits to 06master: 02http://git.io/yMJfQg
[07:50:03] <jquicommit> 13jquery-ui/06master 14d186deb 15Scott González: Tests: Fixed path to theme files in index.
[07:50:03] <jquicommit> 13jquery-ui/06master 14161d7ee 15Scott González: Tests: Updated URL for TestSwarm.
[07:50:15] <doesallmagic2> Project jQuery UI build #1231: STILL FAILING in 25 sec: http://jenkins.jquery.com/job/jQuery%20UI/1231/
[07:50:16] <doesallmagic2> * Scott González: Tests: Fixed path to theme files in index.
[07:50:16] <doesallmagic2> * Scott González: Tests: Updated URL for TestSwarm.
[07:55:41] <Krinkle> scott_gonzalez: so I can reproduce the bug via grunt qunit locally, when using grunt --verbose I can see it does start 1 test before failing
[07:55:43] <Krinkle> Testing tests/unit/accordion/accordion.html
[07:55:43] <Krinkle> accordion: common widget - JSHint...
[07:55:43] <Krinkle> Warning: PhantomJS timed out, possibly due to a missing QUnit start() call. Use --force to continue.
[07:55:58] <Krinkle> So I'm not sure what's going on there.
[07:56:17] <Krinkle> Perhaps a bug in grunt-contrib-qunit, since it is working fine with our qunit directly in the browser
[07:56:29] <scott_gonzalez> You know what, this is silly.
[07:56:38] <scott_gonzalez> We should just not run these tests in phantom.
[07:56:58] <Krinkle> Why are we doing jshint checks at all in qunit?
[07:57:05] <Krinkle> (not just qunit over phantom)
[07:57:30] <scott_gonzalez> Because it makes it easy for people to see if they have errors.
[07:57:31] <Krinkle> we have grunt (especially grunt-watch) if you want linting
[07:57:45] <scott_gonzalez> grunt-watch is a nuisance.
[07:57:46] <Krinkle> and inline linters in proper text editors
[07:58:02] <scott_gonzalez> I don't expect the average contributor to use grunt.
[07:58:13] <scott_gonzalez> And certainly not grunt-watch.
[07:58:48] <Krinkle> afaik we already require running grunt to some degree for jquery contrib in general since we require files to be built
[07:58:52] <scott_gonzalez> Is it possible to pass a query string to the qunit task?
[07:58:56] <Krinkle> maybe not in jqui though
[07:59:00] <Krinkle> scott_gonzalez: yes
[07:59:02] <scott_gonzalez> Not in UI.
[07:59:09] <scott_gonzalez> And I never want to require grunt for UI.
[07:59:19] <Krinkle> core used to pass skip-jshint to the grunt qunit runner
[07:59:25] <Krinkle> k
[07:59:38] <Krinkle> that's why we introduced that checkbox in the first place
[07:59:47] <Krinkle> I thought ui was passing that query already, maybe it got lost recently?
[08:00:17] <scott_gonzalez> That's not why the checkbox was added in the first place.
[08:00:23] <scott_gonzalez> I added it when I added JSHint to unit tests.
[08:00:27] <scott_gonzalez> It was for TestSwarm.
[08:01:22] <Krinkle> yeah, that's what I meant, we added it to exclude from automated runs where jshint is already presumed passing
[08:01:31] <Krinkle> oh, that's right, we're passing it to testswamr, not yet to grunt qunit
[08:01:49] <Krinkle> we didn't have qunit phantomjs in core
[08:03:50] <scott_gonzalez> So is the only way to do this to switch to using URLs instead of files?
[08:19:31] <scott_gonzalez> Krinkle: https://github.com/jshint/jshint/issues/1251
[08:19:32] <b-ot> scott_gonzalez: Issue #1251 by FengShang (2mon 3w ago): Have 'TypeError' when call jshint from phantomjs
[08:20:18] <scott_gonzalez> Sure enough, including a polyfill for Function.prototype.bind() makes it work.
[08:27:42] <Krinkle> scott_gonzalez: yes, phantomjs is based on a abstraction of a fork of an ancient version of webkit, which only supports a small portion of ES5
[08:30:56] <scott_gonzalez> Looks like new versions of JSHint just don't work in old browsers.
[08:31:04] <scott_gonzalez> This is pretty surprising.
[08:40:15] <scott_gonzalez> Well, I've got a ghetto solution.
[08:40:22] <scott_gonzalez> And I filed a bug against JSHint: https://github.com/jshint/jshint/issues/1384
[08:40:23] <b-ot> scott_gonzalez: Issue #1384 by scottgonzalez (2m 14s ago): Fails in older browsers
[08:44:15] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/HEEThw
[08:44:15] <jquicommit> 13jquery-ui/06master 148eeb0e7 15Scott González: Tests: Skip JSHint in browsers that don't support Function.prototype.bind() to work around a bug in JSHint.
[08:49:25] <scott_gonzalez> Krinkle: Well, thanks for digging into this.
[08:54:08] <doesallmagic2> Project jQuery UI build #1232: NOW UNSTABLE in 10 min: http://jenkins.jquery.com/job/jQuery%20UI/1232/
[08:54:09] <doesallmagic2> Scott González: Tests: Skip JSHint in browsers that don't support Function.prototype.bind() to work around a bug in JSHint.
[08:55:59] <Krinkle> scott_gonzalez: yw
[09:57:32] <scott_gonzalez> HAHAHAHAHA SourceForge is trying to get us to move jQuery UI over because our Google Code project is still active :-P
[09:59:42] <scott_gonzalez> jzaefferer: I just removed everyone's commit access on that SVN repo.
[09:59:45] <scott_gonzalez> I left you and me as owners.
[09:59:50] <scott_gonzalez> But removed everyone else.
[10:00:03] <scott_gonzalez> (Klaus, John, Richard, Paul)
[10:39:40] <jquicommit> 01[13jquery-ui01] 15tjvantoll pushed 1 new commit to 06datepicker: 02http://git.io/z1w1gw
[10:39:40] <jquicommit> 13jquery-ui/06datepicker 14845814c 15TJ VanToll: Datepicker: Restore handling of Control+Home and Control+End on the <input>.
[10:44:13] <scott_gonzalez> I'm copying the old release downloads from Google Code to jqueryui.com.
[10:44:21] <scott_gonzalez> Should I normalize version numbrers in the file names?
[10:44:37] <scott_gonzalez> jquery-ui-1.8.zip -> jquery-ui-1.8.0.zip
[10:44:48] <scott_gonzalez> I'd rather just do less work and leave the original filenames.
[10:45:30] <scott_gonzalez> We did normalize version numbers for code.jquery.com.
[10:51:37] <tj_vantoll> Less work sounds good to me.
[11:11:29] <tj_vantoll> So this is a related question to the one I asked earlier. If the user has not interacted with an <input> that is a datepicker, and it has no value, should the value() and valueAsDate() methods return today's date, or null?
[11:12:43] <tj_vantoll> <input type="date"> by default has a value of "" and a valueAsDate of null.
[11:13:01] <tj_vantoll> And that's pretty consistent with the current datepicker.
[11:13:37] <tj_vantoll> So I guess I should probably do that.
[11:25:38] <scott_gonzalez> null
[11:30:19] <scott_gonzalez> Here comes a big commit...
[11:30:41] <scott_gonzalez> Writing objects: 100% (55/55), 34.56 MiB
[11:30:52] <tj_vantoll> All the old versions?
[11:31:03] <scott_gonzalez> That's just 1.8.x
[11:31:14] <scott_gonzalez> Which I suppose is most of the versions.
[11:31:15] <tj_vantoll> wow
[11:31:19] <tj_vantoll> yeah
[16:03:57] <jquicommit> [13jquery-ui] 15lhao0813 opened pull request #1140: Create jquery-ui (06master...06patch-1) 02http://git.io/N-rHEQ
[17:56:57] <jquicommit> [13jquery-ui] 15mikesherov closed pull request #1140: Create jquery-ui (06master...06patch-1) 02http://git.io/N-rHEQ
