[07:57:25] <scott_gonzalez> kborchers: http://bugs.jqueryui.com/ticket/7544 :-(
[07:58:09] <scott_gonzalez> looks like #4333 will stay open for another two years...
[07:58:12] <scott_gonzalez> that bug sucks so much
[07:58:21] <kborchers> damn it!
[07:59:00] <scott_gonzalez> this may be the most commented-on ticket for UI
[07:59:51] <scott_gonzalez> I've tried fixing that so many times
[08:01:26] <kborchers> scott_gonzalez: i'll try to take a look again but that one does suck!
[08:01:53] <scott_gonzalez> heh, good luck :-P
[10:32:34] <gjohnson> Not sure if this is the best place to chat about the grid, but I am starting to mess with it, but am a bit confused on there being grids/datasources/etc in both grid-datamodel and grid-spf.
[10:33:04] <gjohnson> If one was to work on ideas for it/extending the base grid widget, is there one of the two I should use?
[11:16:55] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: https://github.com/jquery/jquery-ui/commit/350e4ab5b854d2f6aca22d5202c03dcbf59ff4aa
[11:16:55] <jquicommit> [jquery-ui/master] Revert "Mouse: Changed mouseHandled check to a local var rather than using originalEvent. Fixed #4333 - Nested draggables problem in IE" - Scott González
[11:18:18] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: https://github.com/jquery/jquery-ui/commit/bd48ddfa94ff673cc5dfef749fe0565f1bc02d0f
[11:18:18] <jquicommit> [jquery-ui/1-8-stable] Revert "Mouse: Changed mouseHandled check to a local var rather than using originalEvent. Fixed #4333 - Nested draggables problem in IE" - Scott González
[11:59:29] <scott_gonzalez> http://bugs.jqueryui.com/ticket/6198
[12:00:10] <scott_gonzalez> with datepicker, when you click on the month dropdown, the focus is set back to the text field (if the datepicker is attached to an input)
[12:00:30] <scott_gonzalez> any objections to removing that to fix that bug?
[12:17:49] <scott_gonzalez> gnarf, kborchers, adoven, ajpiano, danheberden, anyone?
[12:19:18] <danheberden> i don't have any immediate objections
[12:19:18] <gnarf> whats the issue?
[12:19:20] <ajpiano> none if it works :p
[12:19:33] <kborchers> not from me, not sure why the focus would be set back to the input. what purpose did that serve initially?
[12:19:59] <gnarf> oh right
[12:20:01] <danheberden> are there any accessibility issues with that approach?
[12:20:06] <scott_gonzalez> I don't think so
[12:20:32] <scott_gonzalez> I mean, if you're using the mouse, then why do you care where the focus is?
[12:21:07] <scott_gonzalez> kborchers: like most things in datepicker, I'm not sure why that was done
[12:21:49] <gnarf> heh
[12:21:59] <kborchers> oh quirky little datepicker ... isn't it being rewritten? is anyone working on that?
[12:22:20] <gnarf> hey random questio
[12:22:26] <kborchers> not volunteering by the way ;)
[12:22:27] <gnarf> I noticed that we aren't using event.which in UI
[12:22:30] <scott_gonzalez> yeah, it's slowly being worked on
[12:22:58] <scott_gonzalez> gnarf: heh, yeah, Jörn and I have talked about that before
[12:22:58] <gnarf> wasn't there a reason to use e.which instead of e.keyCode ?
[12:23:05] <scott_gonzalez> neither of us have ever used it, ever
[12:23:17] <scott_gonzalez> probably
[12:23:38] <gnarf> well the reason i noticed is that i used e.which when i was doing mask, then simulate wasn't also setting which
[12:23:51] <gnarf> I guess - is there a reason not to keep using keyCode
[12:24:50] <gnarf> also, have you ever looked at a testsuite from spec.js ?
[12:25:06] <gnarf> i really dig the grammar, but it seems like it would be a pain to write :)
[12:25:51] <gnarf> https://github.com/digitalBush/jquery.maskedinput/blob/master/spec/Delete.spec.js
[12:26:53] <scott_gonzalez> not a big fan of BDD
[12:29:59] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to master: https://github.com/jquery/jquery-ui/commit/70687f7955cb2471ad6df3a7806031245e5979cd
[12:29:59] <jquicommit> [jquery-ui/master] Datepicker: Removed click handling for month and year dropdowns. Fixes #6198 - Datepicker Month and Year dropdowns in IE have to click twice. - Scott González
[12:30:26] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: https://github.com/jquery/jquery-ui/commit/1d4795683e21a49115f1b0458349c63c5f54ac33
[12:30:26] <jquicommit> [jquery-ui/1-8-stable] Datepicker: Removed click handling for month and year dropdowns. Fixes #6198 - Datepicker Month and Year dropdowns in IE have to click twice. - Scott González
[12:31:20] <gnarf> from a dude who's porting that testsuite's perspective
[12:31:28] <gnarf> that test makes 100% more sense
[12:38:28] <gnarf> hey scott
[12:38:46] <scott_gonzalez> hey gnarf
[12:39:08] <gnarf> can you take a look at this guys mashKeys plugin?
[12:39:21] <gnarf> i think it would possibly be better for testing key events
[12:39:26] <gnarf> it generates down/up/press
[12:39:37] <gnarf> and has a decent grammar / usage
[12:40:07] <gnarf> https://github.com/digitalBush/jquery.maskedinput/blob/master/spec/lib/jquery.keymasher.js
[12:40:18] <gnarf> forgive the obvious non-jQuery coding standard :)
[12:40:33] <gnarf> but i think this might be better to use than simulate for testing key events
[12:41:03] <gnarf> or taking some of the features and make a input.simulate("type", "1234", keyCode.ESCAPE )
[12:43:23] <scott_gonzalez> well, simulate probably needs a lot of work
[12:43:49] <scott_gonzalez> I'd actually really like a wrapper around the DOH robot
[12:44:08] <scott_gonzalez> that'd be way more useful
[12:45:01] <scott_gonzalez> I'd prefer all of our tests go through as close to real behavior as possible
[12:45:13] <gnarf> agreed
[12:45:26] <scott_gonzalez> so places where we do things like elem.val( "foo" ), elem.simulate( "type", "foo" ) would be much better
[12:45:28] <gnarf> there is a ton of testing keyboard events in mask
[13:16:26] <jzaefferer> gnarf: did you look at Pavlov?
[13:16:32] <jzaefferer> adds a BDD wrapper around QUnit
[13:17:27] <jzaefferer> also, you're welcome to refactor your tests to extract some common helper, then once its a bit more solid, bring that up for discussion as a QUnit addon
[13:18:24] <jzaefferer> kborchers, scott_gonzalez: I'm waiting for Hans' next update for the datepicker PR. That'll give us more complete ARIA and keyboard handling in the prototype, along with better support for the popup-datepicker
[13:19:22] <gnarf> so, there is some behavior here in this plugin that I'm not sure makes sense
[13:19:46] <gnarf> when bluring the input, if the input isn't complete/valid it sets the value to ""
[13:19:59] <gnarf> i would expect at least the mask
[13:20:12] <gnarf> if not leaving the "half filled" state
[13:21:16] <kborchers> jzaefferer: cool, i was just curious if it was being worked on. is that what's keeping him from the menu focus stuff?
[13:21:28] <gnarf> anyone got an opinion there?
[13:21:35] <jzaefferer> gnarf: yeah, that was always weird
[13:21:45] <jzaefferer> ping Josh to figure out why that happens?
[13:22:05] <gnarf> yeah
[13:22:12] <jzaefferer> kborchers: yeah, I briefly discussed the menu stuff with him, not quite there yet
[13:22:29] <gnarf> before i do, what do you think would be the expected behavior of bluring an "invalid" masked input
[13:22:35] <kborchers> ok
[13:22:49] <jzaefferer> though one solution he suggested is to check if the menu got focus, if so, move it to each anchor
[13:23:35] <jzaefferer> which has other drawbacks, e.g. refreshing the menu with new items will likely not be announced
[13:23:58] <jzaefferer> " always thought that the link's href is there as fallback content in case the widget can't be created or JS is not supported
[13:23:59] <jzaefferer> But when the widget is created, I didn't think it would still let those links just fire their click events like regular links, instead the widget would have a scripted handler that does whatever the developer wants it to, e.g. load the content from the href target using ajax, open a dialog, etc
[13:23:59] <jzaefferer> in those cases you wouldn't want the href itself to fire as well"
[13:24:32] <jzaefferer> so basically if you use menu, use the select event and implement whatever you actually need
[13:24:45] <gnarf> that gives you a problem with ctrl+clicking links tho
[13:24:49] <gnarf> for open in new window
[13:25:07] <kborchers> which would be fine except for navigation menus that they want the links to open in new windows
[13:25:27] <jzaefferer> gnarf: yeah, but that's another issue
[13:25:37] <kborchers> window.open make popup blocker angry
[13:26:39] <jzaefferer> kborchers: can we ignore that issue? maybe should ask scott_gonzalez that, as he's the one going to have to answer "no we don't support that, go away"
[13:26:48] <gnarf> any opinion on that blur behavior? :)
[13:27:11] <kborchers> if we can ignore that, i already have a solution that works using select
[13:27:50] <kborchers> http://jsfiddle.net/kborchers/4MuUV/
[13:28:24] <kborchers> obviously you can't "see" it work but it is just changing the querystring in that pane of jsfiddle
[13:31:04] <kborchers> and clicking wasn't ever the issue with the navigation menu, it was keyboard nav. clicking follows the link, keyboard enter had to be handled different because the focus was not on the anchor
[13:34:23] <jzaefferer> gnarf: ping Josh to figure out why that happens?
[13:35:05] <jzaefferer> kborchers: how do you run a jsfiddle standalone?
[13:35:32] <jzaefferer> also you could log location.search on load
[13:35:46] <kborchers> jzaefferer: you mean like jsbin does?
[13:35:52] <jzaefferer> yeah
[13:36:01] <jzaefferer> if it supports it, its hidden very well
[13:36:02] <kborchers> can't as far as i know
[13:36:26] <jzaefferer> bleh
[13:39:27] <scott_gonzalez> jzaefferer, kborchers take /show on to the URL
[13:39:38] <scott_gonzalez> *tack
[13:39:51] <scott_gonzalez> e.g., http://jsfiddle.net/kborchers/4MuUV/show/
[13:40:02] <kborchers> sneeky
[13:40:08] <kborchers> never knew that
[13:40:24] <scott_gonzalez> yeah, I only know about it because someone had sent me a link like that before
[13:40:27] <scott_gonzalez> no idea how they found out about it
[13:41:53] <jzaefferer> thanks Scott
[13:42:12] <jzaefferer> I've probably used that before, but with no way to (re)discover it in the UI, it basically doesn't exist :/
[13:42:33] <jzaefferer> is there someone responsible for jsfiddle that I can pester with that?
[13:43:28] <jzaefferer> aparently one of two guys responsible: http://twitter.com/#!/oskar
[13:45:01] <jzaefferer> let's see… http://twitter.com/#!/bassistance/status/98132106537992192
[13:53:39] <scott_gonzalez> Piotr Zalewa
[13:54:10] <scott_gonzalez> this might be helpful: https://github.com/zalun/jsfiddle-docs-alpha
[15:58:19] <gnarf> so, Josh's answer was "I didn't want form submissions to have a bunch of literals and nothing else."
[15:58:27] <gnarf> which makes some sense
[15:59:59] <gnarf> should I move forward with that behavior? make it an option?
[16:00:06] <gnarf> alwaysShowMask: false
[16:00:14] <gnarf> showEmptyMask: false
[16:02:28] <gnarf> I guess I'm just seeing like 2 distinct behaviors that might be useful to have as options
[16:03:27] <gnarf> 1) the "empty" state, should it be "empty" or have the empty mask
[16:03:36] <gnarf> 2) in an "invalid" state, should you clear the input
[16:10:56] <gnarf> added those questions to the open discussions on http://wiki.jqueryui.com/w/page/12137996/Mask and added a comment in response to jzaefferer's question about updating values
[16:13:43] <gnarf> ^^^ jzaefferer scott_gonzalez ajpiano danheberden any opinion on those behaviors? :)
[16:14:51] <gnarf> also, not sure if i want .mask("raw") or .mask("rawValue") for a method to get the value without the mask literals
[16:21:38] <ajpiano> they both sort of strike me as too much mindreading options, but i can't imagine that a callback based approach to allowing people to implement those behaviours would be particularly elegant
[16:22:17] <jquicommit> [jquery-ui] gnarf37 pushed 1 new commit to mask: https://github.com/jquery/jquery-ui/commit/719aae5bac73819a85b7f574e790ce543b3ce5f4
[16:22:17] <jquicommit> [jquery-ui/mask] Mask: Adding more unit tests copied from the specs used for maskedInput - Corey Frang
[16:22:32] <gnarf> well the "empty state"
[16:22:36] <gnarf> thats a lot harder
[16:22:40] <gnarf> the blur could be easier
[16:23:52] <ajpiano> i thought you were proposing two separate options for the same thing there for a sec
[16:24:20] <ajpiano> i feel like the empty state can be managed just with key events, theoretically
[16:24:24] <ajpiano> checking .val().length
[16:24:40] <gnarf> not really
[16:24:50] <gnarf> the "val" will be the mask
[16:24:59] <gnarf> "(___)___-____" for instance
[16:25:19] <gnarf> .mask( "raw" ) would be ""
[16:25:39] <gnarf> maybe .mask( "rawValue" )
[16:25:49] <gnarf> or a better method name if you have one
[16:26:04] <ajpiano> does .mask("value") get you anything?
[16:26:14] <gnarf> um
[16:26:15] <gnarf> no
[16:26:23] <gnarf> that makes most sense so far
[16:26:31] <ajpiano> part of me is inclined to say that "value" makes the... yeah most sense
[16:26:46] <ajpiano> cause it's implicit that you're asking for the value without what the mask literals are
[16:26:50] <ajpiano> if you're asking the mask plugin for its value
[16:26:53] <gnarf> i think im gonna move forward using "value"
[16:26:59] <gnarf> yeah
[16:27:02] <gnarf> agreed
[16:27:02] <ajpiano> and then if you want the full on value, use .val()
[16:27:58] <gnarf> its still gonna be more code to attach your own focus/blur for clearing the input in an "empty" state
[16:28:06] <gnarf> than it is to add the option i think
[16:28:26] <gnarf> the other question was really about the "invalidation"
[16:29:00] <gnarf> so like if the mask is "(___)___-____" and you type "(555)555-555_" and tab out, since it isn't finished - in this guys code, that invalidates the input and clears it
[16:31:16] <gnarf> i can see why he does that
[16:31:30] <gnarf> i'm just not sure I'd want my mask doing that
[16:41:53] <jquicommit> [jquery-ui] gnarf37 pushed 1 new commit to mask: https://github.com/jquery/jquery-ui/commit/9d7ea7973b5bb8d3b008bbce70c669c00439095f
[16:41:53] <jquicommit> [jquery-ui/mask] Mask: adding a value method to get and set raw value without mask literals / placeholders - Corey Frang
[16:48:09] <gnarf> hrm
[16:48:27] <gnarf> what about if i made it have either the "ui-mask-valid" or "ui-mask-invalid"
[16:48:30] <gnarf> class
[17:01:27] <jquicommit> [jquery-ui] gnarf37 pushed 1 new commit to mask: https://github.com/jquery/jquery-ui/commit/af2edfe97d22f8fbb59d800b574e8f4c55ae7505
[17:01:27] <jquicommit> [jquery-ui/mask] Mask: Adding a valid method which can tell if a mask has been completed - Corey Frang
[17:03:19] <jquicommit> [jquery-ui] scottgonzalez pushed 1 new commit to 1-8-stable: https://github.com/jquery/jquery-ui/commit/baa2e9663c5c0e5593e4950be91a31a63ee27923
[17:03:19] <jquicommit> [jquery-ui/1-8-stable] Upgrade jQuery to 1.6.2. - Scott González
[17:08:06] <jquicommit> [jquery-ui] scottgonzalez pushed 2 new commits to 1-8-stable: https://github.com/jquery/jquery-ui/compare/baa2e96...694b460
[17:08:06] <jquicommit> [jquery-ui/1-8-stable] Tagging the 1.8.15 release. - Scott González
[17:08:06] <jquicommit> [jquery-ui/1-8-stable] Updating the 1-8-stable version to 1.8.16pre - Scott González
[17:21:40] <scott_gonzalez> hmm....
[17:21:50] <scott_gonzalez> there's a 50% increase in size for the 1.8.15 zip
[17:22:04] <scott_gonzalez> http://code.google.com/p/jquery-ui/downloads/list
[17:22:24] <scott_gonzalez> that seems wrong
[17:22:44] <scott_gonzalez> oh....it's the multiple jQuery versions
