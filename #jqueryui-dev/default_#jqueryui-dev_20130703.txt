[03:12:44] <agcolom> uGoMobi: Hi Jasper, are you around to go through the method signatures?
[05:34:46] <fnagel> UI Dev meeting later?
[05:35:32] <uGoMobi> agcolom: hi Anne, I am here now
[05:36:30] <agcolom> Hi Jasper :-)
[05:36:51] <uGoMobi> fnagel: yeah, we have UI/Mobile meeting at 12:00 ET
[05:37:14] <uGoMobi> hey agcolom 
[05:37:16] <agcolom> I'm about to go to pick up Alex (he had an induction day at the school he will go to next year...) I have to go in a minute,...
[05:37:22] <uGoMobi> collecting user names? ;)
[05:37:36] <uGoMobi> agcolom: ok I understand
[05:37:42] <fnagel> uGoMobi: For real or just according to the calendar?
[05:37:52] <agcolom> yes, had nightmares with irccloud, now on limechat but connected twice!
[05:38:07] <uGoMobi> fnagel: for real if IRC allows us 
[05:38:24] <fnagel> ok, thanks for the info!
[05:38:47] <uGoMobi> agcolom: is the method documentation on the repo already?
[05:39:06] <agcolom> uGoMobi: yes it is. 
[05:39:16] <uGoMobi> ok great
[05:39:59] <agcolom> you can compare with the ones ui have or core...
[05:40:39] <agcolom> we need to go through events as well. Some were added during the summit in October, and some look strange... 
[05:41:24] <agcolom> Some also are empty
[05:43:11] <uGoMobi> agcolom: I have to check all the entries that start with jquery.mobile https://github.com/jquery/api.jquerymobile.com/tree/master/entries ?
[05:44:10] <uGoMobi> oh wait there are more
[05:44:27] <uGoMobi> jqmData, jqmEnhancable, etc.
[05:58:59] <jqmobilecommit> [13jquery-mobile] 15abhiedumerge opened issue #6129: ui-reponsive toggle column table cells not hiding on smaller screen widths when headers and rows are dynamically injected  02http://git.io/TlPaLw
[06:01:49] <jqmobilecommit> 01[13jquery-mobile01] 15uGoMobi pushed 1 new commit to 06textinput: 02http://git.io/fNy-rA
[06:01:49] <jqmobilecommit> 13jquery-mobile/06textinput 140e69145 15Jasper de Groot: Textinput: Use the ui-input-has-clear class for the search input as well....
[06:18:22] <arschmitz> morning _|Nix|__ uGoMobi agcolom
[06:19:00] <agcolom> morning arschmitz
[06:19:23] <agcolom> Ok, I'm now off for the day... sorry for missing the meeting... 
[06:20:08] <arschmitz> agcolom: no worries i think its mostly going to be about writing widgets that will work for both ui and mobile
[06:20:32] <arschmitz> as far as mobile related stuff
[06:25:50] <jquicommit> 01[13download.jqueryui.com01] 15rxaviers 04force-pushed 06support-1.11 from 14d1b96be to 1419b523d: 02http://git.io/y3ORjA
[06:25:50] <jquicommit> 13download.jqueryui.com/06support-1.11 14f359fd6 15Rafael Xavier de Souza: Use docs manifest file to expand a category link into its respective posts
[06:25:50] <jquicommit> 13download.jqueryui.com/06support-1.11 1419b523d 15Rafael Xavier de Souza: Include docs manifest on preparation task
[06:55:30] <jquicommit> 01[13download.jqueryui.com01] 15rxaviers 04force-pushed 06support-1.11 from 1419b523d to 1440e7456: 02http://git.io/y3ORjA
[06:55:30] <jquicommit> 13download.jqueryui.com/06support-1.11 1440e7456 15Rafael Xavier de Souza: Include docs manifest on preparation task
[07:02:46] <jquicommit> 01[13jquery-ui01] 15jzaefferer 04force-pushed 06asciilint from 145510531 to 147da8283: 02http://git.io/A3khpA
[07:02:46] <jquicommit> 13jquery-ui/06asciilint 147da8283 15JoÌˆrn Zaefferer: Build: Implement an asciilint task to verify content of ui files (ignore i18n). Fixes #9037 - Build: Verify characters in output
[07:03:11] <jquicommit> 01[13jquery-ui01] 15jzaefferer merged 06asciilint into 06master: 02http://git.io/99J34Q
[07:47:34] <_|Nix|_> DaveMethvin: Ping!
[07:47:58] <DaveMethvin> sup _|Nix|_ ?
[07:48:12] <_|Nix|_> DaveMethvin: If I wish to select "#" + someId, where someId can be specified by the user, then I must be able to handle the case where someId has weird characters.
[07:48:28] <_|Nix|_> DaveMethvin: So, I must escape those as I perform $( "#" + someId ), right?
[07:48:50] <DaveMethvin> if it's always an id, it would be easer to use $(document.getElementById(someId))
[07:49:01] <DaveMethvin> since you don't have to escape it then
[07:49:10] <_|Nix|_> DaveMethvin: Excellent point! Thanks!
[07:49:49] <_|Nix|_> DaveMethvin: Is that faster than performing a jQuery selection that has a good chance of being limited to only a part of the DOM?
[07:50:15] <DaveMethvin> gEBId is pretty fast
[07:50:53] <_|Nix|_> DaveMethvin: OK. I'll go that route. Thanks!
[07:53:20] <_|Nix|_> arschmitz: Ping!
[07:53:22] <arschmitz> _|Nix|_: id's are the fastest selector so i dont think time should be an issue
[07:53:29] <arschmitz> _|Nix|_: timing im telling you lol
[07:53:57] <_|Nix|_> arschmitz: How do we handle the case where o.enhanced is true, and I can't find some of the elements I need for the widget?
[07:54:08] <_|Nix|_> arschmitz: Do we just fail, or do I create whatever I can't find?
[07:54:18] <arschmitz> i would say fail
[07:54:22] <arschmitz> they broke their promise
[07:54:47] <arschmitz> too many weird cases for half enhanced stuff otherwise
[07:55:31] <_|Nix|_> arschmitz: That's true, although coding-wise it would be easy to create, because we're already creating everything anyway.
[07:55:56] <_|Nix|_> arschmitz: So, if some stuff is already there, we can simply assign that to the variable that would receive the newly created stuff anyway.
[07:56:04] <_|Nix|_> arschmitz: OTOH, NM.
[07:56:18] <_|Nix|_> arschmitz: ... because we'd also have to decide what to insert and what is already inserted.
[07:56:29] <arschmitz> exactly
[07:56:31] <_|Nix|_> arschmitz: ... and that can get overly complicated for no tangible benefit.
[07:56:48] <arschmitz> that was my exact thought
[07:56:49] <_|Nix|_> arschmitz: OK. I'm glad we had this little chat :)
[07:56:52] <arschmitz> lol
[07:57:04] <arschmitz> we should throw an error probably though
[07:57:48] <arschmitz> "Invalid markup for blank widget: Exiting"
[07:57:49] <_|Nix|_> arschmitz: Doesn't return false during _create() cause the widget not to be created?
[07:57:51] <arschmitz> or something
[07:58:09] <arschmitz> _|Nix|_: um id have to look but probably
[07:58:42] <_|Nix|_> Man, even so it's complicated ... for each element, try to find it, and if not found, bail out
[07:59:00] <arschmitz> _|Nix|_: yeah some widgets will be complicated
[07:59:14] <arschmitz> others simple
[07:59:32] <_|Nix|_> arschmitz: Well, popup has three elements in addition to this.element ...
[07:59:37] <arschmitz> _|Nix|_: other option is to just cont worry about it at all
[07:59:48] <arschmitz> and let chaos reign lol
[08:00:54] <_|Nix|_> arschmitz: Well, I've taken the precaution of storing all necessary popup elements in this._ui ... so, if I fail to assign any member of this._ui, I /know/ the popup's not gonna work. So, I have a pretty clear test.
[08:01:27] <arschmitz> ok
[08:02:09] <_|Nix|_> arschmitz: I suppose I can always do the blind thing and just ui.container = $( document.getElementById( containerId ) ); ui.screen = $( document.getElementById( myId + "-screen" );
[08:02:33] <arschmitz> _|Nix|_: yeah and if its not there we make no promise what will happen
[08:02:36] <_|Nix|_> arschmitz: ... and if that ends up selecting for #undefined and #undefined-screen, then so be it.
[08:02:51] <arschmitz> might not be a big deal might cause chaos 
[08:03:02] <arschmitz> might cause an error down the line might now lol
[08:03:13] <arschmitz> thats what happens when you supply invalid markup
[08:03:37] <_|Nix|_> arschmitz: Well, I could be nice and if ( ui.container.length === 0 || ui.screen.length === 0 ) throw( "You broke your promise!" );
[08:03:48] <arschmitz> when you say enhanced=true we are trusting that you have "properly" enhanced the markup 
[08:04:06] <_|Nix|_> arschmitz: Right, but we must also document how we attempt to locate said pre-enhanced markup.
[08:04:12] <arschmitz> _|Nix|_: yeah i mean either way but with some widgets it will still be a little bit of chaos
[08:04:28] <arschmitz> like for ones where its just a wrapper
[08:04:41] <arschmitz> its just going to be this.element.parent()
[08:04:54] <_|Nix|_> arschmitz: Yeah, I guess that's nice.
[08:04:55] <arschmitz> and if parent is not what it should be whoe knows what could happen lol
[08:05:23] <_|Nix|_> arschmitz: Right, in that case you can't even check if it's proper.
[08:05:36] <arschmitz> all of a sudden your whole page is a button lol
[08:05:38] <_|Nix|_> arschmitz: It's got a parent, sure, but other than that, it could be anything.
[08:05:44] <_|Nix|_> Yeah ...
[08:06:39] <arschmitz> but anyway we should chose to error or not then just make everything follow that
[08:06:49] <_|Nix|_> arschmitz: I say no error.
[08:06:54] <arschmitz> DONE!
[08:07:05] <arschmitz> wow that was easy lol
[08:07:41] <arschmitz> _|Nix|_: something im not sure if you noticed but i saw it in some ui stuff iv been doing is making a method to return an element
[08:07:52] <arschmitz> then it can be changed with an extension esily
[08:08:48] <_|Nix|_> arschmitz: Well, ... now I'm having second thoughts. OTOH we can't confidently error on all widgets because we can't confidently error on the ones where this.element.parent() is assumed to be the wrapper, but OTOH we are wasting the opportunity to error on those widget (like popup) where we /can/ confidently error.
[08:09:33] <_|Nix|_> arschmitz: Of course, is it better to be informative but inconsistent, or is it better to be silent but consistent ...
[08:09:36] <_|Nix|_> ?
[08:09:49] <arschmitz> _|Nix|_: like this https://github.com/jquery/jquery-mobile/blob/textinput/js/widgets/forms/textinput.js#L78
[08:09:54] <arschmitz> _|Nix|_: yeah its hard
[08:10:07] <arschmitz> im honestly not sure which is better
[08:10:39] <_|Nix|_> arschmitz: Well, I guess we can whet it in the wild and if people want errors, we'll know about it soon enough.
[08:10:54] <arschmitz> _|Nix|_: true go the no work approach to start
[08:10:55] <_|Nix|_> arschmitz: That's cool.
[08:11:06] <arschmitz> if the masses complain well do a little work and add errors
[08:11:15] <_|Nix|_> arschmitz: In our business, laziness is a virtue :)
[08:11:40] <_|Nix|_> arschmitz: We few! We lazy few!
[08:11:42] <arschmitz> _|Nix|_: not to mention sometimes something missing wont completely break a widget
[08:12:03] <arschmitz> so bailing completely could be annoying
[08:12:19] <_|Nix|_> arschmitz: I'm not sure I'd want to make those kinds of promises.
[08:12:31] <arschmitz> _|Nix|_: its not a promise
[08:12:46] <arschmitz> its just letting this go
[08:12:57] <arschmitz> may or may not work if your markup is invalid
[08:13:04] <_|Nix|_> arschmitz: Well, yes it is: "But it used to work with a partially pre-enhanced widget in 1.x! How come it doesn't work in 1.(x+1)?
[08:13:07] <_|Nix|_> "
[08:13:27] <scott_gonzalez> arschmitz _|Nix|_: We have at least one case of "already enhanced" in UI.
[08:13:30] <scott_gonzalez> We don't expose an option for it.
[08:13:33] <_|Nix|_> Well, I guess we can then say "It happened to work."
[08:13:37] <scott_gonzalez> You just write the markup and we query for it.
[08:13:43] <scott_gonzalez> If we don't find it, we generate it ourselves.
[08:14:03] <_|Nix|_> scott_gonzalez: That's bad for perf though.
[08:14:25] <_|Nix|_> scott_gonzalez: Well, OK ... maybe not perf.
[08:14:33] <_|Nix|_> scott_gonzalez: Well, yes perf.
[08:14:56] <_|Nix|_> scott_gonzalez: I'd hate to walk the DOM in vain.
[08:15:08] <_|Nix|_> That sounds poetic ^
[08:15:22] <scott_gonzalez> It depends on how compelx your selector is.
[08:15:26] <_|Nix|_> ... and I still haven't found what I'm looking for :)
[08:15:29] <scott_gonzalez> Generally it should be as simple as a class selector.
[08:16:46] <_|Nix|_> scott_gonzalez: I'd have to see the perf numbers before I'd drop the option.
[08:17:52] <_|Nix|_> scott_gonzalez: Right now we have no code to deal with the already-enhanced case. So, once we write that code, I'm sure it won't be difficult to adapt it to the search-and-fallback-to-creation method.
[08:18:04] <arschmitz> _|Nix|_: in general it would be as simple as if( this.element.parent().hasClass("ui-btn") ) or similar
[08:18:31] <_|Nix|_> arschmitz: Yeah, I was just thinking ... if we have a telltale class on the parent, then we have a positive ID.
[08:18:54] <scott_gonzalez> Oh, so you're talking about fully pre-rendered.
[08:18:57] <_|Nix|_> arschmitz: OTOH, is it expensive to waste the check if it's almost guaranteed to be there?
[08:19:01] <arschmitz> scott_gonzalez: yes
[08:19:23] <scott_gonzalez> http://temp.nemikor.com/worlds-collide/
[08:19:27] <arschmitz> scott_gonzalez: the idea is to allow people to basicly send a fully rendered enhanced page and just attach events
[08:19:52] <scott_gonzalez> They shouldn't even need to init in that case.
[08:19:54] <_|Nix|_> scott_gonzalez: Is it not safe to say that, in practice, so are you? I mean, of all the instances where widgets are used, what percentage is not either fully-pre-rendered, or not-prerendered-at-all?
[08:20:13] <scott_gonzalez> Never fully rendered. We don't support that.
[08:20:31] <scott_gonzalez> I'm talking about things like pre-rendered resize handlers for a .resizable().
[08:20:57] <arschmitz> scott_gonzalez: yea this is different
[08:21:21] <scott_gonzalez> arschmitz: Check out the worlds-collide example.
[08:22:44] <scott_gonzalez> I wrote that 2 years ago, but haven't fully investigated how it would work with our full widget system of inheritance, extensions, etc.
[08:23:02] <scott_gonzalez> But the idea is optional init.
[08:23:12] <scott_gonzalez> So you would pre-render and then you wouldn't even initialize.
[08:23:24] <arschmitz> scott_gonzalez: hmm interesting
[08:23:41] <scott_gonzalez> But if you want, you can not pre-render and still go through the initialization process.
[08:24:02] <scott_gonzalez> So dialog.html shows both situations.
[08:24:14] <scott_gonzalez> #dialog-noob uses initialization, #dialog-master doesn't.
[08:24:43] <scott_gonzalez> So you can run `$( "#dialog-master" ).dialog( "open" )` in your console.
[08:24:48] <scott_gonzalez> Even though it was never initialized.
[08:25:31] <arschmitz> our approach was much more simple basicly just skip all dom manip if the enhanced option is true
[08:25:46] <arschmitz> everything else continues as normal
[08:26:43] <_|Nix|_> arschmitz: This also means that if ( !o.enhanced ) { this._setOptions( this.options ); } right?
[08:26:58] <_|Nix|_> arschmitz: Like, we assume that the widget reflects its options if it's pre-rendered, right?
[08:27:20] <arschmitz> _|Nix|_: yeah had not thought about that being uneeded but yes we could skip that as well
[08:28:29] <_|Nix|_> arschmitz: I still don't like the fact that the ID of the wrapper is an option and so is the class. I think in that case, one can always .widgetname( "option", "id", "someNewId" ) and we must honour that.
[08:28:52] <arschmitz> _|Nix|_: yeah? thats simple
[08:28:54] <_|Nix|_> arschmitz: OK ... "don't like" is strong ...
[08:29:06] <scott_gonzalez> You have options for what ids to use?
[08:29:10] <_|Nix|_> arschmitz: It is simple, but it's code we have to write.
[08:29:25] <_|Nix|_> scott_gonzalez: Yeah, so you can control the wrapper that ends up around this.element.
[08:29:32] <arschmitz> scott_gonzalez: we talked about adding an option to specify the id of a wrapper
[08:29:39] <scott_gonzalez> Does the widget care about the id?
[08:29:40] <_|Nix|_> scott_gonzalez: We don't have it yet, but we're thinking about adding it.
[08:29:43] <arschmitz> thats auto generated
[08:29:54] <arschmitz> scott_gonzalez: not at all
[08:29:58] <scott_gonzalez> I don't see any reason why this should be added.
[08:30:09] <_|Nix|_> arschmitz: OTOH, if widget() returns the wrapper, then we shouldn't do anything on behave of the user. She can set class and ID and whatever herself.
[08:30:09] <scott_gonzalez> Classes, sure.
[08:30:21] <arschmitz> people wanted a way to set the id of the wrapper
[08:30:26] <_|Nix|_> s/behave/behalf/
[08:30:28] <scott_gonzalez> The class will be handled by the classes option though.
[08:30:41] <scott_gonzalez> .widget().attr( "id", "Why-do-users-care" )
[08:30:53] <arschmitz> scott_gonzalez: more about css
[08:30:59] <_|Nix|_> Yeah, I was just thinking.
[08:31:00] <arschmitz> if people want to use the id in their css
[08:31:04] <scott_gonzalez> IDs are terrible
[08:31:22] <arschmitz> scott_gonzalez: yes i agree should not use them in css but that is the reason
[08:31:26] <scott_gonzalez> Let them write real code if they want to style with id.
[08:31:44] <scott_gonzalez> See https://github.com/jquery/jquery-ui/pull/790 for the upcoming classes option.
[08:32:20] <arschmitz> scott_gonzalez: that does not work for us
[08:32:30] <arschmitz> scott_gonzalez: because options are set by data attributes
[08:33:20] <scott_gonzalez> Talk about perf issues :-P
[08:33:48] <arschmitz> scott_gonzalez: so the class option we are talking about is just for the outer wrapper of the widget
[08:34:00] <_|Nix|_> arschmitz: Please remind me again why we're going with data-id="blah" data-class="blah" when we can just as easily document that one could $.mobile.document.on( "<widgetname>create", function() { $( this ).widgetname( "widget" ).attr( "id", "blah" ); } ); ?
[08:34:05] <scott_gonzalez> Which we're moving away from in UI.
[08:34:33] <arschmitz> scott_gonzalez: moving away from wrappers?
[08:34:40] <scott_gonzalez> Moving away from wrapperClass options.
[08:35:38] <arschmitz> scott_gonzalez: your replacing with the classes option correct?
[08:36:22] <scott_gonzalez> yup
[08:36:24] <arschmitz> which is not really workable with data-attributes 
[08:36:53] <arschmitz> scott_gonzalez: the problem in mobile is that people dont set options with js so callbacks and objects dont make good options
[08:37:40] <arschmitz> now maybe this is something that needs to be rethought but thats how it is now
[08:38:16] <_|Nix|_> arschmitz: That's bad, because we have to write a lot more code to get the same job done as devs.
[08:38:35] <_|Nix|_> arschmitz: devs know the DOM they make. We do not.
[08:40:07] <arschmitz> _|Nix|_: yeah but thats just how mobile was designed right now
[08:40:32] <_|Nix|_> arschmitz: If that's costing us perf we should ditch it.
[08:40:57] <arschmitz> _|Nix|_: thing is its a MASSIVE change
[08:41:16] <arschmitz> we would have to completely rething autoinit
[08:41:16] <_|Nix|_> arschmitz: Think about it: You retrieve the ID from one DOM element's attributes and you set it on an other DOM element.
[08:41:23] <_|Nix|_> arschmitz: I know. 
[08:41:38] <_|Nix|_> arschmitz: I'm only talking about o.id and o.class.
[08:41:49] <arschmitz> well id is debateable for sure
[08:41:50] <_|Nix|_> arschmitz: ... because that involves two DOM manips: One read and one write.
[08:41:58] <arschmitz> because its encouraging bad css
[08:42:25] <arschmitz> but class there is not a better way to do it that i can think of though im very open to suggestions
[08:42:26] <_|Nix|_> arschmitz: Class too ... you're reading it from data-class and assigning it to class= on the wrapper.
[08:42:45] <_|Nix|_> arschmitz: .widget().addClass( ... )
[08:42:49] <arschmitz> thats js
[08:43:01] <arschmitz> that someone has to write just to be able to target css
[08:43:12] <arschmitz> and potentially a lot of it
[08:43:30] <arschmitz> with mobile right now for the most part writing js is options
[08:43:34] <arschmitz> optional
[08:43:36] <_|Nix|_> arschmitz: Yes, but if it performs better, and we've never offered this option before, then that's still an improvement.
[08:44:15] <_|Nix|_> arschmitz: New! Improved! Now you have access to the wrapper using the UI-standard widget() method!
[08:44:20] <arschmitz> _|Nix|_: im not completely sure it would perform better
[08:44:37] <_|Nix|_> arschmitz: Well, let's find out ...
[08:44:46] <arschmitz> we add the class to a detached dom element
[08:44:55] <arschmitz> before attaching it 
[08:45:25] <arschmitz> they would be adding it to an actual element in the dom
[08:45:39] <_|Nix|_> Hmmm ...
[08:45:51] <_|Nix|_> That's true.
[08:47:14] <arschmitz> _|Nix|_: also when they add a class thats most likely going to cause a reflow
[08:47:43] <arschmitz> when we do it its detached so no reflow only the one thats going to happen either way then the element is appended
[08:47:55] <_|Nix|_> arschmitz: That's true.
[08:48:15] <_|Nix|_> arschmitz: Wait!
[08:48:18] <_|Nix|_> arschmitz: _wrap()
[08:48:24] <_|Nix|_> arschmitz: Let them extend it.
[08:48:49] <arschmitz> that would add it to every instance
[08:48:53] <arschmitz> not a specific one
[08:49:25] <_|Nix|_> *grumble* *mumble*
[08:49:55] <arschmitz> not to mention having to extend a widget just to add a class does not seem very user firendly
[08:51:14] <uGoMobi> hey all
[08:51:17] <arschmitz> uGoMobi: hey
[08:51:18] <_|Nix|_> arschmitz: I'm starting to buy it ... again :) But not ID. It seems that class already does all that. You can target a single widget well enough with class alone.
[08:51:34] <arschmitz> _|Nix|_: yeah im all for not doing id
[08:51:39] <arschmitz> it promotes bad css
[08:51:44] <_|Nix|_> Yeah.
[08:52:27] <arschmitz> _|Nix|_: in a perfect world the ui classes option is great but it just does not play nice with autoinit
[08:52:37] <arschmitz> and data- attributes
[08:53:22] <arschmitz> _|Nix|_: this is going to be a problem in general between ui and mobile though
[08:53:40] <_|Nix|_> arschmitz: Yeah ... non-primitively-typed values are not an option for us.
[08:53:40] <arschmitz> autoinit is very much a limiting factor for some things
[08:54:09] <scott_gonzalez> You could always have something like data-classes_wrapper="foo"
[08:54:16] <scott_gonzalez> And make $.mobile.widget smarter
[08:54:25] <arschmitz> scott_gonzalez: true
[08:54:26] <scott_gonzalez> And by smarter I mean even less performant :-P
[08:54:46] <_|Nix|_> scott_gonzalez: Well, we could have JSON-valued attributes *cringe*
[08:54:50] <scott_gonzalez> I haven't done any tests, but I've always assumed the data attributes are terrible.
[08:55:01] <arschmitz> scott_gonzalez: they ARE
[08:55:10] <arschmitz> i added an option to ignore them for that very reason
[08:55:56] <scott_gonzalez> I feel like there shouldn't be any design decisions based on data attributes.
[08:56:01] <scott_gonzalez> At least not in the core of any widget.
[08:56:14] <scott_gonzalez> You can layer additional features on top.
[08:57:05] <_|Nix|_> arschmitz: You know, with FF making JS obligatory, we may end up in an era where JS is /there/. Period.
[08:57:57] <arschmitz> scott_gonzalez: this is one of the things we need to work out for shared widgets how to handle the constraints the mobile currently opperates under
[08:59:27] <arschmitz> scott_gonzalez: for better or worse the way widgets work right now in mobile is a very different world then how ui is designed to work
[09:58:40] <_|Nix|_> scott_gonzalez: ... yet that's exactly what we've been giving app devs by triggering native events. One code path for both.
[09:59:23] <_|Nix|_> ... grades.
[09:59:33] <scott_gonzalez> I think it's an illusion.
[09:59:46] <scott_gonzalez> Have you seen apps that use a single code path for both?
[10:00:22] <_|Nix|_> I haven't seen many apps at all :) I'm a n00b in this arena :)
[10:16:24] <jqmobilecommit> [13jquery-mobile] 15PizzaBrandon opened pull request #6130: Swipe Event: Add swipe start and stop details to event data. (06master...06master)  02http://git.io/G0_a6g
[10:19:43] <jzaefferer> rxaviers: do you know what's causing the duplicate categories?
[10:20:13] <rxaviers> nope, I didnt investigate yet. But, I think scott has a clue
[10:21:18] <scott_gonzalez> I already discussed the three possible solutions with kswedberg.
[10:21:22] <scott_gonzalez> I'll be landing a fix today.
[10:22:24] <jzaefferer> rxaviers: okay, then that should be out of the way as well, that's all that's needed for 1.11 support?
[10:22:46] <rxaviers> great! ;)
[10:22:49] <rxaviers> yepp, it is
[10:23:45] <rxaviers> well, of course, it's good to review it. But, it seems so to me.
[10:23:56] <rxaviers> jzaefferer, if you have some spare time, I can walk through it with you
[10:25:27] <jzaefferer> rxaviers: we could do that now
[10:27:34] <rxaviers> ok for me. The only two structural changes (for DB perspective) in 1.11 have been https://github.com/jquery/jquery-ui/pull/981 and https://github.com/jquery/jquery-ui/pull/982
[10:29:16] <rxaviers> 981 actually made easier for DB, previously we had to deal with the exceptional case to include puff and size effect demos when scale effect was selected.
[10:29:30] <rxaviers> now, each one has its own home.
[10:31:21] <rxaviers> (correction: the issue was not to add exceptional demos, but docs)
[10:34:18] <jzaefferer> rxaviers: okay, that's simple enough
[10:34:21] <rxaviers> 982 also made easier for DB, previously we had to include exceptional demos ("addClass", "animate", "hide", "removeClass", "show", "switchClass", "toggle", "toggleClass") when effect core was selected. Now, those demos are not spread in demos/ root folder anymore. But, it's all inside effects-core. So, no more adhoc code in here as well.
[10:36:23] <_|Nix|_> arschmitz: OK, I think I have class, enhanced, and widget() for popup. I just gotta test it.
[10:36:23] <rxaviers> The only remaining issue we had after those two PRs was that some of the docs from UI manifest file actually pointed to category pages, but DB needed to know what posts such category was pointing to.. We had talked about augmenting UI's manifest with those posts whenever we had a category url. But, then we got to this https://github.com/jquery/jquery-ui/pull/1015#issuecomment-20209758
[10:36:35] <arschmitz> _|Nix|_: awesome
[10:37:05] <rxaviers> and this is landed on api (on master, and on all 1-x branches as well). So, problem solved.
[10:37:28] <rxaviers> Right now, DB builds 1.11 with those changes.
[10:37:42] <rxaviers> Do we have any other change in UI structure from 1.10 to 1.11/
[10:37:46] <jzaefferer> so DB runs the grunt-manifest task for api docs?
[10:37:53] <_|Nix|_> arschmitz: Do we have any conventions for the _enhance() method? I've made it return the UI. That is, an object containing jQuery objects representing the various elements.
[10:38:02] <rxaviers> yepp
[10:38:26] <arschmitz> _|Nix|_: i dont have it return anything explicit
[10:38:26] <rxaviers> https://github.com/jquery/download.jqueryui.com/commit/40e7456ddf5fb97bac89e07d2a6a5582e39da2f7
[10:38:40] <arschmitz> its just a method called from _create
[10:38:50] <arschmitz> with no need of a return value
[10:39:03] <_|Nix|_> arschmitz: That way I can ui = o.enhanced ? { screen: $( document.getElementById( myId + "-screen" ) ), ... } : this._enhance();
[10:39:24] <_|Nix|_> arschmitz: Followed by $.extend( this, { ..., _ui: ui, ... } );
[10:39:45] <arschmitz> _|Nix|_: thats fine too
[10:39:57] <jzaefferer> rxaviers: alright, sounds good
[10:40:09] <jzaefferer> rxaviers: what's next on your plate?
[10:40:12] <arschmitz> i think whatever works might be different for different widgets and since its not an extension and is internal it does not need to be 100% the same everywhere
[10:40:33] <rxaviers> that's a great question. ;) I am open to suggestions
[10:40:34] <arschmitz> because enhance might be handling a variety of things
[10:40:45] <_|Nix|_> arschmitz: The only sucky thing is that I have to check o.enhanced once more later on when I decide whether or not to call _setOptions :(
[10:41:09] <_|Nix|_> arschmitz: I wish I could do it before $.extend, but I can't, because some option-setting relies on the presence of the per-instance variables.
[10:41:39] <arschmitz> _|Nix|_: yeah thankfully if statements have very little overhead
[10:41:53] <_|Nix|_> arschmitz: I know, it's not about perf. It's about readability.
[10:42:10] <_|Nix|_> arschmitz: I wanted to have a single branch where you go one way if it's enhanced and the other way otherwise.
[10:42:50] <arschmitz> _|Nix|_: other option would be to extend with null values call enhance then asign then options
[10:43:30] <_|Nix|_> arschmitz: Anyway, this could be solved if I could declare the per-instance variables in the prototype. Is that frowned upon? i.e., $.widget, "name", base, { abc: null, def: "", ..., options: {}, _create: function(), ... } );
[10:43:35] <_|Nix|_> scott_gonzalez: ^
[10:43:43] <jzaefferer> rxaviers: there's a bunch of open issues on DB. If you're interested in working on something else for a while, I probably have something for you as well
[10:44:12] <_|Nix|_> I mean $.widget( not $.widget,
[10:44:12] <scott_gonzalez> _|Nix|_: You can put instance vars in the prototype if they're not objects or arrays.
[10:44:25] <rxaviers> jzaefferer, I will keep supporting DB. I'd like to know if you have something else yeap ;)
[10:44:41] <_|Nix|_> scott_gonzalez: Well, their initial value would not be an object or an array. Most likely null or "".
[10:44:54] <scott_gonzalez> That's fine.
[10:45:11] <_|Nix|_> scott_gonzalez: Non-primitive values might be assigned after instantiation though.
[10:45:28] <scott_gonzalez> That's fine. Since after init, they'll actually be per-instance.
[10:45:36] <jzaefferer> rxaviers: we've got the datepicker redesign on our plate. tj_vantoll is working on the prototype, so we're making some progress there. The other big blocker is Globalize, which we want to port to use CLDR
[10:45:36] <_|Nix|_> Right.
[10:45:37] <_|Nix|_> OK.
[10:45:39] <arschmitz> scott_gonzalez: im heading to get some lunch if you get to decision making about amd time/date before im back im almost 100% flexible so just let me know when
[10:45:41] <scott_gonzalez> The problem is just that if you put an array or object into the prototype, it'll be shared.
[10:46:02] <scott_gonzalez> arschmitz: Let me know when you're back and I'll ping everyone.
[10:46:09] <arschmitz> scott_gonzalez: ok sounds good
[10:46:14] <jzaefferer> rxaviers: by now there's some tooling available to make the CLDR port not that crazy anymore, but the initial step is still to be climbed. Would you be interested in working on that?
[10:46:32] <rxaviers> jzaefferer, what is Globalize blocking?
[10:46:58] <jzaefferer> rxaviers: some intro here: https://github.com/jquery/globalize/issues/128 - there's some old stuff, maybe start with this comment: https://github.com/jquery/globalize/issues/128#issuecomment-17942396
[10:47:25] <jzaefferer> rxaviers: new datepicker has to use Globalize, and maintaining globalize should get much more sane with CLDR as the database
[10:47:50] <scott_gonzalez> It's also used in spinner.
[10:48:12] <rxaviers> jzaefferer, ok I will read. ;) thanks
[10:48:43] <jzaefferer> yeah, though between spinner and datepicker's usage of globalize there's very little overlap
[10:53:37] <rxaviers> jzaefferer, I've sent an email to sindre about bower registry
[10:53:54] <rxaviers> i dont personally know him, let's see if he answers
[10:54:42] <rxaviers> great, scott fixed the api thing ;)
[11:00:11] <rxaviers> scott_gonzalez, I still get duplicate things.. :-/
[11:00:21] <rxaviers> checking what's wrong...
[11:01:36] <scott_gonzalez> You're using api.jqueryui.com master?
[11:14:28] <_|Nix|_> Ummm ... view.jquerymobile.com is once more woefully slow ... :/
[11:15:31] <_|Nix|_> uGoMobi: On http://view.jquerymobile.com/master/demos/widgets/popup/ the tooltip popup isn't inheriting the theme from the page, even though it's a child of the page.
[11:16:15] <_|Nix|_> uGoMobi: Same can be said of the menu popup.
[11:17:22] <_|Nix|_> uGoMobi: ... and of the position-to popups.
[11:17:40] <_|Nix|_> uGoMobi: ... and of the transition example popup.
[11:18:10] <_|Nix|_> uGoMobi: I guess some of those cases may be because we don't have an "e" swatch.
[11:25:46] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06master: 02http://git.io/JW3lPg
[11:25:46] <jqmobilecommit> 13jquery-mobile/06master 148b11787 15Gabriel Schulhof: Page: Whitespace.
[11:31:35] <_|Nix|_> arschmitz: Yaaay! Tests remain verdant after the addition of the two options.
[11:31:53] <_|Nix|_> arschmitz: I'll add tests for an already-enhanced popup as well.
[11:32:24] <_|Nix|_> arschmitz: Oooh! And we need to update the docs as well!
[11:32:24] <_|Nix|_> Wow!
[11:32:32] <_|Nix|_> Not insignificant.
[11:34:13] <_|Nix|_> arschmitz: Didn't break no popup arrow, neither!
[11:37:34] <rxaviers> scott_gonzalez, for some reason when I pulled, I didnt get you latest commit. By the way, it's working fine
[11:37:55] <rxaviers> tested DB, `npm test` is passing as well. great
[11:39:09] <jquicommit> 01[13jquery-ui01] 15scottgonzalez pushed 1 new commit to 06master: 02http://git.io/xBXrKA
[11:39:09] <jquicommit> 13jquery-ui/06master 144148acf 15Scott GonzÃ¡lez: Tabs: Prevent default action of clicks even when disabled. Fixes #9413 - Tabs: Disabled tabs are still clickable.
[11:43:20] <travis-ci> [travis-ci] jquery/jquery-mobile#431 (master - 8b11787 : Gabriel Schulhof): The build is still failing.
[11:43:20] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/e1c711b92d20...8b11787527ca
[11:43:20] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/8707111
[11:43:40] <jqmobilecommit> 01[13jquery-mobile01] 15gabrielschulhof pushed 1 new commit to 06master: 02http://git.io/sgvmfw
[11:43:40] <jqmobilecommit> 13jquery-mobile/06master 144b8827c 15Gabriel Schulhof: Demos: Popup arrow: Appear only upon a click within the designated clicking area.
[11:53:01] <scott_gonzalez> DaveMethvin jzaefferer rxaviers arschmitz timmywil http://doodle.com/knguww9y9c4923yg
[12:00:17] <travis-ci> [travis-ci] jquery/jquery-mobile#432 (master - 4b8827c : Gabriel Schulhof): The build was fixed.
[12:00:17] <travis-ci> [travis-ci] Change view : https://github.com/jquery/jquery-mobile/compare/8b11787527ca...4b8827c60753
[12:00:17] <travis-ci> [travis-ci] Build details : http://travis-ci.org/jquery/jquery-mobile/builds/8707715
[13:08:08] <arschmitz> scott_gonzalez: you free for a few minutes
[13:34:07] <scott_gonzalez> arschmitz: hey
[13:36:20] <arschmitz> scott_gonzalez: hey you wanted to talk about the best way to renamespace and extend a ui widget for mobile
[13:37:00] <arschmitz> scott_gonzalez: this is what i have right now https://github.com/jquery/jquery-mobile/blob/master/js/widgets/tabs.js#L11
[13:37:39] <scott_gonzalez> Yup, give me two minutes to finish replying to this email, then we'll look into that.
[13:37:46] <arschmitz> sure
[13:45:35] <scott_gonzalez> arschmitz: ready
[13:46:19] <arschmitz> scott_gonzalez: ok i remember what it was before with $.mobile.tabs = $.ui.tabs
[13:47:02] <arschmitz> scott_gonzalez: that works fine but the line there is still needed because that extends tabs with the mobile base widget
[13:47:46] <scott_gonzalez> ah
[13:48:02] <scott_gonzalez> This is something I'd like to "fix"
[13:48:17] <scott_gonzalez> I want to kill $.mobile.widget()
[13:48:32] <arschmitz> scott_gonzalez: i have no issue there it has basicly 2 functions
[13:48:32] <scott_gonzalez> And just have the file change how $.widget() works.
[13:48:51] <scott_gonzalez> Because this is a stupid problem to have.
[13:49:14] <scott_gonzalez> I've been thinking about this for a long time, but I've yet to look into what it would actually take.
[13:49:29] <arschmitz> scott_gonzalez: so basicly make the change directly to $.Widget.prototype?
[13:49:45] <arschmitz> rather then have a base widget?
[13:49:53] <scott_gonzalez> Yeah
[13:49:58] <arschmitz> should be simple
[13:50:22] <scott_gonzalez> Too bad we can't do $.widget( "jQuery.Widget", { ... } )
[13:50:27] <scott_gonzalez> But manual proxying is easy enough.
[13:50:39] <arschmitz> yeah and there are only 4 methods in the mobile base widget
[13:51:03] <scott_gonzalez> I'm not sure .raise() should exist.
[13:51:12] <scott_gonzalez> It certainly shouldn't do what it does right now.
[13:51:20] <scott_gonzalez> All errors need to go through $.error().
[13:51:25] <arschmitz> yeah i dont even know why we have that
[13:51:30] <arschmitz> iv never seen it used in our code
[13:51:56] <scott_gonzalez> Oh, so we should just search for uses and if it's not used, remove it.
[13:52:03] <scott_gonzalez> Is it documented?
[13:52:08] <arschmitz> scott_gonzalez: nope
[13:52:19] <scott_gonzalez> Sweet, so no deprecation process :-)
[13:52:20] <arschmitz> nothing in the mobile base widget is documented
[13:52:23] <scott_gonzalez> haha
[13:52:36] <arschmitz> so we can change whatever we want
[13:52:54] <scott_gonzalez> https://github.com/jquery/jquery-mobile/issues/6131
[13:53:05] <jqmobilecommit> [13jquery-mobile] 15scottgonzalez opened issue #6131: Remove raise() method from base widget  02http://git.io/R_Oggg
[13:53:33] <arschmitz> and i agree that adding these to the prototype to avoide this problem makes much more sense
[13:53:53] <jqmobilecommit> [13jquery-mobile] 15scottgonzalez opened issue #6132: Investigate removal of $.mobile.widget as an object  02http://git.io/U1U75Q
[13:56:43] <arschmitz> scott_gonzalez: ill try and make the change to mobile.widget tonight or tomorrow
[13:56:59] <scott_gonzalez> That'd be nice.
[13:57:34] <scott_gonzalez> We'll probably need something like `$.mobile.widget = $.Widget` for deprecation.
[13:57:50] <arschmitz> scott_gonzalez: yeah thats what i was thinking
[14:00:07] <scott_gonzalez> Well, that was an easy discussion :-)
[14:00:18] <scott_gonzalez> Looks like our AMD discussion will definitely happen on Friday.
[14:00:43] <arschmitz> this way too like you said in the comment $.mobile namespace for widgets could even be depreciated 
[14:00:44] <scott_gonzalez> I might be around tomorrow morning, but definitely not in the afternoon.
[14:00:53] <arschmitz> yeah same here
[14:01:03] <arschmitz> and maybe like tomorrow night late
[14:01:44] <arschmitz> scott_gonzalez: what do you think about the need for the mobile namespace at all?
[14:02:20] <arschmitz> it made sense for 2 seperate projects but combining and making everything work together it seems like its not really that needed any more
[14:02:54] <arschmitz> we shared the .ui namespace for css already
[14:03:18] <arschmitz> ( which made no sense to me to start different js namespaces but same css one? )
[14:03:46] <scott_gonzalez> Yeah, that just caused confusion and theme clashes.
[14:03:51] <arschmitz> yeah
[14:04:33] <arschmitz> it seems like we should think about depreciating the mobile namespace in favor of ui sense eventually we hope to share a theme as well
[14:07:52] <scott_gonzalez> yup
[14:08:12] <arschmitz> scott_gonzalez: cool thats more down the road something to be thinking about
[14:09:40] <arschmitz> scott_gonzalez: iv gotta run right now but im going to work on the base widget tonight / tomorrow and we can talk at somepoint on friday about how it turns out
[14:10:05] <scott_gonzalez> Cool. Have a good night.
[15:00:31] <toddmparker> hey - sorry I was so out of pocket the last 2 days. Was reviewing the UI/Mobile widget doc and the one thing that jumped out was the note about the value of the back button to close dialogs
[15:00:35] <toddmparker> "Integration with AJAX navigation, so back button can close dialogs. Not sure what to make of that."
[15:01:15] <toddmparker> on a lot of mobil platforms like android, wp, etc. the back button is expected to back you out of interactions - closing dialogs, even select menus
[15:01:32] <toddmparker> we that is really important to maintain
[15:02:30] <toddmparker> these platforms don't even have on-screen ways of dismissing like iOS does. they expect that you will use the back button.
[15:22:08] <uGoMobi> rxaviers: here you can see Grunticon in action http://view.jquerymobile.com/grunticon/demos/test/icons/index.html - The loader script is in the head there as well as a noscript fallback
[15:32:21] <uGoMobi> scott_gonzalez jzaefferer rxaviers : I have been looking into Topcoat and will comment on the ticket
[15:35:39] <toddmparker> have a great 4th (if you're a 'merican)
[15:35:50] <toddmparker> see you next week
[15:35:56] <toddmparker> (also: hi uGoMobi)
[15:36:10] <uGoMobi> hey toddmparker 
[15:36:43] <uGoMobi> enjoy your July 4th holiday!
[21:39:14] <jqmobilecommit> 01[13jquery-mobile01] 15arschmitz created 06mobile-base (+3 new commits): 02http://git.io/f-KQKw
[21:39:14] <jqmobilecommit> 13jquery-mobile/06mobile-base 14245e3d1 15Alexander Schmitz: Widgets: Remove mobile base widget and extend $.widget instead. Fixes #6132
[21:39:14] <jqmobilecommit> 13jquery-mobile/06mobile-base 145b9249e 15Alexander Schmitz: Widget: Remove rise method Fixes #6131 - Remove raise() method from base widget
[21:39:14] <jqmobilecommit> 13jquery-mobile/06mobile-base 14e9cad22 15Alexander Schmitz: Tests: Fix Widget core tests for removal of mobile base widget
[21:57:26] <jqmobilecommit> 01[13jquery-mobile01] 15arschmitz pushed 1 new commit to 06mobile-base: 02http://git.io/f4C3Aw
[21:57:26] <jqmobilecommit> 13jquery-mobile/06mobile-base 1468daf85 15Alexander Schmitz: Merge branch 'master' of https://github.com/jquery/jquery-mobile into mobile-base...
[21:58:21] <jqmobilecommit> [13jquery-mobile] 15arschmitz opened pull request #6133: Merge mobile-base branch (06master...06mobile-base)  02http://git.io/XdLG7A
[22:01:06] <jqmobilecommit> [13jquery-mobile] 15arschmitz opened issue #6134: Switch mobile namespace to ui  02http://git.io/ExGy-Q
