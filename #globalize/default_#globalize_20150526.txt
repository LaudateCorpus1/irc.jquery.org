[14:15:14] <apsdehal> arschmitz: What should I do about 0 === -0 thing?
[14:17:53] <arschmitz> apsdehal: thats up to rxaviers
[14:18:27] <arschmitz> you can either look into the code to see why its getting -0  and determine if it should be 0 or -0
[14:18:33] <arschmitz> or change it to expect -0
[14:18:42] <rxaviers> apsdehal, as far as I understood the test equal assertion fails.
[14:19:17] <arschmitz> rxaviers: basicly it gets -0 now in QUnit
[14:19:26] <arschmitz> but qunit follows the spec and says 0 === -0
[14:19:32] <arschmitz> Chai does not
[14:19:40] <arschmitz> intern uses chi under the hood
[14:20:26] <arschmitz> so realisticly i would say your fine just switching to expect -0 and adding a support comment ( maybe file an issue on chai )
[14:20:55] <arschmitz> because in JavaScript 0 and -0 are strictly equal
[14:20:58] <rxaviers> apsdehal, does checking against -0 fixes it for you?
[14:21:00] <arschmitz> rxaviers: but thats your call
[14:21:02] <apsdehal> I think for the mean time we can change it to expect -0 and file an issue on chai too
[14:24:15] <apsdehal> rxaviers: Yes
[14:24:56] <rxaviers> apsdehal, do you know why it returns -0 instead of 0?
[14:25:09] <apsdehal> No, but I can check inside the code
[14:25:56] <rxaviers> Feel free to submit a PR with such change, explaining your findings please.
[14:26:35] <apsdehal> https://github.com/jquery/globalize/blob/master/test/unit/date/tokenizer.js#L687
[14:26:42] <arschmitz> rxaviers: just to be clear the test returns -0 on globalize master
[14:26:58] <apsdehal> This one is the only one which returns -0
[14:28:19] <rxaviers> ok a good starting point.
[14:44:43] <apsdehal> This is tokenizerProperties object I am getting
[14:44:44] <apsdehal> http://imgur.com/6mpN1ZH
[15:00:35] <apsdehal> https://github.com/jquery/globalize/blob/master/src/date/tokenizer.js#L65
[15:00:44] <apsdehal> This is where we are getting -0
[15:00:50] <apsdehal> rxaviers ^
[15:03:28] <rxaviers> apsdehal, do you think the code there should be different (e.g., the use of `-` in some places)?
[15:05:42] <apsdehal> numberParser(aux[1]) returns -0 and thus overall a -0
[15:05:57] <apsdehal> Sorry, -numberParser(aux[1])
[15:06:15] <arschmitz> rxaviers: apsdehal: i think the real questions here are...
[15:06:28] <arschmitz> 1) is -0 or 0 actually correct
[15:06:47] <arschmitz> 2) do you care since they are strictly equal in JS
[15:07:31] <arschmitz> rxaviers: to me it looks like your doing it out of convenience here
[15:07:44] <arschmitz> because your taking the result and making it negative no matter what it is
[15:08:28] <rxaviers> Actually, I'm not handling the special -0 case. Although, the minus is there for a reason. :)
[15:08:40] <arschmitz> rxaviers: thats what i was saying
[15:08:45] <rxaviers> I agree with your 1 and 2 points.
[15:09:09] <arschmitz> i would say here -0 is actually the correct answer
[15:09:24] <arschmitz> based on the code
[15:10:14] <arschmitz> not sure about what the actual desired value is
[15:10:15] <rxaviers> It seems that we wouldnt hurt testing for -0.
[15:10:38] <rxaviers> But, Im busy now to focus on it.
[15:11:17] <rxaviers> apsdehal, let's get this PR submitted with the details you can feed in.
[15:11:45] <rxaviers> Is it blocking you? Can you continue the work you're doing having it locally changed in your branch?
[15:12:22] <arschmitz> rxaviers: this should not be a blocker there are other things that are im working with snover on already
[15:12:37] <rxaviers> awesome
[15:12:39] <rxaviers> ok
[15:12:42] <arschmitz> rxaviers: however apsdehal did you have questions about the functional test
[15:12:51] <rxaviers> sure
[15:14:43] <apsdehal> Yes, this is not really a blocker, I will change -0 locally and submit it along with the PR
[15:15:09] <rxaviers> ok tks
[15:19:53] <apsdehal> Should I file an issue with chai?
[15:20:23] <arschmitz> apsdehal: i would and link to the spec
[15:43:40] <apsdehal> Added the issue
