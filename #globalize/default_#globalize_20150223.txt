[06:25:24] <rxaviers> scott_gonzalez, ping
[06:26:24] <scott_gonzalez> hey
[06:27:38] <rxaviers> I agree we're adding too much complexity for imaginary cases. May not be worth it.
[06:28:09] <rxaviers> Do you think it would be reasonable to either output "in 0 hours" or "0 hours ago" for the zero case?
[06:28:17] <rxaviers> I mean, not being able to control it?
[06:28:27] <scott_gonzalez> I think that's fine.
[06:28:32] <rxaviers> And avoid the zeroTense option.
[06:28:39] <rxaviers> Ok. I share the same feeling
[06:28:52] <scott_gonzalez> Either always use customary words or never.
[06:29:09] <scott_gonzalez> If you need more logic than that, it's easy to put that logic in your app.
[06:29:19] <rxaviers> absolutely
[06:29:19] <arschmitz> rxaviers: seems reasonable
[06:29:37] <rxaviers> arschmitz, cool
[06:29:58] <arschmitz> and like scott_gonzalez its not like they cant handle them selves if need be
[06:30:05] <scott_gonzalez> We always have the ability to add more APIs if we see lots of users desiring the functionality.
[06:30:09] <scott_gonzalez> But I don't think that's going to happen.
[06:30:42] <rxaviers> scott_gonzalez, arschmitz, Would you be ok to also drop the `useCustomaryWords` boolean option and always use them.
[06:30:59] <scott_gonzalez> Keeping APIs small, yet effective, is one of the most important things to do, but also one of the hardest things to do.
[06:31:01] <rxaviers> or do you see value on that?
[06:31:11] <rxaviers> Yeap.
[06:31:35] <rxaviers> Applications that don't want to use the customary words can drop them from the data.
[06:33:21] <arschmitz> rxaviers: so the only real change that would make is you could not set it at runtime and only as part of your data set?
[06:34:21] <scott_gonzalez> Why not keep it useCustomaryWords, default to true, and allow turning it off at runtime, even if the data is loaded?
[06:34:42] <scott_gonzalez> Unless there's another way to get those values.
[06:36:06] <rxaviers> The only use case for { useCustomaryWords: false } that I saw so far is implementing countdowns.
[06:37:01] <rxaviers> (a) no other library have such option. (b) I'm not too convinced this use case should be encouraged.
[06:37:07] <scott_gonzalez> Ok, so I'm fine with dropping the option.
[06:37:39] <rxaviers> We have another related method, .foramtUnit(), that outputs stuff lke "2 days", "1 day", "0 days".
[06:37:49] <rxaviers> I think that should be used for countdown or chronometers.
[06:38:05] <scott_gonzalez> Yup, makes sense.
[06:38:21] <arschmitz> rxaviers: ok yeah that seems fine
[06:38:34] <rxaviers> Another piece of information is that the relative time data comes from:
[06:38:54] <rxaviers> http://www.unicode.org/repos/cldr-aux/json/26/main/en/dateFields.json
[06:39:56] <rxaviers> If they need a more complex way to display messages (for example, displaying "today", but not "tomorrow"), they could tweak that data.
[06:41:13] <rxaviers> It would be hard though, if an application wants to simultaneously format something using this custom messages. But, another stuff using regular "today", "tomorrow" and so on.
[06:41:17] <rxaviers> But...
[06:41:45] <scott_gonzalez> It's not that hard. You just use a conditional.
[06:41:46] <rxaviers> I that's too much hypothesis anyway.
[06:41:49] <scott_gonzalez> We're only talking about the 0 case.
[06:42:22] <arschmitz> i think its fine to go as minimal as possible to start
[06:42:35] <arschmitz> if e get a lot of requests for something it can be added
[06:42:42] <scott_gonzalez> Though I guess the question is how do you get "1 day ago" as opposed to "1 day"
[06:43:47] <rxaviers> formatRelativeTime() outputs "2 days ago". formatUnit() outputs "2 days".
[06:44:11] <scott_gonzalez> Right, but formatRelativeTime() won't output "1 day ago" it will output "yesterday"
[06:44:13] <rxaviers> Considering we always use customaryWords in the simplified formatRelativeTime(), we should not be able to get "1 day ago"
[06:44:18] <rxaviers> Correct.
[06:44:45] <rxaviers> Do you think it's worth keeping that option then?
[06:44:55] <scott_gonzalez> Let's see if users actually ask for it.
[06:45:00] <rxaviers> Ok
[06:45:30] <rxaviers> I'm also inclined with dropping it and it seems arschmitz is too.
[06:45:45] <arschmitz> yeah if people ask for it we can add it
[06:45:59] <arschmitz> but otherwise no need to add the complexity it seems to me
[06:46:17] <rxaviers> Ah
[06:46:18] <rxaviers> one more question
[06:46:43] <rxaviers> If we're ignoring the difference between "0 seconds ago"  or "in 0 seconds", which should be the default?
[06:46:51] <rxaviers> Let's say past?
[06:47:56] <scott_gonzalez> yeah
[06:48:13] <scott_gonzalez> Some apps give you "just now"
[06:48:40] <scott_gonzalez> "second": {
[06:48:40] <scott_gonzalez>             "displayName": "Second",
[06:48:40] <scott_gonzalez>             "relative-type-0": "now",
[06:48:51] <scott_gonzalez> CLDR has it.
[06:49:09] <scott_gonzalez> But do you mean in the case that the data hasn't been loaded?
[06:55:48] <rxaviers> Yeap, pardon I was clear.
[06:56:11] <rxaviers> I mean for units that lack relative-type-0, for example "minute"
[06:56:21] <rxaviers> I wanst* clear
[06:58:07] <scott_gonzalez> Ah, yeah, I'd just go with past.
[06:58:19] <rxaviers> ok
[07:00:23] <mb_> Hey
[07:01:20] <mb_> Actually can't chat now will be back in bit
[07:53:47] <rxaviers> mb_, hi
[07:53:51] <rxaviers> I'm back
[10:45:53] <globalize-commit> [globalize] rxaviers closed issue #388: Globalize.formatMessage alternative http://git.io/b6oZ
