[03:45:50] <globalize-commit> [globalize] jzaefferer opened pull request #515: Docs: Improve documentation for raw date formatter option (master...raw-docs) http://git.io/vcYxj
[05:07:39] <rxaviers> HI apsdehal,
[05:07:45] <apsdehal> Hi rxaviers
[05:08:05] <rxaviers> So, https://github.com/jquery/globalize/pull/450/ ? :)
[05:08:38] <globalize-commit> [globalize] rxaviers pushed 1 new commit to master: http://git.io/vcOGy
[05:08:38] <globalize-commit> globalize/master 5364d11 JoÌˆrn Zaefferer: Docs: Improve documentation for raw date formatter option...
[05:08:44] <apsdehal> Yes
[05:08:56] <apsdehal> ::)
[05:09:08] <rxaviers> Refreshing my memory, reading it.
[05:09:28] <apsdehal> Yeah, same here :p
[05:09:51] <rxaviers> So, before your PR, we had intermittent issues using browserstack-runner to run cross browser tests in browserstack.
[05:10:01] <rxaviers> So, your PR is a great addition to Globalize
[05:10:34] <apsdehal> ::)
[05:11:35] <rxaviers> Such matrix browser testing is really important to the project. But, it's also important that we allow other ways of testing it. I think this was basically where I wanted to talk to you
[05:11:36] <rxaviers> https://github.com/jquery/globalize/pull/450/#issuecomment-114141947
[05:12:35] <rxaviers> Basically, I think tests are used with two different purposes.
[05:13:27] <rxaviers> 1. During development, as a quick way to ensure changes didn't break the library. This is, local testing.
[05:14:08] <rxaviers> 2. From time to time, specially before release, to ensure everything works on all browsers and all other variations (like all supported CLDR versions, etc).
[05:14:30] <rxaviers> This is a more time consuming testing. But, it's important to ensure the library is in good shape.
[05:15:27] <rxaviers> For 1, I'd like to keep tests as simple as possible. 1.a) Local tests using node.js; 1.b) Local tests using developer browser.
[05:16:51] <rxaviers> For 2, we have 2.a) Matrix node.js tests, which we currently don't do. 2.b) Matrix browsers and OSes testing, which is where I see no other solution than using intern. 2.c) Matrix CLDR testing, which we currently don't do.
[05:18:05] <rxaviers> How does that sound to you?
[05:18:48] <apsdehal> 2 can be done directly on Travis?
[05:19:15] <apsdehal> By adding different node versions to .travis.yml
[05:19:38] <rxaviers> True. If we have 1.a in place :)
[05:19:40] <apsdehal> Rest can be handled through Browserstack.
[05:20:55] <apsdehal> I think 1 can be done. Since functional tests in Intern are essentially unit tests in intern's language.
[05:22:34] <rxaviers> Currently, our `grunt test` tests run on node.js, but on top of phantomjs, I think phantomjs can be removed here, since Globalize doesn't require anything DOM related.
[05:23:26] <apsdehal> grunt unitLocal and grunt functionalLocal run on intern's nodejs client
[05:23:33] <apsdehal> In the PR.
[05:23:46] <apsdehal> https://github.com/jquery/globalize/pull/450/files#diff-35b4a816e0441e6a375cd925af50752cR71
[05:24:27] <rxaviers> Let me try it again...
[05:34:06] <rxaviers> grunt intern:unitLocal
[05:34:12] <rxaviers> Tunnel started
[05:34:16] <rxaviers> Suite chrome on any platform FAILED
[05:34:36] <rxaviers> I think node.js testing should be really straightforward, no middlewares
[05:37:04] <rxaviers> apsdehal, can 450 be updated, so that the existing tests tasks are not replaced. But, the browserstack tests tasks are separately done via intern?
[05:39:46] <apsdehal> Hmm, need to check upon that.
[05:39:52] <apsdehal> I will try to see what I can do
[05:39:57] <apsdehal> And update the PR
[05:40:25] <rxaviers> apsdehal, thx feel free to ping me needing any help/input
[05:40:38] <apsdehal> So your main aim is to make local tests separately using Local Node js
[05:40:51] <apsdehal> I will keep that in mind.
[05:41:43] <rxaviers> Yeap, basically I want to avoid adding unnecessary stuff in the middle of local tests. They should run quickly and be simple
[05:42:12] <rxaviers> I want the tests on 2 to hold the additional complexity.
[06:13:12] <apsdehal> rxaviers: So you don't want local tests to use Chromium WebDriver?
[06:13:36] <rxaviers> Nope
[06:22:54] <rxaviers> correct
[06:43:14] <apsdehal> rxaviers: Do you want reporting about coverage on each grunt local run?
[06:45:43] <rxaviers> yeap, I know we'd lose that for local testing.
[06:46:44] <apsdehal> Now, they will be reported after each grunt run
[06:47:28] <apsdehal> Can you pull down the latest changes I did to my intern branch and run grunt test ?
[06:47:51] <apsdehal> grunt test:unit and grunt test:functional are also valid now.
[06:50:06] <rxaviers> Sure, I will
[06:50:16] <apsdehal> rxaviers: For your requirement of Matrix Node tests
[06:50:43] <apsdehal> Which all node js versions you want?
[06:51:48] <rxaviers> jzaefferer, scott_gonzalez, arschmitz, any input which node.js should be supported by Globalize? I guess it can be supported by pretty old node.js versions.
[06:52:04] <rxaviers> We could test for >=0.8?
[07:00:01] <jzaefferer> I wouldn't bother with 0.8 anymore
[07:00:14] <jzaefferer> 0.10+ seems fine
[07:02:34] <apsdehal> So PEP runs on 0.10 only, we can run 0.10, 0.12 and others if you want
[07:19:50] <apsdehal> rxaviers: Which browser versions you want?
[07:22:58] <rxaviers> apsdehal, the ones listed here https://github.com/jquery/globalize/#browser-support and the mobile ones listed here http://jquery.com/browser-support/
[07:23:33] <apsdehal> IE8 is problematic
[07:23:53] <rxaviers> apsdehal, 0.10 and 0.12 seems fine
[07:24:10] <apsdehal> Testing Opera and Safari also will increase the testing time manifold
[07:24:38] <apsdehal> https://travis-ci.org/jquery/globalize/builds/82745928
[07:26:02] <rxaviers> apsdehal, we would need to polyfil IE8 with es5 stuff in order to test it. If this cant be done with intern, this could be postponed. No problem. We should be able to manually test IE8 using current manual browser tests.
[07:26:28] <apsdehal> Sure.
[07:26:34] <rxaviers> About increasing the testing time, that's ok, we need to test it.
[07:26:49] <rxaviers> test them*
