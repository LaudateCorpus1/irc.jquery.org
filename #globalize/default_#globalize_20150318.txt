[03:14:29] <hosup> hi
[10:48:51] <tniessen> rxaviers: about
[10:49:06] <rxaviers> hi
[10:49:46] <tniessen> rxaviers: about 398, is it fixed that we want the actual formatters and parsers to be precompiled? Or might it be an alternative to precompile the generators?
[10:49:55] <tniessen> sorry, hit the wrong key :D
[10:51:50] <rxaviers> Under the hoods the "precompilation" already happens
[10:52:28] <rxaviers> But, it's optional. One dont need to use those 398 methods.
[10:52:33] <rxaviers> doesnt*
[11:14:30] <globalize-commit> [globalize] rxaviers opened issue #425: API change: `.dateFormatter( pattern )` -> `.dateFormatter( [options] )` http://git.io/hlbR
[11:17:10] <tniessen> rxaviers: Do you mean that CLDR data is already being converted into precompiled JavaScript functions by the generators?
[11:18:18] <tniessen> rxaviers: Oh, misunderstood that... Anyway, we won't allow precompiling generators, just their results, right? So we will save code of formatters and parsers, not of their generators?
[11:20:25] <rxaviers> tniessen, JavaScript functions are not generated, except for plural generators.
[11:21:06] <rxaviers> But, note formatters and parsers return a tiny function that uses compiled data.
[11:21:25] <rxaviers> The idea is to export this tiny function along with the compiled data.
[11:22:05] <tniessen> rxaviers: Yeah I actually meant those little functions ;)
[11:22:21] <tniessen> rxaviers: Okay, sounds reasonable, thank you
[11:22:33] <rxaviers> ywc
[14:31:57] <globalize-commit> [globalize] ManrajGrover opened pull request #426: Fixed issue 272 Handle DateTime in same skeleton. (master...fix-272-handleDateTime) http://git.io/h4uI
