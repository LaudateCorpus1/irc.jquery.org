[08:17:57] <globalize-commit> [globalize] rxaviers closed pull request #503: Arabic Numeric Shaping Support (master...numericShaping3) http://git.io/vZZ7A
[09:07:25] <apsdehal> rxaviers: ping
[09:07:31] <apsdehal> Which os do you want to support
[09:07:42] <rxaviers> apsdehal, hi
[09:08:08] <rxaviers> we should test every os browserstack supports :)
[09:08:30] <rxaviers> (on* every)
[09:08:41] <apsdehal> I mean you don't want to test on Windows 8 as well as windows 7
[09:08:54] <apsdehal> Some specific versions of OSes
[09:10:06] <rxaviers> Globalize supports browsers. I think we should test every browserstack operating system that has browsers Globalize support. Does that clarify?
[09:10:23] <rxaviers> Does that make sense?
[09:10:40] <apsdehal> That makes sense, but Combinations will be a huge number
[09:11:01] <rxaviers> jzaefferer, scott_gonzalez, any input on that ^?
[09:12:00] <apsdehal> > Windows: XP, 7, 8 and 8.1 , OS X: Snow Leopard, Lion, Mountain Lion, Mavericks, Yosemite These are currently supported
[09:12:17] <apsdehal> These are all the browsers https://www.browserstack.com/list-of-browsers-and-platforms?product=automate
[09:12:45] <rxaviers> We should also test on mobile devices
[09:12:47] <apsdehal> I mean you don't want to test on all chrome versions from 1 - current that would be tough and gigantic task
[09:13:32] <apsdehal> We can keep current latest version, lastest -1 and latest -2 for all browsers
[09:13:50] <rxaviers> apsdehal, testing latest and (latest - 1) chrome should be sufficient
[09:14:48] <rxaviers> this is what we currently do https://github.com/jquery/globalize/blob/master/browserstack.json
[09:14:53] <apsdehal> Also, https://github.com/jquery/globalize/pull/450#issue-82550463 I have updated this with all the requirements, one big task that is left is to support CLDRMatrix testing
[09:15:29] <rxaviers> Let's tackle CLDRMatrix testing as a next step
[09:16:22] <apsdehal> Node matrix tests are already in place.
[09:16:31] <rxaviers> awesome
[09:16:45] <apsdehal> And so is the local browser testing
[09:17:35] <rxaviers> great .Please, just let me know when the PR is ready for review
[09:17:56] <apsdehal> Ok. Can you explain a little bit about CLDR matrix testing?
[09:18:42] <rxaviers> CLDR is a versioned database. Globalize supports CLDR >=25. Ideally, we should run our tests against CLDR 25, CLDR 26, ... CLDR 28.
[09:19:20] <apsdehal> Ok. I will find a solution to do this.
[09:19:44] <rxaviers> npm install cldr-data@25, npm install cldr-data@26, etc.
[09:19:44] <rxaviers> Thanks
[09:19:59] <rxaviers> or bower install cldr-data@25, 26,...
[09:20:21] <rxaviers> should get us the files. Note bower install requires a special postinstall script https://github.com/rxaviers/cldr-data-bower
[09:21:25] <rxaviers> But, let's focus on getting your intern PR landed first.
[09:22:28] <apsdehal> Ok, so I will shift CLDR Matrix tests to a separate PR
[09:26:21] <rxaviers> excellent
[09:26:24] <rxaviers> sounds good to me
[10:38:25] <scott_gonzalez> rxaviers apsdehal: My suggestion is to only test one OS per browser.
[10:38:42] <scott_gonzalez> It's extremely rare that a browser behaves differently on different OSes.
[10:38:45] <scott_gonzalez> It does happen, but not often.
[10:38:59] <scott_gonzalez> I would avoid the overhead of all the additional testing unless you actually run into a bug.
[11:03:50] <rxaviers> makes sense
[19:13:48] <globalize-commit> [globalize] wescravens opened pull request #526: NumberFormatter: updated doc example headers (master...update-number-formatter-doc-headers) http://git.io/vCL3E
