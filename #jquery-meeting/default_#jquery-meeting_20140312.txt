[09:00:41] <scott_gonzalez> arschmitz: gnarf jzaefferer kborchers mikesherov  mikesherov_ rxaviers tj_vantoll
[09:00:46] <rxaviers> hi
[09:00:48] <kborchers> howdy
[09:00:49] <arschmitz> hi
[09:01:57] <tj_vantoll> hey
[09:02:01] <scott_gonzalez> arschmitz: Anything to discuss for button?
[09:02:17] <arschmitz> yup finished going through open issues in track
[09:02:54] <mikesherov_> hi
[09:02:55] <arschmitz> and id like it if someone could just do some basic functional testing on the demos and also get some accessability feedback
[09:03:20] <arschmitz> right now on everything i tried on ( which is not much ) it exactly matches native which i think is the goal
[09:03:29] <scott_gonzalez> great
[09:04:05] <arschmitz> i did just notice one regression from a change i made in button though so give me like an hour before anyone tried button stuff :) checkboxradio is good though
[09:04:24] <arschmitz> oh also updated wiki to point to correct branch
[09:06:43] <scott_gonzalez> rxaviers: Anything for Globalize?
[09:07:55] <rxaviers> Nothing this week aside from answering issue's comments.
[09:08:00] <scott_gonzalez> ok
[09:08:09] <rxaviers> In the past weeks (which I havent join the meetings), I've implemented part of the number module.
[09:08:58] <scott_gonzalez> Yup, we got that in the previous meeting(s).
[09:09:11] <scott_gonzalez> Though if there are any specific details you wanted to discuss, go ahead.
[09:10:11] <rxaviers> ah! right. Ok then.
[09:10:27] <rxaviers> Im ok on Globalize (not blocked).
[09:10:56] <scott_gonzalez> ok
[09:11:02] <scott_gonzalez> jzaefferer started working on the migration to jquery-release.
[09:11:09] <rxaviers> Niklas from wikipedia is to work on the relative time format, but he didnt have time to do so by last meetin
[09:11:13] <rxaviers> g
[09:11:23] <rxaviers> and I havent heard from him so far.
[09:11:31] <scott_gonzalez> I spent a few hours with him this morning going over it.
[09:11:48] <scott_gonzalez> He's working on the CDN task right now.
[09:11:59] <scott_gonzalez> I'll be working on updates to jquery-release itself.
[09:13:28] <scott_gonzalez> jzaefferer's PR to use Bower for client-side dependencies landed.
[09:13:30] <scott_gonzalez> https://github.com/jquery/jquery-ui/pull/1201
[09:15:23] <scott_gonzalez> mikesherov has made some updates on the effects rewrite.
[09:15:45] <scott_gonzalez> But I don't think there's anything to discuss on that right now.
[09:16:03] <jzaefferer> Looks like the CDN stuff works now :-)
[09:16:18] <jzaefferer> Hot off the press
[09:18:01] <jzaefferer> arschmitz: I can click around the button demos, what branch was that?
[09:18:09] <scott_gonzalez> button-icon-span
[09:18:24] <arschmitz> jzaefferer: just give me a few minutes im fixing something i broke :|
[09:23:50] <scott_gonzalez> Anyone have anything else to discuss this week?
[09:24:39] <rxaviers> On DB, I'm working on the handling CSS from js comments thing, based on gseguin work
[09:24:42] <tj_vantoll> Nothing from me.
[09:25:17] <rxaviers> Im not blocked. But, it would be good if the whole team could take a look on that and comment in case you think CSS comments should be done differently
[09:25:57] <rxaviers> with done I mean: defined, not implemented.
[09:26:43] <rxaviers> It would be good to know if someone has different ideas from the beginning rather than after it's implemented. :P
[09:27:10] <rxaviers> https://github.com/jquery/download.jqueryui.com/issues/178
[09:27:19] <scott_gonzalez> I'm pretty sure the consesus was that whatever Mobile is doing is what we're going to use.
[09:27:27] <rxaviers> excellent
[09:27:30] <scott_gonzalez> I know there's some debate going on about paths though.
[09:31:16] <jzaefferer> If we assume that this is a temporary solution, we should probably not change anything, to make it easier to Mobile to switch to DB
[09:31:38] <jzaefferer> and use the AMD baseUrl for the relative paths is a reasonable approach
[09:32:13] <rxaviers> I've raised that path discussion. But, using current gseguin sounds good to  me.
[09:32:20] <jzaefferer> root-relative paths seems just as fine as relative to file, so to avoid more overhead, we should just stick with what is there already
[09:32:23] <rxaviers> current approach*
[09:33:03] <rxaviers> gseguin, do you think is it feasible if DB could use your module for the CSS build only?
[09:33:17] <rxaviers> it's*
[09:33:54] <rxaviers> the only challenge I think it would face would be to deal with cached files though.
[09:34:32] <rxaviers> well, we can wrap up and I could discuss this with gseguin later
[09:35:07] <gseguin> rxaviers: by extracting the code or making a service call?
[09:35:15] <rxaviers> making a service call
[09:35:55] <gseguin> it wouldn't work as of today
[09:36:19] <gseguin> but it wouldn't be to complex to expose the function via the API
[09:36:55] <gseguin> *too
[09:36:57] <rxaviers> the issue I see is, css build uses rjs. Rjs loads the files from the file system.
[09:37:39] <rxaviers> In order to use rjs to build the JS bundles on DB, I had to make a complex hack on rjs. So, I could make it use memory instead.
[09:37:58] <rxaviers> I think your module would have to do something similar.
[09:38:09] <gseguin> right because it happens only once per config in the mobile builder
[09:38:46] <gseguin> it hashes the requirejs config and uses the hash as the cache key
[09:40:01] <gseguin> then dumps the file on disks
[09:40:16] <gseguin> next time that config is requested it serves the static file
[09:40:25] <rxaviers> correct, per config means per different components combinations. When it's cached, no problem. But, when it builds, it's simply way too slow if not cached.
[09:41:01] <gseguin> it's not that slow
[09:41:15] <gseguin> we never had a complain for slowness
[09:41:33] <rxaviers> how long does it take?
[09:41:45] <gseguin> and the thing is, only one user per config will experience that slowness
[09:41:54] <gseguin> for the others it will be instant
[09:42:09] <gseguin> I don't know like 3 to 7 sec
[09:42:31] <rxaviers> My cached implementation (which was supposed to be fast) took an avg of 4s to build UI (3x slower than previous concatenating-approach) https://github.com/jquery/download.jqueryui.com/pull/156#issuecomment-21970848
[09:42:32] <gseguin> to build the JS, CSS, zip it and return the zip.
[09:43:32] <rxaviers> well, if you expose an API for the CSS build, we could give it a try
[09:43:46] <rxaviers> what do you think?
[09:44:13] <rxaviers> if we're not touching the code, and it's temporary, it would be a lot handier to use your code.
[09:44:29] <rxaviers> (without duplicating it :p)
[09:45:33] <gseguin> I can try to look into that tomorrow
[09:45:39] <rxaviers> cool
[09:46:24] <gseguin> so how do you populate your cache?
[09:46:35] <rxaviers> scott_gonzalez, jzaefferer, are you good with that too?
[09:46:47] <gseguin> on demand or do you pre-build all combinations on startup or in the background?
[09:47:35] <rxaviers> gseguin, https://github.com/jquery/download.jqueryui.com/blob/master/lib/jquery-ui.files.js#L23-L29
[09:47:35] <scott_gonzalez> rxaviers: Yeah, that's fine.
[09:47:45] <rxaviers> on demand
[09:47:51] <rxaviers> scott_gonzalez, ok
[09:48:07] <jzaefferer> rxaviers: I'm not sure what you're talking about
[09:48:09] <gseguin> rxaviers: oh ok so you cache the file system
[09:48:21] <gseguin> do you cache the resulting build as well ?
[09:48:37] <jzaefferer> rxaviers: do you want to use his code or actually make a HTTP call to his app to get the data?
[09:48:39] <rxaviers> gseguin, I showed you the piece of code that caches files in-memory.
[09:48:52] <jzaefferer> aka "service call"
[09:49:00] <gseguin> rxaviers: I know
[09:49:01] <rxaviers> jzaefferer, I'd like to use his code as a dependency on node.js
[09:49:20] <gseguin> rxaviers: to which I replied: oh ok so you cache the file system
[09:49:27] <rxaviers> ops, so not a service call then. But, a function call
[09:49:45] <gseguin> rxaviers: 2nd question was whether you cache the resulting build as well
[09:50:18] <rxaviers> gseguin, I cache parts of it. I cache the bundles.
[09:50:25] <rxaviers> I cache the images
[09:50:26] <jzaefferer> rxaviers: okay, that's fine
[09:50:40] <gseguin> all that in memory?
[09:50:47] <rxaviers> yeap
[09:51:01] <rxaviers> We have kinda garbage collector to clean that up from time to time.
[09:51:02] <gseguin> so if your server comes down you've got to do it all again
[09:51:16] <rxaviers> on demand
[09:51:58] <rxaviers> gseguin, as jzaefferer has pointed out. I may have misunderstood how I could use your module. You said "service call", but I understood I'd be able to include it as a node.js dependency and make a function call.
[09:52:15] <rxaviers> s/out./out,/
[09:52:49] <gseguin> rxaviers: oh ok, I would still need to modify the code as it's not written as a module right now
[09:54:28] <gseguin> rxaviers: I'll be available in the afternoon to talk more, gotta run right now
[09:54:35] <rxaviers> ok
[09:54:53] <scott_gonzalez> Ok, I think that wraps up this meeting.
[09:54:55] <scott_gonzalez> Thanks everyone.
[09:54:59] <scott_gonzalez> See you back in -dev.
