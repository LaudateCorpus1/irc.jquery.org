[09:01:52] <DaveMethvin> .
[09:01:59] <DaveMethvin> hey everybody!
[09:02:51] <DaveMethvin> who's here?
[09:03:07] <scott_gonzalez> I'm here :-)
[09:03:27] <DaveMethvin> mikesherov jaubourg rwaldron timmywil gnarf
[09:03:28] <jaubourg> hey
[09:03:34] <DaveMethvin> oh there he is
[09:03:37] <mikesherov> hi
[09:03:57] <timmywil> ohai
[09:04:09] <DaveMethvin> now we're gettin somewhere
[09:04:16] <jaubourg> \o/
[09:04:21] <jaubourg> ... where?
[09:04:26] * jaubourg hides
[09:04:45] <DaveMethvin> //me throws
[09:04:52] * DaveMethvin throws
[09:04:52] <mikesherov> ugh
[09:04:58] <DaveMethvin> up
[09:05:01] <mikesherov> throws is not a reserved word
[09:05:08] <DaveMethvin> yes, that had me confused
[09:05:19] <jaubourg> it is in ES3 but we don't support any environment in ES3 and uglify won't quote it
[09:05:25] <mikesherov> this is like the semicolon issue
[09:05:35] <DaveMethvin> well i think timmywil's solution is the best one then
[09:05:45] <mikesherov> k, fair enough
[09:05:45] <DaveMethvin> altho that probably makes CCAO mad! :P
[09:05:49] <jaubourg> I don't really see why we should change anything in jQuery
[09:06:09] <jaubourg> YUI compressor should at least have an option to opt out of ES3 comp
[09:06:19] <DaveMethvin> they have a ticket over there, yeah it should be an option
[09:06:40] <mikesherov> I'm with jaubourg, but practicality should just win here. bracket notation + comment and then eventually revert
[09:06:44] <jaubourg> I really don't like having something like this, for an external tool, not env
[09:06:51] <DaveMethvin> well mainly it's a question of whether we break it now or later
[09:07:12] <DaveMethvin> we can quote it now but warn that we're taking it out in 1.8.1 for example
[09:07:18] <DaveMethvin> assuming there is a need for a 1.8.1
[09:07:21] <DaveMethvin> :D
[09:07:38] <jaubourg> given all we changed, I'd be suprised not to see a 1.8.1 ;)
[09:07:46] <mikesherov> +1 jaubourg
[09:07:59] <DaveMethvin> pessimists!
[09:08:08] <timmywil> someone suggested we change the name of the property
[09:08:12] <jaubourg> anyway, we need to keep track of these kind of "temporary" fixes
[09:08:16] <timmywil> since we just introduced it
[09:08:18] <jaubourg> so that we can remove them asap
[09:08:38] <jaubourg> gibson came up with the name because it compressed exceptionally well
[09:08:45] <jaubourg> and happens to be better than anything we had
[09:08:47] <gnarf> DaveMethvin: semi afki
[09:08:54] <rwaldron> Late, but here
[09:08:56] <rwaldron> hi!
[09:09:15] <DaveMethvin> we could change the name but i think it was also hard to find a good name that fit
[09:09:25] <jaubourg> yes
[09:09:39] <timmywil> ok
[09:09:41] <jaubourg> hi rick, gnarf
[09:09:57] <DaveMethvin> i'm okay with the quoting for now
[09:10:20] <jaubourg> I hate it and would love it if we could petition the YUI compressor team so that we remove that in 1.8 proper
[09:10:37] <jaubourg> I get it though
[09:10:58] <timmywil> I want to talk to gibson about his pull. I might implement the same idea and see how close I get to his solution, but I think 1.8 is fine how it is. These pseudo argument issues have been present forever and we're down to edge cases that only include commas in pseudo arguments.
[09:11:01] <jaubourg> I'm just afraid they won't fix it because they need ES3 compliance for their own tools
[09:11:09] <DaveMethvin> where was that reference to the yui compressor ticket?
[09:11:15] <timmywil> http://yuilibrary.com/projects/yuicompressor/ticket/2528161
[09:11:18] <DaveMethvin> thank
[09:11:31] <timmywil> already had it in my clipboard :)
[09:11:51] <DaveMethvin> how convenient! :)
[09:11:54] <jaubourg> seems to be assigned already
[09:12:22] <timmywil> jaubourg: that happened on creation
[09:12:38] <DaveMethvin> timmywil: on that gibson042 ticket i think we should reject it until he gets it down to 0 (evil grin)
[09:12:50] <jaubourg> and here I was, praising their superiority in bug management speed :/
[09:12:57] <jaubourg> anyway, time will tell
[09:13:00] <DaveMethvin> but yeah i am hesitant to make changes like that in an RC
[09:13:12] <DaveMethvin> and those are pretty rare edge cases
[09:13:22] <jaubourg> my humble opinion is that we should do things right
[09:13:29] <timmywil> DaveMethvin: he's trying to make it perfect, and I think we're already better than 1.7.2
[09:13:45] <DaveMethvin> hey who invited this jaubourg guy? do things right indeed
[09:13:46] <jaubourg> heh gibson042 \o/
[09:13:50] <gibson042> hello
[09:14:13] <DaveMethvin> just talking about that patch for sizzle gibson042
[09:14:18] <timmywil> gibson042: "I want to talk to gibson about his pull. I might implement the same idea and see how close I get to his solution, but I think 1.8 is fine how it is. These pseudo argument issues have been present forever and we're down to edge cases that only include commas in pseudo arguments."
[09:14:18] <DaveMethvin> if they've been broken before, we're not causing regressions right?
[09:14:40] <DaveMethvin> if it's not a regression i say we leave it for now
[09:14:41] <gibson042> yeah, I got it down to +27 but it's still the same basic model
[09:14:48] <jaubourg> I mean, if the regexp approach has drawbacks that only pushes for further edge cases and we have a solution without caveats, well, you know where I stand ;)
[09:15:07] <gibson042> I think that there are regressions in the current head
[09:15:40] <DaveMethvin> that would be a bigger concern but we don't know whether they are in the wild
[09:15:50] <gibson042> given the tickets that have come in lately, I'm sure people are doing stuff like "#foo:not(:nth-child(1), :nth-child(2))"
[09:16:23] <DaveMethvin> since we have an rc1 out there, i'm hesitant to make significant changes unless we do an rc2
[09:16:27] <timmywil> any tickets that have come in lately have test cases in master
[09:16:33] <timmywil> so I don't agree with that statement
[09:16:54] <DaveMethvin> we did get some pretty decent bug fixes from the rc1 reports, which does tell us some people are teseting
[09:16:56] <DaveMethvin> testing*
[09:17:19] <DaveMethvin> but if we change things there's always a chance we'll break something else
[09:17:31] <timmywil> DaveMethvin: that is my concern as well
[09:17:44] <gibson042> true, but the Sizzle test suite is shaping up pretty well
[09:17:49] <jaubourg> isn't that why we have unit tests?
[09:17:57] <jaubourg> to make sure we don't break stuff horribly
[09:18:08] <jaubourg> just... a little bitly
[09:18:14] <DaveMethvin> everything works perfectly -- except the stuff we don't (yet) test
[09:18:53] <DaveMethvin> the unit tests will come in handy for our 1.9/2.0 refactoring but with as many people as we have using this stuff there are a bazillion cases we're not testing
[09:19:27] <DaveMethvin> plus sometimes it's not even our code, it's the effect on other code or tools
[09:19:52] <jaubourg> apparently, that's what we're talking about here... edge-case that can't work because of the regexp approach... I dunno, I kinda like the idea of tackling edge-cases, especially if we tokenize and prevent problems on a much more general scale doing so
[09:20:07] <jaubourg> unless I misunderstood something, I'm no sizzle specialist, far from it
[09:20:15] <DaveMethvin> we definitley should, just not between an rc and a release
[09:20:27] <gibson042> I think right now we're just trading edge cases; jQuery #12153 vs. the ones I found after https://github.com/jquery/sizzle/commit/60c254995a01a57c33a36b90ccc4b5a34a98c9d2
[09:20:28] <socialhapy> ★ Commit on sizzle by Timmy Willison (2d, 20h ago): Adjust pseudos regex to include commas only when appropriate. Fix new selector tests. Fixes #12153.
[09:20:32] <jaubourg> that would involve a RC2
[09:20:47] <DaveMethvin> jaubourg: right, and thus my question about rc2
[09:21:04] <DaveMethvin> but if these are rare edge cases it might be better to get 1.8 out there for the 99% to use
[09:21:11] <timmywil> gibson042: yes, but there are other issues to consider.
[09:21:13] <DaveMethvin> and we can fix the problems of the 1%
[09:21:34] <jaubourg> I'm all for a rc2, I don't think it's practical to release in the middle of summer... a end of August, begining of September makes more sense to me which leaves rooom for a RC2
[09:22:39] <DaveMethvin> there's a limit to the number of good bug reports and tests you'll get from a long series of betas and rcs i think, people get a little tired of that
[09:23:11] <timmywil> gibson042: I would rather get the edge cases down to acceptable edge cases and keep the performance benefits of using a regex rather than a function call+while loop+regex than have something that works perfectly for pseudo arguments but requires a hit to perf and size.
[09:23:17] <jaubourg> I know, but that also gives time to YUI to fix their bug and will make me happy when we remove this throws fix ;P
[09:23:25] <DaveMethvin> haha
[09:23:31] <DaveMethvin> ulterior motive!
[09:23:40] <jaubourg> Bwahahahahahahahaha
[09:24:00] <jaubourg> anyway, it's really up to Timmy and Gibson
[09:24:12] <jaubourg> they know this thing better than me by a loooooooong shot
[09:24:28] <jaubourg> let them fight to death and see who's right
[09:24:31] <DaveMethvin> i'm still thinking we're better off letting people try out rc1 this week and going for a release next week
[09:24:31] * jaubourg hides
[09:24:56] <DaveMethvin> then we do a 1.8.1 late august or early september
[09:25:05] <jaubourg> I'm afraid if we release next week, people will only use the lib in September anyway and we won't have enough tests
[09:25:25] <gibson042> timmywil: if we do that, there's going to be some really strange effects when a query breaks after being tweaked just enough to dodge qsA
[09:25:44] <gibson042> plus we have incomprehensible regexes
[09:25:51] <timmywil> gibson042: 1.7.2 didn't even consider groups for qsa
[09:25:56] <DaveMethvin> are there such things are comprehensible regexes?
[09:25:59] <jaubourg> DaveMethvin: so we'd have a 1.8.1 for sure but then a quick 1.8.2 when real apps include 1.8
[09:26:10] <timmywil> gibson042: you and I can comprehend them
[09:26:18] <timmywil> and that's not uncommon in a selector engine
[09:26:47] <jaubourg> OK, what performance hit are we talking about?
[09:26:54] <gibson042> how good are you with perf testing?
[09:26:55] <jaubourg> because complex regexps are slow too
[09:27:07] <gibson042> you read my mind jaubourg
[09:27:12] <timmywil> if we have perf tests, that might help us make a decision
[09:27:13] <jaubourg> if we have number we can see the tradeof
[09:27:18] <jaubourg> heh
[09:27:25] <DaveMethvin> these are such crazy edge cases though, aren't they?
[09:27:43] <gibson042> I'm thinking we perf test against the common cases and see the result
[09:27:45] <mikesherov> at some point, we gotta place some responsibility back on the end user
[09:27:51] <timmywil> well, the multiple pseudos with arguments in a not thing isn't that crazy, but it's still and edge case
[09:27:53] <DaveMethvin> so the main perf concern is whether it messes perf of common cases, yeah
[09:27:56] <mikesherov> to cache their selectors
[09:28:35] <DaveMethvin> so did someone volunteer to perf test this?
[09:28:41] * DaveMethvin listens
[09:28:52] <timmywil> mikesherov, jaubourg: we're talking about adding something that currently only happens once per selector to occue twice per select_ion_
[09:28:57] * jaubourg looks at DaveMethvin, the jack of all trades
[09:29:06] <mikesherov> oh
[09:29:07] <gibson042> we are?
[09:29:26] <mikesherov> I g2g guys
[09:29:28] <jaubourg> timmywil: it really depends in the difference in perf of both regexps I guess, right?
[09:29:31] <DaveMethvin> k thanks mikesherov
[09:29:36] <jaubourg> mikesherov: cya man :)
[09:29:52] <DaveMethvin> i learned long ago to not outguess the browser's perf
[09:30:03] <jaubourg> same here
[09:30:08] <jaubourg> I'd love to see actual data
[09:30:17] <jaubourg> because maybe the difference is huuuuge
[09:30:21] <jaubourg> maybe it's tiny
[09:30:31] <jaubourg> maybe it's the inverse of what we expect
[09:30:50] <jaubourg> happens a lot with stuff like regexps that live outside the VM
[09:30:51] <DaveMethvin> yeah i don't mind complex selectors being slow (and actually working) but i don't want to make the common ones slower
[09:31:24] <timmywil> ok, we'll get data then
[09:31:56] <DaveMethvin> alright and then for a ship of final i'll pencil in august 7
[09:32:02] <jaubourg> I'm pretty confident that between you and gibson, we'll get the most extensive data one can expect \o/ You guys rock in case I didn't say so already
[09:32:08] <DaveMethvin> didn't want to do august 6 be cause that's hiroshima day
[09:32:10] <DaveMethvin> bad karma
[09:32:30] <jaubourg> maybe we'd better avoid the whole week then
[09:32:43] <jaubourg> when was nagasaki?
[09:32:48] <DaveMethvin> "The jquery team is dropping this on you, er, I mean"
[09:32:52] <DaveMethvin> august 8
[09:33:17] <jaubourg> heh, I wouldn't put the release between the two out of respect but that's just me
[09:33:44] <timmywil> come now
[09:33:47] <DaveMethvin> in the notes i thought i'd mention that i think we're good with ui for the current rc
[09:33:59] <jaubourg> coolness
[09:34:04] <DaveMethvin> but mobile had an issue, they were poking into $.attrFn
[09:34:15] <DaveMethvin> so they could create shortcuts that could be used with $(html, props)
[09:34:17] <DaveMethvin> BOOO
[09:34:30] <DaveMethvin> that works now without needing attrFn
[09:34:39] <DaveMethvin> but of course attrFn is gone
[09:34:43] <DaveMethvin> so they got an error
[09:34:51] <DaveMethvin> i dunno how common that is
[09:35:14] <DaveMethvin> did i mention i REALLY DISLIKE $(html, props) ????!!!!1
[09:35:44] <jaubourg> I use it everywhere in my code, love it
[09:35:51] <DaveMethvin> GRRRR!
[09:35:54] <jaubourg> sad but true
[09:36:05] <jaubourg> so sorry I disapoint you Dave
[09:36:20] <DaveMethvin> imma start making plugins like $.fn.checked and hosing your code! :)
[09:36:30] <jaubourg> hehe
[09:36:40] <timmywil> is it just one place that mobile manipulates attrFn?
[09:36:48] <timmywil> $.attrFn &&
[09:37:15] <DaveMethvin> gnarf filed a ticket for it on their tracker
[09:37:41] <DaveMethvin> yeah they'll need a conditional so that it works with older versions
[09:38:05] <DaveMethvin> anything else we need to talk about?
[09:38:42] <DaveMethvin> well good! done early
[09:38:44] <gnarf> i think that it needs to not use attr to bootstrap it
[09:38:48] <gnarf> the props thing
[09:39:03] <DaveMethvin> oh you mean the use of the hidden arg?
[09:39:04] <gnarf> having it make .attr( "click", eventHandler ) actually work is disturbing
[09:39:31] <DaveMethvin> gnarf: that only works if you pass the third arg as true though
[09:39:39] <gnarf> ahhhh
[09:39:46] * gnarf feels less dirty now
[09:39:49] <DaveMethvin> which reminds me
[09:40:08] <DaveMethvin> we need to avoid doing junk like that, having public apis with hidden/undocumented args
[09:40:14] <DaveMethvin> we have it in attr and in data
[09:40:33] <DaveMethvin> the semantics of the call change a lot when the args are passed
[09:40:42] <DaveMethvin> which means if someone tries to duck punch the api
[09:40:44] <DaveMethvin> BOOM
[09:40:55] <DaveMethvin> and i know duck punching is always risky
[09:41:08] <DaveMethvin> but it seems like we're being cruel :)
[09:42:07] <jaubourg> aren't we?
[09:42:17] <DaveMethvin> well not on purpose
[09:42:46] <DaveMethvin> oh and before we leave, let's just bask in the glow of our passing unit tests
[09:42:49] * DaveMethvin basks
[09:43:02] <DaveMethvin> ok, see you guys in -dev!
