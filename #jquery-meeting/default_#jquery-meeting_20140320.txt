[08:00:40] <rxaviers> Hi Nikerabbit, iskren, santhosh, siebrand, Krinkle|detached, jzaefferer, scott_gonzalez, tj_vantoll
[08:01:24] <rxaviers> Hi Nikerabbit
[08:03:22] <rxaviers> General updates: CLDR has released v25.
[08:03:38] <rxaviers> Quick link to the JSON files: http://www.unicode.org/repos/cldr-aux/json/25/
[08:04:01] <rxaviers> Hi iskren
[08:04:08] <iskren> hello
[08:04:39] <rxaviers> In case you missed this:
[08:04:42] <rxaviers> <rxaviers> General updates: CLDR has released v25.
[08:04:46] <rxaviers> Quick link to the JSON files: http://www.unicode.org/repos/cldr-aux/json/25/
[08:05:15] <rxaviers> They have fixed several doc bugs
[08:05:59] <rxaviers> http://unicode.org/cldr/trac/ticket/6788 http://unicode.org/cldr/trac/ticket/6790 http://unicode.org/cldr/trac/ticket/6849 http://unicode.org/cldr/trac/ticket/7001ï»¿
[08:06:00] <rxaviers> and more
[08:06:07] <iskren> meaning their web-based docs are now better, right?
[08:06:17] <rxaviers> iskren, correct.
[08:06:42] <rxaviers> They have also fixed this JSON bug too http://unicode.org/cldr/trac/ticket/6786
[08:07:35] <rxaviers> The bug related to README instructions of their conversion tool is still opened though :'( http://unicode.org/cldr/trac/ticket/6726
[08:08:39] <rxaviers> I have been working on the Number module of Globalize, as I've mentioned in the prev meeting, https://github.com/jquery/globalize/pull/209
[08:09:22] <rxaviers> The integer and fraction format is implemented. Now, I'm more specifically working on the significant number format.
[08:09:57] <rxaviers> Nikerabbit, did you have any progress on the relative time format?
[08:10:17] <rxaviers> (https://github.com/jquery/globalize/issues/205)
[08:11:24] <Nikerabbit> rxaviers: still nothing :(
[08:12:27] <rxaviers> Ok. By chance, any plan in mind?
[08:12:55] <Nikerabbit> rxaviers: no ETA currently
[08:12:59] <rxaviers> Ok thanks.
[08:13:59] <rxaviers> iskren, any moment updates? From the last time we've talked, you said you had datetime format and relative time working on moment/cldr, you were working on tests before pushing it...
[08:14:37] <iskren> yes
[08:15:25] <iskren> last time I hit a non-implemented globalize code for zones, I guess I can comment out the respective tests
[08:16:08] <rxaviers> (Correct, timezones are still an open issue https://github.com/jquery/globalize/pull/202)
[08:16:41] <iskren> the other problem is packaging -- I think globalize needs to tag something I can step on, right now I'm using a commit hash, and that is just for package.json
[08:17:41] <iskren> also the set up required me linking cldr inside globalize to 0.3.0
[08:18:38] <iskren> I just want the thing I push to be usable: if you clone it and type npm install it should pass the tests :)
[08:19:15] <rxaviers> makes sense
[08:19:46] <rxaviers> > I think globalize needs to tag something I can step on
[08:19:47] <rxaviers> I think releasing early and often is a positive thing.
[08:19:47] <iskren> I guess a tag in globalize that uses cldr 0.3 would be enough for now
[08:20:05] <rxaviers> I'd like to hear what scott_gonzalez thinks about it
[08:20:12] <iskren> you can put version like 1.0.0-rc1/beta/alpha
[08:20:30] <iskren> I think npm is smart enough not to install it (maybe) if you do latest :)
[08:20:51] <rxaviers> scott_gonzalez, are you comfortable with 1.0.0-alpha[0-9]?
[08:21:27] <rxaviers> I know npm/semver is smart enough to order 1.0.0 > 1.0.0-alpha...
[08:21:34] <rxaviers> I hope npm is too
[08:22:13] <rxaviers> iskren, do you have your code live somewhere? I'm very curious to take a look
[08:23:22] <iskren> I can send you the main file on email :) or put it in github ... whatever :)
[08:23:52] <rxaviers> either one works fine for me. in github would be preferable though :D
[08:24:03] <iskren> to order yes, but you still can't say things like "I want latest stable"
[08:24:47] <iskren> ok, then I'll try to hack on it a bit more today after the meeting and I'll push to github afterwards
[08:26:12] <iskren> I'm currently using a single file for all the code, and I see how splitting it amd style would look better, but the fact I have to manually care about deps when packaging for other platforms is just putting me off
[08:26:24] <rxaviers> True. User can't  get the latest stable. Although, he could lock the major to something like 0.x. :)
[08:26:48] <iskren> sure, after the "what the f&#@" moment :)
[08:26:54] <rxaviers> hehe
[08:27:16] <rxaviers> Sure, I want to get any troubles you are having sorted out.
[08:27:39] <iskren> I just had this issue the other day where sass released a version incompatible with latest compass. It was compatible to the yet to be released one, and I hit the time frame with the new intern in the office
[08:28:35] <rxaviers> Did they release it as a minor / patch update?
[08:29:12] <scott_gonzalez> Back now, reading the log.
[08:29:13] <iskren> it was a major, then somebody asked in the forum and they said .. well use compass 1.0 with this, and I'm like - there is no compass 1.0 :)
[08:29:42] <iskren> and they said: meh -- pass the --pre option to gem install :)
[08:30:13] <scott_gonzalez> rxaviers: Releasing alphas early and often is fine by me.
[08:30:21] <rxaviers> scott_gonzalez, cool ;)
[08:30:55] <rxaviers> So, iskren let me know when you have a spare time to work on it.
[08:31:15] <iskren> sure
[08:31:21] <rxaviers> We could work together and get this issues solved :)
[08:32:10] <iskren> right now its kind of crazy at work, I'm helping a friend with his kitchen in the afternoon and last 2 weekends went skiing (takes the whole weekend), end of season, snow came late :-/
[08:33:07] <rxaviers> sure, no panic. Whenever you are good
[08:33:10] <iskren> I'll try to work on it today, nothing is really holding me back  right now
[08:34:03] <iskren> how do you have so much time to spend on globalize/cldr? Is this your main job?
[08:34:11] <rxaviers> Today is a good day for me. Will be online from "1h from now" until "6h from now" (aka 13:30 - 18:30 BRT)
[08:34:22] <rxaviers> I do have a dedicated time to work on Globalize ;)
[08:34:45] <iskren> thats pretty cool :)
[08:35:12] <rxaviers> it's awesome!
[08:35:14] <rxaviers> :)
[08:35:20] <rxaviers> well, ok then
[08:35:22] <rxaviers> anything else?
[08:35:25] <rxaviers> anyone?
[08:35:56] <jzaefferer> one thing
[08:36:01] <jzaefferer> npm publish --tag beta
[08:36:12] <jzaefferer> or something like that, otherwise it uses "latest"
[08:36:17] <jzaefferer> which you wouldn't want here, right?
[08:36:28] <rxaviers> ah! didnt know that. Good to know
[08:36:38] <jzaefferer> rxaviers: you should see if you can adopt jquery-release for Globalize as well
[08:36:48] <jzaefferer> it handles npm publishing (still improving that, though)
[08:36:55] <jzaefferer> and knows about pre-releases
[08:37:07] <jzaefferer> does jQuery CDN upload...
[08:37:20] <rxaviers> oh ok
[08:37:27] <rxaviers> even better
[08:37:36] <jzaefferer> I guess for now you can just manually tag and publish on npm (with --tag beta) for iskren to have something to work with
[08:38:09] <rxaviers> jzaefferer, can you create an issue on Globalize then please/
[08:38:13] <scott_gonzalez> jzaefferer: We do want latest.
[08:38:23] <scott_gonzalez> Otherwise `npm install globalize` won't pick up the new version.
[08:38:56] <jzaefferer> isn't that intended?
[08:38:57] <iskren> but its not complete yet
[08:39:09] <jzaefferer> if iskren wants the pre-release, he can `npm install globalize@1.0.0-alpha1`
[08:39:24] <scott_gonzalez> The only versions ever are pre-release.
[08:39:24] <iskren> sure, that is more than fine for me
[08:39:30] <jzaefferer> anyone currently installing without a version will continue to get the old 0.1.1
[08:40:06] <scott_gonzalez> Hmm...yeah, we should probably be publishing 0.x versions right now.
[08:40:16] <scott_gonzalez> We should start with 0.2.
[08:40:16] <jzaefferer> or that
[08:40:19] <Krinkle> Nice work
[08:40:27] <scott_gonzalez> Let's do that actually.
[08:40:37] <jzaefferer> 0.2.0 as latest (no beta)?
[08:40:39] <scott_gonzalez> No point is building up a ton of alphas on 1.0.0 when there are going to be major changes between.
[08:40:40] <scott_gonzalez> yeah
[08:40:40] <rxaviers> scott_gonzalez, I think it's semantically more correct to use 1.0.0-alpha something
[08:40:46] <scott_gonzalez> 0.x is essentially beta.
[08:40:56] <iskren> ok guys, I'll be going now. rxaviers ttyl later maybe!
[08:41:15] <jzaefferer> talk to you later later? :-)
[08:41:15] <rxaviers> iskren, ok, thanks. Ttyl
[08:41:35] <scott_gonzalez> rxaviers: 0.x is for the development phase up to 1.0.0
[08:41:47] <jzaefferer> so `npm version minor; npm publish`?
[08:41:51] <scott_gonzalez> 1.0.0 alpha should really be fairly close to 1.0.0
[08:42:16] <rxaviers> when should we turn up into 1.0.0?
[08:42:58] <jzaefferer> actually `npm version 0.2.0` since its currently on 1.0.0-pre
[08:43:07] <jzaefferer> rxaviers: once its feature complete?
[08:43:23] <scott_gonzalez> Well, it'll probably be a while before it's feature complete.
[08:43:45] <scott_gonzalez> There's some milestone for when it serves an initial set of needs for us.
[08:43:59] <scott_gonzalez> We should probably make that 1.0.0.
[08:44:21] <scott_gonzalez> rxaviers: Is there a full roadmap somewhere?
[08:44:53] <rxaviers> There isn't. I have something in mind, but not written down anywhere.
[08:45:13] <rxaviers> i thought of 1.0.0 to be the minimum needed for datepicker and spinner
[08:45:45] <rxaviers> like: date module (no timezone support), and number module
[08:46:13] <rxaviers> For any other feature, we could create a different milestone
[08:46:32] <jzaefferer> Would that significant number format be useful for spinner?
[08:46:53] <rxaviers> i dont think so. I guess what we have now is sufficient (the integer and fraction format)
[08:47:58] <rxaviers> For any other feature, we could create a different milestone  (incrementing the patch or minor version)
[08:48:43] <jzaefferer> Sounds good
[08:48:52] <scott_gonzalez> I'm good with that.
[08:49:30] <rxaviers> cool. So, I will split that number PR into the minimum number features we need, and leave everything else to be implemented later.
[08:49:39] <jzaefferer> We can also consider what momentjs needs to adopt Globalize, if thats a thing. I guess the relative time format will be the interesting one there, since the regular date parsing and formatting already exists
[08:49:43] <rxaviers> I will save my significant work into a branch.
[08:49:55] <rxaviers> jzaefferer, true
[08:50:15] <jzaefferer> You could create a separate issue for the significant number format and point at your branch
[08:50:25] <rxaviers> right
[08:50:32] <jzaefferer> Branches without PRs are hard to discover
[08:50:55] <rxaviers> So, 1.0.0 should support datepicke, spinner, and what moment needs for now.
[08:51:49] <rxaviers> About the npm tag beta, should we use it or not then? scott_gonzalez and jzaefferer
[08:52:03] <scott_gonzalez> nope
[08:52:40] <rxaviers> ok
[08:52:53] <rxaviers> does anyone have anything else to discuss?
[08:53:39] <rxaviers> I guess that's it for today... Thanks everyone!
[11:01:16] <uGoMobi> arschmitz _|Nix|_ gseguin
[11:01:20] <gseguin> here
[11:01:24] <arschmitz> here
[11:01:25] <gseguin> hi everyone
[11:01:26] <uGoMobi> hey G
[11:01:35] <uGoMobi> hey arschmitz
[11:01:51] <cgack> me too
[11:01:54] <_|Nix|_> Hey!
[11:02:00] <cgack> howdy
[11:02:02] <arschmitz> cgack: hey
[11:02:03] <uGoMobi> hey cgack and _|Nix|_
[11:02:10] <uGoMobi> agcolom will join us in a bit
[11:02:34] <arschmitz> cgack: thanks for all the triage this week and bug fixes
[11:02:34] <uGoMobi> cgack: here is the link to our meeting doc https://docs.google.com/spreadsheet/ccc?key=0AskujzE4Ig0QdG5nSmZiSUhjYm4ya29CdjhLZmJwSWc#gid=14
[11:02:58] <cgack> arschmitz: my pleasure
[11:03:11] <uGoMobi> cgack: you can request access if you want so you can add topics
[11:03:26] <uGoMobi> yeah, nice work cgack
[11:03:38] <uGoMobi> I have been slacking :(
[11:03:44] <uGoMobi> sorry about that
[11:04:04] <uGoMobi> this whole emigration thing takes a bit more time and energy than I hoped
[11:04:34] <_|Nix|_> uGoMobi: Aaaah, you're in the middle of /that/! Yeah ... that can be a handful.
[11:04:49] <uGoMobi> yeah, flew back to barcelona again this morning
[11:05:00] <uGoMobi> spend more time in hotels than home
[11:05:24] <uGoMobi> anyway, it should be all done in two weeks and then I can completely focus on jQuery :)
[11:05:51] <uGoMobi> so what do we have on the agenda
[11:06:25] <uGoMobi> removing style options has been discussed with the Web-UI-Fw team
[11:06:44] <uGoMobi> because we need to deprecate there is actually not that much that needs to be done for 1.5
[11:06:59] <uGoMobi> correct me if I am wrong _|Nix|_
[11:07:37] <uGoMobi> the Web-UI-Framework team is working on this now
[11:08:03] <arschmitz> i have a question about those meetings
[11:08:15] <uGoMobi> arschmitz: sure
[11:08:20] <arschmitz> where do they take place and is it publicly logged/
[11:08:21] <arschmitz> ?
[11:08:45] <uGoMobi> they take place at the #web-ui-fw channel on freenode
[11:08:48] <_|Nix|_> Yep.
[11:08:50] <_|Nix|_> Correct.
[11:09:01] <uGoMobi> _|Nix|_: is it logged?
[11:09:09] <_|Nix|_> arschmitz: It's logged, but I forgot to upload the last log.
[11:09:20] <_|Nix|_> arschmitz: http://web-ui-fw.github.io/irc-logs/
[11:09:30] <_|Nix|_> arschmitz: I'll u/l it.
[11:09:49] <arschmitz> is there any chance we could maybe move those into jquery-meeting like the globalize moment cldr ones are?
[11:10:21] <arschmitz> that way there is easy access to them
[11:11:23] <_|Nix|_> OK, but then I'd need ops.
[11:11:34] <_|Nix|_> ... or uGoMobi would always have to be there.
[11:12:12] <arschmitz> we can talk to others and see what they think but if it makes sense im sure you could get ops
[11:12:29] <gseguin> _|Nix|_: you should be on the ChanServ access list. Ping gnarf if you're not
[11:13:13] <uGoMobi> easier if _|Nix|_ has ops, although I will try to attend the meeting as much as possible
[11:13:48] <gnarf> _|Nix|_ just gave you ops here
[11:13:56] <gnarf>  /msg chanserv op #jquery-meeting should work
[11:13:57] <gseguin> thanks gnarf !
[11:14:02] <uGoMobi> _|Nix|_: is this not a problem for the S-Core team because there won't be a Web UI Framework weekly meeting anymore on the project channel?
[11:14:36] <_|Nix|_> uGoMobi: I can ask them.
[11:14:43] <_|Nix|_> Should be OK though, I think.
[11:14:55] <uGoMobi> I agree with arschmitz that it's better to have those discussions on a jQuery channel
[11:15:05] <uGoMobi> _|Nix|_: ok cool
[11:15:17] <_|Nix|_> gnarf: /mode +o _|Nix|_ => #jquery-meeting You're not a channel operator
[11:15:27] <uGoMobi> arschmitz: any updates about the page events demo?
[11:15:39] <gseguin> _|Nix|_: you need to msg ChanServ
[11:15:44] <_|Nix|_> Oh, I see ...
[11:15:56] <gseguin> _|Nix|_: /msg chanserv op #jquery-meeting
[11:16:05] <arschmitz> adding more examples of how to actually bind events to answer some of the things in the issues related
[11:17:04] <uGoMobi> arschmitz: cool
[11:17:30] <agcolom> Hi All!
[11:17:41] <gseguin> hey Anne
[11:17:41] <uGoMobi> gseguin: make buildCSSBundle available to UI Download builder ... anything to discuss here?
[11:17:43] <uGoMobi> hey agcolom
[11:17:55] <gseguin> uGoMobi: nothing to discuss, it's in flight
[11:18:04] <uGoMobi> ok
[11:18:05] <gseguin> haven't made progress this week though
[11:18:09] <gseguin> Re: CasperJS
[11:18:23] <gseguin> I think we should land as there is no code modification
[11:18:34] <gseguin> it doesn't commit us to that technology
[11:18:55] <gseguin> but we get the benefit of having our demos validated
[11:19:04] <gseguin> while we investigate other solutions
[11:19:06] <arschmitz> gseguin: this might sound dumb because i know that adding it is really minor
[11:19:14] <gseguin> it's easily swappable
[11:19:15] <uGoMobi> but we need to add tests first?
[11:19:26] <arschmitz> but i feel like some times we are chaning stuff like this so often its hard to keep track
[11:19:46] <gseguin> arschmitz: who cares though
[11:19:55] <arschmitz> and id kinda like to wait until we 100% decide on how we want to do this to land it
[11:20:02] <gseguin> uGoMobi: it's already testing the demos
[11:20:06] <gseguin> before and after build
[11:20:12] <arschmitz> if im the only one that feels this way im fine with not waiting
[11:20:16] <uGoMobi> ok
[11:20:25] <gseguin> arschmitz: I think that's wasted time without tests
[11:21:17] <gseguin> arschmitz: this is not public facing, users could care less about what we use for testing from one week to the next
[11:21:24] <uGoMobi> for demos testing I can live with landing already
[11:21:26] <gseguin> what they care about is that we test our shit
[11:21:32] <uGoMobi> I mean, it solves a problem
[11:21:41] <arschmitz> gseguin: i understand that i just mean for our own good
[11:21:47] <uGoMobi> we had broken demos each release
[11:21:59] <arschmitz> it leads to things being left orphaned around sometimes i think
[11:22:00] <_|Nix|_> gseguin: BTW: Do you know what's going on with the transition demos on demos.jquerymobile.com?
[11:22:24] <_|Nix|_> gseguin: When you run grunt, the files are there in dist/, but they're not there on the demos.jquerymobie.com server.
[11:22:32] <gseguin> _|Nix|_: no idea
[11:22:41] <arschmitz> uGoMobi: yes but how soon will we be doing another release?
[11:22:51] <_|Nix|_> gseguin: https://github.com/jquery/jquery-mobile/issues/7199
[11:23:06] <gseguin> but once we find out, we can make sure it never happens again by adding a test case in the CasperJS suite
[11:23:09] <_|Nix|_> uGoMobi: Good question! I'm kinda curious myself.
[11:23:10] <arschmitz> im not saying wait forever just until we make sure casper is what we want and not one of the other options gseguin and i discussed last weekend
[11:23:14] <_|Nix|_> uGoMobi: ... including 1.4.3 ...
[11:23:15] <uGoMobi> arschmitz: we can release 1.4.3 in april
[11:23:28] <_|Nix|_> Cool!
[11:23:46] <uGoMobi> 1.5 in June or July I think
[11:23:52] <gseguin> arschmitz: I did modify that spider test to limit it to local and was able to find some 404s
[11:24:21] <gseguin> I don't remember which other thing you asked me to look into?
[11:24:51] <gseguin> I think we should land early as long as it's adding tests and not requiring the codebase to change
[11:25:04] <uGoMobi> arschmitz: I am a bit in doubt
[11:25:16] <uGoMobi> arschmitz: I do understand the point you are making
[11:25:43] <uGoMobi> and I agree we should not do things in a rush and then change it again because we didn't think of everything
[11:26:35] <arschmitz> gseguin: there was the spider link and there was some other things meant for spidering not using casper
[11:26:47] <arschmitz> i dont recall the names right this second but i can get them again
[11:26:51] <uGoMobi> I also think we should always check with the other projects if they ran into similar issues and how they solved it
[11:26:54] <gseguin> but spidering does not solve our problem
[11:26:58] <uGoMobi> before working on our own solution
[11:27:13] <gseguin> what the current tests are asserting is that the page is enhanced
[11:27:28] <gseguin> which has nothing to do with page being available
[11:27:33] <arschmitz> gseguin: not alone unless it catches script errors and 404 assetts
[11:27:51] <arschmitz> gseguin: i dont think thats been the problem though
[11:28:05] <arschmitz> the problem has been 404 pages and assetts and script errors
[11:28:07] <gseguin> but some 404s are actually less severe than the page not enhancing
[11:28:28] <gseguin> and I don't know how you would test that without some kind of headless browser
[11:28:29] <arschmitz> yes but all should be fixed and checked in an ideal setup
[11:28:45] <gseguin> and I don't know other easily scriptable headless browsers
[11:28:52] <gseguin> I'm open to suggestions
[11:29:21] <arschmitz> well one would be the spider link you said your already looing at that checked 404 assetts
[11:29:40] <arschmitz> and i thought script errors though i would have to double check
[11:29:42] <gseguin> arschmitz: you're right but I think this is a lesser priority than addressing un-enhanced pages or missing transitions demos
[11:30:16] <gseguin> arschmitz: that script worked on top of CasperJS
[11:30:16] <arschmitz> gseguin: we have never had an issue with un enhanced pages that was not caused by a 404 asset or script error
[11:30:29] <gseguin> so there is no reason to hold on landing that PR, I think
[11:30:29] <arschmitz> gseguin: i know thats why i suggested it
[11:30:55] <arschmitz> gseguin: i more meant casper vs the others i mentioned but i dont recall their names
[11:31:53] <arschmitz> i was really just hoping that you could look at the other 2 options briefly and see if you think they would better suit our needs
[11:32:10] <arschmitz> suite our needs better that is
[11:32:31] <arschmitz> and if you see no benefit to either of them then we go with casper
[11:32:40] <uGoMobi> is it already clear what our needs exactly are?
[11:32:56] <gseguin> arschmitz: when you remember them, can you add the names to the PR ?
[11:33:22] <gseguin> uGoMobi: We need to be able to render and assert enhancement
[11:33:37] <gseguin> uGoMobi: and crawl to check for missing pages/assets
[11:33:44] <_|Nix|_> gseguin: At a minimum, we need to be able to make sure that there are no JS errors during page load.
[11:33:58] <_|Nix|_> gseguin: Yeah, and no asset 404s.
[11:34:02] <gseguin> CasperJS seems like the perfect tool for the job but I haven't looked into the other options
[11:34:31] <uGoMobi> ok
[11:34:59] <uGoMobi> well, next release won't be very soon so we can look into it a bit more
[11:35:23] <arschmitz> gseguin: flexible.js or node-crawler.js
[11:35:31] <gseguin> ok, arschmitz just comment on that PR once you remember the names of the other tools
[11:35:33] <gseguin> oh
[11:35:34] <gseguin> ok
[11:36:10] <gseguin> node-crawler seems like a no no to me as that's all it does
[11:36:31] <arschmitz> gseguin: or this too https://github.com/seethroughtrees/casperjs-spider
[11:36:49] <arschmitz> gseguin: that seems to do exactly what we want
[11:37:12] <gseguin> same for flexible.js it's just a crawler, it can't assert that some elements are enhanced
[11:38:14] <gseguin> CasperJS seems to have everything we need, I'll push my changes to the casperjs spider
[11:38:47] <arschmitz> gseguin: check out that one on github i just posted too that looks better then the first one i sent
[11:39:29] <uGoMobi> ok let's discuss the other options next week
[11:39:31] <gseguin> awesome! will take a look and add that to the PR
[11:40:04] <arschmitz> gseguin: cool ping me when your ready and ill check it out
[11:40:16] <gseguin> ok
[11:40:30] <uGoMobi> the file structure change PR landed
[11:42:00] <uGoMobi> hmm
[11:42:06] <uGoMobi> if you look here https://github.com/jquery/jquery-mobile/pull/7100
[11:42:34] <uGoMobi> the issue it refers to is a PR
[11:42:50] <uGoMobi> was looking for the original ticket we made for this
[11:43:07] <uGoMobi> I think there are a few more things mentioned in that ticket
[11:43:13] <arschmitz> yes
[11:43:19] <gseguin> oh oops, my bad
[11:43:29] <arschmitz> moving the widgets and the form widgets into the js directory
[11:43:37] <uGoMobi> like the forms/ directory we use for JS but not for CSS
[11:43:44] <uGoMobi> hehe
[11:44:00] <arschmitz> yeah basicly change the directory structure to match ui
[11:44:02] <uGoMobi> exactly
[11:44:11] <arschmitz> to make it as easy as possible to use download builder
[11:44:34] <gseguin> left to do is the same thing for css files
[11:45:48] <uGoMobi> found it https://github.com/jquery/jquery-mobile/issues/5982
[11:46:30] <uGoMobi> gseguin: can I assign that ticket to you?
[11:46:38] <gseguin> yes sir
[11:46:51] <uGoMobi> cool thanks
[11:48:27] <uGoMobi> selectmenu remove dialog / we break multiple selects
[11:49:02] <arschmitz> so yeah if you set native to true on a multiple select its completely broken right now
[11:49:24] <uGoMobi> arschmitz: actually we never supported native multiple selects
[11:49:45] <arschmitz> how can we not support the native menu?
[11:49:47] <uGoMobi> arschmitz: I remember this was reported before and it was closed as not supported
[11:50:03] <uGoMobi> but I am not sure if we are clear about this in the API docs
[11:50:23] <arschmitz> uGoMobi: you should be able to put a plain native multiple select
[11:51:04] <arschmitz> we also need to figure out how to handle this once we remove dialog for custom select
[11:51:19] <_|Nix|_> Yeah, for sure, and we already have code for dealing with multiple values.
[11:51:27] <_|Nix|_> .i.e, comma-separate them.
[11:51:29] <uGoMobi> yeah
[11:51:47] <uGoMobi> https://github.com/jquery/jquery-mobile/issues/4802#issuecomment-7500650
[11:51:53] <uGoMobi> there is an example
[11:52:32] <gseguin> anything else for me? gotta run
[11:52:56] <uGoMobi> gseguin: don't think so
[11:53:14] <agcolom> re: multiple select, I've checked the docs..
[11:53:25] <agcolom> we say: Currently jQuery Mobile only supports the multiple attribute on a select with nativeMenu set to false.
[11:53:48] <uGoMobi> another https://github.com/jquery/jquery-mobile/issues/3946
[11:53:53] <agcolom> but I think that needs a "warning" really
[11:54:08] <uGoMobi> agcolom: time for a yellow box?
[11:54:15] <arschmitz> ok so i guess if you do data-role="none" it will show a normal one
[11:54:17] <agcolom> indeed!
[11:54:19] <arschmitz> so thats ok
[11:54:34] <uGoMobi> arschmitz: yes
[11:54:53] <uGoMobi> arschmitz: maybe this is more something for the new selectmenu widget?
[11:54:55] <agcolom> but we also say: We recommend using a custom menu when multiple selections are required, or when the menu itself must be styled with CSS.
[11:55:09] <agcolom> so recommend is not strong enough!
[11:55:23] <arschmitz> uGoMobi: well we need to figure out what to do about custom fallback
[11:55:43] <uGoMobi> We recommend using a custom menu when the menu itself must be styled with CSS.... duhhh
[11:56:05] <uGoMobi> arschmitz: yeah, that's a tricky one
[11:56:22] <uGoMobi> when we know that we need to fallback it's already too late
[11:56:41] <arschmitz> its not a metter of knowing when
[11:56:47] <arschmitz> its a matter of fall back to what?
[11:57:47] <uGoMobi> arschmitz: we check screen height when opening the custom select, right?
[11:58:09] <arschmitz> uGoMobi: we do now but that will change
[11:58:18] <uGoMobi> arschmitz: but then we already enhanced the select and can't fall back to native
[11:58:35] <uGoMobi> I thought that was the problem
[11:58:38] <arschmitz> uGoMobi: we will check on load / resize / orientation change
[11:58:43] <arschmitz> and change the markup
[11:58:49] <arschmitz> thats easy and works fine
[11:58:54] <uGoMobi> ok
[11:58:59] <arschmitz> the problem is if you have a custom menu
[11:59:04] <arschmitz> that is multiple select
[11:59:07] <arschmitz> and its really long
[11:59:24] <arschmitz> right now it opens a multiple select dialog
[11:59:40] <arschmitz> when dialog is gone what do you fall back to
[11:59:49] <arschmitz> we dont support native multi select
[11:59:58] <uGoMobi> aha
[12:00:05] <uGoMobi> sorry, I was thinking in general
[12:00:12] <_|Nix|_> arschmitz: I don't get it. What's missing for us to support native multiple select?
[12:00:18] <uGoMobi> you were talking about multiple specifically
[12:00:26] <agcolom> so we should think about supporting it then?
[12:00:31] <arschmitz> _|Nix|_: any type of usable style
[12:00:50] <arschmitz> _|Nix|_: http://jsbin.com/ofuhaw/1273/edit
[12:00:55] <uGoMobi> browser style
[12:00:58] <_|Nix|_> arschmitz: Hold on ... in the case of native multiple we only need to worry about what the button looks like. No?
[12:01:03] <_|Nix|_> arschmitz: The browser handles the menu.
[12:01:12] <arschmitz> _|Nix|_: not really
[12:01:24] <uGoMobi> only problem is that not all browsers support it
[12:01:30] <arschmitz> multi selects dont drop down
[12:01:47] <uGoMobi> although that might have changed by now
[12:01:51] <_|Nix|_> arschmitz: Oh, right ... those are the windows listview-like things.
[12:01:53] <agcolom> could we use something like listview?
[12:02:32] <arschmitz> yeah there are things we could do
[12:02:40] <arschmitz> but they all require significant work
[12:02:52] <arschmitz> and we are working towards removing this in favor of ui select menu
[12:03:17] <arschmitz> but dialog being there slows progress on nav work thats really the core of the library
[12:03:21] <_|Nix|_> Hold on. If we use something like listview, then we're not really doing data-native="true"
[12:03:32] <arschmitz> _|Nix|_: that too
[12:03:57] <_|Nix|_> Well, maybe we should restrict the scope of the widget.
[12:04:10] <_|Nix|_> Just because the markup is almost the same, doesn't mean the widget has to be the same.
[12:04:31] <_|Nix|_> After all, the native single select and the native multiselect look very different, too.
[12:04:53] <arschmitz> _|Nix|_: but what do you do for a fall back for custom select
[12:05:15] <uGoMobi> arschmitz: has this discussed by the UI team for the new selectmenu widget?
[12:05:16] <arschmitz> _|Nix|_: this isnt about how to suport native multi select
[12:05:39] <arschmitz> native fallback is not a thing there yet
[12:05:45] <arschmitz> and they dont support multiple at all yet
[12:05:46] <uGoMobi> ok
[12:06:23] <_|Nix|_> selectmenu handles three of the four cases. It handles single/native, single/non-native, and multiple/non-native.
[12:06:31] <_|Nix|_> arschmitz: We might not fall back for multiple.
[12:06:43] <_|Nix|_> arschmitz: It looks ugly. We told you we don't support it. So, *shrug*
[12:06:47] <arschmitz> _|Nix|_: but will that be usable
[12:07:02] <arschmitz> _|Nix|_: no thats the problem we support multiple custom
[12:07:05] <_|Nix|_> arschmitz: That's not our problem.
[12:07:13] <arschmitz> and this is multiple custom
[12:07:26] <_|Nix|_> I'm confused. What is "multiple custom"?>
[12:07:46] <_|Nix|_> Oh, I get it.
[12:07:48] <arschmitz> a multi custom select menu
[12:08:33] <_|Nix|_> arschmitz: Why is it a problem that we support multiple custom?
[12:09:34] <arschmitz> what do you do when there is a long list that would have previously fallen back to a dialog
[12:10:32] <_|Nix|_> arschmitz: In the case of multiple select, you can destroy the widget.
[12:10:44] <_|Nix|_> arschmitz: That's a way of falling back to native.
[12:10:54] <arschmitz> _|Nix|_: but then what then the screen gets resized and it should be custom again?
[12:11:00] <uGoMobi> self-destroy doesn't seem the right solution to me
[12:11:37] <arschmitz> widget suicide
[12:11:41] <uGoMobi> lol
[12:11:44] <_|Nix|_> OK, so not a complete destroy. Just remove any and all markup.
[12:12:13] <_|Nix|_> You go portrait, and Bam! It's custom. You go landscape, and Bam! it's native.
[12:12:32] <arschmitz> not sure im sold lol
[12:12:46] <uGoMobi> we had the dialog fallback for mobile, not for desktop
[12:13:02] <arschmitz> uGoMobi: yeah
[12:13:10] <uGoMobi> and the native select on mobile (if supported) looks good
[12:13:16] <arschmitz> uGoMobi: though it worked the same everywhere
[12:13:31] <uGoMobi> I just looked at that jsbin on android and that's all fine
[12:13:53] <uGoMobi> android 4.2
[12:14:28] <uGoMobi> arschmitz: yes, our widget doesn't make a distinction between desktop/mobile
[12:14:41] <uGoMobi> just saying that fall back to native is fine on mobile
[12:15:17] <uGoMobi> maybe we should hold of from supporting multiple selects for 1.5
[12:15:31] <uGoMobi> what do you think?
[12:15:36] <arschmitz> uGoMobi: but what do we do with them?
[12:15:41] <arschmitz> we already support them
[12:15:51] <uGoMobi> ahh
[12:15:56] <uGoMobi> sorry, you are right
[12:16:05] <_|Nix|_> What was wrong with keeping the dialog again? Too complex?
[12:16:07] <uGoMobi> custom select
[12:16:34] <arschmitz> _|Nix|_: it introduces a lot of complexity to nav that does not even work right half the time
[12:16:41] <uGoMobi> too complex, and a bit strange UI if you ask me
[12:16:53] <arschmitz> and hampers our ability to change how we handle query strings
[12:17:07] <_|Nix|_> arschmitz: OK, but we /are/ planning on support non-deep-linkable URLs, right?
[12:17:23] <arschmitz> yes but thats hash not query string seperate
[12:18:11] <_|Nix|_> arschmitz: Right, fine. The point is that if we have one mechanism, we can make use of it everywhere.
[12:18:22] <uGoMobi> the reason we need a fallback is that the popup becomes buggy when there is a long list inside, right?
[12:18:28] <arschmitz> _|Nix|_: im not sure what your talking about?
[12:18:40] <uGoMobi> is there anything we can improve there, so we don't need a fallback
[12:18:44] <_|Nix|_> arschmitz: I've always been partial to a .pagecontainer( "change", url, { deepLink: false }) myself.
[12:19:14] <_|Nix|_> uGoMobi: Well, the popup just becomes tall, and it's not really styled for such functionality.
[12:19:21] <arschmitz> _|Nix|_: im really not following what your talking about
[12:19:42] <_|Nix|_> arschmitz: What I'm saying is this. We need a way to navigate to thereafter unreachable URLs.
[12:19:45] <_|Nix|_> arschmitz: If we have that,
[12:20:00] <arschmitz> _|Nix|_: what does this have to do with a multi select fallback?
[12:20:01] <_|Nix|_> we can use that with the selectmenu dialog, just as we use it with popup, etc.
[12:20:23] <_|Nix|_> arschmitz: We can keep using a separate page.
[12:20:34] <_|Nix|_> arschmitz: If not a dialog, then a page, or whatever.
[12:21:00] <_|Nix|_> arschmitz: If the nav is systematic, we need not introduce special nav stuff for selectmenu.
[12:21:13] <arschmitz> _|Nix|_: ok i understand
[12:21:16] <_|Nix|_> arschmitz: In fact, even now, the custom select is implemented to make use of the central click routing.
[12:21:39] <_|Nix|_> arschmitz: So, upon deciding whether to be a popup or a dialog, it simply updates its href and its data-rel.
[12:21:45] <uGoMobi> _|Nix|_: if I understand you correctly you mean that if we fix nav issues we can use a page (with dialog = true) as fallback?
[12:21:48] <_|Nix|_> arschmitz: ... and nav does the rest.
[12:21:58] <arschmitz> uGoMobi: yes
[12:22:29] <_|Nix|_> We can keep the fallback-to-some-pagelike-non-deep-linkable-thing.
[12:22:34] <uGoMobi> is it realistic that we can fix it for 1.5?
[12:22:42] <arschmitz> uGoMobi: yes
[12:22:55] <_|Nix|_> Yeah, we just need to concentrate on nav more.
[12:23:07] <arschmitz> _|Nix|_: that was already going to be my concentration
[12:23:14] <arschmitz> _|Nix|_: thats why i was working on select
[12:23:17] <arschmitz>  to remove dialog
[12:23:23] <uGoMobi> right
[12:23:31] <uGoMobi> and start nav refactor
[12:23:36] <arschmitz> uGoMobi: yup
[12:23:53] <arschmitz> but i might need to work the other direction
[12:24:10] <_|Nix|_> arschmitz: We had this idea to have an extension that adds history support to any widget.
[12:24:19] <arschmitz> _|Nix|_: yeah
[12:24:20] <_|Nix|_> arschmitz: That might be another angle.
[12:24:31] <arschmitz> _|Nix|_: they would be essentially the same angle
[12:25:03] <arschmitz> because you need non deeplinkable nav to be able to support backbutton widgets
[12:25:05] <_|Nix|_> arschmitz: In fact, if I may suggest an API: make the URL parameter in pagecontainer.change() optional, and if absent, then the URL is non-deep-linkable.
[12:25:22] <arschmitz> _|Nix|_: il keep that in mind
[12:25:38] <arschmitz> scott_gonzalez: and i had talked about going through the whole nav related api to simplify it
[12:25:46] <_|Nix|_> arschmitz: Or, if present, there can also be a { deepLink: false } setting passed along, so you can go to a perfectly normal external page, while still not allowing deep-linking to it.
[12:26:40] <_|Nix|_> arschmitz: I think .navigate() is already pretty good for purely the history handling, except for the fact that it does not support a non-deep-linkable destination.
[12:27:03] <arschmitz> _|Nix|_: johnbender and i discussed that way back
[12:27:10] <arschmitz> and had a test implementation
[12:27:15] <arschmitz> it just never made it to master
[12:27:22] <_|Nix|_> Cool!
[12:27:32] <_|Nix|_> +1.0e6 :)
[12:27:42] <arschmitz> thats the reason we droped support for push state in ios4 actually
[12:27:53] <uGoMobi> ok, conclusion is we are going to look into not falling back to native for selectmenu
[12:27:55] <arschmitz> it could not be implemented without dropping it
[12:27:57] <_|Nix|_> Yes, I remember. Doing both hashchange and popstate was insane!
[12:28:04] <uGoMobi> long custom selectmenu that is
[12:28:11] <arschmitz> _|Nix|_: yup but that never made it to master
[12:28:19] <uGoMobi> actually this was why I added this comment https://github.com/jquery/api.jquerymobile.com/pull/237#issuecomment-34178283
[12:28:28] <arschmitz> so right now though we dont support it push state still works on ios4
[12:28:31] <uGoMobi> we might want to remove that from the API docs
[12:28:53] <uGoMobi> or rephrase
[12:28:55] <arschmitz> yeah maybe
[12:29:08] <arschmitz> multiple was not something i thought of
[12:29:42] <uGoMobi> what's wrong with FF OS arschmitz?
[12:29:55] <uGoMobi> performance issues?
[12:29:58] <_|Nix|_> arschmitz: Basically, I think, in terms of nav, you don't need to worry about the custom select. It is currently blisfully unaware of nav, only of page sequence events.
[12:30:01] <arschmitz> well you can generally not click on things
[12:30:11] <uGoMobi> oh
[12:30:32] <arschmitz> with about half an hour of practice i can click something 1/20 times maybe
[12:30:33] <uGoMobi> that sounds bad
[12:30:34] <_|Nix|_> arschmitz: Just like iOS. IIRC, on iOS you can only click on anchors.
[12:30:45] <_|Nix|_> arschmitz: Oh, you mean that way?
[12:30:48] <arschmitz> _|Nix|_: no i mean anything including anchors
[12:30:57] <_|Nix|_> arschmitz: Right. Gotcha!
[12:31:00] <_|Nix|_> That's bad.
[12:31:04] <_|Nix|_> Might just be the hardware.
[12:31:07] <arschmitz> yeah its not just in jqm though
[12:31:11] <arschmitz> its any site
[12:31:28] <cgack> I have a FF OS device if you have a test page you'd like me to test out
[12:31:32] <arschmitz> and i swear my old unagi was way better
[12:31:41] <arschmitz> i need to charge it
[12:31:48] <arschmitz> cgack: anything on the internet lol
[12:31:56] <arschmitz> its that bad
[12:32:19] <cgack> ha. I'm betting its your device/build then
[12:32:29] <arschmitz> cgack: thats what i was thinking
[12:32:43] <uGoMobi> arschmitz: did they just gave you the cover? ;-)
[12:32:47] <arschmitz> im pretty sure i remember my old firefox os phone working much better
[12:33:16] <uGoMobi> cgack: do you have anything you want to discuss?
[12:33:36] <cgack> not really, just here to see what is going on and help out where I can
[12:33:51] <arschmitz> cgack: you have a pr waiting for me right?
[12:33:54] <uGoMobi> cgack: it's really good to have you around!
[12:34:42] <cgack> There are a few PRs I sent this week. No rush for me though.
[12:34:53] <arschmitz> cgack: ill make sure i look at them asap
[12:34:57] <cgack> uGoMobi: thanks
[12:35:00] <uGoMobi> cool
[12:35:05] <uGoMobi> agcolom: anything you want to discuss
[12:35:34] <agcolom> nope
[12:35:41] <uGoMobi> agcolom: 4 more days to vote for you, right? :-)
[12:35:47] <agcolom> yes ;-)
[12:35:50] <_|Nix|_> Wha ... ?
[12:35:54] <uGoMobi> Net awards
[12:35:54] <_|Nix|_> vote?
[12:35:57] <_|Nix|_> Oh.
[12:36:02] <_|Nix|_> Where d'you do that?
[12:36:12] <uGoMobi> on internet
[12:36:19] <agcolom> https://thenetawards.com/thanks/developer/anne-gaelle-colom/
[12:36:26] <_|Nix|_> Oh, I thought I had to send a telegram :)
[12:36:39] <uGoMobi> :)
[12:36:43] <uGoMobi> ok, looks like we can wrap up here
[12:36:51] <uGoMobi> thanks all!
[12:36:56] <_|Nix|_> K L8R
[12:36:57] <uGoMobi> see you on -dev
[12:36:58] <agcolom> I even got a tweet from the French minister for SMEs, innovation and digital economy ;-)
[12:37:03] <arschmitz> uGoMobi: i just added one last agenda item
[12:37:04] <uGoMobi> _|Nix|_: want to mute the channel?
[12:37:08] <uGoMobi> oh wait
[12:37:32] <arschmitz> so i ran the release script about 100 times yesterday
[12:37:46] <arschmitz> and its running smooth and has good output with release script updates
[12:37:56] <uGoMobi> ok great
[12:37:57] <arschmitz> and runs smooth in both osx and linux
[12:38:04] <_|Nix|_> Sweet!
[12:38:10] <arschmitz> so next release should be smooth lol
[12:38:25] <_|Nix|_> Murphy, go back to sleep! You didn't hear anything!
[12:38:25] <uGoMobi> live on stage?
[12:38:25] <uGoMobi> ;-)
[12:38:28] <arschmitz> _|Nix|_: im going to remove jsdom
[12:38:41] <_|Nix|_> arschmitz: What's using it?
[12:38:44] <arschmitz> it causes issues on linux
[12:38:49] <arschmitz> _|Nix|_: nothing lol
[12:38:56] <arschmitz> we just had it there for fun
[12:38:59] <uGoMobi> arschmitz _|Nix|_ : let's move this to -dev
[12:39:00] <_|Nix|_> arschmitz: Oh, good. Good riddance, then!
[12:39:13] <_|Nix|_> K, then. Here I go moderating the channel.
[12:39:25] <uGoMobi> _|Nix|_: don't kick yourself ;-)
[12:39:32] <_|Nix|_> :)
[12:40:19] <_|Nix|_> Wha ... ?
