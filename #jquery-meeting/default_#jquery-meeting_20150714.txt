[10:01:25] <sfrisk> Meeting time!
[10:02:14] <sfrisk> ping kristyjy arschmitz arthurvr geekman-rohit
[10:02:22] <arschmitz> hi
[10:02:22] <kristyjy> hello
[10:02:25] <geekman-rohit> hey
[10:02:34] <arthurvr> â€˜Allo!
[10:04:30] <sfrisk> Agenda: https://docs.google.com/spreadsheets/d/1FUdRcAq2d8njs8KAcfQmEyoZL74SXLsLp1rtc7E9z_I/edit?usp=sharing
[10:07:43] <sfrisk> Is marestad around?
[10:08:24] <sfrisk> I wanted to discuss table styling, but I don't see him
[10:08:39] <arschmitz> looks like its been a while since hes been in this channel
[10:08:41] <sfrisk>  yeah
[10:08:44] <arschmitz> at least since this time yesterday
[10:09:02] <sfrisk> I'll see if I can grab him on css-chassis at some point and get an update
[10:11:49] <sfrisk> since I know he's been busy, but this PR has been waiting for awhile
[10:12:07] <sfrisk> Okay then, let's go to kristyjy and the Media Mixin
[10:12:16] <sfrisk> https://github.com/jquery/css-chassis/pull/94
[10:12:24] <arschmitz> So iv been meaning to comment there
[10:12:46] <arschmitz> marastad changed my mind on this before disappearing
[10:13:19] <kristyjy> so I talked with geekman this weekend we had some ideas on some updates for the mixin to allow for better controls for the builds without media queries
[10:13:28] <kristyjy> any feedback anyone else has would be great :)
[10:13:34] <geekman-rohit> rohit* please :)
[10:13:39] <kristyjy> sorry
[10:13:51] <arschmitz> so i dont think we need or want a mixin for passing specific sizes
[10:14:01] <arschmitz> we should really only have like 5 breakpoins MAX
[10:14:30] <arschmitz> so allowing arbitrary numbers seems like a bad idea and can only lead to typos and having to remember numbers
[10:14:44] <geekman-rohit> these breakpoints will be predefined?
[10:14:44] <kristyjy> in the case of the framework itself I agree with you but for users they need a flexible way of using media quries
[10:15:00] <geekman-rohit> why would users use our mixin?
[10:15:10] <geekman-rohit> (kristyjy)
[10:15:31] <kristyjy> I would if I wanted to separate style sheets one for ie8 and one for modern browsers
[10:15:31] <arschmitz> i agree this is not something intended for users
[10:15:48] <geekman-rohit> but those would be ur stylesheets
[10:16:01] <geekman-rohit> not chassis builds :)
[10:16:12] <arschmitz> i like what flexboxgrid does
[10:16:16] <arschmitz> and they have named ones
[10:16:24] <arschmitz> so its easier to use when building components
[10:16:26] <arschmitz> https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css
[10:16:50] <arschmitz> you only remember sm med lg xl etc
[10:16:58] <arschmitz> not 320 460 580
[10:17:00] <geekman-rohit> yep cool
[10:17:24] <arschmitz> and for people using in a custom build they can use them too and easy to use and remember
[10:17:26] <geekman-rohit> but then we could use kristys mixin
[10:17:39] <geekman-rohit> and simply pass mq(sm med)
[10:17:43] <geekman-rohit> something like that
[10:17:51] <arschmitz> if you need something more complex there are thousands of good media querie mixins out there you could include that are VERY robust
[10:18:31] <geekman-rohit> point taken
[10:18:53] <kristyjy> yeah that makes sense. I was going for flexibility but I can do it that way just as easy
[10:19:14] <arschmitz> like we could make our own chassis MQ mixin
[10:19:24] <arschmitz> but i kinda feel like it should be a seperate thing on its own
[10:19:37] <arschmitz> and chassis proper should only include what it uses
[10:19:57] <arschmitz>  / needs
[10:20:39] <arschmitz> in which case we could really go to town on features and flexability
[10:21:01] <arschmitz> with out worrying about bloating chassis it self
[10:21:27] <arschmitz> it would work with out goal of supporting more customized builds too
[10:21:50] <geekman-rohit> what would happen if media queries are turned off?
[10:22:06] <arschmitz> geekman-rohit: in what case exactly?
[10:22:11] <geekman-rohit> what part of scss is used and what is not, how do we identufy?
[10:22:27] <geekman-rohit> I mean we have an option of removing resopoonsive part of chassis
[10:22:37] <geekman-rohit> how do we specify what part to removr
[10:22:58] <arschmitz> we could still use a mixin for  that based on a variable sfrisk showed a POC for how to do that
[10:23:14] <arschmitz> so in your chassis variable file you just put responsive: false
[10:23:23] <arschmitz> or whatever
[10:23:47] <arschmitz> though on that note im kinda back to agreeing with marastad that this is not super important any more
[10:23:56] <geekman-rohit> i mean what actually happens if responsive is false
[10:24:16] <arschmitz> things like the new ios split screen make it so there is almost no enviroment what you would not want it
[10:24:25] <geekman-rohit> even i dont understand
[10:24:39] <geekman-rohit> i mean why would anyone want a website thats not responsive?
[10:24:50] <geekman-rohit> without any extra effort
[10:24:52] <arschmitz> well in the past you could be making a hybrid app
[10:25:06] <arschmitz> in which case its just bloat you will only ever apply one style
[10:25:09] <sfrisk> A case I can think of is a complicated desktop interface that is frankly too complex to easily go to mobile
[10:25:36] <geekman-rohit> yes so we turn of responsive :)
[10:25:48] <arschmitz> sfrisk: yup but in that case who cares you dont support mobile anyway you should probably have a redirect
[10:25:58] <geekman-rohit> exactly
[10:25:58] <sfrisk> yeah
[10:26:03] <arschmitz> and bloat is not a concern because desktops can handle it
[10:26:11] <geekman-rohit> chassis min will be small anyways
[10:26:17] <geekman-rohit> we are checking performance
[10:26:22] <arschmitz> where if you have mobile only you want to strip all the bytes you can
[10:26:34] <geekman-rohit> true
[10:26:52] <arschmitz> so my argument was things like an ios only hybrid app
[10:27:00] <arschmitz> that is iphone only even
[10:27:19] <geekman-rohit> what my concern was the mixin should have some way of identifying what part of code is not necessary for this build
[10:27:27] <arschmitz> but now with everything from iphone 4 size to 6+ and ios split screen
[10:27:41] <arschmitz> its hard to even make a case for that
[10:27:57] <arschmitz> so what im saying is i dont nessasarrily think we need to provide a way to turn it off
[10:28:28] <sfrisk> yay!
[10:28:33] <sfrisk> simplification of life!
[10:28:37] <arschmitz> in sfrisk case you dont support mobile to begin with so its not expected to deal with that
[10:28:48] <arschmitz> so turning off does not matter
[10:29:14] <arschmitz> this does mean we need to decide mobile first or desktop first
[10:29:38] <geekman-rohit> since we are a css framework for ui libs
[10:30:41] <geekman-rohit> how do most ui libs go these days ? about that
[10:30:48] <arschmitz> its mixed
[10:30:50] <geekman-rohit> jquery-mobile / jquery-ui
[10:30:58] <arschmitz> mobile is mobile first
[10:31:02] <arschmitz> ui is not responsive
[10:31:11] <sfrisk> I personally prefer mobile first
[10:31:15] <geekman-rohit> me too
[10:31:26] <arschmitz> its been the standard
[10:31:37] <arschmitz> but iv seen it swaying a little
[10:31:43] <arschmitz> and seeing more desktop first
[10:31:56] <arschmitz> but i still think mobile first is probably better
[10:32:31] <arschmitz> i think mobile first makes you think more critically about your choices
[10:32:57] <sfrisk> exactly
[10:33:05] <sfrisk> it forces us to constantly think about performance
[10:33:19] <arschmitz> well and just wise use of screen space
[10:43:06] <sfrisk> yup
[10:43:19] <kristyjy> yes I agree mobile first (sorry I now get pulled away for short meetings at 1:30)
[10:43:55] <sfrisk> Okay, so we've decided the need to get rid of responsive styles is not really needed at this point, correct? or did I misread that?
[10:44:36] <arschmitz> thats my opinion
[10:44:53] <geekman-rohit> i agree to that too
[10:45:10] <geekman-rohit> and marestad agreed last I remembered :)
[10:45:53] <sfrisk> okay
[10:46:07] <sfrisk> (also peeps in the meeting, add your name to the attending list)
[10:46:09] <arschmitz> yeah hes the one that convinced me
[10:46:45] <sfrisk> arthurvr, I know you were planning on adding node 0.12 support, how's that going?
[10:52:04] <sfrisk> okay, geekman-rohit, I know you were working on a meter/progress/div
[10:52:07] <sfrisk> how's that going?
[10:52:23] <geekman-rohit> i have a codepen going
[10:52:36] <geekman-rohit> http://codepen.io/geekman-rohit/pen/xGjjmK
[10:52:49] <geekman-rohit> trying to figure out how they should look visually
[10:53:05] <geekman-rohit> welcome to suggestions!
[10:53:37] <geekman-rohit> especially about how they should look different (meter and progress) should there be some significant visual difference
[10:54:24] <arschmitz> geekman-rohit: no
[10:54:33] <arschmitz> look at that native styles where supported
[10:54:37] <arschmitz> very similar
[10:54:51] <geekman-rohit> true
[10:55:10] <geekman-rohit> i just have meters slightly smaller than progress so far
[10:55:25] <geekman-rohit> or should i not worry about that either and keep them same ?
[10:55:25] <arschmitz> the difference is mostly conceptual
[10:55:29] <geekman-rohit> agreed
[10:55:44] <arschmitz> also progress has the concept of indetermanant
[10:56:03] <arschmitz> i dont believe meters do
[10:57:23] <sfrisk> I think you should have them be the same size
[10:57:44] <sfrisk> also looks like meters have a rounder corner compared progress
[10:57:45] <geekman-rohit> yeah the user can change height easily anyways
[10:58:01] <geekman-rohit> oh i did that to take suggestions
[10:58:08] <geekman-rohit> do we have rounded corners or not?
[10:58:34] <arschmitz> actually by default progress is much smaller
[10:58:49] <arschmitz> much much smaller in height and longer
[10:59:11] <geekman-rohit> and meter in chrome has a weird gradient
[10:59:19] <arschmitz> yup
[10:59:43] <geekman-rohit> we could have them both at 20px
[10:59:47] <geekman-rohit> user can easily change
[11:03:41] <arschmitz> personally i would keep them similar to how they are but make them "chassis ish " lol
[11:03:48] <arschmitz> like we do with buttons or anything else
[11:04:42] <geekman-rohit> i am waiting for some examples there
[11:04:48] <geekman-rohit> they have to be chassis-ish
[11:05:14] <arschmitz> lol yeah
[11:05:20] <geekman-rohit> and flat vs rounded?
[11:05:27] <geekman-rohit> what are we going to prefer?
[11:05:34] <geekman-rohit> for buttons/ progress/ inputs
[11:06:03] <sfrisk> I think slight rounded
[11:06:12] <sfrisk> I'll get some buttons out this week
[11:06:14] <arschmitz> sfrisk: how about those buttons :-p
[11:06:18] <geekman-rohit> i like flat :(
[11:06:43] <sfrisk> actually isn't material design flat now?
[11:06:46] <geekman-rohit> removing border radius is first thing i do with bootstrap
[11:06:48] <geekman-rohit> yep
[11:06:49] <geekman-rohit> it is
[11:07:07] <sfrisk> might go with that, since that seems to be overall design direction lately with the web
[11:07:12] <geekman-rohit> but material design is not concerned of that
[11:07:21] <geekman-rohit> its more about giving meaning to styles
[11:07:36] <sfrisk> true, but it's still the style guide of most google products in the future
[11:07:55] <geekman-rohit> yep and I love those polymer paper elements
[11:11:16] <geekman-rohit> i need to grab some supper, see ya all later
[11:11:43] <sfrisk> see you later
[11:11:51] <sfrisk> I think this a good place to call the meeting for today
[11:12:24] <sfrisk> although if a discussion could happen in css-chassis like this afternoon or something on jsass? I would like to pull that in soon
[11:12:32] <sfrisk> I just really have to get back to work right now
[11:16:47] <arschmitz> im around
