[12:01:21] <timmywil> gibson042, DaveMethvin, m_gol, markelog meeting
[12:01:22] <timmywil> https://docs.google.com/document/d/1BadwSO6Sn91RBfr05s77r81ncEi0oMBJ5mZS-k215vg/edit#
[12:01:26] <markelog> hey-hey
[12:01:34] <gibson042> hi
[12:01:37] <timmywil> I've got a work meeting I'm missing right now, so this will be quick.
[12:01:58] <timmywil> first up, https://github.com/jquery/jquery/pull/2627
[12:02:12] <timmywil> I am in favor
[12:02:47] <markelog> what methods are we talking about?
[12:02:51] <markelog> only jQuery.type?
[12:03:06] <timmywil> I was about to ask :)
[12:03:20] <timmywil> def type, right?
[12:04:30] <timmywil> as long as we're consistent across browsers, I'm also in favor of the other ones
[12:04:38] <markelog> as Dave suggest, it seems we need to find all methods that are work with type sniffing
[12:04:52] <markelog> it seems there is at least three of them
[12:05:14] <timmywil> I see isPlainObject, isEmptyObject, and isNumber specifically
[12:05:43] <markelog> so four
[12:06:14] <markelog> i wonder how shims are implemented
[12:06:15] <timmywil> right, but according to m_gol's tests, it looks like we're already consistent. Do we need changes for anything but type?
[12:06:38] <markelog> if shims are pretty close, we should be fine
[12:07:17] <timmywil> I'm not sure we need to worry about shims. They should be mimicking native behavior as close as they can. If they don't match native behavior, that's their problem to fix.
[12:07:46] <markelog> what if it is not possible to fix?
[12:07:55] <markelog> anyhow
[12:08:08] <timmywil> then we can rethink, but it may be moot
[12:08:09] <markelog> i think we should worry about it only if problem present itself :-)
[12:08:11] <timmywil> maybe they're fine
[12:08:19] <timmywil> right
[12:08:23] <markelog> but it would good move to check in it
[12:08:32] <timmywil> fair enough
[12:08:47] <markelog> plus we can add tests for those methods
[12:08:52] <timmywil> so that would seem to be the next step
[12:08:55] <markelog> like m_gol suggest
[12:09:10] <markelog> but i wouldn't add babel dep only to test that shim )
[12:09:29] <markelog> since it is big
[12:09:38] <DaveMethvin> sorry, missed the beginning
[12:09:52] <timmywil> no, I'm thinking a one-time test just to check if workarounds are needed. If babel behaves the same way as native, we can just test native.
[12:09:57] <markelog> talking about https://github.com/jquery/jquery/pull/2627
[12:10:07] <markelog> yep
[12:10:48] <markelog> seems as an easy change, if there is only four methods we should be checking there
[12:11:11] <m_gol> present, sorry
[12:11:35] <timmywil> if anyone thinks of more, please add them to a comment
[12:11:48] <markelog> m_gol: talking about https://github.com/jquery/jquery/pull/2627
[12:11:56] <DaveMethvin> yeah for Symbol I'm fine with having those 4 handle it
[12:12:01] <m_gol> markelog: babel is already added
[12:12:07] <m_gol> for iteration testing
[12:12:09] <DaveMethvin> but no $(Symbol) please!! :)
[12:12:11] <m_gol> but only on Node side
[12:12:15] <timmywil> oh yea, we check iteration
[12:12:23] <m_gol> which doesn't work with jsdom >=6 btw
[12:12:25] <timmywil> DaveMethvin: agreed, that's invalid input
[12:12:37] <m_gol> because it requires Symbol & I'm deleting global.Symbol to replace it with a shim
[12:12:43] <m_gol> so I need to find another way to test it
[12:12:52] <m_gol> it might require a separate test module that's transpiled
[12:13:04] <m_gol> and if that's done, we might as well do testing of transpiled symbols
[12:13:29] <timmywil> well, let's see if we need to test babel first
[12:13:35] <markelog_> sorry, power cut
[12:13:44] <m_gol> basically, this test won't work with jsdom >=6 https://github.com/jquery/jquery/blob/master/test/node_smoke_tests/iterable_with_symbol_polyfill.js
[12:14:03] <m_gol> and changing the approach requires some work
[12:14:15] <timmywil> we may not need any extra node smoke tests for this
[12:14:31] <markelog_> wow, did i miss something? :-)
[12:14:35] <m_gol> I'm saying that this existing test prevents us from updating to jsdom >=6
[12:14:44] <m_gol> so this needs to get changed anyway
[12:14:52] <timmywil> oh
[12:15:06] <m_gol> probably to testing transpiled output in real browsers and not Node+jsdom
[12:15:26] <timmywil> I see
[12:15:26] <m_gol> and when that's done, we might as well test transpiled Symbol, the additional effort will be tiny
[12:16:00] <timmywil> well, I also want to test native symbol if it's available, not just transpiled es5
[12:16:31] <timmywil> but I see what you're saying
[12:16:43] <m_gol> testing native will be easy
[12:16:49] <timmywil> and I'd even prefer real browsers to node+jsdom
[12:16:51] <m_gol> it doesn't even require eval tricks
[12:17:07] <timmywil> cool, I think we're on the same page
[12:17:26] <m_gol> like https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/test/unit/core.js#L1594-L1612
[12:17:49] <m_gol> yeah, this "delete global.Symbol" test was a hack, really ;)
[12:17:56] <m_gol> since it was simple to do this way
[12:18:08] <m_gol> but it worked only as long as jsdom didn't depend on Symbols so heavily
[12:18:09] <timmywil> makes sense
[12:18:37] <timmywil> So, https://github.com/jquery/jquery/pull/2623 getting proper window for getStyles
[12:19:12] <timmywil> this is weird to me
[12:19:13] <markelog_> would like some time to checking this out
[12:19:14] <DaveMethvin> more discussion in https://github.com/jquery/jquery/issues/2622
[12:19:32] <markelog_> since i proposed original fix for it
[12:19:40] <DaveMethvin> defaultView should have gotten us the right window?
[12:19:52] <DaveMethvin> anyway it does seem kind of strange
[12:20:01] <timmywil> markelog_: ok, we can wait
[12:20:19] <timmywil> I guess we need more investigation anyway
[12:20:43] <markelog_> maybe ask help form mozilla ppl
[12:21:02] <markelog_> since iframe styles was always flacky in ff
[12:21:10] <markelog_> flaky
[12:21:22] <DaveMethvin> miketaylr can probably get us to a good resource
[12:21:36] <markelog_> yeah, or boris :-)
[12:21:57] <DaveMethvin> timmywil: i can take https://github.com/jquery/jquery/issues/2193 off your hands if you want, i should have time this week to clean up my open prs as well
[12:22:00] <timmywil> https://github.com/jquery/sizzle/pull/355 Lastly, I'd just like to get more eyes on this Sizzle PR. It's a nice speed-up, but it's changing something that's been there for a long time, so tell me if you think of an edge case this might break. Otherwise, I'll land today.
[12:22:14] <timmywil> DaveMethvin: sure! that'd be great
[12:22:38] <timmywil> Anything else?
[12:22:52] <markelog_> how this pr came to light?
[12:22:53] <timmywil> markelog_, m_gol ?
[12:23:12] <timmywil> gibson042 found it
[12:23:16] <markelog_> gibson042: don't forget about https://github.com/jquery/sizzle/issues/356
[12:23:29] <m_gol> markelog_: I believe https://github.com/jquery/sizzle/issues/337
[12:23:31] <markelog_> was this because of recent discussion?
[12:23:49] <markelog_> oh, cool
[12:23:51] <markelog_> okay
[12:24:12] <gibson042> I don't remember if it was https://github.com/jquery/sizzle/issues/337 , I just had some occasion to be looking at that block and made a mental connection
[12:24:15] <timmywil> I'm not sure what preempted it, but gibson042 opened this issue (https://github.com/jquery/sizzle/issues/354) and I got curious
[12:24:36] <m_gol> nothing else from me this week; just waiting for a Sizzle release :)
[12:24:36] <gibson042> because the browsers specifically optimize selectors starting with id tests, but not attribute
[12:24:52] <m_gol> and for BrowserStack to make Safari 7.0 be Safari 7.0, not 7.1
[12:24:58] <markelog_> also, i didn't have time to start implementing ua-testing
[12:25:08] <markelog_> will hoping to get something done tomorrow
[12:25:32] <markelog_> that's cool, shows that there is always things to improve :-)
[12:26:10] <markelog_> is there a perf suite for that pull
[12:26:10] <markelog_> ?
[12:26:28] <timmywil> I don't have a link. I just used the Sizzle speed tests.
[12:26:41] <markelog_> oh, okay then
[12:26:44] <gibson042> it's an area we can improve, but something is better than nothing
[12:27:02] <markelog_> gibson042: that is the quote :-)
[12:27:16] <timmywil> it's worth noting that our qsa path is the fastest of all the selector engines overall
[12:27:26] <timmywil> not all selectors, but overall
[12:27:51] <markelog_> so we're the best!
[12:28:13] <markelog_> it is always worth noting stuff like that )
[12:28:19] <timmywil> lol
[12:28:27] <timmywil> ok, thanks everybody. Need to run to a meeting
[12:28:34] <markelog_> see ya!
[12:28:36] <timmywil> ping me in -dev if you need me
[12:28:38] <timmywil> thanks
