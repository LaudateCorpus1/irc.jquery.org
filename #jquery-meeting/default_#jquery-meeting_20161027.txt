[12:02:25] <scott_gonzalez> arschmitz bethge jzaefferer
[12:02:44] <arschmitz> hey
[12:02:58] <bethge> Hi
[12:03:03] <scott_gonzalez> hey
[12:03:17] <scott_gonzalez> So we had a little progress on tests this week.
[12:03:44] <scott_gonzalez> I partially fixed the W3C tests being out of date: https://github.com/jquery/PEP/issues/314
[12:03:50] <bethge> Yeah nice!
[12:03:58] <scott_gonzalez> I updated us to the point where we can just pull in updates again: https://github.com/jquery/PEP/pull/317
[12:04:11] <scott_gonzalez> But I stopped there because at this point, pulling in more updates requires modifying our test automation.
[12:04:24] <scott_gonzalez> Since some of the updates are test changes, not just new tests.
[12:04:33] <scott_gonzalez> The changes up to that point were all safe to pull in.
[12:04:57] <scott_gonzalez> I think we should finish that as the next step in tests.
[12:05:04] <arschmitz> sounds good
[12:05:10] <scott_gonzalez> Since any other work we do on tests right now might become moot based on the updates.
[12:05:26] <bethge> Good point.
[12:05:26] <arschmitz> right makes sense
[12:06:16] <scott_gonzalez> This weekend is super busy for me, so I probably won't have time for that in the next few days.
[12:06:31] <bethge> I can get working on that.
[12:06:41] <scott_gonzalez> bethge updated ChromeDriver to fix an issue with the latest version of Chrome: https://github.com/jquery/PEP/pull/319
[12:06:50] <scott_gonzalez> Thanks bethge. That'd be great.
[12:07:21] <arschmitz> awesome
[12:07:43] <bethge> I am afraid 54 Chrome will be the last Chrome version we can use for testing. ;-)
[12:07:45] <scott_gonzalez> I've been handling this by just running `git log <current-sha-in-pep>...master~<some value> -- pointerevents` to get a small list of commits to look through.
[12:07:56] <scott_gonzalez> Then I check the diff on each individual commit and see what changed.
[12:08:10] <scott_gonzalez> Yeah, we'll need to figure out how to handle our tests after that.
[12:09:23] <bethge> I was keen on using Chrome's touchEmulation for touch-based tests, not sure if the other browser drivers have this capability
[12:10:45] <bethge> I was able make progress on a "prototype" for parsing the test files and adding the touch-action attribute according the css rules in that file.
[12:11:25] <bethge> I used cheeriojs and cssjs . I am not sure about licensing, are those ok to use? https://github.com/cheeriojs/cheerio
[12:12:01] <bethge> (https://github.com/reworkcss/css)
[12:12:21] <scott_gonzalez> yup
[12:12:24] <scott_gonzalez> Those are both fine.
[12:13:37] <bethge> Sweet. I will look into getting this to work properly once the tests are up to date.
[12:13:55] <scott_gonzalez> sounds good
[12:14:45] <bethge> Though touch-based testing is still iffy. And without having touch-based environments, there isn't much of the touch-action property we can test. :-/
[12:16:03] <scott_gonzalez> Well, we'll do what we can with automated tests, and some of it will just have to be manual.
[12:16:03] <bethge> But, one step at a time. :-)
[12:16:19] <bethge> Yeah
[12:17:44] <scott_gonzalez> Anything else to discuss today?
[12:18:34] <bethge> All good from my side.
[12:19:54] <scott_gonzalez> I guess that's all for today.
[12:19:59] <scott_gonzalez> Thanks everyone.
