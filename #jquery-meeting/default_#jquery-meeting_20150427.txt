[09:00:38] <timmywil> markelog, m_gol, arthurvr Hello!
[09:00:42] <m_gol> hi
[09:00:43] <arthurvr> hey everybody
[09:00:43] <timmywil> and gibson042
[09:00:51] <markelog> hey-hey
[09:01:07] <timmywil> DaveMethvin will be a little late today
[09:01:36] <timmywil> So, last call before I unleash the patch today
[09:03:21] <timmywil> For future reference, just to help me work out the agendas, just label any issue/PR you'd like to review in a meeting with "Needs Review"
[09:04:11] <timmywil> We've got a few excellent PRs from m_gol
[09:04:19] <timmywil> they all look good to me
[09:05:17] <timmywil> https://github.com/jquery/jquery/pull/2232 https://github.com/jquery/jquery/pull/2233 https://github.com/jquery/jquery/pull/2234
[09:05:28] <timmywil> I think we can land these
[09:06:11] <timmywil> There's also https://github.com/jquery/jquery/pull/2183 (native xhr)
[09:06:16] <markelog> is there point for https://github.com/jquery/jquery/pull/2232
[09:06:23] <markelog> does it fixes the problem?
[09:06:40] <m_gol> markelog: not sure
[09:07:04] <m_gol> I don't think there's a way to tell if sth fixes a problem here before trying, I feel it might not be enough as I indicated in a comment
[09:07:06] <DaveMethvin> hey guys
[09:07:11] <m_gol> hi Dave
[09:07:19] <markelog> others look good
[09:07:43] <timmywil> m_gol, markelog: yea, but I figure giving Android 2.3 more room won't hurt
[09:08:33] <timmywil> it seems like it would be difficult to provide a perfect fix
[09:08:34] <markelog> might be worth discussing it bs?
[09:08:45] <markelog> *it with bs
[09:08:48] <timmywil> lol
[09:08:51] <markelog> )
[09:09:01] <m_gol> good idea
[09:09:08] <timmywil> good point
[09:09:14] <timmywil> but maybe both?
[09:09:15] <markelog> jzaefferer: could you pich in?
[09:09:18] <m_gol> next time it'll get all red on Android 2.3 I won't restart jobs but will ask BS about specific ones
[09:09:32] <m_gol> they have logs for this stuff so they may know
[09:09:50] <jzaefferer> pinch in?
[09:09:58] <timmywil> pinch one
[09:10:12] * timmywil laughs at himself
[09:10:19] <markelog> pitch in )
[09:10:33] <jzaefferer> into what?
[09:10:41] <markelog> see https://github.com/jquery/jquery/pull/2232
[09:10:43] <timmywil> jzaefferer: referring to how slow Android 2.3 is in browserstack
[09:10:46] <markelog> and above discussion
[09:11:07] <timmywil> jzaefferer: does UI give 2.3 a wide berth with a long timeout?
[09:11:16] <m_gol> generally, every Android 2.3 run gets half red, I have to restart jobs 1-3 times before it settles
[09:11:42] <jzaefferer> timmywil: we don't test UI on mobile browsers, that helps
[09:11:48] <timmywil> ah
[09:11:55] <timmywil> what about arschmitz?
[09:11:55] <m_gol> :P
[09:12:00] <markelog> we suckers for mobile
[09:12:02] <markelog> )
[09:12:03] <jzaefferer> UA specific timeouts seem odd
[09:12:06] <arschmitz> huh what im here lol
[09:12:16] <jzaefferer> afaik mobile just runs tests on phantom (which takes long enough)
[09:12:17] <m_gol> Mobile is tested on mobiles manually, right? automatically just on PhantomJS?
[09:12:22] <arschmitz> yes
[09:12:24] <jzaefferer> and arschmitz runs everything manually in his lab
[09:12:24] <timmywil> arschmitz: does mobile test in 2.3, and if so, do you use a long timeout
[09:12:32] <m_gol> so, Core is alone here
[09:12:41] <timmywil> ah
[09:12:45] <timmywil> well then
[09:12:49] <arschmitz> we do test on 2.3 and we use super long timeouts in general
[09:12:54] <arschmitz> not automated though
[09:12:56] <jzaefferer> ho many Core bugs have you found by running tests on 2.3?
[09:12:57] <m_gol> life without this Android 2.3 mammoth would be so easier...
[09:13:02] <arschmitz> none
[09:13:07] <arschmitz> personally
[09:13:10] <jzaefferer> *how many
[09:13:24] <markelog> well, generally, we can do something drastic here
[09:13:27] <timmywil> I think there are several
[09:13:38] <arschmitz> as far as i know we have never found a bug in core on on android 2.3 as long as i have been around
[09:13:43] <m_gol> jzaefferer: we found a couple, I don't know an exact number
[09:13:45] <markelog> mobile tests on mobile browsers and extensively use our api
[09:13:57] <DaveMethvin> the .apply(nodelist ...) breaks on that one
[09:13:58] <m_gol> markelog: not extensively enough
[09:14:00] <markelog> so we can just fully rely on mobile team
[09:14:09] <m_gol> I don't think this is a good idea
[09:14:09] <timmywil> DaveMethvin: oh yea
[09:14:28] <arschmitz> also
[09:14:31] <markelog> i don't remember any issues with 2.3 submitted by the real user
[09:14:33] <m_gol> Mobile, as every library uses specific code style which means they don't hit certain edge cases; other projects will hit them
[09:14:39] <arschmitz> we should have automated testing on mobile within the next 2 months
[09:15:05] <timmywil> I think we should just extend the timeout, but maybe just extend it for all browsers?
[09:15:09] <markelog> m_gol: if people don't hit those edge cases, why should we bother?
[09:15:15] <jzaefferer> Consider not running automated tests on 2.3 at all, only manually before releases or whenever necessary
[09:15:21] <m_gol> markelog: but we do have reliableMarginRight workaround that takes ~160 bytes gzipped :P
[09:15:32] <markelog> jzaefferer: yeah, that is what i'm suggesting
[09:15:42] <markelog> m_gol: so?
[09:15:46] <m_gol> jzaefferer: we run them on periodic jobs during the night, that's better than manually before releases
[09:16:00] <markelog> although, not suggesting, just worth discussing
[09:16:09] <arschmitz> while you wont hit edge cases just relying on mobile if you combine that with manual tests before releases it seems like it should be fine
[09:16:09] <timmywil> I'd prefer it be automated
[09:16:13] <markelog> not sure about it
[09:16:15] <jzaefferer> if those periodic jobs only work by manually resetting them multiple times, they're not automatic and pretty worthless
[09:16:32] <timmywil> also, even if we tested manually, we still might have to increase the timeout
[09:16:42] <markelog> arschmitz: not everybody has your awesome setup! )
[09:16:55] <m_gol> jzaefferer: it's way less work to restart those jobs than run anything on Android 2.3 manually
[09:17:00] <arschmitz> yes but since im a contractor its pretty easy to say hey alex test this too :-)
[09:17:11] <markelog> oohh!
[09:17:22] <arschmitz> and running them "manually" is really not manual for me
[09:17:33] <arschmitz> all my phones / tablets are controled by chrome on my laptop
[09:17:35] <timmywil> My point is, if increasing the timeout helps even a little bit, it's worth it.
[09:17:57] <arschmitz> timmywil: just for the record due to travis issues we have been forced to increase them everywhere recently on mobile
[09:18:10] <arschmitz> so it happens
[09:18:13] <markelog> timmywil: i'd say if we continue to have this problem, it might worth to think about it
[09:18:32] <markelog> timmywil: we fight with 2.3 for a long time
[09:18:43] <markelog> with those automation
[09:18:49] <timmywil> markelog: agreed, but I think it's worth trying
[09:19:14] <markelog> for example
[09:19:14] <markelog> https://github.com/jquery/sizzle/issues/314
[09:19:25] <m_gol> this may be controversial but I'm quite happy with our current Android 2.3 setup
[09:19:30] <markelog> and a lot of issues created by the m_gol
[09:19:33] <jzaefferer> Btw. I don't have a problem with longer timeouts. I wouldn't even bother to make them UA-specific, just increase it in general. Won't make a difference where the timeout isn't reached
[09:19:43] <m_gol> sure, I have to restart those jobs, it doesn't require massive amount of my time
[09:19:48] <timmywil> jzaefferer: +1
[09:20:02] <m_gol> but I see the board, I don't have to run tests manually, record the results, remember what changed etc.
[09:20:05] <arschmitz> jzaefferer: yeah thats what i was getting at if a higher timeout helps just do it
[09:20:29] <m_gol> jzaefferer: ok, that makes sense
[09:20:31] <arschmitz> we did it on mobile and in general it makes little difference because tests dont time out, however when it is slow it can prevent a fail
[09:20:55] <timmywil> cool
[09:21:07] <timmywil> ok, moving on to https://github.com/jquery/jquery/pull/2183
[09:21:12] <arschmitz> timmywil: we did this at the same time assome changes to improve the speed
[09:21:16] <arschmitz> and i tracked averages
[09:21:27] <arschmitz> increasing the timeout made no difference in the average run time
[09:21:58] <timmywil> yea, one long run is better than having to do it again
[09:22:37] <arschmitz> yeah and its only the one run and if it fails it fails the extra 20 seconds or whatever does not matter at that point
[09:22:40] <timmywil> for 2183, there's some concern about adding a dependency on a website for the PATCH response
[09:23:06] <m_gol> markelog wants to create stubs that recreate browser bugs, I consider it too risky, I'd rather test in real browsers
[09:23:32] <markelog> i commented about it extensively
[09:24:01] <timmywil> yea, there's a lot there
[09:24:06] <markelog> yeah
[09:24:20] <markelog> but i suggest to read it all )
[09:24:54] <timmywil> ok, sorry I haven't gone through it all. It seems we don't have an agreement yet, though.
[09:24:58] <m_gol> yup
[09:25:05] <markelog> in my opinion, there is no real diff to use stubs or real response
[09:25:23] <m_gol> maybe everyone should read the discussion, form an opinion and we can discuss it next time then?
[09:25:25] <markelog> but i guess we all agree that is bad to introduce third-part dep
[09:25:32] <timmywil> m_gol: sounds good
[09:25:34] <m_gol> yes, I'd prefer not to as well
[09:25:35] <markelog> and require internet connection
[09:25:39] <DaveMethvin> yeah it would be nice to avoid
[09:25:42] <timmywil> yea, I agree with that part
[09:25:44] <m_gol> it's just a lesser evil to me ;)
[09:26:04] <timmywil> ok, tabling for next week
[09:26:34] <timmywil> We do seem to have agreement on https://github.com/jquery/jquery/pull/2206 however
[09:26:41] <markelog> issue by itself  about philosophy of testing, so no wrong answer i guess
[09:26:53] <markelog> works for me
[09:26:56] <timmywil> markelog: yea, it's just about team preference
[09:26:57] <m_gol> :-)
[09:27:10] <markelog> very robust code, actually
[09:27:21] <markelog> although Richard talks about really weird use-cases )
[09:27:26] <m_gol> yup, I'm fine with changing to stubs if most prefers markelog's solution, I'm just cautious
[09:27:47] <timmywil> gibson042: was there any more you wanted to do for the html insertion point/no-content replaceWith?
[09:27:53] <markelog> but code is clearer and cooler )
[09:28:02] <gibson042> no, I think it's all set
[09:28:10] <gibson042> covers all sorts of weirdness ;)
[09:28:14] <timmywil> ok, I think we can land those then
[09:28:33] <markelog> it actually interesting that by discussion alternative solution we have found couple edge-cases
[09:28:47] <timmywil> yea
[09:28:48] <gibson042> yes, for sure
[09:28:57] <gibson042> replaceWith has come a long way from DOM snapshots
[09:30:17] <timmywil> I threw on the issues we currently have labeled as "Needs Review"
[09:30:57] <timmywil> For https://github.com/jquery/jquery/issues/2134, I'm not sure it makes sense to stick to one way or the other
[09:31:10] <timmywil> for every case I mean
[09:32:04] <timmywil> In other words, I share DaveMethvin's concern that there's probably code depending on the fail-silent behavior in certain places
[09:32:29] <timmywil> that said, I agree that allowing something to throw is preferred
[09:32:31] <DaveMethvin> we ended up not doing the attr change for null/undefined because of those concerns didn't we?
[09:32:59] <gibson042> the user fix is easy for these... do we really want to incur the size/perf penalty to support bizarre input?
[09:33:24] <DaveMethvin> only if people are depending on the outputs for bizarre inputs
[09:33:26] <DaveMethvin> :)
[09:33:39] <gibson042> the outputs are no-op
[09:34:04] <DaveMethvin> there's really no way to tell what will break in the wild without changing it, and that's definitely a possibility
[09:34:15] <DaveMethvin> but i think we want to know the job could be dangerous when we take it
[09:34:28] <gibson042> that's fair
[09:34:55] <timmywil> To look at one case, I think it makes sense for .prop(nonexistent) to return undefined. It's just like ({}).nonexistent.
[09:35:14] <DaveMethvin> i honestly don't  know what's out there that might break, prob a bunch of plugins but maybe they're not popular
[09:36:18] <DaveMethvin> the issue is always that if people are using these like building blocks they don't always have the debugging chops to figure it out themselves
[09:36:28] <DaveMethvin> and some of these plugins are not being maintained
[09:36:51] <DaveMethvin> but none of that prevents us from trying a change ... it's a 3.0 after all :)
[09:38:03] <gibson042> so maybe this one is try-and-see?
[09:38:19] <DaveMethvin> hey it's a beta ... whatev
[09:38:34] <timmywil> yea, I suppose I'd be up for seeing some code
[09:38:43] <timmywil> and nailing down what we'd actually change
[09:40:35] <timmywil> https://github.com/jquery/jquery/issues/2115
[09:40:45] <timmywil> I think we agree here
[09:40:53] <timmywil> Sounds good to me
[09:41:06] <m_gol> +1
[09:42:06] <timmywil> https://github.com/jquery/jquery/issues/2114 could probably be done in conjunction with other changes for 2134
[09:42:17] <timmywil> 2134 being the one we just talked about
[09:42:28] <gibson042> I think so
[09:42:51] <DaveMethvin> definitely in the same spirit
[09:42:54] <timmywil> and then there's https://github.com/jquery/jquery/issues/2053 Velocity
[09:43:04] <timmywil> this kinda died
[09:43:12] <DaveMethvin> have we heard back on how well the unit tests did in it?
[09:43:24] <timmywil> I haven't
[09:43:41] <DaveMethvin> it would be interesting to know what kind of compat issues we would be in for
[09:43:43] <markelog> he added tests
[09:43:56] <DaveMethvin> it also ties into the discussion about documenting Animation and Tween
[09:44:07] <timmywil> true
[09:44:31] <timmywil> Realistically, I just don't see this happening
[09:45:04] <DaveMethvin> it seems like a tall order
[09:45:40] <markelog> we can ask to continue and show the interest
[09:45:42] <timmywil> unless someone is willing to spearhead the effort and do all the work required, the issue's just going to sit around
[09:45:43] <DaveMethvin> if we make a custom build easier, people can just add Velocity into their project
[09:45:56] <DaveMethvin> so it doesn't need to be part of our lump of bits
[09:46:14] <markelog> it's a 4.0 issue
[09:46:19] <DaveMethvin> and there's already a ticket open for an online builder :)
[09:46:22] <markelog> so it might sit around for long i guess
[09:46:50] <DaveMethvin> how about we ping him and find out where the tests stand?
[09:47:10] <DaveMethvin> we should prob see where he is at before just closing it, altho i agree that's where this will probably lead
[09:47:21] <markelog> DaveMethvin: you mean adding tests to his repo?
[09:47:21] <timmywil> DaveMethvin: sounds good
[09:47:38] <DaveMethvin> what fraction of our unit tests run in velocity
[09:47:53] <DaveMethvin> if it's not close to a drop-in replacement then it's gonna be a lot of compat issues
[09:47:59] <markelog> oh, i remember writing comment about that
[09:48:03] <DaveMethvin> and we've already fixed the requestAnimationFrame one
[09:48:32] <markelog> 4. If you test velocity on animate tests as drop in replacement, it would fail most of the tests.
[09:48:37] <m_gol> markelog wrote a comment about that as well I believe ;)
[09:48:43] <markelog> there is quote from discussion
[09:48:54] <markelog> as i remember 80% were falling
[09:49:02] <DaveMethvin> yeah but has anyone looked into why it fails and whether it was easy to fix?
[09:49:15] <markelog> mostly because of internals
[09:49:25] <markelog> but not really
[09:49:36] <DaveMethvin> if users can see them they're not internals :)
[09:49:38] <markelog> velocity api is not fully compatable with ours
[09:49:45] <markelog> despite the promises
[09:49:51] <markelog> even with documented one
[09:50:10] <DaveMethvin> more detail on that from him would be useful
[09:50:22] <markelog> btw, it
[09:50:33] <timmywil> Ok, I just did a quick comment asking where it stands.
[09:50:39] <markelog> is not that easy to run our tests on velocity
[09:50:43] <DaveMethvin> yep, perfect timmywil
[09:50:47] <markelog> because of tick stuff for example
[09:51:26] <timmywil> Ok, that's all I have scheduled for today.
[09:51:49] <DaveMethvin> ok, i gotta run so that's good timing
[09:51:57] <DaveMethvin> see youlater guys
[09:51:59] <timmywil> thanks everybody!!!!
[09:52:03] <markelog> wait
[09:52:06] <markelog> sec
[09:52:08] <timmywil> ok
[09:52:12] <markelog> thanks )
[09:52:28] <markelog> i remember we talked about plain objects and decided to go point-by-point
[09:52:32] <markelog> correct?
[09:52:36] <timmywil> right
[09:52:54] <markelog> i can indentify places were we have workarounds for it
[09:53:02] <markelog> and create issues for them
[09:53:33] <markelog> sounds good?
[09:53:42] <timmywil> sure, we can evaluate the places we do that already
[09:53:46] <timmywil> maybe some aren't needed
[09:53:47] <markelog> cool
[09:53:57] <markelog> and
[09:53:57] <markelog> https://github.com/jquery/jquery/pull/2126
[09:54:10] <markelog> so simplified guards for events stuff?
[09:54:14] <markelog> DaveMethvin: ?
[09:54:23] <markelog> saves 8 bytes at best
[09:54:46] <markelog> but removes "needless" code
[09:55:06] <markelog> i can push it and land it today
[09:55:32] <markelog> right, nvm, will ask in the pull )
[09:55:40] <markelog> thank you everyone
[09:55:55] <gibson042> I'm -1 on https://github.com/jquery/jquery/pull/2126 as it sits
[09:56:12] <markelog> could you elaborate?
[09:56:17] <timmywil> I can put in agenda for next week?
[09:56:17] <gibson042> https://github.com/jquery/jquery/pull/2126#issuecomment-78273289
[09:56:23] <gibson042> sure
[09:56:36] <markelog> oh, shoot
[09:56:43] <markelog> that is a wrong pull
[09:56:54] <markelog> i meant https://github.com/jquery/jquery/pull/2233
[09:57:18] <markelog> totally forget about 2126
[09:57:23] <markelog> *forgot
[09:57:26] <gibson042> ah
[09:57:26] <timmywil> hah, yea, I'm +1 on that one
[09:57:28] <gibson042> +1 on that
[09:57:44] <markelog> 2126 requires more work
[09:57:46] <markelog> for sure
[09:57:49] <timmywil> yea
[09:58:02] <timmywil> ok, see you guys
[09:58:05] <markelog> see ya
