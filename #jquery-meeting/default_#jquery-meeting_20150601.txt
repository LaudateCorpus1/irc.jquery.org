[09:04:43] <timmywil> DaveMethvin, m_gol, gibson042, arthurvr meeting time!
[09:04:50] <arthurvr> hey hey hey
[09:05:07] <timmywil> I don't have a lot on the agenda today. Please add stuff if you think of anything I missed.
[09:05:20] <timmywil> m_gol: you're here right?
[09:05:24] <m_gol> yup
[09:05:26] <timmywil> cool
[09:05:46] <timmywil> First up is .toggleClass(cls, function)
[09:06:04] <timmywil> I like it, but I think the PR could probably be cleaned up a bit.
[09:06:24] <timmywil> m_gol: would you have time to review it?
[09:06:31] <m_gol> sure
[09:06:38] <timmywil> cool
[09:07:45] <timmywil> good call on for-of
[09:07:58] <timmywil> I really like the idea
[09:08:12] <timmywil> would this be master only?
[09:08:30] <gibson042> I think it should be both
[09:08:34] <m_gol> we need to guard agains unsupported envs anyway so I don't see why not both
[09:08:43] <timmywil> agreed
[09:08:58] <m_gol> the v8 team reverted Array#values for now due to site breakages so we shouldn't use it but I can't see [][Symbol.iterator] not being safe
[09:09:12] <m_gol> because it's required for Arrays to be for-ofable :)
[09:09:34] <m_gol> and it can't conflict with anything because Symbols don't clash with strings
[09:09:42] <timmywil> It's a bit weird support-wise. We're not saying it works across browsers, just that it's there for those that want it.
[09:09:54] <m_gol> maybe only with older Fx versions that didn't have iterators but fake strings like "@@iterator"
[09:10:00] <m_gol> * didn't have symbols
[09:10:04] <m_gol> right
[09:10:39] <m_gol> so, is it decided we're doing it? :)
[09:10:44] <timmywil> yea, I'm not too worried about conflicts
[09:11:36] <timmywil> as long as there are no objections. I think Dave can be persuaded easily.
[09:12:03] <m_gol> :D
[09:12:05] <timmywil> so yes, I say we can do that
[09:12:33] <timmywil> I can grab it if no one else wants it
[09:12:42] <m_gol> haha, was about to write the same ;)
[09:12:54] <timmywil> oh, then feel free. I have a pretty long list.
[09:13:04] <m_gol> k
[09:14:00] <m_gol> for https://github.com/jquery/jquery/pull/2330
[09:14:12] <m_gol> I'd like scott_gonzalez to express an opinion first
[09:14:22] <m_gol> there has been a discussion at https://github.com/npm/npm/issues/4473
[09:14:31] <m_gol> that didn't end in a definite conclusion
[09:14:46] <timmywil> good point. we should probably do the same thing across projects
[09:14:52] <m_gol> just at othiym23 asking scott_gonzalez to open a separate issue but I didn't see him doing it
[09:15:13] <m_gol> any changes around licensings should be done carefully :)
[09:15:48] <timmywil> good call, I just pinged him on github. We'll wait for feedback.
[09:16:14] <timmywil> The others seem simple enough to land.
[09:16:36] <timmywil> the other PRs
[09:16:42] <arschmitz> I think part of the problem with that would be we dont just use a plain generic MIT
[09:17:03] <timmywil> orly? didn't know that
[09:17:08] <arschmitz> there is extra stuff in it about node modules and external diectories
[09:17:13] <timmywil> ah
[09:17:14] <arschmitz> https://github.com/jquery/jquery/blob/master/LICENSE.txt
[09:17:21] <m_gol> technically it is MIT but with more info added to the LICENSE file
[09:17:29] <m_gol> so the file is non-standard, the license it
[09:17:40] <m_gol> now the question is how to get it to work fine with npm
[09:17:46] <m_gol> and its new SPDX format
[09:18:25] <arschmitz> we also use cc0 for demo stuff but that does not seem to be in the core one
[09:18:36] <arschmitz> https://github.com/jquery/jquery-ui/blob/master/LICENSE.txt
[09:19:17] <m_gol> arschmitz: right, so your situation is even more complicated
[09:19:36] <arschmitz> m_gol: yup
[09:19:38] <m_gol> but package.json still says just MIT with a link
[09:19:44] <timmywil> makes sense. we don't have demos.
[09:19:45] <m_gol> https://github.com/jquery/jquery-ui/blob/c2224bf5dc418c84c185844611786b9ccfb869a7/package.json#L48-L53
[09:19:57] <arschmitz> m_gol: yes but the link has everything there
[09:19:58] <m_gol> so it's lying a bit ;)
[09:20:19] <timmywil> I wonder if this technically should be a different license
[09:20:50] <timmywil> can we do URL only?
[09:21:00] <timmywil> instead of name only
[09:21:28] <arschmitz> If that works it might be the simple way
[09:21:53] <markelog> hey guys
[09:22:03] <markelog> sorry i'm late, my head is killing me
[09:22:10] <markelog> did i miss something important?
[09:22:11] <m_gol> timmywil: we can via `license: "LicenseRef-LICENSE"`
[09:22:18] <timmywil> yea, just saw that
[09:22:25] <timmywil> so maybe a custom name
[09:22:28] <m_gol> but a lot of tools will then automatically consider jquery to be closed-source
[09:22:31] <m_gol> markelog: hi
[09:23:00] <timmywil> m_gol: that would be unfortunate
[09:23:00] <arschmitz> Maybe reach out to the NPM guys and explain our situation?
[09:23:13] <arschmitz> see what they recomend
[09:23:14] <timmywil> we can do that
[09:23:14] <m_gol> yes, that's what othiym23 asked Scott to do :)
[09:23:21] <m_gol> so we should do it and see where it ends
[09:23:24] <m_gol> before landing anything
[09:25:13] <m_gol> timmywil: we should add backing out some offset changes as beta blockers, no?
[09:25:34] <timmywil> absolutely
[09:25:52] <timmywil> done
[09:26:45] <timmywil> ok, does anyone have anything else?
[09:26:50] <timmywil> If you come across an issue you'd like to be discussed in the meeting, add the "Needs Review" label.
[09:26:54] <m_gol> I'll get to my blocker issue today/tomorrow
[09:27:06] <markelog> what did we decide on https://github.com/jquery/jquery/issues/2308 ?
[09:27:09] <markelog> just a blog post?
[09:27:18] <timmywil> yea, blog post for now
[09:27:32] <markelog> isn't hat weird asking why there is now some functions that do not work?
[09:27:50] <timmywil> hmm?
[09:27:55] <markelog> basically, we would ask slideDown up do not work now, you okay with that?
[09:28:03] <markelog> or something else?
[09:28:14] <gibson042> oh, did we decide that https://github.com/jquery/jquery/pull/2276 (fixing margin: auto) was worth the size?
[09:28:36] <timmywil> gibson042: I believe so
[09:28:43] <gibson042> ok, I'll merge this week
[09:29:04] <timmywil> markelog: it's arguably a feature to not override stylesheet css. We're going to lay out all the pros and cons and see what feedback we get.
[09:29:19] <m_gol> should we release an alpha or sth so that people have sth to test on? or will we just point them to git?
[09:29:27] <markelog> timmywil:does it work for us in the past?
[09:29:32] <m_gol> I mean, to https://code.jquery.com/jquery-git.js
[09:29:33] <markelog> *did it work
[09:29:43] <timmywil> markelog: I don't think we've tried it much
[09:30:00] <markelog> i don't think anyone ever did that
[09:30:38] <markelog> i have couple thoughts on that
[09:30:44] <markelog> maybe an implementation
[09:30:51] <timmywil> m_gol: git for now, but maybe when we get the blockers done, calling the release an alpha would be more accurate.
[09:30:54] <markelog> could we wait on the blog post
[09:31:14] <markelog> i think we can create an impression, that we no longer understand what we are doing
[09:31:42] <markelog> depends on the tone of the blog post though
[09:31:57] <m_gol> I think it can be made look good
[09:32:17] <markelog> asking an advice is not a bad thing
[09:32:19] <timmywil> I'm sure people will say that, but I don't think those people are the constructive ones
[09:32:29] <DaveMethvin> here, and caught up
[09:32:39] <m_gol> but, markelog, if you have any concrete ideas around the topic, I think we can wait a little and see if your ideas could solve the problems
[09:32:46] <m_gol> DaveMethvin: hi
[09:33:18] <timmywil> I think asking for feedback shows we care about what the users think
[09:33:25] <DaveMethvin> on the blog post, if we could say we see all the cons of the current approach and wonder whether people would see fixing those outweigh the new problems we create
[09:33:26] <markelog> but asking if ppl would be okay for some of our core functions wouldn't work anymore for most of the cases is weird
[09:33:46] <gibson042> the content is basically "do you rely on jQuery animations overriding `display: none` in your stylesheets?"
[09:34:06] <DaveMethvin> gibson042: yes with some explanation of pros/cons
[09:34:10] <markelog> which means that most of the show/hide slidedown, slideup, etc wouldn't work
[09:34:21] <DaveMethvin> like, responsive style sheets
[09:34:50] <markelog> it seems for like 90% of the situations
[09:34:50] <arschmitz> It really seems like you almost need a new method
[09:35:05] <markelog> yeah
[09:35:08] <DaveMethvin> if we do a new method, we keep all the cons of the current one
[09:35:10] <arschmitz> because there are legit use cases for both ways
[09:35:16] <arschmitz> that cant be done with a single method
[09:35:16] <DaveMethvin> which means all the perf headaches in particular
[09:35:17] <markelog> i see there options here
[09:35:28] <timmywil> the differences would be so obscure. I'm not sure people would get it.
[09:35:29] <markelog> partially revert the logic
[09:35:34] <markelog> new signature
[09:35:37] <markelog> new methods
[09:35:37] <gibson042> the method is `defaultDisplay`
[09:35:38] <timmywil> at least not immediately
[09:35:42] <markelog> or combination of those
[09:36:03] <timmywil> yes, but any direction we go has trade-offs
[09:36:09] <gibson042> it's just logic to _guess_ the right display value, and set it before animating
[09:36:14] <DaveMethvin> i don't think there's a need for a new method, unless you count addClass :)
[09:36:19] <markelog> yeah, i would like to lay them all down
[09:36:26] <DaveMethvin> that's what the blog post can do
[09:36:29] <markelog> try couple ways
[09:36:31] <markelog> and see
[09:36:47] <markelog> a lot of people already involve in the conversation
[09:37:01] <timmywil> arschmitz: also the changes affect several methods (like slideUp/Down)
[09:37:15] <markelog> i don't think someone unfamiliar with the code-base could propose something better
[09:37:18] <arschmitz> timmywil: very true
[09:37:48] <DaveMethvin> the questions here aren't code base as much as API behavior and their implications
[09:38:07] <DaveMethvin> even if you describe what we do today it's pretty ugly and complicated at the API level
[09:38:13] <DaveMethvin> which reflects the code
[09:38:14] <DaveMethvin> :)
[09:38:24] <markelog> yeah, true
[09:38:54] <arschmitz> I think a method that works like the current show is important for plugin authors.
[09:38:55] <markelog> i remember you and paul has an idea
[09:39:03] <markelog> just always set display: block
[09:39:08] <markelog> or none
[09:39:17] <markelog> doesn't matter what in the stylesheets
[09:39:27] <markelog> which wouldn't break so much
[09:39:33] <m_gol> markelog: this will bring back the responsive stylesheets bug, though
[09:39:36] <timmywil> the blog post doesn't need to get deep into implementation details. We're basically asking how users want it to work and explain the downsides of each choice.
[09:39:40] <arschmitz> markelog: I have a feeling that what most people thing it does already
[09:39:50] <arschmitz> think*
[09:39:50] <timmywil> explaining
[09:40:05] <markelog> m_gol: this is why i said "wouldn't break so much" )
[09:40:10] <m_gol> :)
[09:40:11] <m_gol> I see one danger here: if this is going to end in a huge debate that lasts a long time, we need to remember that the last "major" jQuery update happened on January 24, 2014. That's almost 1.5 years now; we need to release 3.0.0 one day and that may mean deferring some changes to 4.0.0 if they're not ready (code-wise or conceptually)
[09:40:13] <DaveMethvin> arschmitz: yeah although it really is a lot more complicated and there are use cases like inline-block or table-row
[09:40:31] <arschmitz> DaveMethvin: oh i realize but i doubt many people realize or think about htat
[09:40:59] <timmywil> perhaps because we've thought about it for them. we don't know.
[09:41:00] <markelog> i think, we could try to unite those ideas
[09:41:14] <arschmitz> timmywil: your probably right
[09:41:21] <DaveMethvin> on 3.0.0 timing, i just want to point out that IE8 support ends Jan 2016
[09:41:43] <arschmitz> cant wait :-)
[09:41:44] <markelog> DaveMethvin: does it mean, we wouldn't support it after that date?
[09:41:59] <timmywil> it's a strong argument for dropping it
[09:42:05] <arschmitz> In previous discussions in dev leads and other places that has been what we talked about
[09:42:06] <timmywil> hey, Microsoft doesn't!
[09:42:16] <markelog> but we devs do (
[09:42:23] <m_gol> yeah, I don't think we should drop IE8 before Microsoft does, though
[09:42:23] <markelog> but web devs do (
[09:42:30] <arschmitz> never anything official but that had been the sentiment
[09:42:34] <m_gol> I still see a lot of people needing to support IE8
[09:42:53] <m_gol> and I hope we do release 3.0.0 before Jan 2016 :P
[09:43:01] <DaveMethvin> well it's a question of whether we shoudl create a new name "3.0 compat" for IE8 support that will not live very long
[09:43:04] <timmywil> m_gol: the companies keeping IE8 for "security reasons" will no longer have an excuse
[09:43:07] <markelog> okay, on the show/hide thing, i will write a comment, maybe do something with code, after that we could decide if we want a blog post
[09:43:09] <markelog> sounds good?
[09:43:24] <m_gol> timmywil: right but it's after Jan 2016, they're good for now
[09:43:31] <m_gol> markelog: sounds good to me
[09:43:34] <markelog> timmywil: since this is an enterprise that can't just drop it
[09:43:36] <timmywil> sure
[09:43:42] <m_gol> btw, that opens another rabbit hole
[09:43:46] <markelog> even if microsoft no longer support it
[09:43:57] <m_gol> companies with software running on IE8 won't drop IE8 immediately
[09:43:58] <timmywil> markelog: that's fine.
[09:43:58] <markelog> new protocols, new structure all that
[09:44:02] <markelog> cool
[09:44:08] <m_gol> MS advises them to switch to IE8 mode in IE11, right?
[09:44:13] <timmywil> I'm going to start drafting a post though, just not publish it.
[09:44:13] <DaveMethvin> IE11 has IE8 mode
[09:44:18] <DaveMethvin> and Enterprise mode
[09:44:21] <m_gol> which we don't support, officially :)
[09:44:26] <DaveMethvin> so companies are covered
[09:44:38] <m_gol> the question is if we should support that one specific configuration in compat or not
[09:44:41] <DaveMethvin> the point of IE8 mode is to run old code really
[09:44:50] <DaveMethvin> so you don't need the most recent version of jquery
[09:44:57] <m_gol> ok, makes sense
[09:44:58] <DaveMethvin> you don't even WANT the most recent one
[09:45:12] <arschmitz> Nothing stops people from using 1.11
[09:45:15] <arschmitz> its pretty stable
[09:45:18] <DaveMethvin> yeah
[09:45:24] <m_gol> DaveMethvin: so you suggest to just not release 3.0.0 Compat at all?
[09:45:26] <markelog> anyway, that discussion could wait until 2016 )
[09:45:30] <m_gol> haha
[09:45:33] <DaveMethvin> there are dozens of versions of jquery that support ie8 :)
[09:45:39] <DaveMethvin> i am just bringing up that possiblity
[09:45:41] <DaveMethvin> like,
[09:45:49] <DaveMethvin> maybe just have a few more 1.xx released
[09:45:51] <DaveMethvin> releases
[09:46:04] <markelog> most of the other js libs that relay on jq, do not support ie8
[09:46:09] <markelog> so, at least we good there
[09:46:10] <DaveMethvin> rather than create a new naming scheme
[09:46:12] <m_gol> well, we could do a lot more if we didn't have to keep API compatibility between jQuery 3.0 & jQuery Compat 3.0... I'm not sure if it isn't too late for this discussion given our 3.0 timeline
[09:46:16] <timmywil> we're so far ahead of the stable branches tho
[09:46:21] <timmywil> -stable
[09:46:34] <m_gol> timmywil: yep, that's my point
[09:46:43] <DaveMethvin> yeah, i guess with things like Deferred changes we are in a bit of a wedge
[09:46:44] <m_gol> seems like giving up on a lot of effort already spent
[09:46:50] <DaveMethvin> semver makes us go up
[09:46:57] <timmywil> yea
[09:47:01] <DaveMethvin> ok good point
[09:47:10] <arschmitz> well couldnt you jsut do 3.0 3.0 compat
[09:47:16] <arschmitz> and in 2016 bump to 4
[09:47:18] <timmywil> but hey, maybe 4.0
[09:47:27] <m_gol> I think we can drop IE8 in 4.0, I'm not convinced it's worth to do it now given all the effort
[09:47:31] <DaveMethvin> yea we can spin the numbers faster
[09:47:57] <DaveMethvin> in which case we might want to wait on some of the seriously breaking changes?
[09:48:03] <arschmitz> seems like the simple solution for the course that was already started on
[09:48:14] <DaveMethvin> i think the 3.0-compat branch is gonna be used with a lot of older plugins
[09:48:22] <timmywil> such as?
[09:48:22] <DaveMethvin> if people upgrade at all
[09:48:38] <DaveMethvin> oh, just ones that depend on the current hide/show behavior etc
[09:48:56] <timmywil> I see
[09:48:57] <DaveMethvin> i have no idea what level of problems we'll see though
[09:49:09] <DaveMethvin> that's the problem with having the world depend on us!
[09:49:12] <gibson042> I would rather have major changes in 3.0 and -compat like we've been planning to
[09:49:12] <timmywil> we could push that ticket. It just makes me sad we can't address the perf problems in 3.0.
[09:49:28] <gibson042> people have the option of _not_ upgrading their old stuff
[09:49:30] <timmywil> or I should say, "if we couldn't"
[09:49:36] <markelog> timmywil: i think we can1
[09:49:37] <markelog> !
[09:49:42] <markelog> we just need a little more time
[09:49:46] <gibson042> but they won't really have the option of rolling their own 4.0 compat
[09:49:47] <markelog> at least i need some )
[09:49:49] <DaveMethvin> i feel the same about our perf issues, it seems like that is at least one of the reasons people are down on jquery
[09:50:03] <DaveMethvin> but fixing them requires breaking behaviors
[09:50:07] <timmywil> so we keep thrashing
[09:50:27] <m_gol> gibson042: the question is if it's just that they're breaking or that they need the current behavior
[09:50:34] <markelog> new api, is an option
[09:50:44] <arschmitz> and one of the things people love about jquery its few breaking changes and thats potentially a big break
[09:50:47] <timmywil> I still believe there's a sweet spot somewhere that both addresses the perf issues *and* doesn't break the major use cases.
[09:50:52] <m_gol> * gibson042: I mean, the old behavior
[09:50:52] <markelog> that way we wouldn't break and fix the perf
[09:50:56] <gibson042> if they need current behavior that we want to change, then they can stick with 1.x/2.x
[09:51:24] <arschmitz> gibson042: well for plugin authors thats pretty complicated
[09:51:25] <markelog> gibson042: that like asking people to downgrade
[09:51:26] <gibson042> most of our changes, this one includes, are edge
[09:51:30] <markelog> which is weird
[09:51:33] <gibson042> *included
[09:51:43] <markelog> "we just released new version, but don't update!"
[09:52:20] <markelog> i understand this for ie8
[09:52:39] <gibson042> "We just released a new MAJOR version, which has the following backwards incompatibilities. Take note (and use Migrate) if you need the old behavior"
[09:52:40] <markelog> but for this?
[09:52:58] <markelog> another phrasing but same meaning
[09:53:05] <gibson042> it's not about browser support, it's about our own behavior
[09:53:15] <arschmitz> gibson042: i still don't see what the recommended way to do this for plugin authors would be that cant know stylesheets.
[09:53:23] <markelog> it is about plugins support and sites support
[09:53:24] <DaveMethvin> to the point arschmitz makes though, as a plugin writer you may be expecting .show() and .hide() to override stylesheets and haven't needed to tell your users to use special care in their css
[09:53:28] <markelog> which wouldn't work after that release
[09:53:36] <markelog> which isn't ideal
[09:53:51] <gibson042> arschmitz: writing/importing/etc. `defaultDisplay` logic that we (jQuery) have decided doesn't belong in our library
[09:53:54] <timmywil> arschmitz: they'd have to set a display value first
[09:53:55] <arschmitz> and this would be a non trival change for simple plugins
[09:54:10] <arschmitz> timmywil: that is likely to break layouts for plugin users
[09:54:17] <gibson042> it's nontrivial, period
[09:54:22] <gibson042> we get it wrong now
[09:54:24] <markelog> `defaultDisplay` was ugly
[09:54:26] <gibson042> and everyone pays the cost
[09:54:29] <gibson042> exactly!
[09:54:32] <arschmitz> and asing someone to find and implment that logic is a lot for simple plugins
[09:54:33] <markelog> but in mooost cases it wasn't used
[09:54:41] <arschmitz> not all plugin authors are experts or library developers
[09:54:48] <DaveMethvin> but if we create, e.g., .conceal() and .reveal() it means all the existing show/hide code will continue to work in its bizarre way and we have to support it forever
[09:54:52] <markelog> it shouldn't be a real perf problem
[09:55:23] <timmywil> I don't think adding new methods fixes anything
[09:55:29] <DaveMethvin> yeah neither do i
[09:55:41] <DaveMethvin> i think we should figure out how much to break show/hide
[09:55:47] <timmywil> this^^
[09:55:49] <markelog> why not?
[09:55:55] <gibson042> I mean, I'm willing to write a defaultDisplay plugin if that's the big deal
[09:56:04] <markelog> just asking so we could consider all options
[09:56:11] <timmywil> because this behavior affects more than just show/hide
[09:56:30] <markelog> other functions you mean?
[09:56:32] <timmywil> do we also want slideDownConceal()? it snowballs.
[09:56:38] <DaveMethvin> if we're going to leave all the existing code in place, it seems like we might as well tell people to use addClass/removeClass
[09:56:43] <timmywil> reveal, w/e
[09:56:44] <DaveMethvin> rather than creating a new api
[09:57:04] <markelog> perf problem was with show/hide
[09:57:16] <markelog> bad perf with slowdown/up aren't a thing
[09:57:19] <markelog> isn't
[09:57:37] <markelog> with show/hide ppl expect it to work fast
[09:57:38] <DaveMethvin> but it still impacts responsive stylesheets for exampe
[09:57:42] <markelog> not the issue with other aliases
[09:58:50] <markelog> i don't think we need to make decision right know,  i think we should consider all options in equal manner
[09:59:10] <DaveMethvin> are we still okay with a blog post on this? or maybe a "here's the way the alpha will work" with good instructions on how to deal with it
[09:59:31] <timmywil> markelog: it follows the same codepath to show the element before the animation
[09:59:35] <timmywil> it does affect it
[09:59:36] <m_gol> if we call it an alpha it seems ok to have it a potentially different behavior than later betas
[09:59:37] <DaveMethvin> i really like the changes gibson042 made and would at least like to see how badly things break
[09:59:48] <timmywil> which is the issue we have open
[09:59:49] <markelog> timmywil: yes! but as i said "with show/hide ppl expect it to work fast"
[09:59:54] <markelog> "not the issue with other aliases"
[10:00:07] <m_gol> I just think we really need to release something, it's been too long
[10:00:12] <markelog> ppl do not expect to slidedown to work fast
[10:00:13] <DaveMethvin> and its an alpha so we're not guarranteeing it will stay that behavior
[10:00:15] <timmywil> yes, but any changes to make show/hide work fast affect the other aliases
[10:00:20] <markelog> ppl do not use it on 100 elements
[10:00:35] <DaveMethvin> and agree with m_gol we shoudl probably put something out as a work in progress
[10:00:35] <markelog> but they do on show/hide
[10:00:47] <arschmitz> Seems like doing it in an alpha could be good but make sure you scream from the roof tops how this effects plugins
[10:00:55] <arschmitz> so people know what to look for as far as breaks
[10:00:58] <DaveMethvin> markelog: you'd be surprised what people do :(
[10:01:03] <m_gol> markelog: to make show() follow the new behavior & slideDown the old one we'd need to basically have two show/hide implementations, even if only internally
[10:01:16] <markelog> DaveMethvin: yeah, but not on wikipeda page, which called all the fuzz
[10:01:18] <timmywil> m_gol: exactly
[10:01:43] <markelog> m_gol: that is why i think we should consider the new interface
[10:01:49] <markelog> and other options
[10:01:58] <markelog> in equal manner )
[10:02:00] <timmywil> ok, need to stop the discussion here. I like the idea of an alpha, but we need to address the blockers first.
[10:02:12] <timmywil> for the show/hide blocker, we can pick a direction and try it
[10:02:45] <timmywil> thank you markelog for offering to work out some solutions for us
[10:02:48] <m_gol> we can reverse the show/hide decision later, after an alpha but I think we shouldn't spend next 2-3 weeks still discussing it before it happens
[10:02:59] <markelog> timmywil: sure timmy!
[10:03:05] <markelog> will post soon
[10:03:16] <markelog> m_gol: i agree
[10:03:25] <timmywil> agreed
[10:03:31] <timmywil> and I agree we need to get something released
[10:03:52] <timmywil> the other 4 blockers are smaller
[10:03:59] <timmywil> and much easier to address
[10:04:18] <markelog> i'm pretty sure though, if we leave this as-is a lot of ppl with the big hook will search us )
[10:04:38] <timmywil> thank you everybody! We're making good headway.
[10:05:01] <timmywil> see you in -dev/github
[10:05:09] <arthurvr> bye
