[09:04:07] <timmywil> DaveMethvin, gibson042, markelog, m_gol, arthurvr meetingz
[09:04:17] <gibson042> ready
[09:04:32] <markelog> hey-hey
[09:04:33] <timmywil> no gitter this week
[09:04:46] <markelog> sorry, was busy
[09:04:52] <timmywil> np
[09:05:12] <m_gol> present
[09:05:33] <timmywil> https://github.com/jquery/jquery/issues/2519
[09:05:49] <timmywil> https://docs.google.com/document/d/1BadwSO6Sn91RBfr05s77r81ncEi0oMBJ5mZS-k215vg/edit#
[09:06:04] <timmywil> m_gol: I like your idea
[09:06:40] <timmywil> We really only need to run those tests before releases. if it's causing problems for contributors, we can bypass them.
[09:06:59] <m_gol> it's just us supporting a no-longer-supported jsdom on Node.js < 1.0.0 causes problems for contributors
[09:07:24] <m_gol> if it's desired to work with jsdom 3, we can always manually install it before the release and re-run grunt
[09:07:33] <m_gol> on Node 0.10 & 0.12
[09:07:34] <timmywil> you mean all versions of node?
[09:07:45] <timmywil> not io, basically
[09:07:53] <m_gol> timmywil: yes, but in ~6 weeks Node.js 4.0.0 should come out
[09:07:59] <m_gol> they're converging, io.js is going away
[09:08:06] <timmywil> sure
[09:08:12] <m_gol> see https://medium.com/@nodesource/essential-steps-long-term-support-for-node-js-8ecf7514dbd
[09:08:24] <timmywil> so, the proposal is to check for node < 1.0 and skip?
[09:08:34] <m_gol> and get rid of the jsdom task
[09:08:43] <m_gol> put "jsdom": "5.sth" in package.json directly
[09:08:44] <timmywil> I think we should still run them on Node 0.12.x for releases
[09:09:00] <timmywil> until node 4 propagates
[09:09:05] <m_gol> that's fine for me but having it install on `grunt` is causing issues for current users
[09:09:13] <markelog> funny, most people on zero version .10, and next one should be 4.0 )
[09:09:37] <m_gol> it's so that there is no version overlap between Node.js & io.js ;)
[09:09:42] <timmywil> yea, we can remove it from default grunt, but keep the task?
[09:09:42] <m_gol> too many tools would break
[09:10:04] <m_gol> timmywil: sounds fine, but we'll need to duplicate the jsdom@5 entry in package.json
[09:10:08] <markelog> yeah, first in time of history of popular software )
[09:10:20] <m_gol> so maybe we should rename the task to old-jsdom and run it only on Node 0.10/0.12
[09:10:24] <m_gol> before releases
[09:10:33] <timmywil> that sounds fine
[09:10:51] <m_gol> it would be `grunt old-jsdom && grunt && grunt test`
[09:10:59] <timmywil> but, we can't have two jsdoms in package.json, right?
[09:11:03] <m_gol> we can't
[09:11:14] <m_gol> but we can install a different v than what's in package.json
[09:11:21] <timmywil> i see, right
[09:11:23] <m_gol> if you don't do `npm install` but `npm install jsdom@3`
[09:11:32] <m_gol> I can prepare a PR
[09:11:36] <timmywil> thanks m_gol
[09:12:30] <timmywil> https://github.com/jquery/jquery/issues/2512 and https://github.com/jquery/jquery/issues/2513
[09:12:37] <timmywil> These seem fine to privatize
[09:12:42] <timmywil> access, dir, sibling
[09:13:28] <markelog> yeah, but let's do it with the pr first
[09:13:33] <timmywil> scott_gonzalez: does UI use any of those?
[09:13:38] <m_gol> markelog: sure
[09:13:47] <timmywil> of course
[09:13:58] <markelog> timmywil: does it matter?
[09:14:15] <timmywil> possibly
[09:14:17] <markelog> i heard there is a lot of stuff already broken in ui
[09:14:22] <m_gol> if they had a use case
[09:14:22] <timmywil> access is too large to duplicate
[09:14:31] <m_gol> that's more important than just back compat
[09:14:32] <markelog> so those things shouldn't affect it as much
[09:14:46] <timmywil> I doubt they do anyway
[09:14:55] <timmywil> might be moot
[09:14:55] <markelog> yeah, probably not
[09:15:14] <markelog> would be weird if anyone would use access()
[09:15:24] <timmywil> ya
[09:15:25] <markelog> it is a crazy method )
[09:15:42] <m_gol> haha
[09:16:08] <timmywil> for this one, https://github.com/jquery/jquery/pull/2520, I'm not sure how I feel about adding comments
[09:16:40] <m_gol> both JSHint & ESLint support comments in their .jshintrc/.eslintrc files
[09:16:42] <markelog> because github show it weirdly?
[09:16:49] <m_gol> not sure about JSCS; markelog?
[09:16:53] <markelog> yeah, that is the point of "rc" files
[09:16:57] <timmywil> oh, I thought jshint was still thrashing on support
[09:17:03] <m_gol> no, it doesn't :)
[09:17:07] <markelog> m_gol: certainly
[09:17:12] <m_gol> but we do parse this file ourselves in Gruntfile
[09:17:15] <m_gol> to remove one option
[09:17:23] <m_gol> and lint dist/jquery.js with the result
[09:17:29] <m_gol> so that's why I had to change sth
[09:17:30] <markelog> jshint, has their own implementation of stripcomments package even
[09:17:36] <m_gol> I've used the same module JSHint uses for stripping
[09:17:37] <markelog> if before sindre did one )
[09:17:44] <m_gol> markelog: not anymore ;)
[09:17:56] <markelog> cool, that is the right move from their part )
[09:17:57] <timmywil> oh I see, we have to remove them because we parse the file ourselves
[09:18:03] <m_gol> yup
[09:18:11] <timmywil> I guess if jshint supports it, I'm less uncomfortable
[09:18:14] <m_gol> but only for dist
[09:18:32] <timmywil> sure, ok
[09:18:36] <m_gol> I guess GitHub should recognize .*rc as a different file format
[09:18:48] <markelog> true that!
[09:19:12] <timmywil> This one is marked needs review and WIP (https://github.com/jquery/jquery/pull/2509). should we wait m_gol ?
[09:19:14] <markelog> although, i don't remember what "rc" actually mean
[09:19:15] <markelog> )
[09:19:24] <m_gol> timmywil: WIP because I need feedback before continuing
[09:19:29] <m_gol> so I added "needs review"
[09:19:33] <timmywil> gotcha
[09:19:49] <timmywil> I like the direction
[09:19:55] <markelog> is it time to update jscs?
[09:20:00] <timmywil> Just some basic tests for the most common functionality.
[09:20:04] <markelog> we can do this with qunit migrate
[09:20:13] <markelog> with that package that jorn showed
[09:20:33] <markelog> shown
[09:20:47] <timmywil> Although, we could go through the test suite and add basic to test titles and use ?grep=basic or something.
[09:21:23] <m_gol> timmywil: might be easier to do
[09:21:34] <m_gol> and we wouldn't have all these tests in one module
[09:21:44] <m_gol> the question is how many basic tests should we have
[09:22:00] <m_gol> because it's not that 90% tests edge cases, we do have lots of API tests
[09:22:31] <m_gol> and tests I added in this WIP PR are not testing the whole API, not even close
[09:22:37] <timmywil> I think some tests from each module is sufficient
[09:22:46] <gibson042> what's in the PR already looks like too much
[09:22:51] <timmywil> doesn't need to be comprehensive, because it can't be comprehensive
[09:23:18] <m_gol> if what's in the PR is already too much then a separate basic module makes sense
[09:23:32] <m_gol> remember our test functions often contain a lot of assertions
[09:23:47] <m_gol> it would be hard to isolate what's basic and what's not
[09:23:54] <m_gol> easier to just copy very, very basic assertions
[09:24:00] <gibson042> this ^
[09:24:04] <markelog> subjectivity is the key )
[09:24:07] <m_gol> and have 50 tests check sth from each module
[09:24:24] <timmywil> that sounds good
[09:24:25] <m_gol> markelog: can't escape being subjective in such a thing ;)
[09:24:42] <gibson042> e.g., `assert.equal( div.css( "width", "50px" ).css( "width" ), "50px", ".css getter/setter" )`
[09:24:51] <timmywil> the downside of the grep approach is we might accidentally include edge case assertions
[09:24:53] <markelog> we could do that coverage analis
[09:25:04] <markelog> with phantom
[09:25:11] <markelog> and get like 5%
[09:25:21] <markelog> a bit less subjective )
[09:25:22] <gibson042> this isn't going for coverage, though, just "does it run" confidence
[09:25:41] <markelog> yeah, that is whay am saying
[09:25:53] <markelog> if 5% run, then it should run
[09:26:13] <timmywil> we're going for common use case coverage, which probably doesn't align with code coverage
[09:26:17] <m_gol> yeah
[09:26:32] <m_gol> modules with more edge cases would get less coverage but here we don't care about edge cases
[09:26:54] <markelog> 5% of all code base?
[09:27:02] <markelog> should cover most cases
[09:27:14] <timmywil> I mean, one selection could be 5%. We need to be more specific.
[09:27:27] <markelog> or we can just run core module tests
[09:27:33] <timmywil> I don't think we need to approach it from a code coverage angle
[09:27:35] <markelog> maybe integration tests with sizzle
[09:28:11] <timmywil> just, does this work, does that work, this should work, and that's it.
[09:28:28] <m_gol> max 50 tests for everything, or sth like that
[09:28:35] <markelog> with that perspective sizzle/core should be enough
[09:28:53] <m_gol> then we wouldn't have even one test for .css
[09:29:00] <markelog> 50 on 10 or so modules
[09:29:08] <markelog> like that?
[09:29:25] <m_gol> 50 in total in this "basic" module
[09:29:27] <timmywil> oh, I see what you're saying. Keep in mind Sizzle can test itself in 2.3
[09:29:33] <m_gol> true
[09:29:34] <markelog> ooo
[09:29:44] <markelog> timmywil: how so?
[09:29:58] <timmywil> I mean, it has its own test suite and I think it passes.
[09:30:03] <m_gol> although currently Android tests are disabled in Sizzle ;-)
[09:30:16] <m_gol> because Karma + BrowserStack + Android = problems, apparently
[09:30:19] <markelog> although "basic" approach sounds interesting, we could run other old stuff with it too, and decide what cases we support
[09:30:43] <markelog> is that still on?
[09:30:47] <timmywil> yea, we can iterate on this, but I think the first step is to get a few tests in for each module.
[09:30:48] <markelog> need to check that
[09:31:05] <timmywil> let's start with that and go from there
[09:31:09] <markelog> i would run coverage just for fun
[09:31:11] <m_gol> markelog: currently tests will fail because BrowserStack changed API rules, I'm actively mailing with them about that
[09:31:14] <markelog> would be insteresting to see
[09:31:19] <timmywil> that's fine
[09:31:25] <m_gol> ok, so I'll finish the thing
[09:31:32] <timmywil> thanks m_gol
[09:31:34] <markelog> m_gol on top of things! cool
[09:31:34] <markelog> )
[09:31:40] <m_gol> one note: I'm on vacation from Friday until the next Friday
[09:31:53] <markelog> happy vacation!
[09:31:56] <markelog> again )
[09:31:57] <m_gol> so if I don't land sth on Thursday at the latest, it'll have to wait another week
[09:32:01] <markelog> where now?
[09:32:03] <m_gol> but I assume we're not in a huge hurry? ;)
[09:32:17] <m_gol> markelog: Geneva + Nicea :)
[09:32:20] <m_gol> * Nice
[09:32:41] <markelog> cool, jealous )
[09:32:42] <timmywil> we're not
[09:32:51] <m_gol> haha
[09:32:57] <timmywil> we can wait for you, m_gol ;)
[09:33:05] <m_gol> ;)
[09:33:19] <markelog> so qunit + jscs, good for update?
[09:34:07] <m_gol> markelog: that would be cool, a lot of people are surprised JSCS doesn't lint spaces too well
[09:34:14] <timmywil> For https://github.com/jquery/jquery.com/pull/109/files, it feels weird to not list Opera
[09:34:14] <timmywil> We were just talking about how Chromium-based browsers still have differences
[09:34:31] <markelog> yeah, sounds long overdue
[09:34:50] <m_gol> timmywil: I just thought Opera is kind of like Yandex now, not sure if we want to mention them both
[09:35:28] <m_gol> this is for the text under the "Cross-browser" logo on the main page at http://jquery.com/
[09:35:45] <markelog> yeah, it is
[09:36:21] <markelog> But it secondary meaning we don't test in it as much as in the others
[09:36:26] <markelog> correct?
[09:36:36] <m_gol> that was my thinking
[09:36:48] <m_gol> also, we don't list iOS & Android in that text
[09:36:55] <m_gol> (and we even test iOS in the main run)
[09:37:19] <markelog> it might be beneficial to mention some mobile browsers as well
[09:37:24] <m_gol> although you could understand "Chrome" as both Chrome Desktop & Android
[09:37:25] <gibson042> I agree
[09:37:59] <markelog> m_gol: aah, there is a lot of differences with Chrome and android, just ask mobile team )
[09:38:14] <m_gol> markelog: Chrome & Chrome for Android?
[09:38:24] <m_gol> I'm not talking about the Android Browser obvs
[09:38:29] <markelog> yeah, i have seen couple of those
[09:38:35] <m_gol> so, "Chrome, Edge, Firefox, IE, Safari, iOS, Android and more"?
[09:38:48] <m_gol> or "Chrome, Edge, Firefox, IE, Safari, Opera, Yandex, iOS, Android"?
[09:38:52] <markelog> like there is a lot to consider with keyboard of the android
[09:39:00] <markelog> which reacts weirdly with some of events
[09:39:17] <markelog> i would go with "Chrome, Edge, Firefox, IE, Safari, iOS, Android and more"?
[09:39:26] <timmywil> was just thinking about the reason
[09:39:37] <timmywil> my internet is going in and out
[09:39:45] <m_gol> I like "Chrome, Edge, Firefox, IE, Safari, iOS, Android and more"
[09:39:46] <timmywil> the first one is good
[09:39:49] <timmywil> yea
[09:39:51] <m_gol> k
[09:40:00] <gibson042> yeah, no need to mention the clones in that summary
[09:40:24] <timmywil> I think I just caught up in the reason why
[09:41:36] <timmywil> ok, we'll call it cause I'm getting disconnected a lot
[09:41:36] <timmywil> thanks, everybody! see you in -dev
[09:41:38] <markelog> timmy!
[09:41:42] <markelog> jscs + qunit?
[09:42:36] <m_gol> so, https://github.com/jquery/jquery/pull/2504 next time? ;)
[09:43:42] <markelog> i guess he lost connection again
[09:44:36] <timmywil> we can discuss on github. I'll review later. but yea, my connection is really screwy right now.
[09:44:57] <markelog> okay, see ya then!
[09:49:19] <m_gol> can sb mute the channel? timmywil DaveMethvin arschmitz scott_gonzalez?
