[09:04:28] <timmywil> m_gol, markelog, arthurvr, DaveMethvin|away ping
[09:04:45] <markelog> hey-hey
[09:04:49] <AndChat-402864> On my phone this time (what's camping without an IRC meeting?)
[09:04:59] <timmywil> ha
[09:05:09] <timmywil> who is AndChat-402864 tho?
[09:05:17] <AndChat-402864> (gibson042, BTW)
[09:05:22] <timmywil> cool
[09:05:55] <m_gol> present
[09:06:00] <timmywil> Let's do some jQueryies
[09:06:18] <timmywil> https://github.com/jquery/jquery/issues/2413 ajax pending indefinitely
[09:06:42] <timmywil> m_gol, you marked this needs review. What's the question?
[09:07:21] <m_gol> hmm, maybe I didn't apply this label correctly
[09:07:42] <m_gol> this just seems to be a bug in that master differs from compat
[09:07:59] <timmywil> Yup, we'll need a fix. Should we escalate to blocker?
[09:08:28] <AndChat-402864> I wouldn't call it a blocker
[09:08:30] <m_gol> I'm not sure, this already works like that in latest releases
[09:08:38] <timmywil> ah
[09:08:40] <timmywil> ok then
[09:08:43] <m_gol> so I'd say it'd be nice to fix it but not a blocker, certainly not before alpha
[09:08:52] <timmywil> gotcha
[09:09:55] <timmywil> Then there's https://github.com/jquery/jquery/issues/2390
[09:10:13] <m_gol> there was a discussion under a commit
[09:10:19] <timmywil> It looks like we're leaning towards adding the unload handler everywhere and ignoring the chrome app error
[09:10:21] <m_gol> I linked to it
[09:10:23] <m_gol> yup
[09:10:27] <timmywil> yea, here https://github.com/jquery/sizzle/commit/28f4c67c508719cc76e2075dce0e4cbe0e325919
[09:10:38] <m_gol> at least until Edge fixes it
[09:10:41] <markelog> it seems we should communicate with edge team
[09:10:47] <m_gol> which may not happen before 3.0.0
[09:10:50] <markelog> did we send them a letter?
[09:11:05] <timmywil> well, I think jdalton has been in contact with them
[09:11:05] <AndChat-402864> *if* Edge fixes it
[09:11:08] <m_gol> markelog: jdalton took part in the discussion, I contacted Jacob Rossi before... they know
[09:11:18] <timmywil> and Jacob, yea
[09:11:27] <markelog> do they plan do something about those errors?
[09:11:43] <timmywil> I don't think they've given us an answer on that, have they?
[09:11:57] <m_gol> they didn't
[09:12:00] <timmywil> sort of, if they can get to it
[09:12:20] <timmywil> but I'm fine with the proposed solution
[09:12:41] <markelog> where do we talk to them, irc, mail?
[09:12:56] <markelog> twitter? )
[09:13:05] <timmywil> It's been mostly on github so far, afaict.
[09:13:17] <AndChat-402864> I sent smoke signals :)
[09:13:29] <markelog> where is this thread?
[09:13:30] <timmywil> m_gol: I accidentally closed my irc after you sent me all those emails. Could you send them again? :P
[09:13:35] <m_gol> lol
[09:13:51] <m_gol> timmywil: done
[09:13:52] <timmywil> thanks
[09:14:04] <m_gol> my history kept them between restarts :)
[09:14:05] <markelog> timmywil: will you send them a letter?
[09:14:30] <timmywil> I can, but they seem aware.
[09:14:45] <timmywil> I think jdalton is right in that we need to act is if it won't be fixed.
[09:14:57] <markelog> why?
[09:15:16] <markelog> should we land fixes for bug that gonna be fixed?
[09:15:25] <markelog> or they not planning to do so?
[09:15:31] <m_gol> markelog: because they haven't fixed it yet and apparently they won't make it before Windows 10 release
[09:15:40] <m_gol> so you never know when and if they fix it
[09:15:44] <timmywil> that's what I mean. I don't think even the Edge team knows whether they'll get to it.
[09:15:46] <m_gol> we can always restore the workaround later
[09:16:00] <timmywil> better to err on the side of it working regardless.
[09:16:15] <markelog> mm, what is the point to talk to the edge team, if they not planning to do anything anyway (
[09:16:47] <markelog> that seems incoherent
[09:16:58] <timmywil> well, I think we can count on a fix *eventually*, but maybe not before they release.
[09:17:38] <m_gol> we don't usually introduce workaround to bugs in rolling-release browsers hoping they'll fix it but this is different - we already have this workaround in latest releases
[09:17:39] <markelog> i think browser vendors should talk more closely with lib writers about these things
[09:18:01] <markelog> not for everything
[09:18:03] <markelog> for example
[09:18:07] <markelog> onfocusin
[09:18:11] <timmywil> I can email and get a more concrete answer, but from this is just how I suspect things will play out.
[09:18:29] <markelog> if it is applicable only in one "old" browser
[09:18:36] <markelog> do we need that fix at all?
[09:19:10] <markelog> i mean
[09:19:23] <markelog> that "if" support.onfocusin check
[09:20:05] <markelog> if they violated the spec and removed the one way to check that support?
[09:20:29] <timmywil> on that one, I'd be more inclined to push them for a fix
[09:20:40] <markelog> it seems those talks about browser vendors to be more close to the end-user don't hold up
[09:20:57] <markelog> which is very disappointing
[09:21:05] <timmywil> well, they already have an internal bug tracking it
[09:21:11] <timmywil> they were running the jQuery test suite.
[09:21:19] <markelog> exactly!
[09:21:25] <markelog> so why didn't they contact us?
[09:21:25] <timmywil> I'm confused
[09:21:37] <markelog> they knew there was issues with they version
[09:21:51] <markelog> but they choose not to discuss this
[09:22:59] <markelog> now we have to increase the size, complexity and decrease the speed of those events
[09:23:10] <markelog> more or less with other issues
[09:23:31] <markelog> two of those things are bad for end-user
[09:25:01] <timmywil> I don't know. It's not pragmatic for them to contact us about every failure their browser has during development. I'm not sure I'd even want them to. Just contact us about bugs that are especially problematic or ones they don't believe should be fixed.
[09:25:32] <timmywil> But I agree we need to communicate on this one because we want this one to be fixed on their end.
[09:26:23] <markelog> i think jquery code is the more or less reflection of the current state of js code-paths
[09:27:26] <markelog> so i think every failure of jq tests could have a direct impact on the correctness of a lot of sites out there
[09:27:52] <timmywil> absolutely, but I think that's why they test against jQuery in the first place.
[09:27:55] <m_gol> I think it would be cool if they contacted us about such issues, especially if they're different to behavior in earlier versions
[09:28:00] <markelog> well, not "impact", but indication that is
[09:28:06] <m_gol> I guess timmywil can as for that in an email :)
[09:28:19] <timmywil> I think we basically agree here. I will contact rey and jacob on this one.
[09:28:29] <m_gol> timmywil: +1
[09:28:40] <markelog> yeah, i just disappointed a bit here (
[09:29:00] <m_gol> markelog: can we close https://github.com/jquery/jquery/issues/2357? I don't think at this point there's anything else to do here
[09:29:24] <markelog> without m_gol initiative we probably would know about it only after final release
[09:29:47] <markelog> m_gol: some tests
[09:29:52] <markelog> other then support ones
[09:29:57] <markelog> are also checks ua-string
[09:30:12] <markelog> like https://github.com/jquery/jquery/pull/2336
[09:30:31] <m_gol> why were those tests needed to not run in IE, could you remind?
[09:30:57] <markelog> not in Edge you mean?
[09:31:07] <markelog> well, they not supposed to
[09:31:09] <markelog> originally
[09:31:21] <markelog> they could be possibly problematic
[09:32:09] <markelog> but in 2336, it seems they should run
[09:32:13] <markelog> in edge
[09:32:24] <markelog> but we need to change assertion note at least
[09:32:28] <m_gol> markelog: no, I mean this: https://github.com/jquery/jquery/blob/63a577aa0bcb439c1730c3825407d86c128b17be/test/unit/event.js#L2731-L2733
[09:32:42] <m_gol> the comment doesn't say why IE is excluded from those tests
[09:32:46] <markelog> and then, when fixed edge will came out, we need to change that again i guess
[09:32:59] <m_gol> ah, because of focusin
[09:33:12] <markelog> yeah )
[09:33:13] <m_gol> so yeah, it's good they run in Edge in the current state
[09:33:20] <markelog> originalEvent is different
[09:33:37] <m_gol> I'd close the ticket then; if Edge changes, we'll see an error in tests anyway
[09:33:48] <markelog> well
[09:33:55] <markelog> i think we need to change assertion note
[09:34:01] <m_gol> sounds good
[09:34:06] <markelog> and test note too
[09:34:14] <markelog> maybe there is more tests like that
[09:34:18] <m_gol> this is the only place where we sniff for Chrome except support tests so this is the only -lace
[09:34:24] <m_gol> * place
[09:34:30] <markelog> there should be more places like that
[09:34:56] <timmywil> we could investigate and leave open for now
[09:35:04] <markelog> yeah
[09:35:09] <markelog> not a blocker anyways
[09:35:23] <timmywil> what about https://github.com/jquery/jquery/issues/2289 Remove jQuery.support?
[09:35:31] <markelog> don't know!
[09:35:43] <markelog> easier thing we can do is to change it to "_support"
[09:36:06] <markelog> otherwise we can't run those "regression" tests
[09:36:19] <markelog> so it seems it should be exposed
[09:36:38] <timmywil> I'm inclined to leave it as-is, since it's already documented and mobile uses it.
[09:36:49] <timmywil> I'm not sure it's worth the effort.
[09:36:57] <markelog> yeah, me too
[09:37:18] <markelog> but
[09:37:24] <markelog> it is a question
[09:37:35] <markelog> do we need these exposure and those test
[09:37:42] <markelog> if we will have e2e tests
[09:37:43] <markelog> ?
[09:37:52] <AndChat-402864> Patch welcome, as far as I'm concerned
[09:38:14] <AndChat-402864> But the exposure is valuable, even with e2e
[09:38:17] <m_gol> I actually like it
[09:38:27] <m_gol> that you can easily see the state of various supported browsers
[09:38:30] <AndChat-402864> It reveals when workarounds can be removed
[09:38:33] <m_gol> yup
[09:38:52] <m_gol> support comments can be also used for that but nothing is more reliable that support tests results ;)
[09:38:56] <AndChat-402864> So any change would have to preserve that property
[09:38:57] <markelog> yeah, although is there a way to not expose that property but run those tests anyway?
[09:39:01] <markelog> for example
[09:39:11] <m_gol> that would be preferrable but might not be easy in our current setup
[09:39:20] <timmywil> ok, I'll close. If someone feels inspired to open a PR, we'll consider it.
[09:39:25] <AndChat-402864> Sure... AMD
[09:39:26] <m_gol> we'd basically have to force this one module to be loaded via AMD
[09:39:35] <markelog> if it could be a e2e test that is load that module through amd
[09:39:41] <markelog> like a special page
[09:40:07] <markelog> it seems we all think alike )
[09:41:33] <timmywil> ok, that last thing is I have a list of PRs there that I think can be landed. Pending objections, feel free to land. I will land probably land gnarf's tests.
[09:41:59] <timmywil> unless someone else gets to it first
[09:42:11] <markelog> could you post items of that list?
[09:42:44] <timmywil> hmm?
[09:42:54] <gibson042> I think they all have LGTMs
[09:42:55] <timmywil> they're all here: https://docs.google.com/document/d/1BadwSO6Sn91RBfr05s77r81ncEi0oMBJ5mZS-k215vg/edit#
[09:43:05] <gibson042> Just haven't actually landed
[09:43:51] <markelog> yeah
[09:43:55] <markelog> just checked
[09:44:07] <timmywil> I think we've gone through the vetting process for the ones I've listed.
[09:44:19] <markelog> it seems so
[09:44:25] <markelog> prop == attr
[09:44:31] <markelog> is especially good
[09:44:35] <markelog> wanted to do it
[09:44:37] <m_gol> there's also https://github.com/jquery/jquery/pull/2401, I'll land it today with an integration test
[09:44:38] <markelog> for a long time )
[09:44:43] <gibson042> I don't like merging without hitting both branches, and often don't have the time to spend resolving the cherry pick
[09:44:48] <markelog> m_gol: cool
[09:44:56] <timmywil> m_gol: cool, thanks
[09:45:08] <markelog> gibson042: oh, right
[09:45:18] <markelog> should we ask 2384 owner
[09:45:24] <markelog> to provide a pull for the compat
[09:45:41] <markelog> otherwise it would be nightmare to land in compat
[09:45:47] <gibson042> I'd really love to get on both builds from master
[09:45:59] <gibson042> But that's future work
[09:46:15] <markelog> future work?
[09:46:29] <timmywil> he means generating compat from master using a build script, I think.
[09:46:33] <markelog> aaaa
[09:46:34] <markelog> right )
[09:46:41] <gibson042> Getting rid of company as a branch
[09:46:43] <gibson042> Yeah
[09:46:47] <markelog> okay, i will post a note for the 2384
[09:46:53] <markelog> asking to provide another pull
[09:46:54] <markelog> after
[09:46:55] <markelog> that
[09:46:57] <m_gol> unless we drop Compat completely before anyone gets to that. We've discussed it, this may be difficult enough that it would take more time to do it than we'll spend cherry-picking...
[09:47:01] <markelog> it seems we could land it
[09:47:01] <gibson042> *compat
[09:47:04] <markelog> sounds good?
[09:47:08] <timmywil> sounds good
[09:47:29] <timmywil> m_gol: yea, if we drop IE8 soon enough, we don't even have to worry about it.
[09:47:35] <timmywil> ok, thanks everybody!
[09:47:38] <gibson042> Indeed
[09:48:04] <timmywil> see you in -dev
