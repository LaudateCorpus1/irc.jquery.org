[12:01:05] <scott_gonzalez> ?pepteam
[12:01:05] <b-ot> arschmitz jdalton jrossi jrossi1 jrossi2 jrossi3 jrossi9billion M4rius scott_gonzalez snover
[12:01:12] <scott_gonzalez> jzaefferer
[12:01:26] <jzaefferer> hello
[12:02:23] <jzaefferer> one thing to discuss is this: https://github.com/jquery/PEP/issues/214
[12:03:38] <scott_gonzalez> Yes, do we want to polyfill the on* attributes?
[12:03:51] <scott_gonzalez> Well, not the attributes, but the properties.
[12:04:11] <scott_gonzalez> I assume we don't want to go down the road of supporting the attributes.
[12:04:24] <scott_gonzalez> We highly discourage their use anyway.
[12:05:26] <scott_gonzalez> I guess we're not gonna get much of a response with nobody else being here...
[12:06:03] <scott_gonzalez> I'm -1 on attributes, but +1 on properties.
[12:07:40] <jdalton> word
[12:08:03] <scott_gonzalez> hey jdalton
[12:08:10] <scott_gonzalez> We're talking about https://github.com/jquery/PEP/issues/214
[12:08:38] <scott_gonzalez> As mentioned in the issue, I think we can handle attributes and properties differently.
[12:08:44] <scott_gonzalez> I'm -1 on attributes and +1 on properties.
[12:09:08] <scott_gonzalez> Because attributes are a bit messier and we always discourage inline event handlers anyway.
[12:14:44] <jzaefferer> which ones are the properties, which ones are attributes?
[12:15:04] <jzaefferer> the interfaces quoted there all have "attribute" as their type
[12:15:09] <jrossi> sorry I was late (connectivity issues), were you discussing https://github.com/jquery/PEP/issues/214 ?
[12:15:26] <jzaefferer> yeah
[12:16:18] <jrossi> would it help to have data on the attribute usage in the wild?
[12:17:27] <scott_gonzalez> jzaefferer: There's all attributes, which are also represented as properties.
[12:17:38] <scott_gonzalez> I'm saying we'd just implement them as properties, not as attributes.
[12:17:52] <jrossi> that would probably be fine
[12:18:30] <scott_gonzalez> Really nobody should be using on* attributes at all.
[12:18:37] <jrossi> so then setAttribute('onpointerdown','function() { }') wouldn't work
[12:18:45] <jrossi> i think
[12:18:47] <jrossi> but that's ok
[12:19:05] <scott_gonzalez> Right, but who would do that instead of just .onpointerdown = function() {}
[12:19:10] <jrossi> right
[12:19:17] <scott_gonzalez> Then you don't have to worry about the craziness of attribute escaping.
[12:19:26] <jrossi> I think it's totally fine to scope it to props
[12:19:36] <jrossi> call out the attr stuff in the readme
[12:19:38] <scott_gonzalez> And we don't need to eval().
[12:19:42] <jrossi> but nobody will care
[12:19:43] <jrossi> yeah
[12:19:49] <jrossi> which is good in case we're running in CSP
[12:20:02] <scott_gonzalez> Ok, so I think that's resolved.
[12:20:49] <scott_gonzalez> jzaefferer and I spent some time going through the open PRs and issues yesterday.
[12:21:06] <scott_gonzalez> jzaefferer is going to work through a bunch of the smaller issues to get the numbers down.
[12:21:22] <scott_gonzalez> We've already landed the fix for using PEP in node: https://github.com/jquery/PEP/issues/223
[12:21:30] <scott_gonzalez> Along with a few other things.
[12:21:40] <jrossi> I was going to look at a quick fix for https://github.com/jquery/PEP/issues/194
[12:21:43] <scott_gonzalez> jzaefferer is working on getting WIP builds on the CDN.
[12:22:13] <scott_gonzalez> ok, when do you think you can work on that?
[12:22:24] <scott_gonzalez> I'd like to get a release out now that we have the package.json update in master.
[12:22:50] <jrossi> I need to get a device to test with first
[12:22:55] <jrossi> but I think we have one
[12:23:14] <jrossi> I'm working from home today, but perhaps tomorrow I can look at this
[12:23:18] <scott_gonzalez> ok
[12:23:38] <jrossi> or go to the ATT store to test :-p
[12:23:39] <scott_gonzalez> So unless there are any objections, let's shoot for a release before next week's meeting.
[12:23:50] <jdalton> woo
[12:23:50] <jrossi> SGTM
[12:24:22] <scott_gonzalez> We have this PR: https://github.com/jquery/PEP/pull/195
[12:24:26] <scott_gonzalez> Which edits a W3C test.
[12:24:40] <scott_gonzalez> So we'll wait a few days and see if we get a response to https://github.com/jquery/PEP/pull/195/files#r43264520
[12:25:08] <scott_gonzalez> If not, we should just submit the change to WPT.
[12:25:25] <jrossi> agreed
[12:25:53] <scott_gonzalez> That's everything from the agenda.
[12:26:00] <scott_gonzalez> Does anyone have anything else to discuss?
[12:27:39] <scott_gonzalez> I guess that's all for today.
[12:27:41] <scott_gonzalez> Thanks everyone.
[14:04:14] <arschmitz> agcolom: apsdehal: gabrielschulhof: jasperdegroot: cgack meeting time
[14:04:19] <apsdehal> Hi
[14:04:24] <cgack> howdy
[14:05:17] <agcolom> On holiday with the family and about to have dinner... I'll update the PR and issue counts on the notes but prob cannot really attend properly...
[14:05:23] <jasperdegroot> hi
[14:05:35] <jasperdegroot> enjoy your vacation Anne
[14:05:44] <arschmitz> agcolom: enjoy
[14:05:49] <gabrielschulhof> Hey!
[14:06:09] <agcolom> thanks :-)
[14:06:17] <arschmitz> lets get started
[14:07:58] <arschmitz> i just gave navbar the thumbs up
[14:08:03] <arschmitz> i think we are good to merge
[14:08:31] <agcolom> notes: https://docs.google.com/spreadsheets/d/1xGEVtftLDEHAA37YYlA23J_EZwIRyMUaseBY790byPM/edit#gid=1883740404
[14:08:36] <arschmitz> gabrielschulhof: want to give an update on your work with the bootstrap?
[14:09:01] <cgack> awesome, i'll get that merged soon-ish
[14:09:11] <gabrielschulhof> Yeah.
[14:09:48] <gabrielschulhof> I have to make my way through the remaining tests and implement the rest of the data-* parameters, like for pushState and ... what was the other one?
[14:09:57] <gabrielschulhof> Oh, ns.
[14:10:12] <arschmitz> which should be part of the backcompat not exposed directly
[14:10:33] <gabrielschulhof> How do you mean?
[14:10:41] <arschmitz> ns is deprecated
[14:10:54] <jasperdegroot> cgack: you will get merge conflict with demos. Please check the header and footer markup on the navbar demo page and don't break the demos menu :)
[14:10:59] <arschmitz> so it should be enabled by doing data-backcompat="true"
[14:11:08] <gabrielschulhof> Oh, OK. Gotcha.
[14:11:15] <cgack> jasperdegroot: I'll do my best
[14:11:17] <apsdehal> data-backcompat was already there.
[14:11:20] <arschmitz> cgack: maybe merge and push again to your branch
[14:11:31] <arschmitz> so we can do one last review of the demos
[14:11:33] <gabrielschulhof> OK, so then just pushState.
[14:11:34] <cgack> merge 1.5-dev or something else?
[14:11:48] <arschmitz> cgack: rebase with 1.5-dev
[14:11:55] <cgack> right on. will do
[14:12:00] <jasperdegroot> yeah, just rebase
[14:12:01] <arschmitz> and then force push your branch
[14:12:14] <arschmitz> actually push to a branch on the main repo
[14:12:23] <arschmitz> so it goes on to view since its demos we care about
[14:12:50] <cgack> okay, i'll push my branch to upstream after rebase so we can get some eyes on it
[14:13:04] <arschmitz> apsdehal: great i thought it was but i had not checked and gabrial had mentioned ns missing
[14:13:41] <apsdehal> I had done some hacks to fit everything. Like that ../jquery.setPushState.js stuff
[14:13:55] <apsdehal> I need to recheck the code once to confirm
[14:14:34] <arschmitz> apsdehal: great just cordinate with gabrielschulhof on that this is a priority and blocking selectmenu
[14:14:54] <apsdehal> ok
[14:15:15] <apsdehal> I will have a look at the latest branch pushed by gabrielschulhof
[14:15:37] <gabrielschulhof> apsdehal: Excellent!
[14:17:58] <arschmitz> gabrielschulhof: i assume nothing new on select menu
[14:18:29] <gabrielschulhof> No, unfortunately.
[14:18:37] <arschmitz> ok
[14:18:52] <arschmitz> there has been a lot of activity the last 2 weeks on ui
[14:18:57] <arschmitz> some of which relates to us
[14:19:00] <gabrielschulhof> grunt-qunit-istanbul is also still stuck.
[14:19:18] <arschmitz> lots of fixes for some stuff on widgets
[14:19:34] <arschmitz> gabrielschulhof: im ok with just using a commit sha for now on that
[14:19:45] <arschmitz> lets not let that be a blocker
[14:19:53] <gabrielschulhof> Yeah, I moved it to that.
[14:20:02] <gabrielschulhof> That's how I pushed the branch apsdehal will be looking at.
[14:20:30] <arschmitz> ok
[14:20:37] <arschmitz> lets just go with that for now
[14:21:20] <arschmitz> on ui there has also been a lot of work on download builder
[14:21:27] <arschmitz> some of which gets it closer to supporting mobile
[14:21:31] <arschmitz> though its not there yet
[14:23:03] <arschmitz> so one issue i wanted to discuss
[14:23:08] <arschmitz> https://github.com/jquery/jquery-mobile/pull/8321
[14:23:20] <arschmitz> my personal opinion is that there is no reason to do this
[14:23:29] <arschmitz> since we dont care about php
[14:23:35] <jasperdegroot> yeah, I thought the same
[14:23:58] <arschmitz> and this will cause it to run all the current tests on each
[14:24:03] <arschmitz> so its will take hours to finish
[14:25:43] <gabrielschulhof> *whew* ... yeah!
[14:26:10] <gabrielschulhof> ... and like, we're client-side ... seriously, we use php out of necessity ...
[14:26:19] <arschmitz> yup
[14:26:26] <jasperdegroot> just on the demo pages, but we don't test those
[14:26:29] <arschmitz> its mostly just to run the demo tests
[14:26:42] <jasperdegroot> oh we do test those
[14:26:45] <arschmitz> jasperdegroot: no we do test them thats why we use it on travis
[14:26:47] <jasperdegroot> sorry
[14:27:04] <arschmitz> but we are not testingthe php
[14:27:09] <jasperdegroot> right
[14:27:25] <cgack> no need to test all the phps
[14:27:34] <arschmitz> yeah i think thats crazy
[14:27:54] <arschmitz> i mean node versions i would do if it were not so slow
[14:28:00] <arschmitz> since it effects the build
[14:28:05] <arschmitz> but not php
[14:28:13] <jasperdegroot> speaking of demos ...
[14:28:35] <jasperdegroot> I have been working on converting the menu from collapsible to accordion
[14:28:48] <arschmitz> im sure thats some work
[14:28:48] <jasperdegroot> which has been ... interesting :)
[14:28:58] <jasperdegroot> yeah
[14:28:59] <arschmitz> and i would say i woul not worry about making them exactly the same
[14:29:25] <arschmitz> they are not a direct replacement its a whole new widget with its own limitations
[14:29:38] <jasperdegroot> question: are we not planning on adding enhanced option to accordion?
[14:29:43] <arschmitz> that said we can potentially extend it to add in some things if we think they are important
[14:29:54] <arschmitz> not right off its a lot of work for almost nothing
[14:29:58] <arschmitz> its basicly only the icons
[14:30:44] <arschmitz> and the changes would have to be in UI
[14:31:35] <jasperdegroot> I can add all the classes in the markup but there is no option enhanced like we had with collapsible
[14:31:53] <arschmitz> enhanced has nothing to do with classes any more
[14:32:02] <jasperdegroot> huh
[14:32:19] <jasperdegroot> enhanced = true means that all markup is already in place
[14:32:24] <jasperdegroot> right?
[14:32:29] <arschmitz> yes
[14:32:45] <arschmitz> but classes are added no matter what now
[14:32:55] <arschmitz> because they have to be for tracking with classes option
[14:33:06] <jasperdegroot> so adding them in the markup won't speed up anything?
[14:33:14] <arschmitz> but core is smart enough if the class is already there it wont re add it
[14:33:20] <jasperdegroot> ok
[14:33:35] <arschmitz> so all the classes option does now is handle generated markup
[14:33:39] <jasperdegroot> but does it make a difference in performance?
[14:33:48] <arschmitz> small yes
[14:33:59] <arschmitz> but no different then before
[14:34:08] <arschmitz> this wont change perf from 1.4
[14:34:17] <jasperdegroot> I see
[14:34:35] <arschmitz> you could add the classes your self before too
[14:34:39] <arschmitz> with out enhanced
[14:34:45] <arschmitz> and it would not re add them
[14:34:53] <jasperdegroot> I know
[14:35:07] <arschmitz> but _addClass has to always run
[14:35:08] <jasperdegroot> but the whole idea behind the enhanced option is to improve performance
[14:35:12] <arschmitz> or the classes option owont work
[14:35:18] <arschmitz> yea
[14:35:31] <arschmitz> it in reality does little we found out
[14:35:37] <gabrielschulhof> jasperdegroot: I think the performance improves by reducing the number of DOM manips - not so much by adding classes.
[14:35:46] <arschmitz> gabrielschulhof: exactly
[14:35:52] <gabrielschulhof> So DOM manip is no longer a big issue?
[14:35:52] <arschmitz> which we dont do that much of actually
[14:36:11] <arschmitz> we changed many widget to reduce dom manip
[14:36:23] <arschmitz> button is just addint a span but you can still use enhanced
[14:36:28] <arschmitz> same with checkbox radio
[14:36:28] <gabrielschulhof> Yeah, and we do a lot of DOM manip on disconnected chunks now.
[14:36:36] <arschmitz> controlgrouop now is classes only
[14:36:44] <arschmitz> accordion is only icon spans
[14:36:51] <arschmitz> collapsible was crazy
[14:36:52] <jasperdegroot> yeah accordion doesn't do any DOM manip either
[14:37:00] <jasperdegroot> just adds the classes
[14:37:04] <arschmitz> checkbox radio did before does not now
[14:37:14] <arschmitz> so we actually fixed most of the bad places
[14:37:24] <arschmitz> so it has made the option not do all that much
[14:37:26] <jasperdegroot> then maybe I should omit the classes in the markup if it doesn't make much difference anyway
[14:37:33] <jasperdegroot> but it's also a showcase
[14:37:34] <arschmitz> jasperdegroot: ah wait
[14:37:35] <gabrielschulhof> Well, listview still does a lot, but only because it tends to be large and repetitive.
[14:37:39] <arschmitz> so thats not entirely true
[14:37:51] <arschmitz> adding the classes makes a difference
[14:37:58] <arschmitz> but thats not effected by the enhanced option
[14:38:00] <jasperdegroot> but very small
[14:38:11] <arschmitz> well it depends
[14:38:21] <arschmitz> in some cases it can be big its very use case specific
[14:38:24] <jasperdegroot> yeah I see your point about the enhanced option
[14:38:27] <arschmitz> if you add a class then get demensions
[14:38:32] <jasperdegroot> ok
[14:38:33] <arschmitz> that causes a reflow
[14:38:40] <arschmitz> so do that a bunch
[14:38:55] <arschmitz> where as if your classes are all there already you reduce content flashes
[14:39:04] <jasperdegroot> yes good point
[14:39:07] <arschmitz> and can POTENTIALLY make a big perf difference too
[14:39:18] <jasperdegroot> ok gotcha
[14:39:29] <arschmitz> yeah we dont want to confuse class addition with enhanced
[14:39:42] <arschmitz> they are now ( and really always should have been ) 2 different htings
[14:40:33] <jasperdegroot> I don't think we made that clear
[14:40:48] <arschmitz> no we didnt we directly said they were one in the same
[14:40:51] <arschmitz> and coded them as such
[14:40:55] <jasperdegroot> yup
[14:40:58] <gabrielschulhof> Well, I always wrote that enhanced = ( dom structure + classes ) a priori
[14:41:00] <arschmitz> but that was not correct
[14:41:04] <gabrielschulhof> s/wrote/documented/
[14:41:04] <b-ot> Correction, <gabrielschulhof> Well, I always documented that enhanced = ( dom structure + classes ) a priori
[14:41:20] <gabrielschulhof> Well, I'll be ... ^
[14:41:23] <jasperdegroot> haha
[14:41:26] <arschmitz> lol i think thats new
[14:41:40] <jasperdegroot> I saw that gitter has that feature
[14:41:41] <gabrielschulhof> Motivates you to write correct regex.
[14:41:59] <gabrielschulhof> Does it also say "Unterminated s statement"?
[14:41:59] <jasperdegroot> but didn't know we have it here on IRC now :)
[14:42:13] <gabrielschulhof> s/it/the bot
[14:42:13] <b-ot> Correction, <jasperdegroot> but didn't know we have the bot here on IRC now :)
[14:42:20] <jasperdegroot> hehe
[14:42:33] <gabrielschulhof> Bah! Forgiving.
[14:42:44] <jasperdegroot> ok where were we
[14:42:50] <gabrielschulhof> ... and it applies to the last statement, not the last thing /you/ said ...
[14:42:53] <gabrielschulhof> Anyway ...
[14:42:56] <arschmitz> lol
[14:42:58] <jasperdegroot> one other question about the demos
[14:43:03] <arschmitz> shoot
[14:43:22] <jasperdegroot> I was about to work on CSS to move the icon in the menu from left to right side
[14:43:38] <jasperdegroot> but then I thought... what about moving the menu to the right side of the page
[14:44:03] <jasperdegroot> I had some small layout/style improvements in mind anyway
[14:44:21] <jasperdegroot> but any objections to moving the menu?
[14:44:22] <arschmitz> i would have to see it
[14:44:28] <jasperdegroot> ok
[14:44:35] <arschmitz> but i have no general objectsion what ever looks best to the majority
[14:45:11] <jasperdegroot> I'll show it if it's not good I'll move it back and change the icon position with CSS
[14:45:32] <jasperdegroot> s/it if/it, and if/
[14:45:32] <b-ot> Correction, <jasperdegroot> I'll show it, and if it's not good I'll move it back and change the icon position with CSS
[14:45:39] <jasperdegroot> well done bot :)
[14:45:47] <cgack> sounds good to me
[14:46:16] <cgack> jasperdegroot: arschmitz i pushed navbar to its own branch on view -> http://view.jquerymobile.com/7705-navbar-classes-option/demos/  if ya'll wanna take a look
[14:46:45] <jasperdegroot> arschmitz: did you already know why the quick links in the demos are buggy... when you click on the link it scrolls to the section and then back to top
[14:46:51] <jasperdegroot> or would you have to look into it?
[14:46:55] <apsdehal> gabrielschulhof: Where should I push when I make changes, to my PR or the new branch you created?
[14:46:56] <arschmitz> cgack: awesome thank you
[14:47:07] <jasperdegroot> cgack: great, I take a look
[14:47:51] <cgack> arschmitz: jasperdegroot I'll wait for an update on the PR before I squash and merge the PR
[14:48:22] <jasperdegroot> cgack: I already checked the issues I noticed after accordion merge and this looks good
[14:48:37] <jasperdegroot> so go ahead and merge
[14:48:44] <cgack> sweet!
[14:48:54] <gabrielschulhof> apsdehal: Update your repo from upstream, then checkout your branch, then git reset --hard pr-8265-rebase and git push -f to your clone.
[14:49:06] <apsdehal> ok
[14:49:18] <gabrielschulhof> apsdehal: That'll update your PR to contain my branch, and it'll let you make subsequent changes that'll appear in your PR.
[14:49:22] <jasperdegroot> there is an issue in the menu because of an unsolved merge conflict while merging accordion but I fixed that in 1.5-demos-issues
[14:49:30] <jasperdegroot> so just leave it in there
[14:50:09] <jasperdegroot> I will rebase that branch against 1.5-dev after you merged
[14:51:49] <apsdehal> done, pr is updated to pr-8265-rebase branch noew
[14:52:01] <apsdehal> s/noew/now
[14:52:01] <b-ot> Correction, <apsdehal> done, pr is updated to pr-8265-rebase branch now
[14:52:14] <gabrielschulhof> apsdehal: Awesome!
[14:53:00] <apsdehal> It is throwing missing QUnit errors.
[14:53:15] <gabrielschulhof> apsdehal: Yes, because some test suites still include qunit via script tag.
[14:53:45] <gabrielschulhof> apsdehal: qunit.js must not appear in a script tag in the original markup if requirejs is used.
[14:54:04] <apsdehal> Ok, can you list out once again all the changes left?
[14:55:57] <gabrielschulhof> 1. Remove all script tags containing qunit.js. 2. Remove all scripts that run $.testHelper.asyncLoad() and replace them with a script tag that loads bootstrap.js 3. Make a data-* parameter for pushState() so, whenever you encounter a script that calls $.testHelper.setPushState(), instead of that you add, like, data-push-state="true" to bootstrap.js
[14:56:09] <gabrielschulhof> ... and /it'll/ then call $.testHelper.setPushState()
[14:56:38] <gabrielschulhof> arschmitz: Anything I missed? ^
[14:56:45] <arschmitz> i dont think so
[14:57:00] <arschmitz> once thats done we can both pull it and go through and see if there is anything else
[14:57:22] <gabrielschulhof> :+1:
[14:58:35] <arschmitz> apsdehal: feel free to ping us with issues this is absolute top priority
[14:59:00] <apsdehal> Ok, I have note all the changes left, and I will push soon the fixes.
[14:59:04] <arschmitz> i think i got my IRC client fixed and stable again so i should actually get your messages
[14:59:21] <apsdehal> Thats cool
[14:59:55] <arschmitz> ok does any one have anything else?
[15:00:56] <cgack> I'm good
[15:01:17] <arschmitz> ok see everyone back on dev
