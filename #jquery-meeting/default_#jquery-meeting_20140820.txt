[09:00:13] <scott_gonzalez> arschmitz: jzaefferer fnagel gnarf jperrault kborchers mikesherov petersendidit tj_vantoll1
[09:00:34] <arschmitz> Hi
[09:00:36] <tj_vantoll1> hey
[09:00:46] <kborchers> hi
[09:00:48] <jperrault> hi
[09:01:31] <scott_gonzalez> Ok, let's start with button review.
[09:01:49] <scott_gonzalez> I've seen a lot of discussion going on in the PR, but I wasn't paying attention to the actual discussion.
[09:02:11] <scott_gonzalez> arschmitz: Looks like you're supposed to send a PR for window/document properties.
[09:02:11] <arschmitz> im currently rebasing to clean up the commit history
[09:02:23] <fnagel> hi
[09:02:23] <arschmitz> yup
[09:02:53] <arschmitz> im going to do that when i finish rebasing this branch
[09:03:24] <scott_gonzalez> ok
[09:03:27] <scott_gonzalez> Looks like it should be really simple.
[09:03:38] <arschmitz> yeah it should be
[09:03:41] <mikesherov_> hi
[09:03:43] <scott_gonzalez> Just need to shuffle a few lines around.
[09:03:47] <arschmitz> yup
[09:03:53] <scott_gonzalez> The binding refs will need to move up.
[09:04:08] <scott_gonzalez> Who's doing JSCS update?
[09:04:13] <scott_gonzalez> Or is there no owner yet?
[09:04:18] <arschmitz> its done already
[09:04:21] <scott_gonzalez> ok
[09:04:32] <arschmitz> jzaefferer:  did it last week
[09:05:00] <mikesherov_> also, waiting on markelog to land the complex parens rules so we can land JSCS 1.6
[09:05:21] <arschmitz> yeah it actually didnt catch anything new that jzaefferer thought it would
[09:05:23] <mikesherov_> which should validate a lot of stuff we're not currently validating, and also brings inline commenting
[09:05:27] <scott_gonzalez> Ok, do the button notes in the agenda look right now?
[09:05:46] <scott_gonzalez> mikesherov_: At that point will we be ready for all repos?
[09:06:01] <arschmitz> scott_gonzalez: labels and focus are done and in the main branch now
[09:06:15] <scott_gonzalez> There are a few other deps that should be normalized across repos, so I'd like to just do it all at once.
[09:06:18] <scott_gonzalez> So I'm waiting for JSCS.
[09:06:42] <mikesherov_> It will catch a lot of stuff
[09:06:51] <rxaviers> hello
[09:07:00] <mikesherov_> I'm not sure if its everything even then
[09:07:01] <arschmitz> scott_gonzalez: one thing that came up in review was duplicated logic between button and checkboxradio
[09:07:12] <scott_gonzalez> mikesherov_: If we should continue to wait, that's fine.
[09:07:13] <arschmitz> and i would also assume selectmenu and spinner
[09:07:25] <scott_gonzalez> The version mismatches across repos for other deps is far from a critical issue.
[09:07:46] <mikesherov_> yeah, we should continue to wait
[09:08:09] <scott_gonzalez> arschmitz: Ok, let's spend some time looking at that later this week.
[09:08:17] <arschmitz> sounds good
[09:09:12] <scott_gonzalez> fnagel was able to put together a new PR for the calendar split.
[09:09:26] <markelog> mikesherov_: on it, we have PR that might help us with it
[09:09:34] <mikesherov_> markelog: great!
[09:09:40] <scott_gonzalez> Though the PR is failing. fnagel are you aware of this?
[09:09:44] <markelog> will see )
[09:10:03] <fnagel> yes, but unit tests work in browser
[09:10:20] <mikesherov_> I want to add one item to the agenda
[09:10:32] <fnagel> Would be cool to get some feedback
[09:10:34] <scott_gonzalez> ok
[09:10:43] <scott_gonzalez> I probably won't get to this until next week.
[09:11:01] <scott_gonzalez> Though I might be able to at least start reviewing on Friday.
[09:11:17] <scott_gonzalez> History looks a lot smaller.
[09:11:20] <fnagel> ok
[09:11:44] <tj_vantoll1> fnagel: I'll review the branch as well.
[09:11:50] <scott_gonzalez> fnagel: From a quick look at the commit list, this stands out: https://github.com/fnagel/jquery-ui/commit/68bf8ab35eeed8def1dc746cf053ad954718a4d1
[09:12:04] <scott_gonzalez> Can you just squash that into the point where the file was introduced?
[09:12:10] <scott_gonzalez> Unless it was introduced prior to the split.
[09:12:14] <scott_gonzalez> In which case, just leave it.
[09:12:21] <fnagel> It was before
[09:12:27] <scott_gonzalez> ok
[09:12:36] <scott_gonzalez> That's something we can look at when we're ready to land this.
[09:12:37] <fnagel> All other language start with an upper case, so I fixed that
[09:12:54] <scott_gonzalez> Since there's be no activitiy on the datepicker branch since it was rebased, rebasing one more time won't hurt anything.
[09:13:30] <scott_gonzalez> Ok, so my big question for today...
[09:13:40] <scott_gonzalez> Should we finally get 1.9.3 out or just give up on it?
[09:13:56] <scott_gonzalez> The only purpose of 1.9.3 was to get support for newer versions of jQuery Core.
[09:14:23] <tj_vantoll1> Have people asked for a 1.9.3?
[09:14:26] <scott_gonzalez> https://github.com/jquery/jquery-ui/commit/2ca4d17982bfedc723f499b41e0936ada9eaa852
[09:14:42] <scott_gonzalez> https://twitter.com/hijonathan/status/312005263391608834
[09:14:42] <b-ot> scott_gonzalez: @hijonathan: @scott_gonzalez are there tests for compatibility with jQuery? If not, I can try to send a pr.
[09:14:55] <tj_vantoll1> Ok so yes.
[09:15:13] <scott_gonzalez> That's all I've got.
[09:15:39] <scott_gonzalez> It's not unreasonable to assume these people may have upgraded to 1.10 or higher by now.
[09:15:40] <mikesherov_> I don't think we should do I 1.9.3
[09:15:54] <tj_vantoll1> Yeah the first comment is a year and a half old at this point.
[09:16:07] <mikesherov_> so, lets not!
[09:16:10] <scott_gonzalez> ok
[09:16:11] <mikesherov_> Hooray
[09:16:16] <arschmitz> i would say dont do it too
[09:16:25] <scott_gonzalez> I'll delete the Trac milestone.
[09:16:30] <mikesherov_> YAY
[09:17:28] <scott_gonzalez> Ok, on to selectmenu.
[09:17:39] <scott_gonzalez> fnagel: What's the status of the accesskey copying?
[09:18:57] <scott_gonzalez> I think it's a bit too crippled to land.
[09:18:58] <fnagel> I've did some more testing and added this to the ticket.
[09:19:11] <fnagel> You wanted to test something
[09:19:52] <scott_gonzalez> I don't remember having anything else to test beyond what I've already done and documented in the comments.
[09:20:15] <scott_gonzalez> There's no way to listen for when an accesskey is used, right?
[09:20:22] <fnagel> Something about finding a way to use this for other widgets too
[09:20:33] <scott_gonzalez> Other than binding to keypress on the document and handling all the various combinations that browsers use.
[09:20:49] <fnagel> yes
[09:21:07] <scott_gonzalez> I think you're thinking of a different issue.
[09:22:08] <fnagel> We are ready with copying attributes for selectmenu but you wanted to test if we could make this more abstract for reuse on other widgets
[09:23:59] <scott_gonzalez> That sounds like something I might've said. Though we don't do element proxying very much.
[09:24:43] <fnagel> scott_gonzalez: you said "This one is interesting. We should see if we can solve it generically. This will be a problem for every widget that uses a menu."
[09:25:08] <fnagel> In contect of copying title and accesskey attributes
[09:25:12] <fnagel> * context
[09:26:08] <scott_gonzalez> Hmm...well that's certainly not true in that context.
[09:26:12] <scott_gonzalez> Was that in IRC?
[09:27:02] <scott_gonzalez> We'll come back to Pointer Events.
[09:27:13] <scott_gonzalez> There's a ticket about disabled not being explicitly handled on init: http://bugs.jqueryui.com/ticket/9151
[09:27:43] <scott_gonzalez> What do people think about adding a _setOptionDisabled() to the base widget and calling that from _create() and _setOption()?
[09:27:52] <fnagel> scott_gonzalez: yes in IRC
[09:28:00] <fnagel> see http://irc.jquery.org/%23jquery-meeting/default_%23jquery-meeting_20140806.log.html
[09:28:01] <scott_gonzalez> I searched GitHub and didn't find any instances of that method already existing.
[09:28:22] <scott_gonzalez> Yeah, that was about http://bugs.jqueryui.com/ticket/10458
[09:28:29] <mikesherov_> I reported this :-)
[09:29:10] <mikesherov_> I think it's fine to add that scott_gonzalez
[09:29:13] <scott_gonzalez> Yeah, a long time ago :-)
[09:29:47] <scott_gonzalez> Ok, I'll try to put together a PR for that, unless someone else wants to try to tackle it.
[09:29:52] <scott_gonzalez> It'll need to wait until 1.12.0 to land.
[09:29:54] <mikesherov_> all you
[09:29:58] <mikesherov_> that's fine
[09:30:06] <tj_vantoll1> Yeah go for it. I'm not totally following and I think a PR would help.
[09:30:17] <arschmitz> scott_gonzalez: lets talk more about that when we talk about the button stuff this week
[09:30:25] <arschmitz> scott_gonzalez: because thats kinda part of it
[09:31:02] <scott_gonzalez> ok
[09:31:37] <scott_gonzalez> Something else mikesherov_ loves...
[09:31:41] <scott_gonzalez> code metric checks http://bugs.jqueryui.com/ticket/8888
[09:31:44] <mikesherov_> ha
[09:31:51] <scott_gonzalez> Can we please just close this and not implement it?
[09:32:03] <arschmitz> +1
[09:32:14] <mikesherov_> well, can we discuss for one minute?
[09:32:18] <scott_gonzalez> sure
[09:32:19] <mikesherov_> I don't think there should be a standard code metric check across all of jQuery projects
[09:32:32] <mikesherov_> but I do think it would benefit us in UI to implement them
[09:33:01] <mikesherov_> at the very least, it'll prevent giant messy PR's
[09:33:15] <mikesherov_> and at most, it'll guide us on writing less complex code
[09:33:37] <scott_gonzalez> I don't think that it'll do anything for PRs.
[09:33:57] <scott_gonzalez> If you're talking about the community, anyone writing a massively complex code block isn't going to run tests anyway.
[09:33:57] <mikesherov_> that's probably fair scott_gonzalez
[09:34:06] <mikesherov_> well, they wont
[09:34:14] <mikesherov_> but they'll fail travis right away
[09:34:28] <mikesherov_> the funny thing is that considering the monadic properties of jQuery, very little of the complex stuff is actually caused by conditionals
[09:34:31] <scott_gonzalez> Sure, so far that hasn't meant much.
[09:34:55] <scott_gonzalez> PRs that fail generally just require us to inform the author anyway.
[09:34:56] <mikesherov_> I dunno, I am a code metrics guy
[09:35:16] <mikesherov_> so I see value in it even for just us as a guideline, but we can close if the majority feels it's not useful
[09:35:26] <scott_gonzalez> I think refactoring code just for code metrics is like refactoring code just for testability.
[09:35:37] <scott_gonzalez> It may result in worse code.
[09:35:39] <mikesherov_> well, not refactoring
[09:35:41] <mikesherov_> authoring
[09:36:09] <mikesherov_> it's just refactoring now because we have some complex code currently
[09:36:11] <arschmitz> i think we would often have to explain to the author what it even means to try and fix it too just seems like it will create a lot more work on a pr that would likly not land if its that complex
[09:36:12] <scott_gonzalez> The only time it affects you while authoring is after you've written the "bad" code and now need to refactor it (even if that's only five minutes after you wrote it)
[09:36:22] <mikesherov_> also, I DO personally write code for testability
[09:36:42] <mikesherov_> I don't believe in test driven damage
[09:37:02] <scott_gonzalez> I've never heard that term, but I like it :-)
[09:37:28] <mikesherov_> anyway, it's just an extra tool I use for objective measurement of code clarity
[09:37:39] <mikesherov_> I've found it useful in teams to implement those types of checks
[09:37:53] <mikesherov_> but again, if this group doesn't feel it would be aided by it, then we can just close
[09:38:24] <scott_gonzalez> Well, so far it's 2:1 and I'm assuming jzaefferer is in favor, so that's 2:2.
[09:38:49] <scott_gonzalez> If you want to land it, feel free to use values that work today.
[09:38:55] <mikesherov_> Yeah
[09:38:59] <mikesherov_> that's what we did at behance
[09:39:12] <scott_gonzalez> Either fix it or wontfix it. I just don't want it open any longer ;-P
[09:39:13] <mikesherov_> I landed values with the commit message: "Hey, at least it can't get any worse!"
[09:39:23] <arschmitz> ha ha
[09:39:38] <mikesherov_> OK, I move to close it then
[09:39:46] <mikesherov_> we can always revisit in the future
[09:39:51] <mikesherov_> Closing
[09:39:56] <scott_gonzalez> ok
[09:40:13] <mikesherov_> closed
[09:40:17] <mikesherov_> 398!
[09:40:39] <scott_gonzalez> AMD in demos and tests: http://bugs.jqueryui.com/ticket/10119
[09:40:51] <scott_gonzalez> This is up to everyone else.
[09:40:59] <mikesherov_> Oh, I love this
[09:41:28] <mikesherov_> Changing paths and includes in all the interactions and effects demos when Dave Stein and I rebased was very annoying
[09:41:40] <tj_vantoll1> I'm +1 on this.
[09:41:43] <scott_gonzalez> So that's a +1 from jzaefferer, rxaviers, mikesherov_, tj_vantoll1
[09:42:19] <mikesherov_> I assume we'll use require.js, and that'll need to be externalized?
[09:42:25] <arschmitz> isnt that enough to close it right there?
[09:42:25] <scott_gonzalez> Do we really want to change the defines in the source files though?
[09:43:27] <tj_vantoll1> Well we shouldn't have to change the source files.
[09:43:29] <mikesherov_> why not leave UMD in the source files?
[09:43:44] <arschmitz> yeah i would want to keep umd in the source
[09:43:46] <mikesherov_> yeah, source should be fine as is with require.js
[09:44:01] <scott_gonzalez> I dunno, it was something jzaefferer said in the ticket.
[09:44:15] <tj_vantoll1> We should be able to add require.js as an external, rip <script> tags out of the demos and tests, add some require.js config and a define call.
[09:44:16] <scott_gonzalez> Ok, so we'll leave UMD in the source files and switch demos and tests to use require.js
[09:44:18] <mikesherov_> oh I see
[09:44:32] <mikesherov_> he wants to remove UMD from the source, and then add them in in build
[09:44:33] <scott_gonzalez> So we'll pull in require.js from Bower.
[09:44:54] <tj_vantoll1> arschmitz: Does Mobile use AMD for tests/demos?
[09:44:55] <scott_gonzalez> We'll need to update jqueryui.com as well.
[09:45:00] <mikesherov_> and then the demos, because they have require would work off of unbuilt files
[09:45:02] <arschmitz> we do for tests not demos
[09:45:10] <arschmitz> but i would like to standardize this
[09:45:24] <mikesherov_> I vote for leave source as is, and add require to test suite and demos
[09:45:31] <tj_vantoll1> Same here.
[09:45:31] <arschmitz> +1
[09:45:52] <mikesherov_> at the very least, separate the two action items
[09:45:56] <scott_gonzalez> Ok, I'll make this a blocker for 1.12.0
[09:46:00] <mikesherov_> we can always simplify the UMD wrapper later
[09:46:04] <mikesherov_> great!
[09:46:19] <rxaviers> Using UMD, we offer user three ways of loading the files: via AMD, via CommonJS and via global exports
[09:46:32] <rxaviers> Should we run tests for all three?
[09:46:41] <tj_vantoll1> Well we don't allow CommonJS at the moment, but that's a separate discussion.
[09:46:51] <rxaviers> I mean, load jQuery UI via AMD, run all the tests; load jQuery UI via CommonJS, run all the tests...
[09:47:18] <scott_gonzalez> Gah, off-by-one error clicking the milestone :-P
[09:47:19] <rxaviers> True.. Sorry, it's AMD and globals
[09:47:46] <arschmitz> rxaviers: if we wanted to test every possibility would would also have to test the monolith and the individual files in script tags
[09:48:07] <scott_gonzalez> mikesherov_: Time for the interactions update.
[09:48:20] <mikesherov_> OK
[09:48:25] <mikesherov_> so I've been working on draggable
[09:48:26] <tj_vantoll1> rxaviers: I think we can start without that and look into it if it becomes a problem.
[09:48:27] <tj_vantoll1> IMO
[09:48:34] <mikesherov_> 24 open tickets for it
[09:48:43] <mikesherov_> Although I feel great about it.
[09:48:51] <mikesherov_> Getting easier and easier to test and close bugs
[09:49:21] <mikesherov_> at the same time, Dave Stein has been rebasing and working on getting the complete rewrite with all deprecated options behind backCompat
[09:49:36] <mikesherov_> he has 1 or two bugs to fix before he passes almost the whole suite
[09:50:06] <mikesherov_> If we maintain this pace, draggable (without any of it's interactions with sortable and droppable) is "stable"
[09:50:21] <mikesherov_> in about 2 weeks
[09:51:06] <mikesherov_> scott_gonzalez: dave had to make minor changes to interactions.js to get a much simpler implementation of draggable
[09:51:16] <mikesherov_> he changed reporting mouse pageX to clientX
[09:51:20] <mikesherov_> and everything got simpler
[09:51:28] <mikesherov_> anyway, the question here is
[09:51:48] <mikesherov_> if we can get draggable stable and working with sortable and droppable well
[09:51:58] <mikesherov_> perhaps we should consider releasing it
[09:52:04] <mikesherov_> separate of the other interactions
[09:52:23] <mikesherov_> that way, we can get feedback on interactions without having rewritten all of them
[09:52:54] <scott_gonzalez> We can do a milestone release.
[09:52:57] <mikesherov_> the danger is that we then have both mouse.js and interactions.js existing at the same time
[09:53:17] <mikesherov_> because all the other interactions will still rely on them
[09:53:24] <scott_gonzalez> right
[09:53:34] <mikesherov_> but it's significantly less risky then deploying them all at once, IMO
[09:53:43] <scott_gonzalez> The old droppable won't work with the new draggable though, right?
[09:54:03] <mikesherov_> well, it relies on some undocumented properties on the draggable inst
[09:54:15] <mikesherov_> all of which we just need to wrangle and document in droppable
[09:54:24] <mikesherov_> and draggable
[09:54:39] <mikesherov_> the second interaction we can rewrite would be droppable
[09:55:02] <mikesherov_> so we can then remove those undocumented connections
[09:55:21] <mikesherov_> the really crappy mess is sortable
[09:55:38] <mikesherov_> which draggable steals functions from and a bunch of shit
[09:55:44] <mikesherov_> like just a pile of shit
[09:55:56] <scott_gonzalez> I'm more comfortable putting out a milestone release where sortable+draggable/droppable fails rather than draggable+droppable failing.
[09:56:22] <mikesherov_> so if I understand you correctly
[09:56:26] <scott_gonzalez> But we can put out a release that has a broken droppable if you think we'll get enough feedback on draggable to make it worth it.
[09:56:41] <mikesherov_> well, we can put out a release that doesn't break dropablke
[09:56:48] <mikesherov_> nor sortable
[09:57:03] <mikesherov_> we would just document the sins committed in draggable
[09:57:13] <mikesherov_> and remove those sins as the others get rewritten
[09:57:32] <scott_gonzalez> Would it be a pain to do that in a separate branch?
[09:57:39] <scott_gonzalez> Like interactions-hack
[09:57:42] <scott_gonzalez> And do the release from there?
[09:57:49] <scott_gonzalez> And just keep rebasing that on top of interactions?
[09:58:14] <mikesherov_> well, I think the benefit would be to release something in an official release
[09:58:17] <mikesherov_> like in 1.13
[09:58:23] <mikesherov_> e.g.
[09:58:27] <tj_vantoll1> mouse.js and interaction.js aren't that big, especially in comparison to draggable/droppable/sortable, so from a file size perspective shipping both wouldn't be *too* bad.
[09:58:50] <scott_gonzalez> Oh, so you want draggable in master?
[09:58:54] <mikesherov_> Yeah
[09:59:07] <mikesherov_> with the necessary sins to keep droppable and sortable working
[09:59:10] <scott_gonzalez> That I'm not comfortable with.
[09:59:22] <scott_gonzalez> Because I don't want interaction in master until we actually know what we're doing with it.
[09:59:49] <mikesherov_> oh, because that's pointer events stuff too
[09:59:52] <scott_gonzalez> yeah
[09:59:58] <mikesherov_> I forgot about that part
[10:00:20] <mikesherov_> ok, so by milestone release, you mean just releasing a branch
[10:00:34] <mikesherov_> like Dave continues work in his branch
[10:00:34] <scott_gonzalez> Yeah, we did this a lot for the 1.9 releases.
[10:00:45] <mikesherov_> but we say, hey, all least draggable works, and you can try it out people!
[10:00:53] <scott_gonzalez> http://blog.jqueryui.com/?s=milestone+release
[10:01:10] <mikesherov_> OK, let's do that!
[10:01:17] <mikesherov_> that makes me comfortable too
[10:01:20] <mikesherov_> but no hack branch
[10:01:32] <scott_gonzalez> ok
[10:01:37] <mikesherov_> my brain explodes enough already from the existing rebasing
[10:01:48] <mikesherov_> OK, gotta go, I'll keep Dave Stein up to date
[10:02:10] <scott_gonzalez> Ok, well we're out of time for today anyway.
[10:02:14] <scott_gonzalez> See everyone back in -dev.
[10:02:19] <scott_gonzalez> Thanks.
