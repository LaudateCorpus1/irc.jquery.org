[08:59:27] <scott_gonzalez> Dave_Stein gnarf jzaefferer kborchers mikesherov ngsilverman petersendidit rxaviers tj_vantoll
[08:59:32] <rxaviers> hi
[08:59:35] <Dave_Stein> heyo
[09:00:02] <kborchers> yo
[09:00:12] <ngsilverman> hi
[09:00:26] <tj_vantoll> hey
[09:01:23] <scott_gonzalez> Hey everyone.
[09:02:00] <scott_gonzalez> So we finally shipped 1.10.1!
[09:02:11] <fnagel> hi
[09:02:12] <scott_gonzalez> But the theme images on the CDN are busted.
[09:02:20] <scott_gonzalez> http://bugs.jqueryui.com/ticket/9090
[09:02:29] <scott_gonzalez> We're trying to figure out what the problem is.
[09:02:34] <gnarf> hey, half here, gotta leave for the airport in a few
[09:02:55] <scott_gonzalez> This is the first release where the images were generated locally.
[09:02:58] <rxaviers> scott, I think we can fix it now. Then figure out the problem later.. I can generate it in here and give you the bundle.
[09:03:03] <scott_gonzalez> So it was a problem with the images being built on my laptop.
[09:03:31] <scott_gonzalez> rxaviers: We can fix the themes zip on the site, but I don't think Google or MS are going to change their CDNs.
[09:03:44] <rxaviers> ah!
[09:04:07] <scott_gonzalez> We just need to get proper themes for 1.10.2 and not wait too long to release that.
[09:04:16] <rxaviers> I see
[09:04:29] <scott_gonzalez> I wanted to get 1.10.2 in about 4 weeks anyway.
[09:04:35] <scott_gonzalez> We could make it sooner.
[09:05:45] <Dave_Stein> ngsilverman: You're still working on a fork right? No one looked at your pull request yet?
[09:05:54] <ngsilverman> yep
[09:06:00] <scott_gonzalez> Beside this issue, the updates rxaviers did for theme generation during the release process are nice.
[09:06:00] <ngsilverman> I don't know if somebody looked
[09:06:05] <ngsilverman> no-one told me anything :p
[09:06:11] <scott_gonzalez> No more hacking around how download builder works.
[09:06:12] <Dave_Stein> If anyone looked there'd be lots of comments
[09:06:29] <ngsilverman> then no
[09:06:43] <rxaviers> :)
[09:07:17] <ngsilverman> it's gotten quite big too
[09:07:23] <Dave_Stein> i'm looking at it now
[09:07:28] <rxaviers> and this week Im closing DB/TR bugs. So far: #87 #105 #107 #108 and some other fixes that werent an issue opened.
[09:07:43] <rxaviers> wasnt*
[09:09:21] <scott_gonzalez> Oh, we also have minified CSS files on the CDNs now.
[09:09:26] <scott_gonzalez> Also thanks to rxaviers.
[09:09:30] <kborchers> nice
[09:11:50] <scott_gonzalez> We've got a lot of work going on with interactions now.
[09:11:56] <scott_gonzalez> Dave_Stein is workin on droppable.
[09:12:00] <scott_gonzalez> ngsilverman is working on sortable.
[09:12:07] <Dave_Stein> I'm done with droppable
[09:12:11] <scott_gonzalez> oh
[09:12:12] <Dave_Stein> just needs review and tests
[09:12:16] <Dave_Stein> I told you I'd finish it Monday :)
[09:12:24] <scott_gonzalez> Well, it's not done without tests :-P
[09:12:59] <Dave_Stein> mikesherov is supposed to be helping with that but he's mia right now eh?
[09:13:10] <Dave_Stein> I don't think he added anymore to draggable based on prior tickets
[09:13:15] <scott_gonzalez> Yes, but you should be able to write tests too.
[09:13:33] <Dave_Stein> yes yes I will take a look at the existing ones and see what's up and add some if needed, which obviously there are
[09:14:02] <Dave_Stein> did you take a look at https://github.com/jquery/jquery-ui/pull/919/files yet?
[09:14:02] <b-ot> Dave_Stein: Pull request #919 by ngsilverman (1d 19h ago): Sortable: implement options and reorganize properties
[09:14:04] <Dave_Stein> im browsing right now
[09:14:38] <ngsilverman> I'd love to get some feedback
[09:14:48] <Dave_Stein> after my tests for droppable, which I can prob bang out this weekend, do you think I shuold start on another interaction or help out ngsilverman with sortable?
[09:14:51] <Dave_Stein> It's a monster
[09:14:57] <scott_gonzalez> Not yet.
[09:16:28] <ngsilverman> Dave_Stein: I noticed the autoscroll is super bugged
[09:16:52] <Dave_Stein> Ah yes I neverp orted the draggable scroll fixes over
[09:17:28] <Dave_Stein> *sigh* Maybe we should just decide what goes into interaction and/or if we need another module for draggable & sortable now?
[09:17:39] <Dave_Stein> You worked too fast! haha
[09:18:30] <ngsilverman> I added the touch tolerance btw
[09:18:41] <ngsilverman> it made sense with the new way of moving the placeholder around
[09:18:44] <Dave_Stein> I noticed
[09:18:56] <Dave_Stein> scott might just say take it away - just cause it's easy doesn't necc mean it's good for API
[09:19:08] <Dave_Stein> https://github.com/jquery/jquery-ui/pull/919/files#L0R114
[09:19:08] <b-ot> Dave_Stein: Pull request #919 by ngsilverman (1d 19h ago): Sortable: implement options and reorganize properties
[09:19:21] <Dave_Stein> i was just wondering about that but didn't think it's worth commenting on really since you're right here
[09:19:35] <Dave_Stein> as to why you wouldntj ust put that in start? i guess just not to run that for isValid and then have to run it again in _start?
[09:19:59] <ngsilverman> yeah, that's all
[09:20:01] <ngsilverman> petty optimization
[09:20:12] <scott_gonzalez> :-/
[09:20:12] <Dave_Stein> every ounce counts
[09:20:24] <scott_gonzalez> isValidTarget() shouldn't have side effects
[09:20:41] <ngsilverman> ok, I can change that
[09:20:41] <scott_gonzalez> Also, comments like https://github.com/jquery/jquery-ui/pull/919/files#L0R113 don't belong in the code :-)
[09:20:42] <b-ot> scott_gonzalez: Pull request #919 by ngsilverman (1d 19h ago): Sortable: implement options and reorganize properties
[09:20:44] <Dave_Stein> good point
[09:20:52] <scott_gonzalez> Also, we never use `el` as a variable/property name.
[09:21:19] <scott_gonzalez> I will get around to a full review of this.
[09:21:20] <Dave_Stein> by comments like this you mean never assume anything?
[09:21:35] <ngsilverman> what should I use instead of el ?
[09:21:39] <scott_gonzalez> element
[09:21:42] <ngsilverman> ok
[09:21:49] <scott_gonzalez> Dave_Stein: The assumption is valid, but the comment isn't.
[09:21:58] <scott_gonzalez> When the function is called is part of the API.
[09:22:19] <ngsilverman> yeah I put that comment in when I was just starting and wasn't exactly sure how isValidTarget
[09:22:24] <ngsilverman> was used
[09:22:24] <scott_gonzalez> Also, the comment is only there because the API is being abused :-P
[09:22:41] <scott_gonzalez> ngsilverman: You should ask if you have a question.
[09:22:52] <ngsilverman> right
[09:23:00] <scott_gonzalez> The API is documented at http://wiki.jqueryui.com/w/page/50166448/Interaction
[09:23:34] <Dave_Stein> scott_gonzalez: You missed one question. After droppable tests what's next? Me helping ngsilverman or working on another widget?
[09:23:43] <scott_gonzalez> ngsilverman Dave_Stein: Can you guys spend some time thinking about how interaction would work if it supported multiple pointers?
[09:24:04] <Dave_Stein> meaning dragging two things at once with two fingers?
[09:24:28] <Dave_Stein> are we assuming interaction is handing us multiple pointers already?
[09:24:47] <Dave_Stein> cause AFAIK detecting multiple pointers is diff on the different devices
[09:25:13] <scott_gonzalez> Well, this is the stuff we'll need to figure out.
[09:25:29] <Dave_Stein> okay I was just wondering if you had started work on abstracting that out
[09:25:31] <scott_gonzalez> But each event API has a clear way to distinguish between multiple pointers.
[09:25:44] <kborchers> yes multiple please! wish we had this now :)
[09:25:44] <scott_gonzalez> No, I wrote interaction specifically to be single pointer.
[09:25:51] <scott_gonzalez> But kborchers was asking about multiple.
[09:25:58] <scott_gonzalez> I haven't spent any time thinking about it yet.
[09:26:16] <Dave_Stein> where is the clear way documented? :)
[09:26:31] <Dave_Stein> And I guess that answers my question... after droppable tests I can start researching multiple pointers
[09:26:42] <kborchers> silly use case is to drag with one xbox controller axis while resizing with another at the same time â€¦ more practical use case would be pinch to resize
[09:27:05] <scott_gonzalez> Dave_Stein: In the relevant W3C specs...
[09:27:19] <Dave_Stein> ah yes
[09:27:27] <scott_gonzalez> The existing code already uses those APIs.
[09:27:42] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/interactions/ui/jquery.ui.interaction.js#L139
[09:27:59] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/interactions/ui/jquery.ui.interaction.js#L242
[09:28:41] <scott_gonzalez> Something like draggable would probably ignore multiple pointers.
[09:29:08] <scott_gonzalez> But you should be able to drag 2 draggables with 2 fingers at one time if multiple pointer support is added.
[09:29:10] <Dave_Stein> What happens if there's two draggables on screen and user wants to drag both at once?
[09:29:15] <Dave_Stein> yup that
[09:30:33] <Dave_Stein> okay cool so i'll research away on that
[09:30:50] <Dave_Stein> should be a fun and frustrating challenge
[09:30:55] <Dave_Stein> thank you windows, droid, apple, etc
[09:31:24] <Dave_Stein> There anything else?
[09:32:04] <scott_gonzalez> Dave_Stein: The only one to be mad at is Apple.
[09:32:07] <Dave_Stein> ngsilverman since we're not breaking up modules yet, just pull my scrolling logic from latest draggable.... it's unit tested based on old tests that were failing the current implementation in sortable
[09:32:14] <scott_gonzalez> They're the assholes that gave us a shitty API.
[09:32:15] <scott_gonzalez> :-P
[09:32:30] <Dave_Stein> oh windows and droid are both using the right API?
[09:32:45] <scott_gonzalez> By Droid you mean WebKit?
[09:33:03] <scott_gonzalez> WebKit uses Touch Events, which is crap.
[09:33:04] <Dave_Stein> i've never gone near a droid so i guess yes ;)
[09:33:11] <ngsilverman> ok Dave_Stein
[09:33:13] <scott_gonzalez> Windows uses Pointer Events which is actually sane.
[09:33:30] <Dave_Stein> so why are you mad at apple and not webkit?
[09:33:36] <scott_gonzalez> Anyway, the normalization isn't an issue. That part is really easy.
[09:33:44] <Dave_Stein> yeah
[09:33:45] <scott_gonzalez> Because Apple created Touch Events.
[09:33:55] <Dave_Stein> handling it within the object is gonna be the fun part
[09:34:10] <Dave_Stein> do we know what we want to do with multiple touch for sort? does that make sense?
[09:34:24] <scott_gonzalez> Ignore, just like draggable.
[09:34:46] <Dave_Stein> i thought we're not ignoring, so you can drag 2 items at once
[09:35:02] <scott_gonzalez> 2 items = 2 instances = 1 pointer per instance.
[09:35:04] <Dave_Stein> oh i guess that would work already
[09:35:12] <scott_gonzalez> It won't work today.
[09:35:12] <fnagel> brb
[09:35:24] <scott_gonzalez> Interaction is single pointer right now.
[09:35:40] <scott_gonzalez> If you start an interaction, nothing else can start.
[09:35:45] <scott_gonzalez> That would change.
[09:35:56] <scott_gonzalez> And it would be up to the widget to determine if the new pointer will be handled.
[09:36:02] <Dave_Stein> so upgrade interacton to handle multiple pointers so two things can be dragged, while also looking into handling 2 pointers on same instance for pinching like resizable
[09:36:13] <scott_gonzalez> yup
[09:36:22] <scott_gonzalez> If you're going to play with the code, please do it in a new branch.
[09:36:33] <Dave_Stein> okay ill branch off interaction
[09:36:42] <Dave_Stein> not that i had a choice in that ha
[09:37:22] <ngsilverman> anything else on my PR so far?
[09:37:35] <scott_gonzalez> ngsilverman: Haven't looked yet.
[09:37:40] <ngsilverman> ok
[09:37:47] <Dave_Stein> so just keep trucking until scott complains ;)
[09:37:51] <ngsilverman> :D
[09:37:58] <ngsilverman> sounds like a plan
[09:38:00] <Dave_Stein> that's what i did lol
[09:38:45] <Dave_Stein> i'll make a real dumb resizable too sans finalized API just to test pinching when i get to it
[09:39:02] <Dave_Stein> i never used UI resizable... maintaining ratio somehow always broke for me
[09:40:22] <ngsilverman> I started playing around with a nested sortable, and I noticed I can sort the nested fine, until I sort its container
[09:40:27] <ngsilverman> and then it always sorts the container
[09:40:43] <ngsilverman> I was wondering if that comes from interaction
[09:41:46] <scott_gonzalez> You mean completely separate sorts?
[09:41:58] <scott_gonzalez> down, move, up; down, move, up; down, move, up ?
[09:42:35] <ngsilverman> no I mean I have one sortable inside an item of a sortable
[09:42:51] <ngsilverman> like <ul class="sortable"><li><ul class="sortable"><li></li></ul></li></ul>
[09:43:36] <scott_gonzalez> Right, but are you talking about one sort or 3 sorts?
[09:43:37] <ngsilverman> eeeh, but yeah, separate sorts
[09:43:40] <ngsilverman> 2 sorts
[09:44:00] <ngsilverman> 3 sorts
[09:44:17] <ngsilverman> I sort a nested item
[09:44:19] <scott_gonzalez> I think it's in the sortable code.
[09:44:25] <ngsilverman> ok
[09:44:41] <scott_gonzalez> Each instance is listening to mousedown.
[09:44:42] <ngsilverman> I'll look more closely into it
[09:44:47] <scott_gonzalez> The first one to respond will win.
[09:45:02] <scott_gonzalez> And the inner is always going to get the first chance.
[09:45:09] <scott_gonzalez> Because of event bubbling.
[09:45:15] <ngsilverman> yeah, that's what I thought
[09:45:35] <ngsilverman> which is why I was surprised
[09:45:46] <ngsilverman> I'll look into it
[09:48:07] <scott_gonzalez> Ok, I'm gonna get lunch and move somewhere with power before my laptop dies.
[09:48:31] <scott_gonzalez> We'll continue discussions back in -dev.
[09:48:34] <scott_gonzalez> Thanks everyone.
