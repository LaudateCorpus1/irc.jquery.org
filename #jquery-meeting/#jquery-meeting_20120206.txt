[08:53:01] <DaveMethvin> .
[09:00:11] <sindresorhus> .
[09:02:05] <DaveMethvin> hey sindresorhus
[09:02:12] <mikesherov> .
[09:02:19] <DaveMethvin> hey it's mikesherov!
[09:02:36] <mikesherov> LOOK AT THAT
[09:03:02] <DaveMethvin> where?
[09:03:32] <DaveMethvin> quite a party here today ... and wouldn't you know it i forgot the donuts.
[09:03:33] <mikesherov> I made it on time
[09:04:05] <mikesherov> I'd make ascii donuts if I wasn't afraid they'd be mistaken for something obscene
[09:04:16] <DaveMethvin> i had such ambitious plans for this weekend, but just zoned out and watched the super bowl
[09:04:40] <DaveMethvin> soookay
[09:05:19] <DaveMethvin> the 1.7.2 beta doesn't seem to have caused too many issues
[09:05:28] <DaveMethvin> i assume that means nobody is testing it :P
[09:05:39] <mikesherov> Well, I have an issue, but it's in the unit tests
[09:05:56] <mikesherov> I should save that for later?
[09:06:12] <DaveMethvin> on docs#11285 i wonder if that is the catastrophic backtracking issue?
[09:06:17] <bot-t> [#11285] jQuery Ajax call causing IE8 to crash when data returned from WCF service ( ) - http://jqbug.com/11285
[09:06:29] <DaveMethvin> thanks bot-t, was wondering if you were asleep
[09:07:04] <DaveMethvin> for 1.8 we have a ticket to make our acceptance of "looks like html" a lot stricter
[09:07:18] <DaveMethvin> and that would potentially eliminate the regexp that sucks up time
[09:07:52] <DaveMethvin> i would like to propose a very simple and dumb "starts with <" criterion for looking like html
[09:08:22] <DaveMethvin> even trimming off space is something we should avoid
[09:08:45] <DaveMethvin> trac so slow
[09:10:01] <DaveMethvin> http://bugs.jquery.com/ticket/9521#comment:24
[09:10:37] <DaveMethvin> we failed two tests that expect a<div />b to work
[09:10:48] <DaveMethvin> but i am not sure why we expect/want that to work
[09:11:13] <DaveMethvin> it will be hard to fix 9521 if we allow that
[09:11:28] <DaveMethvin> thoughts?
[09:11:56] <mikesherov> so, are we saying that the we want "a<div />b" to not be considered valid html?
[09:12:27] <gibson042> I second "starts-with '<' <=> HTML"
[09:12:35] <DaveMethvin> i'm saying it makes things easier
[09:12:49] <mikesherov> right, but is the innerHTML of a node also HTML?
[09:13:08] <DaveMethvin> damn you mikesherov :D
[09:13:22] <mikesherov> so if I have: <div id="somenode">a<div />b</div>
[09:13:39] <mikesherov> and do $("#somenode").html()
[09:13:52] <mikesherov> won't that produce: a<div />b?
[09:14:26] <DaveMethvin> although we are just talking about $(html) here, not $(...).html(stuff)
[09:14:40] <mikesherov> I see, but still
[09:14:41] <gibson042> right
[09:14:42] <DaveMethvin> but yeah
[09:15:09] <mikesherov> $($("#somenode").html()) should produce valid nodes, right?
[09:15:39] <mikesherov> I supposed that at least SOME people use that naively instead of clone()
[09:15:43] <DaveMethvin> i thought it threw away some stuff but i'd need to make a test case
[09:15:45] <gibson042> I would say not
[09:16:16] <mikesherov> I mean, it's fine if we don't want people using it like that, but I'd imagine it'd be a pretty big breaking change
[09:16:21] <DaveMethvin> it's a good point, regardless, but the problem is that allowing arbitrary strings with html in the middle causes a mess plus a security hole
[09:16:43] <DaveMethvin> maybe indexOf('<') instead?
[09:17:25] <DaveMethvin> we really need to close the security bug, because too many people are doing the wrong thing and sending arbitrary strings to html with no checks
[09:17:34] <DaveMethvin> and it's not our fault
[09:17:37] <DaveMethvin> dammit
[09:17:39] <DaveMethvin> :P
[09:18:01] <timmywil> ohai
[09:18:06] <DaveMethvin> hi timmywil
[09:18:12] <DaveMethvin> hey ... good timing
[09:18:19] <DaveMethvin> i was gonna ask about your sizzle rewrite
[09:18:22] <timmywil> i am distracted easily
[09:18:29] <DaveMethvin> can we land it next week?
[09:18:32] <DaveMethvin> haha
[09:19:06] <timmywil> hmm, when are we pushing for 1.8?
[09:19:19] <DaveMethvin> tell me when sizzle will be ready and we'll know :D
[09:19:31] <DaveMethvin> gnarf, you around?
[09:19:38] <mikesherov> the fiddle that shows the security hole isn't really working for me: http://jsfiddle.net/UyuBx/
[09:20:01] <DaveMethvin> mikesherov: we fixed the # case i think
[09:20:32] <DaveMethvin> i'd have to recheck the ticket to see what is still open, but there were a few  as i recall
[09:22:11] <timmywil> ha, well, I could hunker down and do it next weekend, but I didn't think 1.8 was coming so soon
[09:22:40] <DaveMethvin> no it's not but i think sizzle will be the long pole
[09:23:08] <DaveMethvin> so you should be scared timmywil but not discouraged :)
[09:23:29] <DaveMethvin> haven't heard from gnarf about animation so I am not sure that is going to happen
[09:23:41] <timmywil> yea, and effects prolly. hopefully, gnarf and julian will collaborate on that
[09:24:12] <sindresorhus> timmywil: What is the goal of the sizzel rewrite?
[09:24:18] <DaveMethvin> even if we just do sizzle, one major subsystem rewrite per version is upheaval enough
[09:24:31] <DaveMethvin> there are still quite a few bugs in the oldIE behavior
[09:24:50] <mikesherov> so, I think your indexOf on < deals with the arbitrary creation problem, dmethvin
[09:25:03] <timmywil> sindresorhus: a lot
[09:25:04] <gibson042> indexOf("<") would fail on input like $("element[attribute='<HTML/>']")
[09:25:24] <mikesherov> attribute = <HTML/>?
[09:25:30] <DaveMethvin> yeah, which was one of the cases in the ticket
[09:25:49] <mikesherov> fail in what way?
[09:26:04] <DaveMethvin> let someone create arbitrary html including scripts etc
[09:26:06] <gibson042> mistake a CSS-style selector for HTML to be generated
[09:26:21] <DaveMethvin> it just sees the stuff on either side as text nodes
[09:26:28] <mikesherov> attribute='<HTML/>' is a valid css selector?
[09:26:43] <mikesherov> ... he asks naively
[09:26:52] <DaveMethvin> HTML is some arbitrary  html
[09:26:57] <gibson042> I'm pretty sure
[09:27:02] <timmywil> mikesherov: it is, but ew
[09:27:03] <DaveMethvin> it's quoted
[09:27:13] <DaveMethvin> so yeah it's valid selector i think
[09:27:20] <DaveMethvin> but we'll see it as html
[09:27:45] <DaveMethvin> it's all back to that "looks like html" rule
[09:27:49] <mikesherov> I'm getting confused
[09:27:51] <DaveMethvin> which works 98% of the time
[09:28:25] <mikesherov> I though the problem was that some devs were doing $(someSelectorNotHtmlBasedOnUntrustedInput)
[09:28:45] <DaveMethvin> yeah that's basically it
[09:29:05] <DaveMethvin> and normally we'd just tell them they are stupid
[09:29:20] <DaveMethvin> but it's so widespread that we are looking for ways we can destupidify
[09:29:29] <mikesherov> so, we're saying in this case, the dev did: $("element[attribute='"+untrustedInput+"']")
[09:29:37] <DaveMethvin> yeah
[09:29:41] <mikesherov> oy
[09:29:59] <DaveMethvin> like ":contains('"+whatever+"')"
[09:30:18] <mikesherov> right
[09:30:18] <DaveMethvin> we're boring bot-t
[09:30:26] <mikesherov> ok, I get it
[09:30:32] <mikesherov> I'll also think about what we can do
[09:30:37] <DaveMethvin> so i totally think this is a developer mistake
[09:30:42] <mikesherov> but if it's stumped jdalton, it's hopeless
[09:30:42] <timmywil> actually, that shouldn't read as html right?
[09:30:46] <DaveMethvin> lol
[09:31:00] <DaveMethvin> timmywil: that contains would i think
[09:31:04] <DaveMethvin> it dosen't start with #
[09:31:08] <DaveMethvin> that's the only exception we have now
[09:31:35] <DaveMethvin> or did the regexp actually catch something?
[09:32:22] <mikesherov> I assume we have the "# starter" because devs do: $("#" + untrustedInput); ?
[09:32:54] <DaveMethvin> mikesherov: right, as in selecting an id to jump to
[09:33:01] <DaveMethvin> based on the url bookmark
[09:33:06] <timmywil> DaveMethvin: yea ok, quickExpr rips it out. is this just a matter of modifying the regex?
[09:33:41] <DaveMethvin> timmywil: what seems to be happening on large string inputs is that the regexp sometimes has catastropic backtracking issues
[09:34:03] <DaveMethvin> and with so many ppl using mvc and templating that isn't all too uncommon now
[09:34:14] <mikesherov> I suppose the problem comes down to the old adage: don't use regex to parse HTML?
[09:34:18] <DaveMethvin> we have a special case check
[09:34:38] <DaveMethvin> 				// Assume that strings that start and end with <> are HTML and skip the regex check
[09:34:46] <timmywil> i can't think of a case where html needs to be parsed from the middle of a selector
[09:34:59] <mikesherov> I agree
[09:35:12] <mikesherov> that's really why I think indexOf('<') can work
[09:35:17] <DaveMethvin> but we dont' know if it's html or a selector
[09:35:36] <DaveMethvin> so we need to say, "by definition if there is a < it is html"
[09:35:45] <mikesherov> right
[09:35:52] <timmywil> maybe I'm wrong, but if it doesn't start with '<', it's not really html ya?
[09:35:59] <timmywil> we have that check already
[09:36:04] <timmywil> why are we doing both?
[09:36:04] <DaveMethvin> right now our "looks like html" criteria is that big regexp OR "starts and ends with <>"
[09:36:14] <mikesherov> [12:13] <mikesherov> so if I have: <div id="somenode">a<div />b</div> [12:13] <mikesherov> and do $("#somenode").html() [12:13] <mikesherov> won't that produce: a<div />b?
[09:36:26] <DaveMethvin> because the regexp has catastropic backtrackgin :P
[09:36:38] <mikesherov> there are plenty of cases I can imagine where devs expect that .html() produces valid html
[09:36:55] <mikesherov> if it's in reality or not, different story
[09:37:07] <timmywil> DaveMethvin: lol, are we going in circles? give me one case where the <html> needs to be located from within some string that does not start with '<'
[09:37:32] <timmywil> contains is only for text
[09:37:44] <DaveMethvin> mikesherov gave one upstream, $( $(whatever).html() )
[09:38:02] <DaveMethvin> so someone might expect the stuff to roundtrip
[09:38:04] <mikesherov> again, I don't know if it's a big use case
[09:38:15] <mikesherov> but it's a case where we would encounter that
[09:38:24] <DaveMethvin> and the :contains was just an example of where someoen might take user input
[09:38:41] <DaveMethvin> like,  highlight the paragraph that contains someting the user entered
[09:38:49] <gibson042> which should be $('<dummy/>').html( $whatever.html() ).contents()
[09:38:58] <DaveMethvin> gibson042: absolutely
[09:39:10] <DaveMethvin> since text nodes are a fleeting thing in a jquery object
[09:39:10] <timmywil> i see, yes that is a case, but for that I think we recommend
[09:39:10] <gibson042> this is for 1.8, right?
[09:39:14] <timmywil> what gibson042 said
[09:40:04] <timmywil> but yea, that could break some stuff
[09:40:35] <DaveMethvin> it sounds like our general concensus is that indexOf("<") could be better but might break stuff
[09:40:38] <timmywil> well, to keep it, I don't see a way out of some inevitable backtracing given very sensitive predictions
[09:41:06] <DaveMethvin> it's just that the regexp there is a horrible price to pay if you're dumping in a big template
[09:41:25] <timmywil> recommend a dummy element and you're good tho
[09:41:34] <mikesherov> the problem is really that $(), while useful, is way too polymorphic for it's own good
[09:41:36] <DaveMethvin> yeh just thinking that
[09:41:44] <DaveMethvin> we might be able to just document this problem away
[09:41:47] <timmywil> the rest of the time, you hurt yourself, but it will work
[09:41:49] <timmywil> most of the time
[09:42:05] <DaveMethvin> and that's the way most jquery users write code
[09:42:18] <timmywil> yes, unfortunately
[09:42:19] <DaveMethvin> "works most of the time, so i did it that way"
[09:42:49] <timmywil> which is why we probably shouldn't break the behavior, but plugins like jquery template can use a dummy element internally
[09:44:02] <mikesherov> so.... next?
[09:44:04] <DaveMethvin> if we don't break the behavior we don't close the security hole
[09:44:14] <DaveMethvin> but yeah we can discuss that one later
[09:44:23] <DaveMethvin> mainly i wanted to get a bead on 1.8
[09:44:51] <mikesherov> I suppose we can special case starts with "#" or "." and that'll get most of the mileage
[09:45:01] <DaveMethvin> what do  you think about the sizzle part timmywil
[09:45:17] <timmywil> I will work on sizzle either this weekend or the next. This weekend I might be preparing for valentines at my house.
[09:45:25] <DaveMethvin> are we invited?
[09:45:27] <timmywil> but I'll see about time
[09:45:59] <DaveMethvin> man you are making the rest of us look bad ... preparing for valentines?
[09:46:11] <mikesherov> LOL
[09:46:14] <DaveMethvin> i just buy flowers from that guy on the side of the road
[09:46:19] <mikesherov> I would love to talk about border-box stuff for 1.8
[09:46:32] <DaveMethvin> sure lets do it
[09:46:49] <timmywil> DaveMethvin: I gots me a plan :)
[09:47:20] <mikesherov> so, there is the CSS3 selectors ticket that deals with that edge case that's currently got an open PR
[09:47:25] <mikesherov> I'd love some feedback on it
[09:47:41] <DaveMethvin> which one is that?
[09:47:45] <gibson042> umm... I tried that sample code from above for docs#9521
[09:47:48] <mikesherov> https://github.com/jquery/jquery/pull/639
[09:47:49] <socialhapy> ★ Pull request on jquery by mikesherov (1m, 3w ago): fixes #10413 and fixes #10679
[09:47:50] <gibson042> it tricks quickExpr: http://jsfiddle.net/C8dgG/
[09:47:54] <timmywil> it would be weird to anyone else tho. She's a sculpture so I got her anatomy posters, which I'm gonna hang up and be like, "hey, look what _I_ got"
[09:48:20] <mikesherov> http://bugs.jquery.com/ticket/10413
[09:48:24] <DaveMethvin> timmywil: awww
[09:48:25] <mikesherov> docs#10413
[09:48:34] <mikesherov> WHERES BOT-T
[09:48:47] <mikesherov> so I would just love some feedback on that PR
[09:49:20] <DaveMethvin> oh NOW  he shows up
[09:49:27] <timmywil> heh
[09:49:29] <mikesherov> docs#10413
[09:49:31] <bot-t> [#10413]  (assigned bug) - http://jqbug.com/10413
[09:49:41] <mikesherov> there's probably a better way to test for support
[09:50:07] <mikesherov> so, there's that
[09:50:36] <DaveMethvin> i will take a look at that later mikesherov, also noted in the meeting notes if anyone else wants to take a look
[09:50:49] <mikesherov> and the other aspect is this: http://bugs.jquery.com/ticket/11004
[09:50:54] <mikesherov> docs#11004
[09:50:56] <bot-t> [#11004] getWH incorrectly removes padding and border width when box-sizing is border-box (assigned bug) - http://jqbug.com/11004
[09:51:20] <mikesherov> so, this is the ticket where animations use .css('width') for getting and setting
[09:51:48] <mikesherov> but .css('width'), the getter, really returns content width, instead of width according to box-sizing
[09:52:08] <timmywil> mikesherov: how will this affect animations?
[09:52:16] <timmywil> this is only for retrieval right?
[09:52:20] <mikesherov> well, no
[09:52:34] <mikesherov> so animate .css('width') of something
[09:53:24] <mikesherov> the getter will get .css('width') which returns .width() (the content width without padding border margin), and then sets that value back in using .css('width, value)
[09:53:33] <mikesherov> which doesn't mean content-width
[09:53:41] <mikesherov> so it gets content-width, but sets css width
[09:53:58] <mikesherov> and so we decided that .css('width') should return the css value
[09:54:13] <mikesherov> but that .width() should continue to return content width, as documented
[09:54:27] <DaveMethvin> which works for me
[09:54:32] <mikesherov> works for me too
[09:54:37] <timmywil> right, but fx uses .css for calculations, so I'm wondering if this will change the behavior of animating width with box-sizing
[09:54:45] <mikesherov> it does
[09:54:55] <mikesherov> right now, the effect begins with a jump
[09:55:08] <timmywil> hrm
[09:55:36] <mikesherov> the reduced case is that $(elem).css('width', $(elem).css('width')) shrinks the element
[09:55:55] <mikesherov> so effects jump at the beginning
[09:57:32] <timmywil> makes sense, I imagine the first ticket we could get would be an issue with show/hide(time) on a border-box element
[09:57:48] <mikesherov> I'm going to break the default width and height css hooks to return computedValue normalized to pxiels but using the border-box value
[09:58:09] <mikesherov> and right a separate hook that the dimensions methods use
[09:58:24] <mikesherov> write*
[09:58:47] <mikesherov> so I'll be breaking default behavior, but in the correct way
[09:59:01] <DaveMethvin> that's called bug fixing mikesherov
[09:59:06] <mikesherov> LOL
[09:59:13] <DaveMethvin> I've got to run in a few minutes ... are there other things we should discuss?
[09:59:32] <mikesherov> the only thing I was unsure about was whether or not .css('width') should do the whole convert to absolute pixels and always a number thing
[10:00:04] <mikesherov> and I decided that "yes, they should", even though it's a special case for .css(), it's always been a special case for .css, and would be too breaky
[10:00:22] <DaveMethvin> yeah, i reluctantly agree
[10:00:34] <mikesherov> I'd like to discuss the unit tests/ PHP, but if you gotta go, I can hold off until next week
[10:00:49] <DaveMethvin> or we can discuss during the week or on jquery-bugs
[10:00:54] <mikesherov> OK
[10:01:08] <DaveMethvin> ok cya guys later, thanks for coming!
[10:01:16] <timmywil> thanks
[10:01:23] <mikesherov> thanks
