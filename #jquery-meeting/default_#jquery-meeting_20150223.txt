[09:00:24] <timmywil> m_gol, markelog___, DaveMethvin|away, arthurvr, gibson042 meeting time!
[09:00:32] <markelog___> hey-hey
[09:00:32] <timmywil> https://docs.google.com/document/d/1BadwSO6Sn91RBfr05s77r81ncEi0oMBJ5mZS-k215vg/edit?pli=1#
[09:00:59] <timmywil> who's here?
[09:01:10] <arthurvr> hey there!
[09:01:23] <timmywil> oi!
[09:02:08] <timmywil> gibson042: are you here?
[09:02:15] <gibson042> I made it
[09:02:19] <timmywil> hooray!
[09:02:25] <timmywil> Let's talk about blockers first
[09:02:44] <timmywil> So Deferred, can we land that?
[09:03:21] <timmywil> https://github.com/jquery/jquery/pull/1996
[09:03:26] <timmywil> that's gibson042
[09:04:14] <gibson042> points that may need changing are the naming of pipe-only tests, and I should probably have a string value for the mandatory TypeError
[09:04:49] <gibson042> but honestly, those could be cleaned up later if landing now is high-value
[09:05:16] <gibson042> but I can probably make those changes on Wednesday if we want the commit to be as clean as possible
[09:05:21] <timmywil> I'd be in favor of landing now and opening separate issues for those
[09:05:31] <gibson042> works for me
[09:05:33] <timmywil> ah, well if you can get to it that soon that's great
[09:05:42] <gibson042> also fine :)
[09:05:54] <gibson042> shall we say "land by next meeting"?
[09:06:13] <timmywil> ok, let's say if you end up not getting to it, we'll just land and open separate issues later in the week
[09:06:22] <timmywil> right
[09:07:13] <timmywil> I haven't gotten to data yet, but I did manage to work up a solution for the big Sizzle blocker
[09:07:20] <timmywil> I plan on getting to data this week.
[09:07:39] <timmywil> gibson042: I'd love your eyes on https://github.com/timmywil/sizzle/commit/4615eed104aa70b28f2a2025e7e8fdcfbf710c5f
[09:07:43] <timmywil> whenever you get a chance
[09:08:02] <timmywil> that dir caching and outermost handling still eludes me at times
[09:08:10] <m_gol> present
[09:08:13] <gibson042> yeah, it's hairy for sure
[09:08:49] <gibson042> it will be more visible to me in a PR, if you can
[09:09:00] <timmywil> for show/hide, I'm wondering if investigation of performance is going to take a while and shouldn't perhaps be a 4.0 issue
[09:09:18] <markelog___> i can try to tackle it this week
[09:09:34] <timmywil> markelog___: that would be great! :)
[09:09:46] <markelog___> first async exec then this
[09:10:03] <markelog___> since it was hovering on me for a while now
[09:10:19] <timmywil> sounds good
[09:10:43] <timmywil> m_gol: how's the DOM interception stuff?
[09:11:35] <timmywil> https://github.com/jquery/jquery/issues/1747
[09:11:47] <timmywil> oh, that's assigned to gibson042
[09:11:58] <markelog___> yeah, width is on m_gol )
[09:12:00] <timmywil> well that is just superman
[09:12:06] <timmywil> that *guy
[09:12:42] <m_gol> I don't want to assign to myself too much before March 8th as I'm going to a conf & speaking so quite busy now
[09:12:55] <gibson042> I can still put something up for that one
[09:13:09] <gibson042> it's small code delta, but bikeshed-heavy
[09:13:23] <m_gol> if sth is especially critical then ping me but otherwise see above
[09:13:28] <m_gol> * or small
[09:13:36] <gibson042> PR will focus discussion, which should happen in the next meeting
[09:14:18] <timmywil> m_gol: np
[09:15:16] <markelog___> m_gol: angular conf right?
[09:15:24] <m_gol> markelog__: yes
[09:15:38] <markelog___> i need more underscores!
[09:15:49] <markelog___> m_gol:cool, good luck!
[09:15:58] <timmywil> what are you speaking on?
[09:16:07] <arthurvr> m_gol: good luck man!
[09:16:39] <m_gol> about preparing for the next Angular version ;-)
[09:16:59] <markelog___> 2.0! sounds interesting :-)
[09:17:00] <timmywil> nice
[09:18:19] <timmywil> ok, those were all the important things I wanted to get through and we went pretty quickly. We'll want to continue keeping an eye on behavior changes for the migrate plugin and docs, but we seem to have that covered pretty well so far.
[09:19:03] <markelog___> i have two items to discuss
[09:19:07] <timmywil> There are 11 unassigned issues, but we all have pretty full plates right now and those can wait
[09:19:10] <markelog___> do we have time?
[09:19:15] <timmywil> sure!
[09:19:21] <timmywil> what you got?
[09:19:37] <markelog___> two things, both of them are controversal, not sure if should do any of them )
[09:19:44] <markelog___> but i feel need to bring them up
[09:19:51] <markelog___> do we really need two versions of jquery?
[09:19:54] * timmywil closes the room
[09:20:01] <markelog___> compat heavier only by 2500 bytes, but those back and forth with cherry-picking is tedious
[09:20:09] <markelog___> only one diff is compat supports one additional browser and nothing else
[09:20:09] <Krinkle> "markelog___: do we really need two versions of jquery?"
[09:20:12] <Krinkle> Can I quote you on that?
[09:20:17] <markelog___> no!
[09:20:19] <markelog___> )
[09:20:41] <arthurvr> Huge topic, but I tend to agree.
[09:20:56] <markelog___> we have a lot of diffs in data module for example or with traversal
[09:21:02] <timmywil> I don't know, cherry-picking is tedious, but isn't there a bunch of code that doesn't work for IE
[09:21:04] <timmywil> IE8
[09:21:13] <timmywil> like data
[09:21:19] <markelog___> some of it, but not much
[09:21:24] <markelog___> data is biggest change
[09:21:46] <markelog___> even if we would decided to do it, then it would took some work
[09:21:53] <m_gol> markelog__: we don't support 1.x on node, extensions, Metro apps etc.
[09:21:54] <markelog___> to accomplish the task
[09:22:20] <markelog___> m_gol: feels like not a lot
[09:22:29] <markelog___> we can workaround that
[09:22:58] <gibson042> if data is the biggest difference, maybe we should look for test suite gaps after that module synchronizes?
[09:23:32] <markelog___> gaps?
[09:23:40] <markelog___> there is a lot of them?
[09:23:45] <timmywil> It's worth considering, but that's a big decision that will need further investigation. gibson042 had mentioned that he would have preferred a build script that generates a master build from the compat code, like lodash does.
[09:24:01] <timmywil> and I liked that suggestion back in the day.
[09:24:19] <timmywil> but are you suggesting that we just go back to one version of jquery and support IE8?
[09:24:52] <gibson042> I still stand by that single-master model as well :)
[09:25:01] <markelog___> it's cool way to do it, but it seems we would need to do it only for one browser and end result is not clear
[09:25:16] <markelog___> which might be a lot of work and build complecation
[09:25:23] <timmywil> yea, we probably wouldn't know the difficulties until we tried it
[09:25:34] <markelog___> i think we should think about it )
[09:25:45] <timmywil> for sure. I'd also like to get dave's thoughts
[09:25:57] <markelog___> yeah, would be intersting to hear it
[09:26:07] <markelog___> oh! three items actually )
[09:26:17] <markelog___> okay, i will create a ticket about it
[09:26:41] <timmywil> we're still under 30 min if you want to bring up the next item
[09:26:41] <markelog___> second one
[09:27:22] <markelog___> i talked with Dave about it, he felt i should brings up
[09:27:31] <markelog___> deprecation of $.fn.load
[09:27:59] <markelog___> it seems it provokes user to do some weird stuff
[09:28:13] <markelog___> whereas use-case for it is not clear
[09:28:35] <markelog___> like downloading full document with doctype and stuff
[09:28:40] <markelog___> and then navigate on it
[09:28:48] <markelog___> which would sometimes fail
[09:29:01] <markelog___> we had a ticket about it couple weeks ago
[09:29:08] <markelog___> won't fix as i recall
[09:29:31] <gibson042> I'm in favor of deprecation now for a 4.0 removal schedule
[09:29:34] <markelog___> plus why would you download a chunk of html, why not use templater
[09:29:54] <arthurvr> sure. Much confusion about it and many people are using it wrong.
[09:29:57] <markelog___> it was valid case a while ago, now, i'm not sure
[09:30:05] <timmywil> yea, downloading a whole page and only using a small part of it doesn't seem like best practice
[09:30:21] <scott_gonzalez> markelog___: Downloing HTML is a very sane thing to do.
[09:30:32] <scott_gonzalez> But deprecating .load() seems fine to me.
[09:30:42] <scott_gonzalez> Do not kid yourself into thinking that templating is a better solution.
[09:31:17] <timmywil> scott_gonzalez: agreed
[09:31:19] <markelog___> not saying you shouldn't do it, i'm saying downloading like load is weird, you can do it by another means with much clearer path
[09:31:34] <scott_gonzalez> .load() is not weird, it's a very nice sugary API.
[09:31:43] <scott_gonzalez> The problems is that many people use it wrong.
[09:31:45] <markelog___> fir example gmail does it )
[09:31:49] <gibson042> it closes over too many internal operations
[09:31:57] <timmywil> it's very magic
[09:32:07] <timmywil> such wow
[09:32:19] <scott_gonzalez> The selector addition to URLs is kinda crazy.
[09:32:33] <markelog___> in most cases you could use a templater in another you could just use ajax
[09:32:43] <gibson042> http://api.jquery.com/load/ : "Note: The event handling suite also has a method namedÂ .load(). jQuery determines which method to fire based on the set of arguments passed to it."
[09:32:46] <markelog___> with correct callback
[09:32:46] <gibson042> O_o
[09:33:00] <timmywil> yea, that's fun too
[09:33:57] <markelog___> okay, i will create a ticket, it seems we want to at least deprecated it for 3.0 or even remove it
[09:34:10] <markelog___> sounds good?
[09:34:19] <timmywil> I think 4.0 removal at the latest
[09:34:21] <timmywil> earliest
[09:34:36] <markelog___> why?
[09:34:39] <timmywil> 3.0 is just too soon
[09:34:57] <timmywil> nice to have something deprecated for at least a version
[09:35:04] <timmywil> before removal
[09:35:25] <markelog___> okay, more like a doc issue, then
[09:35:37] <markelog___> hm, do we need a ticket for it anyway?
[09:35:45] <markelog___> for the core issue list
[09:35:55] <timmywil> we'd probably want to add a deprecation warning to migrate at least
[09:36:05] <timmywil> maybe move .load to our deprecated file in src too
[09:36:12] <markelog___> okay, so we do )
[09:36:27] <markelog___> will create three tickets for it then
[09:36:34] <markelog___> oh and btw
[09:36:42] <markelog___> we have a lot of branches in core
[09:36:47] <markelog___> should we delete some of them?
[09:36:54] <timmywil> hehe, well, just one for discussion first. we'll want to get more thoughts from mobile and such.
[09:37:06] <timmywil> sry to confuse. I'm looking ahead.
[09:37:12] <scott_gonzalez> Oh look, I detected when .load() overwrote .load() 7 years ago :-P http://bugs.jquery.com/ticket/2819
[09:37:59] <markelog___> timmywil: okay, then one ticket then )
[09:38:34] <markelog___> we have 10 branches, it seems we should have two
[09:39:02] <timmywil> 10 branches on the core repo?
[09:39:14] <arthurvr> timmywil: yup
[09:39:17] <markelog___> yeah
[09:39:24] <timmywil> ah, yea, that could use some clean-up
[09:39:30] <markelog___> couple of them are needed they are for the deferred
[09:39:31] <timmywil> do we need the -stable branches anymore?
[09:39:48] <markelog___> no, i guess, they are very old
[09:39:59] <timmywil> I think there's still 1 PR against 1.x-master
[09:40:09] <markelog___> really?
[09:40:35] <markelog___> i thought we destroy them all
[09:40:48] <timmywil> https://github.com/jquery/jquery/pull/1905
[09:41:03] <m_gol> there's one extremely old "delegation" branch by timmywil
[09:41:26] <m_gol> all the standard-then* branches are related to the Deferred changes, they can be removed when gibson's PR is merged
[09:41:31] <timmywil> yea, that can go
[09:42:01] <m_gol> apart from that the only thing I see can be removed is 1744-unwrap which is DaveMethvin|away's PR
[09:42:07] <markelog___> will ping dave on 1905
[09:42:28] <m_gol> this PR is kinda weird
[09:43:03] <markelog___> which one?
[09:43:07] <m_gol> since we were planning making data parsing fully HTML5-compatible, i.e. camelCase (almost) all the things
[09:43:13] <markelog___> 1744 or 1905?
[09:43:20] <gibson042> #1905 will be superceded by timmywil's data work
[09:43:22] <m_gol> so whatever we land now, it'll need changing soon
[09:43:23] <m_gol> yeah
[09:43:27] <m_gol> markelog__: 1905
[09:43:48] <timmywil> I haven't familiarized myself with all the data changes yet
[09:43:58] <timmywil> I suspect gibson042 is right
[09:44:09] <timmywil> so it's going anyway
[09:44:22] <markelog___> if those changes are acceptable it would cool if we can land them with timmy changes
[09:44:37] <markelog___> so contributor efforts would be "rewarded"
[09:44:44] <gibson042> I agree
[09:44:51] <gibson042> let me look at the test changes...
[09:45:12] <timmywil> yea, I'll do my best to use his PR even if I need to make minor changes
[09:45:46] <markelog___> cool
[09:45:55] <gibson042> looks like it moves things in exactly the wrong direction :(
[09:46:16] <timmywil> really? :P
[09:46:17] <gibson042> the assertions are all like `div.data()[ key ]`
[09:46:42] <m_gol> yeah, that's why I wrote "weird"
[09:46:58] <gibson042> which is the most dangerous kind of access, because we'll be replacing dashes with camelCase on the way in
[09:47:17] <timmywil> ah, I see
[09:48:08] <markelog___> let just assign timmy on this one :)
[09:48:15] <timmywil> ok, well, I'll get to that and at least thank him.
[09:48:20] <m_gol> so it seems we're saying to the contributor "we'll merge your PR and soon we'll change it in the opposite direction"
[09:48:38] <markelog___> no, if changes aren't good it should be landed
[09:48:46] <m_gol> right
[09:48:54] <timmywil> shouldn't* you mean?
[09:49:02] <markelog___> yeah )
[09:49:04] <markelog___> ))
[09:49:07] <m_gol> timmywil: that's how I read it ;)
[09:49:11] <timmywil> right
[09:49:17] <m_gol> too bad we've been dragging him into it for so long
[09:49:27] <timmywil> I'll try not to say "suck it" when I close it
[09:49:44] <markelog___> and then we could destroy the 1.x-master
[09:49:51] <timmywil> right
[09:50:10] <timmywil> I think that's everything
[09:50:16] <m_gol> markelog__: did you have any luck in restoring the clean test state on master/compat? we're failing currently
[09:50:17] <markelog___> so just to be clear, now, we can remove 1.11-stable, 2.1-stable, delegation
[09:50:27] <m_gol> why remove 1.11-stable?
[09:50:39] <m_gol> you'll lose information then
[09:50:49] <m_gol> this branch has two commits after 1.11.2
[09:51:05] <markelog___> do we need it?
[09:51:09] <timmywil> I suppose it could stick around, but the changes are also in our 1.x patch releases
[09:51:17] <markelog___> timmywil: there is third item though )
[09:51:22] <m_gol> this would be basically saying "we're now sure we won't ever release 2.1.4/1.11.3"
[09:51:30] <timmywil> markelog___: oh, I thought the 10 branches was the 3rd item
[09:51:42] <m_gol> so I think they should stay at least until 3.0.0
[09:51:45] <markelog___> nope, just "btw" )
[09:52:02] * timmywil prepares himself
[09:52:05] <gibson042> +1 to keeping until 3.0.0
[09:52:07] <m_gol> timmywil: not all changes
[09:52:24] <timmywil> ok, we'll keep -stables for now
[09:52:25] <m_gol> removing copying jquery-latest is only on 1.11-stable
[09:52:31] <markelog___> we need 9 branches then
[09:52:46] <timmywil> markelog___: and dave can remove his branch soon
[09:52:54] <timmywil> and we're landing deferred this week so there's 3 more
[09:53:12] <m_gol> timmywil: is your "delegation" branch needed?
[09:53:16] <timmywil> no
[09:53:20] <timmywil> that one can go too
[09:53:24] <m_gol> ok
[09:53:40] <m_gol> so soon we'll only need 4 branches
[09:53:49] <m_gol> master, compat, 2.1-stable & 1.11-stable
[09:53:59] <timmywil> right
[09:54:03] <m_gol> k
[09:54:15] <markelog___> what is your thoughts on dave pull btw?
[09:54:34] <markelog___> https://github.com/jquery/jquery/pull/2003
[09:55:00] <timmywil> Works for me
[09:55:07] <timmywil> The workflow makes sense
[09:55:10] <markelog___> okay, so we can land it
[09:55:24] <markelog___> and remove that branch too
[09:55:29] <timmywil> I suppose we can :)
[09:55:42] <timmywil> milestone added
[09:55:45] <markelog___> third item
[09:55:49] <m_gol> markelog__: did you have any luck with test failures on master/compat?
[09:56:00] <m_gol> we have an unclean state now
[09:56:01] <markelog___> m_gol: yeah, found couple of things
[09:56:15] <markelog___> m_gol: those aren't too bad
[09:56:32] <markelog___> just some irregularities
[09:56:34] <m_gol> haha, floats
[09:56:39] <markelog___> yeah )
[09:56:46] <markelog___> might be qunit update related
[09:56:56] <timmywil> I'm in suspense on this third issue
[09:57:02] <markelog___> $.ajax
[09:57:17] <markelog___> we decided to not touch it, until something better comes along
[09:57:28] <markelog___> but we can remove couple of things, to decrease the byte size
[09:57:36] <markelog___> some outrageous stuff
[09:57:45] <markelog___> like success/error callbacks, sync behaviour
[09:58:43] <markelog___> callbacks that are declared through object argument that is
[09:59:11] <timmywil> were success/error already deprecated?
[09:59:15] <timmywil> I think they were
[09:59:38] <markelog___> not sure
[10:00:03] <scott_gonzalez> Deprecation Notice: The jqXHR.success(), jqXHR.error(), and jqXHR.complete() callbacks are deprecated as of jQuery 1.8. To prepare your code for their eventual removal, use jqXHR.done(), jqXHR.fail(), and jqXHR.always() instead.
[10:00:17] <markelog___> i already fix that )
[10:00:28] <markelog___> "callbacks that are declared through object argument that is"
[10:00:47] <timmywil> ah, so we didn't deprecate adding them through options
[10:00:50] <scott_gonzalez> I don't think you can remove sync ajax.
[10:01:09] <gibson042> I agree with scott_gonzalez
[10:01:13] <scott_gonzalez> Corerct, the options are not deprecated.
[10:01:32] <markelog___> now all modern browsers are warn about it and it was pronounced as bad practise long time ago
[10:01:48] <scott_gonzalez> In fact, they're required to be used for async: false.
[10:02:00] <timmywil> async: false has also been deprecated since 1.8
[10:02:20] <scott_gonzalez> async: false was never deprecated.
[10:02:25] <scott_gonzalez> Using deferred with async: false was deprecated.
[10:02:37] <timmywil> ah, yea
[10:03:05] <timmywil> scott_gonzalez: so is there too much code depending on the sync behavior?
[10:03:11] <timmywil> is that the main reason?
[10:03:23] <scott_gonzalez> Oh boy, coming up on my 30 minutes, then Panera will kick me again...
[10:03:35] <scott_gonzalez> Yeah, I think there's a fair amount of userland code.
[10:03:41] <markelog___> really?
[10:03:42] <scott_gonzalez> We should keep it until we deprecated $.ajax() completely.
[10:03:55] <markelog___> that might never come
[10:04:04] <markelog___> ajax is used everywhere
[10:04:06] <timmywil> ok, let's open issues on these and continue discussion there
[10:04:10] <markelog___> okay
[10:04:11] <timmywil> we should wrap it up
[10:04:13] <scott_gonzalez> I mean, we can deprecated async: false, but I don't think we can remove it.
[10:04:27] <markelog___> why do you think a lot of people use it?
[10:04:33] <markelog___> timmywil: last question )
[10:04:34] <gibson042> even though we're not yet replacing $.ajax, backwards-incompatible disruption should still be avoided unless it comes with a pretty large benefit
[10:04:45] <scott_gonzalez> Have you seen how much people go crazy when it's mentioned?
[10:05:06] <timmywil> gibson042: fair point, but we also want to encourage best practice
[10:05:09] <markelog___> gibson042: i think there is a lot of benefit, it's a bad practise all the way
[10:05:31] <markelog___> and we're allowing to do it
[10:05:47] <markelog___> there is some rumors to disable such behaviour from browsers completly
[10:06:00] <markelog___> if we gonna wait on it until we deprecate ajax
[10:06:05] <timmywil> so maybe the solution would be a deprecation notice in docs, but no removal
[10:06:08] <scott_gonzalez> markelog___: When that happens, then we can remove it from jQuery.
[10:06:09] <markelog___> browsers wouldn't support it but we will
[10:06:23] <markelog___> that is weird
[10:06:37] <markelog___> timmywil: migrate?
[10:07:36] <timmywil> maybe, but I'm leaning towards just docs right now. I think of migrate as a tool for pointing out required changes for upgrading. This isn't so much a required change as a suggestion for best practice.
[10:08:04] <markelog___> okay, will create a ticket about it
[10:08:19] <timmywil> ok, thanks everyone!
[10:08:25] <timmywil> see you in -dev
[10:08:25] <arthurvr> thanks guys
[10:08:26] <arthurvr> bye!
