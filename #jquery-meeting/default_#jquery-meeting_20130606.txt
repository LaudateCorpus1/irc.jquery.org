[11:05:19] <toddmparker> ok, chime in if you're here
[11:05:31] <toddmparker> The jQuery Mobile team meeting is a go
[11:05:49] <toddmparker> agenda: https://docs.google.com/document/d/1-LKRo-5OGU7_D06RIoIfhIM2ogf7ox2X-zlb1U1d5kc/edit#
[11:06:37] <johnbender> helo!
[11:06:37] <uGoMobi> hi
[11:06:47] <uGoMobi> hey johnbender
[11:06:49] <johnbender> *hello
[11:07:11] <agcolom> Hello!
[11:07:18] <arschmitz> Hi
[11:07:24] <johnbender> toddmparker: not much from me this week, just here to listen
[11:07:40] <agcolom> same for me
[11:07:48] <toddmparker> sounds good
[11:08:09] <_|Nix|_> Hey, all!
[11:08:21] <toddmparker> ok, think most people are here
[11:08:29] <toddmparker> is arschmitz around?
[11:08:44] <arschmitz> yeah im here
[11:09:14] <toddmparker> hey arschmitz
[11:09:24] <toddmparker> ok, we can start
[11:09:48] <toddmparker> the only update on my side is that Andrew at Filament will be working with me on getting the new icon set processed
[11:09:54] <toddmparker> we'll work with uGoMobi on that
[11:10:06] <uGoMobi> great
[11:10:15] <toddmparker> need to decide on what size to export
[11:10:21] <toddmparker> black vs. white icons
[11:10:41] <toddmparker> whether the disc is optional but not on by default, etc.
[11:11:01] <toddmparker> be cool to be able to set black vs. white at the swatch level to ensure good contrast
[11:11:11] <toddmparker> and avoid the disc
[11:11:40] <arschmitz> toddmparker: maxlynch was asking about an ai or similar last night
[11:12:15] <toddmparker> for those icons?
[11:12:20] <arschmitz> yeah
[11:12:25] <toddmparker> they are all svg so they will open in AI
[11:12:31] <toddmparker> individually tho
[11:12:37] <uGoMobi> toddmparker: we can make the disc themeable
[11:13:22] <toddmparker> true
[11:14:11] <toddmparker> ideally, we'd let you set per theme: icon color (black/white), icon opacity (0-100%), disc (y/n) and disc color (any hex)
[11:14:15] <uGoMobi> toddmparker: we now have a ui-icon-nodics class
[11:14:21] <toddmparker> per *swatch*
[11:14:29] <toddmparker> right
[11:14:36] <uGoMobi> so it's easiest to have disc by default
[11:14:49] <toddmparker> yeah, just means you need to add that class a lot
[11:14:50] <uGoMobi> otherwise we have to change that class to opt-in
[11:15:10] <uGoMobi> that -nodics class works on a container
[11:15:11] <toddmparker> hoping to use larger icons now so we can experiment with that
[11:15:14] <toddmparker> cool
[11:15:22] <uGoMobi> so adding it to the page should do
[11:16:05] <toddmparker> if it became a swatch setting, we could just not write in the styles for the disc if you say "no thanks"
[11:16:42] <toddmparker> figure we can prep a set for you and you can drop them in for use to tinker with
[11:16:55] <uGoMobi> ok
[11:17:27] <toddmparker> that's it for me really, been swamped
[11:17:39] <toddmparker> uGoMobi: what have you been up to?
[11:17:43] <uGoMobi> I am also thinking about the themeroller
[11:18:02] <uGoMobi> we are getting a lot of new themeable stuff there :|
[11:18:20] <uGoMobi> have been working on tests in "next"
[11:18:28] <_|Nix|_> I wanna make the popup arrow size settable in theme roller.
[11:18:32] <uGoMobi> and _|Nix|_ did  great job on that too
[11:18:40] <uGoMobi> so we can finish this today
[11:19:07] <_|Nix|_> uGoMobi: How's your workshop going?
[11:19:11] <toddmparker> cool
[11:19:26] <toddmparker> yeah, you're doing a 2 day workshop?
[11:19:28] <uGoMobi> I did tutorial this morning at dutch mobile conf
[11:19:35] <uGoMobi> and a talk tomorrow
[11:19:46] <_|Nix|_> +1
[11:20:02] <uGoMobi> it was ok, just a bit different crowd then I expected
[11:20:18] <toddmparker> how so?
[11:20:33] <_|Nix|_> uGoMobi: Did you go to the right conference? Were they all, like, economists? :)
[11:20:44] <uGoMobi> the conf is combined with PHP and it were mostly people that were attending PHP conf and got free access to mobile conf
[11:20:54] <uGoMobi> so they didn't know JQM at all yet
[11:21:06] <_|Nix|_> uGoMobi: Aaaah! That's not bad, actually. Let 'em see the client side a bit.
[11:21:19] <uGoMobi> lol _|Nix|_ .. the banker were in the next hall ;)
[11:21:26] <_|Nix|_> :)
[11:21:45] <uGoMobi> _|Nix|_: right, but when you prepare a hands-on workshop...
[11:21:58] <_|Nix|_> uGoMobi: Yeah, I guess you're right.
[11:22:05] <uGoMobi> anyways, I have been talking about JQM for 3.5hrs straight
[11:22:08] <uGoMobi> :)
[11:22:54] <_|Nix|_> uGoMobi: Aside from the physiological implications, awesome!
[11:22:56] <toddmparker> ah
[11:23:02] <uGoMobi> lol
[11:23:08] <toddmparker> that is a looooong time
[11:23:13] <toddmparker> any good Q's
[11:23:43] <uGoMobi> just a few
[11:24:04] <uGoMobi> but was hoping to find out what people find difficult etc
[11:24:27] <uGoMobi> didn't learn anything like that because it was all new to most of them
[11:24:38] <_|Nix|_> uGoMobi: Yeah, I guess that's unfortunate with PHP folks. They'd mostly be on the uptake rather than into the bugs/problems/shortcomings/etc.
[11:24:52] <uGoMobi> right
[11:25:20] <toddmparker> oh well
[11:25:25] <uGoMobi> leaving for Portland tuesday
[11:25:32] <toddmparker> now you're ready to put on more workshops
[11:25:37] <uGoMobi> will look at icons before tthat
[11:25:40] <toddmparker> then you're on vacation!
[11:25:48] <uGoMobi> toddmparker: true, learn a lot from it
[11:25:49] <toddmparker> yeah, let's do that
[11:26:09] <uGoMobi> and maybe I have some time to look at external panel CSS too
[11:26:18] <uGoMobi> and we can hack on wednesday in Portland!
[11:26:20] <arschmitz> uGoMobi: nice
[11:26:21] <_|Nix|_> uGoMobi: Well, if anything, we might end up hearing from some of them soon - if they decide to stick with jQM, sooner or later they'll file an issue.
[11:26:35] <_|Nix|_> uGoMobi: Boo yah! Can't wait.
[11:26:53] <_|Nix|_> ... assuming the jetlag doesn't hold me hostage :/
[11:27:00] <toddmparker> hopefully, it will be a productive meeting
[11:27:10] <uGoMobi> yeah, gonna be a tough one _|Nix|_
[11:27:18] <toddmparker> loooong flight
[11:27:23] <uGoMobi> arschmitz and I will start hacking in plane
[11:27:30] <_|Nix|_> We can look into things like merging "next" and getting started on the widget review ...
[11:27:32] <uGoMobi> because we are in same plane from Philly
[11:27:34] <arschmitz> uGoMobi: ha ha right
[11:27:45] <arschmitz> uGoMobi: how long is your layover in philly?
[11:27:47] <toddmparker> plane rides are awesome for working as long as your battery holds up
[11:27:57] <uGoMobi> arschmitz: dunno, few hours
[11:27:57] <toddmparker> really? that's funny
[11:28:16] <_|Nix|_> Anyone flying through O'Hare?
[11:28:27] <uGoMobi> _|Nix|_: nah, that was my other option
[11:28:30] <arschmitz> yup realized it yesterday when we discovered we both arrived at priecisly 8:41 thats an odd time to be a coincidence
[11:28:57] <toddmparker> fun
[11:29:01] <uGoMobi> _|Nix|_: yes, we should merge "next" asap
[11:29:09] <toddmparker> yeah, was going to ask
[11:29:16] <toddmparker> just need some unit test work?
[11:29:22] <uGoMobi> I finish last couple of tests tonight
[11:29:32] <uGoMobi> can count them on one hand
[11:29:49] <uGoMobi> it's just that demo center is still messy
[11:29:59] <uGoMobi> the custom CSS needs to be updated
[11:30:13] <uGoMobi> do we mind if we merge before that has been done?
[11:30:48] <_|Nix|_> Not at all. Let's merge and then go from there.
[11:30:54] <toddmparker> think that's ok by me
[11:30:55] <arschmitz> uGoMobi: its not ideal but its just demos as long as its fixed before release i dont think its an issue.
[11:31:03] <toddmparker> yeah
[11:31:07] <_|Nix|_> arschmitz: My thoughts exactly.
[11:31:22] <uGoMobi> okay sounds good
[11:31:34] <arschmitz> uGoMobi: better then parts of the 1.3.1 demos are right now lol
[11:31:42] <uGoMobi> I want to go over each page in the demo center and move more info to the API docs
[11:31:44] <_|Nix|_> I've already put some minor stuff into next that should've gone into master.
[11:31:57] <_|Nix|_> Some minor custom select refactoring. Really minor, but still.
[11:32:18] <arschmitz> _|Nix|_: its getting to the point where any new work kinda needs to go on next its hard
[11:32:35] <_|Nix|_> I had this thought regarding web-ui-fw that might also be relevant here: Why not have API docs exclusively?
[11:32:47] <_|Nix|_> More complex demos can go into /resources/
[11:33:09] <arschmitz> _|Nix|_: it gives a working complex page for people to hack on
[11:33:14] <arschmitz> that are learning
[11:33:19] <uGoMobi> true
[11:33:22] <arschmitz> its also a testing tool
[11:33:25] <_|Nix|_> arschmitz: The demos do?
[11:33:31] <uGoMobi> i like to have a showcase in the repo
[11:33:45] <_|Nix|_> arschmitz: Yeah, I guess they're great starting places for manual testing.
[11:33:53] <arschmitz> _|Nix|_: yes because if people clone they can run demos locally to try things
[11:34:03] <uGoMobi> but I think some stuff in the widget reference should be in the API docs only
[11:34:09] <_|Nix|_> Let's just not have the same blurbs in both the API docs and the demos.
[11:34:16] <_|Nix|_> That just feels like duplication.
[11:34:19] <uGoMobi> don't like to have same content at two places
[11:34:22] <uGoMobi> yeah
[11:34:23] <_|Nix|_> uGoMobi: Exactly.
[11:34:26] <arschmitz> _|Nix|_: yeah i agree with that
[11:34:31] <uGoMobi> and that always goes wrong
[11:34:34] <toddmparker> yeah, we should stomp that out
[11:34:38] <_|Nix|_> I guess we can drift the demos towards, well, demos.
[11:34:41] <toddmparker> but having good examples is pretty key
[11:34:54] <arschmitz> yeah the copy and past stuff is great for newbies
[11:34:54] <uGoMobi> but I think this is just part of the process of new API docs
[11:35:16] <uGoMobi> better have it in demo center for a while then the info can't be find anywhere
[11:35:17] <_|Nix|_> I think the demos should be more about exposing the various values of the various settings rather than explaining how widgets work.
[11:35:32] <arschmitz> uGoMobi: yeah i agree pretty sure there is even still stuff in old docs thats not in either place right now
[11:35:42] <uGoMobi> arschmitz: yeah that's right
[11:36:08] <uGoMobi> the "pages" section there contains a lot of info that isn't documented now
[11:36:17] <arschmitz> just need to continue to try to iron it al out
[11:36:20] <uGoMobi> http://view.jquerymobile.com/old-docs/docs/pages/index.html
[11:36:47] <_|Nix|_> We could do a jam session on that right before release.
[11:36:58] <_|Nix|_> After all, docs/demos are not subject to code freeze.
[11:37:01] <toddmparker> good idea
[11:37:07] <arschmitz> yeah kinda like we did last time with getting to where we are
[11:37:08] <uGoMobi> +1
[11:37:15] <_|Nix|_> Yeah.
[11:37:21] <arschmitz> just continue to do that before realease and it will all get sorted
[11:37:44] <toddmparker> easier to trim stuff out than write new stuff
[11:38:00] <arschmitz> probably a good thing to do a good docs pass before releases to make sure they reflect any changes anyway
[11:38:02] <_|Nix|_> Actually, playing around with the stuff we've created is not a bad idea even before RC/beta/whatever causes code freeze.
[11:38:13] <_|Nix|_> Last time some things ended up in demos because of such timing.
[11:39:06] <toddmparker> so how goes things _|Nix|_ and arschmitz
[11:39:32] <_|Nix|_> OTOH, without the limiting factor of the code freeze, you do not really realize the shortcomings ... sometimes it's good not to be able to modify the library anymore. It really helps crystallize the TODOs for the point release.
[11:39:54] <_|Nix|_> I've been fixing the automated tests in "next'.
[11:40:24] <_|Nix|_> I left all the ones that require the new implementation of things to uGoMobi .
[11:40:38] <toddmparker> makes sense
[11:40:55] <_|Nix|_> ... but all the ones that were looking for classes/values/etc. in the wrong places because of the new structure are now fixed.
[11:41:20] <_|Nix|_> I also fixed a regression in custom select where it wasn't transferring focus to a menu item upon open.
[11:41:27] <_|Nix|_> I made a small refactor in the process.
[11:41:27] <toddmparker> nice
[11:41:52] <_|Nix|_> ... and a fix: focus no longer passes to disabled items when the user presses the up/down arrow.
[11:42:12] <uGoMobi> _|Nix|_: thanks for that (I broke it)
[11:42:51] <_|Nix|_> ... and all those rather complex selectors in custom select got me thinking that I should do a jsperf run to try and find faster ways.
[11:43:25] <_|Nix|_> Not to mention that we need to make custom select a proper extension as part of the widget review.
[11:43:33] <_|Nix|_> IINM it's the last improper extension.
[11:43:43] <_|Nix|_> That's about it.
[11:43:54] <_|Nix|_> Not relocating popups has some negative implications.
[11:44:01] <uGoMobi> _|Nix|_: we also have listview filter
[11:44:19] <_|Nix|_> uGoMobi: Oh, the listview extensions? Those are improper?
[11:44:29] <_|Nix|_> uGoMobi: OK. NM. We have more than one :0
[11:44:30] <uGoMobi> I thought s
[11:44:31] <_|Nix|_> :)
[11:44:35] <uGoMobi> so*
[11:44:56] <_|Nix|_> If you leave the popup where it is, it can become subject to clipping.
[11:45:19] <toddmparker> great
[11:45:20] <_|Nix|_> For example, we had this problem when inside a fieldcontain.
[11:45:21] <toddmparker> and arschmitz
[11:45:36] <_|Nix|_> Now, we can work around fieldcontain, but other markup can still interfere in the wild.
[11:45:39] <arschmitz> been working on new flip switch widget
[11:46:09] <arschmitz> uGoMobi: filter is an extension just needs to be reivewed its all basicly one method
[11:46:16] <arschmitz> https://github.com/jquery/jquery-mobile/blob/master/js/widgets/listview.filter.js
[11:46:24] <toddmparker> was looking at the demos
[11:46:27] <uGoMobi> _|Nix|_: yeah, it's gonna be complicated to check what custom CSS a user added to a container
[11:46:41] <_|Nix|_> We need to weigh the advantages of having the popup stay where it is (you can make a form containing a popup) against the potential problems of showing it above all content while possibly deeply embedded in the DOM.
[11:46:43] <arschmitz> http://view.jquerymobile.com/flip/demos/widgets/sliders/switch.php
[11:46:59] <arschmitz> the first two are new flip switches the rest are old
[11:47:14] <arschmitz> this is cloned off next
[11:47:19] <toddmparker> are radios going to be an option?
[11:47:36] <arschmitz> toddmparker: yeah i think we talked about that just have not done it yet
[11:47:44] <toddmparker> just curious
[11:47:52] <arschmitz> wondering the best way to handle labels on radio
[11:47:58] <toddmparker> so with this change, you can still use the previous markup if you want
[11:47:58] <arschmitz> just use the first one hide the second?
[11:48:02] <toddmparker> so it's not a breaking change
[11:48:06] <_|Nix|_> arschmitz: Why is the first one On/On?
[11:48:09] <toddmparker> yep
[11:48:15] <arschmitz> toddmparker: yup that way we can depreciate the current one
[11:48:15] <toddmparker> extra on
[11:48:18] <toddmparker> more magic
[11:48:24] <arschmitz> _|Nix|_: typo
[11:48:24] <toddmparker> cool
[11:48:31] <_|Nix|_> arschmitz: Oh, OK :)
[11:48:32] <arschmitz> its already fixed local just havent pushed
[11:48:40] <_|Nix|_> arschmitz: NP. Just wondering.
[11:49:01] <arschmitz> _|Nix|_: yeah i noticed it right after i pushed the branch
[11:49:21] <arschmitz> it works with keyboard controls too but i dont think iv pushed that either
[11:50:12] <_|Nix|_> arschmitz: Looks indistinguishable from the current one.
[11:50:13] <arschmitz> toddmparker: also added swipe to make it work
[11:50:22] <arschmitz> _|Nix|_: thank you that was the idea
[11:50:44] <_|Nix|_> arschmitz: Really awesome - especially that it's separate from slider.
[11:50:59] <uGoMobi> yeah that's great
[11:51:00] <arschmitz> and performance should not be an issue with this all it does is toggle a class / prop
[11:51:13] <_|Nix|_> arschmitz: Does UI have an abstraction for moving something in response to the mouse drag? Is draggable that?
[11:51:23] <arschmitz> _|Nix|_: yes
[11:51:24] <toddmparker> great you added swipe
[11:51:31] <toddmparker> this was a good move
[11:51:35] <arschmitz> _|Nix|_: but thats really bad for performance
[11:51:46] <_|Nix|_> arschmitz: I know, but we still need it in one place: slider.
[11:51:53] <arschmitz> _|Nix|_: yes
[11:52:15] <_|Nix|_> arschmitz: We need to really make that fly - although I think we've gone as far as we could with that.
[11:52:21] <arschmitz> i think for slider we should depreciate flip for 1.4 then we can remove it and refactor slider for 1.5
[11:52:23] <_|Nix|_> arschmitz: I doubt using draggable would make it faster.
[11:52:39] <_|Nix|_> arschmitz: Yeah, I'm talking exclusively of the classical slider.
[11:52:47] <_|Nix|_> arschmitz: Flip switch is already gone in my mind.
[11:52:52] <arschmitz> _|Nix|_: im working on tests for slider performance
[11:53:09] <arschmitz> using some of the more popular ones and some others iv seen
[11:53:18] <arschmitz> to see which is the most responsive on android
[11:53:24] <uGoMobi> if we have time it would be nice if we can already look at slider _create and refresh
[11:53:26] <arschmitz> since thats where the problem seems to be
[11:53:30] <uGoMobi> everything is duplicated there
[11:53:51] <_|Nix|_> arschmitz: I had a pretty basic one: Set random values that are guaranteed to be some distance apart and see how many you can set in a fixed amount of time.
[11:54:13] <arschmitz> _|Nix|_: thats not getting to what i think the core issue is though
[11:54:15] <_|Nix|_> I think Portland might be a great place for slider.
[11:54:26] <arschmitz> i think the issue is to do with binding to touchmove
[11:54:27] <_|Nix|_> arschmitz: I know. It's hard to reproduce mouse movement.
[11:54:53] <_|Nix|_> arschmitz: Doing DOM manip in response to the mouse is like a dagger through the heart of the browser.
[11:55:02] <arschmitz> _|Nix|_: exactly
[11:55:03] <toddmparker> adding in the slider improvements arschmitz did for some client stuff would be good - drag able range, etc.
[11:55:05] <uGoMobi> yea
[11:55:16] <arschmitz> toddmparker: yeah thats one of the sliders im comparing
[11:55:20] <_|Nix|_> arschmitz: ... but the only alternative is ... what? Canvas?
[11:55:23] <arschmitz> becuase its really stripped down
[11:55:31] <arschmitz> as far as logic
[11:55:38] <toddmparker> a slider refactor based on some of the UI stuff for 1.5 would be good
[11:55:55] <arschmitz> problem with ui slider is its very fundamentaly different
[11:56:06] <arschmitz> it has no connection to inputs at all execpt through a callback
[11:56:06] <_|Nix|_> We should definitely deprecate the slider-based flip switch though. Can't emphasize that enough.
[11:56:09] <toddmparker> is syncing the slider handle with the input values bogging it down?
[11:56:16] <toddmparker> wonder if that could be throttled down
[11:56:20] <_|Nix|_> arschmitz: That's actually a good thing.
[11:56:34] <arschmitz> yes but its a massive departure from what we have no
[11:56:53] <_|Nix|_> arschmitz: If we can make our slider basically the glue between UI's and an input, then we're themeing away from golden.
[11:56:55] <toddmparker> sorry, i meant using the future UI interactions that work on mouse/touch/pointer
[11:56:57] <arschmitz> and right now with auto init there is no real way to work it off callbacks
[11:56:59] <toddmparker> not the ui slider
[11:57:19] <arschmitz> toddmparker: yes
[11:57:33] <arschmitz> and _|Nix|_ yes i had that thought just not sure yet if its the right way to go
[11:57:49] <arschmitz> ui slider is made for desktop so it might not be the best for performance
[11:57:55] <_|Nix|_> arschmitz: I think we should let the performance do the talking.
[11:57:56] <arschmitz> but i honestly am not sure yet
[11:58:07] <arschmitz> _|Nix|_: exactly
[11:58:13] <arschmitz> thats why im setting up test pages
[11:58:25] <uGoMobi> cool
[11:58:30] <toddmparker> sounds good. arschmitz is the slider master now
[11:58:35] <arschmitz> my basic idea is throw 50 of the same slider on each page
[11:58:38] <uGoMobi> best approach
[11:58:40] <arschmitz> and then try to operate them
[11:58:58] <_|Nix|_> arschmitz: If we manage to abstract away dealing with inputs via $.mobile.forminput, then we might be able to do the slider like UI, while leaving all our optimizations (which might make ours faster than UI's) in place.
[11:58:59] <toddmparker> torture test
[11:59:01] <arschmitz> right now the jqm one dies completely if you do that in android
[11:59:05] <uGoMobi> lol
[11:59:07] <toddmparker> really?
[11:59:20] <_|Nix|_> arschmitz: Of course that might mean that $.mobile.forminput won't be a base class after all.
[11:59:26] <arschmitz> yeah uGoMobi and i discovered that making the demos
[11:59:57] <_|Nix|_> arschmitz: We can always instantiate it as a second widget on top of the one in question.
[12:00:15] <arschmitz> _|Nix|_: yeah there are a lot of ways we can go
[12:00:27] <arschmitz> need to get the performance testing done to see what the best base to start from is and go from there
[12:00:35] <_|Nix|_> _create: function() { if ( this.element.is( "input" ) ) { this.element.formwidget(); } }
[12:00:55] <_|Nix|_> arschmitz: Of course not literally that code, but that kind of approach.
[12:01:05] <arschmitz> _|Nix|_: yeah i get what your saying
[12:01:23] <_|Nix|_> Alright ... we can talk about all this some more next week :)
[12:01:33] <toddmparker> sounds good
[12:01:43] <toddmparker> so when do you all think we will merge next into master?
[12:01:46] <arschmitz> _|Nix|_: yeah maybe i can get the testing done first so we have a good idea to brainstorm off
[12:02:01] <_|Nix|_> arschmitz: For sure. When it comes to slider, perf is king.
[12:02:04] <_|Nix|_> Emperor.
[12:02:08] <uGoMobi> :)
[12:02:08] <_|Nix|_> Galactic emperor.
[12:02:14] <_|Nix|_> !
[12:02:15] <_|Nix|_> Q
[12:02:27] <arschmitz> so what your saying is we need a jedi ?
[12:02:34] <uGoMobi> lol
[12:02:39] <_|Nix|_> (and I don't mean the one from James Bond.)
[12:02:50] <_|Nix|_> ... at least.
[12:03:22] <_|Nix|_> I think we're up against some pretty steep odds. I'm convinced that poor mouse movement response time is what's keeping the Web from being confuseable with native.
[12:03:49] <_|Nix|_> ... but let's not debate that here and now. I'm a pessimist.
[12:03:56] <arschmitz> _|Nix|_: its rough for sure
[12:04:15] <arschmitz> iv yet to see anything work well on android that trys to go based on touchmove
[12:04:40] <_|Nix|_> *nod*
[12:04:41] <uGoMobi> arschmitz: you have also been looking into file order issues, right
[12:04:49] <arschmitz> uGoMobi: ah right
[12:04:50] <uGoMobi> https://github.com/jquery/jquery-mobile/issues/5982
[12:05:18] <arschmitz> going to try and reorder index.php and jquery.mobile.js to match the builder
[12:05:23] <arschmitz> since the builder cant be changed
[12:05:27] <toddmparker> good thinking
[12:05:39] <arschmitz> been running into a lot of issues lately related to file order
[12:05:55] <toddmparker> hmmm
[12:06:00] <_|Nix|_> Well, there is some variability ... some things really are independent, so it doesn't matter in which order they're loaded.
[12:06:07] <uGoMobi> I will add a comment to that ticket with some other related things we should look into
[12:06:22] <toddmparker> k
[12:06:29] <arschmitz> the builder goes in alphabetical order based on module then name
[12:06:34] <_|Nix|_> If any problems arise because of load order, then those must be fixed via AMD-dependency declarations.
[12:06:48] <arschmitz> _|Nix|_: this is css too
[12:07:09] <uGoMobi> we have to split out some CSS from core.css
[12:07:20] <_|Nix|_> arschmitz: We need to make the build process use the CSS AMD-deps declared in the .JS files to construct the CSS.
[12:07:27] <uGoMobi> like loader CSS should be in separate file cos it's a widget
[12:07:46] <arschmitz> as of now the build order cant be changed
[12:07:52] <arschmitz> so we need to adapt to it
[12:08:14] <_|Nix|_> arschmitz: When you say build order, do you mean what requirejs does during grunt building of the library?
[12:08:26] <arschmitz> no this is about the download builder
[12:08:28] <_|Nix|_> arschmitz: ... the creation of dist/jquery.mobile.js?
[12:09:05] <_|Nix|_> Too bad gseguin isn't around ... I wonder why we can't use the build process to construct a custom build.
[12:09:23] <_|Nix|_> We already have that ability via --modules=list,of,files,you,want
[12:09:29] <_|Nix|_> ... but only for JS.
[12:09:32] <arschmitz> _|Nix|_: he has commented in the bast that it cant be changed
[12:09:40] <arschmitz> the file order that is
[12:09:44] <_|Nix|_> bast?
[12:09:58] <arschmitz> its alphabetical by module name then name of the file
[12:10:00] <arschmitz> past*
[12:10:11] <_|Nix|_> arschmitz: It can't be changed in download builder, right?
[12:10:16] <arschmitz> not file name component name
[12:10:18] <arschmitz> right
[12:11:02] <arschmitz> so to ensure everything works the easiest thing is to make sure the dist and the index.php versions match that order
[12:11:05] <uGoMobi> arschmitz: but file order is always the same in DB build, right?
[12:11:13] <uGoMobi> no matter what selection you make
[12:11:16] <arschmitz> uGoMobi: yup
[12:11:20] <uGoMobi> ok
[12:11:21] <_|Nix|_> arschmitz: ... but if download builder were to use grunt --modules=the,modules,the,user,has,selected then doing a custom build and doing a custom build via the download builder would be the same. Now, if that still means that the order can't be changed, then at least the custom builder and the release build would be in sync.
[12:12:05] <arschmitz> _|Nix|_: you would have to talk to gseguin about that its his own repo its not even part of jqm we just use it
[12:12:14] <_|Nix|_> arschmitz: I know.
[12:12:28] <_|Nix|_> arschmitz: ... but first, we need custom builds for CSS via requirejs.
[12:12:29] <johnbender> arschmitz: _|Nix|_: I know that we pull in css as a dependency of JS modules
[12:12:34] <_|Nix|_> arschmitz: It's on my back burner.
[12:12:47] <_|Nix|_> johnbender: Yes, there are specially formatted comments at the top.
[12:12:52] <johnbender> yarp
[12:13:00] <johnbender> wasn't sure if that was a helpful bit of information
[12:13:02] <_|Nix|_> johnbender: We should do that in our grunt custom build as well.
[12:13:05] * johnbender didn't read back very far
[12:13:16] <arschmitz> johnbender yeah css goes in same order basicly
[12:13:28] <_|Nix|_> johnbender: Then the grunt custom build would duplicate the function of the download builder exactly (I assume).
[12:13:36] <johnbender> probably a matter of constructing the config object passed to requirejs
[12:13:48] <_|Nix|_> johnbender: Yep. That's what I'm thinking.
[12:13:52] <johnbender> but that's as far as my knowledge extends
[12:13:56] * johnbender crawls back into his cave
[12:13:58] * _|Nix|_ needs to do another dive into requirejs-land.
[12:16:43] <toddmparker> one random idea: we should look at building a demo page that explains which core modules we don't use in mobile (animations, etc.) and have a demo showing us running on a custom build
[12:16:55] <toddmparker> just wanted to mention that
[12:16:59] <arschmitz> toddmparker: good idea
[12:17:17] <toddmparker> since i don' think we'll be shipping with a cut down core in the foreseeable future
[12:17:24] <toddmparker> as much as i'd like that
[12:17:25] <_|Nix|_> toddmparker: Cool!
[12:17:39] <_|Nix|_> toddmparker: This could have the makings of an in-library download builder :)
[12:19:57] <uGoMobi> talking about core... I think we don't test against 1.10 yet
[12:20:24] <_|Nix|_> uGoMobi: Nope, but we got 2.0.0 :)
[12:21:01] <arschmitz> uGoMobi: yeah we should switch master to 1.10
[12:21:02] <uGoMobi> isn't 2.0.2 out already? :)
[12:21:05] <_|Nix|_> How far back do we go for 1.4?
[12:21:15] <uGoMobi> I'd say 1.8
[12:21:24] <arschmitz> its always been 1.7 for us so far
[12:21:43] <arschmitz> but at this point i think 1.8 makes sense
[12:21:49] <uGoMobi> also allows use to remove some code we added in support to make BB5 and iOS 3 or 4 C-grade if core 1.8+ is used
[12:22:04] <uGoMobi> arschmitz: we support 2 versions back
[12:22:06] <toddmparker> +1 for 1.8
[12:22:38] <_|Nix|_> So, 2.0 is not considered a version? I guess it's kind of a branch, eh?
[12:22:57] <toddmparker> we do need to test actively on 2.0.2 and 1.10
[12:23:03] <uGoMobi> right
[12:23:11] <toddmparker> in addition to 1.8-1.9
[12:23:29] <_|Nix|_> toddmparker: That's a lotta travis jobs ...
[12:23:34] <uGoMobi> maybe switch master to 1.10 and have a mirror branch with 2.0
[12:23:34] <toddmparker> does 2.0.2 nix any of our supported browsers?
[12:23:43] <toddmparker> uGoMobi: i like that idea
[12:23:44] <uGoMobi> IE8
[12:23:48] <_|Nix|_> We'd be dropping one and adding, like, 4.
[12:24:26] <toddmparker> being able to go to view. and see 1.10 and 2.0 would be important tho
[12:24:30] <uGoMobi> IE7 will be C-grade anyway... doesn't support pseudo elements
[12:24:37] <toddmparker> uGoMobi: right
[12:24:45] <arschmitz> ie7 has finally gone below 1% WOO
[12:24:46] <uGoMobi> and most probably BB5 too
[12:24:50] <toddmparker> any other browsers need to be downgraded based on the CSS work?
[12:25:31] <uGoMobi> toddmparker: I changed the A-grade test so it's not only MQ's but also pseudo elements that needs to be supported
[12:27:16] <toddmparker> cool
[12:27:22] <toddmparker> so it will weed out the baddies
[12:27:47] <uGoMobi> yup
[12:31:00] <uGoMobi> *cricket*
[12:31:39] <gseguin> _|Nix|_: that would work only to build
[12:31:47] <gseguin> not to get the dependency tree
[12:32:56] <_|Nix|_> gseguin: Can't we put in a callback that would return dep names?
[12:34:08] <gseguin> _|Nix|_: sorry I didn't catch up fully, what exactly are you trying to achieve?
[12:35:14] <_|Nix|_> gseguin: Have download builder use the build process to construct the final product.
[12:35:44] <_|Nix|_> gseguin: I'm thinking requirejs config shared between the build process and download builder and whatever demos we want.
[12:37:02] <gseguin> but you would still need to have a service running r.js to figure out the dependencies
[12:38:07] <gseguin> I'm not sure I see what that would bring ?
[12:41:55] <_|Nix|_> gseguin: Yes, for sure. However those people who already have the repository could also do custom builds.
[12:42:17] <_|Nix|_> gseguin: ... and custom builds from multiple repositories could be interlinked.
[12:42:18] <gseguin> can't they already ?
[12:42:28] <_|Nix|_> gseguin: Only for JS.
[12:42:29] <gseguin> with --modules ?
[12:42:36] <gseguin> ah
[12:42:41] <_|Nix|_> --modules only does JS for now.
[12:42:52] <gseguin> I see you would want that to work with CSS as well
[12:43:23] <_|Nix|_> gseguin: Yeah, and then we'd have exactly one place that creates custom builds: Gruntfile.js.
[12:43:41] <_|Nix|_> gseguin: ... and it can be made accessible both from download builder and directly via --modules.
[12:44:00] <_|Nix|_> gseguin: ... and from those projects that use jQM as a subproject.
[12:44:04] <gseguin> I don't think it's worth spending time to revamp the download builder
[12:44:27] <gseguin> but I agree it would be cool to have CSS built by --modules
[12:44:43] <gseguin> however that is going to be tricky
[12:45:34] <_|Nix|_> gseguin: How did you end up making use of those specially formatted comments? Does requirejs know how to use those?
[12:45:56] <gseguin> no it doesn't
[12:46:04] <gseguin> it's completely custom
[12:46:08] <_|Nix|_> gseguin: Oh no ... tricky :(
[12:46:29] <_|Nix|_> gseguin: Maybe we can work with jrburke to add an extension or something.
[12:46:33] <gseguin> and if you look at the code it's going to hurt your eyes
[12:46:38] <_|Nix|_> :)
[12:46:50] <gseguin> that's an idea
[12:46:50] <toddmparker> guess we can move this over to dev :)
[12:47:06] <gseguin> indeed
[12:47:12] <gseguin> sorry to hijack the meeting
[12:47:19] <_|Nix|_> gseguin: I've seen a guy with a degree in journalism write Visual Basic for Applications. My eyes are toughened by the scars.
[12:47:31] <_|Nix|_> Yeah :) Let's go to -dev.
[12:47:48] <gseguin> any question from the community?
[12:48:57] <gseguin> Alright, that's a wrap
[12:54:00] <toddmparker> cool, thanks all
[12:54:06] <toddmparker> not at all gseguin
[12:54:37] <toddmparker> gseguin: anything to note in the agenda for you
