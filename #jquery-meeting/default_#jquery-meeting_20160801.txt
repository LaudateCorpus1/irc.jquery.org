[08:01:15] <jzaefferer> hey flore77! Looks like no one else will join this week either
[08:01:34] <jzaefferer> We could move the meeting time to make it easier for others to join...
[08:01:50] <jzaefferer> Want to start with a summary of last week?
[08:02:19] <flore77> yes
[08:03:20] <flore77> I worked on finishing the assertions property
[08:03:33] <flore77> and also normalizing them
[08:03:58] <flore77> the pr got merged
[08:05:04] <flore77> I also started the conv on the tests emitting order issue
[08:05:05] <jzaefferer> got?
[08:06:06] <flore77> get?!
[08:06:14] <flore77> it was merged
[08:06:43] <jzaefferer> You merged it, right?
[08:06:43] <flore77> this what I was trying to say :)) sorry
[08:06:51] <flore77> yes
[08:07:27] <flore77> I have updated also js-reporters to work in an es3 env
[08:07:31] <jzaefferer> alright
[08:07:35] <flore77> for IE8
[08:07:48] <flore77> there is still need of polyfills like
[08:07:53] <flore77> babel-polyfill
[08:07:54] <jzaefferer> You also worked on updating "data", right? I still need to review the last commits
[08:08:00] <jzaefferer> and getters...
[08:08:02] <flore77> or es5-shim and es5-sham
[08:08:07] <flore77> yes
[08:08:15] <flore77> there are 2 pull-requests
[08:08:52] <flore77> I think I have fixed the getters in the Suite object really nice, without much overhead
[08:09:36] <flore77> I started also on editing the spec by adding the types
[08:10:19] <flore77> i am not sure about #27 the issue with adding examples to the readme
[08:10:27] <flore77> what kind of ex?
[08:10:30] <jzaefferer> I think its perfectly reasonable for projects that need to support IE8 to include a es5-shim. Globalize does the same thing
[08:11:00] <jzaefferer> I think the reporter you wrote for browserstack-runner is a good reference for a "usage" example
[08:12:54] <flore77> yes, indeed
[08:13:05] <flore77> I think that's all
[08:15:07] <jzaefferer> okay. I'm reviewing PRs today.
[08:15:28] <flore77> ok. I want this week to finish the standard and to make a new release
[08:15:58] <flore77> and to to make pr against broweserstack
[08:16:18] <flore77> I think we have quite the whole pieces now
[08:16:20] <jzaefferer> ok
[08:16:42] <jzaefferer> on https://flore7seven.wordpress.com/2016/07/16/first-blog-post/ the links are really hard to see. And as mentioned, a quick link list would be great
[08:16:45] <flore77> only I one I think is missing, but I am not sure, which would require a discussion
[08:16:55] <jzaefferer> what's that?
[08:17:03] <flore77> is passing custom data to reporters
[08:17:30] <flore77> I will explain this better on an issue on the repo
[08:17:59] <flore77> it's a thing that I come across last summer,when I was working to the visual lib thing
[08:18:37] <flore77> also you know, how small is the world, last summer when I was doing research, I cam across js-reporters :))
[08:19:08] <flore77> but is seemed some kind of dead and i didn't give so much intrests
[08:19:36] <flore77> I rembered this days while looking through some issue on Mocha-s repo
[08:19:49] <jzaefferer> okay :-)
[08:19:56] <jzaefferer> https://github.com/js-reporters/js-reporters/pull/81 can land
[08:20:18] <flore77> ok cool
[08:21:18] <flore77> I think that's all
[08:21:27] <flore77> if I finish with this stuff
[08:21:38] <flore77> we can start the integration into qunit and mocha
[08:21:41] <flore77> :)
[08:21:41] <jzaefferer> How about a getStatus() helper function in the private scope of the module, then in the constructor, calling `this.status = getStatus(this)`?
[08:21:58] <flore77> sounds good
[08:22:14] <jzaefferer> We could also notify the Jasmine team - there must be a link somewhere to the issue that James originally created
[08:22:29] <flore77> I will look into it
[08:22:32] <jzaefferer> Now that the project seems more alive
[08:23:06] <flore77> now it is, not seems :))
[08:23:50] <flore77> happy holiday!!
[08:24:05] <jzaefferer> Thanks
[08:24:22] <jzaefferer> I'll be on Telegram
[12:02:13] <timmywil> DaveMethvin, gibson042, m_gol, markelog https://docs.google.com/document/d/1uhcW9_TlSwD8JnO1_HNnSYJAriTK9WYZ8uQNDvtAAhA/edit
[12:02:18] <timmywil> greetings
[12:02:34] <DaveMethvin> heya
[12:02:40] <markelog> hey-hey
[12:02:44] <timmywil> Welcome to August
[12:02:56] <timmywil> it's hot
[12:02:58] <DaveMethvin> too hot
[12:03:03] <timmywil> heh
[12:03:40] <timmywil> gibson042 has a lovely PR for :en(dis)abled
[12:03:42] <timmywil> https://github.com/jquery/sizzle/pull/384
[12:04:05] <DaveMethvin> i will straighten out my pr for the ajax cache thing and submit one for the not(arraylike) by tonight
[12:04:22] <timmywil> nice
[12:04:30] <gibson042> I thought we had a volunteer for .not(arrayLike)
[12:04:39] <DaveMethvin> he kind of disappeared
[12:05:18] <DaveMethvin> gonna be so happy when node 0.1x are finally gone
[12:05:23] <DaveMethvin> end of year
[12:05:28] <timmywil> speaking of
[12:05:38] <timmywil> segue https://github.com/jquery/jquery/pull/3247
[12:05:55] <DaveMethvin> skipping eslint sounded like the easiest way out
[12:05:57] <timmywil> it no work in node 0.10/12
[12:06:25] <DaveMethvin> not sure if we have ppl submitting work who are stuck there
[12:06:28] <timmywil> oh yea, did we decide that?
[12:06:28] <gibson042> agreed; there's no need to use old engines for anything other than testing functionality
[12:06:29] <m_gol> present
[12:06:49] <DaveMethvin> well if we didn't decide before let's decide now :)
[12:06:59] <timmywil> we can skip, but the PR is currently trying to run a task that isn't there
[12:07:46] <m_gol> yes, that's a mistake
[12:07:51] <m_gol> it should be wrapped in runIfNewNode()
[12:07:59] <DaveMethvin> :)
[12:08:03] <m_gol> DaveMethvin: we did decide. ;)
[12:08:08] <timmywil> we did. I remember now
[12:08:22] <timmywil> ok, simple fix then
[12:08:58] <timmywil> thanks markelog
[12:09:08] <markelog> gibson042: yeah, we can even disable linting for all nodes except the last one
[12:09:34] <markelog> need to do one more simple change, which was pointed by m_gol and i think we can land it
[12:09:50] <DaveMethvin> i have a migrate question for everyone as well
[12:09:54] <DaveMethvin> in the agenda: Approach for deprecated APIs in 3.2? Just warn and let them pass through, or warn and fill (and run unit tests?)
[12:10:01] <timmywil> we can discuss that now
[12:10:10] <DaveMethvin> just looking for opinions
[12:10:25] <DaveMethvin> if theres gonna be a migrate 4 then we really don't need to fill them now
[12:10:29] <timmywil> which strategy are we closer to right now?
[12:10:32] <m_gol> I think warn & fill, then you won't have to change the code for 4.0
[12:10:44] <DaveMethvin> if i fill should i move over all the unit tests then?
[12:10:50] <DaveMethvin> and should they be removed from core?
[12:10:57] <DaveMethvin> or would they be in both until 4.0?
[12:11:04] <timmywil> probably both
[12:11:05] <m_gol> they can't be removed from core as long as the code is there
[12:11:09] <m_gol> so both IMO
[12:11:14] <timmywil> so we don't break it by accident
[12:11:14] <DaveMethvin> yeah it seemed that way
[12:11:23] <DaveMethvin> also in case we fix anything in those
[12:11:31] <DaveMethvin> just have to remember to fix in both places
[12:11:35] <gibson042> I don't think they should be paved over until Migrate 4
[12:11:37] <timmywil> well, but, if it's not removed, you don't need to fill
[12:11:46] <gibson042> well, specifically until removal
[12:11:51] <DaveMethvin> yeah that was my dilemma
[12:11:54] <timmywil> right
[12:12:02] <timmywil> yea, I think just the warning for those is fine
[12:12:04] <DaveMethvin> i would prefer not to fill and add unit tests with duplication
[12:12:05] <timmywil> until 4
[12:12:13] <timmywil> or until removal
[12:12:23] <timmywil> might not remove all in 4
[12:12:27] <DaveMethvin> right
[12:12:38] <m_gol> I guess adding unit tests is enough of a protection
[12:12:44] <DaveMethvin> i expect we'll leave all of migrate 3 stuff in place for 4
[12:13:15] <DaveMethvin> so upgrading could still be just 2 steps, use migrate 1.x and then 4.x
[12:13:23] <gibson042> no, I hope not
[12:13:33] <timmywil> it does take out a step
[12:13:33] <DaveMethvin> why not leave 3 stuff in place?
[12:13:45] <gibson042> because that's the problem we're trying to correct
[12:13:50] <timmywil> if you're migrating all the way from <1.12
[12:13:55] <timmywil> or <1.9
[12:14:01] <gibson042> what if a method changes in N and is deprecated in N+1?
[12:14:11] <gibson042> or changes more than once
[12:14:21] <DaveMethvin> well then we'd need to deal with it
[12:14:30] <gibson042> Migrate 4 has one job: restore functionality removed in jQuery 4
[12:14:50] <DaveMethvin> i'm just trying to prevent an obstacle course of multiple migrates, which is not friendly to people
[12:14:53] <timmywil> could migrate 3 and migrate 4 be included at the same time?
[12:14:57] <DaveMethvin> if there are conflicts then yeah we'd have to deal with them
[12:15:04] <gibson042> multiple migrates is exactly what I'd like to see for such cases
[12:15:27] <DaveMethvin> ugh, i dunno that sounds even more complicated
[12:15:31] <DaveMethvin> esp since 1.x won't stack
[12:15:32] <gibson042> so that it's always clear which older version is being emulated
[12:16:06] <timmywil> gibson042: I hear you, but if the conflicts you're concerned about don't exist, why not remove a step
[12:16:10] <DaveMethvin> this seems like a bigger can of worms than i planned to open up right now, but it sounds like for the 3.2 deprecations everyone is okay with just warn and not fill?
[12:16:17] <gibson042> they already existed with Migrate 1.x
[12:16:38] <timmywil> just talking about 3 + 4
[12:16:58] <timmywil> DaveMethvin: yea
[12:17:00] <DaveMethvin> i think 4 will consist of filling the stuff we previously just warned about?
[12:17:02] <gibson042> then we could produce a composite Migrate
[12:17:22] <timmywil> we can revisit 4 when we know exactly what we're filling
[12:17:23] <m_gol> Migrate has two jobs: restore functionality from the previous version AND warn against using deprecated stuff. Those are really separate goals
[12:17:24] <DaveMethvin> there will already be some sort of deprecation for those features, if we follow protocol
[12:17:47] <m_gol> in particular, you can have perfectly valid code generating no warnings with jQuery 3 and when you add Migrate 3 you see warnings
[12:18:21] <gibson042> ok; true
[12:18:23] <DaveMethvin> m_gol: you mean the new 3.2 deprecation warnings?
[12:18:33] <m_gol> yes, for example
[12:18:41] <m_gol> so most people may not know that sth is deprecated until they try to migrate to the next version
[12:18:48] <gibson042> Migrate adds both removed functionality AND warnings to deprecated-but-still-present functionality
[12:19:07] <DaveMethvin> yeah so 4.0 will add fills for whatever we deprecated in the 3.2 and decided to remove, but it will still have the warnings
[12:19:12] <m_gol> they may even add new uses of deprecated APIs since they don't know they're deprecated. And they won't add Migrate since they don't plan to upgrade to the next major just yet
[12:19:56] <gibson042> but it should do so by looking back only a single major version, so that we can stay sane
[12:20:04] <m_gol> That's why I'd love if Core printed warnings as well, not just Migrate. We're not discouraging people from using deprecated APIs enough IMO
[12:20:07] <gibson042> the nature of it is inherently stackable
[12:20:14] <timmywil> DaveMethvin: true, but we'll have to decide whether it still have warnings for, say, Promises/A+ .then.
[12:21:07] <DaveMethvin> yeah as 4.0 gets closer we can look at what we're removing and decide where to go I guess
[12:21:20] <markelog> m_gol: It might be better if browser would have some sort of API, beside `console.log`, for such warnings
[12:21:21] <gibson042> I'd like to take some time to look at Migrate, but it'll be after the next meeting
[12:21:21] <DaveMethvin> the problem with adding warnings in core is the extra size
[12:22:03] <m_gol> would it add that much?
[12:22:19] <timmywil> I agree that console.log is not the perfect mechanism.
[12:22:23] <markelog> not only that, it would reflect on performance too :/
[12:22:25] <DaveMethvin> depends on how many apis are deprecated and how good the messages are :)
[12:22:32] <gibson042> also, I think people expect the production builds at least to be quiet
[12:22:38] <markelog> console.log is veerry slow
[12:22:54] <DaveMethvin> i know some of the frameworks warn
[12:23:07] <markelog> i don't think no one is ever thought in improving it, since you need it only for debug stuff mostly
[12:23:12] <timmywil> yea, but not in production mode
[12:23:12] <DaveMethvin> i think react has an even-odd deprecation schedule and the odds warn
[12:23:16] <m_gol> console.log or console.warn would be invoked only once per API use so it shouldn't affect perf that much
[12:23:45] <DaveMethvin> the good part of putting in core would be that people see the message
[12:23:52] <markelog> a lot of overhead still for size
[12:23:54] <DaveMethvin> but that's also the bad part, so much griping
[12:24:04] <DaveMethvin> YOU MESSED UP MY CONSOLE!
[12:24:12] <DaveMethvin> YOU SAID MY CODE WAS BAD!
[12:24:23] <timmywil> yea, I'm not sure it's worth it
[12:24:30] <markelog> yeah, if i recall correctly things like react remove such things for production build
[12:24:33] <m_gol> browsers are doing it and they get away with it ;)
[12:24:50] <timmywil> the blog post used to be the only deprecation warning
[12:24:54] <DaveMethvin> ok, i summarized where we're going for now in the meeting notes but we can revisit later
[12:25:06] <timmywil> ok
[12:25:24] <timmywil> lol, someone (looks at markelog) brought up gitter again
[12:25:25] <DaveMethvin> oh, is everyone ok with the new wontfix wiki page?
[12:25:36] <markelog> of course that was me!
[12:25:38] <timmywil> DaveMethvin: looks good
[12:25:39] <markelog> :)
[12:25:43] <gibson042> our deprecations are pretty soft and easily worked around anyway
[12:25:57] <timmywil> gitter does seem to be pretty popular for other open source projects
[12:26:25] <timmywil> what was the solution to the meeting logs problem gain?
[12:26:25] <m_gol> DaveMethvin: is it copy-pasted from contribute or are there changes there?
[12:26:27] <timmywil> again
[12:26:46] <DaveMethvin> m_gol: i made some changes as well to clean it up and make the links better
[12:26:48] <markelog> if i recall correctly, previously we wanted to check out if archivation was an option for gitter, then 3.0 came, so we didn't have the time
[12:26:50] <DaveMethvin> also added newer tickets
[12:26:58] <markelog> it seems now we do
[12:26:59] <m_gol> DaveMethvin: ok, I'll have a look later
[12:27:05] <markelog> and gitter does have archive feature
[12:27:20] <DaveMethvin> it's a wiki so we can change as needed
[12:27:49] <markelog> it seems it is very popular, it seems gitter channels sometimes even more active then IRC one, even though we didn't even promote it
[12:28:08] <DaveMethvin> i'm okay with moving i suppose, really i only use irc for jquery stuff right now
[12:28:10] <markelog> but if try it/like it and put a badge on the readme page and stuff
[12:28:17] <DaveMethvin> and my irc client is flakey
[12:28:27] <m_gol> I also use IRC only for jQuery now :D
[12:28:31] <timmywil> DaveMethvin: me too. just jquery now.
[12:28:34] <markelog> yeah, me too :)
[12:28:36] <markelog> hah
[12:28:41] <m_gol> I mostly care so that we don't lose logging
[12:28:46] <timmywil> I've got slack, hipchat, gitter, and textual open. ugh.
[12:28:49] <m_gol> that we can keep on our servers, preferably
[12:28:50] <DaveMethvin> we would definitely want to update all our irc pointers, and yeah logging is super important
[12:28:58] <timmywil> textual = irc
[12:29:07] <gibson042> https://gitter.im/jquery/jquery/archives/2016/06/04
[12:29:16] <markelog> eslint team had similar concerns when they were setting up meetings, but yeah, it does have archivation
[12:29:16] <m_gol> timmywil: I have the same minus hipchat
[12:29:44] <DaveMethvin> we might want to make irc.jquery.com more generic about real-time communication forums :)
[12:29:49] <timmywil> which room would we meet in?
[12:30:03] <markelog> jquery/meeting :)
[12:30:09] <markelog> already set this thing up
[12:30:51] <m_gol> I hope we can get jquery/jquery-dev relatively quite, though
[12:31:05] <markelog> like 6 months ago
[12:31:06] <m_gol> people come here asking for help instead of #jquery from time to time
[12:31:25] <m_gol> Gitter is more popular so people may make this mistake more often. But maybe that's not such a big problem
[12:32:00] <markelog> yeah, the only way to know is to try it heh
[12:32:07] <m_gol> ;)
[12:32:08] <timmywil> yea, it seems like dev conversations traditionally happen in the repo channels, but we get a lot of support questions
[12:32:26] <m_gol> yeah, jquery/jquery may be more popular than other channels
[12:32:47] <m_gol> esp. amongst less experienced devs
[12:32:51] <DaveMethvin> i have to run in about 5 minutes, anything else that's critical?
[12:33:01] <timmywil> anyone opposed to having our next meeting in gitter?
[12:33:15] <timmywil> I will announce it in irc next week.
[12:33:16] <DaveMethvin> i'm good
[12:33:27] <m_gol> what about logs on our servers, though?
[12:33:44] <timmywil> I'm less concerned as long as there's an archive
[12:34:00] <DaveMethvin> could we just copy/paste that into the end of the agenda that timmywil commits each meeting?
[12:34:06] <timmywil> we can link to the archive
[12:34:27] <DaveMethvin> seems like we have several possible solutions, would be interesting to give it a try
[12:34:53] <m_gol> https://gitter.zendesk.com/hc/communities/public/questions/200884931-Export-chat-history
[12:35:03] <m_gol> external services disappear all the time
[12:35:12] <m_gol> We do depend on some of them, though. Like GitHub
[12:35:28] <m_gol> but it's a tradeoff with non-zero cost
[12:35:54] <timmywil> our servers can lose things too. I'd rather depend on third-party so we don't have to maintain it.
[12:36:10] <DaveMethvin> if we commit to the repo it's safe there as long as github is okay
[12:36:15] <timmywil> but if the export option comes up, I would definitely want to back up
[12:36:19] <DaveMethvin> and if github is down we should all pack it in
[12:36:36] <m_gol> DaveMethvin: if it's in the repo it's ok even if GitHub is down
[12:36:41] <m_gol> since we have multiple repo copies
[12:37:08] <timmywil> m_gol: are you saying you're opposed?
[12:37:14] <m_gol> timmywil: we'll have to maintain it until all other jQuery projects migrate away from IRC. But I guess you have to start somewhere.
[12:37:16] <m_gol> I'm not opposed.
[12:37:22] <m_gol> I'm just raising concerns :-)
[12:37:29] <markelog> imagine the world surprise if github went under :)
[12:37:32] <m_gol> I'm *moderately* enthusiastic
[12:37:40] <timmywil> cool, me too :)
[12:37:56] <m_gol> :)
[12:38:21] <markelog> okay, will send invites
[12:38:59] <gibson042> also, https://developer.gitter.im/docs/messages-resource#list-messages
[12:39:34] <timmywil> nice
[12:39:40] <markelog> there should be a tool somewhere which already works with that api
[12:39:48] <gibson042> several
[12:39:55] <markelog> cool :)
[12:40:19] <markelog> okay, invites are sent
[12:40:51] <timmywil> okay, thanks all. see you next week.
[12:40:55] <markelog> see ya!
