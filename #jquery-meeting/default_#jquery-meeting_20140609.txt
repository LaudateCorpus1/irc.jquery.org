[09:00:32] <DaveMethvin> meeting time!
[09:01:47] <m_gol> present
[09:01:53] <markelog> hey-hey
[09:02:25] <DaveMethvin> hey guys!
[09:02:43] <DaveMethvin> sorry i've been away so much lately, traveling and some other big stuff going on
[09:02:58] <DaveMethvin> but let's go ahead and get the 1.12/2.2 stuff rolling asap
[09:03:05] <DaveMethvin> to clear out the pull requests etc
[09:03:40] <DaveMethvin> just looking at the new tickets
[09:03:48] <m_gol> I'd like to have the globalEval markelog's patch merged asap so that we can see if it helps Android <2.3
[09:03:48] <DaveMethvin> http://bugs.jquery.com/query?status=new&report=505&order=priority
[09:03:51] <m_gol> * =2.3
[09:03:51] <markelog> i have four PRs - https://github.com/jquery/jquery/pulls/markelog
[09:04:04] <markelog> except for code style stuff they look ready
[09:04:48] <DaveMethvin> funny how i had never thought about data_priv before you mentioned it there
[09:04:56] <DaveMethvin> now it bugs me a LOT :)
[09:05:19] <m_gol> I was always surprised by that a little ;)
[09:05:29] <DaveMethvin> don't be shy about asking
[09:05:30] <m_gol> but perhaps I just thought they're kind of special ones :P
[09:05:32] <markelog> :-), consistency for the win
[09:05:51] <DaveMethvin> you guys pay better attention than me most of the time, never assume i know what i'm doing :)
[09:06:35] <DaveMethvin> so on new tickets, what do you guys think about http://bugs.jquery.com/ticket/15131
[09:06:54] <markelog> still loading for me
[09:07:04] <markelog> i think we should change our bug-tracker :)
[09:07:14] <DaveMethvin> i am not a fan of the magical conversion at all
[09:07:44] <DaveMethvin> and also, the success handler gets the converted content as an arg but the error does not
[09:08:00] <DaveMethvin> and of course, one of the errors can be that the content isnt' formatted right!
[09:08:09] <DaveMethvin> so bad JSON or XML
[09:09:09] <scott_gonzalez> The lack of parsing for non-success requests always bothered me.
[09:09:20] <m_gol> I've come across many REST APIs returning JSONs that return plain text on error
[09:09:26] <m_gol> but I guess that's the API problem
[09:09:39] <scott_gonzalez> Well, we should of course be looking at the headers.
[09:09:50] <scott_gonzalez> My suggestion for $.xhr() was that it's always based on headers.
[09:10:11] <DaveMethvin> for $.xhr it shouldn't do anything magical at all, unless explicitly asked IMO
[09:10:29] <DaveMethvin> "intelligent guess" is an oxymoron
[09:10:51] <markelog> )
[09:11:02] <scott_gonzalez> There should be no guessing in $.xhr().
[09:11:15] <DaveMethvin> right, the caller says what they want
[09:11:23] <DaveMethvin> including some interpretation based on the content type
[09:12:25] <DaveMethvin> the question here is whether $.ajax can have its behavior changed and if so what the impact would be
[09:14:00] <gibson042> keep in mind that we do may to change _some_ things with a major release
[09:14:22] <DaveMethvin> sure, and if this is something on the fringes then even more
[09:14:44] <scott_gonzalez> I don't think $.ajax() should change.
[09:15:01] <scott_gonzalez> It's possible to use as is.
[09:15:10] <DaveMethvin> i can imagine situations with badly configured servers that would break if we try decoding stuff
[09:15:27] <DaveMethvin> and we could argue that the servers are badly configured but we'll still break stuff
[09:15:44] <m_gol> yeah, I think it's pretty common
[09:15:44] <DaveMethvin> i'd prefer to make a new api to handle things much more simply
[09:15:48] <scott_gonzalez> Well, I think that's a perfectly fine stance to take with $.xhr().
[09:16:07] <scott_gonzalez> But we shouldn't change the behavior of $.ajax() at this point.
[09:16:23] <DaveMethvin> yeah, especially to make it more complex, which I feel like this is doing
[09:16:27] <scott_gonzalez> I feel like $.ajax() should be locked down by now.
[09:17:38] <gibson042> I think I agree
[09:17:50] <gibson042> some warts are too big to cleanly remove
[09:18:46] <DaveMethvin> done
[09:19:26] <m_gol> so, as for the QUnit thingy
[09:19:39] <m_gol> DaveMethvin, did you see our resolution from last meeting is impossible? ;)
[09:19:47] <m_gol> at least partially impossible
[09:19:53] <DaveMethvin> right, partially
[09:20:16] <DaveMethvin> i would still prefer to qualify just a few things than every thing
[09:20:21] <m_gol> sure
[09:20:34] <m_gol> the diff may be 1/3 current size
[09:20:58] <m_gol> it'll be still big but, well, the API changed and the change is justified so we need to adjust
[09:21:45] <DaveMethvin> yeah it just seems a shame to clutter the unit tests like that
[09:22:04] <DaveMethvin> i totally understand why it's sensical for QUnit
[09:23:09] <DaveMethvin> everybody ok with the partial solution in the notes?
[09:23:46] <DaveMethvin> was leobalter working on a new one?
[09:25:04] <m_gol> yep, he commented on the PR he's into it
[09:25:20] <DaveMethvin> ok we'll wait
[09:25:27] <DaveMethvin> it's pretty much independent so no problem
[09:25:33] <DaveMethvin> https://github.com/jquery/sizzle/pull/263
[09:25:53] <DaveMethvin> gibson042 timmywil do you really want to support FF 3.6?
[09:25:57] <m_gol> I wish Opera 12.16 started working but well...
[09:26:28] <markelog> looks like browserstack people didn't finish with it (
[09:26:32] <m_gol> DaveMethvin: Sizzle wiki currently states support for 3.0+ ;)
[09:26:47] <m_gol> but it doesn't pass the tests so I bumped it to 3.6 that does
[09:26:50] <DaveMethvin> what's easier, testing old stuff or editing a wiki? :)
[09:26:53] <m_gol> if this get merged, I'll update the wiki
[09:27:28] <m_gol> well, we don't need those ancient versions in jQuery obviously ;)
[09:27:29] <gibson042> I have a hard time letting go :)
[09:27:44] <m_gol> but 3.6 works so far
[09:27:50] <m_gol> and note it wasn't really tested
[09:27:57] <m_gol> until this PR
[09:27:59] <gibson042> Sizzle: It Works Foreverâ„¢
[09:28:02] <DaveMethvin> we discussed a sizzle 2.0 that dropped old browsers but i think i remember gibson042 saying it might not shrink that much
[09:28:19] <DaveMethvin> is it worth it?
[09:28:44] <gibson042> I still maintain that it isn't, because we have to implement all CSS selectors anyway
[09:29:09] <gibson042> so they work with custom selectors
[09:29:29] <DaveMethvin> right, and if we have to drop that we're down to the qSA stub in jQuery
[09:29:41] <m_gol> I don't like the qSA stub TBH
[09:29:45] <DaveMethvin> well except for the list of 20 strange behaviors :)
[09:29:49] <m_gol> I find its scoping behavior to be unusable
[09:29:55] <DaveMethvin> yeah it's mainly to shut people up
[09:30:02] <m_gol> that's what I thought :P
[09:30:06] <DaveMethvin> i doubt most people can stand its behavior
[09:30:21] <DaveMethvin> but its existence proves a point
[09:30:28] <m_gol> sure, I can get it
[09:30:41] <DaveMethvin> it's not about functional code, it's about sending a message :P
[09:30:58] <m_gol> I still wonder, though, how smaller a stripped-down Sizzle version would be if it dropped custom selectors and deferred to qSA as much as possible but fixed the scoping behavior
[09:31:15] <m_gol> selector-almost-native (TM)
[09:32:06] <DaveMethvin> btw that scoping behavior comes at a high cost because adding the id temporarily can force layouts in some situations
[09:32:16] <m_gol> there was a PR to Angular to its jqLite to switch its .find to use qSA instead of getElementsByTagName but I made everyone aware it's not going to be so easy :P
[09:32:21] <m_gol> sure
[09:32:37] <m_gol> but Sizzle does it so it's a high cost over pure qSA but not over Sizzle
[09:33:02] <DaveMethvin> yeah, trying to use qSA for .find would mean it's just easier to use jQuery ...
[09:33:29] <m_gol> I just wanted so that pure Angular doesn't return different nodes on .find than if used with jQuery
[09:33:29] <DaveMethvin> okay, what else is critical here
[09:33:44] <m_gol> I'd rather it just throw since it gets a selector & not a tag name rather than diverge in weird ways
[09:33:44] <DaveMethvin> these envs are really bugging me http://bugs.jquery.com/ticket/15127
[09:33:51] <m_gol> one more thing
[09:33:53] <DaveMethvin> chrome/ff plugins, win8 apps, etc
[09:33:54] <m_gol> as for my PR
[09:33:59] <DaveMethvin> yeah
[09:34:07] <m_gol> should we test Safari 6.1? :P
[09:34:30] <m_gol> markelog feels strongly about it & I don't see a point (it shares WebKit version with 7.0)
[09:34:36] <m_gol> so sb else has to decide :P
[09:34:51] <DaveMethvin> what's the installed base of 6.1?
[09:35:00] <gibson042> http://www.random.org/
[09:35:07] <DaveMethvin> if it's significant i'd do it just in case there are diffs we don't know about
[09:35:23] <m_gol> people on OS X 10.8 that didn't update to 10.9 but updated Safari
[09:35:28] <markelog> m_gol: i don't even have talk, you even argue my argument without me :-)
[09:35:34] <m_gol> ;P
[09:35:47] <DaveMethvin> fair and balanced, that m_gol :)
[09:35:56] <m_gol> ok, I'll add it back then
[09:36:13] <m_gol> I guess 20 browsers or 21 browsers doesn't make much testing time difference ;)
[09:36:23] <DaveMethvin> too long or WAY too long
[09:36:29] <m_gol> any remarks to this PR btw? is it ok to land after adding S6.1 back?
[09:36:34] <markelog> newer no, old one Yes
[09:36:39] <DaveMethvin> good for me
[09:36:47] <markelog> sure
[09:36:51] <m_gol> k
[09:37:04] <m_gol> I plan to write the generator for the launcher list
[09:37:09] <m_gol> with an updater script
[09:37:11] <m_gol> once I find time
[09:37:11] <DaveMethvin> imma land my comment one soon before it gets all stale, just need to update for mikesherov's comments
[09:37:14] <markelog> but it would be nicer if we would not update them that much
[09:37:28] <m_gol> but I still think we should then commit the generated list
[09:37:31] <markelog> those generated version module would be cool
[09:37:39] <m_gol> so that we can test past commits on browsers we used to test back then
[09:38:10] <m_gol> e.g. in case we have to release a security patch release
[09:38:23] <markelog> mine PRs? Go? No go?
[09:38:34] <DaveMethvin> yes for yours as well markelog
[09:38:41] <markelog> cool
[09:38:58] <markelog> will do that tomorrow
[09:39:18] <DaveMethvin> thoughts on how to deal with these envs like chrome apps? http://bugs.jquery.com/ticket/15127
[09:39:23] <m_gol> markelog: especially https://github.com/jquery/jquery/pull/1449 ;)
[09:39:33] <DaveMethvin> we have browser testing done well now but these envs are killing us
[09:39:33] <markelog> )
[09:39:41] <DaveMethvin> as well as XHTML
[09:39:57] <DaveMethvin> we don't have any test coverage at all there, not even a sanity check
[09:40:16] <DaveMethvin> and a sanity check would have found several, including http://bugs.jquery.com/ticket/15127 and the ones with win8
[09:40:20] <timmywil> ohai
[09:40:23] <DaveMethvin> but then we need to have those envs around
[09:40:33] <DaveMethvin> somehow
[09:40:34] <m_gol> the only sanity checks we could currently do is to mock some core methods that throw in these envs
[09:40:36] <DaveMethvin> hey timmywil
[09:40:42] <m_gol> but that won't solve everything
[09:40:58] <gibson042> I agree with m_gol
[09:41:11] <DaveMethvin> maybe chrome could just warn and not throw on unload :)
[09:41:23] <m_gol> unless the companies get their shit together and make testing sandboxes available ;)
[09:41:31] <DaveMethvin> that would be ideal,  yes
[09:41:32] <m_gol> yes, that's a good point
[09:41:41] <m_gol> we should report a bug to them
[09:41:54] <m_gol> maybe it'll resolve itself before we release anything
[09:42:01] <DaveMethvin> maybe paul_irish could help us talk with the chrome apps folks about http://bugs.jquery.com/ticket/15127
[09:42:39] <DaveMethvin> i guess a warning wouldn't be ideal, b/c the user's console would get it most likely
[09:42:45] <m_gol> btw, this mocking could be costful
[09:43:04] <m_gol> we'd need to run all the tests once more on once browsers with some mocked natives
[09:43:07] <DaveMethvin> certainly complicates our test env
[09:43:23] <m_gol> IE for win apps & Chrome for Chrome apps
[09:43:32] <m_gol> so fortunately it won't double
[09:43:38] <m_gol> but still more burden on us
[09:43:43] <m_gol> & won't solve everything
[09:44:33] <m_gol> * mock some core methods -> mock some native methods
[09:44:49] <DaveMethvin> i would settle for a sanity check every week but there would seem to be a large amount of work, custom to each env
[09:45:09] <timmywil> BTW, I'm primed to reintroduce this for 1.12/2.2 https://github.com/jquery/jquery/commit/372e04e78e81cc8eb868c5fc97f271a695569aa5 Speak now or forever hold your grousing that you couldn't speak now. ;)
[09:45:15] <DaveMethvin> we need to push this off to Google, Microsoft, Mozilla, etc :)
[09:45:46] <DaveMethvin> timmywil: lemme look
[09:45:48] <m_gol> (markelog: please take https://github.com/jquery/jquery/pull/1578#discussion_r13206853 into account before merging)
[09:46:11] <markelog> m_gol: okey
[09:46:34] <DaveMethvin> timmywil: was there a bug reported regarding that? Not sure how i would have found it otherwise
[09:46:39] <timmywil> http://bugs.jquery.com/ticket/10406 http://bugs.jquery.com/ticket/13132
[09:48:27] <DaveMethvin> hey as long as it passes a good set of unit tests .... :)
[09:49:55] <DaveMethvin> anybody know what's going on with http://bugs.jquery.com/ticket/15097
[09:50:03] <m_gol> DaveMethvin: "FF 3.6 seems to almost kinda work" why almost?
[09:50:19] <DaveMethvin> oh i thought you said there were some probls
[09:50:26] <DaveMethvin> must have misread
[09:51:10] <m_gol> problems were with 3.0 & that's why I dumped it ;)
[09:51:33] <DaveMethvin> ahok
[09:51:35] <m_gol> 3.6 is last non-rolling-release so if it works...
[09:51:40] <m_gol> ko
[09:51:42] <m_gol> * ok
[09:52:00] <m_gol> as for animation - isn't it just that IE & Fx treat animation purely as a shorthand so gCS doesn't work on it?
[09:53:03] <DaveMethvin> i was thinking it might be something like that
[09:53:14] <DaveMethvin> just playing in the debugger to see what they show
[09:54:05] <DaveMethvin> the order in the example is not right, the unprefixed `animation` should come last I think?
[09:54:20] <DaveMethvin> at least the IE debugger shows it ignoring the `animation` one and using the `-ms-animation`
[09:54:35] <m_gol> yes, the order is wrong
[09:54:38] <m_gol> but that's not the issue here
[09:54:57] <DaveMethvin> in many/most cases you can get props, you just can't set them with shortcuts
[09:55:05] <DaveMethvin> so that's why this one surprised me
[09:55:51] <DaveMethvin> alright before we run out of time, any important issues to discuss?
[09:56:09] <DaveMethvin> we should have a lot of these cleaned up by the end of the week
[09:56:14] <DaveMethvin> which will be nice
[09:56:53] <DaveMethvin> ok then, let's call it a meeting! thanks everyone
