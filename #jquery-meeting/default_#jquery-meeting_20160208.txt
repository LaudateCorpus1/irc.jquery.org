[12:09:13] <DaveMethvin> hey
[12:09:24] <markelog> okay, cool
[12:09:48] <DaveMethvin> lemme find the notes
[12:10:01] <DaveMethvin> https://docs.google.com/document/d/1uhcW9_TlSwD8JnO1_HNnSYJAriTK9WYZ8uQNDvtAAhA/edit
[12:10:15] <markelog> gibson042 m_gol DaveMethvin do we have something pressing to discuss?
[12:10:31] <DaveMethvin> i could use some reviews on Migrate PRs
[12:10:37] <DaveMethvin> gibson042 did one
[12:10:54] <gibson042> I still owe you a Migrate PR as well
[12:11:09] <markelog> i can check some of them
[12:11:54] <markelog> i owe one pr about show/hide, which should come to light in couple hours
[12:12:10] <DaveMethvin> i still need to do the perf on those event PRs
[12:12:52] <markelog> it seems we were good on /issues this week
[12:13:19] <markelog> not a lot of stuff to triage
[12:13:36] <DaveMethvin> " Standardize custom pseudo" gibson042 it says to do a warning in Migrate ... can you make a ticket with specifics?
[12:14:22] <DaveMethvin> i guess references other than through "pseudos" would give a warning?
[12:14:30] <gibson042> yeah, I'll create it now
[12:15:14] <markelog> we would need to release 1.12.1/2.2.1 soon too
[12:15:42] <markelog> seems only one ticket stands in the way - https://github.com/jquery/jquery/issues/2828
[12:16:00] <m_gol> yeah, about that one
[12:16:16] <m_gol> some issues are IE-only but some affect Chrome & Firefox as well
[12:16:20] <m_gol> is this still the same one?
[12:16:37] <markelog> https://github.com/jquery/jquery/issues/2828 not only about ie?
[12:17:29] <m_gol> https://github.com/jquery/jquery/issues/2836 is marked as a duplicate of that one and it affects Chrome+Fx as well
[12:18:12] <DaveMethvin> i had worries about it originally because i'm not sure the interpretation is correct...but i don't know enough about it to say for sure
[12:18:15] <DaveMethvin> https://github.com/jquery/jquery/pull/1714
[12:18:24] <DaveMethvin> that's the change
[12:18:58] <DaveMethvin> i wonder if we are using the correct offsetParent?
[12:19:16] <markelog> we can just revert and tackle it in the 3.x
[12:19:54] <markelog> since 2.x was meant for fast release
[12:20:53] <DaveMethvin> yeah, revert seems like the best path, if it was truly broken before we would have had more reports
[12:21:37] <markelog> so it seems, we will re-open we would need to re-open https://github.com/jquery/jquery/issues/1708 and revert https://github.com/jquery/jquery/pull/1714 then release 2.x
[12:21:41] <m_gol> makes sense; the previous code lived for a loooong time and we haven't had lots of reports
[12:21:59] <m_gol> so even if we wanted to change sth here, it seems safer to do it in 3.0.0
[12:22:09] <markelog> yeah
[12:22:09] <markelog> gibson042: sound good?
[12:22:14] <m_gol> although, technically, now we'll break 2.2.0 in 2.2.1 this way but still
[12:22:24] <gibson042> I'm in favor
[12:22:35] <gibson042> the code clearly doesn't work as intended
[12:22:40] <DaveMethvin> https://github.com/jquery/jquery/issues/1708 seemed like a pretty edgy case
[12:22:45] <m_gol> hopefully 2.2.0 hasn't lived long enough so that people start depending in issue 1708 getting fixed
[12:23:19] <DaveMethvin> breaking UI is more of a problem :)
[12:23:23] <markelog> okay, i will re-open and revert
[12:23:25] <m_gol> so, revert but don't close the bug as we still need to figure out what to do in 3.0
[12:23:30] <gibson042> right
[12:23:36] <markelog> it is closed already )
[12:23:42] <m_gol> not this one
[12:23:42] <markelog> so we would need to re-open it
[12:24:06] <m_gol> I meant that 2828 will still be broken on 3.0
[12:24:12] <m_gol> unless you want to revert on all 3 branches?
[12:24:25] <markelog> yeah
[12:24:27] <DaveMethvin> well we can  hope to fix it before 3.0 final goes out
[12:24:32] <markelog> and re-open https://github.com/jquery/jquery/pull/1714
[12:24:38] <markelog> oh, not https://github.com/jquery/jquery/pull/1714
[12:24:43] <markelog> https://github.com/jquery/jquery/issues/1708
[12:24:44] <markelog> this one
[12:24:49] <m_gol> ok, makes sense, we may need to try to fix it in another way anyway
[12:25:00] <markelog> yeah, that is my thought too
[12:25:04] <m_gol> so let's no longer pretend we've fixed 1708 ;)
[12:25:13] <markelog> yep-yep
[12:26:16] <m_gol> so, there's this SVGElement#offsetParent issue
[12:26:34] <markelog> i guess it is pretty clear that we can't do anything about it?
[12:26:42] <markelog> https://github.com/jquery/jquery/issues/2895
[12:26:45] <m_gol> which technically shouldn't matter a lot to us since: 1) it's SVG, 2) Firefox never had it anyway
[12:26:58] <DaveMethvin> i wonder how much noise that will make on consoles, generating bug reports
[12:27:07] <markelog> m_gol: ie didn't too
[12:27:09] <m_gol> but since all offset* APIs are considered legacy now, we should get someone to present use cases for this API
[12:27:33] <markelog> we can table that discussion by opening a ticket for it?
[12:27:38] <m_gol> UI uses offsetParent AFAIK, maybe scott_gonzalez could chime in in this issue so that it doesn't get lost
[12:27:51] <DaveMethvin> yes, a ticket seems like a good place to discuss
[12:28:00] <m_gol> there's already https://github.com/jquery/jquery/issues/2895
[12:28:05] <markelog> yeah, scott_gonzalez and DaveMethvin could help a lot here i think )
[12:28:23] <markelog> in any case we would need a champion for that new api
[12:28:43] <DaveMethvin> let's discuss in 2895 then, i meant to go back and read the end
[12:29:07] <DaveMethvin> also wanted to see if we used those apis if a user clicked and we bubbled an event through SVG
[12:29:28] <DaveMethvin> did anyone have a problem with closing https://github.com/jquery/jquery/issues/2908 ?
[12:29:41] <markelog> yeah but https://github.com/jquery/jquery/issues/2895 has a different subject i think and already pretty clattered
[12:29:50] <markelog> so i would propose to open a different ticket
[12:30:09] <markelog> and brainstorm there
[12:30:11] <m_gol> idk, the issue is specifically about offsetParent
[12:30:23] <markelog> exactly
[12:30:26] <gibson042> I'm ok with closing #2908; we can always reopen if needed
[12:30:31] <DaveMethvin> let's wrap up discussion in 2895 if needed and create a new ticket but we need solid cases showing it is something we need to take action
[12:30:34] <markelog> and only about svg
[12:30:53] <DaveMethvin> that's why i wondered about other use cases like events
[12:31:03] <m_gol> we can generalize, we don't really care about the SVG part specifically, just about the fact that the whole API is deprecated
[12:31:06] <DaveMethvin> we do kind of handle events inside svg
[12:31:14] <gibson042> I only see use of offsetParent for .position()
[12:31:15] <m_gol> we might create a new ticket but then the SVG one seems unnecessary
[12:31:18] <markelog> DaveMethvin: i think it is pretty clear offset* props do not consider new specs, so we either need a new API or use the current ones
[12:31:30] <gibson042> event bubbling just walks up the DOM
[12:31:36] <markelog> "try to" that is
[12:31:37] <DaveMethvin> yeah, by design the offset* can't become modernized
[12:31:53] <markelog> yeah :/
[12:32:32] <DaveMethvin> gibson042: right but we calculate mouse position for example
[12:32:34] <markelog> so besides offsetParent there is a offsetWidth for example, which we also use
[12:32:38] <m_gol> yes, that's specifically it - we need to get a couple of use cases for offsetParent that would make the standards people spec a replacement API for offsetParent
[12:32:55] <DaveMethvin> were these deprecated too? https://github.com/jquery/jquery/blob/master/src/event.js#L427
[12:32:56] <m_gol> markelog: right, we should stop :)
[12:33:09] <gibson042> honestly, our use of offsetParent is just an optimization
[12:33:26] <m_gol> we use it in one place only AFAIK? The css module now uses getBoundingClientRect
[12:33:27] <markelog> gibson042: a very good one!
[12:33:47] <gibson042> see https://github.com/jquery/jquery/blob/29370190605ed5ddf5d0371c6ad886a4a4b5e0f9/src/offset.js#L175-L177
[12:34:09] <gibson042> `parentNode` would work just as well
[12:34:13] <markelog> otherwise we would need to walk the dom tree ourselves
[12:34:23] <markelog> which would cost a lot
[12:34:28] <m_gol> DaveMethvin: clientX? or what are you asking about?
[12:34:29] <gibson042> maybe
[12:34:52] <markelog> and again, there is also offset* props that are deprecated with the offsetParent, which we use
[12:34:55] <gibson042> if the browsers are doing the same thing internally, then /shrug
[12:35:05] <gibson042> right
[12:35:09] <gibson042> _those_ matter
[12:35:37] <DaveMethvin> m_gol: nevermind, i think those are fine
[12:35:49] <markelog> okay, so i think i can open that ticket and DaveMethvin could wrap out the discussion on the svg ticket?
[12:35:59] <m_gol> +1
[12:36:04] <DaveMethvin> sounds good
[12:36:10] <markelog> cool-cool
[12:36:35] <DaveMethvin> actually markelog just reference #2895 in the new ticket
[12:36:59] <markelog> ok-ok
[12:37:43] <markelog> is there anything else?
[12:38:01] <m_gol> markelog: and another ticket for dimension?
[12:38:26] <DaveMethvin> anything else we need to talk about?
[12:38:34] <m_gol> one thing
[12:38:40] <markelog> i was thinking that would be about all instances of the offset* use
[12:38:58] <DaveMethvin> whichever ones are left, sure
[12:39:10] <m_gol> https://github.com/jquery/jquery/blob/9cb89bf91d034ec7166d9215e2f80fa765292975/src/css/hiddenVisibleSelectors.js#L10
[12:39:17] <gibson042> that one's safe too
[12:39:23] <gibson042> again, just an optimization
[12:39:45] <m_gol> checking offsetWidth is faster than getClientRects()? That's the only reason?
[12:39:58] <gibson042> correct
[12:40:07] <m_gol> it'd be good to have that in a comment :-)
[12:40:19] <DaveMethvin> not if we delete it! :)
[12:40:27] <m_gol> haha
[12:41:12] <DaveMethvin> oh and back to https://github.com/jquery/jquery/issues/2908 we don't want to tackle unhandledRejection right?
[12:42:10] <m_gol> they reploed
[12:42:12] <m_gol> * replied
[12:42:32] <gibson042> I didn't look at the Bluebird implementation, but domenic's ECMAScript unhandledrejection fires *again* when rejections are subsequently handled
[12:43:03] <DaveMethvin> lovely
[12:43:09] <gibson042> it has too
[12:43:23] <m_gol> I agree having a hook by which people could implement the Bluebird-like delayed warning for rejections unhandled before the next event loop would be good... but might not be the easiest one to add currently
[12:43:30] <gibson042> that's the problem with firing events instead of just keeping a list, IMO
[12:44:09] <DaveMethvin> if someone wants an implementation they think is better, they still have the ability to do that already
[12:44:36] <DaveMethvin> i proposed this hook just to make it possible for people to debug their code
[12:44:51] <DaveMethvin> so it wasn't supposed to deal with unhandled rejections
[12:45:05] <m_gol> DaveMethvin: how can they do that?
[12:45:15] <DaveMethvin> debug their code?
[12:45:16] <gibson042> ah, Bluebird does it like the spec: http://bluebirdjs.com/docs/api/error-management-configuration.html#global-rejection-events
[12:46:28] <m_gol> yeah but theu *also* have the delayed warnings for unhandled rejections
[12:46:37] <gibson042> exactly
[12:47:28] <DaveMethvin> once you put all the plumbing in place it's not hard to implement :)
[12:47:52] <DaveMethvin> by the time we do that we've implented Bluebird+Deferred
[12:48:53] <gibson042> it may work out, but I'm really skeptical
[12:49:26] <gibson042> at the very least, I'd like to keep it out of 3.0
[12:49:35] <DaveMethvin> watch the issues for Bluebird, i don't want to deal with those kinds of problems in jQuery
[12:49:35] <m_gol> yeah
[12:49:38] <gibson042> there's always 3.1 if demand is sufficient
[12:50:09] <gibson042> did I mention how much I hate the Promises/A+ API?
[12:50:24] <DaveMethvin> but we're missing the point of promises!
[12:50:26] <DaveMethvin> :)
[12:50:29] <markelog> ))
[12:50:59] <gibson042> I know, right? what's wrong with global events to re-reveal the exceptions we swallowed?
[12:51:05] <DaveMethvin> lol
[12:51:18] <DaveMethvin> nothing could go wrong
[12:51:28] <DaveMethvin> wrap everything in a try/catch
[12:51:32] <m_gol> wow, Bluebird supports IE7+, I'm amazed
[12:51:35] <gibson042> see, the error goes in the blue portal and comes out the orange one a little later
[12:52:06] <DaveMethvin> bluebird is 52kb minified
[12:52:10] <gibson042> you're just not thinking fourth-dimensionally!
[12:52:47] <DaveMethvin> if someone thinks native or bluebird is better they can Promise.resolve($.ajax(...))
[12:54:45] <DaveMethvin> for now at least I'd like to reply and close that ticket, I don't think we're planning to implement Bluebird inside jQuery and we can always reopen if we want to
[12:55:27] <m_gol> to be fair, Bluebird is 52KB because it implements way more than just the ES6 Promise spec; they have lots of extensions
[12:55:29] <m_gol> but yeah
[12:55:41] <DaveMethvin> right, all kinds of joining and sequencing stuff
[12:55:56] <DaveMethvin> but if you want to go full throttle on promises you'll need that
[12:55:56] <markelog> those aren't that big or hard to implement though
[12:56:05] <DaveMethvin> and occasionally people will ask us for it
[12:56:15] <DaveMethvin> which again seems like a bloaty path to follow
[12:56:56] <gibson042> yeah, I think we want the minimum useful... which unfortunately is more than the absolute minimum because of the necessary hooks
[12:57:17] <gibson042> but still... if it doesn't need to be in jQuery, then it shouldn't be there
[12:57:40] <markelog> we need promises for the specific features - ajax & animation
[12:57:53] <markelog> that is why promises are part of jquery in the first place
[12:58:00] <DaveMethvin> right
[12:58:06] <DaveMethvin> and we need the non-standard parts too
[12:58:07] <markelog> anything else is not our domain
[12:58:14] <DaveMethvin> which complicates things as well
[12:58:24] <markelog> yeah
[12:58:30] <DaveMethvin> being able to resolve sync has its use cases
[12:58:46] <DaveMethvin> ok any other issues?
[12:58:52] <m_gol> none from em
[12:58:52] <markelog> none from me
[12:58:53] <m_gol> * me
[12:58:58] <m_gol> :)
[12:58:58] <markelog> high five!
[12:59:03] <markelog> )
[12:59:08] <DaveMethvin> k see you guys later!
[12:59:14] <markelog> see ya
