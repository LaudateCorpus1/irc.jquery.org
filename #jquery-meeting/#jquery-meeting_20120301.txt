[09:02:53] <DaveMethvin> jzaefferer: do we have a qunit meeting?
[09:03:05] <jzaefferer> hells yes!
[09:03:14] <jzaefferer> thanks Dave for noticing the time
[09:03:22] <DaveMethvin> my calendar does that for me :P
[09:03:36] <jzaefferer> scott_gonzalez: over here!
[09:03:41] <scott_gonzalez> ok :-)
[09:03:49] <johnbender> jzaefferer: I'm here!
[09:04:20] <jzaefferer> this is the awesome agenda: https://github.com/jquery/qunit/issues
[09:04:38] <johnbender> yar
[09:04:58] <jzaefferer> though the focus should be on those feature tickets - generally I want to get input from users of QUnit about what should get improved
[09:04:59] <scott_gonzalez> Are we just going from top down?
[09:05:20] <jzaefferer> johnbender had put together some tickets, but then failed to follow up on them, so I still don't know what to make of them
[09:05:32] <johnbender> sorry
[09:05:37] <jzaefferer> scott_gonzalez: yeah, let's do that
[09:05:40] <johnbender> my github inbox is gdamn nightmare
[09:05:54] <jzaefferer> Let's start with module.exports fun: https://github.com/jquery/qunit/issues/201
[09:05:54] <socialhapy> ★ Issue #201 on qunit, reported by jdalton (3d, 10h ago): 1.3.0 breaks in Narwhal JS
[09:06:31] <jzaefferer> He's referring to this change: https://github.com/jquery/qunit/commit/7abb1e4f7efdcab8841b5636f09214aeafca4589
[09:06:32] <socialhapy> ★ Commit on qunit by jzaefferer (2w, 1d ago): Fix CommonJS export by assigning QUnit to module.exports.
[09:06:50] <jzaefferer> which makes QUnit much more usable from node.js, but then apparently less so for narwhal/ringo
[09:06:57] <DaveMethvin> ugh
[09:07:07] <DaveMethvin> why can't those guys standardize?? :D
[09:07:30] <scott_gonzalez> Better question: Why don't they just use node?
[09:07:32] <scott_gonzalez> :-)
[09:07:38] <jzaefferer> no idea
[09:07:52] <jzaefferer> maybe we can just do extend(exports, QUnit); instead of assignung modules.export
[09:08:05] <jzaefferer> nevermind, I'll defer it back to them
[09:08:09] <scott_gonzalez> Does Narwhal have module.setExport() or whatever it s.
[09:08:38] <jzaefferer> dunno
[09:08:41] <DaveMethvin> yeah make them give you a solution or just do it like node.js
[09:08:55] <jzaefferer> kind of related: https://github.com/jquery/qunit/issues/190
[09:08:55] <socialhapy> ★ Issue #190 on qunit, reported by jzaefferer (1m, 2w ago): Deprecate `module`, rename to `suite`
[09:09:14] <DaveMethvin> i'm good with that
[09:09:16] <jzaefferer> again, silly commonjs naming
[09:09:40] <jzaefferer> ""Suite" may be a bit ambiguous since QUnit https://github.com/jquery/qunit#readmehttps://github.com/jquery/qunit#readme as "a powerful, easy-to-use, JavaScript test suite". I don't know of a good alternative, nor whether this really matters, but I think it's worth noting." not a big deal, we can just change the description
[09:09:49] <jzaefferer> any reason not to use "suite"?
[09:09:52] <scott_gonzalez> module is coming in ES6, right?
[09:10:11] <DaveMethvin> if suite is taken, i suggest `hunk` or `lump`
[09:10:18] <jzaefferer> ping rworth rwaldron ben_alman
[09:10:28] <DaveMethvin> speaking of hunks, lol
[09:10:31] <rwaldron> hey jzaefferer
[09:10:34] <scott_gonzalez> I usually think of many modules as a suite
[09:11:04] <DaveMethvin> suite seems unlikely to conflict with existing names so it sounds good to me
[09:11:05] <jzaefferer> scott_gonzalez: any suggestions?
[09:11:38] <rwaldron> scott_gonzalez, suite is cool, but how about even more generic: "group"
[09:12:03] <scott_gonzalez> a group of suites?
[09:12:11] <rwaldron> a group of tests
[09:12:11] <jzaefferer> or suite of groups?
[09:12:19] <jzaefferer> a suite of groups of tests
[09:12:20] <jzaefferer> ?
[09:12:23] <DaveMethvin> flock, gaggle, herd
[09:12:24] * scott_gonzalez looks at subsuite runner
[09:12:26] <rwaldron> i was sort of replying to the ticket
[09:12:35] <rwaldron> i might have some context mixed up
[09:12:36] <rwaldron> sorry
[09:12:48] <johnbender> suite will otherwise get used twice as a collection of test pages and as a collection of modules
[09:12:52] <johnbender> don't know if that matters though
[09:13:13] <scott_gonzalez> we have QUnit.testSuites() in UI
[09:13:43] <DaveMethvin> batch?
[09:13:44] <scott_gonzalez> where test suite refers to a set of modules
[09:13:54] <rwaldron> suite seems like a bigger picture, so i guess... suite [ group [ test, ... ] [...] ]
[09:14:01] <scott_gonzalez> That's probably rare though.
[09:14:05] <scott_gonzalez> So I'm fine with suite.
[09:14:05] <johnbender> I agree with rwaldron
[09:14:18] <scott_gonzalez> I'm good with group :-)
[09:14:19] <johnbender> bike shed till you can't shed no mo
[09:14:24] <jzaefferer> Let's go with group then
[09:14:38] <scott_gonzalez> Let's cal it bikeshed.
[09:14:42] <rwaldron> <3
[09:14:43] <DaveMethvin> consider this shed well painted
[09:14:58] <johnbender> I'm just glad I can contribute
[09:15:00] <jzaefferer> http://bike.sh/
[09:15:27] <jzaefferer> up next: https://github.com/jquery/qunit/issues/186
[09:15:28] <socialhapy> ★ Issue #186 on qunit, reported by jzaefferer (2m, 1w ago): Provide a JUnit reporter
[09:16:00] <jzaefferer> This is a work in progress. Would like to integrate this into TestSwarm/Jenkins, via the Jenkins-plugin, but Justin Obara hasn't gotten there yet
[09:16:04] <johnbender> is this purely for server side or does that include a mechanism to push down the xml in a post body or some such
[09:16:13] <johnbender> question answered
[09:16:39] <jzaefferer> Unclear how the integration would actually look like, but getting over-time results in Jenkins would be nice
[09:16:47] <johnbender> +1
[09:17:06] <jzaefferer> Someone interested in helping Justin there? May require some Java experience...
[09:17:22] <rwaldron> yeah +1
[09:17:28] <rwaldron> nothing wrong with making it easier to use
[09:17:36] <rwaldron> as long as it's an "add-on"
[09:17:45] <johnbender> I'd like to help but I'm finding it hard enough to do get the basics in place for jqm
[09:19:06] <jzaefferer> Okay, well, guess I'll have to boot Eclipse once more...
[09:19:16] <jzaefferer> something Yehuda asked for: https://github.com/jquery/qunit/issues/179
[09:19:17] <socialhapy> ★ Issue #179 on qunit, reported by jzaefferer (3m, 6d ago): Add hook for custom types output in jsdump
[09:19:30] <jzaefferer> the idea here being that he wanted to control output for certain objects
[09:20:12] <jzaefferer> That actually may have been addressed by a different recent change.
[09:20:28] <jzaefferer> Here: https://github.com/jquery/qunit/commit/87061fb82bcf9a248c56ccf235b164e989ae2935
[09:20:28] <socialhapy> ★ Commit on qunit by jzaefferer (2w, 1d ago): Serialize expected and actual values only when test fails. Speeds up output of valid tests, especially for lots of large objects. Fixes #183
[09:20:46] <jzaefferer> #183 was requested by Yehuda's coworker
[09:20:57] <rwaldron> jzaefferer is it reasonably feasible?
[09:21:16] <jzaefferer> Feasible, yeah, but useful?
[09:21:43] <rwaldron> that would be my next question
[09:21:45] <jzaefferer> "Currently the output for big objects, even for passed tests, can get pretty nasty big." <- for passed tests, nothing gets output anymore
[09:21:58] <rwaldron> right
[09:22:11] <rwaldron> so it's suddenly only useful for failed tests
[09:22:12] <scott_gonzalez> ping Yehuda to see if he still wants it.
[09:22:19] <scott_gonzalez> Find out what the use case is if he does.
[09:22:20] <rwaldron> scott_gonzalez +1
[09:22:26] <DaveMethvin> i like the idea of only dumping failed tests ... i can see the value of the ability to customize the dumping
[09:22:40] <DaveMethvin> you could do it via the message but that would mean your dumping always ran
[09:22:52] <jzaefferer> hey wycats, you around?
[09:23:45] <jzaefferer> Closed it for now and pinged Yehuda
[09:23:48] <jzaefferer> As for https://github.com/jquery/qunit/issues/178
[09:23:49] <socialhapy> ★ Issue #178 on qunit, reported by jzaefferer (3m, 6d ago): Make testsuite fail if no tests run
[09:23:59] <rwaldron> +1
[09:24:00] <scott_gonzalez> +1
[09:24:18] <rwaldron> "untested code is broken code"
[09:24:20] <rwaldron> :D
[09:24:33] <jzaefferer> QUnit itself may have a few tests that only produce site effects, but should be easy to fix by adding a ok(true)
[09:24:43] <scott_gonzalez> There's a forum post about using AMD with QUnit that we can refer to (re: your concern in the ticket)
[09:24:57] <johnbender> +1
[09:25:03] <jzaefferer> I'll make sure the failure message makes it very obvious what happened
[09:25:14] <jzaefferer> scott_gonzalez: link? :-)
[09:25:34] * scott_gonzalez searches
[09:26:02] <scott_gonzalez> https://forum.jquery.com/topic/are-qunit-and-requirejs-compatible
[09:27:13] <johnbender> we're using it in our test suite but our implementation is duct tape
[09:27:22] <jzaefferer> Yehuda replied, still wants custom dump, but also https://github.com/jquery/qunit/issues/202
[09:27:22] <socialhapy> ★ Issue #202 on qunit, reported by jzaefferer (36.381s ago): Make ok(false) dump source lines
[09:30:02] <jzaefferer> two more: https://github.com/jquery/qunit/issues/203
[09:30:02] <socialhapy> ★ Issue #203 on qunit, reported by jzaefferer (1m, 4s ago): Make notrycatch also apply to setup and teardown
[09:30:11] <jzaefferer> and https://github.com/jquery/qunit/issues/204
[09:30:12] <socialhapy> ★ Issue #204 on qunit, reported by jzaefferer (48.123s ago): Apply noglobals after teardown
[09:30:27] <jzaefferer> Both make sense to me. Any comments?
[09:30:48] <scott_gonzalez> seems good
[09:30:50] <rwaldron> I'm in favor of these
[09:31:06] <DaveMethvin> +2, one for each
[09:31:07] <jzaefferer> Alright
[09:31:11] <jzaefferer> up next: https://github.com/jquery/qunit/issues/173
[09:31:11] <socialhapy> ★ Issue #173 on qunit, reported by jzaefferer (3m, 3w ago): Sandboxing and parallelization
[09:31:13] <rwaldron> anything that tightens up the test-to-test environment rollover is good by me
[09:31:20] <rwaldron> that too
[09:31:31] <jzaefferer> I feel like just closing this. I don't see it as feasible, and the value is questionable.
[09:31:46] <johnbender> jzaefferer: that was the idea of running each test in a iframe
[09:31:48] <jzaefferer> Unless someone has an idea how to make it happen? Or why?
[09:31:50] <rwaldron> for ringmark tests, we put the fixtures in iframes
[09:31:56] <johnbender> ^
[09:31:57] <rwaldron> but we had to actually code that
[09:32:04] <rwaldron> no real automation there
[09:32:13] <johnbender> I think it's something you can do in a general fashion
[09:32:18] <rwaldron> but could be a starting point for brainstorm
[09:32:18] <jzaefferer> rwaldron: is ringmark all custom?
[09:32:23] <rwaldron> jzaefferer nope
[09:32:30] <rwaldron> it uses a franken-qunit
[09:32:35] <scott_gonzalez> core has some tests that run in iframes too.
[09:32:44] <DaveMethvin> yep
[09:32:46] <johnbender> it would be nice to make it general
[09:32:50] <jzaefferer> so this ticket mixes two things
[09:33:01] <johnbender> I've gotten about half way down that road 2 or 3 times and then got pulled awaay
[09:33:20] <jzaefferer> isolation via sandboxing (via iframes) and parallelization, which is more about performance
[09:33:35] <johnbender> iframes should handle both on some level
[09:33:41] <jzaefferer> seems like isolation is actually interesting, parallelization not so much
[09:34:04] <DaveMethvin> how about if qunit had a way to opt in to running a group in an iframe? not sure about the perf implications tho
[09:34:10] <johnbender> jzaefferer: using iframes to make it parallel would speed things up when the number of iframes overcomes the extra load time
[09:34:27] <johnbender> one test per one iframe
[09:34:43] <DaveMethvin> mikesherov just factored our iframe runner into a reusable thing
[09:35:06] <jzaefferer> DaveMethvin: That might be an interesting starting point
[09:35:12] <jzaefferer> or whatever rwaldron wrote for ringmark
[09:35:16] <johnbender> DaveMethvin: does the test suite have to know about the iframe?
[09:35:43] <rwaldron> basically, what i did was: module("foo") and "foo" was the key in an object of fixtures
[09:35:44] <johnbender> rwaldron: ^ same question
[09:36:00] <rwaldron> so, { "foo": "<iframe src='tests.html'></iframe>" }
[09:36:04] <DaveMethvin> https://github.com/jquery/jquery/commit/f36568324d1b68101cc6e8933b94db3bc8591fad
[09:36:05] <socialhapy> ★ Commit on jquery by dmethvin (6d, 13h ago): fixes #10693, generalizes the "test something in an iframe" code when a callback isn't needed
[09:36:31] <johnbender> rwaldron: so you'd have to use that so select and manipulate
[09:36:57] <johnbender> iframe.jQuery("#some-id").foo()
[09:37:18] <rwaldron> in qunit.reset() i used config.current.module.. to determine which fixture to embed
[09:38:16] <rwaldron> johnbender all of our iframe src tests postMessage() the result
[09:38:23] <rwaldron> i think it can be done better
[09:38:30] <rwaldron> we built that in 3 weeks
[09:38:37] <rwaldron> plus all the tests themselves
[09:38:43] <johnbender> DaveMethvin: so in your patch the fixtures exist as seperate docs?
[09:38:45] <jzaefferer> johnbender rwaldron: can you put your ideas on https://github.com/jquery/qunit/issues/173 ?
[09:38:46] <socialhapy> ★ Issue #173 on qunit, reported by jzaefferer (3m, 3w ago): Sandboxing and parallelization
[09:39:13] <DaveMethvin> yes for those tests, they're completely different pages
[09:39:17] <johnbender> I was thinking that running tests in an iframe could be a flag just like notrycatch
[09:39:33] <johnbender> jzaefferer: cool
[09:39:34] <johnbender> will do
[09:39:45] <jzaefferer> got a few more to cover :-)
[09:40:08] <DaveMethvin> pedal faster! :D
[09:40:15] <jzaefferer> this is an ugly one, I still need to dig into that: https://github.com/jquery/qunit/issues/138
[09:40:16] <socialhapy> ★ Issue #138 on qunit, reported by yanisWang (6m, 3w ago): QUnit log order problem
[09:40:25] <jzaefferer> unless someone wants to give it a try?
[09:41:01] <jzaefferer> scott_gonzalez mentioned the subsuite runner earlier, we started pulling that together as an addon, but its not quite done yet: https://github.com/jquery/qunit/issues/128
[09:41:02] <socialhapy> ★ Issue #128 on qunit, reported by jzaefferer (7m, 5d ago): Add QUnit subsuite runner
[09:41:21] <jzaefferer> I think johnbender wrote something similar for jQuery Mobile, would be good to use the same setup for UI and Mobile
[09:43:27] <johnbender> jzaefferer: I'm for using whatever you guys come up with
[09:43:33] <johnbender> my solution works but is generally crap
[09:43:53] <jzaefferer> okay
[09:43:57] <johnbender> tests/unit/runner.js in the jqm repo
[09:44:15] <jzaefferer> well, then I'll let you know once the callback registration is fixed, then you should give the addon a try
[09:44:34] <johnbender> thanks
[09:45:02] <scott_gonzalez> jzaefferer: I can take a look at that.
[09:45:26] <jzaefferer> Its probably just a few places where it overwrites QUnit.log (or something) instead of calling it
[09:45:28] <jzaefferer> as for https://github.com/jquery/qunit/issues/123
[09:45:29] <socialhapy> ★ Issue #123 on qunit, reported by Krinkle (7m, 2w ago): Create configuration setting for default stop() timeout
[09:45:47] <jzaefferer> "added a testTimeout config option, which still needs to be documented. A per stop-timeout doesn't exist anymore, and isn't planned to get added back." <- any objections to that?
[09:46:28] <scott_gonzalez> nope
[09:46:47] <jzaefferer> So generally you would set "QUnit.config.testTimeout = 30000" to get a global timeout of 30s for all tests to make sure the suite never stops working complelty
[09:47:16] <johnbender> +1
[09:47:30] <DaveMethvin> i don't think it was needed, so a global timeout seems fine jzaefferer
[09:47:41] <jzaefferer> cool
[09:47:51] <jzaefferer> and that gets us to johnbender first feature request: https://github.com/jquery/qunit/issues/121
[09:47:52] <socialhapy> ★ Issue #121 on qunit, reported by johnbender (7m, 4w ago): Evented/Timed test helpers
[09:49:20] <johnbender> relatively simple idea
[09:49:20] <jzaefferer> Related is https://github.com/jquery/qunit/issues/120
[09:49:21] <socialhapy> ★ Issue #120 on qunit, reported by johnbender (7m, 4w ago): Comprehensive state management
[09:49:33] <johnbender> jzaefferer: that one is just the iframe idea in a different issue
[09:49:42] <johnbender> the second one that is
[09:49:49] <johnbender> you can close it in favor of the other if you like
[09:50:22] <scott_gonzalez> I feel like flow control helpers don't belong inside QUnit.
[09:50:40] <johnbender> that's fair
[09:50:53] <johnbender> It seems like a fundamental testing need
[09:51:02] <johnbender> and it will help people get away from testing with timeouts
[09:51:11] <johnbender> which is fragile
[09:51:26] <johnbender> but I'm not married to it
[09:52:13] <johnbender> it may be that no one writes non determinsitic javascript applications save for the jqm team :D
[09:52:17] <jzaefferer> johnbender: though you're just abstracting setTimeout, not really getting rid of it, aren't you?
[09:52:26] <johnbender> jzaefferer: no we're definitely getting rid of it
[09:52:41] <johnbender> jzaefferer: moving to event based callbacks
[09:52:45] <jzaefferer> so what does $.testHelper.pageSequence do?
[09:52:54] <johnbender> that's the push at least
[09:53:00] <jzaefferer> okay, that's good
[09:53:06] <jzaefferer> so, where does that leave this ticket?
[09:53:28] <johnbender> sequence is the only one that's timeout based
[09:53:50] <johnbender> it's definitely an addon but if no one thinks it's useful except for me then I don't see the point :D
[09:53:56] <rwaldron> i keep getting disconnected
[09:54:01] <jzaefferer> the eventSequence example link doesn't seem to point anything useful anymore
[09:54:04] <rwaldron> are we still on stop() timeout?
[09:54:11] <jzaefferer> rwaldron: https://github.com/jquery/qunit/issues/121
[09:54:11] <socialhapy> ★ Issue #121 on qunit, reported by johnbender (7m, 4w ago): Evented/Timed test helpers
[09:54:41] <jzaefferer> though Scott thinks flow helpers don't belong in QUnit, and the sequence stuff is invalid by now...
[09:54:41] <rwaldron> holy shit
[09:54:42] <johnbender> https://github.com/jquery/jquery-mobile/blob/master/tests/unit/navigation/navigation_core.js#L200
[09:54:45] <rwaldron> Popcorn.js <3's that
[09:55:07] <rwaldron> that would simplify the hell out of our tests
[09:55:08] <jzaefferer> so johnbender, how about we close this ticket, and you create a new one with something around event testing once that is fleshed out enough?
[09:55:27] <jzaefferer> or maybe get together with rwaldron to figure something out
[09:55:31] <johnbender> jzaefferer: what do you mean "fleshed out enough"?
[09:55:33] <jzaefferer> I need more data to form an opinion
[09:55:35] <rwaldron> yes, I'm into this idea
[09:55:36] <rwaldron> 100%
[09:55:50] <rwaldron> johnbender round out the real usecases?
[09:55:53] <jzaefferer> your eventSequenece code link points to… something
[09:55:57] <jzaefferer> dunno what to look at
[09:56:01] <johnbender> jzaefferer: https://github.com/jquery/jquery-mobile/blob/master/tests/unit/navigation/navigation_core.js#L200
[09:56:04] <johnbender> for an update
[09:56:07] <johnbender> I'll update the ticket
[09:56:27] <johnbender> lol
[09:56:32] <jzaefferer> is that based on timeouts?
[09:56:33] <johnbender> terrible example with timeouts in there
[09:56:34] <johnbender> no
[09:56:36] <jzaefferer> aha
[09:56:38] <johnbender> it's based on events
[09:56:44] <DaveMethvin> Why don't we work on something and then it can be pulled into QUnit once we have it ironed out?
[09:56:44] <johnbender> but there are random timeouts in there
[09:56:48] <johnbender> kk
[09:56:50] <scott_gonzalez> johnbender: When linking to a line in a file you should never link to master :-)
[09:56:59] <DaveMethvin> lol
[09:57:09] <johnbender> scott_gonzalez: right, I'm going to change the ticket to link to something more concrete
[09:57:14] <johnbender> https://github.com/jquery/jquery-mobile/blob/master/tests/unit/navigation/navigation_core.js#L176
[09:57:17] <johnbender> better  example
[09:57:18] <johnbender> but we can move on
[09:57:29] <rwaldron> we have soooo much bullshit in the Popcorn tests that are "seek to ___, what is the state, seek to ____, how does it look now"
[09:57:45] <rwaldron> annnnd back
[09:57:51] <jzaefferer> johnbender rwaldron: if you can put something together, we can review that
[09:58:23] <jzaefferer> preferably outside the context of jqm and popcorn, for it to make sense for those not familiar with those projects
[09:58:45] <scott_gonzalez> Also, preferably not something tied to a single event. As that's pretty limiting.
[09:59:00] <rwaldron> jzaefferer definitely
[09:59:02] <jzaefferer> johnbender: Can I close the current ticket? That seems to cover a lot of stuff that should be kept separate
[09:59:09] <rwaldron> scott_gonzalez also agreed
[09:59:13] <johnbender> scott_gonzalez: it's built on a more generic helper that uses a specificed event
[09:59:30] <johnbender> jzaefferer: eh sure if you want
[09:59:36] <scott_gonzalez> johnbender: But if the whole sequence is tied to a single event, that's really limiting.
[09:59:43] <johnbender> scott_gonzalez: per function events
[09:59:52] <johnbender> that's one of the heading in the ticket
[09:59:55] <johnbender> *headings
[10:00:07] <johnbender> eventCascade was the "working title"
[10:00:52] <ben_alman> responding to ping
[10:00:59] <ben_alman> just got back from lunch
[10:01:24] <jzaefferer> hey ben_alman
[10:01:31] <ben_alman> hiya
[10:01:32] <jzaefferer> Should've invited you the other day
[10:01:36] <rwaldron> I think this event squence bit could easily be implemented with deferreds
[10:01:53] <jzaefferer> I need to head out soon, so...
[10:02:01] <rwaldron> ben_alman https://github.com/jquery/qunit/issues
[10:02:01] <jzaefferer> Do we actually need this? https://github.com/jquery/qunit/issues/97
[10:02:02] <socialhapy> ★ Issue #97 on qunit, reported by jzaefferer (10m, 4w ago): Add mockjax example to docs
[10:02:08] <scott_gonzalez> no
[10:02:11] <jzaefferer> I mean, mockjax docs should be good enough, right?
[10:02:29] <ben_alman> fwiw i wrote a very simple json ajax mocking using ajax transports, i have it in a gist
[10:02:33] <ben_alman> waaaay simpler than mockjax
[10:02:34] <jzaefferer> and its linked in the list of "integrations and extensions"
[10:02:51] <ben_alman> https://gist.github.com/1371254
[10:02:58] <ben_alman> i need to pluginify it, when i get a chance
[10:03:29] <jzaefferer> ben_alman: cool
[10:03:44] <jzaefferer> once its born, we can add it to the list :-)
[10:03:48] <ben_alman> sweet
[10:04:00] <scott_gonzalez> I don't think we should have docs about other tools on the QUnit site.
[10:04:09] <ben_alman> scott_gonzalez: maybe just links tho?
[10:04:12] <scott_gonzalez> Maybe a learn.jquery article about how to use mockjax with QUnit?
[10:04:14] <jzaefferer> There's two more doc tickets, won't bother you with those, and this: https://github.com/jquery/qunit/issues/73
[10:04:15] <socialhapy> ★ Issue #73 on qunit, reported by csnover (1y, 1m ago): Mechanism to dispatch native browser events
[10:04:20] <jzaefferer> scott_gonzalez: yeah, that makes more sense
[10:04:23] <scott_gonzalez> And then link to the articles from the site.
[10:04:53] <jzaefferer> johnbender: what's your take on simulating native events?
[10:05:09] <jzaefferer> jQuery UI is still maintaining jquery.simulate.js, but so far no touch events in there
[10:06:05] <DaveMethvin> snover originally made the request but tbh even if we had it the problem would not be solved for core
[10:06:21] <scott_gonzalez> You need DOH.
[10:06:34] <DaveMethvin> i'll have to look at that
[10:06:56] <scott_gonzalez> It's dojo, so good luck finding anything useful :-P
[10:06:57] <scott_gonzalez> http://dojotoolkit.org/reference-guide/util/dohrobot.html
[10:07:00] <jzaefferer> rwaldron needs better intertubes
[10:07:09] <johnbender> jzaefferer: looking
[10:07:11] <DaveMethvin> usually those things fall a bit short when it comes to testing native events
[10:07:15] <scott_gonzalez> I don't think I've ever found a working version.
[10:07:22] <scott_gonzalez> We could ask phiggins though.
[10:07:31] <rwaldron> no kidding
[10:07:35] <rwaldron> today is unreal
[10:07:40] <scott_gonzalez> DaveMethvin: It uses Java to interact directly with the OS.
[10:07:45] <DaveMethvin> ah ok
[10:07:56] <DaveMethvin> that's good news and bad news then scott_gonzalez
[10:07:58] <jzaefferer> scott_gonzalez: do that! If that doesn't yield anything, I can ping some of the Uxebu folks, they're Dojo contributors
[10:08:03] <johnbender> jzaefferer: I haven't ever looked at the simulate lib so I'd have to look into that and get back to you
[10:08:12] <rwaldron> I have some recent and horrible experience with synthetic event objects
[10:08:18] <rwaldron> eg...
[10:08:19] <scott_gonzalez> Pete showed it to me a few years ago, it was pretty awesome to watch the tests run and see the cursor moving around the screen on it's own.
[10:08:21] <DaveMethvin> dunno how well java will work with ie6
[10:08:29] <jzaefferer> johnbender: okay - how're you testing events currently?
[10:08:32] <DaveMethvin> haven't tried for maybe 8 years
[10:08:36] <johnbender> jzaefferer: trigger
[10:08:37] <johnbender> :(
[10:08:44] <johnbender> jzaefferer: or we aren't
[10:08:47] <johnbender> only the outcomes
[10:09:01] <DaveMethvin> "yeah i'm a real event, i got delivered to your handler didn't I?" :D
[10:09:09] <johnbender> srsly :(
[10:09:14] <rwaldron> StorageEvent is a constructor that is illegal to construct, but ok to document.createEvent()... sometimes, other times its an object and other times it's a magical prototype
[10:10:10] <DaveMethvin> add in cross-browser issues and the tears are starting to flow
[10:10:14] <rwaldron> I ran into a lot of this kind of garbage with ringmark tests
[10:10:36] <jzaefferer> Okay, let's get back to that in a few weeks. I'm heading out, thanks everyone!
[10:10:52] <scott_gonzalez> see ya
[10:10:59] <DaveMethvin> if we're done i'll close the conf room
[10:11:06] <jzaefferer> One more issue open then what we started with, but for the most part things I can now work on fixing :-)
[10:11:20] <jzaefferer> Feel free to go on, I'm not kicking anyone out
[10:12:30] <DaveMethvin> just like a typical meeting, leave with more unresolved issues than when you started! :)
[10:14:13] <scott_gonzalez> hah, Louis-Rémi just posted to public-webevents about simulating events.
[10:14:52] <DaveMethvin> that's synchronicity
[10:15:01] <scott_gonzalez> http://lists.w3.org/Archives/Public/public-webevents/2012JanMar/0021.html
[10:17:14] <DaveMethvin> ok i'm closing up
[11:06:59] <eddiemonge> Welcome
[11:08:35] <Wilto> Back momentarily.
[11:08:40] <Wilto> Technical difficulties.
[11:09:39] <gseguin> https://plus.google.com/hangouts/extras/talk.google.com/jquerymobile-meeting-20120301
[11:09:42] <gseguin> thanks eddiemonge
[11:11:30] <gseguin> discussing: https://github.com/jquery/jquery-mobile/issues/3686
[11:11:31] <socialhapy> ★ Issue #3686 on jquery-mobile, reported by JFK99 (20h, 18m ago): $("a").live("click") returns different values on desktop browsers and on iOS safari since jQuery Mobile 1.1.0 RC1
[11:14:42] <Wilto> I’m wondering if that isn’t attr/prop issues elsewhere in jQM, that are causing the issue to pop up there.
[11:15:22] <Wilto> If we’re setting that attribute somewhere else—and not using prop() as we should—it would cause flakiness in getting/setting that href down the road. I think the line in question is “down the road.”
[11:15:31] <gseguin> I haven't followed that discussion too closely
[11:15:40] <gseguin> johnbender is the expert
[11:17:33] <johnbender> gseguin: lol on attr/prop
[11:17:34] <johnbender> hardly
[11:17:49] <gseguin> johnbender: are you joining the meetin
[11:17:50] <johnbender> ps
[11:17:51] <gseguin> g?
[11:17:52] <johnbender> yah
[11:17:54] <johnbender> sorry I'm late
[11:17:59] <johnbender> my daughter needed attention
[11:18:17] <Wilto> I think the issue is that core no longer goes back to the DOM to see if something is checked or whatever—it just references the object. By updating the underlying element outside of jQueryspace, the object doesn’t get updated, and checking it in jQueryspace (on the line in question) isn’t accurate anymore.
[11:20:50] <kswedberg> Wilto: I'd say checking href is one of the few times you'd want to use .attr instead of .prop
[11:21:04] <Wilto> …okay so I’m lost then.
[11:21:52] <kswedberg> .prop() in IE will always give you the "fully qualified URL with the http://whatever.com
[11:21:58] <eddiemonge> Needs docs fix: https://github.com/jquery/jquery-mobile/issues/3686
[11:21:59] <socialhapy> ★ Issue #3686 on jquery-mobile, reported by JFK99 (20h, 28m ago): $("a").live("click") returns different values on desktop browsers and on iOS safari since jQuery Mobile 1.1.0 RC1
[11:22:02] <johnbender> pre-commit hook: https://github.com/johnbender/jshint-service/blob/master/pre-commit.sh
[11:23:38] <kswedberg> Wilto: then again, in IE you'll always get the whole shebang no matter what you do if the link was dynamically inserted with JavaScript
[11:23:48] <Wilto> kswedberg: Trufax.
[11:26:09] <kswedberg> oh, now that I read the actual issue, it seems bizarre and must be unrelated to attr/prop. sorry.
[11:28:23] <kswedberg> Wilto: could it have something to do with the fact that live binds the event to document?
[11:28:54] <Wilto> Bizarre is how we roll.
[11:29:06] <kswedberg> :)
[11:30:40] <eddiemonge> its related to to the vclick binding. if vclick the href isnt really the href anymore
[11:31:34] <Wilto> Inception-y.
[11:34:20] <Wilto> That makes sense, though.
[11:36:29] <kswedberg> ah. sorry for jumping in and steering off course. <goes back and hides>
[11:38:39] <Wilto> Oh, no, thanks for tagging in, man!
[11:39:03] <Wilto> kswedberg: Speaking just for me: I need all the help I can get.
[11:40:27] <kswedberg> Wilto: thx, man. good to know.  :)
[11:40:52] <eddiemonge> and a good night to all from #jquery-meeting?
