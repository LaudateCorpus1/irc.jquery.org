[12:00:06] <scott_gonzalez> ?pepteam
[12:00:06] <b-ot> arschmitz bethge jdalton jrossi jrossi1 jrossi2 jrossi3 jrossi9billion M4rius scott_gonzalez snover
[12:00:13] <bethge> Hi
[12:01:20] <scott_gonzalez> hey
[12:01:36] <scott_gonzalez> So I looked over your enter/leave PR and it looked good to me.
[12:01:47] <scott_gonzalez> So I think we can merge it now.
[12:02:05] <scott_gonzalez> Oh, look at that. You already did :-)
[12:02:05] <bethge> Nice. With LG, I went right ahead and merged it. Hope that was not too quick.
[12:02:10] <bethge> :D
[12:02:21] <scott_gonzalez> nope
[12:02:32] <scott_gonzalez> Just hadn't checked in my email since you merged.
[12:03:02] <bethge> Ok cool
[12:04:16] <bethge> About: https://github.com/jquery/PEP/issues/275 - It looks correct to me what thenickdude mentions
[12:05:40] <bethge> Since a mouse is always active, calling a releaseCapture on the pointerId of that mouse should never throw an exception
[12:06:42] <scott_gonzalez> Hmmm... let me check something.
[12:07:39] <scott_gonzalez> You can't capture on a mouse that doesn't have a button pressed.
[12:07:48] <scott_gonzalez> It's an active pointer, but it's not in an active buttons state.
[12:09:44] <scott_gonzalez> So we'll need to avoid throwing an error if the user called releasePointerCapture() on a non-pressed mouse.
[12:10:11] <bethge> Yeah, I think so
[12:10:14] <scott_gonzalez> But calling setPointerCapture() on a non-pressed mouse should be a no-op.
[12:10:24] <scott_gonzalez> No error, but no action either.
[12:10:29] <bethge> Yeah
[12:10:54] <bethge> I believe we currently throw in both instances
[12:13:46] <scott_gonzalez> I'll add a comment on the issue about setPointerCapture().
[12:14:39] <scott_gonzalez> done
[12:14:42] <scott_gonzalez> https://github.com/jquery/PEP/issues/275#issuecomment-212991095
[12:14:52] <bethge> solid
[12:15:42] <bethge> It appears rather straight forward, I can get to it this weekend
[12:16:28] <scott_gonzalez> great
[12:17:05] <scott_gonzalez> arschmitz landed the automated starting of ChromeDriver PR after upgrading to the newest version of grunt-selenium-standalone.
[12:17:10] <scott_gonzalez> They released 1.0.0 while we were waiting :-)
[12:17:17] <bethge> :-)
[12:17:31] <bethge> I just tried it. Works like a charm.
[12:18:24] <scott_gonzalez> I got Rick Byers to chime in on offsetX/Y: https://github.com/jquery/PEP/pull/233
[12:18:45] <scott_gonzalez> He pointed out that lazy evaluation for those properties could result in incorrect data.
[12:19:05] <scott_gonzalez> So I suggested just eagerly calculating the values and waiting to see if anyone complains.
[12:20:34] <bethge> Sounds good. I would think we can approach performance once the other items are ironed out.
[12:21:26] <scott_gonzalez> yeah
[12:21:52] <arschmitz> yeah unless people complain i would go for correctness over completeness
[12:22:03] <arschmitz> i mean over performance lol
[12:22:07] <bethge> :D
[12:25:37] <bethge> I looked into https://github.com/jquery/PEP/issues/235 and agree with jzaeferer findings. Though I would also put it in the performance queue.
[12:26:26] <scott_gonzalez> Yeah, so long as functionality is correct, I wouldn't worry about it yet.
[12:28:26] <scott_gonzalez> Speaking of performance...
[12:28:27] <scott_gonzalez> https://github.com/jquery/PEP/issues/278
[12:28:35] <scott_gonzalez> We can use passive event listeners.
[12:28:53] <scott_gonzalez> I'll just go ahead and make a performance label for issues...
[12:30:11] <bethge> Good idea
[12:30:57] <scott_gonzalez> Just closed https://github.com/jquery/PEP/issues/229
[12:31:07] <scott_gonzalez> Related to the ChromeDriver PR that just landed.
[12:37:14] <scott_gonzalez> Is there anything else to discuss today?
[12:37:50] <bethge> Nothing more from my side :-)
[12:40:44] <scott_gonzalez> Alright. I guess that's all for today.
[12:40:47] <scott_gonzalez> Thanks.
[12:42:37] <bethge> Thanks
[14:01:31] <arschmitz> apsdehal: agcolom_: gabrielschulhof: jasperdegroot: cgack: meeting time
[14:01:38] <gabrielschulhof> Hey!
[14:02:04] <cgack> howdy
[14:03:15] <jasperdegroot> hi
[14:04:52] <apsdehal__> Hi
[14:05:13] <apsdehal__> I am on a bad Internet connection today. May go off anytime
[14:07:53] <arschmitz> apsdehal: no problem
[14:08:02] <arschmitz> agenda https://docs.google.com/spreadsheets/d/11-mngR57h54cIOjGDE2Z6LjaiyRgDwlcvKUzZn2Fw6M/edit#gid=1267439589
[14:08:45] <arschmitz> ok lets start with phantom 2.x last update was it was blocked by test bootstrap
[14:08:48] <arschmitz> which has now landed
[14:09:04] <arschmitz> apsdehal: any update?
[14:15:37] <arschmitz> apsdehal__
[14:15:43] <arschmitz> or maybe we lost him already
[14:16:02] <gabrielschulhof> Weird, he pings OK.
[14:16:15] <arschmitz> ok well lets move on and if he comes back he can update us
[14:16:33] <arschmitz> gabrielschulhof: i think both jasper and i reviewed your pr and just some small things left
[14:17:19] <jasperdegroot> gabrielschulhof: did you open a ticket for the FF dialog issues?
[14:18:00] <gabrielschulhof> jasperdegroot: You mean in the demos?
[14:18:52] <jasperdegroot> gabrielschulhof: well, we weren't sure yet if it was only a problem in the demos
[14:18:59] <gabrielschulhof> jasperdegroot: I think it's because .ui-page-dialog { background: none !important; }
[14:19:15] <gabrielschulhof> jasperdegroot: Before we were setting the background on the pagecontainer at runtime.
[14:19:20] <gabrielschulhof> jasperdegroot: I don't think we do that anymore.
[14:19:25] <gabrielschulhof> So the dialog is transparent.
[14:19:46] <gabrielschulhof> This results in other problems too. For example, if you have a multi-page template, you can see the other page behind the dialog, uninitialized.
[14:19:58] <jasperdegroot> ah of course
[14:20:32] <jasperdegroot> but it's not a selectmenu issue so we should not let it block that PR
[14:20:39] <gabrielschulhof> No, it's not a selectmenu issue.
[14:20:49] <jasperdegroot> although we also had that jump issue
[14:20:59] <arschmitz> ok so lets open an issue for that and mark it a 1.5 blocker
[14:21:09] <jasperdegroot> yeah
[14:21:14] <apsdehal__> Not as of now, will try to land it this weekend. It should be easy in the theory
[14:21:27] <gabrielschulhof> jasperdegroot: I fixed the jump issue, but I found something disturbing.
[14:21:55] <gabrielschulhof> $( "[data-" + $.mobile.ns + "role='page']" ).css( { "position": "relative" } );
[14:21:59] <apsdehal__> My message got through now
[14:22:30] <gabrielschulhof> This runs inside toolbar on create whenever it fails to find a containing page.
[14:22:30] <arschmitz> gabrielschulhof: that looks like its for transitions
[14:22:34] <arschmitz> with external stuff
[14:22:50] <gabrielschulhof> Yeah, but it's bad, because if you add a toolbar to a popup, it's not necessarily inside a page.
[14:22:57] <jasperdegroot> yeah what arschmitz said
[14:23:15] <gabrielschulhof> arschmitz: Also, if you add a toolbar at runtime, you wanna instantiate the widget before you add it to the DOM to avoid reflow.
[14:23:32] <gabrielschulhof> arschmitz: ... and so it's not gonna find a containing page.
[14:23:32] <arschmitz> gabrielschulhof: for the selectmenu
[14:23:46] <arschmitz> we need to have it check for a parent selectmenu too it sounds like
[14:23:58] <gabrielschulhof> arschmitz: For the select menu I worked around it by instantiating after making sure it's inside a page.
[14:24:11] <gabrielschulhof> ... but this is a single widget affecting the global state - which is bad.
[14:24:27] <gabrielschulhof> ... though understandable why it's necessary.
[14:24:40] <arschmitz> @gabrielschulhof not nessasarrilly when your talking about full page layout it needs to
[14:25:09] <gabrielschulhof> Yeah, but I should be able to tell the toolbar to "relax buddy, you're in a page, trust me!"
[14:25:26] <arschmitz> maybe we need to add an option
[14:25:41] <gabrielschulhof> "Don't go off relativizing all the pages now, y'hear?"
[14:25:52] <gabrielschulhof> ... or just override _setRelative()
[14:26:01] <gabrielschulhof> ... for the instance
[14:26:13] <gabrielschulhof> But ha!
[14:26:14] <arschmitz> ehh that would get messy
[14:26:16] <gabrielschulhof> You can't.
[14:26:33] <gabrielschulhof> Because in order to have an instance, you need to create an instance, and _setRelative() gets called from _create()
[14:26:41] <arschmitz> right
[14:26:47] <arschmitz> so this would need to be an option
[14:26:55] <gabrielschulhof> So yeah, option ... but this seems like such a contrived option.
[14:27:00] <arschmitz> yes
[14:27:15] <gabrielschulhof> It's like: pleaseDontRunSetRelative: true
[14:27:37] <arschmitz> pagePostion: "relative"
[14:27:45] <arschmitz> null to do nothing
[14:27:56] <arschmitz> anything else sets it to that string
[14:28:02] <arschmitz> default is relative
[14:28:06] <gabrielschulhof> assumePage: true/false
[14:28:44] <gabrielschulhof> toplevel: true/false
[14:29:02] <arschmitz> jasperdegroot: ?
[14:29:07] <arschmitz> cgack: ?
[14:29:13] <jasperdegroot> yes?
[14:29:29] <arschmitz> thoughts on how an option for this should work
[14:29:34] <cgack> sorry catching back up on the backlog, double booked
[14:30:09] <gabrielschulhof> cgack: The toolbar sets all pages as relative if it cannot find its parent page. This it will certainly not be able to do if it gets instantiated in a floating piece of DOM.
[14:30:30] <jasperdegroot> I think the option should contain "relative"
[14:30:31] <gabrielschulhof> cgack: So, you need to be able to tell it not to do that via an option, but what should be the API for the option.
[14:30:51] <arschmitz> well first question is should this be a boolean
[14:30:53] <arschmitz> for a string
[14:31:02] <cgack> ah. yes an option then, but tricky
[14:31:06] <jasperdegroot> yeah, I think bool is best
[14:31:26] <gabrielschulhof> I don't think the option should refer to the mechanism by which it makes a difference but rather to the difference it's trying to make.
[14:31:33] <arschmitz> a string would allow you to set absolute if you wanted for some reason
[14:31:46] <gabrielschulhof> Well, it's absolute by default.
[14:32:19] <jasperdegroot> but if you allow other things than relative, people will open an issue if something other than relative cause problems
[14:32:27] <gabrielschulhof> Yeah, exactly.
[14:32:33] <jasperdegroot> so I think we should be strict in what we support
[14:32:39] <arschmitz> maybe the option should be external
[14:32:50] <arschmitz> and default is autoDetect
[14:32:52] <gabrielschulhof> arschmitz: Excellent point!
[14:33:00] <gabrielschulhof> Exactly.
[14:33:00] <jasperdegroot> yeah that might be a good idea
[14:33:10] <gabrielschulhof> ... and when autodetection fails, you need to lend it a hand.
[14:33:44] <arschmitz> we will likely need to make a few related changes for other places we special case external
[14:33:47] <gabrielschulhof> So, we have true/false/"autodetect"?
[14:33:50] <gabrielschulhof> That's mixed type.
[14:34:02] <arschmitz> null would be auto
[14:34:05] <arschmitz> like in other places
[14:34:32] <gabrielschulhof> OK. Great!
[14:34:34] <arschmitz> we always use null to mean auto
[14:34:42] <gabrielschulhof> I'll add that to the toolbar then.
[14:35:01] <arschmitz> so lets open a ticket for this and it will need to be a blocker
[14:35:02] <gabrielschulhof> arschmitz: Remind me please: If an option is null, we still declare it, right?
[14:35:08] <gabrielschulhof> arschmitz: Not like classes, right?
[14:35:09] <arschmitz> yes
[14:35:12] <gabrielschulhof> OK.
[14:35:21] <arschmitz> we dont declare null nestd options
[14:35:30] <arschmitz> only nested
[14:35:34] <gabrielschulhof> OK. Gotcha.
[14:35:44] <gabrielschulhof> I'll open the ticket.
[14:36:05] <arschmitz> so we will need to go through and find all the places we check if we are in a page
[14:36:18] <arschmitz> and add logic to use this option or detect
[14:37:18] <arschmitz> @gabrielschulhof i did comment on 2 things with the selectmenu pr though
[14:37:45] <arschmitz> the widget call is too weird nesting them with a mixin
[14:38:20] <arschmitz> so lets break those up and looks like you modified qunit-assert-classes
[14:38:34] <arschmitz> which is an obvious no go but aside from that i think its good
[14:39:04] <gabrielschulhof> Yeah, the qunit-assert-classes thing was so I could make headway. I'll file a PR against it.
[14:39:30] <gabrielschulhof> ... and I've already done var selectmenu = $.widget(); return $.widget( "mobile.selectmenu", selectmenu, ... );
[14:39:54] <gabrielschulhof> arschmitz: There's one more nav issue though.
[14:40:25] <gabrielschulhof> 1. Have a page with a custom select and a button that opens a dialog. 2. Open the custom select. 3. Refresh. 4. Open the dialog. 5. Click the "Close" button on the dialog.
[14:40:53] <gabrielschulhof> Oh, I mean a dialog-sized custom select.
[14:41:25] <gabrielschulhof> At this point it wants to go back to the custom select dialog, but since you refresh-ed, the dialog is not in the DOM anymore, so it does nothing.
[14:41:30] <arschmitz> and by "open a dialog" do you mean a page styled as a dialog
[14:41:34] <gabrielschulhof> Yeah.
[14:41:37] <arschmitz> because dialogs are deprecated
[14:41:42] <gabrielschulhof> No more dialog hash key anywhere.
[14:41:51] <gabrielschulhof> It's all just plain, reachable, hash.
[14:41:54] <arschmitz> ok
[14:42:15] <arschmitz> so is this just a bug or is it something we need to talk about?
[14:42:39] <gabrielschulhof> I'm not sure yet. I'm reluctant to let this block my progress on selectmenu.
[14:42:47] <gabrielschulhof> Just something I've observed.
[14:43:00] <gabrielschulhof> Not sure how much of an impact it has.
[14:43:57] <gabrielschulhof> Oh, BTW: Another question about widget pedantics. We don't run global selectors, right? We run this.document.find(); right?
[14:44:11] <gabrielschulhof> ... from inside a widget implementation.
[14:44:27] <arschmitz> well i guess it depends on what your trying to do
[14:44:42] <arschmitz> but in general its more likely you want this.document.find
[14:44:43] <gabrielschulhof> $( "[data-" + $.mobile.ns + "role='page']" ).css( { "position": "relative" } );
[14:45:04] <gabrielschulhof> I wanna change that to this.document.find( "[data-"... ).css(...);
[14:45:09] <gabrielschulhof> ... inside toolbar.
[14:45:34] <gabrielschulhof> I remember scott_gonzalez saying that this better supports multi-document scenarios.
[14:46:06] <arschmitz> yes thats correct
[14:46:12] <arschmitz> and yes that case should change
[14:46:17] <gabrielschulhof> OK. Then I'll add that to the scope of the issue I'm filing.
[14:46:47] <arschmitz> we dont really support those cases in jqm right now but we should
[14:46:59] <arschmitz> its really just bugs like this that potentially cause issues
[14:47:33] <arschmitz> though we couldnt really do useful stuff with the way the factory works anyway
[14:47:42] <arschmitz> like you couldnt create it in one document then move it to another
[14:47:55] <arschmitz> because the document would still point to the original if you used this.document
[14:48:25] <scott_gonzalez> multi-document is easy if you already have a reference to an element.
[14:48:48] <gabrielschulhof> scott_gonzalez: How do you mean "is easy"?
[14:49:13] <gabrielschulhof> Well, I guess you can get the document from the element.
[14:49:14] <scott_gonzalez> Just that finding the right document to work from is easy.
[14:49:21] <gabrielschulhof> Right, yeah.
[14:49:23] <arschmitz> yes
[14:49:25] <scott_gonzalez> But you already have it if you're inside a widget. The code you showed above is correct.
[14:49:35] <scott_gonzalez> :-)
[14:49:35] <gabrielschulhof> But updating the context of a widget to point to a new containing document may be complicated.
[14:49:38] <arschmitz> right
[14:49:54] <scott_gonzalez> oh, yeah, that could be tricky
[14:50:02] <scott_gonzalez> I haven't read the back scroll yet.
[14:50:04] <gabrielschulhof> But anyway, that's academic right now. I'm just happy not to accidentally violate a widget's document context.
[14:50:04] <arschmitz> scott_gonzalez: thats all i had said
[14:50:14] <arschmitz> was that we dont support moving between documents
[14:50:29] <arschmitz> because the this.document would not be correct
[14:50:46] <gabrielschulhof> arschmitz: I think it's more than that. jQuery objects stored on the widget would also have to be updated.
[14:51:11] <gabrielschulhof> arschmitz: ... because AFAIK jQuery objects also have a context property containing the document on which they were born.
[14:51:53] <arschmitz> i do believe that is true
[14:52:03] <gabrielschulhof> But anyhoo. Thanks for the review, arschmitz and jasperdegroot. I'm really happy to once more have a list of things I can work my way through.
[14:52:28] <gabrielschulhof> Not a long list, either. Happy about that too.
[14:52:37] <arschmitz> ok and that brings us to demos
[14:52:55] <arschmitz> jasperdegroot: any updates there i know you landed a couple pr's
[14:53:29] <jasperdegroot> not really
[14:53:34] <jasperdegroot> yeah
[14:53:54] <jasperdegroot> I think there isn't anything in the demos blocking us from merging 1.5-dev in master
[14:54:06] <arschmitz> yeah i didnt think so
[14:54:21] <jasperdegroot> will keep working on the demos issues mentioned in the ticket
[14:54:37] <arschmitz> and finally cgack last we talked you were going to work on demos for the widgets you updated
[14:54:42] <arschmitz> any progress there?
[14:54:47] <arschmitz> not demos
[14:54:49] <arschmitz> docs
[14:54:50] <arschmitz> api
[14:55:00] <cgack> sadly no progress yet
[14:55:11] <arschmitz> ok
[14:55:28] <arschmitz> thats everything i had for today
[14:55:36] <arschmitz> does anyone have anything else?
[14:55:57] <jasperdegroot> nope, I am good
[14:56:49] <gabrielschulhof> Same here.
