[09:01:04] <timmywil> DaveMethvin, gibson042, markelog, m_gol ding dong
[09:01:16] <DaveMethvin> yay
[09:01:31] <markelog> hey-hey
[09:02:46] <timmywil> So, there don't seem to be a lot of issues needing review.
[09:02:48] <m_gol> present
[09:03:04] <gibson042> here
[09:03:07] <timmywil> DaveMethvin kindly made a PR for events, tho https://github.com/jquery/jquery/pull/2617
[09:03:24] <timmywil> which brings up integration testing
[09:03:59] <timmywil> we've got an integration folder, but we don't actually use webdriver or similar for anything
[09:04:48] <markelog> we can start to do it
[09:04:52] <markelog> just need to set it up
[09:05:03] <timmywil> right
[09:05:13] <markelog> i guess i can try to do it this weekend
[09:05:30] <markelog> we would need to choose a tool though
[09:05:37] <timmywil> I've only used webdriver in conjunction with sauce
[09:05:39] <markelog> do we need a real screenshot testing
[09:05:48] <markelog> or just check dom?
[09:05:52] <timmywil> I'm thinking of screenshot testing right now
[09:06:16] <markelog> okay, so either webdrivercss or gemini
[09:06:24] <markelog> i'd say gemini
[09:06:34] <markelog> since i'm close to the ppl who create it
[09:06:45] <timmywil> Right now, I'm thinking of simulating events in the browser
[09:06:53] <DaveMethvin> the event one just needs a "real click" to occur
[09:07:20] <markelog> yeah, we can do that, and everything else :-
[09:07:21] <markelog> )
[09:07:36] <markelog> timmywil: what do you mean?
[09:07:46] <markelog> we do simulating events now
[09:07:50] <markelog> in unit testing
[09:08:12] <timmywil> yes, but we don't do it in a webdriver way
[09:08:21] <timmywil> where the event is exactly what the browser would do
[09:08:27] <DaveMethvin> the bug i was chasing only occurs when a user clicks a link, not when someone creates a native DOM event and fires it
[09:08:33] <markelog> well, that would be a real click, no simulating needed
[09:08:41] <DaveMethvin> because the bug was about the way it sets the various event properties
[09:08:46] <timmywil> ok, depends on how you define simulating
[09:08:52] <markelog> right :-)
[09:08:58] <markelog> so ui testing, we sure?
[09:08:59] <timmywil> point is, not a manual test
[09:09:06] <DaveMethvin> there's no finger, so it's simulated! :)
[09:09:10] <markelog> since it would take some considerable time to set up
[09:09:16] <markelog> i wouldn't want to waste it
[09:09:31] <markelog> DaveMethvin: )))
[09:09:36] <timmywil> I mean, it's something I've wanted to do for a while
[09:09:51] <timmywil> we've run into this before, where real integration testing would be more appropriate
[09:10:29] <markelog> yeah, but we can do e2e testing without ui testing
[09:10:37] <markelog> with real clicks
[09:10:41] <m_gol> DaveMethvin: you mean we need http://www.thingiverse.com/thing:123420?
[09:10:42] <timmywil> yea, I'd say just e2e right now
[09:10:44] <markelog> through webdriver
[09:10:56] <DaveMethvin> yes, automate the finger
[09:11:12] <timmywil> we can talk about ui testing, but I'm more focusing on e2e right now
[09:11:21] <m_gol> SaveMethvin: it integrates with Selenium, hey!
[09:11:25] <m_gol> * DaveMethvin
[09:11:32] <DaveMethvin> good!
[09:11:43] <timmywil> browserstack has first-class support for this right?
[09:11:50] <m_gol> timmywil: yup
[09:11:56] <m_gol> it even has screenshots on every command
[09:12:48] <markelog> i think we would need ui testing either way
[09:12:55] <markelog> to check css styles
[09:12:59] <markelog> or something
[09:13:05] <markelog> if we start with only e2e
[09:13:12] <markelog> then we would need to change all set up
[09:13:19] <timmywil> ticket: https://github.com/jquery/jquery/issues/2078
[09:13:52] <timmywil> markelog: ok, you mean it'd be less time overall to set up both now?
[09:14:17] <markelog> yeah
[09:14:30] <markelog> and we can check every use-case with ui
[09:14:45] <timmywil> how is that checked?
[09:14:49] <timmywil> a p-diff tool?
[09:15:18] <timmywil> cause that's what sounds like more work than just e2e
[09:15:20] <markelog> yep
[09:15:36] <markelog> nope, it should be the opposite
[09:15:45] <markelog> but depends
[09:16:12] <timmywil> ok, if you're willing to give it a shot, I won't push back
[09:16:19] <markelog> https://gist.github.com/cvrebert/adf91e429906a4d746cd
[09:16:22] <markelog> check this out
[09:16:30] <markelog> cool, i will
[09:17:13] <m_gol> I assume we won't run those tests in all browsers?
[09:17:19] <m_gol> like, Android 2.3
[09:17:29] <markelog> depends on how we want it to do it
[09:17:51] <markelog> as far as i know there is no issues running it on mobile
[09:17:53] <markelog> but not sure
[09:18:22] <markelog> but if it is browser specific bug, we could run it in one browser only
[09:18:25] <markelog> and btw
[09:18:31] <markelog> it seems we will run it on prs
[09:18:43] <markelog> since we can :-)
[09:18:47] <DaveMethvin> as long as we don't run them locally, it's already taking WAAAY too long to iterate when I make changes
[09:19:30] <markelog> with grunt watch you mean?
[09:19:47] <DaveMethvin> yeah like 15 seconds or more
[09:20:24] <markelog> we definitely shouldn't do it on grunt watch
[09:20:31] <timmywil> DaveMethvin: to start, I'm thinking these tests would only run before a release
[09:20:38] <markelog> do we run node tests with grunt watch?
[09:20:53] <markelog> i don't remember
[09:21:00] <DaveMethvin> i don't use grunt watch, but i just did a build and it took 23 seconds
[09:21:10] <timmywil> they do run on grunt default
[09:21:16] <DaveMethvin> yeah
[09:21:27] <DaveMethvin> i guess i should update my alias :)
[09:21:28] <markelog> timmywil: well, we can run it always on prs too, in CI
[09:21:30] <m_gol> markelog: even our unit tests have a hard time on Android 2.3 (& 4.3 a little) so it may be bad with e2e as well. We should start with major desktop & mobile browsers and widen the matrix if no problems arrive
[09:21:50] <timmywil> markelog: yes, but we'll want to make sure they don't take forever
[09:22:11] <markelog> m_gol: i was planning to be even more conservative
[09:22:25] <markelog> they won't, i have couple examples
[09:22:42] <markelog> but for starters i would run those tests only on problematic browsers
[09:22:59] <markelog> i.e. the ones that we have created the tests cases for
[09:23:07] <markelog> like
[09:23:17] <markelog> DaveMethvin: pr, as i understand, is only for FF
[09:23:17] <timmywil> Firefox in the case of Dave's PR
[09:23:23] <markelog> so we can run it only in FF
[09:23:27] <markelog> yeah!
[09:23:36] <timmywil> works for me
[09:23:37] <markelog> and then see how it goes
[09:23:57] <markelog> m_gol: actually, we already run our tests through selenium
[09:24:09] <m_gol> how so?
[09:24:12] <markelog> selenium is just a runner
[09:24:23] <markelog> which executes our tests in specific env
[09:24:52] <m_gol> Karma doesn't rely on Selenium
[09:25:00] <timmywil> I believe selenium is a middle man for browserstack?
[09:25:02] <markelog> it doesn't
[09:25:09] <markelog> but saucelabs or bb does
[09:25:16] <markelog> timmywil: yep
[09:25:23] <m_gol> And BrowserStack doesn't record the test run in our testing
[09:25:31] <m_gol> it does when you use Selenium APIs
[09:25:31] <DaveMethvin> markelog: yes but the test isn't really FF-specific and the bug was actually reported against IE
[09:25:34] <m_gol> with screenshots etc
[09:26:01] <DaveMethvin> the reason for the code is a FF bug but the workaround caused a problem with IE
[09:26:02] <markelog> m_gol: saucelabs, bb use wd under the hood, and karma could use any launcher like wd laucher
[09:26:09] <markelog> DaveMethvin: it was just an example
[09:26:37] <markelog> the point is, we can run tests only in small amount of browsers in the begging
[09:26:50] <timmywil> beginning :)
[09:27:06] <markelog> yeah, i'm in two meetings right now, sorry for language :-
[09:27:07] <markelog> )
[09:28:00] <markelog> okay, so i'm gonna try it, and we will check it out with some code?
[09:28:10] <timmywil> markelog: +1
[09:28:21] <markelog> okay, cool
[09:28:53] <markelog> DaveMethvin: could create an integration test then?
[09:29:22] <timmywil> that might come after we have an infrastructure for it
[09:29:56] <markelog> yeah, although, it would be better to check manually now and just implement infra for it
[09:30:05] <DaveMethvin> yeah i can make a test and add it to the PR
[09:30:10] <timmywil> ok
[09:30:12] <markelog> coolsies
[09:30:14] <timmywil> anyone have anything to add to the agenda?
[09:30:43] <m_gol> in case you didn't know
[09:30:45] <timmywil> some things are still in the works, but don't necessarily need discussion right now
[09:30:48] <m_gol> Safari 9 breaks the wheel event
[09:31:05] <timmywil> oh boy
[09:31:06] <m_gol> if you don't prevent default, it fires only once per the whole scroll
[09:31:08] <m_gol> https://bugs.webkit.org/show_bug.cgi?id=149526
[09:31:15] <m_gol> I discovered it yesterday
[09:31:16] <DaveMethvin> leave it to apple to reinvent the wheel
[09:31:16] <DaveMethvin> event
[09:31:21] <markelog> )))
[09:31:22] <timmywil> lol
[09:31:22] <m_gol> Brandon Aaron will be happy ;p
[09:32:03] <m_gol> knowing Apple, they'll fix it quickly & then won't backport the patch to Safari 9
[09:32:17] <DaveMethvin> i wonder how long before it gets reported on the mousewheel plugin repo
[09:32:18] <timmywil> ya
[09:32:28] <m_gol> I thought about reporting
[09:32:35] <m_gol> but I can wait for someone else :P
[09:32:44] <DaveMethvin> at least we know why now
[09:32:52] <m_gol> if you prevent default the bug disappears so it might not affect everyone
[09:33:06] <m_gol> the funny thing is that *SOMETIMES* it does fire on every scroll frame
[09:33:18] <timmywil> weird
[09:33:23] <m_gol> if you scroll long enough, sometimes it fires once per the whole animation, sometimes per frame
[09:33:34] <m_gol> and if you put it in an iframe it unbreaks itself
[09:33:35] <m_gol> fishy
[09:34:04] <timmywil> alright, thanks all! see you in -dev
[09:34:07] <m_gol> cu
