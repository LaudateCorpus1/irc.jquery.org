[10:00:19] <sfrisk> `chassisteam
[10:00:34] <michaelarestad> :)
[10:00:37] <sfrisk> that didn't work
[10:00:41] <sfrisk> anyway
[10:00:43] <sfrisk> MEETING TIME
[10:01:29] <sfrisk> Agenda of Agendaness: https://docs.google.com/spreadsheets/d/1FUdRcAq2d8njs8KAcfQmEyoZL74SXLsLp1rtc7E9z_I/edit?usp=sharing
[10:01:34] <arschmitz> `chassisteam
[10:01:45] <arschmitz> damn b-ot
[10:01:47] <sfrisk> Magical power broken
[10:01:47] <sfrisk> :-(
[10:02:27] <arschmitz> michaelarestad: arthurvr: jzaefferer:
[10:02:32] <arschmitz> not sure who else
[10:02:42] <sfrisk> arthurvr, geekman-rohit, helen, michaelarestad,
[10:03:08] <arschmitz> wow magic
[10:03:14] <sfrisk> I have magic!
[10:03:38] <arthurvr> Hey everybody
[10:03:45] <sfrisk> I know noufal is busy today so he won't be here
[10:04:28] <slayslot> hello
[10:04:35] <sfrisk> ah! Slayslot
[10:04:39] <sfrisk> we forgot slayslot
[10:04:56] <sfrisk> anyway, here is the agenda: https://docs.google.com/spreadsheets/d/1FUdRcAq2d8njs8KAcfQmEyoZL74SXLsLp1rtc7E9z_I/edit?usp=sharing
[10:07:25] <sfrisk> So great news
[10:07:31] <sfrisk> Typography landed!
[10:08:12] <sfrisk> Which definitely helps with some stuff I was doing for the Chassis Palette PR, so I'm going to sit down and focus on that at the Buttons PR this week
[10:08:29] <sfrisk> now that traveling to distance states for work is done for a little bit
[10:09:05] <arthurvr> That's awesome :)
[10:10:00] <sfrisk> So that brings the focus to Table Styling
[10:10:03] <sfrisk> I know Alex started reviewing that
[10:10:50] <arschmitz> one big thing with that is i know even michaelarestad was questioning the fancy scroll shadow
[10:11:39] <arschmitz> i know i like it but i question if its really a good idea as well
[10:12:12] <geekman-rohit> it does look good
[10:12:31] <arschmitz> I think it kinda brings up a more general issue though of scroll ability indicators.
[10:12:37] <geekman-rohit> even from functional point, makes it clear in an instant where table is scrolled, liked that at first sight
[10:12:47] <arschmitz> im not aware of any other css frameworks handling this
[10:13:09] <arschmitz> but its a real issue with modern layouts on platforms that dont show scrollbars
[10:13:28] <arschmitz> it came up recently in jQuery UI for custom select menus
[10:13:35] <michaelarestad> Yep. Especially if it happens to be cropped at the end of a table cell.
[10:13:45] <arschmitz> michaelarestad: EXACTLY
[10:13:51] <sfrisk> indeed
[10:14:10] <arschmitz> So i think we should solve this in a more general way
[10:14:33] <sfrisk> I think it's a good discussion to have, since we need to find a way to make the visual notice for "you can scroll" consistent throughout the site no matter what we do
[10:14:35] <sfrisk> even on tables
[10:14:42] <arschmitz> yup
[10:14:50] <arschmitz> im thinking this could easily be its own component
[10:15:03] <michaelarestad> Definitely worth exploring.
[10:15:24] <sfrisk> A good example I can think of is: http://www.tabletitans.com/comic/mines-of-madness-page-1
[10:15:44] <sfrisk> where they had to add a notice to tell people "hey, you can scroll the comic in mobile to see all the things
[10:15:47] <sfrisk> "
[10:16:38] <sfrisk> (yes, my examples are webcomics)
[10:16:40] <michaelarestad> If there's a media gallery with columns, it's pretty easy to show there is more content if scrolled.
[10:16:46] <michaelarestad> No judgement here.
[10:17:45] <arschmitz> anyway i think there are real usecases for this
[10:17:53] <michaelarestad> Yep.
[10:17:53] <arschmitz> when you have scrollable regions within a page
[10:18:14] <arschmitz> so im kinda thinking maybe back this out of table
[10:18:22] <arschmitz> and look at it as its own thing
[10:18:28] <michaelarestad> Works for me.
[10:18:30] <sfrisk> I can create an issue for it
[10:18:37] <michaelarestad> Thanks.
[10:18:52] <arschmitz> i really want to see this and like the current look i just want it to be re-usable
[10:18:53] <sfrisk> and we can create a consistent use case for this
[10:19:04] <sfrisk> consistent approach*
[10:19:07] <sfrisk> not use case
[10:19:09] <arschmitz> even for phase one selectmenu will likely need it too
[10:19:47] <arschmitz> well NEED is relative
[10:20:00] <arschmitz> but for proper accessability i think we will need it in some form
[10:20:11] <michaelarestad> Got it.
[10:20:53] <arschmitz> michaelarestad: to address concerns on perf of a super fancy shadow we can easily make tests for this
[10:21:34] <michaelarestad> Yep. I'm planning on exploring less "fancy" options.
[10:21:38] <arschmitz> our testing setup can easily handle tests of this nature both from the perspective of scrolling the content and frame rate as well as actual time to render the shadow
[10:21:49] <michaelarestad> Cool.
[10:21:50] <arschmitz> michaelarestad: we will at the very least need an ie8/9 compatible fallback
[10:22:05] <michaelarestad> Yeah. That's why I'm going to look into other ideas.
[10:22:23] <arschmitz> but i think you have the right idea going
[10:22:48] <arschmitz> michaelarestad: for other ideas open a selectmenu on OSX that does not fit on the screen
[10:22:59] <arschmitz> they do a little down arrow icon below the content
[10:23:18] <michaelarestad> Interesting.
[10:24:25] <arschmitz> thats the only native example im really aware of
[10:25:01] <sfrisk> interesting
[10:25:07] <arschmitz> but its very similar to how your shadow works in that it goes away once you scroll
[10:26:09] <sfrisk> cool
[10:26:12] <noufal> hi
[10:29:34] <sfrisk> Okay, so I'll create an issue about that
[10:30:28] <sfrisk> looks like the BEM and Gumby PRs are waiting for files to be local
[10:31:25] <arschmitz> Yeah iv also been wanting to rething how these tests work
[10:31:30] <arschmitz> was trying to get input from others
[10:31:33] <arschmitz> but it kinda failed
[10:31:38] <sfrisk> Well now is as good as time as any
[10:31:41] <sfrisk> since we're here
[10:32:05] <sfrisk> https://github.com/jquery/css-chassis/issues/60
[10:32:13] <arschmitz> by others i meant that have worked with these sorts of tests but anyway i want to not test scrolling the page
[10:32:19] <arschmitz> i think its a poor test for what we want
[10:32:39] <arschmitz> so im trying to figure out what the best way to test the specific aspects of rendering we are intesested in is
[10:33:05] <arschmitz> these are web driver based tests so the idea is we execute an action and then measure some metric while its taking place
[10:33:59] <arschmitz> My current thinking is instead of initally rendering x components
[10:34:35] <arschmitz> and then scroll
[10:34:35] <arschmitz> to make a test that loads a blank page
[10:34:35] <arschmitz> starts recording
[10:34:38] <arschmitz> and appends x componenets
[10:34:38] <arschmitz> to measure the time it take to draw them
[10:35:07] <arschmitz> a scrolling frame rate is still usefull but i feel like appending would be more meaningful to us
[10:35:44] <arschmitz> maybe even append in a tight loop
[10:35:44] <arschmitz> or append in a tight loop while scrolling lol
[10:36:12] <arschmitz> and then exactly what measurements should we care about
[10:36:26] <arschmitz> thoughts anyone?
[10:37:20] <michaelarestad> Just to clarify, you're trying to identify slow paint and drop in framerate?
[10:38:09] <arschmitz> michaelarestad: the goal is to in a meaningful way measure the rendering performance of a particular componenets markup and css
[10:39:53] <michaelarestad> Got it.
[10:39:53] <arschmitz> scrolling is tangentially related
[10:39:53] <arschmitz> in that poor css / markup can cause poor scrolling performance
[10:39:53] <michaelarestad> I think appending is a solid start. Scrolling is kind of a different test.
[10:39:53] <michaelarestad> Definitely.
[10:39:53] <arschmitz> so its another metric which we should care about
[10:39:54] <sfrisk> yeah
[10:39:54] <sfrisk> definitely
[10:39:54] <michaelarestad> Maybe three tests?
[10:39:54] <michaelarestad> Appending, Scrolling, Appending + scrolling.
[10:39:54] <arschmitz> michaelarestad: sure
[10:40:07] <arschmitz> and here we are specificly talking about doing this for framework comparison
[10:40:13] <michaelarestad> Yep.
[10:40:21] <arschmitz> our priorities will change slightly when we are using it for CI on chassis itself
[10:41:03] <sfrisk> agreed
[10:41:17] <arschmitz> So we have just scrolling already
[10:41:22] <arschmitz> so i think ill start working on appending
[10:41:36] <arschmitz> this is kinda a different beast because the scrolling tests require no js on the page
[10:41:44] <sfrisk> want me to add notes in the issue, or you? Just so that there is a reference
[10:41:49] <michaelarestad> Yep. I think adding these tests to the framework comparison will help us determine which tests are useful and which can be dropped.
[10:41:50] <arschmitz> to do appending will require a page capable of triggering the injection
[10:42:09] <arschmitz> sfrisk: you can :-)
[10:43:53] <sfrisk> (okay, one sec, shall do)
[10:52:51] <sfrisk> I don't think so, but you can correct me if I'm wrong arschmitz
[10:53:04] <arschmitz> hmm?
[10:53:11] <arschmitz> i think i missed something
[10:53:26] <arschmitz> my irc reset for a sec
[10:53:29] <sfrisk> geekman-rohit_ was asking if our linting checks html
[10:53:44] <geekman-rohit_> Yep, what sfrisk said
[10:53:46] <arschmitz> we validate our html
[10:54:08] <arschmitz> https://github.com/jquery/css-chassis/blob/master/Gruntfile.js#L5
[10:54:18] <sfrisk> ah okay
[10:54:22] <geekman-rohit_> Helps! Thanks
[10:55:47] <sfrisk> anything else anyone wanted to bring up before the end?
[10:56:10] <arschmitz> not that we have time for ;-)
[10:56:16] <michaelarestad> not in four minutes, though I just took a look at meter
[10:56:22] <michaelarestad> Will leave comments on the PR.
[10:56:25] <sfrisk> Okay sounds good
[10:56:32] <arschmitz> meter was my thing too
[10:56:43] <sfrisk> everyone review meter when you have a chance!
[10:56:44] <sfrisk> :-)
[10:56:49] <michaelarestad> Also, planning on fixing up tables, then fixing comments.
[10:56:54] <arschmitz> i think this needs discussion before we continue review or work
[10:56:55] <michaelarestad> As per our disucssion.
[10:57:02] <sfrisk> I'll fix the palette stuff so people can start using it
[10:57:02] <arschmitz> meter that is
[10:57:34] <geekman-rohit_> I didn't see any styles done to demo page on view.css...
[10:57:37] <arschmitz> i think there are some fundamental issues we should discuss with meter style in general
[10:57:58] <geekman-rohit_> Regarding meter
[10:58:10] <michaelarestad> The style link is messed up. You can fix it by changing it to `../dist/css/chassis.css`
[10:58:22] <michaelarestad> And yes.
[10:58:34] <sfrisk> I agree
[10:58:43] <arschmitz> like is this part of typography or its own component
[10:58:45] <arschmitz> browser support
[10:58:47] <sfrisk> we do have the issue that <meter> doesn't have full browser support right now.
[10:58:48] <arschmitz> the progress element
[10:59:03] <sfrisk> and if we support <meter> we really should support <progress> as wel
[10:59:04] <sfrisk> l
[10:59:12] <michaelarestad> IMO, meter and progress element should be nearly the same.
[10:59:19] <arschmitz> michaelarestad: i agree
[10:59:23] <sfrisk> I know <meter> was originally in typography
[10:59:30] <sfrisk> I agree as well
[10:59:32] <michaelarestad> Leftover. We can pull it out.
[10:59:50] <michaelarestad> I think the typography demo can use an overhaul anyway.
[10:59:58] <arschmitz> and since it requires js to work in a bunch of our suported browsers for either this should be its own component
[11:00:02] <sfrisk> But I think for a component like that, if we're having that and <progress> it makes sense on the typography page
[11:00:20] <sfrisk> oh, you make a good point arschmitz
[11:00:23] <michaelarestad> arschmitz: Definitely.
[11:00:33] <arschmitz> its not just old ie either
[11:00:38] <arschmitz> its android < 4.4
[11:00:46] <sfrisk> a lot of mobile browsers don't have support
[11:00:56] <arschmitz> and more then that if you are talking meter
[11:01:03] <arschmitz> progressbar is much better supported
[11:01:05] <sfrisk> https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress
[11:01:13] <sfrisk> https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter
[11:01:18] <arschmitz> http://caniuse.com/#feat=progressmeter
[11:01:19] <sfrisk> Meter is totally not supported on IE
[11:01:38] <sfrisk> or Android, IE Mobile, or Safari Mobile
[11:01:39] <michaelarestad> Yeah. It should be its own class-based component.
[11:01:40] <arschmitz> its also not in ios any version
[11:01:53] <michaelarestad> So the styles can be applied to meter, progress, or a custom element.
[11:02:12] <sfrisk> ping noufal
[11:02:57] <sfrisk> so have the coding for <meter> <progress> be generic enough that you could easily apply it to <meter>, or reproduce it with <div> or whatever
[11:03:12] <sfrisk> similar to https://jqueryui.com/progressbar/
[11:03:25] <noufal> I remove it from div
[11:03:36] <arschmitz> i would say this is a big enough change that it should be a new pr
[11:04:14] <arschmitz> noufal: no it should work on a div
[11:04:48] <sfrisk> since <meter> isn't supported in a lot of browsers, we need a div solution for people to use if they need to support IE and mobile browsers
[11:05:02] <noufal> oky
[11:05:32] <noufal> I design a meter tag
[11:06:34] <noufal> using div
[11:06:47] <sfrisk> well it will be class based
[11:07:07] <sfrisk> I would follow a structure similar to what https://jqueryui.com/progressbar/ has
[11:07:25] <sfrisk> since jqueryui and jquery mobile will be handling the js implementatino of it
[11:07:29] <sfrisk> impelentation*
[11:08:07] <arschmitz> we are open to changes
[11:08:18] <arschmitz> however the markup is pretty simple so not sure what you would really change
[11:08:28] <sfrisk> yeah, I mean a div within a div
[11:08:32] <sfrisk> can't get much simpler than that . . .
[11:08:42] <arschmitz> yup
[11:09:04] <noufal> Once I design a meter using div.  It will be easy for :)
[11:09:40] <noufal> me
[11:10:03] <sfrisk> I mean, I think we should have some differences between the two, because semantically <progress> and <meter> are different
[11:10:20] <arschmitz> absolutely
[11:10:20] <noufal> yup
[11:10:25] <arschmitz> but they should be minor
[11:10:26] <michaelarestad> Sure. We can add some sweet light animation to progress.
[11:10:33] <sfrisk> <progress> looks at how much work in a task as been completed, <meter> is displaying a measurement on a known scale
[11:10:45] <noufal> agree with micheal
[11:11:14] <michaelarestad> I have to run. Enjoy some disco bars: http://codepen.io/MichaelArestad/pen/myRvzW
[11:11:25] <sfrisk> weeee
[11:11:37] <sfrisk> yeah, I need to get back to work
[11:11:43] <noufal> If I desgn a meter in shape like a bowl filling with water?
[11:12:05] <geekman-rohit_> Umm i think a bar is better
[11:12:08] <arschmitz> while fun i dont think that would be a thing for chassis
[11:12:17] <geekman-rohit_> Like meter tag
[11:12:23] <noufal> oky
[11:12:29] <sfrisk> I'm going to create an issue to encompass this discussion, that looks at <progress> <meter>, and the JS fallback solution
[11:13:06] <sfrisk> talk to all of you in Chassis!
