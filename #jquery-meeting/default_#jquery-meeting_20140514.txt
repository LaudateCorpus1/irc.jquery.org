[09:00:07] <scott_gonzalez> jzaefferer: arschmitz gnarf kborchers mikesherov rxaviers tj_vantoll
[09:00:17] <rxaviers> Hi there!
[09:00:23] <kborchers> yo
[09:00:32] <arschmitz> hi
[09:00:35] <fnagel> hey
[09:00:50] <tj_vantoll> hey
[09:01:36] <scott_gonzalez> fnagel: I assume nothing to discuss for selectmenu, right?
[09:03:16] <fnagel> no, or perhaps jzaefferer has something?
[09:05:07] <scott_gonzalez> We're working on the simplification of UI packages (as generated by Download Builder): https://github.com/jquery/download.jqueryui.com/issues/207
[09:05:21] <scott_gonzalez> Here's the PR: https://github.com/jquery/download.jqueryui.com/pull/214
[09:05:41] <scott_gonzalez> We're going to keep index.html.
[09:06:03] <scott_gonzalez> I've got a pending question about whether we should include theme.css in addition to the full theme: https://github.com/jquery/download.jqueryui.com/pull/214#issuecomment-43081666
[09:06:08] <scott_gonzalez> Anyone have a preference either way?
[09:07:13] <rxaviers> Including theme.css would result in:
[09:07:24] <rxaviers> jquery-ui.css
[09:07:29] <rxaviers> theme.css
[09:08:12] <rxaviers> jquery-ui.css = structural + theme styles
[09:08:18] <rxaviers> theme.css = theme style
[09:08:48] <tj_vantoll> It's confusing.
[09:08:49] <fnagel> so its the best starting point for own designs, right?
[09:09:07] <rxaviers> I think it's confusing too :-S
[09:09:29] <fnagel> +1
[09:09:32] <arschmitz> we do this in mobile
[09:09:40] <arschmitz> but name them structure and theme
[09:09:46] <arschmitz> so it makes it clear
[09:09:55] <rxaviers> clearer
[09:10:04] <arschmitz> yea
[09:10:11] <tj_vantoll> soâ€¦
[09:10:11] <tj_vantoll> jquery-mobile.css
[09:10:11] <tj_vantoll> structure.css
[09:10:11] <tj_vantoll> theme.css
[09:10:12] <tj_vantoll> ?
[09:10:43] <arschmitz> basicly they are jquery.mobile.css jquery.mobile.theme.css jquery.mobile.structure.css
[09:11:22] <fnagel> jquery.mobile.css = ?
[09:11:29] <scott_gonzalez> theme + structure
[09:11:31] <fnagel> ok
[09:11:49] <arschmitz> tthere is anthor thing for us though
[09:12:11] <arschmitz> our theme download build cant pull in a custom theme via url like ui
[09:12:24] <arschmitz> so you need theme seperate to be able to use a custom theme
[09:13:16] <arschmitz> sorry i mangled that should have been "our download build cant pull in a custom theme via url like ui" ... "so you need them separate to be able to use a custom theme"
[09:13:25] <arschmitz> builder ahh i cant type
[09:13:41] <rxaviers> Is it a problem to always distribute structure and theme separate?
[09:14:09] <rxaviers> jquery-ui.css (structural bundle)
[09:14:15] <scott_gonzalez> We can't do that.
[09:14:23] <scott_gonzalez> We have to ship a concat file.
[09:14:26] <rxaviers> base.css, or ui-lightness.css, ...
[09:14:34] <rxaviers> why?
[09:14:39] <scott_gonzalez> We can't start telling people that they have to include 2 CSS files.
[09:15:28] <arschmitz> anyway for now mobile in builder kinda needs all 3 but this could be solved with new css framework
[09:15:30] <rxaviers> Isn't it expected that users also have their app CSS'es, and therefore they have any sorta concating script
[09:15:44] <scott_gonzalez> no
[09:15:54] <scott_gonzalez> Most users probably don't have a build script.
[09:16:20] <rxaviers> But, I assume most users have other CSS'es.
[09:16:27] <scott_gonzalez> Not our problem.
[09:16:39] <scott_gonzalez> We cannot ship with a requirement of including two CSS files.
[09:16:42] <arschmitz> rxaviers: yes butthey should not HAVE to include 2 just for ui i think is the point
[09:17:02] <tj_vantoll> I'm ok with jquery-ui.css, jquery-ui.structure.css, and jquery-ui.theme.css.
[09:17:42] <tj_vantoll> But I'm also fine with leaving it at jquery-ui.css for simplicity.
[09:19:31] <rxaviers> If we should have them all, jquery-ui.css, jquery-ui.structure.css, and jquery-ui.theme.css seems good to me too.
[09:19:50] <arschmitz> if builder does not include structure mobile wont be able to use it because it wont work with custom themes for us at that point
[09:20:25] <scott_gonzalez> Ok, so let's do all three.
[09:20:49] <rxaviers> ok, I will update 207 PR
[09:20:55] <arschmitz> we could potentially change once there is a new themeroller but at least for now
[09:22:16] <tj_vantoll> Sounds good
[09:24:42] <scott_gonzalez> Next up, signature for _on()
[09:24:44] <scott_gonzalez> https://github.com/jquery/api.jqueryui.com/issues/202#issuecomment-42881035
[09:25:13] <scott_gonzalez> (ignore the comment link)
[09:25:19] <jzaefferer> (I'm here now)
[09:25:24] <scott_gonzalez> Do we want to support selectors here?
[09:26:07] <jzaefferer> We could remove it and see what breaks on the grid branch...
[09:26:22] <scott_gonzalez> this._on( ".foo", { "click .bar": ... } ) seems odd.
[09:26:44] <scott_gonzalez> Well, we don't lose the ability to do anything by saying we only support jQuery objects.
[09:26:48] <arschmitz> there is a super simple workaround  too just this._( $( ".foo" ), ...
[09:26:51] <scott_gonzalez> Because you can just wrapped it in $().
[09:27:04] <scott_gonzalez> Exactly what arschmitz just said :-)
[09:27:09] <arschmitz> and since its fed directly into $( ) anyway there is no functional difference
[09:27:29] <scott_gonzalez> I'm fine leaving the code as is.
[09:27:38] <arschmitz> meaning its not like delegated or anything
[09:27:43] <scott_gonzalez> I just want to make sure we have agreement on the officially supported API.
[09:28:06] <arschmitz> if we leave shouldnt we really check if its a jquery object before putting it in $( ) ?
[09:28:08] <scott_gonzalez> Right, it's the delegation confusion that concerns me.
[09:28:21] <scott_gonzalez> No, we don't validate input types anywhere in jQuery code.
[09:29:02] <scott_gonzalez> We can look at the grid branch and see what's happening though.
[09:29:04] <scott_gonzalez> Let me check.
[09:29:15] <arschmitz> but at that point arent we saying selector is supported and then its not validation its just checking the type ?
[09:30:06] <scott_gonzalez> https://github.com/jzaefferer/jquery-ui-prototypes/blob/grid/ui/jquery.ui.grid.js doens't use _on() at all.
[09:30:23] <scott_gonzalez> No, we're not saying that it's supported.
[09:31:04] <arschmitz> well actually either way shouldnt we check if its a dom node vs a jquery object?
[09:31:14] <scott_gonzalez> no
[09:31:21] <scott_gonzalez> why?
[09:31:38] <arschmitz> to avoide basicly $( $( .foo ) )
[09:32:03] <scott_gonzalez> Not a concern.
[09:32:11] <arschmitz> ok
[09:32:16] <jzaefferer> None of the widgets under grid-spf and grid-editing use _on with a selector either
[09:32:24] <tj_vantoll> I'm against it, because I would interpret the selector as being scoped to the widget's element, when it is not.
[09:32:28] <scott_gonzalez> Checked dataview, dataviewlocal, grid, observable
[09:32:56] <scott_gonzalez> jzaefferer: Did any of them pass anything other than a jQuery object or did you not check?
[09:33:12] <scott_gonzalez> I guess the only other thing would be a DOM element.
[09:33:24] <scott_gonzalez> We might as well just change the implementation to not have that line.
[09:33:48] <scott_gonzalez> Just `delegateElement = element;`
[09:33:58] <arschmitz> im fine either way honestly it makes no difference to what you can do just how you pass the argument
[09:34:26] <scott_gonzalez> Ok, so everyone's in agreement?
[09:34:54] <jzaefferer> There's this in pager.js: this._on( this.options.source, {
[09:35:09] <scott_gonzalez> Link?
[09:35:16] <jzaefferer> Where source looks like it would be a dataview instance
[09:35:37] <scott_gonzalez> Ah, yeah.
[09:35:38] <jzaefferer> https://github.com/jzaefferer/jquery-ui-prototypes/blob/grid/grid-spf/pager.js#L18
[09:35:42] <scott_gonzalez> That's what we need the wrapping for.
[09:35:49] <scott_gonzalez> non-DOM widgets
[09:36:58] <jzaefferer> I still like the dataview API for paging, filtering and sorting, but the data binding still seems half-baked at best. I'm not sure if we should worry about that ever getting anywhere
[09:37:17] <jzaefferer> Not that data binding was generally solved elsewhere
[09:38:13] <scott_gonzalez> Ok, let's just keep the code as is, remove the comment, leave the docs.
[09:38:53] <jzaefferer> leave => leave as they are?
[09:39:02] <scott_gonzalez> yeah
[09:39:09] <scott_gonzalez> The docs say it accepts jQuery objects only.
[09:39:21] <tj_vantoll> :thumbs up:
[09:39:32] <arschmitz> sounds good to me
[09:39:42] <fnagel> +1
[09:40:16] <scott_gonzalez> Ok, I'll take care of that right now.
[09:41:21] <scott_gonzalez> done
[09:41:34] <scott_gonzalez> arschmitz: checkbox focus outline?
[09:41:56] <scott_gonzalez> Did you hear back from Chris?
[09:42:52] <arschmitz> i did
[09:43:09] <arschmitz> he said his best suggestion is to add a class that does nothing
[09:43:15] <arschmitz> like ui-focus-outline
[09:43:23] <arschmitz> and let people style against that if they want
[09:43:46] <scott_gonzalez> hmm...
[09:43:55] <scott_gonzalez> That's essentially what we have today, right?
[09:44:01] <arschmitz> pretty much
[09:44:03] <scott_gonzalez> Just add a custom rule to .ui-state-focus
[09:44:03] <tj_vantoll> yeah
[09:44:08] <arschmitz> yeah
[09:44:50] <jzaefferer> So by default it will still not be possible to tell if a checkbox has focus or not?
[09:45:05] <scott_gonzalez> Yeah, doens't seem the best.
[09:45:11] <jzaefferer> No, its awful
[09:45:28] <tj_vantoll> .ui-state-focus + input[type=checkbox] ?
[09:46:31] <scott_gonzalez> The problem is that we can't style it the same as a native outline, right?
[09:46:32] <jzaefferer> tj_vantoll: http://view.jqueryui.com/master/demos/button/checkbox.html toggle the first one, then focus/blur, there's no indicator for the active button having focus or not
[09:46:51] <jzaefferer> (if you were looking for clarification on the underlying problem)
[09:47:01] <tj_vantoll> I was
[09:48:11] <arschmitz> scott_gonzalez: right normally the indication of focus on it would be the outline
[09:48:24] <jzaefferer> jQuery Mobile has a blue focus outline, though I'm not sure if that's native or custom: http://demos.jquerymobile.com/1.4.2/checkboxradio-checkbox/
[09:48:47] <arschmitz> jzaefferer: its native
[09:49:36] <tj_vantoll> Really?
[09:49:41] <tj_vantoll> It's blue in Firefox too.
[09:50:04] <tj_vantoll> And Firefox does the dotted border by default.
[09:50:57] <jzaefferer> yeah, looks like a blue box-shadow to me, added by the ui-focus class
[09:51:05] <arschmitz> yup
[09:51:07] <jzaefferer> the label has no tab-index
[09:51:07] <arschmitz> its not native
[09:51:34] <arschmitz> the label does not get focus the input does which is hidden
[09:51:34] <jzaefferer> that was a quick turn around
[09:51:50] <arschmitz> yeah i thought we got rid of it i was wrong when i checked
[09:51:57] <arschmitz> i thought it changed in 1.4
[09:52:36] <jzaefferer> Is uGoMobi around? Are there any plans to change that?
[09:52:46] <uGoMobi> I am here
[09:53:10] <uGoMobi> change to native focus style?
[09:53:30] <arschmitz> oh i was thinking of setting a custom focus class we deprecated that
[09:53:41] <uGoMobi> https://github.com/jquery/jquery-mobile/blob/master/css/themes/default/jquery.mobile.theme.css#L387
[09:54:24] <arschmitz> uGoMobi: the question basicly is should the theme have a custom focus outline at all
[09:54:59] <scott_gonzalez> Well, the real question is how do we indicate that a checkbox has focus.
[09:55:58] <tj_vantoll> Native focus is ideal, but we can only do that in WebKit-based browsers, so I think we need to apply *something* to .ui-state-focus.
[09:56:38] <uGoMobi> I don't think there is anything wrong with customizing the style, but have to make sure that the style is always applied when native focus style would have been applied
[09:56:38] <scott_gonzalez> The problem with applying an outline rule to .ui-state-focus is that it would change the focus styling for everything, which would seem strange.
[09:56:50] <scott_gonzalez> ^
[09:57:02] <arschmitz> right scott_gonzalez wasent it that way before and people complained and you changed it?
[09:57:16] <scott_gonzalez> That's necessary for it to not look out of place, but it's also pretty invasive for a UI library.
[09:57:31] <scott_gonzalez> No, we never did custom outlines.
[09:57:53] <arschmitz> oh ok
[09:57:58] <scott_gonzalez> Some widgets used to remove outlines and people complained when we stopped doing that.
[09:58:07] <scott_gonzalez> Like when we stopped removing outlines on tabs.
[09:58:08] <tj_vantoll> We can do something specific to checkboxes / radio buttons.
[09:58:12] <arschmitz> oh ok
[09:59:05] <arschmitz> tj_vantoll: the problem is what indicates focus besides focus outline? and if we do focus outline for them only it will look out of place with other elements / widgets
[09:59:42] <scott_gonzalez> We'll need to continue this in -dev. Next meeting is about to start.
[10:00:48] <scott_gonzalez> Maybe Scott Jehl will have a suggestion?
[10:01:18] <tj_vantoll> arschmitz: Maybe a border? I agree something other than an outline is not ideal, but I can't think of a better idea.
[10:01:30] <uGoMobi> I will look into it
[10:01:46] <arschmitz> tj_vantoll: we could try it i agree something is needed i just have no idea what
[10:02:03] <tj_vantoll> ditto
[10:02:04] <uGoMobi> right now I use border and outline 0 in CSS framework as well
[10:03:01] <scott_gonzalez> yikes
[10:03:57] <arschmitz> maybe we could on elements that cant get the focus outline like checkbox just copy the webkit one its not ideal but its the closes to native everywhere we can get?
[10:04:55] <arschmitz> on ie / firefox you get an iditcation thats at least still the most likely thing to be familier to the user
[10:07:46] <jzaefferer> Moving that to #jqueryui-dev
