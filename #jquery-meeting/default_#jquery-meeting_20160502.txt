[12:03:18] <DaveMethvin> yay
[12:03:26] <DaveMethvin> https://docs.google.com/document/d/1uhcW9_TlSwD8JnO1_HNnSYJAriTK9WYZ8uQNDvtAAhA/edit
[12:04:02] <DaveMethvin> gibson042 markelog timmywil m_gol- etc
[12:04:50] <DaveMethvin> sounded like the WP guys would really like to get a fix for those table issues
[12:05:14] <m_gol> all targetting 1.x only
[12:05:15] <DaveMethvin> and i can have a new Migrate ready that should fix the problem with bare # in selectors
[12:05:28] <timmywil> weird. I couldn't see your messages in the web client.
[12:05:30] <m_gol> but we may release 2.2.4 as well as it has incorrect slim files in dist/
[12:05:47] <m_gol> timmywil: you were disconnected
[12:05:51] <DaveMethvin> yeah it would be good to have a "clean" release
[12:05:59] <timmywil> not according to my client
[12:06:09] <timmywil> dumb
[12:06:11] <DaveMethvin> my client is innocent!
[12:06:18] <timmywil> anyway
[12:06:37] <timmywil> I've almost got a PR ready for 1.12.4
[12:06:46] <timmywil> and yea, we'll release 2.2.4 without slim
[12:07:04] <m_gol> timmywil: for both issues?
[12:07:15] <timmywil> m_gol: yes
[12:07:20] <m_gol> k
[12:08:22] <DaveMethvin> so as far as schedule, can we get the .4s out this week?
[12:09:03] <timmywil> on the upgrade guide, we've still got the ALL-CAPS reminders in the show/hide section
[12:09:10] <timmywil> DaveMethvin: yes
[12:09:17] <gibson042> I think those should just be pulled
[12:09:24] <timmywil> gibson042: agreed
[12:09:26] <DaveMethvin> as soon as we decide on jbedard's pr it should be pretty easy to do the upgrade guide and migrate parts of that, I can do them
[12:09:45] <DaveMethvin> i am still not completely clear on the cases that people may encounter that fail
[12:09:56] <DaveMethvin> and we have the open issue on Migrate to detect them :)
[12:10:12] <DaveMethvin> if it's sufficiently edge-casey we can ship without it
[12:10:22] <gibson042> what's not covered by "Any code expecting hidden elements to be reshown with their previous computed display styles, or disconnected elements to treated as hidden"?
[12:10:32] <DaveMethvin> a code example or two
[12:10:41] <gibson042> I guess I'll find out with the migrate PR
[12:11:12] <DaveMethvin> i just was at a loss to do that PR because short of running both and looking for a difference i wasn't sure how to proceed
[12:11:15] <timmywil> there are fewer since the revert, but one example is has to do with responsive layouts.
[12:11:40] <gibson042> yeah, that's what I'm going to do
[12:11:55] <gibson042> the 2.x test suite will reveal those cases
[12:12:01] <DaveMethvin> good!
[12:12:03] <timmywil> regardless, we don't need those reminders on the public page
[12:12:09] <DaveMethvin> definitely  not
[12:12:12] <gibson042> +1
[12:12:28] <DaveMethvin> for the beta I'm okay with it, just dont' want to forget
[12:12:34] <timmywil> right
[12:12:40] <timmywil> rc, right?
[12:13:13] <DaveMethvin> we've changed a lot ... will we need to make other changes after this?
[12:13:29] <DaveMethvin> tbh we know it won't matter until 3.0.0 is released :)
[12:13:37] <DaveMethvin> so we can call this an rc
[12:13:42] <timmywil> I think of this as a release candidate, where any further features will get pushed to 3.1.0
[12:13:56] <DaveMethvin> cool
[12:14:07] <timmywil> but we need to land gibson042's PR first
[12:14:34] <timmywil> are we okay with that? #3029
[12:14:39] <timmywil> https://github.com/jquery/jquery/issues/3029
[12:15:01] <DaveMethvin> yes we pretty much have to unless we're gonna put more stuff in Migrate :)
[12:15:08] <timmywil> I mean https://github.com/jquery/jquery/pull/3059
[12:15:22] <DaveMethvin> yes
[12:15:28] <DaveMethvin> we can add the two apis later
[12:15:37] <DaveMethvin> but this is the right logical separation
[12:15:55] <gibson042> glad to see that :D
[12:15:55] <timmywil> that's the last blocker
[12:16:10] <timmywil> we could potentially release 3.0 rc this week
[12:16:15] * timmywil waits for uproar
[12:16:29] <DaveMethvin> YAY
[12:16:47] <DaveMethvin> let em roar any direction they want
[12:17:10] <DaveMethvin> the last big decision is the jbedard PR
[12:17:14] <m_gol> whatever we want to land from https://github.com/jquery/jquery/pull/2860, I think it should land before the RC
[12:17:16] <timmywil> was just about to ask
[12:17:17] <m_gol> yup
[12:17:20] <DaveMethvin> are we going whole enchilada?
[12:17:38] <DaveMethvin> if we have Migrate support I'm okay with that
[12:17:57] <DaveMethvin> jbedard outlined the code and i can drive it home if needed
[12:18:38] <timmywil> drive it
[12:18:38] <m_gol> I haven't had time to look closer, does it: 1) makes everything getters, 2) adds addProp for adding hooks?
[12:19:01] <DaveMethvin> yeah basically
[12:19:15] <m_gol> sounds risky but I so want this to land :D
[12:19:17] <DaveMethvin> and all on the Event prototype rather than separate hooks by name
[12:19:33] <DaveMethvin> i do like it, shoudl make things simpler and smaller
[12:20:25] <m_gol> btw, +1 to naming it RC, it may act as a psychological barrier to not add new breaking changes ;)
[12:20:31] <timmywil> I guess addProp needs tests, but existing tests cover the rest, right?
[12:20:59] <gibson042> I don't want to consider jQuery.event.addProperty public API yet, because there are other options to explore
[12:21:12] <m_gol> addProp could land in 3.1 if it's not finished soon, couldn't it?
[12:21:31] <timmywil> let's take addProp off jQuery then
[12:21:47] <m_gol> it can be a private function for now
[12:21:53] <DaveMethvin> we prob should move it to jQuery.addEventProp or something
[12:22:06] <timmywil> I agree we can publicize in 3.1
[12:22:11] <timmywil> for now, it can be a private helper
[12:22:23] <m_gol> right, I'd rather not expose more undocumented APIs
[12:22:31] <m_gol> having spent some time hiding existing ones :)
[12:22:53] <gibson042> to clarify, I think it *must* be accessible from jQuery.event
[12:22:53] <DaveMethvin> if we're removing propHooks we need something to translate the old stuff to new, which means we'll need some API Migrate can use
[12:23:04] <gibson042> otherwise Migrate won't be able to restore fixHooks
[12:23:10] <DaveMethvin> yeah what he said !
[12:23:10] <m_gol> ah, ok
[12:23:15] <DaveMethvin> :)
[12:23:30] <gibson042> we just don't document it
[12:23:34] <m_gol> sounds fine
[12:23:40] <DaveMethvin> yeah what we have is fine with me for now
[12:23:43] <gibson042> and we commit to a public API in 3.1
[12:23:58] <DaveMethvin> and we shoudl definitely have jbedard doing more of his magic
[12:24:09] <m_gol> how about... _addProp?
[12:24:10] * m_gol hides
[12:24:17] <gibson042> lol
[12:24:29] <DaveMethvin> gotta double underscore it
[12:24:45] <timmywil> why does migrate need addProp again?
[12:24:56] <m_gol> dunder addProp
[12:24:58] <gibson042> to restore jQuery.event.fixHooks
[12:25:04] <DaveMethvin> it will translate the old propHooks to the new Event.prototype hooks
[12:25:10] <DaveMethvin> fixHooks
[12:25:27] <DaveMethvin> like that plugin you wrote and forgot about
[12:25:40] <DaveMethvin> glad it's not just me who writes code and then forgot they wrote it
[12:25:55] <DaveMethvin> i've written some stuff twice like that
[12:25:57] <DaveMethvin> :)
[12:27:45] <DaveMethvin> sorry but I have to run early today, but i have time this week so just decide on stuff and make tix or put it in the agenda here or whatever
[12:28:04] <m_gol> I'll be in USA this week so don't expect much from me :)
[12:28:39] <timmywil> I guess I'm having trouble envisioning the restoration with the use of addProp. How would you use it to support pushing new props to the props array? Seems like you'll need to restore the old jQuery.event.fix in migrate instead.
[12:29:20] <gibson042> timmywil: https://github.com/jquery/jquery/pull/2860#issuecomment-215652293
[12:29:49] <timmywil> well that answers that
[12:29:55] <gibson042> the replacement `jQuery.event.fix` can call addProp
[12:30:45] <timmywil> ok, well, that's about everything I think
[12:31:33] <m_gol> one small question
[12:31:34] <timmywil> I'll contact Bedard about inviting him to the team
[12:31:38] <m_gol> :)
[12:32:30] <m_gol> is it OK to assume we can drop Node versions no longer supported by upstream from Travis?
[12:32:46] <m_gol> we currently test on 0.10, 0.12, 4, 5 & 6. Node 5 will lose support in a month or two
[12:32:53] <m_gol> can we drop it from Travis then?
[12:33:03] <timmywil> node 5? I would guess so.
[12:33:09] <m_gol> k
[12:33:15] <timmywil> 6 is kinda on that branch
[12:33:29] <m_gol> 0.10 & 0.12 may require more careful consideration since more people use it & they were on the old process
[12:33:50] <timmywil> I think of 0.10, 0.12, 4.x and 5-6+ as the 4 nodes to support
[12:33:58] <m_gol> 4 is an LTS, 6 will be an LTS so they'll be supported for a long time, Node 5 EOL's soon
[12:34:13] <timmywil> 6 will be LTS? That'd be nice
[12:34:17] <m_gol> the image at the end of https://github.com/nodejs/LTS pictures it pretty well
[12:34:24] <m_gol> every even release will be an LTS
[12:34:30] <m_gol> once a year
[12:34:33] <timmywil> ah ok
[12:35:16] <timmywil> thanks all. Tying multiple bows this week.
