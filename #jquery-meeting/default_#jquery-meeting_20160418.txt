[12:02:19] <timmywil> DaveMethvin, m_gol, markelog_ https://docs.google.com/document/d/1uhcW9_TlSwD8JnO1_HNnSYJAriTK9WYZ8uQNDvtAAhA/edit
[12:02:23] <timmywil> da meetings
[12:03:03] <timmywil> let's continue on https://github.com/jquery/jquery/issues/2824
[12:03:03] <markelog_> hey-hey
[12:03:11] <m_gol> present
[12:04:19] <markelog_> basically, i think we should do something to prevent this happening in the future
[12:04:46] <m_gol> I think it's impossible to avoid it if WordPress continues to auto-upgrade people's jQuery versions
[12:04:47] <DaveMethvin> here
[12:04:53] <timmywil> m_gol: +1
[12:04:57] <timmywil> that's the problem
[12:05:09] <DaveMethvin> ok but that's not the same ticket, i think we should close that one and open a new one or discuss process
[12:05:16] <markelog_> it is not just wordpress, it is one the most popular issue
[12:05:42] <markelog_> we had like dozen of them
[12:05:43] <timmywil> yea, we can close this one. I think we all agree we're not reverting.
[12:05:54] <m_gol> markelog: depends on what you mean by "this" :)
[12:06:04] <markelog_> to clarify - why not?
[12:06:05] <m_gol> I thought you mean the WordPress breakage
[12:06:15] <m_gol> s/mean/meant/
[12:06:15] <b-ot> Correction, <m_gol> I thought you meant the WordPress breakage
[12:06:21] <markelog_> m_gol: such breakages
[12:06:26] <timmywil> for reasons
[12:06:40] <m_gol> breakages like the WordPress one require auto-updating people jQueries
[12:06:46] <m_gol> I hope that's not a common pattern
[12:06:57] <markelog_> auto-update or not
[12:07:16] <markelog_> you notice such bugs only when you update jquery, possibly in production
[12:07:18] <m_gol> otherwise it's more of "I can't upgrade jQuery because it breaks this plugin I use" which isn't end of the world
[12:07:23] <DaveMethvin> i do think we need to talk with the wp people but the solution can't be to never change our api, that's why i raised the concern about 3.0
[12:07:34] <markelog_> DaveMethvin: agreed
[12:07:41] <m_gol> +1
[12:07:52] <DaveMethvin> 1.x/2.x is basically completely stable now as is, we don't plan to add any changes, right?
[12:07:55] <timmywil> I'm comfortable with the normal update problem.
[12:07:59] <markelog_> but if there is "fix" which breaks such amount of sites
[12:07:59] <DaveMethvin> just bug fixes
[12:08:06] <markelog_> it shouldn't be released with patch version
[12:08:27] <timmywil> it depends on whether we consider it a bug fix or behavior change
[12:08:34] <timmywil> I consider it a bug fix
[12:08:46] <markelog_> we don't need to follow semver, we can augmented it
[12:09:03] <markelog_> many projects do it
[12:09:10] <markelog_> like, cli tools
[12:09:11] <DaveMethvin> we "broke" it in january and i dont' think the volume of complaints has been high until the wp update
[12:09:27] <timmywil> we've had complaints, but they were acceptable
[12:09:35] <markelog_> as i said, it is one of the most popular issues, since we released
[12:09:53] <markelog_> don't know what kind of verification we need more then that
[12:09:53] <DaveMethvin> and as i understand it the wp ecosystem is updating to fix the problems that arose
[12:10:19] <DaveMethvin> so if we reverted we'd just be making everyone for the past 4 months go through this for nothing
[12:10:53] <timmywil> It seems to be getting addressed in the ecosystem. I'd like to see that continue, which is mostly why I don't want to revert.
[12:10:54] <markelog_> on the other hand, if we revert it, no one would get that bug
[12:11:02] <gibson042> hi; sorry I'm late
[12:11:04] <gibson042> catching up now
[12:11:07] <DaveMethvin> anyway, i would prefer to not focus on the old stuff and figure out what we do for 3.0
[12:11:12] <markelog_> if we don't
[12:11:28] <markelog_> we will still be receiving that issue
[12:11:42] <markelog_> like John said
[12:11:54] <markelog_> if there is one bug filed, there is 100 users facing it
[12:12:01] <markelog_> we had like dozen
[12:12:30] <markelog_> for me, acceptable action would be to change our policy
[12:12:35] <DaveMethvin> in that case we should revert the animation change for 3.0 b/c right now that affects a LOT more than this change
[12:12:50] <DaveMethvin> jquery easing is like 10% of all jquery
[12:12:52] <markelog_> that would be freezing the api
[12:13:33] <markelog_> i think we can do such updates in major
[12:13:33] <DaveMethvin> again, the reason this blew up last week is because people who didn't WANT to upgrade their jquery got it upgraded without them knowing
[12:13:37] <DaveMethvin> and it broke their sites
[12:13:38] <markelog_> with deprecation notice
[12:13:40] <markelog_> but yes
[12:13:47] <markelog_> i would revert that commit too
[12:13:51] <markelog_> deprecated
[12:13:56] <markelog_> those arguments
[12:14:04] <markelog_> and consider removing them in 4.0
[12:14:08] <markelog_> or other major
[12:14:23] <timmywil> how involved would that revert be?
[12:14:25] <DaveMethvin> let's get this one out of the way first
[12:14:39] <markelog_> not really, by my estimation
[12:14:45] <DaveMethvin> how many of us want to revert the [href=#] change?
[12:14:48] <DaveMethvin> i don't
[12:14:55] <markelog_> i'm neutral
[12:14:59] <DaveMethvin> i think we're past the worst of it now
[12:15:05] <timmywil> I don't
[12:15:11] <markelog_> but what i don't want
[12:15:19] <markelog_> is for this things happen in the future
[12:15:31] <DaveMethvin> agreed but you're ahead of the question
[12:15:40] <markelog_> ok, waiting :)
[12:15:42] <DaveMethvin> so it sounds like we don't want to revert this one, right?
[12:15:45] <m_gol> I don't want to revert it at this point
[12:15:47] <DaveMethvin> timmywil?
[12:15:53] <timmywil> right
[12:15:55] <DaveMethvin> yay
[12:16:08] <timmywil> what about the effects args
[12:16:20] <DaveMethvin> i still haven't been able to reach gsmith
[12:16:21] <timmywil> it is major, but did we deprecate those beforehand?
[12:16:31] <timmywil> DaveMethvin: and I'm concerned about that
[12:16:33] <markelog_> so we not gonna do anything about selector thing?
[12:16:44] <DaveMethvin> right, nothing there
[12:16:48] <timmywil> markelog_: not in code
[12:16:49] <markelog_> okay
[12:16:54] <markelog_> where then?
[12:17:08] <timmywil> I'll get into the WP slack group
[12:17:10] <timmywil> that's new
[12:17:29] <DaveMethvin> i can put something in migrate if we're willing to let pathological cases die
[12:17:34] <DaveMethvin> i am
[12:17:47] <markelog_> what about policy changes?
[12:17:55] <DaveMethvin> that's a third point
[12:17:58] <DaveMethvin> so let's finish 2
[12:18:12] <DaveMethvin> should I try to update migrate?
[12:18:22] <markelog_> we tried before as i recall
[12:18:34] <markelog_> but if you can, that would be cool
[12:18:40] <timmywil> I don't think we need policy changes. We already evaluate each breakage and decide whether it's better to wait.
[12:18:40] <m_gol> could we just update the very, very simple selector handling
[12:18:43] <DaveMethvin> no, gibson042 just rightly pointed out that it could break valid cases but
[12:18:53] <DaveMethvin> i'm okay with that b/c i think they're rare
[12:18:57] <m_gol> like NON_QUOTE[href=#ASCII_LETTERS_ONLY]
[12:18:59] <DaveMethvin> and they will get a warning just before it
[12:19:07] <markelog_> timmywil: our policy, is pretty clear, at the moment, those are not considered as breakage
[12:19:32] <DaveMethvin> ok so on point 2 i will try a fix in migrate ... making a ticket
[12:19:32] <m_gol> I'd just look at popular plugins that broke and try to narrow down the very simple cases that we can definitely "upgrade" to the correct version
[12:19:34] <markelog_> rare yeah, but painful :/
[12:19:38] <timmywil> markelog_: right, but if someone makes a good argument, we will still consider it and possibly push it to minor/major
[12:19:47] <timmywil> I don't think that needs to be in by-laws
[12:20:37] <timmywil> markelog_: it may be semver+, but policies won't help us predict everything
[12:20:42] <markelog_> there was a lot of arguments in that ticket though
[12:21:13] <timmywil> I see semver as a guideline. We'll have to use our own judgment on whether or not to include something.
[12:21:24] <markelog_> same here
[12:21:48] <DaveMethvin> it's worth having the code reviews look at such things, but checking against all invalid inputs is madness
[12:22:15] <markelog_> not really, there is even a practise like that
[12:22:20] <markelog_> and tools for it though
[12:22:23] <DaveMethvin> going forward it may not be as much of a problem anyway, we are done with 1.x/2.x
[12:22:24] <gibson042> DaveMethvin: we can certainly limit the rewriting to known-safe cases (e.g., single identifier followed by href attribute selector)
[12:22:30] <markelog_> not sure with qunit integration, but we can try it out
[12:22:40] <m_gol> gibson042: yeah, that's what I said :)
[12:22:48] <DaveMethvin> you both said it so well :)
[12:23:13] <markelog_> before, as i remember, jquery tried to noop incorrect input
[12:23:20] <markelog_> now we throwinig
[12:23:24] <markelog_> which is the law now
[12:23:48] <DaveMethvin> throwing is just a consequence of invalid input sometimes, we're not trying to throw
[12:24:10] <timmywil> jQuery has always said garbage in garbage out
[12:24:11] <markelog_> well, that ticket is contradicts to this
[12:24:18] <markelog_> we knew it would throw
[12:24:20] <markelog_> and did it anyway
[12:24:24] <gibson042> but there was a change, in that we are no longer actively trying to hide (i.e., no-op) failures
[12:24:35] <markelog_> gibson042: exactly
[12:24:46] <timmywil> true, but I think that's good
[12:24:51] <gibson042> I agree
[12:25:06] <markelog_> i think this would be a consequence
[12:25:09] <gibson042> but markelog_ is right in identifying it as a policy change
[12:25:33] <gibson042> since around 1.9, I would guess
[12:25:44] <DaveMethvin> the problem we face is that there is a TON of bad jQuery code out there, and setups like WP are collections of jQuery code written over many years that all depend on quirks of different jQuery versions
[12:26:04] <DaveMethvin> that site i linked is using Thickbox from 2007!
[12:26:17] <timmywil> wow, forgot about thickbox
[12:26:19] <markelog_> yeah, unfortunately this is what are we dealing with
[12:26:20] <DaveMethvin> plus jQuery UI from 2 years ago, plus several other plugins, etc
[12:27:04] <DaveMethvin> i think the main thing is that we are better at laying out all the changes so that downstream systems like WP can help in finding problem code
[12:27:32] <DaveMethvin> but 3.0 is gonna be a huge change, i'd be surprised if it makes it to wp 18 months from release
[12:27:35] <timmywil> the problem is lack of dependency management for jquery plugins. If everything was managed via npm and each plugin specified which jquery versions it supports, users would know when to or not to upgrade.
[12:27:37] <gibson042> I would propose that we stick with the general policy of "undocumented inputs result in unpredictable output", but should consider holding exception-introducing changes for major releases on a case-by-case basis
[12:27:40] <DaveMethvin> timmywil: YES
[12:27:54] <DaveMethvin> gibson042: agreed
[12:28:02] <markelog_> gibson042: agreed
[12:28:16] <DaveMethvin> we'll be more sensitive to this but we still have no way to know the severity of any particular change
[12:28:34] <DaveMethvin> the frustrating thing here is that it blew up 4 months after release because of a WP update
[12:28:43] <markelog_> i would consider throwing as the last resort
[12:28:46] <DaveMethvin> we had no idea that a bunch of themes broke
[12:29:03] <DaveMethvin> markelog_: that means testing "invalid" inputs doesn't it?
[12:29:11] <DaveMethvin> in which case we have unit tests and we need to support that
[12:29:17] <markelog_> that would be ideal, but not essential
[12:29:38] <timmywil> I disagree. If it's tested, it's not invalid input.
[12:29:50] <DaveMethvin> that's the problem :)
[12:29:52] <gibson042> we just need to be on the lookout for PRs that introduce exceptions
[12:29:54] <markelog_> matter of perception
[12:30:00] <timmywil> well, yea
[12:30:03] <gibson042> I don't think assertions are necessary
[12:30:12] <timmywil> gibson042: +1
[12:30:12] <markelog_> testing invalid output is common practise, just not that mainstream in the js world
[12:30:37] <markelog_> to clarify: i'm not saying we should do that
[12:30:46] <markelog_> i'm saying it would be ideal
[12:31:01] <markelog_> i'm saying we should consider throwing as the last resort
[12:31:07] <timmywil> maybe you're referring to error handling? I don't think anyone tries to predict every possible invalid input (you can't). People do crazy things.
[12:31:16] <markelog_> the do :)
[12:31:26] <markelog_> i can send you guys links after the meeting
[12:31:26] <DaveMethvin> ok so our resolution here is to be more careful with code changes that may introduce exceptions on invalid input, during code review, but not have a policy to test for invalid input
[12:31:39] <markelog_> there is whole practise and paradigms for that
[12:31:43] <DaveMethvin> is that a good summary?
[12:31:45] <timmywil> DaveMethvin: yes
[12:31:50] <gibson042> yes
[12:32:06] <markelog_> i would suggest to put that in the our guidelines
[12:32:13] <DaveMethvin> ok, that would have definitely come into play with things like $(window).offset()
[12:32:22] <DaveMethvin> which is okay i think
[12:32:33] <markelog_> exactly, we don't know
[12:32:37] <DaveMethvin> we've noted that one in the 3.0 notes
[12:32:39] <markelog_> we assuming
[12:32:41] <DaveMethvin> and it's in migrate
[12:32:48] <timmywil> it doesn't mean we're not going to introduce exceptions, but we can make sure people have warning.
[12:32:55] <markelog_> such changes in major are okay though
[12:32:56] <markelog_> i think
[12:32:57] <DaveMethvin> ryep
[12:32:59] <gibson042> agreed
[12:33:03] <markelog_> yeah
[12:33:20] <gibson042> the fuss here was introducing them in a minor release
[12:33:26] <markelog_> exactly!
[12:33:50] <gibson042> which is permissible by semver, but maybe we should have waited anyway
[12:34:22] <markelog_> yeah
[12:34:34] <markelog_> i think no one could predict that
[12:34:49] <markelog_> seemed as a right thing to do
[12:35:11] <gibson042> sure
[12:35:20] <markelog_> so i would like to put that in the docs, "last resort" thing
[12:35:25] <markelog_> timmywil: i guess you disagree?
[12:35:31] <DaveMethvin> which docs?
[12:35:36] <markelog_> wiki docs
[12:35:38] <markelog_> sec
[12:35:48] <markelog_> https://github.com/jquery/jquery/wiki/API-design-guidelines
[12:36:10] <timmywil> yea, we can amend the "even minor patches" part
[12:36:16] <gibson042> the new policy just requires deliberation on that point (e.g., "this fix introduces exceptions from input like `[href*=#]`, do we want to wait for a major release?")
[12:36:30] <gibson042> where previously it was largely ignored
[12:36:48] <DaveMethvin> yeah just a minor edit there should be fine
[12:37:01] <DaveMethvin> tell people to stop using jQuery so much!
[12:37:07] <markelog_> haah
[12:37:10] <DaveMethvin> don't they know they might not need it?
[12:37:40] <markelog_> would that be okay, if figure out the phrasing after the meeting?
[12:38:09] <gibson042> yes
[12:38:25] <markelog_> cool
[12:38:26] <timmywil> I updated. Feel free to edit.
[12:39:06] <m_gol> I added some things to the agenda
[12:39:21] <markelog_> okay, so i would put conclusion of this discussion to the ticket
[12:39:39] <timmywil> yup, so eslint
[12:39:50] <timmywil> I say switch
[12:39:56] <markelog_> to show, that we approach to this seriously and staff
[12:40:02] <m_gol> it doesn't seem to make much sense to use JSHint + ESLint
[12:40:14] <m_gol> so IMO we should aim at a full switch to ESLint
[12:40:15] <timmywil> markelog_: agreed
[12:40:18] <DaveMethvin> yeah, not priority but let's get there when we can
[12:40:27] <markelog_> I'm on it
[12:40:31] <DaveMethvin> gives you a big project to test on markelog_ :)
[12:40:39] <markelog_> haha
[12:40:46] <timmywil> might want a eslint-config-jquery first
[12:41:06] <markelog_> timmywil: i'm doing that right now
[12:41:09] <DaveMethvin> which reminds me
[12:41:10] <timmywil> which can be on the jquery org, I think
[12:41:11] <m_gol> :)
[12:41:23] <markelog_> timmywil: would you mind creating a repo?
[12:41:24] <DaveMethvin> are we going to take the space out of } );
[12:41:28] <m_gol> hahaha
[12:41:32] <markelog_> :)))
[12:41:39] <m_gol> I still vote no :P
[12:42:01] <markelog_> hate so much spacing
[12:42:13] <m_gol> as much as I don't like excessive spaces I still think putting them in some places & omitting in others will only be confusing
[12:42:19] <DaveMethvin> something about that case especially, and nested parens
[12:42:21] <m_gol> but I don't want to argue about it too much
[12:42:37] <DaveMethvin> yeah i think we have bigger issues to discuss
[12:42:39] <timmywil> markelog_: done and added core team https://github.com/jquery/eslint-config-jquery
[12:42:46] <markelog_> but, what more irritating, that gibson042 put so much work to fix this in jscs and now it looks like we would need throw that away
[12:43:15] <gibson042> we'll get it in ESLint too
[12:43:17] <markelog_> timmywil: cool! Thanks
[12:43:30] <markelog_> yeeeey!
[12:43:40] <markelog_> so i would defiantly change that rule
[12:43:56] <gibson042> https://github.com/eslint/eslint/issues/4689
[12:44:00] <markelog_> although, we would need to agree on that across projects
[12:44:09] <gibson042> specifically https://github.com/eslint/eslint/issues/4689#issuecomment-210123742
[12:44:23] <markelog_> wow, coolsies
[12:44:59] <markelog_> i think we could discuss this more, when release new and shiny 3.0
[12:45:07] <timmywil> markelog_: +1
[12:45:11] <m_gol> sounds good
[12:45:17] <DaveMethvin> nice!
[12:45:22] <m_gol> so, this IE 11 issue...
[12:45:26] <DaveMethvin> grrr
[12:45:28] <markelog_> m_gol: wait!
[12:45:35] <markelog_> so what are we gonna do about effects signature?
[12:45:39] <m_gol> ah, right
[12:45:51] <markelog_> it seems to me, that the right move would be to just revert it
[12:45:51] <timmywil> we didn't deprecate beforehand right?
[12:45:57] <DaveMethvin> for 3.0, i think we may want to revert it
[12:45:59] <markelog_> we didn't even document it
[12:46:03] <m_gol> yeah
[12:46:07] <timmywil> well, I don't want to revert any refactoring that might have gone with that change
[12:46:13] <timmywil> but i haven't seen the commit
[12:46:13] <m_gol> it was completely internal, officially
[12:46:16] <DaveMethvin> i think it was pretty isolated
[12:46:23] <DaveMethvin> just a bunch of extra args that were related
[12:46:24] <m_gol> the change was pretty basic, I'd say
[12:46:28] <timmywil> ok
[12:46:28] <markelog_> yeah, could do that tomorrow
[12:46:36] <timmywil> then yes, I vote revert
[12:46:51] <markelog_> safety first :)
[12:46:53] <m_gol> do we have jQuery.easing documented on the jquery-3 branch on api.jquery.com?
[12:46:55] <DaveMethvin> that gives us until 4.0 :)
[12:47:02] <timmywil> that takes care of a blocker for 3.0 too
[12:47:18] <DaveMethvin> i think i unblockerd it but yeah it would have been a headache
[12:47:20] <markelog_> yeah, although we would need to somewho deprecate it
[12:47:22] <DaveMethvin> like this # one
[12:47:40] <DaveMethvin> i can update the upgrade guide to note that it is deprecated
[12:47:46] <timmywil> DaveMethvin: nice
[12:47:47] <DaveMethvin> and we already have code in migrate
[12:47:53] <markelog_> cool
[12:48:02] <markelog_> we could add something to animate page maybe?
[12:48:10] <markelog_> like a note or something?
[12:48:14] <m_gol> yeah, but is it documented _anywhere_?
[12:48:24] <markelog_> we could say, like
[12:48:34] <timmywil> if it's not documented, we can start documenting the one-arg way when it comes around
[12:48:36] <markelog_> it wasn't documented but we will remove that thing
[12:48:47] <markelog_> timmywil: better!
[12:49:03] <markelog_> just like timmywil said - we use semver as guideline here
[12:49:29] <markelog_> so we need tickets
[12:49:35] <timmywil> I need to go soon
[12:49:51] <timmywil> family in the house
[12:49:58] <m_gol> k, can we get back to IE 11 in the end?
[12:50:00] <timmywil> they breaking things
[12:50:03] <m_gol> ;)
[12:50:04] <markelog_> :)))
[12:50:10] <gibson042> still up are IE11 and https://github.com/jquery/jquery/issues/3060
[12:50:57] <m_gol> Dave, do we just wait for Jacob to see what's up?
[12:51:05] <DaveMethvin> on the ie11 one i think we should hold up and wait until we know more, it seems like they fixed it but we aren't sure
[12:51:24] <DaveMethvin> it's pretty obscure anyway
[12:51:24] <m_gol> it'd be the worst if they fixed it only in Windows 10 version of IE 11 :D
[12:51:29] <DaveMethvin> yeah
[12:51:36] <timmywil> oof
[12:51:55] <DaveMethvin> you gotta wonder what logic makes it off by 100
[12:52:02] <m_gol> that's why I specifically asked them if they're going to fix it, the answer was no, we can add the workaround
[12:52:06] <timmywil> so we can discuss that one again next week
[12:52:12] <DaveMethvin> yep
[12:52:12] <markelog_> +1 on https://github.com/jquery/jquery/issues/3060
[12:52:13] <m_gol> but sometimes you can't help fixing sth... :P
[12:52:28] <timmywil> markelog_: agreed
[12:52:31] <markelog_> so rc next week?
[12:52:50] <DaveMethvin> yeah we gotta ship something soon
[12:53:01] <timmywil> yes
[12:53:10] <DaveMethvin> i will can get the upgrade guide onto the jquery.com page if it's pretty stable at this point
[12:53:15] <DaveMethvin> so we can ref from the blog post
[12:53:44] <gibson042> AFAICT, gh-3060 is the last issue... assuming another +1 on that, I'll make the change, update gh-3029, document both in the upgrade guide, and then submit a couple migrate PRs
[12:53:45] <timmywil> great, and I can finish the blog post
[12:54:03] <DaveMethvin> sounds good
[12:54:07] <markelog_> cool-cool
[12:54:23] <timmywil> alright, thanks everybody
[12:54:30] <timmywil> see you in -dev
