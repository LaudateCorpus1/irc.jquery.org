[09:00:13] <scott_gonzalez> `uiteam
[09:00:24] <arthurvr> hey
[09:00:25] <scott_gonzalez> Aw, b-ot isn't even in here.
[09:01:02] <jzaefferer> yeah, slacker bot
[09:01:25] <scott_gonzalez> arschmitz jzaefferer fnagel gnarf rxaviers
[09:01:33] <arschmitz> hi
[09:01:35] <fnagel> hey
[09:01:38] <rxaviers> Hello
[09:02:51] <scott_gonzalez> So, button is still waiting on my review.
[09:02:59] <scott_gonzalez> I'll get to it before the next meeting.
[09:03:35] <scott_gonzalez> Core is dropping support for Safari 6.
[09:03:48] <scott_gonzalez> So that raises the question of when we will stop supporting it.
[09:03:53] <scott_gonzalez> Should we drop it in 1.12 or 1.13?
[09:04:12] <jzaefferer> Seems fine to drop in 1.12
[09:04:20] <arschmitz> 1.12
[09:04:21] <scott_gonzalez> Any objections?
[09:04:25] <scott_gonzalez> Ok, sounds good.
[09:05:03] <jzaefferer> I found two "Support: Safari" comments, but both without versions
[09:05:08] <scott_gonzalez> yay
[09:05:43] <scott_gonzalez> Let's do some testing on those and find out if they're still problems.
[09:06:03] <jzaefferer> well, one works around a feature (resizable), the other links to a bug that is still UNCONFIRMED
[09:06:13] <jzaefferer> so those aren't going away anytime soon
[09:07:37] <scott_gonzalez> ok
[09:08:19] <scott_gonzalez> m_gol already removed it from TestSwarm for us ;-)
[09:08:47] <scott_gonzalez> So I think the only thing we need to do at this point is update jqueryui.com/browser-support/ when 1.12.0 is released.
[09:10:02] <scott_gonzalez> https://github.com/jquery/jqueryui.com/issues/121
[09:10:08] <jzaefferer> Throw it on the pile with other website updates for 1.12
[09:10:42] <scott_gonzalez> What's going on with CSS dependencies?
[09:10:44] <scott_gonzalez> rxaviers, jzaefferer
[09:11:09] <jzaefferer> That's done
[09:11:25] <jzaefferer> Category is a bit misleading
[09:11:36] <jzaefferer> There's still some DB issues, but unrelated to CSS dependencies
[09:11:49] <scott_gonzalez> Oh, ok
[09:12:25] <scott_gonzalez> Looks like we don't actually need to discuss this issue, right?
[09:12:33] <scott_gonzalez> Can probably just remove it from the agenda.
[09:12:37] <jzaefferer> Yeah
[09:13:02] <jzaefferer> Btw. I switched to a two-column layout a while ago, makes it much easier (for me, anyway) to convert to markdown
[09:13:15] <rxaviers> If there's anything on DB that needs my attention, just let me know
[09:13:21] <jzaefferer> That's why line 2 has just Topic and Detail
[09:13:21] <rxaviers> plz
[09:13:58] <jzaefferer> rxaviers: do you have bandwidth to address https://github.com/jquery/download.jqueryui.com/issues/273 ?
[09:14:04] <scott_gonzalez> Ok, updated to 2 columns.
[09:14:41] <jzaefferer> fnagel: how's the Globalize 1.x migration going?
[09:14:50] <fnagel> I've got an updated branch: https://github.com/jquery/jquery-ui/commits/datepicker-globalize-1.x
[09:14:56] <fnagel> Merged old datepicker-globalize-1.x (with Rafael's Globalize integration) with updated datepicker branch (merged with master by Scott).
[09:14:56] <fnagel> Now using Globalize 1.0.0, with green unit tests.
[09:15:11] <fnagel> Should I create a new PR for this? I closed the old one by accident. Here is the diff:
[09:15:11] <fnagel> https://github.com/jquery/jquery-ui/compare/datepicker...datepicker-globalize-1.x
[09:15:21] <rxaviers> jzaefferer, I can assist on that issue with anything related to DB. But, most of them seems related to styles and UI in general (unless Im missing something)
[09:15:23] <fnagel> After merging this I would like to merge datepicker with master again as a base to use AMD within the calendar and datepicker demos. This should ease the use of Globalize and CLDR data a lot.
[09:16:33] <scott_gonzalez> fnagel: Sure. Do you want me to handle that?
[09:16:54] <jzaefferer> fnagel: the core-breakup should be done soon, makes sense to wait for that, since it changes lots of files, again
[09:16:59] <scott_gonzalez> If so, just remind me when the globalize update lands and I'll do the merge.
[09:17:30] <fnagel> Why not, I'm not that familiar with AMD yet. Can you take a look hwo we want to handle CLDR data in demos and tests? Currently I'm updating a static file.
[09:18:12] <scott_gonzalez> Yeah, this came up during the previous merge.
[09:18:51] <fnagel> scott_gonzalez: Should we wait for te core breakup?
[09:18:55] <rxaviers> Using AMD to feed Globalize on CLDR data is easier than using the data statically indeed
[09:19:18] <scott_gonzalez> rxaviers: Is https://github.com/jquery/jquery-ui/blob/datepicker/external/localization.js generated by cldr.js?
[09:19:32] <rxaviers> No, that has been created manually
[09:19:40] <arschmitz> oh yeah scott_gonzalez and i spend like an hour looking at that file lol
[09:19:45] <fnagel> When you say generated you mean copy and pasted, right? ;-)
[09:20:07] <scott_gonzalez> Ok, so how do we get to the point where we're not manually creating that file?
[09:20:23] <rxaviers> Globalize will soon have runtime support. So, it could be used instead of handling the data on runtime if you will
[09:20:33] <rxaviers> https://github.com/jquery/globalize/issues/398
[09:20:51] <rxaviers> (i.e., use compiled formatters with support for certain locales)
[09:21:49] <fnagel> rxaviers: another option would be adding something like this (after having AMD demos), right? https://github.com/rxaviers/cldr-data-bower/tree/example-application
[09:22:31] <arschmitz> rxaviers: so your suggesting we should include a custom build that does not seem like it might be a pain?
[09:23:53] <arschmitz> fnagel: suggestion seems a lot simpler for our case
[09:24:17] <rxaviers> well, I'm also thinking how jqueryui.com is going to handle that on production.
[09:24:38] <rxaviers> I suggest to start using cldr-data module (as fnagel suggests) in the AMD demos.
[09:25:03] <rxaviers> it's exactly the way Globalize tests work
[09:25:30] <fnagel> rxaviers: So we will end upusing something like this, right? https://github.com/rxaviers/cldr-data-bower/blob/example-application/app.js#L37-L40
[09:25:40] <rxaviers> Using globalize compiler to generate the compiled formatters will easy the jqueryui.com deployment
[09:26:18] <rxaviers> Endup using something like this: https://github.com/jquery/globalize/blob/master/test/functional/date/format-date.js
[09:26:28] <arschmitz> rxaviers: my only worry with that is the script tags are part of the example code in the demos
[09:26:41] <arschmitz> and people will have no idea where these files are coming from
[09:26:45] <arschmitz> since they wont be in the repo
[09:26:57] <arschmitz> or how they would do the same thing
[09:27:32] <arschmitz> since it will be buried in a build step they will never see
[09:27:32] <fnagel> rxaviers: Does this work as static files? I tried this locally but ended up witrh some cross-origin errors when fetching the files
[09:28:10] <rxaviers> arschmitz, if you want to use script tags only, you can use the compiled formatters then. An example: https://github.com/jquery/globalize/blob/fix-398-runtime/examples/basic-globalize-compiler/README.md
[09:28:30] <rxaviers> (it's the production mode part)
[09:29:06] <rxaviers> https://github.com/jquery/globalize/blob/fix-398-runtime/examples/basic-globalize-compiler/production.html
[09:29:18] <jzaefferer> I've got to go. Hope you'll find a solution for this - timing is good, since the runtime support hasn't landed yet, so can still be changed...
[09:29:23] <rxaviers> more specifically, https://github.com/jquery/globalize/blob/fix-398-runtime/examples/basic-globalize-compiler/production.html#L60
[09:30:50] <arschmitz> its not script tags im concerned about its using the compiled file. someone just looking at jqueryui.com will have no idea where compiled-formatters.js came from
[09:30:55] <arschmitz> or how they would get it
[09:31:04] <arschmitz> unless we give instructions in the demo
[09:31:09] <arschmitz> right now the files are in the repo
[09:31:14] <arschmitz> so anyone can just go copy them
[09:31:24] <arschmitz> and exactly replicate what they see in the dmeo
[09:31:25] <arschmitz> demo
[09:31:33] <rxaviers> Just let me know if you have any questions. Globalize allows both ways (handling everything on the fly, or pre-compiling)
[09:32:26] <arschmitz> im all for pre compilation and the runtime in general and pushing that. but it seems like it might not be right for the demos is all.
[09:33:24] <rxaviers> Sure, I'm ok with that and I can assist with either way.
[09:33:52] <rxaviers> It's up to you all
[09:35:49] <scott_gonzalez> I agree that loading the locales directly is more clear for the demos.
[09:36:09] <scott_gonzalez> And we might as well just use the same method for tests for simplicity.
[09:36:35] <rxaviers> sounds good to me
[09:38:47] <scott_gonzalez> Ok, so who's going to work on that?
[09:38:58] <scott_gonzalez> fnagel: Will that be part of the work you're doing right now?
[09:39:12] <fnagel> I can do that
[09:39:41] <fnagel> Will you do the merge and change for AMD demos?
[09:41:27] <scott_gonzalez> yeah
[09:41:47] <scott_gonzalez> You want that after you finish the Globalize changes, right?
[09:42:05] <arschmitz> you might want to wait on core changes
[09:42:12] <arschmitz> since that also moves all the widgets folders
[09:42:27] <arschmitz> and effects which are used in the datepicker demos
[09:42:49] <fnagel> General Globalize 1.0.0 integration is available in datepicker-globalize-1.x  branch
[09:43:13] <fnagel> could be merged to dateoicker branch before scott_gonzalez does the merge with master
[09:44:42] <scott_gonzalez> Right, otherwise all the conflicts are going to appear when you do that merge anyway.
[09:45:04] <scott_gonzalez> But if datepicker-globalize-1.x is merged into datepicker before master is merged into datepicker, then you won't have to deal with any of the conflicts.
[09:45:13] <arschmitz> yup
[09:45:19] <arschmitz> should do that first for sure
[09:45:31] <arschmitz> no need to resolve the same conflicts twice
[09:46:09] <fnagel> Sounds good to me
[09:47:20] <rxaviers> fnagel, feel free to ping needing any help with Globalize
[09:47:25] <fnagel> we can merge datepicker-globalize-1.x  into datepicker right away, new PR?
[09:47:40] <fnagel> rxaviers: Will do, thanks!
[09:47:48] <scott_gonzalez> Did anyone review it yet?
[09:48:06] <arschmitz> fnagel: if your just mergeing a branch into an existing PR you should not need to do a new PR it will just update the current one
[09:48:10] <fnagel> Most of it in the old PR
[09:48:16] <arschmitz> when you push the changes to the branch
[09:48:29] <scott_gonzalez> Ok, so then it's probably fine to just merge.
[09:48:30] <fnagel> I closed it by accident, sorry.
[09:49:38] <scott_gonzalez> I guess that's everything for datepicker today.
[09:49:52] <scott_gonzalez> arschmitz: Update on core split?
[09:50:18] <arschmitz> so i just need to fix a few urls jzaefferer caught
[09:50:21] <arschmitz> and it should be good
[09:50:25] <scott_gonzalez> cool
[09:50:31] <arschmitz> i did replace the concat with a requirejs build
[09:50:59] <scott_gonzalez> Oh, yeah, so let's talk about the external dependencies thing.
[09:51:00] <arschmitz> since we are all full on AMD now it made since to cut off any dependency issues almost like a lint
[09:51:55] <scott_gonzalez> Do we plan to have Globalize embedded in jQuery UI on the CDN?
[09:52:16] <arschmitz> if its a hard dependency of ui i think we have to
[09:52:55] <arschmitz> that would be a pretty major  change to all of a sudden have to include globalize for the default cdn build to work
[09:53:17] <scott_gonzalez> Well, only if you want to use calendar/datepicker.
[09:53:39] <arschmitz> right but thats probably the most used piece
[09:53:50] <scott_gonzalez> Yeah, it is.
[09:54:01] <scott_gonzalez> At least individually.
[09:54:06] <arschmitz> to me thats a pretty major breaking change
[09:54:56] <arschmitz> how much would that add size wise to the lib would it be substantial ?
[09:58:03] <scott_gonzalez> 4k
[09:58:24] <scott_gonzalez> Took a bit to install uglify then build the min+gzip file from source :-P
[09:58:52] <scott_gonzalez> Well, plus the en locale, right?
[09:59:26] <scott_gonzalez> I'm not sure how big that is.
[09:59:43] <scott_gonzalez> I guess we can include it.
[10:00:20] <scott_gonzalez> I mean, people shouldn't really use the CDN anyway.
[10:03:23] <scott_gonzalez> Ok, I think that's all for today.
[10:03:25] <scott_gonzalez> thanks everyone.
[10:03:44] <arschmitz> yeah sorry
[10:03:49] <arschmitz> that seems not too bad
[10:03:59] <arschmitz> and means we are pushing localization more
[10:04:28] <arschmitz> we could also re consider the runtime
[10:04:42] <arschmitz> for production build it seems like the logical choice of course
[10:04:55] <arschmitz> that should cut the size a bunch more
[10:04:59] <arschmitz> rxaviers: ^^
[10:05:08] <scott_gonzalez> Yeah, but it makes it so you can't load additional locales.
[10:05:12] <scott_gonzalez> Right?
[10:06:38] <arschmitz> i think you could just include more compiled formatters
[10:06:46] <arschmitz> kinda like including more handlebars templates
[10:07:21] <scott_gonzalez> oh
[10:07:35] * scott_gonzalez needs to look at how the runtime is used.
[10:07:38] <arschmitz> but thats a question for rxaviers really
[10:07:53] <rxaviers> one can load additional compiled formatters for additional locale support
[10:08:00] <scott_gonzalez> ok
[10:08:09] <arschmitz> awesome thats what i thought
[10:08:16] <scott_gonzalez> So yeah, we can do that and just ship the en locale.
[10:08:23] <arschmitz> yeah
[10:08:29] <arschmitz> that gets us roughly what you get now
[10:08:36] <scott_gonzalez> yeah
[10:08:55] <scott_gonzalez> Thanks everyone. See you back in -dev.
