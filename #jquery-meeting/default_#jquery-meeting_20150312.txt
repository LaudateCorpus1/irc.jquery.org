[09:00:23] <arschmitz> PEP TIME!
[09:00:33] <scott_gonzalez> `pepteam
[09:00:33] <b-ot> scott_gonzalez: arschmitz asir jperrault jrossi2 scott_gonzalez snover
[09:01:32] <scott_gonzalez> CI testing up and running.
[09:01:35] <snover> woo!
[09:01:42] <scott_gonzalez> So we should start working on functional tests.
[09:02:21] <scott_gonzalez> Here are the W3C tests: https://github.com/w3c/web-platform-tests/tree/master/pointerevents
[09:02:27] <scott_gonzalez> We can base the tests on those.
[09:02:58] <scott_gonzalez> We should also review the existing unit tests to see how sane they are and how much overlap they'll end up having with the functional tests.
[09:03:15] <scott_gonzalez> Some of the tests rely on us exposing parts of the polyfill.
[09:03:31] <scott_gonzalez> I'd prefer not having to do that just for the sake of testing.
[09:03:50] <arschmitz> i have not looked yet im sure some make sense but it seems like most of it would be covered by functional testing better
[09:04:08] <arschmitz> and +1 on not exposing globals just for tests
[09:04:23] <snover> it would be exciting to get the web platform tests automated, that would proably be useful for others too
[09:04:53] <arschmitz> snover: absolutely i think that would be the ultimate goal
[09:05:15] <snover> once the web platform tests are all working as functional tests we can look at code coverage and see what code branches are not being exercised
[09:05:23] <scott_gonzalez> They have their own assertion library and test runner though.
[09:05:43] <scott_gonzalez> I can find out if any of the WGs have used Web Driver for tests.
[09:06:16] <snover> i thought a bunch of them were manual?
[09:06:31] <scott_gonzalez> They are.
[09:06:59] <snover> so what is the test harness for?
[09:07:29] <scott_gonzalez> Imagine the human is the Web Driver.
[09:07:54] <snover> it just shows users results?
[09:08:35] <scott_gonzalez> The test pages load the test runner and have the assertions inside event handlers.
[09:08:39] <scott_gonzalez> And they provide instructions.
[09:09:03] <scott_gonzalez> The user must perform the appropriate actions and then review the results from the test framework, which get displayed on page.
[09:09:19] <snover> ok
[09:09:20] <snover> that’s fine
[09:09:41] <snover> that can be automated by intern without needing to make any changes
[09:11:00] <scott_gonzalez> Well, we'll be wrapping 100+ test files.
[09:11:19] <scott_gonzalez> We could work on merging a lot of tests though.
[09:11:38] <scott_gonzalez> The current suite is less than ideal.
[09:11:44] <scott_gonzalez> And the WG knew that from the beginning.
[09:13:06] <scott_gonzalez> We can pick two or three existing tests to wrap as a prototoype though.
[09:13:06] <arschmitz> So would the goal then to get the web platform tests simplified to the point that its more reasonable for us to just wrap them then?
[09:13:17] <scott_gonzalez> And then go through the tests and see how much we can reduce.
[09:16:06] <scott_gonzalez> snover: What do you think about that plan?
[09:16:22] <scott_gonzalez> Or do you think we should just wrap all 100+ files?
[09:16:24] <snover> wrapping?
[09:16:46] <scott_gonzalez> By wrapping I mean writing a test that uses Web Driver to run the tests.
[09:16:53] <snover> ok
[09:16:54] <snover> :)
[09:17:07] <snover> i think it makes sense to start with a few,
[09:17:15] <scott_gonzalez> But I was asking what you thought about starting with the intention of reducing the number of tests in the W3C suite.
[09:17:43] <snover> if someone can actually figure out which tests are redundant, sure
[09:17:50] <snover> (and wants to take the time/effort to do that)
[09:17:59] <snover> it would be easier to just automate
[09:21:29] <scott_gonzalez> ok
[09:24:40] <scott_gonzalez> So let's start with a prototype on just a few and see how it goes.
[09:25:13] <scott_gonzalez> Does anyone want to work on the first few?
[09:26:43] <scott_gonzalez> I've created https://github.com/jquery/PEP/issues/170
[09:26:50] <scott_gonzalez> So if anyone decides to jump on that, just leave a comment there.
[09:27:03] <arschmitz> im not familiar with the intern functional tests yet, nor the web platform setup, so i'm probably not the guy to figure out the first few
[09:27:23] <snover> ok. well, if it’s too confusing for anyone, i can do it to get the ball rolling
[09:27:43] <snover> but really it’s like… https://theintern.github.io/intern/#writing-functional-test
[09:27:57] <scott_gonzalez> snover: I'll give it a shot and ping you if I run into problems.
[09:28:11] <snover> ok
[09:28:13] <snover> sound sgood
[09:28:40] <scott_gonzalez> We still need a new name for publishing to npm.
[09:29:22] <snover> pes? :)
[09:29:40] <scott_gonzalez> Hmm...did that second name get cut off?
[09:29:48] <scott_gonzalez> Or did my client just not show it?
[09:29:57] <snover> dunno
[09:29:58] <snover> i have to go, sorry
[09:30:03] <scott_gonzalez> ok
[09:30:46] <scott_gonzalez> Well, we'll need to figure this out soon so we can release.
[09:31:03] <scott_gonzalez> Does anyone have anything else to discuss today?
[09:32:29] <scott_gonzalez> Ok, I guess that's it for this week.
[09:32:31] <scott_gonzalez> Thanks everyone.
[11:00:46] <arschmitz> `mobileteam
[11:00:47] <b-ot> arschmitz: agcolom, arschmitz, arthurvr, cgack, gabriel_schulhof, ianmaffett, jasperdegroot, sfrisk
[11:01:06] <cgack> Howdy
[11:01:08] <jasperdegroot> hi
[11:01:11] <gabriel_schulhof> Hey!
[11:03:05] <arschmitz> lets get right to it
[11:03:19] <arschmitz> classes has landed on master in ui!
[11:03:38] <jasperdegroot> nice
[11:04:05] <arschmitz> ui-1-12 branch is not on the latest and greates but its close
[11:04:34] <arschmitz> ill be updating the button PR next based on ui master
[11:04:39] <arschmitz> and that will update mobile
[11:05:11] <arschmitz> so we can count on classes being 100% stable not that its on master
[11:06:10] <arthurvr> Hey guys!
[11:06:16] <arschmitz> arthurvr: hi
[11:06:49] <arschmitz> ok so quick status run down of work on ui-1-12
[11:07:02] <arschmitz> the backcompat update and tests are ready to land
[11:07:13] <gabriel_schulhof> RUnning the tests now.
[11:07:28] <arschmitz> gabriel_schulhof: they were green for me
[11:07:41] <gabriel_schulhof> Awesome!
[11:07:54] <gabriel_schulhof> Didn't we at some point add ui-1-12 to .travis.yml?
[11:07:55] <arschmitz> i reviewed the classes pr's and several others
[11:08:07] <arschmitz> no
[11:08:15] <arschmitz> you added a different offshot test branch
[11:09:05] <arschmitz> i did a couple more rounds of review on the other classes pr's
[11:09:54] <arschmitz> they are getting close
[11:10:16] <arschmitz> i think the remaining will go quick after these
[11:12:03] <arschmitz> gabriel_schulhof: cgack any thing to discuss on there?
[11:12:39] <arschmitz> these*
[11:13:04] <cgack> not really, i'm probably gonna blow away my rangeslider classes branch and just recreate against ui-1-12 since i originally branched off of master... but only once i get toolbar cleared for launch
[11:13:07] <gabriel_schulhof> No, I think I'm good.
[11:13:45] <gabriel_schulhof> Chugging away on popup here ...
[11:13:54] <arschmitz> ok sounds good
[11:14:03] <arschmitz> jasperdegroot: any update on the css update for the icons
[11:14:04] <arschmitz> ?
[11:14:18] <jasperdegroot> not really an update
[11:14:22] <jasperdegroot> I have been working on it
[11:14:27] <jasperdegroot> and made progress
[11:14:43] <arschmitz> ok
[11:14:46] <jasperdegroot> but still a lot to update in the demos
[11:15:23] <jasperdegroot> and the demos can't wait because I use them to see if style is ok
[11:15:49] <jasperdegroot> as discussed on -dev fullwidth buttons will get icon next to the text
[11:16:24] <jasperdegroot> have to say that I don't really like that... doesn't look good, especially since the icons have a background disc
[11:17:21] <jasperdegroot> decent styling of the icon-only buttons is also a bit problematic
[11:17:41] <jasperdegroot> to align icons vertically
[11:18:00] <jasperdegroot> but I should be able to solve that
[11:18:23] <jasperdegroot> oh, one question
[11:18:46] <jasperdegroot> about icon only buttons and accessibility
[11:19:26] <jasperdegroot> we used to use text-indent to hide the text in those buttons, but that will also make the icon disappear
[11:19:54] <jasperdegroot> shall we only support text inside the icon span?
[11:20:13] <jasperdegroot> and hide that in an accessible way
[11:20:18] <gabriel_schulhof> jasperdegroot: Reminds me of <span class="ui-btn-text">
[11:20:25] <arschmitz> jasperdegroot: lets discuss that in dev
[11:20:38] <jasperdegroot> gabriel_schulhof: yeah
[11:20:40] <jasperdegroot> arschmitz: ok
[11:20:51] <arschmitz> but yeah we may do something like that
[11:21:51] <arschmitz> im almost starting to be convinced that using a text span when working as a widget is not such a bad thing lol
[11:22:18] <arschmitz> not give it any style just use it as encapsulation basicly
[11:22:36] <arschmitz> but yeah lets talk about that after in dev
[11:22:46] <jasperdegroot> ok
[11:23:17] <arschmitz> jasperdegroot: id like to get sfrisk in on this too
[11:23:29] <jasperdegroot> yeah, good idea
[11:23:34] <sfrisk> okay
[11:23:35] <arschmitz> shes about to start chassis buttons
[11:23:35] <gabriel_schulhof> Yeah, good point. After all, this is DOM structure.
[11:24:33] <arschmitz> with enhanced there is no harm to the extra wrapper either
[11:24:44] <gabriel_schulhof> Right.
[11:24:52] <arschmitz> and you would not need it in css only
[11:26:24] <arschmitz> but yeah got a bunch to cover so lets keep moving
[11:27:19] <arschmitz> auto init no update
[11:27:30] <arschmitz> accordion i think no update
[11:28:00] <arschmitz> qunit assert classes was updated
[11:28:16] <arschmitz> https://www.npmjs.com/package/qunit-assert-classes
[11:28:21] <arschmitz> lots of newness
[11:29:00] <arschmitz> we just need to do a update-dependencies and we will get it
[11:31:41] <arschmitz> so on the testing theme
[11:32:10] <arschmitz> one of the GSoC people is looking into us switching to intern from qunit?
[11:32:18] <arschmitz> has any one ever tried intern?
[11:32:41] <gabriel_schulhof> I haven't.
[11:32:54] <gabriel_schulhof> Why should we switch?
[11:33:15] <arschmitz> great question!
[11:33:48] <arschmitz> intern has crossplatform ci testing out of the box including webdriver and selenium for functional testing
[11:33:52] <gabriel_schulhof> We should have them file an issue and state their case.
[11:34:01] <arschmitz> gabriel_schulhof: its my idea
[11:34:12] <gabriel_schulhof> OK.
[11:34:24] <gabriel_schulhof> ... and there's your case.
[11:34:25] <gabriel_schulhof> :)
[11:34:33] <gabriel_schulhof> Does it require any infrastructure?
[11:34:46] <arschmitz> gabriel_schulhof: it also has direct grunt support
[11:35:09] <arschmitz> gabriel_schulhof: built in code coverage
[11:35:30] <arschmitz> and it allows qunit tests out of the box also
[11:35:47] <arschmitz> so in theory we can just keep all our existing tests but start using intern
[11:36:00] <gabriel_schulhof> ... at the grunt level, I presume?
[11:36:10] <imaffett> That's a positive.  I switched from qUnit to Karma and had to rewrite all the tests
[11:36:28] <arschmitz> gabriel_schulhof: no it just allows the qunit api
[11:36:57] <arschmitz> so we would have to change some things around to use it but its nothing major
[11:37:03] <arschmitz> PEP is already using intern
[11:37:20] <gabriel_schulhof> Oh, like replace references to qunit.js, I presume.
[11:37:26] <arschmitz> nope
[11:37:31] <arschmitz> i mean yes sorry
[11:37:51] <gabriel_schulhof> Would you have to rewrite qunit-assert-classes?
[11:37:52] <gabriel_schulhof> :)
[11:37:58] <arschmitz> nope
[11:38:11] <gabriel_schulhof> Oh, nice, so it also supports the extension API? Cool!
[11:38:19] <arschmitz> gabriel_schulhof: https://github.com/jquery/PEP/pull/167
[11:38:36] <arschmitz> thats an example switching pep from karma to intern
[11:39:42] <arschmitz> this also means no more phantom
[11:39:49] <arschmitz> we run in real browsers even local
[11:40:49] <gabriel_schulhof> Wha ... this thing fires up Chrome, so I have Chrome windows flashing about?
[11:40:49] <arschmitz> and with functional testing we are controling the actual browser so getting real events real everything not simulating
[11:41:07] <gabriel_schulhof> Well then we'll definitely have to re-write the tests.
[11:41:08] <arschmitz> yup unless you use browserstack instead
[11:41:22] <gabriel_schulhof> Everytime we use .trigger( "change" )
[11:41:27] <gabriel_schulhof> or vmousedown
[11:41:30] <arschmitz> gabriel_schulhof: that will still work
[11:41:37] <arschmitz> it can do both unit and functional testing
[11:41:40] <gabriel_schulhof> It will, but we won't want it, if we can have the real thing.
[11:41:48] <arschmitz> for sure
[11:41:59] <gabriel_schulhof> Although I suppose we can take our time doing the real things as we add/modify tests.
[11:42:11] <arschmitz> but the point is we get cross browser testing even with our current tests just by switching
[11:42:34] <gabriel_schulhof> Boy will our tests be broken.
[11:43:00] <arschmitz> we have also had the offer from snover that if we need anything fixed added etc i can talk to him and he may have some resources to help
[11:43:15] <gabriel_schulhof> I mean heck they're even broken on Chrome right now, because of some Chrome rounding bug - unless that's been fixed in a recent Chrome.
[11:43:36] <arschmitz> gabriel_schulhof: well that will be part of switching
[11:43:49] <arschmitz> we can start with latest chrome firefox ie go from there
[11:44:12] <gabriel_schulhof> Sounds like everything we've always wanted.
[11:44:18] <arschmitz> yeah
[11:44:27] <arschmitz> hence why i want to look into switching
[11:45:07] <cgack> sounds awesome
[11:45:36] <arschmitz> so if everyone agrees then i think we should go in this direction rather then the qunit 2.0 api upgrade
[11:46:01] <gabriel_schulhof> +1
[11:46:29] <arschmitz> because even after we did that we still would not have cross browser testing because we are far from working with browserstack-runner from what i can tell at this point
[11:47:49] <gabriel_schulhof> This is strictly for CI, right? I mean, I can't run via browserstack from local, right?
[11:47:59] <arschmitz> YOU CAN!
[11:48:13] <gabriel_schulhof> OKOK, but I need my BS username and password probably, right?
[11:48:17] <arschmitz> yes
[11:48:23] <gabriel_schulhof> OK. That's cool ...
[11:48:27] <arschmitz> you need to set 2 enviroment varibles
[11:48:35] <arschmitz> also works with saucelabs and some others
[11:49:35] <gabriel_schulhof> OK, so no browser windows flashing ... it's all BS.
[11:49:50] <arschmitz> gabriel_schulhof: well you can also run them local
[11:50:10] <arschmitz> if you want it can use a local selenium standalone
[11:50:10] <gabriel_schulhof> Alright ... I guess I'll see for myself soon enough.
[11:50:31] <arschmitz> gabriel_schulhof: you can try it with pep already
[11:50:42] <arschmitz> there are two commands
[11:50:59] <arschmitz> grunt test runs against a local selenium stand alone on chrome and firefox
[11:51:17] <arschmitz> grunt ci runs against browserstack
[11:51:31] <arschmitz> or you can go to an html page
[11:51:32] <gabriel_schulhof> Nice!
[11:51:55] <arschmitz> and if you really want true headless
[11:52:00] <arschmitz> there is phantomdriver
[11:52:12] <arschmitz> to run phantom from webdriver
[11:52:40] <arschmitz> but phantom is not a supported platform
[11:52:46] <arschmitz> so the less we do with it the better lol
[11:53:52] <gabriel_schulhof> Hmmm, so while the tests are running, if I use local, I can't really use my computer, because windows will be popping in and out of existence, right?
[11:54:15] <arschmitz> its generally pretty good and will stay in the background
[11:54:30] <gabriel_schulhof> Oh, wait ... NM ... I can log in a second user and run it there ...
[11:54:46] <arschmitz> gabriel_schulhof: also you have a browserstack account dont you?
[11:54:52] <gabriel_schulhof> Yes.
[11:55:11] <arschmitz> so just do that :-)
[11:55:19] <gabriel_schulhof> If you run on BS, it'll run on many more platforms, right?
[11:55:19] <arschmitz> and saucelabs has free accounts
[11:55:32] <arschmitz> it runs on whatever we tell it to
[11:55:49] <gabriel_schulhof> Right, but if I run local, it's not like Android 2.3.5 is available ...
[11:55:53] <arschmitz> we set the config for browsers to run in each place
[11:56:04] <arschmitz> pretty sure it can drive the emulator
[11:56:06] <gabriel_schulhof> OK, then I'll definitely go BS.
[11:56:10] <gabriel_schulhof> Wow! OK.
[11:56:19] <cgack> I do not have a browserstack account, who can I ping to get one?
[11:56:27] <arschmitz> scott_gonzalez: ^^
[11:56:43] <arschmitz> cgack: though i swear we set you up with one already
[11:57:12] <cgack> i thought so too, but i just hit the site and it tells me i have X minutes left
[11:57:35] <arschmitz> cgack: ok well scott_gonzalez is the guy for that
[11:57:43] <cgack> thanks
[11:57:45] <scott_gonzalez> cgack: Invite sent. Check your email.
[11:57:52] <cgack> thanks!
[11:59:14] <arschmitz> i did a pr for adding the spider to api.jquerymobile.com https://github.com/jquery/api.jquerymobile.com/pull/364
[11:59:28] <arschmitz> but there is some discussion if this is a good idea or not now
[11:59:42] <arschmitz> we would remove production for sure
[12:00:05] <arschmitz> but the question is if its a good idea to have a task that will spider our enitre site even on stage
[12:00:14] <gabriel_schulhof> I don't get it. It would be crawling local.api.jquerymobile.com, which is, well, local, right?
[12:00:21] <arschmitz> no
[12:00:30] <arschmitz> it crawls the real sites it cant work on local
[12:00:46] <gabriel_schulhof> Why not? Even if you've set up wordpress?
[12:00:49] <arschmitz> because all the links to other sites get re-writren as local. too
[12:01:04] <gabriel_schulhof> So you'd have to install all the sites locally.
[12:01:05] <arschmitz> so you would need EVERY jquery website
[12:01:11] <arschmitz> gabriel_schulhof: which is not possible
[12:01:22] <arschmitz> because you cant install the blogs
[12:01:40] <gabriel_schulhof> Why do API sites link to blogs?
[12:01:45] <arschmitz> header
[12:01:56] <arschmitz> every page of every site does
[12:02:22] <gabriel_schulhof> Well, can we not change where the common header resides? Like, maybe, I dunno ... jquery.com?
[12:02:40] <arschmitz> gabriel_schulhof: im not sure you understand
[12:02:58] <arschmitz> jquery-wp-content re-writes all links to other jquery sites
[12:02:59] <gabriel_schulhof> Oh, now I get it.
[12:03:00] <arschmitz> to match
[12:03:06] <gabriel_schulhof> There's a link to the blogs in the header.
[12:03:11] <arschmitz> yes
[12:03:13] <jasperdegroot> arschmitz: why would crawling stage not be a good idea?
[12:03:15] <arschmitz> its not just blogs though
[12:03:26] <arschmitz> jasperdegroot: overload servers
[12:03:29] <jasperdegroot> ah ok
[12:03:33] <gabriel_schulhof> Can we not write exceptions?
[12:03:39] <gabriel_schulhof> Like, dont-go-there rules?
[12:03:51] <arschmitz> gabriel_schulhof: sure but if you exclude half the links whats the point
[12:04:12] <arschmitz> you would either need to require having 25+ other sites setup also
[12:04:18] <gabriel_schulhof> Umm ... you can check whether links within your site are consistent ...
[12:04:32] <arschmitz> or exclude all external links
[12:04:53] <gabriel_schulhof> I think making sure internal links are good is also of value.
[12:05:05] <gabriel_schulhof> ... and then we can do a monster run every once in a while.
[12:05:21] <arschmitz> gabriel_schulhof: once sites are passing thiswill run nightly
[12:05:24] <arschmitz> on our servers
[12:05:32] <arschmitz> right now there is exactly one passing site
[12:05:38] <arschmitz> api.jqueryui.com
[12:05:47] <arschmitz> and only as of this morning
[12:06:45] <gabriel_schulhof> What do you mean "sites are passing"? Passing internal link checks?
[12:06:54] <arschmitz> no passing all link checks
[12:07:05] <arschmitz> and resources
[12:07:12] <arschmitz> and script errors
[12:07:54] <gabriel_schulhof> So then we must land your PR with at least internal checking ...
[12:08:03] <arschmitz> no
[12:08:16] <arschmitz> there is no must to do anything
[12:08:24] <gabriel_schulhof> Then how can we know which links are broken?
[12:08:32] <arschmitz> run against stage
[12:08:51] <arschmitz> we are fine with it happening just not sure we want it there for everyone the spider is public project just add it your self
[12:09:08] <arschmitz> it even works as a cli
[12:09:25] <arschmitz> spiderjs --url=http://stage.api.jquerymobile.com
[12:09:46] <gabriel_schulhof> OK. So, can you run it and make an issue with its output?
[12:09:56] <arschmitz> thats not usefull
[12:10:03] <arschmitz> its about 30 pages long
[12:10:14] <gabriel_schulhof> Then its errors ...
[12:10:15] <arschmitz> and it will result in dozens of people fixing the same links at the same time
[12:10:33] <arschmitz> gabriel_schulhof: the only site that does not error is api,jqueryui.com
[12:10:37] <gabriel_schulhof> No, only the person to whom the issue is assigned.
[12:10:40] <arschmitz> that i have tried
[12:10:48] <arschmitz> gabriel_schulhof: thats not realistic
[12:11:11] <arschmitz> espically with many eager GSoC people around waiting for simple issues
[12:11:27] <gabriel_schulhof> :)
[12:11:51] <arschmitz> and we are going to do this consistently for every site
[12:12:16] <arschmitz> we discussed in content meeting yesterday but did not come to a decision
[12:15:04] <arschmitz> so we are way over time
[12:15:17] <arschmitz> and thats the end of the agenda unless someone has anything else?
[12:16:03] <gabriel_schulhof> UMD support.
[12:16:08] <gabriel_schulhof> I'll get started.
[12:16:16] <gabriel_schulhof> Unless somebody else already has.
[12:16:31] <gabriel_schulhof> Do we have an issue?
[12:24:33] <arschmitz> gabriel_schulhof: we did but i cant find it
[12:24:38] <arschmitz> for the life of me
[12:25:29] <gabriel_schulhof> OK. I'll look for it, fix it, and submit a PR.
[12:25:41] <gabriel_schulhof> That was it for me.
[12:26:29] <arschmitz> perfect
[12:26:41] <arschmitz> thanks see everyone back on dev!
