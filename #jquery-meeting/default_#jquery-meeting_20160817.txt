[12:06:47] <scott_gonzalez> ?uiteam
[12:06:47] <b-ot> arschmitz fnagel jzaefferer mikesherov rxaviers_ scott_gonzalez tjvantoll
[12:06:53] <arschmitz> hi
[12:06:54] <scott_gonzalez> Sorry, lost track of time.
[12:06:57] <fnagel> hi
[12:07:13] <scott_gonzalez> Which also means I have no agenda prepared :-/
[12:08:48] <scott_gonzalez> So, the tabs navigation issue we discussed at the previous meeting: https://bugs.jqueryui.com/ticket/15013
[12:08:59] <scott_gonzalez> I started working on it again on my flight out to Bonaire.
[12:09:22] <scott_gonzalez> But then I remembered that I had changed my mind about it...
[12:10:01] <arschmitz> lol
[12:10:03] <scott_gonzalez> Please read my last comment on there.
[12:10:10] <scott_gonzalez> I'd like to just close this ticket.
[12:10:24] <arschmitz> yeah i agree
[12:14:12] <scott_gonzalez> Hearing no objections, I'll close the ticket.
[12:15:31] <scott_gonzalez> There was a ticket filed about spinner not working with Globalize 1.x
[12:15:31] <scott_gonzalez> https://bugs.jqueryui.com/ticket/15030
[12:16:17] <scott_gonzalez> This should be easy to fix and have it work with both versions.
[12:16:29] <scott_gonzalez> And then we'll drop support for 0.x in 1.13 when the datepicker rewrite lands.
[12:16:41] <arschmitz> yeah
[12:17:35] <scott_gonzalez> The only thing that's tricky is right now Globalize isn't managed through Bower.
[12:17:43] <scott_gonzalez> We just have a copy of it sitting in the external directory.
[12:18:05] <scott_gonzalez> The datepicker branch has some code to pull down Globalize and CLDR and build the module in a Grunt task.
[12:18:18] <scott_gonzalez> So we'll probably need to copy that over to master.
[12:20:13] <arschmitz> yeah and fix where the file is built to
[12:20:37] <scott_gonzalez> yeah
[12:21:18] <scott_gonzalez> There's also a bug that using the numpad doesn't work with selectmenu.
[12:21:18] <scott_gonzalez> https://bugs.jqueryui.com/ticket/15031
[12:21:28] <scott_gonzalez> Does anyone have a keyboard with a numpad to test on?
[12:22:40] <scott_gonzalez> If not, I can steal one from a coworker.
[12:22:52] <scott_gonzalez> But I haven't confirmed this yet.
[12:24:10] <arschmitz> i might
[12:24:17] <arschmitz> would have to dig through boxes lol
[12:24:29] <fnagel> Just tested with on Win10 / Chrome -> bug confirmed
[12:24:43] <scott_gonzalez> Thanks fnagel
[12:25:51] <arschmitz> thats weird
[12:26:37] <scott_gonzalez> Our tests are passing with jQuery 1.x: http://swarm.jquery.org/job/3392
[12:26:37] <fnagel> http://stackoverflow.com/a/13196983
[12:26:44] <scott_gonzalez> I don't really care about failures in IE 8/9.
[12:26:52] <scott_gonzalez> But we've got failures with 3.1: http://swarm.jquery.org/job/3490
[12:27:05] <arschmitz> ah that makes sense
[12:27:09] <scott_gonzalez> I'd like to try to get those fixed and then release 1.12.1.
[12:27:22] <fnagel> I can check this later tonight
[12:28:01] <arschmitz> effects looks like the biggest issue
[12:28:33] <scott_gonzalez> Hmm...so the problem is that we use `String.fromCharCode()`
[12:29:13] <scott_gonzalez> Those values that they show in that SO answer represent letters.
[12:30:40] <scott_gonzalez> Because keyCode doesn't have to differentiate between uppercase and lowercase letters.
[12:30:40] <arschmitz> they got them here https://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes
[12:32:09] <scott_gonzalez> To avoid creating a list of the values, we can check if the keyCode is in that higher range and just subtract from it.
[12:32:35] <arschmitz> ah good idea
[12:33:55] <scott_gonzalez> Actually, we should just stop using keyCode.
[12:33:57] <scott_gonzalez> https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode
[12:33:59] <scott_gonzalez> AHHHHH
[12:34:20] <scott_gonzalez> This could be a big change.
[12:34:25] <scott_gonzalez> I'll look into that.
[12:35:45] <arschmitz> so use key + keyIdentifier ?
[12:35:50] <scott_gonzalez> yeah
[12:36:19] <scott_gonzalez> I'm not sure how up to date that page is.
[12:36:32] <scott_gonzalez> It's possible that there's enough support for one of those that we don't need to use both.
[12:36:57] <arschmitz> http://caniuse.com/#feat=keyboardevent-key
[12:37:24] <fnagel> when using current keyCode implementation, the following works:
[12:37:24] <fnagel> if ( event.keyCode > 96 && event.keyCode <= 105 ) {
[12:37:24] <fnagel> 	character = event.keyCode - 96;
[12:37:24] <fnagel> } else {
[12:37:24] <fnagel> 	character = String.fromCharCode( event.keyCode );
[12:37:24] <fnagel> }
[12:37:59] <arschmitz> also looks like no version of native android supports .key
[12:38:12] <arschmitz> chrome only added in 51
[12:40:44] <scott_gonzalez> fnagel: I'm fine with a quick fix for now that continues to use keyCode.
[12:41:28] <scott_gonzalez> Do you want to fix that bug?
[12:41:40] <fnagel> I can provide a PR later tonightr
[12:44:25] <scott_gonzalez> Just looked through all the references to `event.keyCode`, and this is the only place where we don't operate based on specific values.
[12:45:34] <scott_gonzalez> Anyone have anything else to discuss?
[12:54:03] <scott_gonzalez> I guess that's all for today.
[12:54:07] <scott_gonzalez> Thanks everyone.
