[09:02:04] <DaveMethvin> yay we got some people!
[09:03:02] <gibson042> and an agenda!
[09:03:16] <DaveMethvin> yep, not much of one but hey
[09:04:27] <DaveMethvin> so unless there are any big problems with the .1 releases i think we should just do 1.12/2.2 next
[09:05:51] <gibson042> I'm on board with that
[09:06:16] <DaveMethvin> so who else is here? m_gol?
[09:06:19] <DaveMethvin> timmywil?
[09:06:21] <m_gol> present
[09:06:27] <timmywil> hi
[09:06:47] <DaveMethvin> i wish google docs had tab completion
[09:07:08] <DaveMethvin> http://bugs.jquery.com/query?status=assigned&status=new&status=open&status=reopened&group=milestone&report=3&order=priority
[09:07:18] <DaveMethvin> so we have a pretty nice pile here
[09:08:04] <DaveMethvin> let me grab a few of these (the easy ones) ...
[09:09:01] <timmywil> Looks like I have 5. I'll need to get on that, but some of it is already written.
[09:09:26] <DaveMethvin> yeah and several are related like the script ones, markelog already has a pull for that i think
[09:10:06] <DaveMethvin> what do you guys think of this one, should we just remove that optimization entirely? http://bugs.jquery.com/ticket/14960
[09:10:32] <DaveMethvin> it would seem the single-element set is the only one that doesn't need unique and sort
[09:10:38] <gibson042> I'd like to compare outright removal with reduction to `name === "prev" || name === "next"`
[09:11:06] <DaveMethvin> i wonder how common multiple elements are with that anyway
[09:11:32] <gibson042> probably not very, but I could imagine it on large sets in lists/tables
[09:11:47] <DaveMethvin> yeah i guess prev/next can't have dups, you're right
[09:12:48] <gibson042> the funny thing is that contents/children don't have dupes either, but still needs the sorting operation from our combined method
[09:13:29] <DaveMethvin> right
[09:14:18] <DaveMethvin> rwaldron: i know you're at empirejs but are you still on board for the 1.12/2/2 tickets assigned?
[09:15:34] <DaveMethvin> i really need to get hold of jaubourg
[09:15:50] <DaveMethvin> $.xhr is prob the biggest thing we have here
[09:16:07] <DaveMethvin> maybe we should start working on it without him, that'll bring him around!
[09:16:20] <m_gol> ;)
[09:16:23] <m_gol> he's already started
[09:16:30] <m_gol> shortly after it was decided to do it
[09:16:37] <m_gol> dunno what's the stage currently
[09:16:57] <DaveMethvin> yeah i know he was doing some stuff, just need to see how far it has to go
[09:17:02] <m_gol> yup
[09:17:43] <m_gol> I've submitted a PR for Android 2.3 cross-domain issues
[09:17:43] <DaveMethvin> so how does everyone feel about .show()/.hide()? I'm over them completely and wonder if we should just document not to use them
[09:17:53] <DaveMethvin> classes are so much better
[09:18:07] <m_gol> hmm
[09:18:10] <m_gol> that seems really bold
[09:18:23] <m_gol> I guess they're one of the first methods people try with jQuery
[09:18:44] <DaveMethvin> yeah, kind of like the first Angular examples with dep injection that break when you minify
[09:18:47] <m_gol> we even advertise them on our *main page*!
[09:18:52] <m_gol> http://jquery.com/
[09:18:56] <m_gol> at the bottom
[09:19:08] <DaveMethvin> like, it's so easy but then when you try to make them interact right they break
[09:19:39] <DaveMethvin> i'm not saying we remove them but we just advise people use classes
[09:19:49] <m_gol> I know, it's just we're advertising them & it's a huge jump from advertising to dont use!
[09:19:56] <m_gol> yeah, that's better ;)
[09:20:11] <gibson042> also, we don't animate classes
[09:20:32] <DaveMethvin> yeah, animations are another story
[09:20:45] <DaveMethvin> a similar story :)
[09:20:48] <m_gol> :)
[09:21:08] <m_gol> well, the whole effects module was cool a couple of years ago but I haven't used it for a long time ;)
[09:21:31] <m_gol> it's also one of our biggest ones
[09:21:32] <DaveMethvin> css animations and transitions are all i normally  need
[09:21:40] <DaveMethvin> but i am one boring dude
[09:22:33] <m_gol> the thing is, you don't need more in simple cases
[09:22:48] <m_gol> and in complicated cases .animate() lacks performance
[09:23:54] <m_gol> have you all seen http://julian.com/research/velocity/?
[09:24:02] <DaveMethvin> to someone who doesn't know better, it seems like "create a span, hide it, append it to the document" should work but then the span is display:block or some other crazy thing and it starts to get complicated
[09:24:12] <DaveMethvin> yeah i saw it but haven't looked at it in detail
[09:24:35] <DaveMethvin> i did wonder if we should finally bring back requestAnimationFrame
[09:25:05] <m_gol> we still need setTimeout fallbacks
[09:25:12] <m_gol> in case someone switches to another tab etc.
[09:25:41] <DaveMethvin> well if we do that we've kind of removed the benefit of it not running
[09:25:46] <m_gol> k, I'm not an expert wrt .animate() code :)
[09:25:50] <DaveMethvin> which is why we didn't use them in the first place
[09:26:13] <DaveMethvin> it was the use case of "set a timeout of 10 seconds to run an animation every second"
[09:26:18] <m_gol> I mean that we do pass time to .animate()
[09:26:25] <DaveMethvin> so the timeouts ran but the animations didn't
[09:26:28] <m_gol> rAF itself doesn't deal with specific time
[09:26:57] <m_gol> k, I guess we could compute current time & apply the diff
[09:27:16] <DaveMethvin> it's good for the use case they envisioned, which is drawing when the window is visible
[09:27:17] <m_gol> but we still need to know what to do if sb schedules 100 animations and they're all waiting bc the user is on a diff tab
[09:27:26] <m_gol> & then they switch & 100 rAFs get fired
[09:27:27] <DaveMethvin> it just sucks as a time base otherwise
[09:27:46] <DaveMethvin> m_gol: they made a mistake if they did that
[09:27:50] <m_gol> :)
[09:28:04] <DaveMethvin> we could try to detect and recover but really they shouldn't be stacking up animations like that
[09:28:22] <DaveMethvin> but that's the exact scenario that led us to remove rAF
[09:28:35] <DaveMethvin> because there was too much bad animation code out there
[09:28:38] <m_gol> yeah, you should be one saying that
[09:28:43] <m_gol> I wasn't here then ;)
[09:29:11] <DaveMethvin> timmywil gibson042 any thoughts?
[09:29:12] <m_gol> well, I think it's ok to break some bad code from time to time
[09:29:25] <m_gol> otherwise we're staying with all these quirks that slow us down
[09:29:41] <gibson042> if I was around for rAF â†’ setTimeout, it was at the very end
[09:29:45] <DaveMethvin> the other challenge we face there is that the bad code is in some plugin and a guy who doesn't understand it includes the plugin
[09:29:53] <DaveMethvin> so it breaks but they don't know why
[09:30:00] <DaveMethvin> and 3/4 of the plugins out there are not being maintained
[09:30:36] <gibson042> I think we can patch up .show()/.hide() to not override stylesheet display, but the core animation code... I dunno
[09:31:02] <gibson042> it depends on what guarantees we've documented
[09:31:24] <DaveMethvin> i think you meant "it depends on whose code we break"
[09:31:29] <DaveMethvin> :)
[09:31:32] <DaveMethvin> or more like :(
[09:31:33] <gibson042> :P
[09:31:48] <DaveMethvin> IT USED TO WORK YOU BROKE IT
[09:32:29] <m_gol> DaveMethvin: you forgot "HOW COULD YOU FUCKERS" :P
[09:32:33] <DaveMethvin> lol
[09:33:28] <DaveMethvin> so timmywil gibson042  is this the time to stop kicking http://bugs.jquery.com/ticket/14633 down the road?
[09:33:58] <gibson042> probably
[09:35:10] <DaveMethvin> how do you guys feel about http://bugs.jquery.com/ticket/14692 ?
[09:35:56] <gibson042> I'm provisionally in favor of it
[09:36:25] <gibson042> it's a small method that does seem like our responsibility
[09:36:44] <m_gol> a CSS.escape polyfill?
[09:36:51] <m_gol> or however it's called
[09:36:51] <DaveMethvin> yeah, i hate utility functions but it seems like this is our area
[09:37:30] <DaveMethvin> at least if it's defined by a standard it should be less controversial than $.isNumeric :)
[09:37:40] <m_gol> :)
[09:37:54] <m_gol> and somewhere in the future we can alias it & deprecate
[09:38:15] <markelog> we didn't implement it yet, but already want to deprecated it )
[09:38:16] <DaveMethvin> just a sec, brb
[09:38:25] <m_gol> although...
[09:38:29] <m_gol> https://github.com/mathiasbynens/CSS.escape/blob/master/css.escape.js
[09:38:31] <m_gol> seems huge
[09:39:13] <m_gol> I'm not sure, if sb needs it, they can download a polyfill
[09:39:21] <m_gol> but we don't use it internally
[09:39:35] <m_gol> and it's not a small addition
[09:39:43] <DaveMethvin> yeah that's the utility fn argument
[09:40:04] <DaveMethvin> for some reason i feel more guilty about this one and the html escaping, like we shoudl have it
[09:40:26] <DaveMethvin> but i feel guilty about everything
[09:40:26] <m_gol> but at what cost ;)
[09:40:28] <m_gol> haha
[09:41:30] <DaveMethvin> that is one big ugly piece of code
[09:41:47] <gibson042> there is certainly a point where the cost is too high
[09:42:18] <m_gol> yeah, but we need to do it if that's going to be a polyfill
[09:42:32] <m_gol> and we shouldn't do sth different from CSS.escape bc why fork the standard
[09:42:37] <m_gol> especially with such a function
[09:42:40] <DaveMethvin> we could always just update our docs to make it clearer and point ppl to existing polyfills like this one
[09:42:42] <m_gol> so I think -1 from me
[09:42:57] <m_gol> yup
[09:42:59] <DaveMethvin> the docs could really use some work on things like this
[09:43:22] <DaveMethvin> i am never clear where we can put this kind of info and have it be read
[09:43:32] <gibson042> that code isn't optimized for size
[09:43:32] <DaveMethvin> seems like a lot of clutter for the api docs
[09:44:15] <DaveMethvin> for example, "DOM event names have magic in jQuery, don't trigger custom events named `focus` or `click` or you're gonna have a bad time"
[09:44:38] <m_gol> gibson042: that's true but you can't compress those arbitrary segments too much: https://github.com/mathiasbynens/CSS.escape/blob/master/css.escape.js#L55-60
[09:45:15] <DaveMethvin> why didn't they put all the good chars in a contiguous range :)
[09:45:37] <m_gol> you bloody capitalist!
[09:45:44] <DaveMethvin> i know, we'll do a lookup table!
[09:46:36] <DaveMethvin> okay i think we have most of these tickets assigned, now we just have to get them done
[09:46:55] <m_gol> I feel we have more responsibility to make this work: https://github.com/mathiasbynens/CSS.escape/blob/master/css.escape.js#L55-60
[09:47:14] <markelog> how is doing the animations one?
[09:47:37] <gibson042> yeah you can: `/[-_0-9A-Za-z\u0080-\uFFFF]/`
[09:47:40] <markelog> raf and all that?
[09:48:33] <m_gol> right... didn't read the comment
[09:49:24] <DaveMethvin> the code wouldn't need to be super fast imo, it just needs to work right
[09:49:31] <gibson042> agreed
[09:49:32] <DaveMethvin> it's not gonna be called that often
[09:49:37] <m_gol> yeah
[09:49:59] <gibson042> I took it and we can all look at the damage before accepting a commit
[09:50:09] <DaveMethvin> thanks gibson042
[09:50:43] <DaveMethvin> markelog:  http://bugs.jquery.com/ticket/14189 should be fixed when we change to script injection ?
[09:51:24] <markelog> sec
[09:51:42] <m_gol> markelog: nothing really settled on .animate(), see the log: http://irc.jquery.org/%23jquery-meeting/default_%23jquery-meeting_20140505.log.html
[09:52:09] <_markelog> damn internet
[09:52:18] <_markelog> it should be, yes
[09:52:20] <DaveMethvin> right, on animate i'd also like to find out what gnarf might think
[09:52:29] <DaveMethvin> np markelog
[09:52:39] <_markelog> yep, wanted to cc him in the ticket
[09:53:07] <_markelog> as i see it we could use either new api for raf or use css-animations like zepto
[09:53:31] <DaveMethvin> the prob with css animations is that they can only do a subset of our stuff
[09:53:48] <_markelog> did we already try that?
[09:54:01] <DaveMethvin> there's a plugin around
[09:54:15] <DaveMethvin> looks for css-animateable props and does them tat way
[09:54:20] <DaveMethvin> also, http://julian.com/research/velocity
[09:54:30] <DaveMethvin> that might be more interesting, supposed to be faster
[09:54:41] <DaveMethvin> but i wonder about compat
[09:54:50] <_markelog> and size i suppose
[09:54:54] <_markelog> it should be big
[09:55:07] <_markelog> raf on the other hand shouldn't be
[09:55:24] <DaveMethvin> the velocity one is supposed to be a drop-in replacement for animate, so you could do a custom build leaving our ours and putting in hs
[09:55:25] <_markelog> and it should use gpu for everything
[09:55:28] <DaveMethvin> his*
[09:55:38] <gibson042> velocity is not drop-in compatible with our .animate test suite, but does have some ideas we can probably apply
[09:56:09] <_markelog> there is a lot of dropins there, we could check them all and find appropriate way to do this
[09:56:23] <DaveMethvin> this is the one i was thinking of https://github.com/benbarnett/jQuery-Animate-Enhanced
[09:56:55] <_markelog> or https://github.com/rstacruz/jquery.transit/
[09:57:05] <DaveMethvin> i think transit makes new methods
[09:57:10] <DaveMethvin> which is the easier way :)
[09:57:32] <_markelog> yep, just like with jQuery#raf
[09:57:58] <_markelog> transitions does not work on some methods or do work but do not enable gpu for them
[09:58:05] <_markelog> whereas raf does it all the time
[09:58:15] <DaveMethvin> _markelog: do you want to take a look and see if there is something simple we could do?
[09:58:38] <_markelog> yes i do, but i also taked the resposobility on karma for core
[09:58:56] <m_gol> the abyss :)
[09:59:07] <_markelog> which of them has bigger priority?
[09:59:17] <m_gol> I vote for Karma
[09:59:29] <DaveMethvin> it sure would be nice to have green tests
[09:59:34] <m_gol> especially after spending a lot of time restarting TestSwarm jobs :P
[09:59:39] <_markelog> btw https://github.com/jquery/qunit/pull/553
[09:59:43] <DaveMethvin> yeah i think animations can wait
[09:59:50] <_markelog> seems strange that it took so long for us to merge it
[09:59:58] <m_gol> also, I'm not sure if anyone actually manually run our effects test suite in browsers that hang on it in TestSwarm
[10:00:25] <DaveMethvin> i haven't run it in IE8 for a while
[10:00:27] <_markelog> i mean we didn't even merge this yet, but we kinda need to
[10:00:45] <m_gol> IE8 passes since we restart jobs so that's not an issue
[10:00:48] <m_gol> even IE7 mostly does
[10:00:53] <m_gol> it's mainly the Android problem
[10:01:05] <m_gol> anyway, I've checked today and we pass effects without errors in Android 2.3
[10:01:13] <_markelog> i will create ticket for animations, then will start work on karma for core
[10:01:13] <DaveMethvin> yay!
[10:01:22] <_markelog> nice
[10:01:25] <DaveMethvin> that sounds good
[10:01:47] <m_gol> I actually managed to point down one test that always hangs in testswarm
[10:01:57] <m_gol> see http://swarm.jquery.org/result/1804776
[10:02:05] <m_gol> ajax: #11743 - jQuery.ajax() - script, throws exceptionR
[10:02:13] <m_gol> in the emulator this test just fails
[10:02:23] <m_gol> in TestSwarm, it always stucks just there
[10:02:40] <DaveMethvin> is that test using a script tag? or globalEval?
[10:03:06] <DaveMethvin> just wondering if it will be fixed by always using a script tag :)
[10:03:13] <_markelog> as i understand we need to release beta in september, right?
[10:03:24] <DaveMethvin> that sounds about right
[10:03:40] <_markelog> sec
[10:03:42] <DaveMethvin> maybe a bit earlier
[10:03:53] <DaveMethvin> depending on how things go
[10:04:01] <m_gol> DaveMethvin: it's the script transport in 2.x
[10:04:08] <m_gol> works fine in 1.x
[10:04:22] <DaveMethvin> hmmm
[10:04:34] <DaveMethvin> okay, well i have to take off here
[10:04:35] <_markelog> in 2. we don't have script injection
[10:04:37] <DaveMethvin> whoa
[10:04:46] <_markelog> man
[10:04:56] <DaveMethvin> people are dropping like flies!
[10:05:02] <_markelog> i mean we do in 2. we don't in 1.
[10:05:58] <DaveMethvin> okay, we've got most of these tickets assigned so let's get started ... once we're pretty sure the .1 releases are solid we can start landing in master
[10:06:07] <m_gol> ok
[10:06:12] <m_gol> I have a couple of PRs to look at ;)
[10:06:16] <DaveMethvin> see you guys later, thanks!
