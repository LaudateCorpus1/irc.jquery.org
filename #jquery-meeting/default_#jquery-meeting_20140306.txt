[07:02:23] <rxaviers> Hi Nikerabbit, iskren, santhosh, siebrand, jzaefferer, scott_gonzalez, tj_vantoll1
[07:02:23] <kborchers> hi there :)
[07:02:27] <rxaviers> Thanks!
[07:02:28] <rxaviers> :)
[07:02:29] <kborchers> np
[07:06:02] <rxaviers> Seems there's no quorum today...
[07:06:52] <tj_vantoll1> I'm lurking but I don't have anything to talk about.
[07:09:34] <Krinkle> Hi
[07:09:46] <Krinkle> I concur
[07:09:51] <rxaviers> thanks tj_vantoll1
[07:09:56] <Nikerabbit> hi
[07:10:03] <rxaviers> Hi Krinkle, and Nikerabbit
[07:10:28] <rxaviers> I've just pinged iskren via email. But, got no response. So, I don't know if he's joining.
[07:10:55] <rxaviers> Iskren have opened several bugs recently on cldr.js and globalize.
[07:11:00] <rxaviers> has*
[07:13:07] <rxaviers> Iskren has also exchanged some emails with me. He's trying to get a working version of moment-cldr. So, we may hear updates from him probably soon.
[07:13:41] <rxaviers> On Globalize, I'm working on its number module (number format/parse)
[07:13:42] <rxaviers> https://github.com/jquery/globalize/pull/209
[07:14:33] <rxaviers> Number format is functional. Need to finish implementing it, then move on to number parse.
[07:14:58] <rxaviers> Nikerabbit, Krinkle, do you have any updates you'd like to share?
[07:16:27] <rxaviers> Nikerabbit, did you have a chance to have something done on https://github.com/jquery/globalize/issues/205 ?
[07:20:39] <Nikerabbit> rxaviers: sorry, still nothing :/
[07:23:31] <rxaviers> Nikerabbit, any plans?
[07:24:30] <Nikerabbit> rxaviers: I'd like to, but it is hard to find time
[07:25:45] <rxaviers> I see. Alright, so unless anyone has anything else, see you all in 2 weeks.
[11:01:28] <uGoMobi> hi all
[11:02:32] <uGoMobi> arschmitz agcolom _|Nix|_
[11:02:37] <_|Nix|_> Hey!
[11:03:05] <agcolom> Hi!
[11:04:03] <uGoMobi> hey _|Nix|_ and agcolom
[11:04:47] <uGoMobi> arschmitz: are you here?
[11:04:55] <agcolom> I am late with uploading the minutes... been crazy. Will do by the end of the weekend
[11:05:14] <agcolom> (maybe tomorrow if I get a chance)
[11:05:32] <uGoMobi> agcolom: ok thanks
[11:06:00] <uGoMobi> maybe we can make a script for that as well :)
[11:06:14] <arschmitz> here
[11:06:39] <uGoMobi> hey arschmitz
[11:06:44] <markedro_> Hi All, first time here so not sure about protocol or if this is the proper but have a (hopefully) easy question: The HTML source for jqm 1.4 slider tooltips exists here http://view.jquerymobile.com/1.4.2/demos/slider-tooltip/ but the separate js and css aren't present as the are here: http://view.jquerymobile.com/1.3.0/docs/examples/slider/tooltip.php#&ui-state=dialog , does anyone know if those can/will be posted separate
[11:07:57] <uGoMobi> markedro_: this is not really a question for this channel
[11:08:16] <uGoMobi> we are having our weekly meeting at the moment
[11:08:30] <markedro_> cool, do you know which channel would be best?
[11:08:52] <_|Nix|_> markedro_: I can take your question in #jqueryui-dev, since this is a question related to the repo IMO.
[11:08:53] <uGoMobi> we can give it look afterwards and answer on #jqueryui-dev
[11:09:11] <uGoMobi> _|Nix|_: cool
[11:09:26] <uGoMobi> _|Nix|_: you added some topics to the agenda
[11:09:30] <markedro_> ok, thanks
[11:09:39] <uGoMobi> np
[11:09:55] <uGoMobi> let's start with removal of style options
[11:09:57] <_|Nix|_> Yeah.
[11:10:45] <uGoMobi> might be good to mention here that we work together with the web-ui-framework team on this
[11:10:57] <arschmitz> is there a document for this?
[11:11:05] <uGoMobi> a wiki page has been created for notes https://github.com/jquery/jquery-mobile/wiki/1.5-Style-options-removal
[11:12:13] <uGoMobi> _|Nix|_: regarding CSS file size: all styles are already in the CSS, so why should it increase?
[11:13:17] <arschmitz> i have a few things i notice right off
[11:13:39] <uGoMobi> ok go ahead
[11:13:42] <_|Nix|_> uGoMobi: Because you might have to add extra selectors to existing styles. Does that not make application slower?
[11:13:48] <arschmitz> unless something changed i was not aware of i thought we decided to only remove bool style options
[11:13:55] <arschmitz> so things like icon should stay
[11:14:21] <arschmitz> otherwise its hard to manage because you potentially dont know what the current icon class is you need to remove before adding the new one
[11:14:46] <arschmitz> and i dont think we should expect people to parse the class list with a regex or anything like that
[11:14:50] <uGoMobi> arschmitz: actually the list at the wiki page is from the Google doc you made
[11:14:57] <uGoMobi> but it's good to discuss this
[11:15:08] <arschmitz> right but i thought we decided to change and i just dont think we updated
[11:15:20] <arschmitz> it was something we discussed in austin i think
[11:15:26] <_|Nix|_> Any option that results in simply adding a class can go.
[11:15:35] <_|Nix|_> arschmitz: icon just means remove this class and add another.
[11:15:49] <_|Nix|_> arschmitz: Devs know which class they added to the initial markup, because, well, they added it.
[11:15:52] <arschmitz> _|Nix|_: but how do you know what class to remove?
[11:16:02] <_|Nix|_> arschmitz: It's application specific.
[11:16:08] <arschmitz> _|Nix|_: i disagree
[11:16:19] <_|Nix|_> arschmitz: How would you change the icon on an anchor?
[11:16:25] <_|Nix|_> arschmitz: buttonMarkup is gone.
[11:16:29] <_|Nix|_> arschmitz: You still can.
[11:16:50] <arschmitz> _|Nix|_: this is about widgets those are not widgets
[11:17:03] <arschmitz> _|Nix|_: the whole idea of a widget is to manage state
[11:17:19] <arschmitz> _|Nix|_: otherwise we should completely remove the listview widget
[11:17:35] <arschmitz> because all it does is apply classes
[11:18:22] <_|Nix|_> arschmitz: that's all it does, but there's logic in where it puts which class.
[11:18:23] <uGoMobi> you can add the icon class to your markup anyway, and it will still increase performance because addClass doesn't add the same class again
[11:18:45] <arschmitz> uGoMobi: yes exactly
[11:19:13] <arschmitz> _|Nix|_: you can look at ui also
[11:19:25] <arschmitz> they have options for icons and anything thats not a boolean
[11:19:26] <uGoMobi> so if we keep the option you can use the widget to dynamically change an icon
[11:19:52] <arschmitz> _|Nix|_: and we shouldnt force the dev to hold state on classes in a widget
[11:20:07] <arschmitz> otherwise if your app changes icons several times you have no idea what to remove
[11:20:08] <_|Nix|_> arschmitz: OK. I'm swayed by your argument.
[11:20:40] <arschmitz> _|Nix|_: most of the options we are removing fall into the bool class though
[11:20:55] <arschmitz> shadow / corners / inset / mini etc
[11:20:55] <_|Nix|_> Yeah. corner, shadow, inset.
[11:20:58] <_|Nix|_> Right :)
[11:21:11] <arschmitz> theme is another one we will need to keep though
[11:21:34] <_|Nix|_> arschmitz: Yeah, I think so. In fact, the way we calculate which theme to apply is shared code between several widgets.
[11:21:43] <uGoMobi> yeah I am looking at the list now and icons and theme options seem to be the ones we need to keep
[11:21:55] <arschmitz> yeah and iconpos too
[11:22:05] <uGoMobi> right, I forgot that one
[11:22:19] <_|Nix|_> I guess any option where the current value affects the future state needs to be handled by the widget.
[11:22:37] <arschmitz> yup but thats the basic concept of a widget is to manage state
[11:22:44] <_|Nix|_> Oh, don't get me started on the relationship between icon and iconpos ... *shudder*
[11:22:58] <arschmitz> _|Nix|_: well we can look into simplifying that
[11:23:09] <arschmitz> iv been looking at it a bit already
[11:23:13] <arschmitz> with ui button
[11:23:50] <_|Nix|_> Oh, and then there's inheritance.
[11:24:10] <arschmitz> _|Nix|_: thats going away
[11:24:15] <arschmitz> so no worries there
[11:24:18] <uGoMobi> _|Nix|_: are you talking in general or collapsibe vs. collapsible set?
[11:24:19] <_|Nix|_> arschmitz: What do you mean?
[11:24:29] <_|Nix|_> uGoMobi: Collapsible and -set.
[11:24:35] <uGoMobi> right
[11:24:36] <arschmitz> we wont have theme inheritance in new shared theme
[11:24:44] <_|Nix|_> arschmitz: Not just theme.
[11:24:44] <arschmitz> oh that
[11:24:57] <_|Nix|_> arschmitz: What if I set ui-mini on the set, but I want one member to not be mini?
[11:24:59] <uGoMobi> we won't have two widgets anymore
[11:25:14] <uGoMobi> just one accordion widget
[11:25:35] <arschmitz> uGoMobi: yup
[11:25:54] <arschmitz> yeah that is a problem of design
[11:26:07] <_|Nix|_> OK, so lessee about controlgroup: You can't set theme a on the group and have one button be theme b by setting theme b on the button?
[11:26:08] <uGoMobi> _|Nix|_: are there inheritance related problems at the moment that need to be fixed
[11:26:26] <arschmitz> _|Nix|_: i dont think controlgroup should have a them option
[11:26:30] <_|Nix|_> uGoMobi: AFAIK I've fixed them all in collapsible and -set.
[11:27:14] <uGoMobi> _|Nix|_: thought so too, so I don't think we have to worry about this now since we are going to replace it by one single widget
[11:27:20] <arschmitz> _|Nix|_: and i dont think widgets should set any theme by default
[11:27:43] <arschmitz> or we should make all widgets set a by default
[11:27:48] <arschmitz> one or the other
[11:27:57] <_|Nix|_> arschmitz: We had that.
[11:27:57] <uGoMobi> this is also going away in the new CSS framework that won't use swatches anymore
[11:28:10] <arschmitz> yup
[11:28:12] <_|Nix|_> OKOK, but let's confine ourselves to 1.5.0
[11:28:43] <_|Nix|_> It seems to me that we should try to reduce the number of places where a -[a-z] class has to appear.
[11:29:13] <uGoMobi> _|Nix|_: yes but it is important to keep the roadmap to 2.0 in mind because we shouldn't invest time in improving something that is going away. Only fix problems.
[11:29:19] <_|Nix|_> This actually means /increased/ CSS-based inheritance /and/ /reduced/ ability to locally override by setting a different swatch.
[11:29:34] <_|Nix|_> ^ is with an eye on the roadmap.
[11:30:14] <_|Nix|_> ... because, eventually, the "swatch" will be set at the document level, and you won't be able to override with a different swatch at all, because there is no other swatch.
[11:30:33] <arschmitz> what about if we just make all widgets set theme a by default and dont make widgets use css inheritance?
[11:30:36] <uGoMobi> The current CSS theme inheritance is designed in a way that adding a theme class to an element in a set will override the style of the set
[11:31:16] <arschmitz> and remove theme option for things like controlgroup
[11:31:34] <uGoMobi> arschmitz: actually we added that because people asked for it
[11:32:01] <arschmitz> right but it turned out to be a bad idea what will be removed with new theme anyway
[11:32:17] <arschmitz> it makes the interaction of what should be urelated widget options very complex
[11:32:36] <_|Nix|_> Hold on. Right now, we are adding -[a-z] classes in fewer places, because CSS-based inheritance works.
[11:32:53] <uGoMobi> yes, we add them almost nowhere
[11:33:02] <uGoMobi> page always has a theme though
[11:33:05] <_|Nix|_> Let's keep that. We want to keep reducing, not re-adding them everywhere.
[11:33:33] <_|Nix|_> Why don't we deprecate swatches?
[11:33:38] <arschmitz> by making widgets add it though you dont have to worry about widgets outside page anymore
[11:33:52] <arschmitz> lol thats an idea
[11:34:00] <_|Nix|_> No, seriously.
[11:34:06] <_|Nix|_> As of 1.6.0, no more swatches.
[11:34:11] <arschmitz> id be ok with it
[11:34:13] <uGoMobi> that is indeed something we could consider
[11:34:18] <uGoMobi> doesn't need to wait until 2.0
[11:34:36] <arschmitz> so just dont worry about theme for 1.5 and remove swatches and theme in 1.6
[11:34:47] <uGoMobi> but we have to keep it easy for people to use some different styles for buttons for example
[11:34:57] <_|Nix|_> Provide a demo.
[11:35:21] <arschmitz> uGoMobi: we could modify themeroller to put extra swatches in a seperate file
[11:35:21] <uGoMobi> first we have to see how that would work
[11:35:29] <arschmitz> and show people how to apply it with a class
[11:35:58] <_|Nix|_> What is it about swatches that makes it necessary to give them a letter?
[11:36:06] <uGoMobi> yes but if the theme css won't contain classes with -[a-z] anymore, how would the override work when you add another button style
[11:36:26] <_|Nix|_> I mean, if you want a subtree to have different colours, you can use a specific selector.
[11:36:26] <arschmitz> the classes in the other styles would be more specific
[11:36:38] <_|Nix|_> Exactly.
[11:36:42] <arschmitz> because you could remove all the crazy specificty
[11:36:43] <_|Nix|_> Woah ... parallel thinking.
[11:36:46] <arschmitz> on the default
[11:36:55] <uGoMobi> true
[11:37:04] <arschmitz> and dont support multiple overides or anything crazy like that
[11:37:06] <uGoMobi> but if you have like 3 button colors
[11:37:27] <uGoMobi> anyways, we don't have to work it out into detail now
[11:37:29] <arschmitz> yeah each extra swatch has the same specificity
[11:37:39] <_|Nix|_> arschmitz: An arbitrary number of overrides is actually impossible. CSS just isn't expressive enough. I've tested that.
[11:37:40] <uGoMobi> it is something we should seriously consider
[11:37:44] <arschmitz> so you apply its class it overides default
[11:37:45] <_|Nix|_> arschmitz: You can override at most twice.
[11:38:07] <arschmitz> _|Nix|_: i know thats why we only support one overide
[11:38:13] <arschmitz> not any more
[11:38:21] <uGoMobi> I am sure we can think of something
[11:38:42] <arschmitz> this should be pretty simple if we do it right
[11:38:42] <_|Nix|_> Actually, you could do it with css pre-processing.
[11:39:03] <_|Nix|_> Instead of assigning a swatch letter, you assign a selector prefix.
[11:39:10] <uGoMobi> I don't think that would take care of specificity/override
[11:39:34] <arschmitz> anyway we can get into this more in the future i think
[11:39:41] <_|Nix|_> Yeah, for sure.
[11:39:41] <uGoMobi> yeah
[11:39:48] <arschmitz> for now we should concentrate at removeing bool style options
[11:39:52] <_|Nix|_> OK.
[11:40:12] <uGoMobi> agreed
[11:40:40] <uGoMobi> anything else about this topic we need to discuss _|Nix|_ ?
[11:40:44] <_|Nix|_> We need to document that whenever you add a class to wrapperClass, you later toggle it with .widgetname( "widget" ).toggleClass()
[11:41:25] <arschmitz> _|Nix|_: huh?
[11:41:40] <arschmitz> ooh ok nevermind i get it
[11:41:49] <_|Nix|_> OK.
[11:41:54] <_|Nix|_> Another point brought up there.
[11:42:03] <_|Nix|_> What about options that are default-true?
[11:42:07] <_|Nix|_> Like, ui-shadow
[11:42:07] <uGoMobi> _|Nix|_: is there a ticket for this?
[11:42:15] <_|Nix|_> uGoMobi: There will be in a sec.
[11:42:21] <arschmitz> _|Nix|_: then the widget should add the class
[11:42:27] <_|Nix|_> uGoMobi: We should have milestones in API docs too, I think.
[11:42:36] <uGoMobi> _|Nix|_: great, thanks
[11:42:45] <uGoMobi> I thought we had milestones there already
[11:42:57] <uGoMobi> maybe need to add 1.5+ though
[11:42:58] <arschmitz> _|Nix|_: what ui does for classes like that is they actually store all the default classes in a string and add the whole string at create
[11:43:28] <arschmitz> so if shadow default is true then it would be part of this string
[11:43:32] <_|Nix|_> Right. OK, so we hardcode the fact that we add the calss?
[11:43:42] <arschmitz> then when the widget is destroyed you can do removeclass the same var
[11:43:43] <_|Nix|_> So, what if you don't want a shadow?
[11:44:03] <arschmitz> _|Nix|_: well thats where new classes option thats being worked on comes in
[11:44:18] <arschmitz> it allows you to overide classes like that
[11:44:34] <arschmitz> we can start iplementing the classes option?
[11:44:50] <arschmitz> panel already has it
[11:45:32] <_|Nix|_> *sigh* ... option ... option ... it should be part of defaults.
[11:45:43] <_|Nix|_> An option means you can change it at runtime.
[11:45:56] <_|Nix|_> Do we really want to write the code that updates the value of the classes option?
[11:46:54] <uGoMobi> that's a good point
[11:47:17] <uGoMobi> the classes option is probably something you will never want to set at runtime
[11:47:32] <arschmitz> _|Nix|_: uGoMobi: https://github.com/jquery/jquery-ui/pull/790/files#diff-43ba26ad21cd0ed4309fad0b27644610R360
[11:47:43] <arschmitz> it will be handled by the widget factory
[11:48:16] <uGoMobi> ok nice
[11:48:27] <uGoMobi> so we don't have to add any extra code for it
[11:49:26] <_|Nix|_> OK, so when are we getting a factory that has this functionality?
[11:50:00] <arschmitz> well there is that pull request that just needs to be updated and landed basicly
[11:50:06] <uGoMobi> we use the same factory so why not?
[11:50:29] <_|Nix|_> uGoMobi: Because we still need to decide to pull it in. That's what I meant. Sorry!
[11:50:33] <arschmitz> the only potential catch is it wont be for 1.11 at this point
[11:50:38] <_|Nix|_> Right.
[11:50:56] <arschmitz> and we will release 1.5 before 1.12 im sure
[11:51:14] <uGoMobi> 1.11 or 1.12?
[11:51:29] <uGoMobi> oops sorry... misread
[11:51:47] <arschmitz> but we could always use an unreleased widgetfactory again we are now lol
[11:51:54] <_|Nix|_> OK, so, in 1.6.0: ui-shadow will be added duing _create(), because the shadow option used to have a default of false.
[11:51:59] <arschmitz> as long as its in master
[11:52:11] <_|Nix|_> I mean a default of true.
[11:52:22] <arschmitz> _|Nix|_: right
[11:52:26] <_|Nix|_> ... and if you want a button without a shadow, you ... what?
[11:52:41] <_|Nix|_> If we have the classes option, ... ummm ... how do you override it for that one button?
[11:52:49] <arschmitz> _|Nix|_: yup
[11:53:02] <_|Nix|_> arschmitz: Well, how do you override it for that one button?
[11:53:20] <_|Nix|_> arschmitz: ... if we have the classes option?
[11:53:57] <_|Nix|_> arschmitz: I can see no other way that $.mobile.document.on( "buttoncreate", function() { $( this ).button(????); );
[11:54:02] <arschmitz> widget({ classes: { "structural-class-that-gets-shadow":"" } } );
[11:54:02] <_|Nix|_> s/that/than/
[11:54:25] <_|Nix|_> arschmitz: OK, so we're also getting rid of autoinit?
[11:54:43] <arschmitz> no but that does not mean for a certain use it wont be enough
[11:55:05] <uGoMobi> I am looking at the clock
[11:55:18] <_|Nix|_> I'm not objecting to this approach, but I'm sorry to say that this is waaaaay uglier than what we have now.
[11:55:19] <arschmitz> autoinit is a connivence it does not cover all use cases 100% of the time
[11:55:19] <uGoMobi> maybe we should discuss this further on -dev
[11:55:39] <_|Nix|_> We're now forcing devs to write style-related code.
[11:56:00] <arschmitz> _|Nix|_: how often do you think people remove the shadow from a single button?
[11:56:21] <_|Nix|_> arschmitz: OK, bad example. How do you override a default value for any style option?
[11:56:33] <_|Nix|_> arschmitz: For a single widget.
[11:56:40] <_|Nix|_> arschmitz: ... without writing any JS?
[11:56:50] <arschmitz> you dont
[11:57:00] <uGoMobi> This is not really a topic for a weekly meeting that is mostly meant for short status updates
[11:57:09] <_|Nix|_> OK. Let's move to -dev. Sorry!
[11:57:09] <arschmitz> just like you can simply overide corner style in ui
[11:57:15] <uGoMobi> we are really getting too much into details here
[11:57:30] * _|Nix|_ is amblin' on over to -dev
[11:58:20] <uGoMobi> arschmitz: do you have time to work on a page vs. pagecontainer events demo?
[11:59:19] <arschmitz> yes its half done
[11:59:33] <arschmitz> i had requests for it in both austria and san diego
[11:59:51] <_|Nix|_> arschmitz: There was a concern about "wordiness".
[11:59:53] <uGoMobi> yeah, many people ask for it
[12:00:03] <uGoMobi> great that you already started to work on that
[12:00:10] <uGoMobi> one last thing
[12:00:11] <_|Nix|_> arschmitz: I would recommend you use .pagecontainer({ eventname: handler }) as often as possible when attaching handlers.
[12:00:16] <uGoMobi> the file structure change
[12:00:19] <arschmitz> _|Nix|_: im not too worried about the verbosity of event names
[12:00:26] <_|Nix|_> arschmitz: "eventname" is shorter than "pagecontainereventname".
[12:00:49] <arschmitz> _|Nix|_: yeah
[12:01:14] <arschmitz> i wrote one back for 1.3 i just need to update
[12:02:22] <_|Nix|_> arschmitz: There's another nagging unavoidability. We have to discourage use of $.mobile.pageContainer, because, in the future, you'll have to track your own.
[12:02:51] <_|Nix|_> So myPageContainer.pagecontainer( anything ) should become the norm.
[12:03:05] <arschmitz> _|Nix|_: yup
[12:03:47] <_|Nix|_> arschmitz: That's gonna result in a lot of verbosity.
[12:04:16] <_|Nix|_> arschmitz: Especially here.closest( ":data('mobil-pagecontainer')" ).pagecontainer( "anything" );
[12:04:22] <uGoMobi> what is the status of this PR https://github.com/jquery/jquery-mobile/pull/7100 ?
[12:04:34] <_|Nix|_> arschmitz: That's extremely verbose for changing a page, for example.
[12:04:52] <_|Nix|_> arschmitz: I wish we had C preprocessor macros :)
[12:05:18] <uGoMobi> we are running over time and again we are going into details which can be discussed on -dev
[12:05:20] <arschmitz> _|Nix|_: honestly if your manageing multiple containers and changing pages in them id expect you to store a refrence to each and call directly
[12:05:50] <_|Nix|_> uGoMobi: Sorry. These are heady topics though.
[12:06:08] <_|Nix|_> arschmitz: Yeah, for sure, but what about the simple, one-off case. That's exactly where it becomes verbose.
[12:06:19] <arschmitz> yup
[12:06:37] <_|Nix|_> ... and that's ... undesirable?
[12:06:39] <arschmitz> _|Nix|_: but in a one off you can just do $( "body" )
[12:07:06] <uGoMobi> _|Nix|_: yes, but if we just first go over all topics in the agenda we will be ready in half hour and then we can move to -dev to discuss this details
[12:07:42] <_|Nix|_> OKOK. Sorry! So, file structure changes?
[12:07:51] <uGoMobi> yup
[12:08:03] <arschmitz> is not on the agenda lol
[12:08:09] <uGoMobi> what is the status of those PRs
[12:08:21] <uGoMobi> check again arschmitz  ;)
[12:08:38] <uGoMobi> I have slow WiFi... good excuse ;-)
[12:08:53] <uGoMobi> anyways, when are we going to make these changes?
[12:09:01] <arschmitz> or im on the wrong tab
[12:09:35] <arschmitz> no wonder i was confused all meeting why we were so off topic and skipping my topics
[12:09:55] <_|Nix|_> Let's just get the file structure changes into master, and then pick up the pieces.
[12:10:14] <arschmitz> _|Nix|_: no we should test well first
[12:10:15] <_|Nix|_> Where picking up the pieces means rebasing all outstanding PRs.
[12:10:20] <arschmitz> oh ok
[12:10:34] <arschmitz> yeah that was the plan
[12:10:35] <_|Nix|_> I suspect git will be able to track the renames.
[12:12:33] <uGoMobi> shall we work on that first?
[12:12:38] <_|Nix|_> OK.
[12:12:55] <uGoMobi> arschmitz: what topics did you add to the agenda?
[12:13:17] <arschmitz> just testswarm and selectmenu
[12:13:26] <_|Nix|_> I don't see anything below "changing file structure".
[12:13:48] <arschmitz> _|Nix|_: see my earlyer comment about confusion and tabs
[12:14:20] <arschmitz> so testswarm yeah we need it im going to find out who the best person to talk to is and see what we need to do to get started
[12:14:33] <_|Nix|_> Oh, +1000
[12:14:41] <arschmitz> even if its just ie11 chrome and firefox to start and add more as we iron out tests
[12:14:48] <_|Nix|_> We're gonna have a bear of a time getting things to pass on /all/ browsers.
[12:14:50] <uGoMobi> yeah
[12:15:17] <arschmitz> and selectmenu falling back to native is a bit complicated
[12:15:48] <arschmitz> because you cant decide what to do at the time of the click because you can neither programaticly open a select or prevent one from opening programaticly
[12:16:08] <arschmitz> so you actually need different markup for native vs custom
[12:16:31] <uGoMobi> exactly
[12:16:54] <uGoMobi> that was the reason why I commented on that PR for the deprecated note in the API docs
[12:16:58] <arschmitz> so what we will need to do is check if we need native or custom on throttledresize, pageshow, window.onload, orientationchange, and refresh
[12:17:15] <arschmitz> and adjust the markup
[12:17:34] <_|Nix|_> Yep.
[12:17:46] <arschmitz> which turns out to be suprisinglu simple all you need to do is move the select into or outof the .ui-btn
[12:18:15] <_|Nix|_> Cool!
[12:18:26] <uGoMobi> nice
[12:18:30] <arschmitz> and with a couple execptions that makes it work in all the demo examples
[12:18:42] <arschmitz> i have 2 that act really weird i need to figure out their deal
[12:19:06] <arschmitz> someone on just 2 when you click them they cycle the option and no menu of either type is shown
[12:19:16] <_|Nix|_> I remember a snag ... you must detach first rather than simply setting another element as the parent, because that triggers remove. Not sure if that's relevant here.
[12:19:16] <arschmitz> but im sure i can figure out whats weird there
[12:19:48] <arschmitz> _|Nix|_: maybe thats causing my weirdness on some ill check it out
[12:20:00] <uGoMobi> arschmitz: can you add these points to the agenda... at the right tab? :)
[12:20:03] <_|Nix|_> arschmitz: Yeah, because if you have a change handler, that will be removed when you reparent.
[12:20:10] <uGoMobi> I really need to run
[12:20:14] <arschmitz> uGoMobi: sure
[12:20:23] <uGoMobi> agcolom: you still there?
[12:20:24] <_|Nix|_> To the -dev cave!
[12:20:29] <_|Nix|_> OK, so not.
[12:20:30] <agcolom> yes
[12:20:31] <uGoMobi> agcolom: anything you wanted to discuss
[12:20:33] <uGoMobi> ?
[12:20:54] <agcolom> no, just some PRs for api docs would need reviewing
[12:21:07] <_|Nix|_> Yeah, I have some API PRs too.
[12:21:42] <uGoMobi> yeah, I wanted to do some more reviewing but didn't get to it, sorry
[12:22:04] <uGoMobi> let's make sure we land all those soon
[12:22:13] <uGoMobi> ok let's wrap up here
[12:22:18] <uGoMobi> thanks all!
[18:08:32] -barjavel.freenode.net- [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
