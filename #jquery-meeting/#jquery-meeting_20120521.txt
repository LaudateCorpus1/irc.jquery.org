[09:01:04] <mikesherov_> here!
[09:01:12] <mikesherov_> woah, I was already here?
[09:01:57] <gibson042> stop violating causality!
[09:01:58] <mikesherov> oh, there I am
[09:02:05] <DaveMethvin> whoa
[09:02:25] <mikesherov> I forgot that I set up my IM client to log me into irc in the morning
[09:02:25] <DaveMethvin> lemme get the agenda
[09:04:14] <DaveMethvin> ok so i have gibson042, mikesherov, anyone else?
[09:04:32] <kborchers> DaveMethvin: i'm lurking as usual :)
[09:04:47] <DaveMethvin> aha!
[09:05:14] <DaveMethvin> alright, i guess we'll get moving
[09:05:37] <DaveMethvin> the unit test failures
[09:05:45] <mikesherov> so, the Safari 5 thing. I opened a PR for this a few weeks ago
[09:05:49] <mikesherov> you closed it
[09:05:58] <DaveMethvin> well that's the one that was really big
[09:06:14] <DaveMethvin> wasn't it?
[09:06:16] <mikesherov> no
[09:06:24] <mikesherov> it actually made stuff smaller :-\
[09:06:28] <mikesherov> I'll find it
[09:06:37] <DaveMethvin> WELLL WHY WOULD I CLOSE IT?
[09:07:00] <mikesherov> because I also kept the support tests propped up
[09:07:02] <mikesherov> one sec
[09:07:21] <mikesherov> like the one that checked for user agent
[09:07:45] * mikesherov waiting for trac
[09:08:09] <mikesherov> http://bugs.jquery.com/ticket/11441
[09:08:25] <mikesherov> wait, the PR is in...
[09:09:42] <mikesherov> https://github.com/jquery/jquery/pull/728
[09:09:43] <socialhapy> â˜… Pull request on jquery by mikesherov (1m, 2w ago): fixes #11443 CHECKCLONE AND APPENDCHECKED TEST FAILURES IN CHROME 18
[09:09:58] <mikesherov> dmethvin wrote: CHROME FIXED THE BUG, NOT NEEDED ANYMORE
[09:10:06] <mikesherov> 33628     (-9) jquery.min.js.gz
[09:10:09] <DaveMethvin> hmmm
[09:10:26] <mikesherov> I can rebase it and resubmit
[09:10:26] <DaveMethvin> i remember saying that but since we have to support 5.0.x i wuz wrong
[09:10:33] <mikesherov> right
[09:10:44] <mikesherov> that's why I kept asking about 5.0 support!
[09:10:44] <DaveMethvin> ok i'll land it
[09:10:56] <DaveMethvin> i didn't put 1+1 together
[09:11:18] <DaveMethvin> i understood the question but didn't realized this pull fixed that bug
[09:11:33] <mikesherov> "also, properly protect reliableMarginRight."
[09:11:33] <DaveMethvin> CLOSED: oblivius
[09:11:37] <DaveMethvin> "oblivious"
[09:11:42] <DaveMethvin> yeah
[09:11:49] <mikesherov> OK, so I'll resurrect that one and resubmit, yeah?
[09:12:00] <DaveMethvin> sure
[09:12:03] <mikesherov> great
[09:12:06] <DaveMethvin> if i close it again, hit me
[09:12:22] <mikesherov> k
[09:12:38] <DaveMethvin> so we're having a lot of probs with the support tests on IE
[09:12:46] <DaveMethvin> IE6 won't complete on testswarm
[09:12:59] <DaveMethvin> when i run IE9 locally in a full run it crashes
[09:13:03] <Krinkle> there's an email thread with browserstack on that
[09:13:14] <DaveMethvin> ah thanks Krinkle
[09:13:51] <DaveMethvin> Krinkle: browserstack runs the individual tests (support, core, effects, etc), not one big run, right?
[09:13:59] <Krinkle> They say it is an issue with the browerstack vm, not IE6. One of the employees there tried a swarm.jquery.org/git/..../?filter=.. url on a clean IE6 vm they booted manually and it didn't crash there
[09:14:03] <Krinkle> DaveMethvin: indeed
[09:14:09] <Krinkle> using ?filter=
[09:14:15] <Krinkle> DaveMethvin: Use the run urls on the swarm page to test
[09:14:20] <DaveMethvin> ok so that would explain why ie9 crashes locally on a full run
[09:14:21] <mikesherov> Yeah, I was having lots of problems with browserstack IE the past few days
[09:14:24] <Krinkle> http://swarm.jquery.org/job/121
[09:14:36] <Krinkle> in the left column are links to the test suite pages directly
[09:14:50] <Krinkle> you can click those and run them the qunit test in IE directly without testswarm
[09:14:53] <rwaldron> Hey everyone
[09:14:58] <rwaldron> sorry I'm late
[09:14:58] <DaveMethvin> hey rwaldron
[09:15:05] <DaveMethvin> twss
[09:15:09] * rwaldron is at mozilla
[09:15:15] <rwaldron> DaveMethvin hahahahahaa
[09:15:47] <DaveMethvin> ok so the good news then is that other than reliableMarginRight, the rest is just IE6
[09:15:52] <DaveMethvin> the bad news is, IE6
[09:16:17] <mikesherov> rwaldron: ask Mozilla when 3.6 is REALLY going to force upgrade
[09:16:30] <Krinkle> Also, as of a few hours, it appears browsertstack is having an other issue
[09:16:44] <DaveMethvin> you mean that one where you see other ppls browsers?
[09:17:00] <DaveMethvin> gotta stop browsing porn sites with browserstack i guess
[09:17:01] <Krinkle> the whole thing is (almost) down.
[09:17:02] <Krinkle> only 0 or 1 clients online, and even those are randomly dissapearing
[09:17:18] <Krinkle> DaveMethvin: no I didn't' mean that :P
[09:18:02] <rwaldron> mikesherov the answer is "actually, very soon"
[09:18:19] <DaveMethvin> ok, next is JHP
[09:18:24] <rwaldron> I didn't expect to get an answer
[09:18:30] <rwaldron> but there you go
[09:18:35] <mikesherov> nice
[09:18:38] <DaveMethvin> another thing that's good for Krinkle to weigh in on ... great timing
[09:18:55] <DaveMethvin> so it sounded like everyone like the idea of JHP?
[09:19:04] * Krinkle has a stalk word on 'testswarm' (among other things), hence I got it when you used that word
[09:19:06] <DaveMethvin> you can be honest, jaubourg isn't here :P
[09:19:14] <mikesherov> I'm +1 on it
[09:19:20] <gibson042> +1
[09:19:39] <Krinkle> so.. ahm..
[09:19:39] <scott_gonzalez> I'd be -1 if it affected UI, but so far it doesn't :-P
[09:19:41] <Krinkle> right
[09:19:59] <DaveMethvin> if so, i don't know what it would take to get JHP running on testswarm so we could bang against it
[09:20:02] <scott_gonzalez> Also, jzaefferer was concerned about TestSwarm.
[09:20:24] <Krinkle> yeah, I'm -1 because, although it may be ideal in theory, right now JHP is very uncommon (compared to PHP) and means the test suite no longer works on a traditional simple LAMP stack
[09:20:55] <scott_gonzalez> Krinkle: I don't think that's a concern if we already have node as a dependency.
[09:20:56] <Krinkle> and also, we use very very little PHP. So it's not really worth it from the point of maintenance either.
[09:21:02] <scott_gonzalez> I assume JHP is as simple as `npm install`
[09:21:08] <Krinkle> scott_gonzalez: we don't have node as a dependency
[09:21:40] <DaveMethvin> well that was my concern as well, i haven't tried to get it set up but i'd need to run the JHP node instance listening somewhere other than port 80
[09:21:41] <Krinkle> either wise requiring npm and bhp would be trivial
[09:21:44] <scott_gonzalez> Tests don't require a build anymore?
[09:21:57] <Krinkle> the test suite is ./test/index.html
[09:22:02] <Krinkle> the build is grunt.js in node
[09:22:40] <Krinkle> the test suite in QUnit should imho run completely and representatively with just apache+php in a web browser from a fresh git clone
[09:22:43] <scott_gonzalez> If you need to build to run tests, then node is a test dependency already.
[09:22:50] <mikesherov> short history: tests used to manually include all the component js files directly, then I ported them to be dynamically concatenated via PHP, now jaubourg is changing that over to JHP
[09:23:08] <mikesherov> node IS a dependency
[09:23:10] <mikesherov> grunt
[09:23:26] <Krinkle> Really, it isn't a dependency for the qunit test suite.
[09:23:30] <rwaldron> scott_gonzalez krinkle, very soon we're going to do away with the IIFE wrappers around the module files
[09:23:31] <scott_gonzalez> The reason I don't like JHP is because nobody has a node server running all the time.
[09:23:36] <rwaldron> and testing will require a built jQuery
[09:23:39] <rwaldron> as it used to
[09:24:07] <rwaldron> the idea is that you run "grunt watch" while you work on a bug or feature or whatever
[09:24:17] <rwaldron> and it builds as you go, so there should be no slow down
[09:24:18] <scott_gonzalez> Yeah, that would drive me nuts if we had to do that in UI
[09:24:49] <DaveMethvin> grunt watch would be handy for me since i forget to grunt every once in a while
[09:24:54] <mikesherov> right, but the point of the JHP is that the server can be launched from command line automatically
[09:25:05] <mikesherov> without requiring download of WAMP/MAMP/whatever
[09:25:20] <DaveMethvin> right since we already dep on node
[09:25:34] <mikesherov> and can be improved to look existing running http servers, etc...
[09:25:42] <Krinkle_> my irc client crashed
[09:25:44] <Krinkle_> brb
[09:25:48] * Krinkle_ from webchat
[09:25:49] <mikesherov> it puts the full technology stack in our hands
[09:26:01] <DaveMethvin> we just need to do some more groundwork before a swtich
[09:26:10] <rwaldron> I'm definitely in favor of reducing our deps to a single server requirement and would prefer that to be a light node based solution
[09:26:12] <DaveMethvin> i'm okay with it as long as it works
[09:26:20] <mikesherov> npm install && grunt watch && jhp
[09:26:29] <rwaldron> also... I'm sure all of our PHP scripts can be easily re-written
[09:26:36] <DaveMethvin> there are so few
[09:26:43] <gibson042> I think jaubourg already did it
[09:26:46] <DaveMethvin> as it should be
[09:26:46] <mikesherov> rwaldron, jaubourg ALREADY did that :-)
[09:27:04] <mikesherov> he has a branch with 0 lines of PHP in it
[09:27:11] <mikesherov> and units passing
[09:27:15] <rwaldron> mikesherov I'll be completely honest... I didnt give it a full review
[09:27:18] <rwaldron> i didnt have time
[09:27:23] <mikesherov> yeah, same here
[09:27:25] <mikesherov> just glanced
[09:27:33] <rwaldron> so then what the hell is "jhp"?
[09:27:36] <mikesherov> but I glanced long enough to notice there is no more PHP left
[09:27:45] <DaveMethvin> node as the server for our tests
[09:27:52] <rwaldron> then...
[09:27:54] <Krinkle> back, sorry. what did I miss?
[09:27:55] <rwaldron> why "hp"?
[09:27:56] <Krinkle> (crashed about a minute before I got in from webchat)
[09:28:11] <mikesherov> it's a node server that runs on extension .jhp that runs node wrapped in <? ?>
[09:28:12] <DaveMethvin> Jaubourg's Hacked Pages
[09:28:15] <mikesherov> the same way PHP does
[09:28:17] <rwaldron> all of this can be done with existing packages
[09:28:29] <mikesherov> Javascript Hypertext Preprocessor
[09:28:44] <DaveMethvin> you use your acronym, i'll use mine
[09:28:49] <rwaldron> I think I completely mis-understood what I was looking at
[09:28:54] <Krinkle> okay, so since we're going to require a build ./dist/ for the test soon, I can understand and agree with switching away from php
[09:29:01] <Krinkle> I have one requirement though
[09:29:04] <rwaldron> shame on me for not taking the time to fully grok
[09:29:06] <rwaldron> apologies
[09:29:29] <Krinkle> that the test still passes if JHP is not installed (just like it does now, if PHP is not installed the */ hack makes sure it still passes)
[09:29:31] <Krinkle> is that possible?
[09:29:43] <mikesherov> well
[09:29:45] <mikesherov> well
[09:29:47] <rwaldron> sounds like a cake and eat it too
[09:29:54] <mikesherov> the test suite passes without JHP
[09:29:58] <mikesherov> the same as without PHP
[09:30:02] <Krinkle> okay
[09:30:07] <rwaldron> but doesnt run all tests
[09:30:10] <DaveMethvin> just skips any server interaction
[09:30:10] <mikesherov> but understand, without PHP/JHP, the ajax tests aren't run
[09:30:26] <Krinkle> really?
[09:30:27] <Krinkle> hm..
[09:30:34] <mikesherov> but we have a var that you wrap tests with: if (hasPHP)
[09:30:42] <Krinkle> what about servers where apache is the main server
[09:30:49] <Krinkle> can JHP run with apache?
[09:31:03] <DaveMethvin> not now
[09:31:05] <Krinkle> swarm.jquery.org runs on apache for PHP and .htaccess and what not
[09:31:10] <mikesherov> there are two flags: hasPHP and isLocal that detect whether the tests have what they need
[09:31:28] <mikesherov> JHP has a flag for port
[09:31:41] <Krinkle> the test files are served through swarm/htdocs/git/jquery/master/(COMMIT_ID)/.. etc.
[09:31:44] <mikesherov> so it runs separately, but not within apache as a mod or whatever
[09:32:14] <Krinkle> so it would has to run on a different port and we'd have to hardcode the jquery.swarm paths in the test suite of it to work in testswarm.
[09:32:29] <DaveMethvin> hmm, definitely sounds like we need to think about this some more
[09:32:45] <scott_gonzalez> I can complicate it even more if you want :-)
[09:32:48] <DaveMethvin> lemme see if jaubourg can get with Krinkle on this
[09:32:52] <mikesherov> oh, definitely, currently JHP assumes it's the only game in town
[09:33:13] <Krinkle> If it works alongside Apache (just like PHP runs along side Apache), then I'm indifferent to PHP or JHP, I don't care. but if it requires to run on a different server hostname/port then it makes the testswarm set up a lot more completed.
[09:33:17] <Krinkle> complicated*
[09:33:35] <Krinkle> seems like trouble without a clear gain, other than "we want to have 100% node" for the sake of it
[09:33:56] <scott_gonzalez> Krinkle: It's not "for the sake of it"
[09:34:00] <scott_gonzalez> It's to reduce our deps
[09:34:07] <DaveMethvin> yeah, we have node on our own boxes but in my case i'll be running apache as well so it doesn't save me anything
[09:34:23] <Krinkle> scott_gonzalez: I understand but anno 2012 php/apache isn't much of a dep. Everybody has it. it's just theoratical.
[09:34:25] <mikesherov> right, the hard part is telling people "download MAMP/WAMP"
[09:34:34] <scott_gonzalez> It's not theoretical
[09:34:38] <mikesherov> and then they just run it from file:// and everything looks like it's working
[09:34:44] <scott_gonzalez> wycats can attest to that :-)
[09:35:01] <mikesherov> requiring a build means requiring node, means we can depend on node, and run a node server only for testing
[09:35:02] <DaveMethvin> we definitely need a FAIL when you do it that way
[09:35:13] <mikesherov> well, I already have a fail at the top
[09:35:28] <Krinkle> If they run it from file:: then it doesn't use php nor jhp, and tests run file without ajax. And if a server installed (either apache/php or node/npm/jhp) it runs those too
[09:35:33] <DaveMethvin> oh right you put that in mikesherov
[09:35:34] <mikesherov> I added that a few months back that if you run from file:// or without PHP you get a unit test fail
[09:35:46] <DaveMethvin> i just never run it that way to see it :D
[09:35:50] <mikesherov> RIGHT
[09:35:56] <Krinkle> I'm +1 on injecting an error if the ajax gets can't be run
[09:36:02] <Krinkle> tests*
[09:36:12] <mikesherov> you don't need to be +1, it's already there :-)
[09:36:26] <DaveMethvin> okay then it's mainly a question of whether testswarm gets more complex if we use jhp/node there
[09:36:37] <Krinkle> cool
[09:36:39] <Krinkle> as DaveMethvin, I never run them that way :P
[09:36:40] <Krinkle> not just testswarm
[09:37:17] <Krinkle> it means any developer who works on more projects and already has a nice development set up locally, needs to now set up a different server locally just for this and can no longer use relative paths from an existing apache server
[09:37:34] <Krinkle> I think a large part of our development community aren't pure JS developers
[09:37:38] <DaveMethvin> let's move on, we won't/can't land jhp until this gets solved anyway and there's no critical need to switch
[09:37:38] <gibson042> no; that's just it... they don't need to set up a different server
[09:37:45] <gibson042> just launch from command line
[09:38:12] <Krinkle> gibson042: which is a server, right? It would be like localhost:1234/jquery/tests/something.jhp right ?
[09:38:29] <Krinkle> command-line is just a commnad-line, it is setting up a different server
[09:38:30] <gibson042> yes, but there's no setup for it
[09:38:50] <Krinkle> well, for many operating systems, apache has no set up either as it already runs in the background by default
[09:39:32] <DaveMethvin> well once we get this worked out we need the README updated :D
[09:39:38] <mikesherov> yeah, let's move on
[09:39:39] <scott_gonzalez> Krinkle: I don't think arguments like "it doesn't matter if there's no setup for X because there's no setup for Y" are helpful :-/
[09:39:40] <DaveMethvin> because it still talks about make
[09:39:53] <DaveMethvin> on modularity
[09:39:57] <mikesherov> and grunt still doesn't do the submodule update stuff
[09:40:00] <mikesherov> oh, nvm
[09:40:06] <DaveMethvin> i liked the effects stuff gibson042
[09:40:23] <DaveMethvin> and we can follow that pattern for custom builds including/excluding other stuff
[09:40:27] <gibson042> thanks
[09:40:28] <mikesherov> gibson042, what's the final size diff after the jQuery.css -> curCSS changes?
[09:40:42] <gibson042> no change from those
[09:40:44] <DaveMethvin> it was pretty much neutral
[09:40:47] <mikesherov> interesting
[09:41:16] <mikesherov> speaking of modularity, dimensions can be pulled out with ease
[09:41:29] <DaveMethvin> oh, nothing depends on it?
[09:41:33] <Krinkle> scott_gonzalez: They are the reality imho. Like I said, I don't care whether we use JHP or PHP. but in it's current form I think it would damage the testability of jQuery for many developers. Most of our devs will be able to install JHP, but it's server requirement is a show stopper imho.
[09:41:38] <Krinkle> anyway, moving on
[09:41:49] <mikesherov> nothing I can see depends on dimensions
[09:42:00] <DaveMethvin> well that would be cool
[09:42:05] <mikesherov> effects uses .css('width')
[09:42:11] <mikesherov> which is in css.js
[09:42:14] <rwaldron> Hey guys, I have to go now
[09:42:21] <rwaldron> nearing time to fight the god fight
[09:42:23] <rwaldron> good*
[09:42:25] <DaveMethvin> cyl rwaldron
[09:42:33] <gibson042> godspeed
[09:42:33] <mikesherov> good luck, we're all counting on you
[09:42:38] <rwaldron> I'll read the notes later
[09:42:44] <DaveMethvin> airplane ftw
[09:42:47] <mikesherov> dimensions.js is just a bunch of sugar
[09:42:55] <rwaldron> (i'll be on IRC, but minimized)
[09:43:43] <DaveMethvin> alright, wish timmywil was here i know he wanted to deprecate the boolHooks
[09:43:56] <DaveMethvin> but it has implications elsewhere
[09:44:04] <DaveMethvin> per 11734
[09:44:52] <DaveMethvin> if we pull out the boolHooks we're probably gonna break jQuery(html, props) for some people
[09:45:04] <DaveMethvin> unless we patch it back in for just that case
[09:45:23] <DaveMethvin> thoughts?
[09:45:25] <gibson042> it looks to me like we pretty much have to
[09:45:34] <gibson042> for transition, if nothing else
[09:45:56] <DaveMethvin> well if we deprecate in 1.8, we can't remove until at least 1.9 anyway
[09:45:58] <gibson042> are the boolHooks already deprecated?
[09:46:12] <mikesherov> I mean, I think boolHooks are a break the web sort of thing
[09:46:24] <DaveMethvin> i don't think so, we deprecated .attr('value")
[09:46:43] <DaveMethvin> and again my meaning of "deprecate" may be diff than yours
[09:47:00] <DaveMethvin> it means i think it sucks and you shouldn't do it
[09:47:05] <mikesherov> I'm -1 on even implying we may remove boolHooks
[09:47:32] <DaveMethvin> i think we need some way to make it clear that .attr("selected", true) is bad form
[09:47:41] <DaveMethvin> attributes are strings
[09:47:49] <mikesherov> sure, I agree
[09:47:53] <gibson042> I care about deprecated to the extent that it controls the earliest version in which we're allowed to remove things
[09:48:13] <DaveMethvin> right
[09:48:24] <mikesherov> I'm not strongly -1. I just think it was a boo boo in 1.6 to remove it
[09:48:32] <scott_gonzalez> Breaking jQuery( html, props ) makes me sad.
[09:48:37] <DaveMethvin> i mean, we could change the rules and say we can remove anything on any major version
[09:48:44] <DaveMethvin> but i think notice is good
[09:48:48] <gibson042> I agree
[09:48:50] <mikesherov> and the feedback was clear. 1.6.1 needed to have boolHooks added for people to begin to think about adopting
[09:48:53] <DaveMethvin> what do you like about it scott_gonzalez
[09:49:11] <DaveMethvin> it's not really shorter, just more ambiguous
[09:49:12] <scott_gonzalez> It provides an easy pass-through for APIs.
[09:49:21] <scott_gonzalez> It's definitely shorter.
[09:49:26] <scott_gonzalez> Let me find an example.
[09:49:48] <DaveMethvin> it supports event names for binding, but only certain events
[09:49:54] <DaveMethvin> it supports attributes, but not properties
[09:49:59] <scott_gonzalez> https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.dialog.js#L366-372
[09:50:04] <scott_gonzalez> That would suck to expose any other way.
[09:50:06] <mikesherov> for example, in my own code, I still have attr('checked') in a few places
[09:50:20] <DaveMethvin> i know, so the goal is to get people to do it right
[09:50:28] <mikesherov> if we do it, we need a clear guide on what exactly to update
[09:50:43] <DaveMethvin> yeah like deprecate the wrong way :D
[09:51:22] <mikesherov> like, list out, just like in 1.6.1 all the things someone would need to change
[09:51:37] <DaveMethvin> scott_gonzalez: you're using undocumented functionality there
[09:51:46] <DaveMethvin> or did we document it?
[09:51:51] <scott_gonzalez> It's undocumented.
[09:52:02] <scott_gonzalez> But the documented functionality doesn't support it.
[09:52:03] <scott_gonzalez> :-(
[09:52:11] <scott_gonzalez> Which is really ghetto.
[09:52:13] <DaveMethvin> because it's ambiguous
[09:52:20] <scott_gonzalez> What's ambiguous?
[09:52:27] <mikesherov> LIFE
[09:52:41] <DaveMethvin> there is the magic attrFn
[09:52:49] <scott_gonzalez> That's not what causes the problem.
[09:53:03] <scott_gonzalez> The problem is that $( "<a b=c>", {} ) isn't supported.
[09:53:18] <scott_gonzalez> attrFn is fine IMO
[09:53:30] <DaveMethvin> isn't that digging a deeper hole?
[09:53:48] <DaveMethvin> $( "<a b=c>", {} ) is more special case
[09:53:51] <scott_gonzalez> I think you mean "isn't that adding more awesomeness"
[09:53:55] <DaveMethvin> lol
[09:54:06] <DaveMethvin> it just gets too magical in my mind
[09:54:10] <scott_gonzalez> How so?
[09:54:20] <scott_gonzalez> It's barely any different from something we'll never drop.
[09:54:36] <scott_gonzalez> $( "<a b=c>" ) will always be alive.
[09:54:51] <DaveMethvin> if not for all the special case code in attrFn and boolHooks it wouldn't work the way you think it works
[09:54:56] <scott_gonzalez> It's silly that (html, props) is special cased for the DOM creation.
[09:55:34] <DaveMethvin> oh i agree that it could be applied in more places
[09:55:40] <DaveMethvin> but that is just one more sign of its hackness
[09:55:50] <scott_gonzalez> The whole web is a hack.
[09:55:52] <Krinkle> scott_gonzalez: Ah, right. jQuery( _, props ) is a good example of where having to use .props() is not very intuitive. Although I must admit I never use that calling form.
[09:56:32] <scott_gonzalez> For the record: .props() is never intuitive. The fact that it can be logically explained doesn't make it intuitive.
[09:56:35] <Krinkle> using "selected": "selected" would be fine though. as long as they're treated as attributes
[09:56:48] <Krinkle> not sure what browsers do for <input selected="true"> (literaly)
[09:57:00] <scott_gonzalez> Krinkle: It's the same
[09:57:08] <scott_gonzalez> Boolean attributes are enabled by their presence, not their value.
[09:57:11] <Krinkle> right
[09:57:32] <DaveMethvin> all of that is clear if the normal apis are used though
[09:57:45] <DaveMethvin> or we can infer it via magic, which it seems we'll need to do
[09:58:07] <scott_gonzalez> DaveMethvin: I think it's obvious that there's no magic.
[09:58:13] <scott_gonzalez> It's very simple logic.
[09:58:18] <Krinkle> so what would removing boolHooks effectively do? Instead of letting .attr('selected', true) pass through to .prop() we'd just setAttribute('selected', true) which browsers probably stringify into selected="true" and that still works since these attributes auto-update properties, right ?
[09:58:25] <scott_gonzalez> Ok, so maybe attrFn is a bit magical.
[09:58:31] <scott_gonzalez> But honestly boolHooks is not magic.
[09:58:37] <Krinkle> oh, right
[09:58:38] <Krinkle> they don't update
[09:58:51] <scott_gonzalez> I won't argue that too much, that bridge has been burned.
[09:58:58] <DaveMethvin> well there are cases where jiggling both the prop and the attribute causes issues
[09:59:10] <Krinkle> yeah
[09:59:21] <DaveMethvin> but we have to do it because otherwise the expected backcompat result doesn't happen
[09:59:33] <DaveMethvin> i am afraid we're stuck with this then
[09:59:37] <Krinkle> and other then boolHooks, there's also "value" and "class" where prop and attr are somewhat controversial
[09:59:53] <mikesherov> and "style"
[09:59:56] <mikesherov> and "id"
[09:59:59] <Krinkle> ah, righ
[10:00:02] <Krinkle> "id" too ?
[10:00:11] <mikesherov> um, maybe not
[10:00:27] <DaveMethvin> okay then,
[10:00:35] <DaveMethvin> deprecate boolHooks -- no
[10:00:43] <DaveMethvin> deprecate $(html, props) -- no
[10:01:06] <mikesherov> unless timmywil can make a compelling argument
[10:01:07] <DaveMethvin> deprecate the undocumented use of .attr() -- no
[10:01:28] <mikesherov> nvm what I just said
[10:01:28] <DaveMethvin> so should we sanctify these as good practice?
[10:01:35] <scott_gonzalez> add jQuery( complexHtml, props ) -- yes :-)
[10:01:38] <mikesherov> I don't think it's black or white
[10:01:57] <Krinkle> doing jQuery( complexHtml, props ) seems silly though
[10:02:05] <scott_gonzalez> Krinkle: It's necessary.
[10:02:05] <DaveMethvin> we don't currently have "this sucks but we're leaving it in"
[10:02:15] <DaveMethvin> no it's not!
[10:02:19] <Krinkle> scott_gonzalez: sure, I assume it is supported naturally, not specifically
[10:02:22] <Krinkle> (that combination)
[10:02:43] <scott_gonzalez> DaveMethvin: I meant it's necessary if using the API.
[10:02:45] <mikesherov> right, I mean, we should say it sucks
[10:02:48] <DaveMethvin> i was using deprecated as a catch-all for things that are not good practice
[10:02:56] <mikesherov> again say that it sucks. Every chance we get say it sucks
[10:03:03] <scott_gonzalez> Do you guys really think this sucks?
[10:03:03] <DaveMethvin> it doesn't mean we ahve to remove it
[10:03:06] <gibson042> DaveMethvin: I think that fits
[10:03:09] <scott_gonzalez> Ignore the existing DOM APIs.
[10:03:15] <mikesherov> Alright fine, I'm +1 on deprecate Dave
[10:03:17] <scott_gonzalez> And how attributes and properties actually work.
[10:03:19] <gibson042> we deprecate, and maybe we never find a good way to remove it
[10:03:24] <mikesherov> it's got to be shouted from rooftops though
[10:03:24] <gibson042> but if we do, then it's out
[10:03:35] <DaveMethvin> yeah and i am ok with never removing if it's not practical to remove
[10:03:58] <DaveMethvin> scott_gonzalez: which specific things?
[10:03:58] <scott_gonzalez> I'm -1 unless someone can come up with a sane API for dialog buttons.
[10:03:58] <mikesherov> the only danger in deprecating it in 1.8 is that it's lumped in with a bunch of other deprecations
[10:04:06] <mikesherov> might be a lot to grok for users
[10:04:37] <scott_gonzalez> DaveMethvin: All of it, boolHooks, attr( _, true ), old. attr(). It's all sane and expected behavior.
[10:04:43] <scott_gonzalez> What's not sane is the DOM.
[10:04:52] <gibson042> scott_gonzalez: why not a minimal .attrPlus plugin for your purposes that does the same thing as undocumented .attr(props, true)?
[10:05:15] <DaveMethvin> yeah if it's just about DRYing out code that may be the best way
[10:05:25] <DaveMethvin> i don't think we would want to document it
[10:05:32] <scott_gonzalez> It's not about DRY, it's about providing a sane API.
[10:05:51] <scott_gonzalez> Look at the dialog buttons API and come back with a sane API that doesn't use .attr( _, true )
[10:06:15] <gibson042> it's just not sane to have this magic buried under jQuery(html, props) and attr(props, true)
[10:06:35] <gibson042> I see the case for that special behavior, but it's just not what .attr promises
[10:06:40] <gibson042> it's a separate thing
[10:07:25] <DaveMethvin> okay well let's move ont
[10:07:30] <mikesherov> yes, move on!
[10:07:46] <DaveMethvin> i'm thinking we need to resurrect the compat plugin idea
[10:07:56] <DaveMethvin> we haven't had one for quite a few versions
[10:08:03] <mikesherov> sure
[10:08:12] <DaveMethvin> but also give people the ability to just include one thing they might need like jquery-browser
[10:08:14] <mikesherov> duck punch all the things
[10:08:17] <DaveMethvin> yeah
[10:08:33] <DaveMethvin> and then a combined version that has all them in  one file
[10:08:43] <DaveMethvin> for people too lazy to figure out what is missing
[10:08:46] <DaveMethvin> ok
[10:08:55] <DaveMethvin> i'll make a ticket for that
[10:09:00] <mikesherov_> switching to laptop
[10:09:14] <Krinkle> that jquery + all compat plugins would also be on cons ?
[10:09:18] <Krinkle> cdns *?
[10:09:28] <DaveMethvin> Krinkle: probably only our cdn
[10:09:36] <Krinkle> k
[10:09:38] <DaveMethvin> i don't think google is taking more stuff now
[10:09:57] <DaveMethvin> scott_gonzalez: didn't you guys try to add somehting and they said no?
[10:10:17] <scott_gonzalez> They turned away jQuery Mobile.
[10:10:22] <DaveMethvin> ah okay
[10:10:35] <DaveMethvin> so the compat plugins would have to be hosted from us or from the user's site
[10:10:41] <DaveMethvin> i don't see that as a big issue
[10:10:44] <mikesherov_> agreed
[10:10:45] <scott_gonzalez> Honestly, as an existing project, you can add whatever you want.
[10:10:49] <DaveMethvin> i am sure some people will want to leeech off the best
[10:11:05] <DaveMethvin> well we can ask google
[10:11:10] <scott_gonzalez> We recently added every source file to Google CDN for jQuery UI.
[10:11:23] <DaveMethvin> whoa, they're easy
[10:11:29] <DaveMethvin> anybody have anything else?
[10:11:33] <DaveMethvin> sorry about running over
[10:11:43] <mikesherov_> Yeah, I have a question about dimension setters
[10:11:55] <DaveMethvin> sup?
[10:12:01] <Krinkle> scott_gonzalez: what do you mean by "every source file" ?
[10:12:02] <mikesherov_> it's +101 bytes
[10:12:03] <Krinkle> past versions?
[10:12:08] <mikesherov_> I don't think I can get it smaller
[10:12:19] <scott_gonzalez> Krinkle: Not past versions, new versions.
[10:12:35] <Krinkle> scott_gonzalez: oh you mean like the raw source files, separate files
[10:12:44] <scott_gonzalez> Yes, separate files.
[10:12:46] <DaveMethvin> how about if we added setters in 1.9?
[10:12:47] <Krinkle> cool
[10:12:51] <mikesherov_> I'd really like it to land.... it also makes dimensions smaller, and the setter on .width() will do the right thing with respect to box-sizing
[10:12:57] <DaveMethvin> with the idea that we'll be saving a bunch more
[10:13:33] <mikesherov_> I mean, I discovered a bug with setting width() shouldn't respect box-sizing, but it was
[10:13:45] <DaveMethvin> i wanted to circle back around to that pr mikesherov, it seemed like there should be some way to reuse some of that
[10:14:05] <mikesherov_> there sure is, but I wanted to land it first before futzing more
[10:14:11] <DaveMethvin> so that even if it was +100 bytes we would get more credit
[10:14:19] <DaveMethvin> "credit" :D
[10:14:36] <mikesherov_> but the credit is already there may making it a setter and respecting box-sizing
[10:15:00] <DaveMethvin> yeah and you have a good point about setters on box-sizing
[10:15:08] <DaveMethvin> what does eveyrone else think?
[10:15:27] <mikesherov_> also, it's just some much more well factored now too
[10:15:37] <mikesherov_> so much*
[10:15:56] <DaveMethvin> lets talk about it a bit later
[10:15:59] <mikesherov_> ok
[10:16:07] <gibson042> I'm +0 on it
[10:16:18] <mikesherov_> I'm +0 on YOU! :-P
[10:16:26] <scott_gonzalez> It drops a bunch of bytes from UI :-P
[10:16:34] <scott_gonzalez> In like a year or two anyway...
[10:16:35] <DaveMethvin> well in that case NO WAY!!!
[10:16:50] <DaveMethvin> yeah i could have used some of this code for some plugins long ago
[10:16:56] <DaveMethvin> if it were exposed
[10:17:13] <DaveMethvin> alright lets wrap it up
[10:17:15] <scott_gonzalez> In the meantime, it probably adds bytes to UI.
[10:17:25] <DaveMethvin> doesn't it always work that way
[10:17:30] <scott_gonzalez> We won't want to overwrite the box-sizing logic.
[10:17:40] <DaveMethvin> and it takes forever to get rid of the legacy stuff
[10:17:48] <scott_gonzalez> Hooray for support tests against core.
[10:18:04] <DaveMethvin> okay i'll see you back in #jquery-dev, closing the meeting
