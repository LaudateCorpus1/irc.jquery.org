[09:02:08] <DaveMethvin> MEETING!
[09:02:10] <DaveMethvin> :)
[09:02:18] <arthurvr> Hi!
[09:02:36] <jaubourg> hey
[09:02:53] <timmywil> hi
[09:03:18] <markelog> hey-hey
[09:03:28] <DaveMethvin> sorry, a few things going on at once
[09:03:34] <DaveMethvin> i did update the agenda tho
[09:03:45] <gibson0421> here
[09:04:19] <DaveMethvin> m_gol?
[09:04:23] <jaubourg> damn, where's the agenda again?
[09:04:30] <timmywil> https://docs.google.com/document/d/1BadwSO6Sn91RBfr05s77r81ncEi0oMBJ5mZS-k215vg/edit#
[09:04:37] <DaveMethvin> nice turnout today!
[09:05:00] <DaveMethvin> obtw, if you don't recognize the handle, arthurvr has been helping ... well just about everywhere this past moth
[09:05:03] <DaveMethvin> month*
[09:05:06] <DaveMethvin> but especially on docs
[09:05:14] <jaubourg> k
[09:05:37] <DaveMethvin> so we have a TON of stuff to finish before a beta
[09:05:49] <DaveMethvin> with priority on the things that might change behavior or add features
[09:06:07] <DaveMethvin> if we make a big push this week i think we can get a lot of them done
[09:06:17] <jaubourg> I don't have much time (as usual lately) but I'd like to discuss PR1996 cause I think it's the absolute wrong way to go with the whole problem
[09:06:33] <DaveMethvin> ok
[09:06:34] <DaveMethvin> le
[09:06:47] <DaveMethvin> let's go through the others and see if we can get them landed or push past 3.0
[09:07:15] <DaveMethvin> i think the support comments are great per the proposal by gibson0421
[09:07:21] <DaveMethvin> let's go with that
[09:08:08] <m_gol> present
[09:08:14] <DaveMethvin> so for new prs we can use that format, older ones we can do a cleanup pass at some point
[09:08:20] <markelog> damn! i remember commenting extensively to https://github.com/jquery/jquery/issues/1835 :-((
[09:08:35] <markelog> it seems github eat my comment
[09:08:36] <jaubourg> what I don't understand with the support comments if that I thought we arrived at something much simpler and then all the special cases re-appeared after that. Wasn't VENDOR [<=]? firstVersion [- lastVersion]? [only]? enough?
[09:08:50] <markelog> will do that all over again ((
[09:09:24] <gibson0421> jaubourg: that's pretty much what we got
[09:09:45] <DaveMethvin> gibson0421 just wanted to formalize it with a grammar
[09:10:08] <jaubourg> gibson0421: at first glance you grammar seems to handle all kind of more complex scenarios but I may have read it wrong
[09:10:10] <timmywil> what does the only mean?
[09:10:30] <gibson0421> external bug has been fixed
[09:10:43] <jaubourg> timmywil: so we know for sure it doesn't concern further versions
[09:10:51] <timmywil> ah
[09:10:52] <timmywil> ty
[09:10:53] <DaveMethvin> basically open-ended vs closed-ended
[09:11:09] <timmywil> ok, that's fine
[09:11:29] <timmywil> kinda funny we've got 57 comments on this
[09:11:45] <DaveMethvin> hey it's bikeshed territory, gotta expect it
[09:11:51] <jaubourg> don't you love taste-oriented stuff?
[09:11:53] <jaubourg> :P
[09:12:05] <timmywil> maybe we should have the tabs vs spaces discussion again
[09:12:09] <DaveMethvin> well with gibson0421 you got a good grammar and good taste
[09:12:12] * jaubourg faints
[09:12:16] <gibson0421> lol
[09:12:17] <DaveMethvin> NOOO
[09:12:25] <m_gol> what's the 1*support-comment syntax?
[09:12:58] <gibson0421> support-comment 1 or more times
[09:13:07] <jaubourg> DaveMethvin: the grammar is nice it's just that it seems to add alternate syntax to what we seemed to agree on so I dunno if I missed a discussion on IRC or something
[09:13:25] <jaubourg> again, I may read it wrong
[09:14:06] <DaveMethvin> if you look at the table at the end, i think that's basically the way you'll use it
[09:14:10] <m_gol> do we need `"<" version " only"`?
[09:14:24] <DaveMethvin> i don't think it's as clear as <=
[09:14:34] <DaveMethvin> but using < vs <= is probably another bikeshed :)
[09:14:38] <m_gol> ;)
[09:14:40] <gibson0421> I want to replace it with "<=m only", per https://github.com/jquery/contribute.jquery.org/issues/95#issuecomment-69456851
[09:14:45] <DaveMethvin> right
[09:14:51] <m_gol> ok, this LGTM!
[09:14:59] * gibson0421 cheers
[09:15:04] <DaveMethvin> yay!
[09:15:06] <DaveMethvin> ok moving along
[09:15:08] <jaubourg> my question is this... what does the grammar handle that "VENDOR [<=]? firstVersion [- lastVersion]? [only]?" doesn't ?
[09:15:11] <m_gol> I've exceeded bikeshedding limit for this week :P
[09:15:18] <jaubourg> lol
[09:15:27] <DaveMethvin> you don't have a repeat there jaubourg
[09:15:46] <DaveMethvin> informally it's basically the same
[09:15:57] <DaveMethvin> but let's move on
[09:16:18] <m_gol> do we want the whole grammar written in contribute? ;)
[09:16:27] <m_gol> it's quite intimidating to people not used to formal grammars
[09:16:32] <DaveMethvin> right, i don't think so
[09:16:33] <m_gol> i.e. 99% of devs, I guess
[09:16:36] <DaveMethvin> just the table
[09:16:45] <DaveMethvin> maybe markelog can use the grammar in jscs :)
[09:16:49] <m_gol> :)
[09:16:59] <gibson0421> the grammar was just for us :)
[09:17:15] <DaveMethvin> so given that we need to land a bunch of stuff
[09:17:26] <markelog> i think we need to document this somehow, otherwise if there would be a dispute we couldn't refer the docs
[09:17:29] <DaveMethvin> i think we should avoid geting too fancy for some of these small fixes
[09:17:42] <gibson0421> we'll make a link
[09:17:47] <DaveMethvin> markelog: on the grammar, we can reference it, yeah
[09:17:49] <markelog> we could point out in the docs link to jscs plugin
[09:17:53] <DaveMethvin> or put it in the wiki
[09:17:58] <markelog> which would have docs in the readme
[09:18:30] <gibson0421> http://contribute.jquery.org/style-guide/js/support-comment-formal-grammar or something
[09:18:51] <DaveMethvin> +1 to that
[09:19:10] <markelog> there would be a duplication i think, readme will have grammer instructions
[09:19:19] <markelog> and this page then will have them too
[09:19:26] <DaveMethvin> the table and some other discussion can be in a page on contribute.jquery.org
[09:19:30] <gibson0421> readme and http://contribute.jquery.org/style-guide/js/ can be informal
[09:19:38] <DaveMethvin> right
[09:19:53] <markelog> so the same info in the readme and on contribute?
[09:20:16] <DaveMethvin> the readme can reference the contribute page?
[09:20:18] <gibson0421> I guess the former just links to the latter
[09:20:19] <gibson0421> +1
[09:20:29] <markelog> okay
[09:20:29] <markelog> since that would a plugin, should we put it on /jquery/<plugin> repo?
[09:20:32] <DaveMethvin> anyway, we need to land some of these things ... parseHTML i'm okay with the current fix that changes it to return an empty array
[09:20:53] <timmywil> that's not quite what the fix is
[09:21:13] <DaveMethvin> for the domain of valid inputs, it is?
[09:21:35] <timmywil> depends on your idea of valid input
[09:21:43] <DaveMethvin> the docs say it takes a string
[09:21:57] <markelog> DaveMethvin: since that would a plugin, should we put it on /jquery/<plugin> repo?
[09:22:15] <DaveMethvin> maybe /build?
[09:22:20] <DaveMethvin> or /build/plugin?
[09:22:33] <markelog> i meant github.com/jquery/<repo>
[09:22:39] <DaveMethvin> oh
[09:22:52] <markelog> or i could leave on my account
[09:22:54] <DaveMethvin> this is for the jscs plugin?
[09:22:57] <DaveMethvin> yeah just leave it there for now
[09:23:02] <markelog> cool
[09:23:03] <jaubourg> ok, time is running out... is it possible to wait for my feedback on the Deferred PR before landing? I'll do it tonight, didn't have time for this last week.
[09:23:18] <DaveMethvin> oh the deferred pr ... fire away jaubourg
[09:23:19] <timmywil> yes, but the question is whether to fail silently and provide consistent results across browsers or leave it unpredictable
[09:23:28] <DaveMethvin> let's push stack on that timmywil
[09:23:32] <m_gol> 3 threads at once :)
[09:23:38] <gibson0421> jaubourg: I will not land before you have a chance to comment
[09:23:58] <jaubourg> gibson0421: ok, deal, sorry I have to go so quick :/
[09:24:01] <markelog> m_gol:multitasking like boss
[09:24:19] <m_gol> I'm terrible at multi-tasking :)
[09:24:26] <DaveMethvin> you have the floor jaubourg
[09:24:29] <DaveMethvin> oh
[09:24:32] <gibson0421> hahaha
[09:24:38] <gibson0421> he'll comment on the PR
[09:24:40] <m_gol> he left to dance
[09:24:41] <DaveMethvin> ok well let's hope he comments in the PR
[09:24:48] <DaveMethvin> back to parseHTML
[09:24:56] <DaveMethvin> my main concern is that we fix the parseHTML("") case
[09:25:08] <DaveMethvin> i'm totally okay with the rest but it has to get done asap
[09:25:27] <DaveMethvin> if we're changing what it accepts and documenting that change
[09:25:31] <DaveMethvin> so is someone taking that?
[09:25:48] <gibson0421> if no one else does, I will
[09:25:51] <gibson0421> it's small
[09:25:55] <DaveMethvin> i think it is
[09:26:07] <DaveMethvin> the unit tests will be the hardest part, as usual
[09:26:11] <gibson0421> but I hope someone else does, because it's also low-priority
[09:26:30] <m_gol> gibson0421: maybe ping Krinkle if he has time?
[09:26:42] <m_gol> since he submitted the PR :)
[09:26:46] <DaveMethvin> timmywil: if you are short on time i'd prefer to have you work on the build and release changes
[09:27:03] <DaveMethvin> and yeah if Krinkle|detached could update the pr based on our input that would be great
[09:27:03] <timmywil> yea, I should be able to get to those this week
[09:27:06] <DaveMethvin> spread the wealth
[09:27:17] <timmywil> been really busy at work
[09:27:31] <markelog> DaveMethvin: so what did we decide on parseHTML?
[09:27:55] <markelog> i'm confused now
[09:28:02] <DaveMethvin> in the thread timmywil was proposing we do what the native method does
[09:28:05] <DaveMethvin> which works for me
[09:28:14] <DaveMethvin> but it requires some changes beyond what's there
[09:28:23] <DaveMethvin> for edge stuff like undefined and null
[09:28:37] <markelog> and in that case we will return []?
[09:28:39] <DaveMethvin> gibson0421 outlined what had to happen
[09:28:41] <timmywil> but the size difference should be negligible
[09:28:52] <DaveMethvin> yes, for parseHTML("") we return an empty array
[09:29:01] <markelog> sounds good
[09:29:05] <gibson0421> that's the most important ^
[09:29:06] <DaveMethvin> which is the main case to fix here, i think that one is truly broken
[09:29:15] <DaveMethvin> the others are technically out of the domain of inputs
[09:29:20] <gibson0421> the rest is just making things better for the sake of consistency
[09:29:25] <markelog> just like for $(null) or $(undefined)
[09:30:24] <DaveMethvin> ok
[09:30:35] <DaveMethvin> next is funny chars in a tag name
[09:30:49] <markelog> i'd say okay for this PR
[09:30:54] <markelog> and do everything else after
[09:31:26] <markelog> or we could it in that PR, but i would prefer it in two separate commits
[09:31:35] <markelog> and we need to add tests for namespaces with ":"
[09:31:37] <markelog> and issue
[09:31:48] <DaveMethvin> i'd like to get them both in for 3.0 if possible, but if not then this should land now
[09:32:05] <timmywil> I agree that it should at least be separate commits
[09:32:09] <gibson0421> ":" works now but is missing tests, everything else seems like the same issue to me but I'm ok with splitting as well
[09:32:10] <timmywil> atomicity and all
[09:32:17] <markelog> new regexp might have some issues
[09:32:24] <DaveMethvin> let's land this now, and do the wider change
[09:32:42] <markelog> okay, i will merge it then
[09:32:52] <timmywil> one commit to support hyphenated, one to support namespaces
[09:32:58] <markelog> will commit tests for ":" too
[09:33:01] <DaveMethvin> ok
[09:33:17] <markelog> the simple ones
[09:33:40] <markelog> i think other regexp changes can be done by original contributor
[09:33:58] <markelog> if not, we can do it ourselfs
[09:34:24] <DaveMethvin> the last one that i think is high prio is the script insertion
[09:34:33] <DaveMethvin> for some reason i thought we landed a pr for this
[09:34:37] <DaveMethvin> but i was confused i guess
[09:35:24] <DaveMethvin> markelog landed one for the script data urls a while back
[09:36:04] <DaveMethvin> i think this one has the potential to cause issues so I'd rather have people test it in a beta
[09:36:05] <markelog> easy to a fix as i recall, can do this soon
[09:36:08] <m_gol> tests for that are a little bit flakey but that doesn't block us
[09:36:15] <DaveMethvin> so we can switch back if needed
[09:36:18] <markelog> DaveMethvin: indeed
[09:36:36] <DaveMethvin> i really like the idea of doing this but don't know how much people depend on it being sync
[09:36:38] <markelog> this is not about data-uri
[09:36:41] <DaveMethvin> but it's such a performance killer
[09:36:44] <DaveMethvin> yeah, agreed
[09:36:53] <markelog> okay, so will do that
[09:36:57] <markelog> offsetParent!
[09:37:04] <markelog> 3d transform?
[09:37:10] <DaveMethvin> yeah
[09:37:21] <markelog> how about i will do it in separate commit
[09:37:32] <markelog> one is simplifing stuff, other is complicate it )
[09:37:37] <DaveMethvin> that would be fine, i just figured it might change the code a lot
[09:37:49] <DaveMethvin> like completely mess up your simplification
[09:37:53] <markelog> ))
[09:37:59] <markelog> hope not
[09:38:16] <markelog> but there is some points that could be done simple either way
[09:38:24] <markelog> with or without support for 3d
[09:38:55] <DaveMethvin> alright, any other major issues?
[09:39:11] <m_gol> I'll try do to my stuff before Thursady
[09:39:15] <DaveMethvin> does anyone have tickets assigned they would rather give away?
[09:39:15] <m_gol> * Thursday
[09:39:49] <DaveMethvin> i'm really looking forward to landing the Deferred stuff, hope jaubourg gives feedback on that soon
[09:39:58] <gibson0421> absolutely
[09:40:11] <DaveMethvin> oh we needed to discuss what to do for unhandled rejections
[09:40:16] <DaveMethvin> gibson0421: thoughts?
[09:40:26] <m_gol> DaveMethvin: I like your idea about catching specific type of errors
[09:40:39] <gibson0421> so for that I basically want to duckpunch .then as a plugin
[09:40:57] <DaveMethvin> hmmm, i'd need to see an implementation
[09:41:10] <gibson0421> yes, it's on my list ;)
[09:41:17] <DaveMethvin> also i think we need some reporting by default so it's gonna go into the file
[09:41:28] <DaveMethvin> silence is deadly
[09:41:39] <m_gol> any console operations have to wrapped in if (console) btw
[09:41:45] <DaveMethvin> yep
[09:41:52] <m_gol> even on master
[09:41:58] <DaveMethvin> yeah, ie9
[09:42:18] <markelog> ie9 doesn't support it?
[09:42:21] <DaveMethvin> if it's exposed in a way that someone can override then they can shut it off
[09:42:21] <gibson0421> I _think_ the swallowed exceptions all relate to broken thenable implementations
[09:42:30] <DaveMethvin> ie9 only supports console when dev tools are open
[09:42:35] <markelog> right
[09:42:48] <gibson0421> e.g., onFulfilled called multiple times
[09:43:00] <gibson0421> throw after fullfill
[09:43:04] <gibson0421> that kind of stuff
[09:43:24] <gibson0421> the real problem is when the exception is translated into a rejection for which nothing is listening
[09:43:40] <DaveMethvin> right that's what i mean, unhandled rejections
[09:43:42] <gibson0421> hence unhandledRejections
[09:43:45] <gibson0421> bingo
[09:44:02] <DaveMethvin> sometimes i get my words mixed up
[09:44:03] <DaveMethvin> :)
[09:44:09] <DaveMethvin> fixed the agenda notes
[09:44:12] <markelog> do we try to use native Promise constructor btw?
[09:44:16] <gibson0421> it's not just you
[09:44:18] <DaveMethvin> no
[09:44:25] <markelog> should we?
[09:44:30] <gibson0421> ECMAScript and A+ Promise suffer huge flaws w.r.t. terminology
[09:44:35] <DaveMethvin> we can't depend on Promise being there
[09:44:45] <m_gol> I think we resolved it (pun intended) on using Deferred
[09:44:58] <gibson0421> resolved, settled, fulfilled, rejected
[09:45:08] <gibson0421> pending
[09:45:17] <markelog> yeah, but we can workaround that
[09:45:17] <gibson0421> FACEPALM
[09:45:25] <markelog> byte-size?
[09:45:40] <DaveMethvin> dejected
[09:45:44] <markelog> ))
[09:45:47] <m_gol> we might defer to native promise if Deferred are missing (we plan to do it for core/ready) but this is for AJAX only anyway
[09:45:57] <m_gol> I mean for $.ajax
[09:46:15] <markelog> m_gol: isn't that an old discussion which no longer true?
[09:46:24] <gibson0421> I think it's still half-true
[09:46:28] <DaveMethvin> in some future setup we might be able to have something like we do with selector-native for Deferred that is just a Promise
[09:46:40] <DaveMethvin> but if you look at how we use Promise internally it's a lot of work for that
[09:46:47] <m_gol> yeah
[09:46:48] <DaveMethvin> at least for animation
[09:46:50] <DaveMethvin> and ajax
[09:46:59] <m_gol> ah, right, effects is another one
[09:47:00] <markelog> we don't planning to use native one?
[09:47:04] <gibson0421> we can update other modules to use spec-compliant thenables, and define a module that exposes Deferred if present and Promise otherwise
[09:47:06] <markelog> even if it exist?
[09:47:18] <markelog> in Deferred i mean
[09:47:22] <DaveMethvin> markelog: Deferred has a lot of different methods
[09:47:29] <DaveMethvin> we use them all internally
[09:47:42] <m_gol> it's not possible AFAIK unless you can subclass native Promise
[09:47:48] <markelog> yeah, but native Promise is build that way so you could enchance it
[09:47:52] <markelog> with your impl
[09:48:05] <timmywil> gibson0421: if that's possible, that would be best
[09:48:09] <DaveMethvin> some of them ... i know some of the shims are not extendable
[09:48:22] <timmywil> well, we don't need to support shims
[09:48:28] <gibson0421> `ConstructThenable = window.Promise || function( executor ) { var dfd = jQuery.Deferred();	try { executor( dfd.resolve, dfd.reject ); } catch ( ex ) { dfd.reject( ex ); } return dfd.promise(); }`
[09:48:46] <gibson0421> (as a starting point)
[09:48:57] <markelog> i meant other thing
[09:49:00] <DaveMethvin> i think it's doable but not without a lot of internal changes, so currently it's not drop in
[09:49:04] <gibson0421> or rather, flip the || operands
[09:49:05] <markelog> use Promise native in jQuery.Deferred(
[09:49:16] <gibson0421> markelog: no, I don't see that happening
[09:49:19] <DaveMethvin> that i would not do
[09:49:23] <timmywil> heh, you mean || instead of ||?
[09:49:25] <markelog> why?
[09:49:29] <DaveMethvin> use Promise instead of Deferred, maybe
[09:49:36] <DaveMethvin> and have our internal uses accept either
[09:49:46] <gibson0421> timmywil: no, `function(){ ... } || window.Promise` instead of the other way around
[09:49:53] <timmywil> gibson0421: kidding
[09:50:01] <gibson0421> so we get progress etc. if Deferred is loaded
[09:50:05] <gibson0421> gotcha
[09:50:33] <markelog> why we can't use native promises inside the deferred?
[09:50:35] <timmywil> operands is different than operators, so forget I said that
[09:50:58] <gibson0421> done ;)
[09:50:58] <m_gol> markelog: how would you implement progress, pipe etc.?
[09:50:59] <DaveMethvin> what does putting Promise inside Deferred buy us?
[09:51:10] <DaveMethvin> it would be two code paths
[09:51:28] <markelog> DaveMethvin: yeah, we did that before
[09:51:33] <timmywil> possibly performance, but I bet not
[09:51:34] <DaveMethvin> i can see replacing Deferred with Promise
[09:51:46] <markelog> me too
[09:52:05] <m_gol> timmywil: Chrome's native Promise is not exactly fast
[09:52:14] <gibson0421> meh
[09:52:14] <markelog> m_gol: link?
[09:52:14] <m_gol> timmywil: bluebird beats it hands down
[09:52:30] <m_gol> markelog: https://github.com/petkaantonov/bluebird/tree/master/benchmark
[09:52:31] <DaveMethvin> at some point we could have a deferred-native and change our internal uses to basically just be thenables so it works with either
[09:52:32] <timmywil> m_gol: yea, I suspected
[09:52:41] <DaveMethvin> but that's a lot of work
[09:53:04] <timmywil> anyway, we can bikeshed on this later, yea?
[09:53:11] <DaveMethvin> agreed
[09:53:37] <markelog> yeah
[09:53:40] <DaveMethvin> so gibson0421 was the wrap up that you were going to propose a solution for unhandled rejections?
[09:53:52] <gibson0421> yes
[09:53:55] <DaveMethvin> ok :)
[09:54:26] <DaveMethvin> that doesn't have to block this landing, if we get jaubourg's feedback of course
[09:54:43] <DaveMethvin> alrighty then, any other critical items?
[09:55:02] <DaveMethvin> let's just get some of this landed and wrapped!
[09:55:11] <DaveMethvin> thanks guys
