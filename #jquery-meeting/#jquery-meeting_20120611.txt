[08:58:33] <DaveMethvin> .
[09:00:52] <rworth> hey
[09:01:09] <gibson042> hello
[09:01:56] <DaveMethvin> ohai
[09:02:50] <DaveMethvin> who else is here? timmywil, rwaldron?
[09:02:58] <timmywil> yup
[09:02:59] <DaveMethvin> jaubourg said he might plop in
[09:03:42] <DaveMethvin> okay, so the conference is approaching quickly
[09:03:50] <DaveMethvin> we shouldn't arrive empty handed :)
[09:04:09] <DaveMethvin> before the conf we should have something to show
[09:04:12] <jaubourg> hi there
[09:04:13] <DaveMethvin> here he is
[09:04:45] <jaubourg> sorry for the delay, I was out to buy some stuff to eat and wear... not always the same stuff for both mind you
[09:04:52] <DaveMethvin> i said a beta in the notes, but we could call it an alpha if there isn't enough done
[09:04:55] <jaubourg> an HIIIII \o/
[09:05:11] <DaveMethvin> mainly i want something people can load and experiment with
[09:05:23] <DaveMethvin> there are a few unfinished items like $.parseHTML
[09:05:33] <timmywil> I think we can at least get a beta before the conf
[09:05:37] <DaveMethvin> timmywil would you say you're done with sizzle?
[09:06:03] <rwaldron> Hello!
[09:06:10] <rwaldron> I just made compass math work...
[09:06:14] <timmywil> DaveMethvin: I can be. There were a couple tickets I labeled 1.8 and "high", but they aren't blockers.
[09:06:20] <DaveMethvin> let's aim for next Tuesday the 19th for the beta?
[09:06:28] <mikesherov_> WOAH
[09:06:35] <mikesherov_> So, sorry for my lateness
[09:06:39] <DaveMethvin> np
[09:06:40] <rwaldron> DaveMethvin modular!
[09:06:43] <DaveMethvin> it's a party in there today!
[09:06:44] <rwaldron> that's something to show
[09:06:46] <timmywil> I can get them done before the 19th
[09:06:53] <DaveMethvin> i'm excited about what's gotten done
[09:07:02] <mikesherov_> So, are we talking about beta date?
[09:07:08] <DaveMethvin> yeah
[09:07:10] <DaveMethvin> the 19th?
[09:07:26] <DaveMethvin> the modular stuff is awesome
[09:07:30] <mikesherov_> I have one reservation
[09:07:39] <DaveMethvin> and a teepee
[09:07:42] <jaubourg> we shouldn't brag too much about modularity before we have a real solution that won't involve having to make a custom build
[09:07:45] <timmywil> DaveMethvin: I actually want to get with you about moving quickIs to Sizzle
[09:07:57] <mikesherov_> https://github.com/jquery/jquery/pull/808
[09:07:58] <socialhapy> ★ Pull request on jquery by jefferyto (1w, 1d ago): Fixes Bugs 7109 and 11854
[09:08:01] <jaubourg> like integrated with a modularity js lib or something
[09:08:11] <mikesherov_> that fix needs to be there
[09:08:15] <jaubourg> I like where this is heading but we need to mindful of the environment
[09:08:19] <timmywil> no reason matchesSelector can't always have a cache and shortcuts
[09:08:38] <mikesherov_> brb
[09:08:48] <DaveMethvin> okay let's add these
[09:08:56] <DaveMethvin> i agree on mS timmywil
[09:09:48] <DaveMethvin> jaubourg i agree a turnkey builder would be nice but
[09:09:59] <DaveMethvin> maybe it doesn't need to be before the release
[09:10:04] <mikesherov_> the dependency manager takes care of some of the complexity
[09:10:30] <jaubourg> also, I'd like to discuss actually NOT de-expose stuff too much so that we don't shoot ourselved in the foot when we try to integrate with something like requireJS or whatever
[09:10:59] <DaveMethvin> also i don't want non-programmer designers to try and build chopped-out stuff and combine with random plugins
[09:11:15] <timmywil> alright, have to switch to mobile (have a lunch), but ping me if you need me.
[09:11:18] <DaveMethvin> the current process ensures the person has some idea of what they are getting into
[09:11:30] <DaveMethvin> because its a speed bump
[09:11:59] <jaubourg> well, the current process makes it impossible to actually defer loading more of jQuery later on in the page... like you'd expect from any modular system
[09:12:01] <jaubourg> just saying
[09:12:04] <DaveMethvin> so building an online tool for our simple modules has the same risk that some closure compiler tool might have
[09:12:08] <jaubourg> not hi prio, but that's where we should be heading
[09:12:14] <DaveMethvin> it becomes easy to build but  hard to debug and we bear the brunt
[09:12:39] <scott_gonzalez> jaubourg: I agree, but build systems are not my concern.
[09:12:49] <DaveMethvin> jaubourg: so maybe we do like Mobile did and wrap the modules in AMD wrappers that are stripped out?
[09:13:00] <jaubourg> DaveMethvin: would make sense to me
[09:13:15] <scott_gonzalez> My concern comes from thinking about Drupal and their current goals.
[09:13:23] <jaubourg> take the most popular module system and use it
[09:13:30] <mikesherov__> sorry
[09:13:32] <mikesherov__> back
[09:13:36] <jaubourg> rather than re-invent the wheel
[09:13:38] <mikesherov__> I am in another meeting
[09:13:50] <DaveMethvin> scott_gonzalez: can you elaborate on the Drupal situation?
[09:14:04] <scott_gonzalez> If we can get a stripped down build of core that is small enough for Drupal, they'd probably take that rather than ripping out jQuery and pulling in micro-libs.
[09:14:14] <scott_gonzalez> But they have no intention of dropping jQuery for plugin devs.
[09:14:24] <mikesherov__> nod_ is theoretically here, no?
[09:14:34] <mikesherov__> he pinged me today on twitter
[09:14:34] <scott_gonzalez> And a stripped down jQuery core may be useless for plugin devs.
[09:14:46] <mikesherov__> seemed really excited about my modular build tweet
[09:14:54] <DaveMethvin> well if they used an AMD version perhaps that could help
[09:14:56] <jaubourg> scott_gonzalez: yes, but they won't use it if it is impossible to load, say, ajax later on in the page... which is what the current grunt-oriented approach entails
[09:15:01] <scott_gonzalez> So I'm not sure that a stripped down jQuery would make sense if they couldn't load in the remaning parts in a separate file for plugins.
[09:15:24] <scott_gonzalez> jaubourg: I agree, but that's unrelated to AMD.
[09:15:42] <scott_gonzalez> Not being able to load ajax/css/whatever later is my concern.
[09:15:52] <jaubourg> true, but why re-invent the wheel? I'm not a fan of AMD but it's used and popular and solves the problem
[09:16:02] <scott_gonzalez> jaubourg: Why invent a wheel ;-)
[09:16:05] <DaveMethvin> well i doubt we'll solve all the modularity issues in 1.8 but perhaps we can show what we did so far and take it further for 1.9
[09:16:14] <scott_gonzalez> <script> also solves the problem.
[09:16:19] <scott_gonzalez> As does simple concatenation.
[09:16:24] <DaveMethvin> and if that means you have to clone and build for 1.8 that's a start
[09:16:38] <DaveMethvin> in that case, our 1.8 stuff is not Drupal's solution
[09:16:50] <DaveMethvin> We can't stop them from using it but we can advise they don't
[09:16:51] <jaubourg> scott_gonzalez: for a trivial situation but not in actual complex apps where dependency hell will come and byte you
[09:16:53] <gibson042> this is why it's so important to document use of cross-module variables
[09:16:59] <scott_gonzalez> jaubourg: LIES
[09:17:07] <DaveMethvin> gibson042: oh yeah, which would break AMD
[09:17:08] <mikesherov__> +1 gibson042
[09:17:24] <jaubourg> scott_gonzalez: no U :P
[09:17:39] <scott_gonzalez> If including individual src files will break, that seems bad.
[09:17:59] <scott_gonzalez> That should only happen because they'd lose access to shared private vars.
[09:18:02] <DaveMethvin> well like i said, our 1.8 does not need to be the ultimate solution
[09:18:13] <DaveMethvin> it does not need to address Drupal's use case
[09:18:17] <mikesherov__> +1 DaveMethvin
[09:18:20] <jaubourg> hence why I proposed a shared file, so that it becomes a none issue: each module would have a copy of the shared variables, done
[09:18:20] <DaveMethvin> where i still think they should be using full jquery
[09:18:23] <mikesherov__> put a stake in the ground
[09:18:37] <DaveMethvin> modularity is  not for the great unwashed
[09:18:48] <DaveMethvin> ccao is not for the great unwashed
[09:18:53] <DaveMethvin> amd neither
[09:18:54] <mikesherov__> yeah, we've discussed many times
[09:19:02] <mikesherov__> bbl
[09:19:38] <DaveMethvin> so if someone wants to build a modular jquery with parts missing because they can swear on a stack of bibles they don't use
[09:19:44] <DaveMethvin> that is our use case for the 1.8 modularity
[09:19:59] <jaubourg> we already have amd support in the build... if we don't use amd for modules then we're lying when we tell amd jQuery has been loaded, food for thought
[09:20:49] <scott_gonzalez> Sounds like a good reason to strip it out :-P
[09:21:04] <nod_> DaveMethvin: about the drupal use case, 1.8 goals are a good start for us, we can work with that already.
[09:21:24] <jaubourg> scott_gonzalez: I was against it mind you, I hate the idea of supporting a specific module system, but what choice do we have except painting ourselves in a corner?
[09:21:58] <DaveMethvin> at least MOST of the floor has a fresh coat of paint that way
[09:22:05] <jaubourg> true
[09:22:13] <DaveMethvin> ok let me backtrack to an important item above
[09:22:22] <DaveMethvin> unit test fails
[09:22:32] <DaveMethvin> https://github.com/jquery/jquery/pull/795
[09:22:33] <socialhapy> ★ Pull request on jquery by gibson042 (2w, 3d ago): Fix #11743: don't suppress script errors in jQuery.ajax
[09:22:35] <DaveMethvin> i think that broke it
[09:22:45] <DaveMethvin> haven't looked into it but it breaks on all IE
[09:22:57] <jaubourg> even IE9?
[09:23:03] <DaveMethvin> even ie9
[09:23:07] <jaubourg> ouch
[09:23:27] <gibson042> the latest QUnit fixes those failures
[09:23:37] <DaveMethvin> ah it was raises() ?
[09:23:56] <DaveMethvin> who tests the testers?
[09:23:58] <DaveMethvin> :D
[09:24:04] <gibson042> yeah... errors in globalEval script got caught by their global window.onerror
[09:24:19] <DaveMethvin> i saw that, wondered how it got there
[09:24:38] <DaveMethvin> figured it must have been globalEval
[09:24:41] <DaveMethvin> since we only use it on IE
[09:24:56] <jaubourg> globalEvil is more like it
[09:25:19] <DaveMethvin> ino amirite?
[09:25:46] <DaveMethvin> okay, I still need to establish the compat plugin repo, i'll do that this week
[09:25:47] <jaubourg> globalEvil( "amirite" )
[09:26:10] <gibson042> typeError: amirite is not defined
[09:26:18] <DaveMethvin> gnarf we need an overview of the animation changes for the docs
[09:26:27] <DaveMethvin> unless someone else wants to tackle?
[09:26:50] <DaveMethvin> i want to summarize the big items for the beta release blog post
[09:26:57] <DaveMethvin> vendor prefixing gets mention fer sure
[09:28:16] <DaveMethvin> so our perennial item, bug triage
[09:28:52] <DaveMethvin> any bugs that aren't marked blockers that should be?
[09:29:01] <DaveMethvin> given that we have about a week to fix them
[09:29:42] <DaveMethvin> TRAC Y U SLOW
[09:30:19] <gnarf> DaveMethvin: Sorry hadn't gotten to it yet
[09:30:28] <gnarf> I'll bump it up my list
[09:30:29] <DaveMethvin> did we arrive at a concensus about docs#11797? seemed good to me
[09:30:41] <DaveMethvin> oh bot-t
[09:30:46] <DaveMethvin> http://bugs.jquery.com/ticket/11797
[09:31:03] <gnarf> We did - we will be adding them
[09:31:10] <gibson042> yep
[09:31:13] <DaveMethvin> good
[09:31:14] <jaubourg> promise-based is good for me too
[09:31:17] <gnarf> and gibson will take it if I don't get to it first :)
[09:31:39] <gibson042> either way, it'll be ready this week
[09:31:44] <DaveMethvin> sweet
[09:33:13] <DaveMethvin> I think we're okay with whatever we can knock down on the 1.8 list, as long as the blockers are taken care of
[09:34:07] <DaveMethvin> any other issues?
[09:34:54] <DaveMethvin> i'll be sending around a get-well card for bot-t after the meeting :)
[09:35:00] <gibson042> I'm going to tackle #11539 if I get a chance
[09:35:30] <DaveMethvin> that's cool, assign it to yourself if you think you want it
[09:35:31] <gibson042> I still want to at least put together unit tests for supporting text nodes in traversing and see where we are
[09:36:53] <DaveMethvin> I can update QUnit, gibson042 which version fixed it?
[09:37:15] <gibson042> 1604af735af117fff3ee7589c611c04f665ac169
[09:37:37] <DaveMethvin> oh yeah the one you submitted :D
[09:37:41] <gibson042> :)
[09:38:09] <DaveMethvin> well i guess we'll switch to a non-release one then
[09:39:51] <DaveMethvin> alright that does it then, go forth and prosper
[09:44:47] <DaveMethvin> closing the channel, see you in -dev!
