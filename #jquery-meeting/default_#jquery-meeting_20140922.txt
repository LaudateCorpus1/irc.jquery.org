[09:00:42] <jaubourg> hi there
[09:00:45] <DaveMethvin> sorry, i just got in so i'm not very prepared
[09:00:49] <DaveMethvin> hey jaubourg
[09:00:51] <jaubourg> I only have about 20 minutes ;)
[09:01:10] <jaubourg> np
[09:01:25] <jaubourg> hi oleg
[09:01:42] <markelog> hey-hey
[09:02:40] <jaubourg> so, I haven't been able to work as much as I wanted on the promise A stuff... BUT I managed to have the thing work (needed to switch back to node x86, was using node x64)
[09:03:04] <jaubourg> we have failures I'm looking at and there's need for some refactoring
[09:03:19] <jaubourg> should be able to dive into this tonight
[09:03:39] <jaubourg> hey gibson
[09:03:54] <gibson042> hi
[09:04:13] <DaveMethvin> supposedly timmywil is back from vacation
[09:04:25] <DaveMethvin> i don't see him tho
[09:04:50] <DaveMethvin> that vacation was so long he probably forgot how to program
[09:05:04] <jaubourg> haha
[09:05:08] <DaveMethvin> well let's do the easy thing first, Trac
[09:05:13] <DaveMethvin> no progress last week
[09:05:19] <DaveMethvin> i'm sooooo frustrated by it
[09:05:25] <jaubourg> well, I proved that not working on jQuery for long made you propose baaaaad PRs ;)
[09:05:40] <DaveMethvin> two or three times i went in to triage new issues and just gave up
[09:05:51] <jaubourg> frozen?
[09:05:51] <DaveMethvin> so imma see if I can get them going again
[09:05:56] <DaveMethvin> yeah, just not responding
[09:06:00] <jaubourg> :(
[09:06:11] <markelog> :-(
[09:06:16] <jaubourg> I suppose we pushed Trac as far along the road as we could?
[09:06:33] <DaveMethvin> well there is a group of volunteers who upgraded us to trac 1.0
[09:06:43] <DaveMethvin> but i think we just need to take the plunge and switch
[09:06:49] <DaveMethvin> it can't be worse than it is now
[09:06:51] <m_gol> ah, missed the beginning
[09:07:19] <jaubourg> plan is to switch to trac 1.0 or something else entirely?
[09:07:26] <DaveMethvin> trac 1.0 if we can
[09:07:37] <DaveMethvin> last i saw they were having some problems with the plugins
[09:07:54] <DaveMethvin> but i think it just takes someone to spend a couple of hours who knows what they are doing with trac
[09:07:59] <DaveMethvin> that isn't me :)
[09:08:00] <jaubourg> Yeah, I'd expect we have our share of custom code in our install of trac, amirite?
[09:08:09] <DaveMethvin> yeah
[09:08:26] <DaveMethvin> i think it was some login issues and github hooks
[09:08:26] <mikesherov> hi
[09:08:32] <jaubourg> hey mike
[09:08:34] <DaveMethvin> hey mikesherov
[09:08:44] <jaubourg> hey m_gol too :P
[09:08:55] <m_gol> :)
[09:08:56] <m_gol> hi
[09:09:26] <DaveMethvin> so i have a note from last week about "promise error telemetry" for you mikesherov did you talk to domenic?
[09:09:41] <mikesherov> I did not talk to him yet
[09:09:46] <mikesherov> I will definitely do it this week
[09:10:04] <mikesherov> I was slammed with normal job stuff last week... big deadline and week after a conf
[09:10:38] <jaubourg> I know the feeling :/
[09:10:51] <DaveMethvin> yeah
[09:11:02] <markelog> we all do i guess )
[09:11:12] <m_gol> yep :)
[09:11:21] <jaubourg> DaveMethvin: what's the rationale with not switching to github tracker? I seem to have seen a discussion about that
[09:11:37] <DaveMethvin> mainly the hassle of switching
[09:11:50] <DaveMethvin> also the gh tracker isn't all that good, it's good enough tho
[09:11:55] <DaveMethvin> and much better than a broken trac
[09:12:05] <jaubourg> but we have a hassle switching to trac 1.0, right?
[09:12:15] <m_gol> we don't really have a massive load of issues
[09:12:20] <m_gol> so I think we'd be fine with GitHub
[09:12:21] <DaveMethvin> as long as we kept our gh-xxx notation and knew that #xxx was old trac i think it would be okay
[09:12:26] <m_gol> we can use labels for most of the stuff
[09:12:32] <jaubourg> seems reasonable to me
[09:12:34] <DaveMethvin> right, at this point we don't have so much that gh issues would be a problem
[09:12:42] <jaubourg> and would immediately solve our pressing issue
[09:12:47] <m_gol> we could migrate all open issues to GitHub, there aren't too many of them I guess
[09:12:55] <m_gol> and close creating new accounts on Trac
[09:13:01] <DaveMethvin> well this week will be our last one on trac if we can't get it to work
[09:13:04] <m_gol> current situation is completely unusable
[09:13:25] <DaveMethvin> agreed
[09:13:31] <markelog> right
[09:13:52] <jaubourg> yep
[09:13:54] <DaveMethvin> so let's give them a week to make progress and if not we just give up
[09:13:58] <DaveMethvin> turn off logins
[09:14:03] <DaveMethvin> and use it for archival stuff
[09:14:24] <m_gol> yup
[09:14:24] <jaubourg> we'd still have to login to close existing issues, though
[09:14:33] <jaubourg> we don't wanna transfer them to the new system, do we?
[09:14:36] <m_gol> turn off account creation
[09:14:39] <m_gol> not necessarily logins
[09:14:39] <jaubourg> k
[09:14:43] <m_gol> then we'll get spam to 0
[09:14:49] <m_gol> so Trac will actually become usable
[09:14:52] <m_gol> after its own death
[09:14:55] <DaveMethvin> :)
[09:15:01] <jaubourg> long live the Trac I suppose
[09:15:14] <DaveMethvin> so, how about that Promise/A+ compat?
[09:15:20] <m_gol> for Trac to be usable it needs to stop being used ;P
[09:15:39] <DaveMethvin> how compat do we want to compat?
[09:15:49] <gibson042> all the way
[09:15:51] <jaubourg> like mike, I didn't get the time I expected but I have m_gol's branch running ( like I said x86 node works, x64 didn't)
[09:15:53] <markelog> 100%?
[09:16:02] <jaubourg> 100% is the goal
[09:16:05] <m_gol> running, not passing :)
[09:16:11] <DaveMethvin> haha, cheater!
[09:16:14] <m_gol> I need to try to browserify the sucker
[09:16:18] <m_gol> it's supposed to work now
[09:16:23] <m_gol> so we won't need jsdom in tests
[09:16:36] <m_gol> and we could test it in all supported browsers except IE<9 & Android<4
[09:16:40] <jaubourg> would be awesome, because unravelling what's going on is not easy in the console
[09:16:58] <jaubourg> (command line I mean)
[09:17:01] <m_gol> but I totally don't have time in September
[09:17:14] <DaveMethvin> jaubourg: are you saying you made promises impossible to debug? then we're compatible! :)
[09:17:16] <m_gol> sth about defending Masters Thesis
[09:17:19] <jaubourg> and sorry about the poor state of my first proposal, just wanted you guys to have something for Chicago
[09:17:39] <m_gol> np., my hacks over your PR were way poorer :)
[09:17:41] <DaveMethvin> m_gol: education is overrated
[09:17:42] <jaubourg> DaveMethvin: :P
[09:17:51] <markelog> true that
[09:17:52] <m_gol> but at least they made me realise more or less what's required
[09:18:08] <jaubourg> yeah, needs major refactoring
[09:18:17] <jaubourg>  but heh, that's js for you
[09:18:24] <DaveMethvin> so jaubourg are you on this then?
[09:18:30] <jaubourg> yep
[09:18:41] <jaubourg> just sorry I didn't have the time I expected this week
[09:18:45] <jaubourg> got time for it tonight
[09:18:52] <DaveMethvin> understandible, believe me
[09:18:54] <jaubourg> and intend to do massive work on it and die not sleeping
[09:19:05] <DaveMethvin> don't die!
[09:19:20] <jaubourg> bah, one less frenchman for a better world! :P
[09:19:29] <DaveMethvin> hmmm, you make a good argument :)
[09:19:31] <m_gol> don't die, then we'll have to finish it ourselves!
[09:19:36] <jaubourg> seriously though, I expect an all nighter on this sucker tonight
[09:19:54] <DaveMethvin> well pace yourself but we appreciate the effort!
[09:20:11] <DaveMethvin> alright, $.xhr
[09:20:23] <DaveMethvin> markelog and gibson042 do you have some stuff?
[09:20:32] <gibson042> as it turns out, http://api.jquery.com/jquery.ajax/#entry-examples is a pretty good start
[09:20:41] <gibson042> who knew? ;)
[09:20:58] <DaveMethvin> obvs our docs are pretty good
[09:21:05] <markelog> dammit, got disconnected
[09:21:07] <jaubourg> simple then: $.xhr = $.ajax;
[09:21:08] <markelog> i'm back now
[09:21:10] <jaubourg> next item!
[09:21:17] <DaveMethvin> hah
[09:21:18] <jaubourg> :P
[09:21:43] <DaveMethvin> i think those are really common scenarios, agreed
[09:21:47] <gibson042> aside from that, I found some GET/POST with spinner code
[09:22:03] <markelog> so let's just take those examples, create a gist with new interfaces, then compare?
[09:22:08] <DaveMethvin> yeah
[09:22:21] <jaubourg> seems like a good approach
[09:22:32] <jaubourg> I'm sorry guys, I really gotta fly
[09:22:41] <DaveMethvin> ok thanks for stopping by jaubourg
[09:22:44] <jaubourg> bbl on IRC while I work on promises
[09:22:51] <DaveMethvin> awesome
[09:22:55] <jaubourg>  /kiss everyone
[09:23:07] <markelog> see ya!
[09:23:33] <markelog> just one thing: i'm not gonna make the meeting next week, could we send the email to google groups instead?
[09:23:41] <DaveMethvin> yes, that would be great
[09:23:44] <markelog> cool
[09:23:46] <DaveMethvin> can you do that this week?
[09:23:51] <markelog> positive!
[09:24:15] <markelog> gibson042?
[09:24:20] <DaveMethvin> let's try to continue the discussion on the groups and with gists this week
[09:24:21] <gibson042> +1
[09:24:24] <markelog> cool
[09:24:27] <DaveMethvin> so we can make some progress before next week
[09:24:36] <markelog> all right
[09:24:52] <gibson042> what options did we settle on investigating for the xhr interface?
[09:25:12] <DaveMethvin> whichever ones give us pretty good coverage for the most common scenarios
[09:25:21] <gibson042> is it basically autosend: false vs. beforeSend for advanced use?
[09:26:13] <DaveMethvin> yeah i think we had a chaining interface and an object interface
[09:26:27] <DaveMethvin> so we could see how each looked
[09:26:31] <markelog> right
[09:27:01] <DaveMethvin> and the most common case is that you don't need anything before send, so that should be easy with no extra chaining
[09:27:35] <gibson042> yep
[09:28:44] <DaveMethvin> oh gibson042 had a question on one of the pull requests, let me find it
[09:29:08] <DaveMethvin> https://github.com/jquery/jquery/pull/1652#issuecomment-56127735
[09:29:20] <gibson042> oh yeah
[09:29:46] <DaveMethvin> does ie8 clone expandos? or just ie7?
[09:29:54] <markelog> they do
[09:29:59] <markelog> it does, i mean
[09:30:01] <DaveMethvin> damn
[09:30:14] <markelog> weird
[09:30:20] <markelog> as usual
[09:31:07] <DaveMethvin> it seems it won't be as easy as just restoring that code either
[09:31:15] <DaveMethvin> since i think it was running on newer IE by mistake?
[09:31:31] <gibson042> that should no longer be true with the new support test, though
[09:31:44] <DaveMethvin> ok, the feature test was wrong before
[09:32:01] <DaveMethvin> it lumped all the bad behavior together
[09:32:27] <markelog> what test was wrong?
[09:32:44] <DaveMethvin> i think cloneFixAttributes used one feature test to apply a bunch of different fixes
[09:32:59] <DaveMethvin> but i can't remember the details, it was two years ago :)
[09:33:09] <markelog> yep, have the same problem
[09:33:27] <markelog> doesn't matter now i guess
[09:34:00] <DaveMethvin> oldIE is the kind of pain you are glad to forget! :)
[09:34:32] <DaveMethvin> so gibson042 do you want to update to bring clear/merge back?
[09:34:50] <gibson042> that's my plan
[09:34:59] <gibson042> once done, I'll recheck size and performance
[09:35:20] <markelog> do we need to that?
[09:35:41] <gibson042> maybe not
[09:35:49] <gibson042> that was basically my question
[09:35:58] <markelog> right, that is an oldIE, but still, we have to compromise so much, to fix this minor bug
[09:36:22] <gibson042> how much is actually being compromised?
[09:36:43] <markelog> maybe we could do an easy fix first and if would get more bugs about it, we do the hard thing?
[09:36:45] <DaveMethvin> you mean, in size
[09:36:53] <markelog> speed
[09:36:59] <markelog> and complexity
[09:37:17] <gibson042> complexity is pretty small with clear/merge
[09:37:28] <gibson042> speed... I don't know, and don't have a good guess
[09:37:29] <gibson042> do you?
[09:37:38] <markelog> performance here is might be actual problem since you would have to do this for every node you would encounter
[09:37:41] <DaveMethvin> well we can wontfix it if it's not that common i suppose, but i was leaning towards clear/merge since it seems that would be pretty small
[09:38:08] <markelog> gibson042: still a hack and not the good one
[09:38:34] <markelog> DaveMethvin: exposing Sizzle expando would be even smaller
[09:38:36] <gibson042> all of fixCloneNodeIssues is a hack
[09:38:48] <gibson042> I don't think so, markelog
[09:38:54] <gibson042> it would be faster, but not smaller
[09:39:07] <markelog> yep :-), that is why i think we could make as small as possible
[09:39:16] <markelog> how so?
[09:39:21] <markelog> exposing one attribute
[09:39:30] <markelog> and remove it in one function
[09:39:35] <markelog> since two lines of code
[09:39:42] <markelog> *seems like
[09:39:45] <markelog> no?
[09:39:53] <gibson042> vs. `dest.clearAttributes(); dest.mergeAttributes( src );`
[09:40:03] <markelog> 6 lines!
[09:40:09] <DaveMethvin> what about noConflict cases? there could be multiple expandos
[09:40:10] <markelog> OMG right :-)
[09:40:29] <gibson042> yes, ick
[09:40:30] <markelog> @DaveMethvin: and users expandos too
[09:40:34] <DaveMethvin> yeah
[09:40:39] <markelog> but it would probably never come up
[09:40:42] <DaveMethvin> agreed
[09:40:56] <markelog> that is why i think we should wait until somebody would actually send us bug about it
[09:40:57] <DaveMethvin> all these edgy cases
[09:41:05] <gibson042> meh
[09:41:10] <gibson042> I'd rather just fix it for reals
[09:41:23] <DaveMethvin> but clear/merge just fixes it pretty simply, yes?
[09:41:43] <markelog> if we do that, than it will affect everyone, not just 0000000.1% of users
[09:41:53] <markelog> should be, yes
[09:42:00] <DaveMethvin> and we'll only slow down IE8, who's gonna blame us if IE8 is slow? :)
[09:42:12] <markelog> not many people :-)
[09:42:24] <gibson042> this is why I want to recheck performance
[09:42:37] <DaveMethvin> but they'll blame us if jquery breaks, so yeah gibson042 if you could look at perf that would be good
[09:42:48] <markelog> sounds good to me
[09:42:51] <DaveMethvin> i mean if it's 10x slower i may change my mind :)
[09:43:11] <markelog> i'm afraid that that is might be the case here
[09:43:20] <markelog> especially with a big dom tree
[09:43:31] <markelog> but i could be wrong too
[09:43:35] <markelog> just a speculation
[09:43:37] <gibson042> because markelog is right; https://github.com/jquery/jquery/pull/1652 as it stands is 99% slower
[09:43:45] <DaveMethvin> if you're cloning a lot of dom in ie8 you're probably screwed anyway :)
[09:43:47] <DaveMethvin> ouch!
[09:44:02] <gibson042> http://jsperf.com/jquery-pr-1652
[09:44:36] <DaveMethvin> sad.
[09:44:48] <DaveMethvin> so let's talk about versions
[09:44:56] <DaveMethvin> i think m_gol added this
[09:45:02] <m_gol> yup
[09:45:10] <markelog> 3.0!
[09:45:13] <markelog> so soon :-)
[09:45:16] <m_gol> so
[09:45:17] <DaveMethvin> we're going to introduce breaking changes so 3.x right?
[09:45:23] <m_gol> there's one issue
[09:45:32] <m_gol> that I discussed shortly with DaveMethvin so far
[09:45:48] <m_gol> that we were planning to release 1.12/2.2 and then drop some browsers in 1.13/2.3
[09:46:07] <m_gol> but if we try to follow semver, that'd mean the next version after 3.0.0 is 4.0.0
[09:46:08] <markelog> what is the time frame, what browsers?
[09:46:17] <DaveMethvin> ie6/7
[09:46:18] <m_gol> Safari 5.1, Opera 12
[09:46:21] <m_gol> IE 6/7
[09:46:22] <m_gol> yup
[09:46:26] <markelog> Opera 12?
[09:46:32] <DaveMethvin> i think we may just want to reconsider and drop them in 3.9
[09:46:35] <markelog> Still a lot of it outthere
[09:46:36] <DaveMethvin> 3.0
[09:46:48] <gibson042> +1 to that
[09:46:52] <markelog> hate that browser
[09:46:59] <m_gol> gibson042: +1 to what?
[09:47:08] <gibson042> to postponing the support changes for 3.0
[09:47:26] <markelog> but if the time frame is big enough, than i think we could do that
[09:47:30] <m_gol> gibson042: but we're talking now about not releasing 1.12/2.2 but 3.0 instead
[09:47:37] <m_gol> because there are a lot of breaking changes
[09:47:50] <DaveMethvin> so there are practical considerations, and then there are perception considerations
[09:47:57] <m_gol> and we kinda said we're not going to drop IE 6/7, Opera 12 & Safari 5.1 in the next release but the one after that
[09:48:05] <m_gol> in a blog post or sth
[09:48:07] <DaveMethvin> i think we all want most people's web sites to work on most browsers, even old ones
[09:48:46] <DaveMethvin> so how to do that and what to call it?
[09:48:58] <m_gol> Opera 12.x has about 1.61 % marked share in Poland
[09:49:07] <m_gol> it used to be ~3% not so long ago
[09:49:07] <gibson042> err, 4.0
[09:49:23] <markelog> 5% in Russia ((
[09:49:24] <m_gol> so it's declining rapidly even in countries where it used to have ~8%
[09:49:35] <gibson042> it'd be nice to give a semantically-versioned IE6/7-supporting release
[09:49:46] <DaveMethvin> and keep in mind that we probably won't release this until early next year, so where will the numbers be then?
[09:49:49] <markelog> but it's dropping
[09:49:53] <gibson042> so they can use it forever, even when the next major drops support
[09:50:07] <markelog> DaveMethvin: that's thing )
[09:50:29] <m_gol> It just seems weird to release 3.0.0 & 4.0.0 and nothing in between
[09:50:34] <m_gol> except some patches potentially
[09:50:41] <DaveMethvin> that is what happens when you do semver tho
[09:50:49] <DaveMethvin> which is why it's kind of crazy
[09:50:55] <m_gol> semver urges one to group breaking changes
[09:51:00] <m_gol> so that numbers don't skyrocket
[09:51:15] <DaveMethvin> that's not always easy with a project the size of jquery core
[09:51:22] <m_gol> and we don't introduce breaking changes a lot
[09:51:31] <markelog> we could check the share when we're gonna make the decision to be sure
[09:51:38] <markelog> but i think we could dropped by than
[09:51:41] <m_gol> yeah, we agree that semver doesn't fully work well with libs like jQuery
[09:51:49] <DaveMethvin> the only big required change here is to .then()
[09:51:59] <gibson042> I guess it's a different release anyway... IE6/7 → jQuery 1.x, else jQuery-legacy 3.x
[09:52:04] <DaveMethvin> the others we can do but aren't being forced to do it
[09:53:13] <m_gol> I'd be fine with ending support for IE6/7 on the 1.x branch
[09:53:23] <DaveMethvin> if we drop all those browsers, it seems like the majority of people on the web (as opposed to apps or cutting-edge web sites) will be using -legacy
[09:53:44] <m_gol> yeah, so I was thinking we might go in another direction
[09:53:48] <DaveMethvin> since there will be at least one of those browsers they care about
[09:53:51] <m_gol> and publish jquery & jquery-modern
[09:53:59] <gibson042> NOOOOOOOO!
[09:54:10] <markelog> panic mode :)
[09:54:14] <m_gol> and when we drop IE8 we could start publishing the modern one on jquery as well
[09:54:14] <gibson042> what comes after -modern?
[09:54:23] <DaveMethvin> post-modern, obvs
[09:54:27] <m_gol> :D
[09:54:28] <markelog> )))
[09:54:34] <m_gol> nothing, we go back to jquery package when IE8 is dropped
[09:55:03] <DaveMethvin> yeah this is hard because there are two dimensions
[09:55:11] <DaveMethvin> browser support and feature support
[09:55:23] <m_gol> one thing is certain: if we try to follow semver, we need 2 npm packages
[09:55:32] <DaveMethvin> yeah it would seem that way
[09:55:37] <markelog> and maybe two repositories?
[09:55:44] <gibson042> naming something "-next-generation" or "-modern" or similar is just begging for future jokes and pain
[09:55:45] <m_gol> that's not necessary
[09:55:57] <DaveMethvin> let me try to summarize some of this in the notes
[09:56:00] <gibson042> one repo
[09:56:01] <m_gol> jquery-nooldie
[09:56:11] <markelog> one would have 10 star and the other would have 30000 ))
[09:56:22] <markelog> but as we all know stars don't mean shit )
[09:56:55] <DaveMethvin> YEAH!
[09:57:10] <DaveMethvin> one repo for sure
[09:57:13] <markelog> right
[09:57:15] <markelog> for sure
[09:58:01] <DaveMethvin> if we don't remove patches the legacy one will *probably* support really old browsers even if we don't unit test them
[09:58:45] <DaveMethvin> i would like the main one to be able to drop support for browsers if they're supported in -legacy
[09:59:02] <DaveMethvin> but again i wonder what it will look like if basically most people use -legacy
[09:59:10] <DaveMethvin> like most people are using 1.x today?
[09:59:14] <m_gol> well, ie8 is an obvious one
[09:59:21] <DaveMethvin> right
[09:59:25] <markelog> gotta go, see ya later
[09:59:25] <m_gol> but Android 2.3 has 11% of Android market share
[09:59:36] <m_gol> so possible future drops might not be so severe
[09:59:59] <DaveMethvin> yeah so as a practical matter we need ie8 and android 2.x for supporting web sites
[10:00:29] <DaveMethvin> technically there is nothing in semver about browser support
[10:00:48] <DaveMethvin> so dropping support for ie6/7 in the -legacy branch does not require a version bump
[10:00:52] <DaveMethvin> or am i wrong?
[10:00:57] <m_gol> yeah
[10:00:57] <m_gol> but
[10:01:13] <m_gol> if you have "jquery": "^1.11.0" in your package.json
[10:01:26] <m_gol> then you can lose IE6/7 support in between `npm install`s
[10:01:29] <m_gol> that's not good
[10:01:30] <gibson042> if I'm using jquery-legacy 3.0.0 on IE6 and all is well, I should be able to use 3.0.1
[10:01:55] <DaveMethvin> i foresee a 3-dimensional aspect to this :(
[10:01:58] <DaveMethvin> oh also, the version numbers of these two packages aren't going to stay in sync ... right?
[10:02:01] <m_gol> we're technically dropping support for old browsers all the time
[10:02:12] <m_gol> when Fx 32 went out, we dropped Fx 30
[10:02:19] <gibson042> I think it's just good form on our part
[10:02:21] <DaveMethvin> right but that's different
[10:02:21] <m_gol> but non-rolling-release ones are really different
[10:02:58] <DaveMethvin> i don't think we're gonna work this out and i have to run now ... but it's definitely something we will have to figure out
[10:03:12] <gibson042> right, because our policy at the time of our release was to support the two latest Fx versions
[10:03:17] <gibson042> yeah; agreed
[10:03:31] <m_gol> hot topic :)
[10:03:38] <DaveMethvin> ok, thanks guys ... let's keep the discussion going on the mailing list!
[10:03:45] <m_gol> k, cu
