[11:00:02] <_|Nix|_> Good evening folks!
[11:00:16] <uGoMobi> hi all!
[11:00:29] <agcolom> Hi :-)
[11:00:57] <arschmitz> hi all
[11:01:07] <uGoMobi> agenda https://docs.google.com/document/d/1aRC1X8B6lCxk-LsrrSu5urH35pvMgegfFiHt3vT8-HA/edit?usp=sharing
[11:02:05] <johnbender> hi
[11:02:17] <_|Nix|_> johnbender: Hey!
[11:02:38] <_|Nix|_> uGoMobi: Ummm ... "AMD/UMD"? "Bower"?
[11:02:53] <uGoMobi> _|Nix|_: arschmitz added that to the agenda
[11:03:00] <RWhitbec-> hi, I'm here but on a call so distractedly here.
[11:03:07] <uGoMobi> so I think he want to update us
[11:03:10] <arschmitz> _|Nix|_: there was a meeting about that last week
[11:03:20] <uGoMobi> RWhitbec-: hey!
[11:03:27] <_|Nix|_> OK. Cool.
[11:03:30] <arschmitz> i was just going to give an update on what was discussed then
[11:03:48] <_|Nix|_> By all means - looking forward to it.
[11:03:55] <uGoMobi> everyone can just add items to the agenda
[11:04:10] <uGoMobi> things you want to discuss during meeting
[11:04:12] <_|Nix|_> uGoMobi: Oh, I get it - things we should talk about.
[11:04:16] <_|Nix|_> Cool!
[11:04:28] <uGoMobi> yeah
[11:04:43] <uGoMobi> so we don't have to go thru all updates
[11:04:49] <_|Nix|_> Go ti.
[11:05:06] <uGoMobi> but we do post the updates on meetings.jquery.org for the community
[11:05:18] <_|Nix|_> Understood.
[11:05:47] <uGoMobi> ok so last week there was no Mobile meeting because of 4th of July holiday, but we did have a UI/Mobile meeting
[11:05:58] <uGoMobi> 1.4 alpha will be released next week
[11:06:15] <uGoMobi> so I wanted to discuss what needs to be done for that release
[11:06:17] <_|Nix|_> How's alpha work? Can we keep reviewing widgets after that?
[11:06:40] <_|Nix|_> scott_gonzalez said something about internal changes being OK.
[11:06:53] <uGoMobi> we can still make big changes, but that would mean you have to do another alpha
[11:07:07] <scott_gonzalez> Internal changes are fine after an alpha, since they don't change the public API.
[11:07:09] <uGoMobi> (I am not semver specialist though)
[11:07:12] <_|Nix|_> Not sure if widget review counts as internal changes because it actually implements API.
[11:07:33] <arschmitz> _|Nix|_: nothing that effects api at all can change
[11:07:49] <arschmitz> without another alpha
[11:07:53] <uGoMobi> right
[11:07:57] <_|Nix|_> arschmitz: Well, that's the funny thing. All widgets support destroy() already, but it works incorrectly in many of them.
[11:08:04] <_|Nix|_> arschmitz: ... in that it does nothing.
[11:08:12] <_|Nix|_> arschmitz: Same can be said for all the other review items.
[11:08:17] <_|Nix|_> arschmitz: So, it's not like we're adding API.
[11:08:23] <arschmitz> thats effects api though if it did nothing before and it does something now
[11:08:42] <arschmitz> thats a change the user can see
[11:08:54] <arschmitz> it has to be something that is basicly just like reorg
[11:09:00] <_|Nix|_> arschmitz: OK.
[11:09:02] <arschmitz> where nothing the user sees will change
[11:09:02] <_|Nix|_> arschmitz: Got it.
[11:09:23] <uGoMobi> so what branches are we still working on?
[11:09:38] <uGoMobi> arschmitz: wanna start?
[11:09:44] <arschmitz> sure
[11:09:58] <arschmitz> i have panels, flipswitch, checkboxradio, and button
[11:10:13] <arschmitz> im going to merge content-widget after meeting today
[11:10:24] <uGoMobi> okay
[11:10:26] <arschmitz> other then flipswitch those are all review branches
[11:10:34] <_|Nix|_> arschmitz: OK. I accept this approach but I cannot help but think that all the API promises made by the widget factory and not implemented by us can be considered bugs. So every widget review item we implement is nothing more than a bug fix.
[11:10:42] <uGoMobi> I am working on that panels branch as well
[11:10:53] <arschmitz> uGoMobi: yup
[11:10:55] <uGoMobi> it's actually external panels branch
[11:11:00] <uGoMobi> to be clear
[11:11:08] <arschmitz> right sorry i was being general sorry
[11:11:13] <uGoMobi> and it's a pain to get it working on android
[11:11:16] <uGoMobi> np
[11:11:42] <_|Nix|_> What widgets are still review-untouched?
[11:11:52] <uGoMobi> table
[11:12:00] <arschmitz> table we are skipping though right?
[11:12:03] <arschmitz> and slider
[11:12:10] <_|Nix|_> Ugh ... I have that fist-in-the-stomach feeling.
[11:12:11] <uGoMobi> although frequent has done some work on table
[11:12:30] <_|Nix|_> arschmitz: Yeah, I totally wanna skip table.
[11:12:39] <uGoMobi> arschmitz: yes and no... it needs the refresh method
[11:12:52] <arschmitz> _|Nix|_: ps saw first complaint about large table rendering perf the other day
[11:12:53] <uGoMobi> because we add a temp solution for that in 1.3-stable
[11:13:01] <_|Nix|_> arschmitz: Yaaaaaaay!
[11:13:18] <toddmparker> Hi all, sorry I'm late.
[11:13:22] <uGoMobi> hey toddmparker
[11:13:24] <_|Nix|_> NP.
[11:13:58] <uGoMobi> _|Nix|_: what branches are you working on?
[11:14:05] <uGoMobi> collapsible (set)?
[11:14:25] <arschmitz> _|Nix|_: did you did select and custom select or just custom?
[11:14:49] <_|Nix|_> uGoMobi: collapsible-widget-review
[11:15:04] <_|Nix|_> arschmitz: No. IIRC I didn't do select.
[11:15:12] <toddmparker> looks like the review is cranking along. nice work _|Nix|_ and arschmitz
[11:15:16] <_|Nix|_> arschmitz: I just turned custom select into a proper extension and flattened it somewhat.
[11:15:37] <_|Nix|_> toddmparker: Especially arschmitz. I've been bogged down in collapsible.
[11:16:28] <toddmparker> re: table, we do need to have refresh in there since we added it for 1.3.1 but need to re-do for the new structure
[11:16:38] <uGoMobi> ok so table, listview, select, navbar haven't been reviewed
[11:16:44] <uGoMobi> toddmparker: yes
[11:16:48] <toddmparker> cool
[11:16:49] <_|Nix|_> arschmitz: the good news is select already has _destroy().
[11:17:00] <arschmitz> uGoMobi: i started listview this morning
[11:17:09] <_|Nix|_> arschmitz: I dread to think about implementing enhanced for select.
[11:17:09] <uGoMobi> arschmitz: ah great
[11:17:36] <uGoMobi> arschmitz: frequent said he would try to work on 1.4 table refresh method this week, right?
[11:17:45] <arschmitz> uGoMobi: yup
[11:17:56] <arschmitz> as far as i recall he had them done at one point
[11:18:10] <arschmitz> but then switched attention to 1.3 to get them for the 1.3.1 release
[11:18:19] <uGoMobi> _|Nix|_: you worked on popup?
[11:18:54] <uGoMobi> arschmitz: ah you are right... we have to check if that code is still available somewhere
[11:18:58] <_|Nix|_> uGoMobi: Popup's done.
[11:19:08] <uGoMobi> let's discuss with frequent when he is around
[11:19:15] <_|Nix|_> uGoMobi: ... and merged.
[11:19:17] <uGoMobi> _|Nix|_: perfect!
[11:20:04] <uGoMobi> how about the new generic filter widget
[11:20:11] <uGoMobi> frequent opened a PR for that
[11:20:23] <uGoMobi> https://github.com/jquery/jquery-mobile/pull/6145
[11:20:26] <b-ot> uGoMobi: Pull request #6145 by frequent (1d 20h ago): filter widget - first commit
[11:20:29] <arschmitz> uGoMobi: i reviewed and left comments along with jzaefferer he is updateing
[11:20:51] <uGoMobi> yeah saw that
[11:21:00] <uGoMobi> so it looks like this can land in 1.4
[11:21:11] <arschmitz> good chance yeah
[11:21:15] <uGoMobi> cool
[11:21:21] <uGoMobi> then we have the icons
[11:21:30] <uGoMobi> there is a grunticon branch
[11:21:52] <uGoMobi> but we still didn't decide about the implementation of the loader
[11:21:53] <toddmparker> ah, yes
[11:22:06] <toddmparker> what is the current opinion/thinking?
[11:22:21] <arschmitz> toddmparker: has scott made any progress on using a png sprite fallback he had talked about looking into it?
[11:22:34] <uGoMobi> toddmparker: did Scott (Jehl) have a chance to look into that png sprite solution?
[11:22:57] <toddmparker> he hasn't, no. it's sort of a bigger change
[11:23:05] <uGoMobi> I can imagine
[11:23:29] <toddmparker> just looking around, though someone tried that
[11:23:52] <toddmparker> but the nice thing with not using a sprite is you can avoid needing containers and such
[11:23:56] <toddmparker> cleaner markup
[11:24:16] <toddmparker> only maybe ie6 gets the individual pngs
[11:24:34] <uGoMobi> which we don't support
[11:24:41] <toddmparker> checking that fact now
[11:24:51] <toddmparker> IE 6/7
[11:25:18] <toddmparker> so all others will get the inline svg or png data in the stylesheet
[11:25:35] <toddmparker> that's why we weren't super optimizing for jeu told ie.
[11:25:39] <toddmparker> old ie.
[11:26:23] <scott_gonzalez> I'm not concerned about IE 6/7.
[11:26:23] <uGoMobi> so for 1.4 we should decide about how to add the loader script
[11:26:28] <toddmparker> sorry, we've been slammed here. sorry if this is slowing you down
[11:26:45] <scott_gonzalez> The problem is that the default isn't going to be 2 inline data-URIs.
[11:26:56] <toddmparker> scott_gonzalez: yeah, we aren't either. if they get a lot of requests, whatever. they are desktop browsers.
[11:26:56] <scott_gonzalez> So it's inline SVG or external PNGs.
[11:27:11] <toddmparker> how's that?
[11:27:18] <toddmparker> the second fallback is inline png
[11:27:28] <scott_gonzalez> No scripted fallbacks by deafult.
[11:27:36] <scott_gonzalez> That's an opt-in.
[11:28:01] <scott_gonzalez> The problem is that you shouldn't have to script the inclusion of stylesheet.s
[11:28:21] <scott_gonzalez> So it's fine to have a opt-in to scripted stylesheets and have fully optimized versions.
[11:28:28] <scott_gonzalez> Where it will load only the CSS that will be used.
[11:28:36] <scott_gonzalez> But by default we want something that just works, with no scripting.
[11:28:50] <scott_gonzalez> And that's only possible if all solutions are in a single stylesheet.
[11:29:05] <scott_gonzalez> So it's either double up on data-URI SVG + PNG or data-URI SVG with external PNG.
[11:29:23] <toddmparker> the scripting is needed to decide which stylesheet to load. i mean, we have the no script fallback which points to the external png because it's lowest common denominator...
[11:29:35] <uGoMobi> but we need the JS right now to fallback to data-uri png
[11:30:05] <toddmparker> if you're using this approach, you do need a JS loader
[11:30:17] <toddmparker> i don't see a way around that or you're wasting bandwidth
[11:30:53] <scott_gonzalez> The amount of wasted bandwidth is fairly low if you use external PNG.
[11:31:00] <toddmparker> so…that really only leaves you with the 1x/2x sprite sheet approach we have now
[11:31:01] <uGoMobi> or can we do this with class on container (=page)
[11:31:02] <uGoMobi> ?
[11:31:43] <scott_gonzalez> I wish Scott Jehl was here, buecause I'm pretty sure he understood this last time.
[11:31:49] <scott_gonzalez> This is the reason he's looking into using a sprite.
[11:32:00] <toddmparker> scott_gonzalez: is the thinking you'd link up the svg css + the png w/external in the markup?
[11:32:11] <scott_gonzalez> So that the default fallback in the stylesheet is a single external png instead of many external pngs.
[11:32:29] <scott_gonzalez> The stylesheet would have rules like:
[11:32:50] <scott_gonzalez> .icon-foo { inline-svg; } .no-svg .icon-foo { external-png }
[11:32:55] <toddmparker> i see where you're going with this…just means that you lean more heavily on the png fallback so that's why you want a sprite
[11:33:03] <scott_gonzalez> Right.
[11:33:25] <scott_gonzalez> Again, there can be an opt-in for using the optimized stylesheets and setting a config for where to load them from.
[11:33:34] <toddmparker> (asked scott j. to hop on)
[11:33:34] <scott_gonzalez> But the default shouldn't require setting any configs.
[11:33:51] <scott_gonzalez> So you do either A or B:
[11:34:03] <uGoMobi> hey scottjehl__
[11:34:08] <scottjehl__> heya
[11:34:09] <scottjehl__> what's up
[11:34:14] <uGoMobi> thanks for joining
[11:34:23] <scott_gonzalez> A) <link rel="stylesheet" href="jquery-mobile/defualt-styles.css"> <script src="jquery-mobile.js">
[11:34:39] <scott_gonzalez> B) <script src="jquery-mobile.js"> <script>$.mobile.cssPath = "..."
[11:34:47] <toddmparker> grunt icon doesn't generate the sprite, but we could use the png output and run 'em thru something like compass to make a sprite
[11:34:49] <scottjehl__> I don't see a backscroll, so... sorry about that
[11:35:16] <scott_gonzalez> scottjehl__: We're talking about the default stylesheet approach with the data-URI SVG and external PNG fallback.
[11:35:19] <toddmparker> gist is they want to look at one stylesheet
[11:35:20] <toddmparker> .icon-foo { inline-svg; } .no-svg .icon-foo { external-png }
[11:35:27] <scott_gonzalez> And then the opt-in to using optimized stylesheets with a JS config.
[11:35:30] <toddmparker> to avoid the js loader
[11:35:41] <scottjehl__> yeah, I remember
[11:36:00] <toddmparker> which would mean they would be leaning on the png fallback images more heavily since there isn't the inline version
[11:36:07] <scottjehl__> right.
[11:36:08] <toddmparker> which means they want to use sprites for that
[11:36:11] <scottjehl__> yep
[11:36:48] <scott_gonzalez> I think others were confused about the approach we discussed. Is everyone following this now?
[11:36:50] <toddmparker> so the sprite can be done via a manual workflow as a one time thing. maybe use compass or whatever
[11:36:55] <scottjehl__> ...which means we'll need to create elements for each icon
[11:37:03] <toddmparker> ^ that too, yes
[11:37:07] <scottjehl__> like we currently do in jqm
[11:37:12] <toddmparker> is you have sprites, you have containers
[11:37:41] <toddmparker> scott_gonzalez: does this summary seem about right to you?
[11:37:45] <uGoMobi> I changed it from span to :after pseudo element
[11:37:51] <toddmparker> cool
[11:38:09] <uGoMobi> grunticon demo page http://view.jquerymobile.com/grunticon/demos/test/icons/index.html
[11:38:15] <uGoMobi> (has loader in the head)
[11:38:19] <scottjehl__> we wanted to get away from that I think but sprites require that. If we did :after we'd need all uses of an icon piled into the data uri selector
[11:38:20] <toddmparker> if so, scottjehl__  - given these constraints, do you think this is workable/worth it vs. just doing 2x PNG sprites like now
[11:39:04] <toddmparker> that's true. you can't apply a class to :after, needs the rules baked in
[11:39:19] <uGoMobi> I did that in grunticon branch
[11:39:21] <scottjehl__> I guess if every icon was targeted to .icon-foo:after ?
[11:39:31] <uGoMobi> changed all selectors (see that demo page)
[11:39:59] <uGoMobi> scottjehl__: right, that's what the selectors look like now
[11:40:05] <arschmitz> correct me if im wrong but using :after there is no added markup with way
[11:40:07] <toddmparker> .ui-icon-action:after
[11:40:14] <scott_gonzalez> So were you planning on doing things like <h3 class="icon-foo">some text</h3>
[11:40:16] <toddmparker> so yep.
[11:40:16] <uGoMobi> yup
[11:40:51] <toddmparker> arschmitz: right. but you need to scope your rules to cover the situations
[11:41:19] <scottjehl__> yeah Scott. I think .ui-icon-action:after is fine as the default, if that's what you guys were thinking
[11:41:21] <uGoMobi> scott_gonzalez: yes, works with class like that (but we only use icon on buttons)
[11:41:51] <scottjehl__> that'd kick out IE7 from any icon usage
[11:42:00] <scottjehl__> just, noting that
[11:42:00] <uGoMobi> I know
[11:42:03] <toddmparker> :after ?
[11:42:06] <uGoMobi> IE7 = C-grade now
[11:42:06] <scottjehl__> yep
[11:42:11] <toddmparker> hmmm. ok
[11:42:26] <scott_gonzalez> I was only asking because you said that my proposal would require elements.
[11:42:28] <uGoMobi> I added test for pseudo element support to our A-grade test
[11:42:29] <toddmparker> if c grade, seems ok i guess.
[11:42:37] <toddmparker> ah, ok
[11:42:44] <arschmitz> ok so what is the real downfall of inline svg with png sprite fall back then? is it just having to manually compose the sprite and that its not AS highly optimized?
[11:42:56] <toddmparker> be good if we showed the text in cases where there are icon only buttons but no icons
[11:43:03] <toddmparker> which should happen in c grade
[11:43:05] <toddmparker> anyway
[11:43:18] <scottjehl__> "elements" sorry. :)
[11:43:27] <uGoMobi> toddmparker: if C-grade we don't hide the text
[11:43:31] <toddmparker> right
[11:44:09] <scottjehl__> so yeah, this all sounds fine to me
[11:44:14] <scott_gonzalez> In terms of using a sprite instead of multiple images, we're really only talking about optimizing for old Android, right?
[11:44:23] <toddmparker> arschmitz: just the manual workflow to make the sprite and that you need to use :after. with the current approach, it's just a bg image so it's a bit more flexible. and it works everywhere.
[11:44:36] <scott_gonzalez> Can't we just tell people "if you want good perf on old Android, use the JS config for optimized stylesheets" ?
[11:45:03] <scottjehl__> and IE8
[11:45:16] <toddmparker> i don't think there will be a big perf change other than not loading those external png rules
[11:45:23] <toddmparker> just the stuff i mentioned above
[11:45:23] <scottjehl__> (no svg support there either)
[11:45:43] <toddmparker> https://docs.google.com/spreadsheet/ccc?key=0Ag5_yGvxpINRdHFYeUJPNnZMWUZKR2ItMEpRTXZPdUE#gid=0
[11:45:54] <scott_gonzalez> IE8 can probably handle multiple pngs without too much concern.
[11:45:59] <toddmparker> see which devices see the Grunticon PNG? column
[11:46:02] <scottjehl__> this is all fine. The change means two requests in IE8 and Android instead of 1 request
[11:46:07] <scottjehl__> that's about it I think.
[11:46:26] <scottjehl__> those browsers would have received a css data uri sheet of pngs
[11:47:06] <toddmparker> old Android, BB, Boot2Gecko, WebOS, Kindle, IE 6/7,
[11:47:16] <toddmparker> ^ those all load the PNG, no SVG support
[11:47:55] <scottjehl__> IE8 too Todd
[11:48:03] <scott_gonzalez> I think we're getting too concerned about default perf.
[11:48:08] <toddmparker> yeah, think this is workable. you'd just use the grunt icon svg stylesheet, append the external png rules (or load separately) and generate the 1x png spritesheet
[11:48:15] <scott_gonzalez> We're talking about one line of JS to opt in to optimized CSS.
[11:48:39] <scottjehl__> not sure why IE8+ are not in that chart
[11:48:44] <toddmparker> but i wonder if it's worth offering the JS option if you go this way
[11:49:07] <toddmparker> you've already taken the hit on sprites and compatibility
[11:49:18] <scottjehl__> Default tends to be common with these frameworks is the thing. Worth worrying about.
[11:49:20] <toddmparker> just a thought. might be less confusing.
[11:49:20] <scott_gonzalez> No, I'm saying don't take the hit on sprits.
[11:49:54] <scott_gonzalez> If we say default is data-URI SVG + individual external PNG, we have no limits imposed on us regarding markup.
[11:49:54] <toddmparker> ah, so be default link up the svg + external png
[11:50:10] <toddmparker> and tell people to use the js loader if they want to avoid all those fallback requests?
[11:50:17] <scott_gonzalez> yeah
[11:50:23] <toddmparker> that seems ok to me too
[11:50:24] <scott_gonzalez> And that is a total of one line of JS, right?
[11:50:37] <toddmparker> yeah, it's pretty simple
[11:50:40] <scott_gonzalez> It's just setting a path for the directory containing the stylesheets.
[11:50:49] <toddmparker> yep
[11:50:54] <uGoMobi> and the <noscript> fallback
[11:51:15] <uGoMobi> but we can show that in API docs and demos
[11:51:25] <toddmparker> that seems fine with me.
[11:51:28] <scottjehl__> we'll have to generate different css files than grunticon does currently
[11:51:34] <scottjehl__> sounds like 4 css files
[11:51:35] <toddmparker> rather avoid all the sprite crap
[11:51:49] <scott_gonzalez> It's 1 more than what we have right now, right?
[11:51:59] <scott_gonzalez> And the new one is just a combination of 2 of the existing ones.
[11:52:16] <scott_gonzalez> With a ".no-svg" or similar prefix added to the PNG rules.
[11:52:25] <toddmparker> so the default 4th sprite sheet is just the SVG + external PNG concat?
[11:52:38] <toddmparker> right, what you said.
[11:52:55] <toddmparker> icons are tricky.
[11:53:05] <scott_gonzalez> Indeed.
[11:53:09] <uGoMobi> they are
[11:53:13] <toddmparker> ok, if that's the plan, what can we do to help?
[11:53:24] <scott_gonzalez> But I'm glad I don't need to finish this project: https://github.com/scottgonzalez/web-icons
[11:53:38] <scott_gonzalez> I really was not interested in working on that.
[11:53:59] <scott_gonzalez> I guess just add that fourth stylesheet generation.
[11:54:05] <toddmparker> heh. be good resurrect that once everyone supports SVG in 2018
[11:54:43] <toddmparker> uGoMobi: are you all set on icons? did andrew check in the fixed ones?
[11:54:50] <scott_gonzalez> Hopefully someone who knows more about icons than me will handle that in 2018 :-)
[11:54:56] <scottjehl__> android 2.3 will still rule that year, but I'll be a farmer by then
[11:55:05] <uGoMobi> fixed one ... that minus icon
[11:55:10] <uGoMobi> did you guys make more changes?
[11:55:35] <uGoMobi> lol scottjehl__
[11:56:07] <uGoMobi> toddmparker: I think we can still tweak the icons a bit after alpha
[11:56:20] <toddmparker> uGoMobi: that's true
[11:56:32] <toddmparker> just asked andrew - he fixed the "-" that was the wrong color
[11:56:46] <uGoMobi> yeah, I received that one
[11:56:50] <toddmparker> but he couldn't figure out how to find your grunt icon test page int eh repo
[11:56:58] <toddmparker> for the more advanced tweaking
[11:57:08] <toddmparker> but we can definitely do that post-alpha.
[11:57:13] <toddmparker> no API changes in the icons
[11:57:19] <uGoMobi> oh ok, I converted grunticon stuff to JQM stuff :)
[11:57:30] <toddmparker> cool
[11:57:37] <toddmparker> so looks like this is pretty close then
[11:58:01] <toddmparker> just need to remove the :after approach and make that combined css fallback file
[11:58:08] <toddmparker> wonder if that can be scripted
[11:58:24] <uGoMobi> remove :after approach?
[11:58:41] <uGoMobi> we can still use :after for the fallback png or not?
[11:59:27] <uGoMobi> let's move the icon discussion to -dev
[11:59:36] <uGoMobi> arschmitz: you added some items to agenda
[11:59:43] <arschmitz> yup
[11:59:53] <toddmparker> ok, cool
[12:00:14] <toddmparker> sounds like if we're not doing sprites, no need for :after
[12:00:30] <toddmparker> just a simple bg image wherever
[12:00:37] <arschmitz> Had a meeting last week with DaveMethvin, jzaefferer, scott_gonzalez, rxaviers
[12:00:54] <arschmitz> about AMD/UMD and bower
[12:01:37] <arschmitz> and getting all jquery porjects using the same setup
[12:01:52] <scottjehl__> later all
[12:02:27] <arschmitz> ui and mobile will use the jquery plugin approach https://github.com/umdjs/umd/blob/master/jqueryPlugin.js
[12:03:04] <arschmitz> and not worry about common js support like core and quint need to
[12:04:09] <arschmitz> for Bower mobile and ui will ship source files not concated ones
[12:04:36] <arschmitz> core will ship concated files
[12:04:40] <uGoMobi> ok good
[12:04:52] <arschmitz> because with ui and mobile people should be taking pieces not whole thing
[12:05:02] <arschmitz> and generally anyone using bower will have a build process anyway
[12:05:59] <_|Nix|_> arschmitz: So we'll add support for both of these, in addition to what we're doing now?
[12:06:12] <arschmitz> no this will replace what we have no eventually
[12:06:26] <arschmitz> so all projects will use same amd setup
[12:07:37] <uGoMobi> ok thanks
[12:07:46] <uGoMobi> namespace
[12:08:28] <arschmitz> ok for namespace right now we have everything on the mobile namespace in js and ui in css
[12:08:54] <arschmitz> but as we start to pull in ui widgets and ui core we will now have some things on the ui name space in JS
[12:09:37] <uGoMobi> right, not very consistent
[12:09:39] <arschmitz> i personally dont like this idea because i think it will be confusing to users
[12:09:54] <uGoMobi> I agree
[12:10:24] <arschmitz> there was a bit of discussion about this this morning and jzaefferer and scott_gonzalez think we should maintain the two NS setup
[12:10:27] <_|Nix|_> arschmitz: What the temporary $.mobile.x = $.ui.x?
[12:10:56] <arschmitz> _|Nix|_: we could do that but that means adding that for each widget
[12:11:05] <arschmitz> which is ugly and just masking the issue really
[12:11:09] <_|Nix|_> arschmitz: Ummm ... $.widget shim?
[12:11:26] <_|Nix|_> arschmitz: Nono. It's for backwards compat and will be going away in 1.5.
[12:11:32] <arschmitz> _|Nix|_: no
[12:11:58] <arschmitz> the conclusion this morning would be we stay on mobile namespace for anything mobile specific
[12:12:09] <arschmitz> and only use ui for stuff actually in ui
[12:12:53] <uGoMobi> so this is about the ui/mobile merge we are planning on, but with including tabs in 1.4 it is also an actual issue
[12:13:07] <_|Nix|_> arschmitz: OK, that's cool, but how are we going to handle the one-version-where-we-deprecate-the-old-way?
[12:13:29] <scott_gonzalez> Keep in mind that ui and mobile are not the only namespaces.
[12:13:37] <scott_gonzalez> There are many namespaces and they all need to just work.
[12:14:19] <_|Nix|_> scott_gonzalez: My concern is with a widget moving from one to the other without a transition period during which the source is marked deprecated.
[12:14:32] <arschmitz> what my thought and "vision" on this are that mobile builds on top ( or should ) of UI
[12:14:40] <arschmitz> so we should share a namespace
[12:15:06] <arschmitz> let ui core establish it and then add on the things we need
[12:15:14] <_|Nix|_> Yeah. That's not bad.
[12:15:18] <arschmitz> so mobile would be more like an add on to UI
[12:15:19] <scott_gonzalez> It's very bad.
[12:15:30] <scott_gonzalez> Because it's telling all users to use the UI namespace because they build on UI.
[12:15:40] <scott_gonzalez> And we've been very clear that users should NOT do this.
[12:15:45] <scott_gonzalez> And we yell at them when they do.
[12:25:48] <arschmitz> yes
[12:26:00] <_|Nix|_> Ummm ... API break, anyone?
[12:26:11] <arschmitz> _|Nix|_: no because they will be different widgets
[12:26:13] <_|Nix|_> ... or are we gonna call that one 2.0.0?
[12:26:24] <arschmitz> this would happen one widget at a time
[12:26:34] <arschmitz> as ui adopts them or we adopt them from ui
[12:26:53] <arschmitz> so the old one would be deprecated and we would get a new one
[12:27:00] <_|Nix|_> arschmitz: OK ... so, every time such an adoption takes place, they will overlap for one version and be deprecated at the source.
[12:27:08] <uGoMobi> I want to wrap up here
[12:27:25] <_|Nix|_> uGoMobi: OK. To the -dev channel!
[12:27:40] <uGoMobi> agcolom: did you have anything to discuss?
[12:28:27] <uGoMobi> anyone from the community have questions?
[12:29:13] <uGoMobi> ok thanks everyone!
[12:29:17] <_|Nix|_> L8R!
[12:29:18] <uGoMobi> see you on -dev
[12:32:18] <agcolom>  Sorry Had an emergency....
[12:32:33] <agcolom> someone at the door...
