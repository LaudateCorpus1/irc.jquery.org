[08:28:13] <JamesMGreene> jzaefferer Krinkle|detached leobalte1 scott_gonzalez et al: QUnit meeting time
[08:29:06] <jzaefferer> updating the agenda: https://docs.google.com/document/d/13FbWhiFQ9gWQvB1Tm4QM_OC4me-ha2ujDWH5sdF7ueo/edit
[08:30:10] <jzaefferer> I've spent some time with browserstack-runner, mostly implementing better logging
[08:30:16] <jzaefferer> haven't done anything on QUnit lately
[08:30:23] <JamesMGreene> No updates from me since the last [more unofficial] meeting, unfortunately. Getting presentations ready for some local meetups/conferences. :-\
[08:30:32] <jzaefferer> We've got lots of progress on jquery-release, which QUnit also uses :-)
[08:30:46] <jzaefferer> JamesMGreene: how's the new job treating you?
[08:31:22] <JamesMGreene> Did we still want to pursue discussing creating a common reporter interface with other test frameworks? IIRC, there was some disagreement on that one
[08:31:28] <JamesMGreene> New job has been great. :)
[08:31:40] <jzaefferer> looks like the only actual change in QUnit since 1.14 is in CSS, better padding
[08:31:50] <jzaefferer> which ticket was that?
[08:32:09] <jzaefferer> https://github.com/jquery/qunit/issues/531 right?
[08:32:21] <JamesMGreene> https://github.com/jquery/qunit/issues/531
[08:32:23] <JamesMGreene> yup
[08:33:17] <JamesMGreene> I tend to agree with Krinkle, I think, that having standardized output/report formats is more important than having standardized reporter plugin formats
[08:33:30] <JamesMGreene> It would certainly be nice, though
[08:33:38] <JamesMGreene> (To leverage other existing reporters)
[08:34:06] <jzaefferer> the review you did of mocha and jasmine is interesting, but it doesn't tell us the data each event provides
[08:34:22] <JamesMGreene> True
[08:34:28] <jzaefferer> I think the combination of events and event data what be more worthfile in 'standardizing'
[08:35:38] <JamesMGreene> "events" including the name of said events?
[08:35:46] <jzaefferer> yes
[08:38:13] <jzaefferer> Have a list of event names and data that each event provides, along with "mappings" to the existing events or methods in mocha and jasmine, then see if authors of either have any interest in adopting that
[08:40:13] <JamesMGreene> So perhaps a "standardized" format would become passing an object with event-named properties for handlers...? e.g. https://gist.github.com/JamesMGreene/9786246
[08:43:22] <JamesMGreene> What about event types that are not standard among them?
[08:43:34] <JamesMGreene> e.g. Mocha has "hook" events as well as "error",
[08:43:46] <JamesMGreene> "fail", "pass" (or something close to that) events
[08:44:56] <JamesMGreene> "pass", "fail", "pending", "hook",
[08:45:02] <JamesMGreene> and "hook end"
[08:45:42] <JamesMGreene> Just leave those with a blanket statement of "frameworks can include their own events beyond these standard ones"?
[08:49:06] <jzaefferer> sorry, got pulled away, I think
[08:49:16] <jzaefferer> yes, allowing additional events seems good
[08:50:12] <JamesMGreene> One question would be the "assert" event I put in that list (gist)
[08:50:32] <JamesMGreene> e.g. Mocha (and some other frameworks) don't have any direct knowledge of the assertions
[08:50:42] <mikesherov_> .
[08:50:49] <JamesMGreene> They just keep running until an error is thrown
[08:51:05] <JamesMGreene> mikesherov: syntax error
[08:51:10] <mikesherov_> hello testing meeting. Don't mind me as I wait for the UI meeting
[08:51:30] <JamesMGreene> ;_;
[08:51:49] <JamesMGreene> Anyway
[08:52:07] <JamesMGreene> However, other frameworks like QUnit and Jasmine DO have direct knowledge of their assertions
[08:52:43] <JamesMGreene> Although, actually, Jasmine doesn't currently have an event for assertions... but they could.
[08:53:01] <JamesMGreene> So, perhaps we leave "assert" out of that standard list as well
[08:53:52] <JamesMGreene> If we're trying to come up with a standard interface, the other factor may be a standard way to configure reporters
[08:54:29] <JamesMGreene> e.g. if you want your reporter to dump out more data is being run in a `verbose` mode
[08:54:34] <JamesMGreene> is = if
[09:01:19] <rxaviers> Hi, sorry for the delay
[09:02:03] <jzaefferer> JamesMGreene: looks like we're out of time, UI meeting starting here now; could you post those notes as a comment on #531? Thanks
[09:03:25] <scott_gonzalez> arschmitz gnarf kborchers mikesherov_ mikesherov rxaviers tj_vantoll
[09:03:42] <rxaviers> oh, so it turns out I am not late \o/
[09:03:48] <rxaviers> :)
[09:04:04] <tj_vantoll> hey
[09:04:10] <arschmitz> hi
[09:04:23] <kborchers> hi
[09:04:35] <scott_gonzalez> rxaviers: Want to start with an update on the numbers module?
[09:04:49] <fnagel> Sorry, I'm late :-/
[09:05:42] <mikesherov_> hi
[09:05:48] <rxaviers> sure
[09:07:07] <rxaviers> I've created number module "sub-issues" to handle separately the basic parts vs. the significant digits, etc.
[09:07:25] <rxaviers> By now, I've finished the significant digits implementation, and also the grouping separator implementation.
[09:07:37] <rxaviers> and now, handling negative number patters (quite simple addition)
[09:07:47] <rxaviers> I will review the PR comments
[09:08:16] <rxaviers> To summarize what's missing. But, I guess we're like 90% done
[09:08:40] <rxaviers> Issue #200 still holds the overall progress
[09:08:40] <rxaviers> https://github.com/jquery/globalize/issues/200
[09:09:05] <rxaviers> To be able to select different numberingSystem is still a TODO
[09:09:36] <scott_gonzalez> Sounds like you're making good progress.
[09:09:37] <rxaviers> It means, being able to pick different skeletons for general number usage vs. financial number usage.
[09:10:23] <rxaviers> yeap, the number module is going fine.
[09:10:39] <rxaviers> Iskren has replied me an email with the things he needs for moment-cldr
[09:10:54] <jzaefferer> You did the split of format in formatNumber and formatDate, right?
[09:11:10] <gnarf> hey all
[09:11:19] <rxaviers> Yeap (but, have not pushed yet), this is part of my "review the PR comments" item :)
[09:11:44] <jzaefferer> ah, okay
[09:12:00] <jzaefferer> that explains why I didn't see `formatNumber` in the PR :-)
[09:12:08] <rxaviers> Firstly, Iskren has pushed his work-in-progress moment-cldr into github. I didnt have a chance to deeply review it yet. I hope to be able to point some places in the code where Globalize could be used instead.
[09:12:15] <rxaviers> jzaefferer, :D
[09:12:37] <jzaefferer> rxaviers: could you forward his email?
[09:12:44] <rxaviers> jzaefferer, sure
[09:13:00] <rxaviers> Secondly, his requirements are:
[09:13:02] <rxaviers> From you (or globalize), I expect pluralization algorithm, format with
[09:13:03] <rxaviers> given zone, and a working tag for globalize :)
[09:13:21] <rxaviers> The tag is pretty addressable
[09:13:29] <rxaviers> (since we've discussed it already)
[09:13:59] <rxaviers> Timezone format is something I have pointed him to https://github.com/jquery/globalize/pull/202, and we're discussing some points.
[09:14:03] <jzaefferer> if the number module is almost done, we could start tagging and publishing after it lands?
[09:14:20] <rxaviers> ok
[09:14:30] <jzaefferer> that way others interested in testing the new version don't have to build themselves and Iskren has something to work with
[09:14:37] <rxaviers> The pluralization algo is something we don't have started anything.
[09:14:50] <rxaviers> Although, santhost from wikipedia has a nice implementation about it.
[09:15:07] <rxaviers> I would like to have his implementation pulled into Globalize. But, I don't know how viable it is.
[09:15:40] <rxaviers> jzaefferer, exactly and there are a growing number of issues complaining about it.. Tagging soon would be great
[09:15:56] <jzaefferer> pluralization as in messageformat.js?
[09:17:33] <rxaviers> Yes, and no. We don't need the templating part of the message format. But, the plularization handling only
[09:17:46] <rxaviers> https://github.com/santhoshtr/CLDRPluralRuleParser/
[09:18:31] <jzaefferer> looking at https://github.com/santhoshtr/CLDRPluralRuleParser/blob/master/src/CLDRPluralRuleParser.js - how much code could you remove by using existing infrastructure, e.g. cldr.js?
[09:19:05] <jzaefferer> doen't look like there's much infrastructure in it
[09:19:10] <jzaefferer> also can't tell how complete this is
[09:19:23] <jzaefferer> Can you create an issue where we can discuss this further?
[09:19:25] <rxaviers> everything related to manipulating cldr. But, nothing related to pluralization :)
[09:19:42] <rxaviers> sure
[09:20:25] <rxaviers> Any other questions?
[09:20:45] <jzaefferer> that implementation is GPLV3+ - would he be willing to license it under MIT?
[09:21:13] <rxaviers> If he does, could we pull it over into Globalize?
[09:21:32] <jzaefferer> Possibly
[09:21:47] <scott_gonzalez> Wed need CLA signatures for all existing contributors.
[09:21:49] <rxaviers> nice, let's check
[09:22:21] <jzaefferer> There's just four commiters, one of them being Timo
[09:22:49] <jzaefferer> rxaviers, while you're here, any news on DB and CSS support?
[09:22:53] <scott_gonzalez> So that should be easy.
[09:23:38] <jzaefferer> looks like you were waiting for gseguin? https://github.com/jquery/download.jqueryui.com/issues/178#issuecomment-37435313
[09:23:42] <rxaviers> Good question. I don't know if gseguin had a chance to work on https://github.com/jquery/download.jqueryui.com/issues/178#issuecomment-37435313
[09:24:03] <rxaviers> (correct)
[09:25:33] <jzaefferer> looks to me like you should just copy the code for buildCSSBundles to DB. I see no license issue (both contributors are team members, he already told you to use whatever you want) and once Mobile uses DB, that project will be useless anyway (nothing else using that afaik)
[09:25:42] <arschmitz> rxaviers: as of last mobile meeting no work yet
[09:25:58] <arschmitz> jzaefferer: i was thinking the same
[09:26:09] <jzaefferer> probably put that into its own file/module
[09:26:10] <arschmitz> wondering why we were making our builder a service and not just copying code
[09:27:03] <jzaefferer> I don't think rxaviers ever wanted to use this as a service, right?
[09:27:30] <jzaefferer> just looking for an export of that function, but that seems unnecessary if the surrounding project will not be used anymore
[09:27:33] <rxaviers> yeap, the idea is not to use it as a service. But, use it as a dependency. I need a public API
[09:27:42] <arschmitz> ok
[09:28:06] <arschmitz> yeah i still dont see the need this is only used by mobile why not just copy out what you need and make it directly part of the builder
[09:28:44] <rxaviers> Is gseguin project going to be discontinued?
[09:29:14] <rxaviers> Otherwise, depending on it would have the pro of getting automatic maintenance. No need to duplicate maintenance
[09:29:23] <arschmitz> i think so
[09:29:28] <arschmitz> it was built just for mobile
[09:29:31] <gseguin> rxaviers: I started working on it but I'm nowhere close to done
[09:29:48] <arschmitz> gseguin: does anything else use node-amd-builder?
[09:29:52] <gseguin> arschmitz: It was built for mobile but with the intent to be usable by any project using AMD
[09:30:03] <arschmitz> gseguin: and do you plan to continue to maintain
[09:30:04] <gseguin> arschmitz: not that I know of
[09:30:14] <jzaefferer> well, DB could become that project
[09:30:26] <jzaefferer> though I don't think anyone ever showed any interest in that
[09:30:27] <gseguin> arschmitz: as long as it is used
[09:30:29] <rxaviers> DB is everything but generic :(
[09:30:51] <gseguin> arschmitz: I won't kill the project if that's what you're asking
[09:31:10] <arschmitz> so i guess the question is does the actual code make more sense as part of download builder or as a stand alone
[09:31:21] <rxaviers> gseguin, are you going to keep maintaining it? Let's say someone find an issue on the CSS build. Would you fix it?
[09:31:27] <rxaviers> finds*
[09:31:34] <gseguin> rxaviers: yep
[09:31:52] <arschmitz> rxaviers: i have commit access to it also
[09:32:00] <rxaviers> So, I think it would be definitely good to use your module as a dependency if you are able to export a public API, so DB could use it.
[09:32:31] <rxaviers> If I remeber correctly, the css approach we're using now on UI and Mobile is not a definitive thing. It's gseguin's thing. So, I think it would be positive to rely on it.
[09:32:34] <arschmitz> so im sure one of us could always fix it
[09:32:37] <rxaviers> on it = on gseguin code
[09:32:58] <rxaviers> arschmitz, the point is not who is going to fix it.. The point is to fix in one single plaec
[09:33:28] <arschmitz> rxaviers: no i only meant that the possibility of it being abandoned is not an issue
[09:33:42] <rxaviers> arschmitz, sorry if I misunderstood you :p
[09:33:49] <arschmitz> rxaviers: no problem
[09:34:20] <rxaviers> gseguin, do you have a timeframe where you could give us a feedback about such public API?
[09:34:34] <rxaviers> (are you willing to? :p)
[09:34:47] <rxaviers> I mean, are you interested on doing so?
[09:35:05] <gseguin> rxaviers: I'm hoping I can spend more time on this tomorrow
[09:35:24] <rxaviers> jzaefferer, arschmitz, scott_gonzalez, ok waiting on gseguin first?
[09:35:32] <gseguin> like I said I started moving the CSS builder into its own module
[09:35:40] <rxaviers> ah! cool
[09:35:41] <gseguin> and now I need to fix the thing
[09:35:41] <scott_gonzalez> yeah
[09:35:52] <arschmitz> yeah i dont think its a rush right now is it
[09:35:58] <arschmitz> sooner the better but not a rush
[09:36:45] <arschmitz> one thing i just thought of
[09:36:58] <arschmitz> is if mobile switches the new builder wont support old versions
[09:37:01] <arschmitz> of mobile
[09:37:09] <arschmitz> or ui will it?
[09:37:20] <arschmitz> since all the amd wrappers are gone
[09:37:30] <arschmitz> gone/never there
[09:37:43] <rxaviers> That's why I said DB is not generic! :D.. DB can handle a bunch of nasty things like different build algos
[09:38:04] <arschmitz> right now both support some number of legacy versions
[09:38:35] <jzaefferer> arschmitz: we can keep the current build up for a while?
[09:38:50] <arschmitz> so do we keep old ones around
[09:38:52] <arschmitz> ha ha
[09:38:55] <scott_gonzalez> When did Mobile add AMD?
[09:39:04] <arschmitz> mobile has had it a while
[09:39:12] <arschmitz> but other things wil likely make it not work
[09:39:32] <scott_gonzalez> Like old directory structures.
[09:39:34] <rxaviers> Are the legacy versions built using AMD and CSS comments the way gseguin is building?
[09:39:34] <arschmitz> file structure naming conventions
[09:39:41] <arschmitz> rxaviers: yes
[09:39:47] <arschmitz> all versions have used same builder
[09:39:57] <rxaviers> arschmitz, ok, so no problem. DB will be able to handle the legacy versions with no problem.
[09:40:03] <gseguin> scott_gonzalez: back in 2011
[09:40:10] <jzaefferer> As for timeframe, we want this in DB for UI 1.11. That is long overdue, so anything blocking that should be considered important (e.g. over Globalize)
[09:40:17] <rxaviers> Once we decide to change anything, there will be two mobile builders in DB that will handle the differences.
[09:40:42] <arschmitz> rxaviers: ok so its really more an issue for ui
[09:41:30] <scott_gonzalez> There's no issue for UI, we already have it working.
[09:41:49] <jzaefferer> nasty workarounds in place already :p
[09:41:50] <arschmitz> for old versions?
[09:41:53] <arschmitz> oh ok
[09:42:02] <arschmitz> didnt know that yeah ok so there is not issue here then
[09:42:16] <rxaviers> I know jzaefferer wants this in 1.11. But, there's no need actually, right jzaefferer?
[09:42:38] <jzaefferer> there isn't?
[09:42:49] <rxaviers> DB builds 1.11 with no problem
[09:43:06] <jzaefferer> just uses the oldschool js to css component mapping?
[09:43:21] <jzaefferer> with special code for core and theme?
[09:44:11] <rxaviers> I agree the mapping is not perfect. But, it's the way it has always been. I agree switching to the CSS comment will be a better approach. But, both produces the same result.
[09:44:30] <jzaefferer> If that's the case then yes, no pressure. Though
[09:44:32] <rxaviers> Am I missing something?
[09:44:40] <jzaefferer> Guess I was misunderstanding that
[09:44:47] <jzaefferer> Then its not a blocker for 1.11
[09:45:03] <jzaefferer> Just would be good to replace the builder in Mobile
[09:45:28] <rxaviers> Agreed
[09:45:28] <arschmitz> jzaefferer: +1000
[09:45:53] <rxaviers> Using gseguin code will be straightforward as I could investigate.
[09:45:59] <rxaviers> gseguin's*
[09:46:20] <rxaviers> So, I consider good news the fact gseguin is decoupling his CSS build engine into a separate project.
[09:46:34] <gseguin> sepaarate module
[09:46:36] <rxaviers> That seems to make it even more straightforward and easier for DB to use it
[09:46:45] <rxaviers> ops. yeap, separate module.
[09:47:53] <rxaviers> Any more questions for DB?
[09:48:28] <jzaefferer> nope
[09:48:32] <rxaviers> ;)
[09:49:35] <jzaefferer> arschmitz: any update on button? I guess you're still looking for a review and testing?
[09:49:44] <arschmitz> yes to both
[09:50:09] <jzaefferer> agenda links to a closed PR :/
[09:50:21] <jzaefferer> what should I be looking at?
[09:50:28] <arschmitz> so iv been looking at buttonset / controlgroup
[09:50:35] <arschmitz> just a sec ill update the link
[09:51:21] <arschmitz> oh i guess i didnt open a new pr thought i had ill do it in a sec
[09:51:29] <arschmitz> but its the button-icon-span branch
[09:51:53] <arschmitz> http://view.jqueryui.com/button-icon-span/demos/button/
[09:52:17] <arschmitz> default and checkboxs
[09:52:26] <arschmitz> and icons
[09:52:38] <arschmitz> the radio and toolbar ones are not updated
[09:53:04] <arschmitz> really just looking for functional feedback mostly to make sure it works and reads on screenreaders etc
[09:53:25] <arschmitz> i tried what i could but i only have voiceover
[09:53:47] <jzaefferer> I'll review once you have a new PR open, I noticed one issue already
[09:53:53] <arschmitz> ok cool
[09:54:06] <jzaefferer> Might be by design :/
[09:54:39] <arschmitz> what is it?
[09:55:30] <jzaefferer> space doesn't activate the anchor buttons
[09:55:44] <arschmitz> ah thats one i was unsure about
[09:56:00] <arschmitz> because space activates buttons but not anchors
[09:56:10] <arschmitz> and if your using it as a normal anchor still
[09:56:14] <arschmitz> should space active ait?
[09:56:15] <scott_gonzalez> Who's the asshole using anchors for buttons? :-P
[09:56:59] <scott_gonzalez> I know we're super lax about supported markup in buttons.
[09:57:21] <arschmitz> in mobile we style most anchors as buttons
[09:57:21] <scott_gonzalez> I think it just lends itself to abuse though.
[09:57:42] <arschmitz> because thats the norm for mobile devices to make them bigger and easier to click
[09:57:58] <arschmitz> but they are still really anchors not buttons so im unsure if space should active them or not
[09:58:39] <scott_gonzalez> Well, you shouldn't call .button() on something that is really an anchor, right?
[09:58:50] <arschmitz> i wouldnt
[09:58:55] <arschmitz> but i wouldnt on ANYTHING
[09:59:07] <arschmitz> because all .button() really does is dynamic icons
[09:59:16] <arschmitz> and auto adding of classes
[09:59:22] <arschmitz> it generates no markup
[09:59:27] <scott_gonzalez> That's not all it does for non-button elements.
[09:59:49] <scott_gonzalez> Antyhing that isn't input or button would need an ARIA role.
[09:59:55] <scott_gonzalez> And that role would be wrong if it's not acting as a button.
[10:00:07] <arschmitz> scott_gonzalez: true
[10:00:11] <arschmitz> was not thinking about that
[10:00:41] <arschmitz> so then in the widget space should active then your saying?
[10:00:47] <scott_gonzalez> Maybe we should actually be strict about what elements we support.
[10:00:57] <arschmitz> also a way to go
[10:01:28] <arschmitz> what do you suggest restricting it to?
[10:01:42] <scott_gonzalez> We've already said everything other than anchor, input, button is unsupported.
[10:01:55] <arschmitz> right
[10:01:57] <scott_gonzalez> So this would just be a way to get people to stop using .button() on anchors.
[10:02:19] <arschmitz> restrict to just input and button then?
[10:02:21] <scott_gonzalez> We should have a larger discussion abou that.
[10:02:22] <arschmitz> and drop anchor
[10:02:40] <scott_gonzalez> But when we originally talked about this, we did say that anchor would be supported, and SPACE would be handled.
[10:02:50] <arschmitz> ok
[10:03:19] <arschmitz> oh wait i have that there
[10:03:20] <arschmitz> lol
[10:03:24] <arschmitz> so if its not working its a bug
[10:03:31] <arschmitz> and i swear there are tests for it too
[10:05:09] <arschmitz> jzaefferer: anyway ill check it out because space should be working
[10:07:08] <arschmitz> jzaefferer: its the demo https://github.com/jquery/jquery-ui/blob/button-icon-span/demos/button/default.html#L17
[10:07:57] <arschmitz> ok but i do have a button related question for everyone
[10:08:08] <jzaefferer> well, preventDefault() shouldn't affect the button behaviour?
[10:08:48] <arschmitz> oh right i was clicking it and it didnt work either but this should not effect the spacebar
[10:09:24] <arschmitz> anyway ill fix it
[10:10:25] <arschmitz> my question is though can anyone think of a good reason buttonset / controlgroup needs to be a widget
[10:10:33] <arschmitz> and cant just be css you add your self
[10:10:35] <arschmitz> ?
[10:11:37] <arschmitz> its just visual grouping right?
[10:14:23] <jzaefferer> There's some RTL stuff in the existing buttonset code
[10:14:23] <scott_gonzalez> It's grouped method calling.
[10:14:44] <jzaefferer> and yeah, it also calls button()
[10:15:04] <scott_gonzalez> Well, the new widget will have even more logic than just calling .button().
[10:15:08] <scott_gonzalez> Making it even more useful.
[10:15:18] <arschmitz> true it does enhance its children
[10:15:23] <scott_gonzalez> It will need to pick the right widget based on the elements.
[10:15:34] <arschmitz> yeah so i guess it does make sense
[10:15:45] <arschmitz> much more like the mobile one it will gain some logic
[10:16:16] <arschmitz> this was one of the inital things we had talked about was wether or not to make it a widget so before i started i thought we should decide
[10:17:21] <tj_vantoll> imo Ideally it would be a widget that you could also create with CSS if you wanted.
[10:17:37] <arschmitz> tj_vantoll: yes much like button
[10:17:51] <tj_vantoll> yep
[10:18:21] <tj_vantoll> The grouped method calling can be convenient, so I like it still being a widget.
[10:18:53] <arschmitz> yeah its the same idea as button there is no reason you need it but its a connivence
[10:20:27] <scott_gonzalez> Anything else to discuss?
[10:20:58] <arschmitz> not on button ill start on controlgroup and post an api on the wiki to discuss
[10:24:15] <jzaefferer> arschmitz: thanks, I'll review your branch as-is, looking at default, checkboxes and icons
[10:25:13] <arschmitz> jzaefferer: thank you
