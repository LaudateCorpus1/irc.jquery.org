[12:01:59] <timmywil> markelog, m_gol, DaveMethvin, gibson042 https://docs.google.com/document/d/1uhcW9_TlSwD8JnO1_HNnSYJAriTK9WYZ8uQNDvtAAhA/edit
[12:02:09] <DaveMethvin> happy new doc!
[12:02:17] <timmywil> 2016!
[12:03:18] <gibson042> ho ho ho
[12:03:22] <gibson042> ...or whatever
[12:03:33] <markelog> hey-hey
[12:04:13] <timmywil> happy new year
[12:04:26] <timmywil> Looks like gibson042 released Sizzle for us!
[12:04:55] <timmywil> gibson042: this is the release to use for 3.0, correct?
[12:04:57] <markelog> cool!
[12:05:03] <gibson042> correct
[12:05:13] <timmywil> cool
[12:05:20] <gibson042> and now that it's finally done, there's nothing left for me except show/hide
[12:05:53] <timmywil> markelog: how's 1.12?
[12:06:05] <timmywil> I know I need to get you the merge, but anything other than that?
[12:06:16] <markelog> nuh, seems good
[12:06:23] <timmywil> cool
[12:06:29] <markelog> would be good to verify 1.12 changes though
[12:06:42] <timmywil> I've got a docs branch mostly ready for when 1.12/2.2 is released.
[12:06:44] <markelog> just in case
[12:06:48] <timmywil> will do
[12:07:08] <markelog> it is not to much for you alone?
[12:07:26] <timmywil> nah, I'll just do what I did with 2.2. Easier the 2nd time.
[12:07:37] <markelog> ok-ok
[12:08:17] <timmywil> https://github.com/jquery/jquery/issues/2795 px whitelist
[12:08:31] <markelog> not pressing
[12:08:36] <timmywil> I think what we need to make this decision is which is bigger
[12:08:40] <markelog> i'd say we can wait until 4.0
[12:09:03] <DaveMethvin> when is 4.0?
[12:09:09] <markelog> tomorrow?
[12:09:10] <markelog> )
[12:09:12] <DaveMethvin> lol
[12:09:15] <DaveMethvin> roughly...
[12:09:23] <timmywil> idk 3rd quarter?
[12:09:34] <timmywil> don't want to release major versions too fast
[12:09:37] <markelog> i'd say we would need to see how would 3.0/2.2/1.12 would be accepted
[12:09:44] <DaveMethvin> i think we went WAYY too long last time, Q3 seems reasonable but no later than a year from now
[12:09:56] <markelog> seems reasonable
[12:09:59] <timmywil> 2 per year seems slow enough, some say 1 per year
[12:10:09] <markelog> we can figure out what we want to change in 4.0
[12:10:24] <timmywil> but I'm thinking q3
[12:10:42] <DaveMethvin> i really like the idea of turning the list around tho
[12:10:45] <markelog> would be good to release on some summit or conference
[12:10:56] <DaveMethvin> new exceptions will continue to be found no doubt
[12:11:03] <m_gol> present, sorry for being late
[12:11:05] <markelog> yeah
[12:11:25] <DaveMethvin> so this would be our first for the 4.0 milestone then?
[12:11:37] <markelog> whitelist is easier to fix on the user side, which so attractive in this proposal
[12:12:16] <timmywil> DaveMethvin: yup!
[12:12:19] <markelog> sounds like it, but we need to investigate
[12:12:40] <timmywil> https://github.com/jquery/jquery/issues/2796 closest context
[12:12:41] <markelog> i'd say it is not 100% clear right now
[12:12:47] <m_gol> I'd just like to reiterate my idea
[12:12:51] <m_gol> that this is a mis-feature
[12:12:59] <m_gol> and that we should only append px to high-profile cases
[12:13:00] <timmywil> I read through this, but who put it up for review?
[12:13:05] <DaveMethvin> me
[12:13:06] <m_gol> which is mostly positioning & sizes
[12:13:20] <DaveMethvin> so right now context is only used for positional selectors
[12:13:25] <m_gol> if we wanted to target everything then this list might get longer, who knows
[12:13:27] <DaveMethvin> i think it should stay that way
[12:13:30] <timmywil> m_gol: agreed
[12:13:36] <markelog> m_gol: might be seen as inconsistency
[12:13:41] <timmywil> m_gol: regardless, next step is to try it
[12:13:45] <m_gol> yup
[12:13:50] <markelog> exactly
[12:14:01] <DaveMethvin> Sizzle.matchesSelector doesn't accept a context
[12:14:16] <DaveMethvin> which is why we call Sizzle directly for delegated events
[12:14:29] <timmywil> DaveMethvin: agreed. We did do contextual matching for event delegation, but this has been this way for a long time
[12:14:35] <gibson042> I think this is mostly misdocumentation
[12:14:42] <DaveMethvin> yep i would say this is docs
[12:15:00] <DaveMethvin> ok then i can note that and open a docs ticket
[12:15:06] <timmywil> cool
[12:15:24] <gibson042> but the existing `this.context` for positional selectors should _probably_ be `this`
[12:15:37] <gibson042> I'll bet it isn't even covered by unit tests
[12:15:51] <timmywil> I wonder, yea
[12:16:23] <markelog> i remember we removed something from closest() not to while ago
[12:16:35] <markelog> maybe we just forget to update the docs
[12:16:52] <timmywil> I think it's always used matchesSelector
[12:17:07] <timmywil> which means it didn't use context matching
[12:17:36] <DaveMethvin> it's probably not frequently encountered which is why this is the first bug report in 10 years :)
[12:17:39] <timmywil> except for the ternary for pos
[12:18:06] <markelog> seems strange that such behaviour lived for such long time and not many people noticed
[12:18:19] <timmywil> I've nevert passed a context to closest
[12:18:23] <timmywil> never*
[12:18:37] <timmywil> https://github.com/jquery/jquery/issues/2781 isNumeric(hex)
[12:18:57] <timmywil> I defer to gibson042 on this one. Seems like we agree we just need more examples in the docs?
[12:19:16] <DaveMethvin> that would be my solution
[12:19:28] <DaveMethvin> just add a negative hex example to the unit tests and docs
[12:19:48] <m_gol> this seems like on of those methods that we shouldn't expose at all...
[12:20:04] <timmywil> well, it's been exposed forever and it's not very big
[12:20:28] <m_gol> but yeah, if it stays, I agree gibson042's doc update is enough here
[12:20:43] <timmywil> ok
[12:20:44] <DaveMethvin> get back in that pandora's box!
[12:21:18] <timmywil> Should https://github.com/jquery/jquery/pull/2793 animation-iteration-count go in 3.0?
[12:21:23] <m_gol> docs + more unit tests
[12:21:33] <m_gol> timmywil: even in 1.12/2.2 IMO
[12:21:35] <m_gol> this is a bug fix
[12:21:38] <markelog> timmywil: i would add it even in 2.2/1.12
[12:21:42] <timmywil> lol
[12:21:48] <markelog> m_gol: high five!
[12:21:51] <timmywil> fine then
[12:21:52] <markelog> )
[12:21:52] <m_gol> every property that accepts numeric values and is not on this list is our bug, unfortunately
[12:21:56] <m_gol> markelog: :)
[12:22:22] <m_gol> I can land this
[12:22:26] <timmywil> cool
[12:22:44] <markelog> can you add it to the 2.2/1.12 too, while you at it?
[12:23:34] <timmywil> anyone want to land that spelling pr?
[12:23:43] <m_gol> markelog: sure
[12:23:45] <markelog> just for the sake of it, we can check out other new CSS properties
[12:24:10] <markelog> maybe there more then that "animation-iteration-count"
[12:24:33] <markelog> timmywil: can do
[12:24:46] <timmywil> markelog: thanks
[12:25:06] <timmywil> So, show/hide in progress and I'll finish up my work for 1.12. Anything else?
[12:25:15] <markelog> well, yeah )
[12:25:25] <timmywil> shoot
[12:25:34] <markelog> i think we should revert show/hide changes before we introduce the new code
[12:25:48] <timmywil> markelog: we're leaving that up to gibson042
[12:25:55] <markelog> it might be dangerous otherwise, since we might not make to the date
[12:26:03] <markelog> which is less then 10 days
[12:26:24] <timmywil> If we don't make the date, we'll delay the release
[12:26:28] <markelog> also, we have big issue that it seems we forgetting, or i'm forgetting that we already did this )
[12:26:30] <timmywil> but still announce
[12:26:39] <gibson042> I can't take time out from forward progress to make a conflicting revert
[12:27:19] <markelog> cool )
[12:27:24] <markelog> so the 12th right?
[12:27:30] <timmywil> that's the plan
[12:27:37] <timmywil> crunch time
[12:27:44] <markelog> so lodash and prototype releasing with us?
[12:27:54] <timmywil> lodash yes. I'm not sure about prototype.
[12:28:10] <timmywil> I haven't heard more about the announcement. I'll follow up.
[12:28:10] <m_gol> I wanted to talk about brunches as well
[12:28:13] <markelog> heard some rumors about it
[12:28:13] <m_gol> * branches
[12:28:26] <timmywil> branches?
[12:28:35] <m_gol> brunches are nice, too, though
[12:28:38] <m_gol> yeah, two things
[12:28:49] <m_gol> 1. do we want to keep the 1.11-stable & 2.1-stable branches?
[12:28:59] <m_gol> I have local copies but they're not on a remote anymore
[12:29:13] <timmywil> m_gol: not necessary. any bug fixes will go in 1.12/2.2
[12:29:15] <m_gol> which means 2.1.x/1.11.x tags are lying completely outside of any branch
[12:29:19] <markelog> we don't have those branches
[12:29:26] <timmywil> we have the tags
[12:29:31] <markelog> you mean 1.12-stable and 2.2-stable?
[12:29:38] <m_gol> no, 1.11-stable & 2.1-stable
[12:29:49] <m_gol> I renamed them to 1.12-stable & 2.2-stable because I thought we'd be cherry-picking
[12:30:04] <markelog> yeah, so we don't have "1.11-stable & 2.1-stable"
[12:30:09] <m_gol> but they were reset to different commits so those tags got far away from any branch
[12:30:14] <markelog> since you renamed those )
[12:30:19] <timmywil> m_gol: yea, I think it's okay to drop them.
[12:30:20] <m_gol> so I was just asking if we want to have them on origin or not
[12:30:22] <m_gol> k
[12:30:23] <m_gol> 2.
[12:30:28] <m_gol> I'd drop the `compat` branch
[12:30:34] <m_gol> people are asking about it
[12:30:47] <m_gol> I initially wanted to keep it as it had some commits that I didn't want to just lose
[12:30:48] <timmywil> yea, it's going away when I'm done verifying 1.12-stable
[12:30:56] <m_gol> but since compat is lying on 1.12-stable now it seems fine to go
[12:30:57] <m_gol> cool
[12:31:08] <markelog> wait, i'm confused
[12:31:13] <m_gol> hm?
[12:31:15] <markelog> what "1.11-stable & 2.1-stable"
[12:31:26] <markelog> we have 5 branches
[12:31:31] <markelog> killphp
[12:31:34] <markelog> compat
[12:31:35] <m_gol> we had 1.11-stable & 2.1-stable
[12:31:41] <m_gol> before they got renamed
[12:31:42] <markelog> yeah, "had"
[12:31:44] <m_gol> I have local copies
[12:31:52] <m_gol> doesn't matter if we're fine with not having them
[12:31:52] <timmywil> m_gol was asking if we need them
[12:31:55] <m_gol> yup
[12:32:09] <timmywil> but we don't, because we're not adding patches to 1.11/2.1
[12:32:12] <markelog> oh, don't have local copies of it already )
[12:32:29] <m_gol> so compat is going away after timmywil verifies 1.12-stable
[12:32:42] <markelog> i'd say we need "1.12-stable & 2.2-stable" after release cause there might be patches for them
[12:32:50] <m_gol> and killphp once jaubourg emerges and finishes the Node-based server? ;)
[12:32:51] <timmywil> markelog: sure
[12:32:56] <m_gol> markelog: no doubt!
[12:33:04] <markelog> cool
[12:33:14] <timmywil> ok, thanks everybody. See you in -dev!
[12:33:16] <markelog> i would remove the compat after the release
[12:33:24] <m_gol> I had one other question
[12:33:32] <m_gol> if you're still there ;)
[12:33:34] <timmywil> m_gol: sry, what's your question
[12:33:51] <m_gol> can we deprecate $.parseJSON & start using JSON.parse on master?
[12:33:55] <m_gol> it's now a pure alias
[12:34:05] <m_gol> and we kept it mostly because of Android 2.3 & IE<8
[12:34:22] <m_gol> with compat going away it's no longer a concern
[12:34:29] <markelog> i'm fine of it just being an alias until 4.0
[12:34:37] <timmywil> hmm, I'd open an issue so we can discuss
[12:34:42] <m_gol> k
[12:34:43] <markelog> also
[12:34:55] <m_gol> since we're not removing now, we can deprecate e.g. in 3.1
[12:34:57] <markelog> gibson042 said that he doesn't have a time for the revert
[12:35:15] <markelog> i think we still should do a revert
[12:35:23] <markelog> since i did twice i can do it
[12:35:35] <markelog> thrice
[12:35:41] <timmywil> I agree with gibson042 there. It's not necessary about time. It's more efficient to update the existing code.
[12:35:48] <timmywil> necessarily
[12:35:51] <markelog> how so?
[12:36:09] <markelog> just don't want to postpone the release because of it
[12:36:43] <markelog> since we wanting to introduce these changes for two months (?) already
[12:36:44] <timmywil> The show/hide changes are important. I don't want to release 3.0 without addressing the performance issue at all. The proposed changes address it for some common cases.
[12:36:52] <markelog> and now we can have less then 10 days
[12:37:01] <m_gol> (created https://github.com/jquery/jquery/issues/2800 for the $.parseJSON issue)
[12:37:06] <gibson042> if you want a revert in the hopper as emergency break-the-glass, that's fine
[12:37:12] <gibson042> but I don't want it to land
[12:37:27] <markelog> timmywil: mm, i'm not sure if new changes would address the perf ones
[12:37:40] <DaveMethvin> we'd have to see them in place
[12:37:41] <markelog> gibson042: ?
[12:37:42] <timmywil> markelog: it does for certain cases
[12:37:51] <timmywil> which is better than no cases
[12:38:02] <markelog> we could became more consistent, but not faster
[12:38:15] <markelog> or am i misunderstood something?
[12:38:22] <gibson042> right... they're fast on master now, but these changes will put them back to suck
[12:38:30] <markelog> mine pr with defaultDisplay could improve the perf though
[12:38:43] <markelog> for some cases )
[12:39:05] <DaveMethvin> it's been a while since i looked at it but i thought the middle ground that was discussed in NYC eliminated some of the forced layouts from the 2.x approach without breaking so many current scenarios
[12:39:08] <timmywil> it will put them back to suck for most. But it's my understanding that there will be cases where we don't need to read display, which was the perf issue.
[12:39:08] <markelog> gibson042: maybe then, you could integrate it to your changes, if that is okay?
[12:39:51] <markelog> not sure how we can achieve that
[12:40:03] <markelog> i only notice that defaultDisplay improvement
[12:40:03] <timmywil> Whatever is faster for gibson042. If getting the proposed changes implemented is faster without a revert, I don't want a revert.
[12:40:31] <markelog> i like the gibson042 plan
[12:40:34] <gibson042> I'll put it this way: if there is a revert, I will rebase on top of a revert of _that_
[12:40:37] <markelog> that i will revert in the pr
[12:40:43] <gibson042> +1
[12:40:46] <markelog> but not land it
[12:40:57] <markelog> if we not gonna make it until the 12
[12:41:03] <markelog> then we should consider land it
[12:41:11] <markelog> *landing it
[12:41:11] <timmywil> markelog: ok, that's fine
[12:41:23] <timmywil> but I'm opposed to releasing without the changes
[12:41:44] <gibson042> unless I end up in the hospital, we won't have to
[12:41:51] <markelog> you mean releasing with current changes?
[12:42:06] <timmywil> I mean I'm opposed to releasing without gibson042's changes
[12:42:25] <markelog> oh, okay, so all hope on gibson042 not getting to the hospital )
[12:42:25] <DaveMethvin> agreed
[12:42:31] <DaveMethvin> on both points!
[12:42:38] <timmywil> ok
[12:42:46] <markelog> cool
[12:42:58] <timmywil> that should wrap it up
[12:43:00] * timmywil looks around
[12:43:06] <markelog> gibson042: please cc on you pr
[12:43:15] <markelog> *cc me on your pr
[12:43:28] <gibson042> will do
[12:43:31] <markelog> thanks
[12:43:33] <timmywil> thanks everyone
