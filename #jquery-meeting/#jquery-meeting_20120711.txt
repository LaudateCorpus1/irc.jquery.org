[09:00:11] <scott_gonzalez> Hey everyone.
[09:01:55] <scott_gonzalez> Hmm... is anyone even here today?
[09:02:26] <kswedberg> I'm here
[09:02:46] <scott_gonzalez> Ok, kswedberg gets to do all the things :-)
[09:02:56] <kswedberg> yay!
[09:03:05] <kswedberg> I mean, uh oh!
[09:04:01] <scott_gonzalez> gnarf: ping
[09:04:12] <gnarf> hey!
[09:04:36] <scott_gonzalez> jzaefferer is "on his way", kborchers will be a little late (in another meeting), rworth is on vacation
[09:04:45] <scott_gonzalez> gnarf: What's the status of color?
[09:04:58] <scott_gonzalez> Is the there just that one issue with transparent animations?
[09:05:47] <gnarf> yup
[09:05:48] <scott_gonzalez> Oh, you fixed that already?
[09:05:50] <kborchers> ok, i have arrived. the world can continue spinning.
[09:05:56] <gnarf> there are a few other issues
[09:06:08] <gnarf> i think i have solutions to the other two
[09:06:16] <gnarf> will do my best to have a final next week
[09:06:19] <scott_gonzalez> ok
[09:06:27] <scott_gonzalez> Once that lands, we'll pull it in (again).
[09:06:38] <scott_gonzalez> We should also get a better description in the package.json
[09:07:03] <scott_gonzalez> And possibly in the header comment as well (or just remove the comment in the header).
[09:07:34] <scott_gonzalez> Oh, the comment is just jQuery Color Animations, that's fine.
[09:08:00] <scott_gonzalez> Oh, we'll need a manifest file for the plugins site before you tag 2.0.0.
[09:08:29] <scott_gonzalez> Just created an issue for that: https://github.com/jquery/jquery-color/issues/38
[09:08:30] <socialhapy> ★ Issue #38 on jquery-color (scottgonzalez;  ago): Add manifest file
[09:08:50] <gnarf> https://github.com/jquery/jquery-color/issues/39
[09:08:50] <socialhapy> ★ Issue #39 on jquery-color (gnarf37; 3.741s ago): Get better descriptions
[09:08:51] <gnarf> heh
[09:08:55] <scott_gonzalez> :-)
[09:08:58] <gnarf> i was just writing it into that issue
[09:09:07] <gnarf> but it can be its own
[09:09:18] <jzaefferer> heyyyy
[09:09:29] <scott_gonzalez> I can write a grunt task for the manifest file, just have most of it pull from package.json.
[09:09:41] <scott_gonzalez> I'll test it against the plugins site to ensure it's correct.
[09:09:49] <scott_gonzalez> Yay, jzaefferer is here.
[09:10:08] <scott_gonzalez> jzaefferer: Have you seen the manifest branch?
[09:10:37] <jzaefferer> kind of
[09:10:44] <jzaefferer> one of the things I need to catch up on
[09:11:12] <scott_gonzalez> Ok. It's pretty simple. We've got a few JSON files that contain metadata about the plugins.
[09:11:25] <scott_gonzalez> Then there's a grunt task that merges that data with package.json to generate all the manfiest files.
[09:11:39] <scott_gonzalez> kswedberg just cleaned up all the descriptions.
[09:11:51] <scott_gonzalez> So I'd like to review them for completeness now and then land this in master.
[09:11:57] <jzaefferer> okay
[09:12:34] <scott_gonzalez> Do you know the status of api.jqueryui.com?
[09:12:43] <scott_gonzalez> I was hoping Richard would be here to discuss this :-/
[09:13:39] <jzaefferer> not really
[09:13:58] <jzaefferer> biggest issue from my point of view: the index page
[09:14:04] <jzaefferer> kswedberg may know something about that?
[09:14:15] <scott_gonzalez> Oh, well there's that. I was wondering more about the status of the content.
[09:14:23] <jzaefferer> generally it sucks to have such a waste of space just to get title and excert
[09:14:26] <jzaefferer> *excerpt
[09:14:52] <jzaefferer> do we still want to launch with 1.8 content first?
[09:14:55] <gnarf> kborchers: may know something about this?
[09:14:57] <jzaefferer> or just launch it along with 1.9?
[09:15:16] <jzaefferer> generally I think we're doing pretty well on the content side
[09:15:18] <jzaefferer> https://github.com/jquery/api.jqueryui.com/issues?state=open
[09:15:24] <scott_gonzalez> Oh, well, that's not the design we're supposed to launch with.
[09:15:26] <kswedberg> haven't seen the index in a while. will take a look.
[09:15:49] <jzaefferer> Richard shot down the ui.core PR
[09:15:53] <kborchers> jzaefferer: i talked with doug a little about the wasted space during the hack night. he pointed out in the mockups that we are still missing info that fills some of that space
[09:15:56] <jzaefferer> could've given the guy a chance to just update it
[09:16:03] <kswedberg> oddly, though, I'm getting Forbidden error when trying to look at this stuff locally. that's what I get for going on vacation and letting everything slip, I guess.
[09:16:17] <jzaefferer> http://api.qunitjs.com/
[09:16:21] <jzaefferer> that's live
[09:16:26] <jzaefferer> UI has the same thing
[09:16:26] <kborchers> i think it's all in the xml, we're just not displaying it properly yet
[09:16:34] <jzaefferer> its pretty horrible to get an overview
[09:16:40] <jzaefferer> much worse for Core
[09:16:59] <scott_gonzalez> Well, I think it's silly to have everything listed on the index page.
[09:17:09] <scott_gonzalez> We should have an overview page or something.
[09:17:10] <kborchers> scott_gonzalez +1
[09:17:12] <jzaefferer> where were the mockups in dropbox...?
[09:17:31] <scott_gonzalez> Foundation > Redesigns > api
[09:17:56] <jzaefferer> thanks
[09:18:26] <scott_gonzalez> kswedberg: Do you need help fixing your local setup?
[09:18:47] <kswedberg> scott_gonzalez: yes. please.
[09:18:58] <jzaefferer> well, the index mockups aren't very convincing either
[09:19:04] <kswedberg> I gotta leave in 2 minutes, though. so after I get back.
[09:19:06] <jzaefferer> still just a listing of name and excerpt
[09:19:25] <scott_gonzalez> kswedberg: Ok, I've got the team leads meeting at 1:00p, but I can help any time after that.
[09:19:35] <kswedberg> scott_gonzalez: awesome. thanks!
[09:20:48] <scott_gonzalez> I'm not sure that it makes sense to list the categories that a method exists in.
[09:21:03] <gnarf> Honestly
[09:21:23] <gnarf> We should probably have the big overviews, like a custom index for some of them
[09:21:58] <gnarf> current design is just a method listing tho on api.
[09:22:15] <scott_gonzalez> Yeah, we should do overviews and adjust the design for category pages.
[09:22:33] <gnarf> but for jqueryui we will probably want "Widgets" "Helpers" "Interactions" etc
[09:23:08] <scott_gonzalez> Sure, but those can be one-off pages.
[09:23:17] <scott_gonzalez> The existing api.jquery.com does that for some stuff already.
[09:23:36] <jzaefferer> kswedberg: could you look into a custom index for UI (and same for QUnit) that just lists all categories with a very compact entry for each thing inside?
[09:23:46] <jzaefferer> could be in two columns
[09:24:19] <scott_gonzalez> I'm not sure we want the index pages to be a list of categories.
[09:24:30] <scott_gonzalez> The categories are already listed in the sidebar.
[09:24:48] <jzaefferer> what do you suggest?
[09:25:13] <gnarf> How about a carousel... ;)
[09:25:17] <kborchers> lol
[09:25:35] <gnarf> every home page needs one of those right?
[09:26:06] <jzaefferer> we're still talking about the api index, not the main demo page
[09:26:15] <gnarf> Perhaps a page describing the different categories, but not "indexing" them
[09:26:18] <scott_gonzalez> A page that describes which version the docs are about, how to get to docs for other versions, links to introductory tutorials, etc.
[09:26:24] <gnarf> Like "Widgets are ......"
[09:26:31] <gnarf> scott_gonzalez: tutorials++
[09:26:32] <scott_gonzalez> Yes, example.
[09:26:43] <scott_gonzalez> s/example/exactly/
[09:26:59] <jzaefferer> a common typo
[09:27:04] <scott_gonzalez> It should actually be an overview, not just a dump of categories.
[09:27:08] <gnarf> current version # also a good idea
[09:27:25] <gnarf> :)
[09:27:28] <scott_gonzalez> And we should probably heavily pimp out the learn site on the index pages for all API sites.
[09:27:35] <jzaefferer> like a static/generated page, similar to content pages from other repos?
[09:27:42] <scott_gonzalez> jzaefferer: yup
[09:28:10] <gnarf> scott_gonzalez: we should have a "Wait, whats an API?"
[09:28:11] <gnarf> :)
[09:28:15] <jzaefferer> sounds like kborchers and kswedberg could do that? :-)
[09:28:23] <gnarf> authors!
[09:28:38] <jzaefferer> the k-people
[09:28:43] <gnarf> issue?
[09:29:12] <scott_gonzalez> 3 issues?
[09:29:15] <scott_gonzalez> One per API repo?
[09:29:33] <jzaefferer> we have four api repos
[09:29:37] <jzaefferer> core, ui, mobile, qunit
[09:29:43] <jzaefferer> ALL THE REPOS
[09:29:43] <scott_gonzalez> Oh, right
[09:30:52] <gnarf> yeah, it really requires some writing specific to each one
[09:31:59] <scott_gonzalez> Ok, I'll create issues in the 4 repos after the meeting. I've got it in the agenda notes.
[09:32:21] <jzaefferer> okay
[09:32:51] <scott_gonzalez> Ok, so this brings us back to the code items on the agenda.
[09:33:06] <scott_gonzalez> Menu shows an icon to indicate that there are submenus.
[09:33:07] <jzaefferer> yay, code
[09:33:23] <scott_gonzalez> I told kborchers there needed to be an option to make it configurable.
[09:33:31] <scott_gonzalez> He added an icon option, but everything else has an icons option.
[09:33:39] <scott_gonzalez> Should we switch to icons for consistency?
[09:33:47] <jzaefferer> concur
[09:33:57] <scott_gonzalez> So icons.submenu?
[09:34:07] <jzaefferer> yeah
[09:34:27] <gnarf> makes sense
[09:34:27] <jzaefferer> not likely to get customized, so its fine to have a single prop be a bit convulted
[09:34:35] <jzaefferer> and much easier to add more later, if ever needed
[09:34:42] <scott_gonzalez> Spinner also has icons on the up and down buttons, so it needs to expose an icons option.
[09:35:02] <jzaefferer> icons.up/down?
[09:35:06] <jzaefferer> okay
[09:35:08] <scott_gonzalez> That's what I'm thinking.
[09:35:20] <scott_gonzalez> Since we have stepUp and stepDown.
[09:35:33] <jzaefferer> easy enough, just need to remember to also update API docs accordingly
[09:35:41] <jzaefferer> now that we can
[09:35:43] <scott_gonzalez> right
[09:36:12] <scott_gonzalez> So, reviewing menu, I noticed that the API is massive.
[09:36:19] <scott_gonzalez> http://wiki.jqueryui.com/w/page/12137997/Menu
[09:36:23] <scott_gonzalez> There are like 500 methods.
[09:36:44] <kborchers> more like 400 :P stop exaggerating
[09:36:54] <scott_gonzalez> Do we need anything besides refresh and destroy?
[09:37:12] <scott_gonzalez> Does anything else make sense to be used via .menu( method )?
[09:38:04] <jzaefferer> did you see my comment on the spreadsheet?
[09:38:07] <kborchers> only thing i could think of is if someone wanted to programmatically navigate the menu and actually give visual feedback for some reason then some of those others would need to be exposed
[09:38:15] <jzaefferer> apparently not
[09:38:23] <jzaefferer> "Make everything private that neither autocomplete nor menubar use. They use a lot."
[09:38:35] <scott_gonzalez> jzaefferer: But they don't use them via .menu( method ).
[09:38:45] <jzaefferer> so?
[09:38:57] <jzaefferer> are you saying they should call private methods directly?
[09:39:25] <scott_gonzalez> Well, we need a way to document the difference between APi stable and "jQuery" methods.
[09:39:49] <jzaefferer> the what?
[09:39:59] <scott_gonzalez> Because someone looking at menu should not see a dozen methods unless they want to build complex interactions.
[09:40:20] <jzaefferer> well, menu on its own is only ever useful for an inline menu
[09:40:33] <jzaefferer> it shines whenever you build something on top or around it
[09:40:42] <scott_gonzalez> jzaefferer: Which maybe a handful of people will do?
[09:41:55] <scott_gonzalez> Basically 90% of people will use menu and never call a single method.
[09:41:56] <jzaefferer> so refresh is the one method most people will end up using, others not so much
[09:42:13] <scott_gonzalez> 10% of people will create completely customized interactions on top of menu.
[09:42:20] <scott_gonzalez> They're very different audiences.
[09:42:25] <jzaefferer> right
[09:42:38] <scott_gonzalez> I don't think you'd ever use any of the other methods unless you were handling 100% of the focus and interaction.
[09:42:40] <jzaefferer> so if we remove public methods, where can those 10% find out about them?
[09:42:56] <scott_gonzalez> That's something we need to find a solution for.
[09:43:05] <scott_gonzalez> We probably need a different way of documenting them in the API.
[09:43:17] <gnarf> well like - there are hook points / internal methods that are relatively stable right
[09:43:26] <scott_gonzalez> And we'll need to add existing private methods to them, like autocomplete's _renderMenu and _renderItem.
[09:43:50] <scott_gonzalez> gnarf: Right. And we want a way to document them and say "these are stable, they will not change or break without notice."
[09:44:08] <scott_gonzalez> But without shoving them in the fact of the 90% who will never care.
[09:44:13] <scott_gonzalez> s/fact/face/
[09:44:18] <gnarf> scott_gonzalez: we should unit test them first ;)
[09:44:26] <scott_gonzalez> Otherwise the docs become intimidating.
[09:44:26] <gnarf> but yeah
[09:44:27] <gnarf> agree
[09:44:33] <jzaefferer> well, we can probably shove public methods into one element, private methods into another, and share the same method template for both
[09:44:40] <gnarf> we could have an "extending ______" section
[09:44:49] <jzaefferer> Label on as Methods, one as Internals
[09:44:51] <jzaefferer> or Extending
[09:44:56] <jzaefferer> *one
[09:45:31] <scott_gonzalez> I think we should probably keep them without the underscore and just document them differently, as jzaefferer is proposing.
[09:45:33] <scott_gonzalez> Does that make sense?
[09:45:44] <jzaefferer> yeah
[09:45:50] <scott_gonzalez> It would mean we'd need to move some existing underscore methods to non-underscore.
[09:45:59] <scott_gonzalez> But we can deal with that later.
[09:46:01] <gnarf> so
[09:46:02] <b-ot> gnarf: it possible to, you know, fix it?*
[09:46:07] <gnarf> nice
[09:46:28] <gnarf> some of these methods make no sense on the bridge though
[09:46:29] <jzaefferer> _renderMenu in autocomplete is a bad API anyway, as its based on inheritance, and you shouldn't ever call it directly...
[09:46:34] <gnarf> that was my rule for _
[09:46:40] <jzaefferer> gnarf: like what?
[09:47:00] <scott_gonzalez> jzaefferer: Yes, it's not a method you should call, but it needs to be stable and documented to be useful.
[09:47:18] <jzaefferer> adding an issue for "Internals" section
[09:48:31] <gnarf> https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.spinner.js#L318
[09:48:54] <jzaefferer> https://github.com/jquery/api.jqueryui.com/issues/20
[09:48:54] <socialhapy> ★ Issue #20 on api.jqueryui.com (jzaefferer;  ago): Document Internals
[09:49:18] <jzaefferer> gnarf: I still don't know what you're talking about
[09:49:26] <jzaefferer> no one said we'd want to document all private methods
[09:49:31] <jzaefferer> if that's what you're getting at
[09:49:57] <jzaefferer> some claim our sourcecode is elligible because it has no source docs, but that's another discussion (or state of mind)
[09:50:55] <scott_gonzalez> gnarf: I know what you mean. We'll have a separate discussion about which methods should be documented.
[09:51:10] <gnarf> I guess like _renderMenu is a good example of one that has an _ now - but should it be there for .autocomplete( "renderMenu" ) ?
[09:51:25] <scott_gonzalez> gnarf: Absolutely not.
[09:51:35] <scott_gonzalez> Nobody should ever call that method.
[09:51:42] <gnarf> -- It would mean we'd need to move some existing underscore methods to non-underscore --
[09:51:51] <scott_gonzalez> But it's extremely important for it to be documented and stable so people are comfortable overriding it.
[09:51:55] <gnarf> ^^^ I guess I was wondering what 'some' were
[09:52:12] <scott_gonzalez> gnarf: We'll have a separate discussion about that.
[09:52:16] <gnarf> roger
[09:52:22] <scott_gonzalez> We don't need to solve that problem before 1.9.0.
[09:52:45] <scott_gonzalez> We just needed a decision on whether all of the menu methods were fully public.
[09:53:02] <scott_gonzalez> I think we all agreed just refresh and destroy were useful via .menu( method )
[09:54:10] <scott_gonzalez> We've only got a few minutes left.
[09:54:14] <scott_gonzalez> jzaefferer: You started download builder?
[09:54:30] <jzaefferer> yeah, got something local
[09:54:44] <jzaefferer> a bit of a webserver, a bit CLI thingy to test
[09:55:00] <scott_gonzalez> ok
[09:55:09] <jzaefferer> currently using zip CLI command (as our grunt build does), but streams the result directly to file (CLI) or response (web)
[09:55:14] <jzaefferer> that much I figured out
[09:55:33] <jzaefferer> need to implement a bit more of the actual zip structure
[09:55:37] <jzaefferer> and review the mobile stuff
[09:55:51] <jzaefferer> planning to have something to review by tomorrow or Friday
[09:56:00] <scott_gonzalez> sounds good
[09:56:11] <scott_gonzalez> I'm about to start the new release script.
[09:56:19] <jzaefferer> at least now I have enough infrastructure to work on the actual builder
[09:56:30] <scott_gonzalez> Does anyone have thoughts about whether it should be plain node.js, grunt, or shelljs?
[09:56:58] <jzaefferer> what's the difference between plain node and shelljs?
[09:57:16] <scott_gonzalez> Well, whether we should build the whole thing using shelljs or not.
[09:57:25] <jzaefferer> looking at shelljs I retract the question
[09:57:40] <jzaefferer> you can even write coffeescript :p
[09:57:46] <scott_gonzalez> The way the current release script works is you curl the script and then run it in bash.
[09:57:52] <scott_gonzalez> It then does a new clone of the repo.
[09:58:02] <scott_gonzalez> I'd like to keep that process,t hough minus bash :-P
[09:58:17] <jzaefferer> no tracker.txt in a release?
[09:58:21] <scott_gonzalez> correct :-)
[09:58:45] <jzaefferer> does shelljs have git integration?
[09:59:04] <scott_gonzalez> Nothing specific to git.
[09:59:13] <jzaefferer> mhm
[09:59:15] <jzaefferer> if (exec('git commit -am "Auto-commit"').code !== 0) {
[09:59:15] <jzaefferer>   echo('Error: Git commit failed');
[09:59:15] <jzaefferer>   exit(1);
[09:59:15] <jzaefferer> }
[09:59:39] <jzaefferer> that's certainly more sane then using child_process.spawn
[09:59:50] <jzaefferer> but there are also node wrappers for git
[10:00:06] <jzaefferer> can you curl a grunt file?
[10:00:23] <scott_gonzalez> Well, we can use a git module in combination with shelljs
[10:00:43] <scott_gonzalez> The tricky part about using shelljs would be the curl step.
[10:01:07] <jzaefferer> this meeting took longer then expected /o
[10:01:12] <jzaefferer> ...
[10:01:46] <scott_gonzalez> If we curl a single file and run it, then we won't be able to load shelljs unless it's global.
[10:03:31] <jzaefferer> same for grunt
[10:03:42] <jzaefferer> both have to be installed first
[10:03:47] <jzaefferer> seems fine though
[10:03:55] <jzaefferer> bash just happens to be installed
[11:05:18] <kswedberg> jzaefferer: I'll work on qunit and jqueryui index, like you said. need to get my local sites working again
[11:06:03] <jzaefferer> kswedberg: well, sync with Scott and the tickets he created or will create. A few more ideas floated around here
[11:06:22] <kswedberg> ah, ok. will do
