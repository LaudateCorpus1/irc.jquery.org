[08:56:25] <timmywil> DaveMethvin: opened
[08:56:41] <DaveMethvin> yay
[08:57:20] <timmywil> btw, I'll have to leave a bit early today, but I'll be here at the start
[08:58:19] <DaveMethvin> okay, that's why
[08:58:33] <DaveMethvin> it didn't have my nick registered
[08:58:39] <timmywil> ah
[08:58:55] <DaveMethvin> must be b/c of the bouncer
[08:59:03] <DaveMethvin> usually it remembers me long term
[08:59:43] <timmywil> some irc clients have settings to identify your nick on every login
[09:00:18] <timmywil> but then again, you have windows ;)
[09:00:39] <m_gol> present!
[09:00:53] <_orkel> hey
[09:01:07] <DaveMethvin> hey guys!
[09:01:14] <DaveMethvin> thanks for keeping things moving along
[09:01:58] <DaveMethvin> i'll give some people another minute or two to arrive
[09:01:59] <m_gol> I think we might want to deploy some automatic checks on GitHub pull requests
[09:02:29] <DaveMethvin> you mean like style? Or the unit tests?
[09:02:40] <DaveMethvin> we were gonna do that but it got sidetracked
[09:02:42] <m_gol> not sure how it works but some projects have this automatically filled in check-list that is pasted in HTML as a comment by one of devs, it checks e.g. if sb signed the CLA
[09:02:54] <DaveMethvin> yeah i've seen that
[09:03:01] <DaveMethvin> i think angular does it?
[09:03:06] <m_gol> see e.g. https://github.com/angular/angular.js/pull/3325
[09:03:07] <b-ot> m_gol: Pull request #3325 by mzgol (3w 5d ago): feat($location): add support for state and title in pushState
[09:03:12] <DaveMethvin> yeah
[09:04:04] <DaveMethvin> i wonder if it could pre-check them based on looking up the github info in the CLA for example
[09:04:28] <m_gol> I wonder how they're doing it
[09:04:34] <m_gol> I've seen it in a couple of projects
[09:04:45] <m_gol> it's not 100% automated as sb have to paste that as a comment
[09:04:55] <m_gol> but I'm sure they have software to pre-generate the comment
[09:05:22] <DaveMethvin> seems like some hook could make the comment and check some prerequisites
[09:05:25] <m_gol> hooking up to Travis is a separate issue, but we could cover signing CLA, adding tests etc.
[09:05:56] <m_gol> I mean in Angular it's not 100% automated, you have to wait until sb pastes the comment, but at least the comment is generated
[09:06:02] <m_gol> maybe it might be automated further
[09:06:24] <DaveMethvin> m_gol could you ask someone in the angular project how they're doing it?
[09:06:38] <scott_gonzalez> Shouldn't be hard to automate that.
[09:06:41] <m_gol> it would be good to have, it happened a couple of times for us to merge sth before making sure the proper e-mail was used to sign the CLA
[09:06:45] <DaveMethvin> it might just be totally manual but does seem like some automation could apply
[09:06:53] <m_gol> k, will ask
[09:07:01] <scott_gonzalez> CLA checking won't happen that way in the end though.
[09:07:09] <scott_gonzalez> It'll be a standard check just like jshint.
[09:07:13] <DaveMethvin> we were using a hook for mergeatron and it would be similar
[09:07:15] <m_gol> nice
[09:07:47] <DaveMethvin> we just never got that off the ground
[09:08:19] <DaveMethvin> alright, testswarm, our weekly complaint
[09:08:34] <DaveMethvin> how bad is it? I haven't looked lately
[09:08:41] <_orkel> pretty bad
[09:08:54] <timmywil> just always times out right now
[09:09:07] <DaveMethvin> :(
[09:09:20] <timmywil> almost like the inject script isn't reporting back
[09:09:36] <DaveMethvin> sooooo, what do we have to do to get this fixed? let'see when it broke
[09:09:45] <timmywil> I send out an email on what I would need to help investigate
[09:09:47] <timmywil> sent*
[09:10:42] <timmywil> it seemed to start when I initially broke the build on jenkins, but that shouldn't have affected the later commits as jenkins built jQuery fine after that
[09:10:43] <DaveMethvin> last good was http://swarm.jquery.org/job/1073 ... did testswarm code change around then?
[09:11:02] <_orkel> yeah :-)
[09:11:02] <DaveMethvin> that would have been last tuesday i guess
[09:11:07] <_orkel> amd stuff
[09:11:16] <_orkel> we need some of the infrastructure team to clear this up
[09:11:20] <DaveMethvin> well, there's that
[09:11:21] <DaveMethvin> :)
[09:11:25] <_orkel> *someone
[09:11:40] <_orkel> it's seems source is uploading to build.jenkins server
[09:11:45] <_orkel> *is not
[09:12:00] <timmywil> Ah, that would make sense if the build never recovered
[09:12:38] <DaveMethvin> ok so jenkins works becuause it's using old code
[09:12:52] <timmywil> ?
[09:12:55] <timmywil> it is?
[09:13:24] <DaveMethvin> oh that's what i thought orkel meant
[09:13:53] <timmywil> The console output for jenkins builds shows it's using new builds, but somehow they're not getting to testswarm
[09:14:56] <DaveMethvin> we could definitely use help from Krinkle|detached or jzaefferer to puzzle this out
[09:15:30] <timmywil> strangely, jquery-git and jquery-git2 are fine
[09:15:36] <_orkel> or gnarf i suppose?
[09:16:09] <DaveMethvin> those build before the unit tests run i think
[09:16:14] <timmywil> I'd be willing to help, but I'd need the testswarm credentials for the jQuery project and the runToken so I could run tests as if I was browserstack
[09:17:21] <DaveMethvin> timmywil can you follow up on that then? it's probably something simple but it's not clear right now
[09:17:39] <timmywil> sure
[09:19:29] <DaveMethvin> whoops, the wrong ticket was closed for the classname one
[09:20:27] <m_gol> I'd like to merge https://github.com/jquery/jquery/pull/1294 and https://github.com/jquery/jquery/pull/1312, any objections?
[09:20:27] <b-ot> m_gol: Pull request #1294 by silverwind (1mon 4w ago): [2.1] Remove obsolete getPreventDefault() usage
[09:20:43] <m_gol> wrong? argh
[09:20:53] <DaveMethvin> both of those look good m_gol
[09:20:57] <DaveMethvin> i'll fix the reference
[09:21:00] <timmywil> m_gol: +1
[09:21:15] <m_gol> ah, crap
[09:22:22] <DaveMethvin> i closed the right one
[09:22:35] <DaveMethvin> trac y u so slow
[09:22:35] <b-ot> DaveMethvin: (屮'Д')屮
[09:22:38] <m_gol> k, thx
[09:23:03] <m_gol> DaveMethvin: changes are actually applied fast, it's the reload that's slow
[09:23:13] <m_gol> submit + Cmd+R works for me :D
[09:23:17] <DaveMethvin> yeah, strange
[09:24:09] <timmywil> I have some minor build updates left for 1.11/2.1 http://bugs.jquery.com/ticket/14076 http://bugs.jquery.com/ticket/14016 Also, we need to make sure we publish to npm and bower then. Other than that, is there anything else I should do before release?
[09:24:32] <DaveMethvin> get testswarm to work :)
[09:24:37] <timmywil> heh, ok
[09:24:51] <DaveMethvin> at least  you'll have something to talk aobut in Austin now!
[09:25:10] <timmywil> yay! I'm really excited.
[09:25:38] <_orkel> timmywil: amd stuff looks awesome btw!
[09:25:54] <timmywil> thanks _orkel :)
[09:26:26] <DaveMethvin> so although we have a 1.10.3/2.0.4 tag i think our next should be 1.11/2.1 ... what do you guys think?
[09:26:37] <timmywil> I'm thinking that too
[09:26:49] <DaveMethvin> the AMD seems like too big a feature to bury in a patch release even if it doesn't change the API
[09:27:29] <timmywil> sounds good to me
[09:27:44] <timmywil> OK, gotta run. I have a physical. :/
[09:27:54] <timmywil> I'm fine, just don't want to go.
[09:28:05] <timmywil> bbl
[09:28:09] <m_gol> I agree, we should bump the major
[09:28:11] <m_gol> I mean, minor
[09:28:13] <m_gol> not patch
[09:28:23] <m_gol> as for changes, there's my task of splitting up support
[09:28:25] <DaveMethvin> later timmywil
[09:28:27] <DaveMethvin> thanks!
[09:28:35] <timmywil> np
[09:28:38] <m_gol> now that AMD has landed I can get to it, probably tommorow or no Wednesday
[09:28:44] <DaveMethvin> ok great m_gol
[09:29:36] <DaveMethvin> sorry for being so gone lately, i've been traveling a LOT
[09:30:00] <DaveMethvin> seems like several of the pull requests are pretty trivial and could land
[09:31:10] <DaveMethvin> If anyone sees problems in some of the PRs just post in them, otherwise I'll try to take a pass later this week and land a few
[09:31:25] <DaveMethvin> you're welcome to land some if you want as well .... don't let me hold you up
[09:31:34] <m_gol> there are 2 major ones
[09:31:44] <m_gol> one ajax refactor from 9 months ago...
[09:31:57] <m_gol> Krinkle said he'll do sth about it and then silence has come ;)
[09:32:06] <DaveMethvin> yeah we need to get that off the list
[09:32:11] <DaveMethvin> i tried killing it before :)
[09:32:14] <m_gol> :)
[09:32:26] <DaveMethvin> if it can land, great, but it's pretty stale by now
[09:32:42] <m_gol> yeah, and lots of rebasing after AMD refactor landed
[09:33:12] <DaveMethvin> _orkel's simplifications should land too
[09:33:17] <DaveMethvin> for a 1.11/2.1
[09:33:38] <_orkel> mm, let me recheck them again, just in case
[09:33:49] <_orkel> and rebase them
[09:33:53] <DaveMethvin> oh i bet they need some rebasing for sure :)
[09:33:59] <m_gol> hehehe
[09:34:10] <_orkel> :-)
[09:34:18] <m_gol> for smaller prs I prefer manually re-applying changes and then amending the commit with the PR author
[09:34:32] <m_gol> way simpler than rebase that tries to be merged in wrong files...
[09:34:48] <DaveMethvin> agreed, sometimes it's just easier to do that
[09:35:02] <m_gol> another old one is this left/top computed style bullshit
[09:35:19] <DaveMethvin> yeah and tbh i'm not sure about it anyway
[09:35:35] <DaveMethvin> i wanted someone to convince me
[09:35:57] <m_gol> I don't feel the need to preserve getComputedStyle-like behavior on non-positioned elements
[09:36:19] <m_gol> but it's a big paradigm change so more people should be involved in this decision
[09:36:35] <DaveMethvin> i am not certain enough about the use case to know whether it is useful
[09:36:48] <m_gol> I'd aim for always returning pixels if possible
[09:37:12] <m_gol> though that would probably mean deferring to position() in many cases
[09:37:18] <m_gol> wish mikesherov was here :)
[09:38:05] <DaveMethvin> we could summon him again in the ticket perhaps
[09:39:23] <DaveMethvin> just looking at tickets now
[09:39:53] <DaveMethvin> http://bugs.jquery.com/ticket/14269
[09:40:05] <DaveMethvin> i don't know if we can lowercase that
[09:40:06] <m_gol> I seriously, wrote a comment on trac, I clicked submit and refreshed a second later and the comment is there ;)
[09:40:55] <m_gol> wow, what is happening there...
[09:41:25] <DaveMethvin> seems like we need to handle both "borderLeftColor" and "border-left-color"
[09:41:40] <DaveMethvin> so we can't just force it all to lowercase unless the browser cares nothing about case
[09:41:54] <m_gol> yep
[09:42:30] <DaveMethvin> do *we* camelize in .css() or do we just pass that through?
[09:42:33] <DaveMethvin> lemme look
[09:43:40] <DaveMethvin> of course amd rearranged everything ... :)
[09:44:42] <DaveMethvin> we camelize
[09:44:50] <DaveMethvin> jQuery.style
[09:45:33] <DaveMethvin> hmmm, now i gotta think about whether that is right
[09:45:52] <DaveMethvin> are css props supposed to be case insensitive?
[09:45:53] <m_gol> the problem is wiDtH doesn match `name === "width"` in getWidthOrHeight
[09:46:05] <DaveMethvin> ah
[09:46:10] <DaveMethvin> good catch
[09:46:25] <m_gol> I think so, I've seen lots of old CSS that has everything in big letters ;)
[09:46:29] <m_gol> FONT-SIZE etc.
[09:46:50] <m_gol> we could lowercase before camelizing probably
[09:47:06] <m_gol> the question is: is it worth it?
[09:47:07] <DaveMethvin> seems like we should if we expect it to be camelized
[09:47:15] <m_gol> there would probably be a little perf penalty
[09:47:25] <m_gol> ah, wait
[09:47:40] <m_gol> we can't lowercase because we accept .css('borderRadius') etc.
[09:48:02] <DaveMethvin> yes
[09:48:23] <DaveMethvin> so we need to just make the === "width" case insensitive in getWidthOrHeight
[09:48:53] <m_gol> actually, that's being done before
[09:49:17] <m_gol> IMHO on wiDtH we don't enter getWidthOrHeight because only 2 hooks go there, width & height
[09:49:40] <DaveMethvin> there's also augment..
[09:50:17] <m_gol> so we'd have to lowercase before checking for hooks
[09:50:31] <m_gol> I don't like it, really...
[09:50:36] <DaveMethvin> so stupid, WHY CAN'T YOU USE CONSISTENT CASE?
[09:51:17] <m_gol> I'd say we document stuff like wIdTH is not accepted
[09:51:35] <m_gol> if we try to be too smart about it, it can bite as later if we need to have more unusual hooks
[09:51:38] <DaveMethvin> yeah, "don't use dumb names"
[09:51:55] <DaveMethvin> and changing this kind of stuff worries me anyway
[09:52:06] <DaveMethvin> nobody has ever reported a bug before
[09:52:10] <m_gol> well, I'd document it a bit differently than "don't use dumb names" :P
[09:52:13] <DaveMethvin> so we change it we're likely to break more stuff
[09:52:21] <m_gol> yeah
[09:52:24] <DaveMethvin> "don't use dumb names, idiot?" :)
[09:52:36] <m_gol> ;)
[09:52:53] <DaveMethvin> the docs always get cluttered telling people not to do stuff that only crazy people would do
[09:53:02] <DaveMethvin> but i guess that's the way it is
[09:53:06] <m_gol> well, we can write what they can do
[09:53:23] <m_gol> i.e. provide either the property lowercase with dashes, or camelized
[09:53:38] <DaveMethvin> it's so hard to imagine how creative some people can be
[09:53:45] <m_gol> even if some cases between work, we don't need to care
[09:54:03] <DaveMethvin> okay, any other issues?
[09:54:07] <m_gol> .css('borderTop-leftRadius') :P
[09:54:24] <DaveMethvin> aaaaahhhg
[09:54:34] <DaveMethvin> let's call this meeting done, thanks guys
