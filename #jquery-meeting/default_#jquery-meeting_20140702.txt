[09:01:21] <scott_gonzalez> jzaefferer: arschmitz fnagel gnarf mikesherov petersendidit
[09:01:31] <fnagel> hey
[09:02:37] <jzaefferer> so, web components?
[09:02:53] <scott_gonzalez> heh, do you want to start with that?
[09:03:13] <mikesherov_> here
[09:03:18] <scott_gonzalez> If we're going to discuss that today, it should probably be at the end, since it can potentially expand to take infinite time.
[09:03:33] <scott_gonzalez> yay, mikesherov_, what's the status of JSCS?
[09:03:38] <scott_gonzalez> Are we good to go with 1.5.7?
[09:03:55] <kborchers> just realized textual was closed, sorry
[09:03:59] <scott_gonzalez> I don't think I've heard any update since the May 16 discussion when Oleg said "this weekend"
[09:04:13] <mikesherov_> OK, so basically, JSCS is still evolving
[09:04:22] <mikesherov_> the jQuery preset is "good enough" at this point
[09:04:32] <mikesherov_> to catch most major pain points
[09:04:46] <mikesherov_> it doesn't do some of the more advanced stuff like chaining style
[09:04:46] <scott_gonzalez> So should we implement it?
[09:04:59] <scott_gonzalez> Once it's in place, it's going to be version locked and used in all projects.
[09:05:00] <mikesherov_> Although it's annoying, I'd say wait until 1.6 at least
[09:05:06] <scott_gonzalez> So any updates will require updates to all projects.
[09:05:22] <scott_gonzalez> Ok, we can wait for 1.6.
[09:05:25] <mikesherov_> 1.6 will bring with it some of the basics that are missing
[09:05:34] <mikesherov_> ability to ignore lines
[09:05:36] <mikesherov_> etc.
[09:06:06] <mikesherov_> Although, the work that Leo has done was really handy in helping discover pain points
[09:06:35] <mikesherov_> I'd say for now, it might make sense to have UI at least land 1.6 when it comes out
[09:06:49] <mikesherov_> and we can continue evolving JSCS to cover more and more of the style guide
[09:07:06] <mikesherov_> fair?
[09:07:15] <scott_gonzalez> jzaefferer: What are your thoughts on the QUnit PR then?
[09:07:31] <scott_gonzalez> Should we use that as the testing ground?
[09:08:00] <scott_gonzalez> Let me see which projects are using JSCS right now.
[09:08:38] <scott_gonzalez> That'll take a little bit of time, so let's start with the next topic while we wait.
[09:09:04] <jzaefferer> I think its better to use jscs with a few things missing or disabled then not using it at all
[09:09:06] <scott_gonzalez> fnagel: Did jzaefferer's suggestion make sense for rebasing that PR?
[09:09:17] <jzaefferer> The preset already captures a lot of the jQuery style guide
[09:09:48] <scott_gonzalez> So it's currently UI, core, sizzle
[09:10:03] <mikesherov_> Right, I'm thinking better to land incrementally, which will be provide a virtuous feedback cycle
[09:10:08] <scott_gonzalez> https://gist.github.com/scottgonzalez/bd781a95ceaa6ea97d60#file-gistfile1-txt-L594
[09:10:14] <mikesherov_> and then when the style guide is fully covered, we can standardize
[09:10:17] <fnagel> scott_gonzalez: give me a second
[09:10:30] <mikesherov_> but perhaps let projects evolve which version they're using until that point?
[09:10:34] <scott_gonzalez> So let's just updates the three projects currentlying using it?
[09:10:40] <mikesherov_> Makes sense
[09:10:41] <scott_gonzalez> Should the QUnit PR wait on 1.6.0?
[09:10:57] <mikesherov_> well, doesn't have to if we're saying we can evolve it
[09:10:58] <scott_gonzalez> mikesherov_: That sounds fine.
[09:11:01] <scott_gonzalez> yeah
[09:11:33] <mikesherov_> And I'll file tickets with JSCS to capture the discrete pieces of the style guide that aren't yet covered
[09:12:03] <fnagel> scott_gonzalez: The results sounds good, but I'm not quite sure how to do it. Second local datepicker branch based upon latest origin datepicker, merge master, rebase first local datepicker branch?
[09:13:29] <jzaefferer> git checkout datepicker; git merge master; git checkout calendar-refactor; git rebase datepicker
[09:13:33] <jzaefferer> I think that should work
[09:13:47] <jzaefferer> afterwards push datepicker and calendar-refactor (or whatever the branch name is)
[09:14:03] <scott_gonzalez> He's working directly in the datepicker branch.
[09:14:14] <scott_gonzalez> Just not pushing to origin.
[09:14:35] <fnagel> jzaefferer: what is calendar-refactor in that case?
[09:14:48] <fnagel> scott_gonzalez: right, my working branch is datepicker
[09:16:37] <scott_gonzalez> But that would kill the PR since it'd be a new branch.
[09:16:50] <fnagel> scott_gonzalez jzaefferer I've added you to my jquery-ui branch
[09:17:00] <scott_gonzalez> s/branch/fork/?
[09:17:15] <fnagel> https://github.com/fnagel/jquery-ui/tree/datepicker
[09:18:10] <fnagel> scott_gonzalez: yes, fork not branch
[09:18:46] <jzaefferer> oh well
[09:19:04] <jzaefferer> always a good idea to create a branch, even when working off a fork
[09:19:42] <mikesherov_> right, even when working off a branch off a fork
[09:19:54] <jzaefferer> can't even merger master into origin/datepicker, that currently results in merge conflicts
[09:20:02] <jzaefferer> need to resolve that first...
[09:20:15] <fnagel> I decided against a second branch as I needed to work on both widgets simultaneously all the time
[09:20:26] <scott_gonzalez> fnagel: Do you know how you got into this situation where all the old commits are in the branch?
[09:20:37] <scott_gonzalez> But you'd be working on both in the same branch.
[09:20:51] <scott_gonzalez> The new branch would be merged into datepicker at the end.
[09:20:59] <scott_gonzalez> Which is what you're trying to do now anyway.
[09:21:11] <mikesherov_> right, seems solvable with branching now, and then interactive rebasing against the upstream branch
[09:21:18] <scott_gonzalez> But somehow you pulled a bunch of old commits into it.
[09:22:10] <mikesherov_> probably didn't update upstream before any previous rebase. The merge base would be screwed up and old commits can get in. All that needs to happen is `rebase -i` and remove them
[09:22:32] <fnagel> scott_gonzalez: Sorry, no idea. I just did a merge like I always did before.
[09:22:50] <scott_gonzalez> Hmm...did you merge master into your local branch instead of the origin?
[09:23:10] <scott_gonzalez> If that's the problem, then just merging master into datepicker (on the origin) should fix the PR.
[09:23:29] <fnagel> thats two weeks ago, soo... but I normaly merge with origin/master
[09:25:29] <mikesherov_> right, but you have to fetch origin first if it's somehow changed
[09:25:40] <mikesherov_> if it can't, then ignore me
[09:25:53] <fnagel> sure, I always fetch before merging master
[09:27:39] <mikesherov_> just saying that's a way it could've possibly gotten screwed up. Anyway, rebase -i is a good sledgehammer.
[09:31:32] <scott_gonzalez> Man, this wifi is terrible today.
[09:34:47] <scott_gonzalez> Switched to using my phone as a hotspot, hopefully that's better...
[09:35:51] <scott_gonzalez> Not sure if my previous messages were sent. I can try to fix the PR.
[09:36:28] <scott_gonzalez> Ok, on to the next topic.
[09:36:35] <scott_gonzalez> 1.11.0 was release :-)
[09:36:44] <mikesherov_> woooo!
[09:36:48] <scott_gonzalez> We've had at least 35k downloads and we no bug reports.
[09:39:25] <scott_gonzalez> We also started discussions with the Bootstrap team to see if they're interested in collaborating on the CSS framework.
[09:39:32] <scott_gonzalez> Essentially using Bootstrap as the starting point.
[09:39:51] <scott_gonzalez> Here's a quick proof of concept using Bootstrap to style a UI dialog: http://jsbin.com/vobomeyu/2/edit
[09:39:58] <scott_gonzalez> It'll be a lot simpler with the classes option.
[09:40:21] <scott_gonzalez> So I plan on doing that and then continuing the discussion with them.
[09:40:47] <mikesherov_> One thing I'd like to see, personally, would be a move towards BEM
[09:41:12] <mikesherov_> And that is lacking in both jQuery UI and bootstrap at the moment.
[09:41:34] <mikesherov_> I don't have a super strong opinion about that, but perhaps it's worth the discussion?
[09:42:03] <scott_gonzalez> We discussed it and it seems like BEM makes the source really hard to maintain.
[09:42:09] <scott_gonzalez> Also seems like a pain for end users.
[09:43:21] <scott_gonzalez> We can certainly have another discussion about it.
[09:45:38] <scott_gonzalez> jzaefferer: Did you want to discuss web components?
[09:49:20] <mikesherov_> OK, gotta run! I share your views on web components Scott.
[09:49:39] <jzaefferer> scott_gonzalez: sorry, not now
[09:50:01] <jzaefferer> scott_gonzalez: though I got a "see also": https://twitter.com/bassistance/status/484339223395590144 -> http://jsbin.com/gocugu/1/edit
[09:50:01] <b-ot> jzaefferer: @bassistance: @addyosmani do you have an example of wrapping or adapting or rewriting a jQuery UI widget into a web component?
[09:50:14] <jzaefferer> looks alright at first glance, but its pretty broken
[09:52:22] <scott_gonzalez> ok, I think that's it for today.
[09:52:24] <scott_gonzalez> Thanks everyone.
