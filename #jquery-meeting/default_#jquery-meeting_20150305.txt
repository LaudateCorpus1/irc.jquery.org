[09:00:27] <scott_gonzalez> `pepteam
[09:00:28] <b-ot> scott_gonzalez: arschmitz jperrault jrossi2 scott_gonzalez snover
[09:00:42] <arthurvr> Helllooow
[09:00:42] <snover> i’m here.
[09:00:44] <arschmitz> Hi
[09:01:30] <scott_gonzalez> We have a new PR for Intern, from Colin: https://github.com/jquery/PEP/pull/167
[09:01:48] <scott_gonzalez> This includes fixes to the bad tests that didn't complete properly.
[09:02:07] <snover> well, it disables a test that was breaking other tests until someone can figure out why it’s doing what it’s doing
[09:02:13] <scott_gonzalez> It also adds Travis CI support using BrowserStack to launch the browsers.
[09:02:46] <scott_gonzalez> But it also fixes some tests, right?
[09:03:24] <scott_gonzalez> Providing promises instead of expecting a done callback.
[09:03:54] <scott_gonzalez> Like this one: https://github.com/jquery/PEP/pull/167/files#diff-0cc950c6f9f2004cf0872aac53661603R50
[09:04:00] <snover> in a sense. it doesn’t actually fix the underlying api to use promises for asynchronous operations
[09:04:12] <snover> the done callback just gets changed to a Deferred#resolve
[09:04:56] <scott_gonzalez> When I looked through, it looked like you also updated every test that had a done callback to no longer use that.
[09:05:28] <snover> yes, but, it still passes a function (resolve) to the methods that call a callback when they are done
[09:05:35] <snover> it doesn’t change those methods to return promises
[09:06:50] <scott_gonzalez> Are you sure about that?
[09:07:01] <scott_gonzalez> It looks like you changed all of them to use this.async().
[09:10:30] <snover> am i sure that i didn’t change the library? yes, i am :)
[09:10:42] <snover> https://github.com/jquery/PEP/pull/167/files#diff-0cc950c6f9f2004cf0872aac53661603R56
[09:12:18] <scott_gonzalez> Ok, we're obviously trying to say different things.
[09:12:25] <scott_gonzalez> That part's not important ;-)
[09:13:22] <scott_gonzalez> You can see the results of the first CI run here: https://travis-ci.org/jquery/PEP/builds/53135990
[09:14:02] <scott_gonzalez> We do have a few failures to fix as Colin has pointed out.
[09:14:28] <scott_gonzalez> arschmitz asked about adding grunt-selenium-server for local testing without specifying BrowserStack credentials.
[09:14:29] <snover> yes, those are legit, not a bug in the testing system
[09:14:33] <scott_gonzalez> right
[09:15:05] <scott_gonzalez> snover: Do you have an idea of how much work it would be to write a Dig Dug tunnel for someone new to that project?
[09:15:22] <scott_gonzalez> I haven't spent too much time looking at it yet. Just glanced over the existing tunnels.
[09:15:34] <snover> not very long.
[09:16:02] <scott_gonzalez> Is anyone interested in working on that?
[09:16:26] <arschmitz> snover: so does that download selenium server and chromedriver for you?
[09:16:33] <arschmitz> i have not looked at how it works
[09:16:34] <snover> arschmitz: that would be the idea yes
[09:16:37] <arschmitz> ok
[09:17:08] <snover> it downloads the server you need, for remote services this is a tunnel application, for a local selenium it would be selenium-server-standalone plus chromedriver plus iedriverserver
[09:17:22] <arschmitz> ok
[09:17:56] <arschmitz> so its essentially the same idea but built in instead of its own task
[09:18:22] <snover> yes, that’s right
[09:19:06] <arschmitz> ok makes sense that would be more ideal for sure
[09:20:03] <scott_gonzalez> arschmitz: Do you want to work on that? Or pair with me since you have experience using selenium server?
[09:20:12] <arschmitz> sure
[09:20:24] <arschmitz> id like to see that working for local testing
[09:21:04] <arschmitz> snover: also think it might be worth adding a section to the read me on how to run tests in your pr?
[09:21:05] <scott_gonzalez> ok
[09:21:27] <snover> arschmitz: sure
[09:21:59] <scott_gonzalez> I'll try to do a full review of the PR before the end of the week.
[09:22:42] <scott_gonzalez> I think that's it for Intern today.
[09:22:49] <scott_gonzalez> I started working on the release script.
[09:23:07] <scott_gonzalez> We need to pick a name for the npm package.
[09:23:11] <scott_gonzalez> pep is already taken.
[09:23:45] <scott_gonzalez> As much as I don't like the redundancy, pep-polyfill is available ;-)
[09:25:01] <arschmitz> we must polyfill our polyfill!
[09:25:33] <scott_gonzalez> pointerevents-polyfill is what Polymer was using when they were publishing to Bower.
[09:25:44] <scott_gonzalez> pointerevents seems to be available on both
[09:26:15] <arschmitz> annoying since it wont match the repo at all though
[09:26:53] <arschmitz> and you know you will get people doing pointer-events-polyfill lol
[09:27:17] <arschmitz> if you did pointerevents-polyfill that is
[09:27:42] <kborchers> pepjs?
[09:27:50] <arschmitz> oh thats not bad
[09:28:24] <scott_gonzalez> I hate naming, so I'm fine with pretty much anything.
[09:28:33] <scott_gonzalez> Any objections to pepjs?
[09:28:39] <arthurvr> don’t know if we care, but, https://docs.npmjs.com/files/package.json
[09:28:48] <arthurvr> ”Don't put "js" or "node" in the name. It's assumed that it's js”
[09:29:13] <arschmitz> +1 for pepjs and bah to their conventions its a work around lol
[09:29:47] <arthurvr> I though about it that way too, just wanted to make sure y’all know about it :)
[09:32:05] <scott_gonzalez> Looks like we don't have too much interest here.
[09:32:28] <scott_gonzalez> We'll come back to naming. If you have any feedback, just comment on https://github.com/jquery/PEP/issues/159
[09:32:55] <scott_gonzalez> Should we automate updating gh-pages or just leave that as a manual process?
[09:33:04] <arthurvr> automate it :)
[09:33:14] <scott_gonzalez> I believe it was just a copy of the samples before.
[09:33:24] <scott_gonzalez> So if we're going to leave it as just that, it should be easy to automate.
[09:33:29] <arschmitz> makes sense at some point but probably not a priority
[09:35:00] <scott_gonzalez> Ok, well that's all I've got for this week.
[09:35:05] <scott_gonzalez> Does anyone have anything else to discuss?
[09:38:21] <scott_gonzalez> I guess that's it for today.
[09:38:23] <scott_gonzalez> Thanks everyone.
[11:00:21] <arschmitz> `mobileteam
[11:00:21] <b-ot> arschmitz: agcolom, arschmitz, arthurvr, cgack, gabriel_schulhof, ianmaffett, jasperdegroot, sfrisk
[11:00:25] <arschmitz> Assemble!
[11:00:29] <arthurvr> Hey!
[11:00:34] <jasperdegroot> hola
[11:01:59] <cgack> howdy
[11:02:07] <gabriel_schulhof> Hey!
[11:02:44] <arschmitz> agenda https://docs.google.com/spreadsheets/d/1xGEVtftLDEHAA37YYlA23J_EZwIRyMUaseBY790byPM/edit#gid=1554818690
[11:03:33] <arschmitz> first thing as has been the trend lately
[11:03:35] <arschmitz> classes
[11:03:42] <arschmitz> i just reviewed the current prs again
[11:03:48] <arschmitz> they are getting close
[11:04:11] <arschmitz> the approach is right on them not its just details
[11:04:35] <arschmitz> on the ui side i think it may land after i do a few minor remaining updates
[11:05:13] <arschmitz> any outstanding questions from either cgack or gabriel_schulhof?
[11:06:14] <cgack> I have become a bit confused about the "swatch class in extra" comment you made on the Toolbar PR... I asked a question there so we don't need to hold up the meeting
[11:06:38] <arschmitz> classes like ui-blah-a ui-blah-b
[11:07:13] <arschmitz> are not structure classes they are swatch classes swatch classes go in the extra classes param
[11:07:31] <gabriel_schulhof> ... and not on the right-hand-side of a class key, right?
[11:07:49] <arschmitz> right they dont go through classes option at all
[11:08:09] <cgack> so not: this._removeClass( element, null, "ui-blah-a")
[11:08:15] <arschmitz> yup
[11:08:27] <cgack> just regular .removeClass() then?
[11:08:30] <gabriel_schulhof> Nonono ...
[11:08:48] <gabriel_schulhof> IINM, you never use .(add|remove|toggle)Class() anymore ...
[11:08:50] <arschmitz> no you had it right first time
[11:08:56] <arschmitz> thats correct
[11:08:57] <gabriel_schulhof> Ever.
[11:08:58] <gabriel_schulhof> Ever.
[11:09:13] <arschmitz> there is exactly one case where it could in theory be ok but its so rare id rather ignore it
[11:09:15] <cgack> that's what i thought, which is why the  "yup" to my negation was strange
[11:09:37] <cgack> so THIS:  this._removeClass( element, null, "ui-blah-a")  ?
[11:09:44] <gabriel_schulhof> [✓]
[11:09:47] <arschmitz> yes
[11:09:49] <cgack> right on
[11:09:58] <cgack> okay, phew... got really worried there
[11:10:34] <arschmitz> ok anything else related to classes?
[11:10:53] <gabriel_schulhof> Nope ... just chugging along ...
[11:10:58] <arschmitz> or qunit-assert-classes
[11:12:17] <arschmitz> ok so moving on
[11:12:31] <arschmitz> jasperdegroot: any update on the css?
[11:12:50] <jasperdegroot> arschmitz: not much
[11:12:57] <jasperdegroot> arschmitz: started but didn't finish yet
[11:13:13] <jasperdegroot> didn't had much time this week, sorry
[11:13:13] <arschmitz> ok
[11:13:23] <jasperdegroot> will try to have it finished this weekend
[11:13:25] <arschmitz> no problem neither did i :-)
[11:14:31] <arschmitz> sfrisk is not around so we will skip accordion
[11:14:32] <gabriel_schulhof> Yeah, actually, I'm also tied up with a preso for work - about jQuery Mobile, so it's related, but it does take time away from classes.
[11:14:41] <arschmitz> gabriel_schulhof: ok
[11:14:57] <arschmitz> autoinit no update this week
[11:15:05] <arschmitz> same i think on team page
[11:15:16] <gabriel_schulhof> What is still outstanding for autoinit?
[11:15:20] <jasperdegroot> arschmitz: there is an update
[11:15:27] <arschmitz> oh good
[11:15:34] <jasperdegroot> arschmitz: I created a branch in jquerymobile.com repo
[11:15:40] <arschmitz> ok
[11:16:01] <jasperdegroot> all we need is bit text about each team member
[11:16:09] <arschmitz> execlent
[11:16:26] <arschmitz> want to make an issue and ping everyone on it and ask them to add their info?
[11:16:36] <jasperdegroot> will do
[11:16:37] <arschmitz> make a checklist and we can check our selves off
[11:16:56] <jasperdegroot> people can do an PR against the team branch or just paste their text in a comment
[11:17:01] <jasperdegroot> sounds good
[11:17:30] <arschmitz> cool sounds like a plan
[11:17:36] <arschmitz> GSoC
[11:17:48] <arschmitz> have probably seen a lot of people around for this the last few days
[11:18:05] <arschmitz> please be try to help them out where you can
[11:18:32] <arschmitz> websites no real update here
[11:18:43] <gabriel_schulhof> Wait a sec ... new people on -dev that are working on GSoC?
[11:18:48] <arschmitz> yes
[11:18:54] <arschmitz> many many many many of them
[11:19:08] <arthurvr> Sure (Which is good!)
[11:19:14] <gabriel_schulhof> OK, so the go to #jquery line becomes severly diluted.
[11:19:16] <arschmitz> yup
[11:19:24] <arschmitz> gabriel_schulhof: no
[11:19:35] <arschmitz> gabriel_schulhof: these are people here to work on ui / mobile / qunit etc
[11:19:57] <arthurvr> gabriel_schulhof: why do you think so?
[11:20:00] <arschmitz> so their qustions will be development related
[11:20:07] <gabriel_schulhof> OK, right ... I misspoke. I guess they /will/ be talking about dev-related stuff.
[11:20:13] <arschmitz> gabriel_schulhof: they are contributors
[11:20:52] <arschmitz> they are just new and unfamiliar with the code and how we work so please be patient and try to help them out where you can
[11:20:52] <gabriel_schulhof> arthurvr: I don't. I'm just so used to people asking #jquery questions. I'm becoming ossified in my old age.
[11:21:36] <gabriel_schulhof> Absolutely! Looking forward to it!
[11:21:44] <arschmitz> and feel free to point them at things like contribute the issue tracker github bootcamp etc
[11:21:58] <arthurvr> Also https://github.com/jquery/gsoc/wiki/Getting-started-for-students
[11:23:24] <arschmitz> ok so our current demo spider
[11:23:37] <arschmitz> is kinda a hack i put together to solve a problem we had
[11:23:55] <arschmitz> i have no published spider.js which is a full standalone tool for this
[11:24:03] <arschmitz> so im going to update us to be on that as well
[11:24:16] <arschmitz> its probably going to find TONS of fun new errors though
[11:24:36] <gabriel_schulhof> \o/
[11:24:57] <arschmitz> but ah well so anyway im working on that
[11:25:10] <arschmitz> So landed perf testing in chassis today
[11:25:20] <arschmitz> along with updatd versions of the test framework
[11:25:36] <arschmitz> and there are some nice new metrics that are much more relevant
[11:25:51] <arschmitz> like how long it take for first paint
[11:26:25] <arthurvr> Great work!
[11:26:32] <arschmitz> and the winnner from all the current frameworks tested is......
[11:26:39] <arschmitz> jQuery Mobile by over 200ms
[11:26:50] <gabriel_schulhof> What were the frameworks?
[11:26:59] <gabriel_schulhof> Though I never had a doubt.
[11:27:13] <gabriel_schulhof> Is there a link to the perf test summary?
[11:27:13] <arschmitz> Bootstrap, Foundation, jQuery UI, jQuery Mobile
[11:27:29] <gabriel_schulhof> I'm surprised about Bootstrap.
[11:27:30] <arschmitz> gabriel_schulhof: no it was just local after i udated this morning
[11:27:41] <gabriel_schulhof> I thought bootstrap didn't JS much.
[11:27:51] <arschmitz> gabriel_schulhof: this is all no js
[11:27:55] <arschmitz> this is css testing
[11:27:56] <gabriel_schulhof> Oh, OK.
[11:28:16] <arschmitz> so i also tested ui-1-12 as it stands now
[11:28:24] <gabriel_schulhof> OKOK, but then that's not saying much. We add the loading class to avoid FOUC, so ...
[11:28:47] <gabriel_schulhof> Is this just plain initial DOM structure testing?
[11:28:57] <arschmitz> and it basically tied mobile
[11:29:15] <arschmitz> gabriel_schulhof: this is testing how well the browser can actually render the button markup and css
[11:29:24] <arschmitz> it generates 1000 random buttons on a page
[11:29:53] <gabriel_schulhof> Wait. I assume you mean the markup for 1000 random pre-rendered buttons with not JS instantiation, right?
[11:29:55] <arschmitz> and measures things like framerate while scrolling, paint time, layout time, nodes per layout,
[11:30:13] <arschmitz> gabriel_schulhof: the page is generated server side and is just css and html
[11:30:39] <arschmitz> it uses a hash of options and generates 1000 random variations
[11:31:24] <gabriel_schulhof> Suppose you were to test a <input data-type="search" data-clear-btn="true"> ... then you would create variations on the wrapper + all its children, right?
[11:31:37] <arschmitz> yes
[11:31:39] <gabriel_schulhof> OK.
[11:31:41] <gabriel_schulhof> Gotcha.
[11:31:55] <arschmitz> but i hate inputs
[11:32:00] <arschmitz> so i dont count them
[11:32:01] <arschmitz> :-p
[11:32:02] <gabriel_schulhof> So, this is post-startup performance.
[11:32:12] <arschmitz> gabriel_schulhof: this is css performance
[11:32:15] <arschmitz> plain and simple
[11:33:03] <arschmitz> i would guess part of the reason mobile is faster is because of the inline svg's
[11:33:07] <gabriel_schulhof> When are we gonna have a pipe that tracks the ups and downs of perf continuously?
[11:33:22] <arschmitz> thats what this will do eventually
[11:33:29] <gabriel_schulhof> *whew* can't wait!
[11:33:32] <arschmitz> thats really what its actually designed for
[11:33:49] <arschmitz> the comparison is something w are working on adding the ci tracking is already there
[11:34:17] <gabriel_schulhof> *sigh* ... we should also have time-to-glass tests.
[11:34:24] <arschmitz> it does that
[11:34:34] <arschmitz> and it meausre your js too
[11:34:43] <gabriel_schulhof> Oh, OK.
[11:34:48] <arschmitz> but the test im doing are specificly css rendering tests
[11:35:04] <gabriel_schulhof> That's great!
[11:35:16] <arschmitz> this uses the telemetry data from chrome
[11:35:34] <gabriel_schulhof> In the long run, we need both time to glass, and what happens after it hits the glass, of course, so this is really cool!
[11:35:39] <arschmitz> and what data there is provided by other browsers
[11:36:27] <arschmitz> ok and last item on the agenda the builder
[11:36:31] <gabriel_schulhof> IINM, mobile browsers don't often provide these numbers :/
[11:36:47] <arschmitz> gabriel_schulhof: they do if you do it through webdriver
[11:36:54] <arschmitz> which is how this works
[11:37:50] <arschmitz> so the builder
[11:37:50] <gabriel_schulhof> OK, but that's, like, Android-specific, right?
[11:37:54] <arschmitz> no
[11:37:54] <gabriel_schulhof> Anyway.
[11:37:56] <gabriel_schulhof> NM.
[11:38:00] <gabriel_schulhof> Let's talk about the builder.
[11:38:02] <gabriel_schulhof> Sorry!
[11:38:13] <arschmitz> we need to switch to the ui builder for 1.5
[11:38:28] <arschmitz> and we need to update all our amd wrappers to umd wrappers
[11:38:57] <gabriel_schulhof> Step 0: Add jquery: true to .jshintrc :)
[11:39:17] <arschmitz> So anyone that wants to do this have at lol
[11:39:35] <arschmitz> rxaviers: im sure can help you getting it setup and i can do any of the infrastructure
[11:40:05] <gabriel_schulhof> I'd love to do it but I'm not sure I can commit for getting started within the week :/
[11:40:16] <gabriel_schulhof> s/for/to/
[11:40:23] <arschmitz> gabriel_schulhof: well first come first serve
[11:40:27] <gabriel_schulhof> Right. OK.
[11:40:33] <arschmitz> i have a feeling no one else may too
[11:40:48] <gabriel_schulhof> Well, if it's still status quo next week, I'll jump in.
[11:41:26] <arschmitz> so unless someone else has something to add to the agenda i think thats it for thi week
[11:41:36] <gabriel_schulhof> Also, I may be mistaken, but the UMD boilerplate used by UI is not exactly any one of the boilerplates listed on umdjs/umd ...
[11:41:54] <rxaviers> arschmitz, gabriel_schulhof, sure just let me know what you need on -dev
[11:41:55] <jasperdegroot> I opened a PR instead of a ticket for the team section on the about page: https://github.com/jquery/jquerymobile.com/pull/120
[11:41:55] <arschmitz> it used to be but we may have changed it at some point lol
[11:42:17] <gabriel_schulhof> The fact that it simply calls the factory in the absence of a script loader without setting any browser globals /in the boilerplate/ is non-standard.
[11:42:47] <gabriel_schulhof> I mean, the code in the IIFE ends up setting some externally accessible stuff, of course, but that's not returned and set from the boilerplate.
[11:42:50] <gabriel_schulhof> Anyway.
[11:42:52] <gabriel_schulhof> I'm good with it as it is.
[11:42:59] <gabriel_schulhof> Just making an observation.
[11:43:19] <arschmitz> gabriel_schulhof: can you show me what file your looking at?
[11:43:32] <gabriel_schulhof> Yeah ... jussec ...
[11:44:16] <jasperdegroot> Re: https://github.com/jquery/jquerymobile.com/pull/120 ... if everyone paste his/her text (2 or 3 lines) in a comment there I'll copy it in the page
[11:44:47] <gabriel_schulhof> arschmitz: https://github.com/jquery/jquery-mobile/blob/ui-1-12/external/jquery-ui/widget.js#L16-L26 vs. https://github.com/umdjs/umd/blob/master/amdWeb.js#L18-L26
[11:45:30] <arschmitz> gabriel_schulhof: https://github.com/umdjs/umd/blob/master/jqueryPlugin.js
[11:46:09] <gabriel_schulhof> Aaaah, OK! So jQuery is assumed. Wow! jQuery is so pervasive!
[11:46:40] <gabriel_schulhof> ... and of course! It provides the NS onto which to hang things!
[11:47:10] <arschmitz> yup
[11:49:12] <arschmitz> ok anything else or anything from the community?
