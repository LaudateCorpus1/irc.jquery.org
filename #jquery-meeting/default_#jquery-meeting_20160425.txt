[12:01:07] <DaveMethvin> gibson042 markelog m_gol https://docs.google.com/document/d/1uhcW9_TlSwD8JnO1_HNnSYJAriTK9WYZ8uQNDvtAAhA/edit
[12:01:21] <markelog> hey-hey
[12:03:03] <m_gol> present
[12:03:34] <DaveMethvin> lets see if gibson042 shows up, or did he say he couldn't  make it?
[12:03:43] <m_gol> I don't recall
[12:03:49] <markelog> i don't too
[12:04:13] <DaveMethvin> i don't recall seeing anything from him about it
[12:05:26] <DaveMethvin> ok, let's give it a minute, add anything you think we need to discuss in notes
[12:06:07] <m_gol> markelog: "Remove support for Yandex.Browser?" That's interesting :-)
[12:06:43] <m_gol> Is it because BrowserStack is not updating it or why?
[12:07:00] <markelog> yep
[12:07:06] <DaveMethvin> that's a pain
[12:07:16] <DaveMethvin> is the old version just not worth testing?
[12:07:22] <m_gol> it still has a version from 2014
[12:07:23] <markelog> yeah and i'm not sure if i want to bug them about it
[12:07:27] <markelog> yep
[12:07:29] <DaveMethvin> wow
[12:07:33] <markelog> it is like two years old
[12:07:42] <markelog> m_gol: exactly
[12:07:43] <m_gol> even though I bugged them about it multiple times
[12:07:46] <markelog> which is not used anymore
[12:07:48] <m_gol> I'm sure Oleg did, too
[12:07:53] <markelog> couple times
[12:07:58] <markelog> but my thinking is this
[12:08:07] <markelog> if they spinning those vm only for us
[12:08:16] <markelog> and no one uses except for us
[12:08:36] <markelog> it could be seen as a bit unfair, very friendly, but unfair
[12:08:45] <markelog> to them that is
[12:08:52] <DaveMethvin> yeah i got a bit worried about us burning up all our time this weekend
[12:09:00] <DaveMethvin> same thing
[12:09:19] <DaveMethvin> i don't want to bother them since we get a lot for free
[12:09:28] <m_gol> I'd vote to drop it then
[12:09:41] <DaveMethvin> yeah me too if it's ok with markelog
[12:09:42] <markelog> yeah, i guess we want to have a good relationship with them and were very cool and staff
[12:09:44] <m_gol> we can always add it back later but if we wanted to drop we'd have to wait for 4.0
[12:09:51] <markelog> yeah
[12:10:14] <markelog> we would need to do the same for sizzle
[12:10:20] <m_gol> ok, if we're ok with dropping that I can update the browser-support page
[12:10:30] <m_gol> I've been maintaining the jquery-3 branch there for some time :)
[12:10:39] <DaveMethvin> yep, i'll note that
[12:10:40] <markelog> oh, i can deal with all those issues m_gol :)
[12:10:58] <markelog> we would also need to remove it from swarm
[12:11:01] <markelog> and from sizzle
[12:11:03] <markelog> update docs
[12:11:11] <markelog> and sizzle docs :)
[12:11:16] <m_gol> k
[12:11:31] <DaveMethvin> who wants to remove the swarm job?
[12:11:32] <m_gol> about Sizzle
[12:11:43] <m_gol> don't we need to bump the major if we want to drop it?
[12:11:58] <markelog> do we?
[12:12:04] <m_gol> I can remove it from swarm, I've been maintaining that list as well ;)
[12:12:21] <m_gol> I guess that depends on if you treat the browser support matrix as part of the API contract
[12:12:30] <m_gol> The semver spec is not really helping here
[12:13:06] <DaveMethvin> i think it would be fine to add browsers in the middle of a major if they are already passing, was that the case for yandex?
[12:13:09] <markelog> i'm seeing it as consequences of my actions and therefore it is my responsibility to deal it and not created any time waste for anybody else :)
[12:13:24] <m_gol> k, go for it then ;)
[12:13:47] <m_gol> although I've been planning to update browsers on swarm
[12:13:57] <m_gol> I've been doing it every few weeks
[12:14:02] <m_gol> so I can remove Yandex at the same time
[12:14:06] <markelog> do you have a timer?
[12:14:07] <markelog> :)
[12:14:16] <m_gol> in my head ;)
[12:14:28] <markelog> i can probably deal with it too
[12:14:50] <markelog> if you okay with this
[12:15:05] <m_gol> Chrome & Opera need updating, I have the repo open now
[12:15:34] <m_gol> ok, maybe let's move to the next topic :)
[12:15:35] <m_gol> IE 11
[12:15:50] <m_gol> Dave, do we wait for Jacob or can you ping someone?
[12:16:25] <DaveMethvin> i think we should just pull it, the only reason we put it in was because they said it wouldn't be fixed
[12:16:38] <DaveMethvin> and it was clearly fixed at least for some versions or os combinations
[12:16:39] <m_gol> yeah, but I'd still want some confirmation
[12:16:41] <m_gol> that it stays
[12:16:46] <m_gol> the fix, that is
[12:16:57] <m_gol> I'd hate to revert the patch and then see the bug return :P
[12:17:09] <DaveMethvin> it's a pretty shady patch anyway :)
[12:17:23] <m_gol> that's kind of sad that they said it wouldn't be fixed and it was ;)
[12:17:23] <DaveMethvin> that indirect feature test is pretty unreliable
[12:17:30] <m_gol> that is true, indeed
[12:17:47] <gibson0421> argh, sorry I'm late again
[12:17:53] <gibson0421> so
[12:17:54] <m_gol> maybe that's a lesson to avoid this kind of patches...
[12:18:06] <DaveMethvin> yeah, let's just post in that ticket that we're pulling the patch and see if anyone from MS responds
[12:18:17] <m_gol> ok, I'll do it
[12:18:43] <DaveMethvin> hey gibson0421
[12:18:57] <gibson0421> pulling up the notes now
[12:19:19] <markelog> hey-hey
[12:19:21] <DaveMethvin> so we started in the middle
[12:19:26] <DaveMethvin> let's go back up top
[12:19:48] <DaveMethvin> the upgrade guide is basically ready except for a few small things
[12:20:02] <DaveMethvin> so read it through and i guess do either issues or PRs for fixes
[12:20:20] <DaveMethvin> it needs an example for the show/hide changes
[12:20:33] <DaveMethvin> and a new section on strict if we're doing that
[12:20:37] <DaveMethvin> i think we should try it
[12:21:01] <DaveMethvin> the problem code that made us back it out was an old asp.net event handler
[12:21:13] <DaveMethvin> and that age of code is not going to use jquery 3.0 anyway
[12:21:51] <gibson0421> that's my thinking as well; unguarded `arguments.callee.caller` is asking for trouble
[12:22:16] <m_gol> that BrowserStack issue would be caused by anything that causes a SyntaxError in some browsers and that linters & the build script wouldn't catch
[12:22:53] <m_gol> and if UglifyJS generates that code linters would definitely not catch it :-)
[12:23:01] <DaveMethvin> also i feel like we just need to get 3.0 out there, just like 2.0 it will take time until people start to use it so we can fix things as they are reported
[12:23:08] <m_gol> yup
[12:23:08] <gibson0421> unless we check the minified output
[12:23:32] <m_gol> gibson0421: maybe we should but then we need to disable most rules
[12:23:47] <m_gol> but it seems like a good idea to me
[12:24:05] <m_gol> I wouldn't do it with JSHint/JSCS, though
[12:24:08] <m_gol> but with ESLint
[12:24:14] <gibson0421> I wouldn't _lint_ it per se, but trying to validate e.g. an AST maybe
[12:24:17] <m_gol> to not write sth that will need to be changed soon
[12:24:50] <markelog> i wouldn't lint it, not sure about validation, would be interested in seeing proof of concept
[12:25:10] <markelog> but it seems like a story for post 3.0
[12:25:14] <m_gol> definitely
[12:25:19] <DaveMethvin> i like the idea of switching to ESLint for the long term, but no hurry
[12:25:24] <gibson0421> yes
[12:25:30] <markelog> yeah, working on this
[12:25:40] <DaveMethvin> so strict mode, forge ahead?
[12:25:59] <DaveMethvin> i think we shoudl try
[12:26:40] <m_gol> https://github.com/jquery/jquery/issues/307
[12:26:42] <gibson0421> no surprise here, but I agree
[12:26:56] <m_gol> https://github.com/jquery/jquery/issues/3075
[12:27:00] <m_gol> sorry, I ate the 5 :)
[12:27:01] <markelog> if we are, i would like for us to have ticket where everything related to the strict mode hacks would be stored
[12:27:26] <gibson0421> so far, there are no hacks
[12:27:34] <markelog> since as of now, we have couple of them and want for them to stay in permanent terms
[12:27:38] <DaveMethvin> yeah i don't think we're hacking on our side
[12:27:50] <m_gol> I don't think issues are a place to gather a list of things that needed to be changed
[12:28:09] <DaveMethvin> the "use strict" being part of the wrapper seems logical and stripping in the build code is the right approach
[12:28:11] <markelog> i showed examples in my recent comment
[12:28:16] <m_gol> we've only discussed adding one hack which is stripping excessive use stricts in the build process
[12:28:20] <markelog> but i can come with the that list again
[12:28:23] <gibson0421> markelog: can you be explicit, here?
[12:28:43] <markelog> right now? Or after the meeting?
[12:28:44] <gibson0421> I am not aware of any strict-mode hack in master
[12:28:55] <DaveMethvin> there's an uglify bug but that's not our fault and we can work around it
[12:29:00] <gibson0421> there's a ticket to add the "use strict" directives everywhere
[12:29:12] <gibson0421> we have worked around the uglify bug
[12:29:13] <markelog> "workaround" === "hack"
[12:29:28] <gibson0421> the workaround was moving a single function declaration
[12:29:38] <gibson0421> which can be permanent
[12:29:52] <m_gol> and it should stop being needed soon anyway, but yeah, the change may stay
[12:29:55] <DaveMethvin> in any case i don't think those recommend against avoiding "use strict" do they?
[12:30:05] <markelog> i'm not sure what this is - https://github.com/jquery/jquery/commit/cf1497a58cd088d3f293d655803d230ee4cc4c07
[12:30:08] <markelog> and why we did this
[12:30:10] <gibson0421> and then there's an unvetted proposal to strip out "use strict" directives after we have dozens of them
[12:30:37] <gibson0421> markelog: that reverts the +90 commit that was put in place to stop the bleeding
[12:30:52] <DaveMethvin> well to stop the Browserstack abuse
[12:31:00] <markelog> this doesn't sound good to me
[12:31:11] <markelog> so without this change
[12:31:18] <markelog> browsertack will halt
[12:31:28] <markelog> which just moving around the code
[12:31:32] <markelog> which worked fine before
[12:31:39] <markelog> for some unclear reason
[12:31:42] <m_gol> yes, and Uglify already has a PR fixing this bug
[12:32:00] <DaveMethvin> yeah it's an uglify bug, they were the ones that mangled the code! :)
[12:32:03] <markelog> that is why this has to be temporary solution
[12:32:10] <gibson0421> it doesn't have to be temporary
[12:32:22] <markelog> cause now this looks like a hack
[12:32:26] <DaveMethvin> markelog: are you making the case against "use strict" here?
[12:32:29] <gibson0421> what looks like a hack?
[12:32:38] <markelog> no, i'm okay leaving it
[12:32:39] <gibson0421> markelog: https://github.com/jquery/jquery/compare/cf1497a58cd088d3f293d655803d230ee4cc4c07%5E%5E%5E%5E...cf1497a58cd088d3f293d655803d230ee4cc4c07
[12:32:58] <markelog> since, users might reveal other issues
[12:33:00] <gibson0421> the actual change was just to move computeStyleTests
[12:33:01] <markelog> but, we have to be very careful with it
[12:33:16] <DaveMethvin> ok then it sounds like we're go for "use strict" and will see what happens
[12:33:22] <DaveMethvin> as with all our 3.0 changes
[12:33:40] <markelog> gibson0421: when you move code around to overpower breakage in ci for unclear reason
[12:33:45] <markelog> that looks like a hack
[12:33:57] <markelog> which increases the size nontheless
[12:34:10] <gibson0421> so maybe the _commit_ looks like a hack, but the resulting code is fine
[12:34:11] <markelog> yes, but i would want to keep list of it
[12:34:36] <markelog> so, if like uglify would fix a bug
[12:34:46] <markelog> who is to say, that current code wouldn't increase the size again?
[12:35:14] <markelog> that kind of questions are bothering me
[12:35:17] <gibson0421> then we would see that in the commit that updates our uglify dependency
[12:35:21] <gibson0421> and react accordingly
[12:35:53] <gibson0421> they could easily hoist/de-hoist ALL inner function declarations, or convert to function expressions
[12:35:57] <markelog> yeah, that doesn't sound good
[12:36:10] <gibson0421> the proposed uglify fix actually sucks
[12:36:10] <markelog> also this - https://github.com/jquery/jquery/commit/76084372c29a59b3fa790ea4d2687f0767514999
[12:36:11] <DaveMethvin> anyway, all these decisions can be revisited if they cause too much pain, but let's not anticipate pain that hasn't occurred
[12:36:15] <markelog> are also not ideal
[12:36:28] <DaveMethvin> let's only avoid the risks we can reasonably foresee
[12:36:37] <DaveMethvin> not the ones we hypothesize
[12:36:57] <markelog> i was talking about only these actions that we already launched
[12:37:24] <markelog> like one amd module now have "use strict" and others do not
[12:37:24] <gibson0421> which of them do you foresee reverting before 4.0?
[12:37:26] <DaveMethvin> none of them seem that bad. An uglify bug, and a change to our wrapper remover
[12:37:28] <m_gol> hmm, I haven't looked at the Uglify fix, what does it do?
[12:37:48] <gibson0421> https://github.com/mishoo/UglifyJS2/pull/1053/files
[12:37:50] <markelog> DaveMethvin: also regexs strip, and changing every single file
[12:37:58] <m_gol> btw, this +4 bytes might be unavoidable as we only saved them because we had function declarations within blocks which is disallowed
[12:38:02] <markelog> so amd modules would be used in strict mode too
[12:38:13] <markelog> that btw, should be a blocker
[12:38:57] <markelog> talking about this - https://github.com/jquery/jquery/issues/3073
[12:39:01] <m_gol> I can take https://github.com/jquery/jquery/issues/3073
[12:39:10] <m_gol> but I agree, it should block
[12:39:16] <gibson0421> I don't consider gh-3073 to be a blocker
[12:39:23] <gibson0421> we only distribute built files
[12:39:27] <m_gol> no
[12:39:28] <gibson0421> which are now strict
[12:39:32] <m_gol> we distribute AMD modules as well
[12:39:36] <markelog> yes
[12:40:00] <markelog> and no matter what kind of distribution user is choses mode should be the same
[12:40:15] <markelog> anyways, marking it as a blocker for now
[12:40:19] <DaveMethvin> yeah i think we'd want strict everywhere
[12:40:55] <DaveMethvin> so the next release, i think it shoudl be a beta...we've changed a lot and may need to make some changes before we can say it's an rc
[12:41:08] <markelog> could be hell of a revert
[12:41:09] <markelog> :)
[12:41:12] <DaveMethvin> but we really  need to get something shipped soon
[12:41:23] <m_gol> I can do 3073 today
[12:41:32] <markelog> i would propose to not add anymore features
[12:41:38] <DaveMethvin> awesome
[12:41:38] <gibson0421> jQuery.when pull is 80% done and will be ready today
[12:41:56] <DaveMethvin> markelog: i agree, we just have found some sticky issues trying to fix these last few bugs
[12:42:07] <DaveMethvin> that lead down a rabbit hole at times
[12:42:15] <gibson0421> amen
[12:42:24] <markelog> i remember we wanted to release in January :)
[12:42:33] <DaveMethvin> at least for this release we have an upgrade guide for docs
[12:42:39] <markelog> snowball and staff
[12:42:50] <m_gol> can https://github.com/jquery/jquery/issues/3056 wait for 3.1.0?
[12:43:13] <DaveMethvin> it could but I think i can get it done in the next few days
[12:43:20] <DaveMethvin> if i don't we could push it
[12:43:21] <markelog> i would add it in 3.0
[12:43:45] <DaveMethvin> it was blocked by that pr from the guy who identified the problem
[12:43:53] <m_gol> ok, but reviewing takes time as well so let's not add anything else to 3.0.0 :)
[12:44:01] <DaveMethvin> yeah i know
[12:44:14] <m_gol> even if we have a PR ready
[12:44:16] <gibson0421> not a blocker IMO, but could make it in if a PR is ready
[12:44:25] <markelog> although, one might argue that this is approach is not used anymore
[12:44:35] <markelog> so we could just wait user reaction
[12:44:40] <markelog> and re-add it in 3.1
[12:44:53] <markelog> if needed
[12:45:04] <DaveMethvin> it is definitely an edge case so not critical
[12:45:13] <m_gol> that's mostly a process thing but it seems perfectly fine to me to marks something as planned for 3.1.0 and if by any chance it lands before 3.0.0 final, change back the milestone
[12:45:19] <m_gol> at least it's not blocking the list then
[12:45:25] <m_gol> not making it longer
[12:45:36] <m_gol> * to marks -> to mark
[12:45:46] <DaveMethvin> i do think we need to land https://github.com/jquery/jquery/pull/3030 since it's a removal
[12:46:01] <DaveMethvin> but the adding back could happen in 3.1 if needed
[12:46:17] <markelog> btw - https://github.com/jquery/jquery/pull/3076
[12:47:05] <markelog> DaveMethvin: we would need to change migrate docs and message in it, right?
[12:47:14] <markelog> after we land revert
[12:47:43] <DaveMethvin> i can check but we *do* want to say it's deprecated
[12:48:12] <markelog> yeah, that is why i said "change" not "remove" :)
[12:48:22] <DaveMethvin> and we can fill it even if it's not removed
[12:48:27] <m_gol> should we add 3030 to the 3.0.0 milestone then?
[12:48:37] <DaveMethvin> m_gol: yes
[12:48:43] <m_gol> ok, added
[12:48:53] <DaveMethvin> if he doesn't respond I'll grab it
[12:49:10] <markelog> what he needs to do though?
[12:49:26] <markelog> like i see a question from his side, not from ours
[12:49:46] <DaveMethvin> i asked him to put the checks into ajax
[12:49:56] <DaveMethvin> we're not checking that now
[12:50:18] <markelog> oh, in https://github.com/jquery/jquery/issues/3023
[12:50:43] <markelog> so that is in the issue not in the pull
[12:50:45] <markelog> ok-ok
[12:51:05] <DaveMethvin> https://github.com/jquery/jquery/issues/3023#issuecomment-209990397
[12:51:07] <DaveMethvin> yeah sorry
[12:51:08] <m_gol> yeah, I was looking what https://github.com/jquery/jquery/pull/3030#issuecomment-214437175 refers to & couldn't find it :)
[12:52:55] <DaveMethvin> i've got to run, does it look like we can get all this done in the next few days?
[12:53:06] <gibson0421> I'm inclined to say yes
[12:53:36] <markelog> we saying that for couple weeks :), so i would be conservative
[12:53:42] <gibson0421> :P
[12:53:44] <DaveMethvin> it would be great to get another beta out this week
[12:53:58] <DaveMethvin> i will do what I can
[12:53:59] <gibson0421> I'll have you know that my new Deferred tests _just_ passed
[12:54:03] <DaveMethvin> YAY!
[12:54:16] <markelog> i can probably take a day from my schedule, so if anyone needs some help, ping me up
[12:54:25] <DaveMethvin> ok great
[12:54:52] <DaveMethvin> ok i will close the channel but if theres more to talk about we can take it to -dev
