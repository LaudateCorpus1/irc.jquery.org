[09:01:08] <DaveMethvin> woo hoo!
[09:01:16] <DaveMethvin> i have decent internet!
[09:01:28] <DaveMethvin> who's here today?
[09:02:09] <gibson0421> I am, but (per the last few weeks) barely
[09:02:26] <markelog> hey-hey
[09:02:46] <DaveMethvin> m_gol maybe?
[09:03:12] <DaveMethvin> who knows if we got all the time zone stuff straightened out
[09:03:33] <DaveMethvin> this time of year it seems to change for someone every week
[09:04:06] <markelog> for me it's 8pm
[09:04:32] <DaveMethvin> no wonder I had jet lag going to moscow, 8 hours! :)
[09:04:39] <DaveMethvin> england is only 5
[09:04:51] <DaveMethvin> "only"
[09:05:07] <DaveMethvin> okay, so I'd love to start landing some of the 3.0 stuff
[09:05:40] <DaveMethvin> if anything is blocking us let me know
[09:06:01] <DaveMethvin> i saw a bunch of little things i will assign to me and work on in the next day
[09:06:40] <DaveMethvin> please do land anything that seems ready
[09:07:11] <DaveMethvin> generally i tend to get more done during the holidays so i'm hoping we can get a beta out in the next month
[09:07:25] <gibson0421> same here
[09:07:32] <markelog> same )
[09:07:34] <DaveMethvin> any specific concerns with any of your PRs or issues?
[09:08:09] <DaveMethvin> it seems like mostly a matter of getting it done :)
[09:08:18] <markelog> i remember we need to redo - https://github.com/jquery/jquery/pull/1652
[09:08:20] <DaveMethvin> which is the hard part in my experience
[09:08:32] <markelog> which requires changes in Sizzle too
[09:08:43] <m_gol> present
[09:09:20] <m_gol> I need to finish my PR for dropping older browsers
[09:09:35] <m_gol> gibson0421 had some remarks; I'm going to address them today/tomorrow
[09:09:49] <DaveMethvin> also, this sizzle ticket looks like it should be ported https://github.com/jquery/jquery/issues/1874
[09:09:55] <DaveMethvin> but it seems easy to fix
[09:10:00] <m_gol> so it may land in the next meeting probably
[09:10:03] <DaveMethvin> not sure why it was wrapped with a function
[09:10:47] <gibson0421> DaveMethvin: arguments
[09:11:12] <gibson0421> we didn't want to figure out if setDocument was called with an event
[09:11:23] <m_gol> we should just save the wrapper to a separate function
[09:12:02] <DaveMethvin> yeah that would avoid dups
[09:12:03] <gibson0421> yeah, it's either one or the other. probably whichever is faster
[09:12:09] <gibson0421> oh, n/m
[09:12:09] <gibson0421> yes
[09:12:15] <gibson0421> save the wrapper
[09:14:19] <m_gol> DaveMethvin: I had a question about http://bugs.jquery.com/ticket/4320
[09:14:21] <DaveMethvin> to markelog's point, should we solve the dups problem in sizzle by clearing the expando?
[09:14:29] <DaveMethvin> go ahead m_gol
[09:14:41] <m_gol> I can're reproduce the bug on the attached test case
[09:15:20] <DaveMethvin> in IE7 you mean?
[09:15:27] <m_gol> yeah, even in IE7
[09:15:33] <m_gol> I wanted to check if the issue is fixed in IE8
[09:15:43] <m_gol> but since I cannot reproduce it even in IE7, I wonder if the test case is valid
[09:15:47] <m_gol> I wanted to check if we need those document.body checks
[09:15:50] <m_gol> in compa
[09:15:51] <m_gol> t
[09:16:16] <DaveMethvin> not sure, i know sometimes old IE would go ready before document.body existed
[09:16:25] <DaveMethvin> but not sure when it was fixed
[09:17:03] <markelog> that might be fixed after ie6, worth invistigating
[09:17:21] <m_gol> I think I couldn't even reproduce it in IE6
[09:17:31] <DaveMethvin> well the test case doesn't fail in ie8 so i guess we pull it out?
[09:17:32] <m_gol> but the report was specifically abot IE7
[09:17:33] <markelog> i can :-)
[09:17:40] <DaveMethvin> oh good
[09:17:42] <markelog> i can reproduce in anything in ie6
[09:17:44] <markelog> :)
[09:17:46] <m_gol> ok, I'll need to check again
[09:17:46] <m_gol> hahaha
[09:17:57] <DaveMethvin> i can't even get ie6 to run
[09:17:59] <DaveMethvin> :)
[09:18:12] <m_gol> I used this HTML: http://bugs.jquery.com/attachment/ticket/4320/test-4320.html
[09:18:16] <m_gol> on my local server
[09:18:33] <m_gol> DaveMethvin: even on BrowserStack? :P
[09:18:50] <DaveMethvin> i think yandex has some big pile of ie6es that markelog can break :)
[09:19:20] <DaveMethvin> that test case is kind of funny since it has an XHTML header and IE doesn't support XHTML until IE10
[09:19:35] <markelog> i have a lot of things that i could break in Yandex :-)
[09:19:40] <DaveMethvin> haha
[09:20:36] <m_gol> DaveMethvin: back in the days everyone pretended they like XHTML
[09:20:44] <m_gol> and served it as text/html anyway :P
[09:20:57] <DaveMethvin> so markelog can you repro that problem in IE8 too?
[09:22:24] <markelog> nope
[09:22:56] <markelog> this case is very tricky
[09:22:59] <DaveMethvin> oh good so there's your answer m_gol
[09:23:16] <markelog> you need to specially config ie in order to repro it
[09:23:24] <m_gol> I have an impression we'll cut out a little too much and we'll have to restore something in 3.0.1
[09:23:33] <m_gol> markelog: oh boy, I love those ones
[09:24:04] <markelog> btw, i misremember it, it could be repro in ie7, but all good in ie8
[09:24:10] <DaveMethvin> btw i re-titled all the shadow dom ticket, i'd rather have it in one place at least for now
[09:24:14] <DaveMethvin> https://github.com/jquery/jquery/issues/1784
[09:24:47] <DaveMethvin> i really don't think the shadow dom behavior has been thought through that well
[09:25:34] <DaveMethvin> last week we were at chrome dev summit and they seem to think that these kind of use cases are not valid
[09:26:14] <DaveMethvin> even if you're not using jquery tho i would think you'd need to do some of these things
[09:26:23] <DaveMethvin> e.g. position a tooltip
[09:27:21] <m_gol> did you mention such examples to them?
[09:27:26] <DaveMethvin> yeah
[09:27:41] <DaveMethvin> didn't get a chance to discuss in detail though
[09:28:02] <DaveMethvin> i would like to pull some of them in on these tickets to see how they would solve it
[09:28:09] <DaveMethvin> really it's similar to the CSS dilemma
[09:28:22] <DaveMethvin> sometimes the main page wants to poke through the shadow dom for css
[09:28:36] <DaveMethvin> so it seems reasonable you'd want to sometimes do that for js as well
[09:28:51] <m_gol> but it would be separate APIs then, probably
[09:29:00] <m_gol> so that the default is isolated
[09:29:03] <DaveMethvin> but many of the dom apis behave strangely b/c it's technically not in the parent doc
[09:29:11] <DaveMethvin> yeah
[09:29:19] <m_gol> so we'll have to decide if we want to defer to those new APIs or not
[09:29:30] <DaveMethvin> and therefore it seems like we shouldn't magically ignore the boundary
[09:29:35] <m_gol> seems that we shouldn't work around the standard
[09:29:39] <DaveMethvin> right
[09:29:43] <m_gol> and it by default it's isolated we should respect that
[09:30:03] <m_gol> but then either we don't cover the new APIs case at all or we invent a new set of our APIs that use those new ones
[09:30:09] <m_gol> ugly either way ;)
[09:30:12] <DaveMethvin> maybe have some special case where if the context is a shadowroot we behave differently?
[09:30:28] <DaveMethvin> but yeah it gets ugly if a lot of apis have to be adjusted
[09:30:38] <DaveMethvin> and people expect regularity
[09:31:19] <DaveMethvin> it's similar to the iframe boundary but more confusing since it *seems* to be in the same doc
[09:31:23] <m_gol> anyway, I don't think we should implement anything to the public until we know where it leads
[09:31:43] <markelog> i.e. implement stady in most browsers?
[09:31:51] <m_gol> or at least 2 of them
[09:32:16] <markelog> i'd say we should wait until ie will get in the game
[09:32:24] <DaveMethvin> really chrome is the only browser to deal with this right now
[09:32:25] <markelog> they working pretty hard on new things
[09:32:41] <DaveMethvin> yeah we need at least one other browser to deliver something
[09:32:47] <markelog> so that might be a sign to look at it more closely
[09:32:50] <DaveMethvin> they may find a lot of these problems themselves
[09:33:11] <DaveMethvin> did everyone see https://github.com/jquery/jquery/issues/1875 ?
[09:33:20] <DaveMethvin> PR looked good to me, much cleaner to do it that way
[09:33:54] <markelog> didn't check it out yet
[09:33:56] <DaveMethvin> the old "solve the problem with a regex, now you have two problems" seems appropriate here
[09:33:59] <DaveMethvin> :)
[09:34:07] <markelog> probably :-)
[09:34:28] <markelog> althoug "solve the problem with a DOM, now you have two problems"
[09:34:41] <markelog> might be aplied as well sometimes :-)
[09:35:08] <DaveMethvin> yeah
[09:35:27] <DaveMethvin> i'd think that creating an <a> shoudl be pretty cheap
[09:35:41] <DaveMethvin> and plus, it's doing an async operation right after that so not perf critical
[09:35:46] <markelog> although definatly slower, but that shouldn't matter
[09:35:57] <markelog> right :-)
[09:36:02] <m_gol> yeah, +1
[09:36:14] <markelog> sending request is never slow
[09:36:23] <DaveMethvin> there's a bunch of discussion going on about how to support different dependency managers
[09:36:24] <markelog> while waiting for it
[09:36:41] <markelog> ...
[09:36:43] <m_gol> hahaha
[09:36:58] <DaveMethvin> oh but before that https://github.com/jquery/jquery/pull/1879
[09:37:18] <markelog> -1 from me, to edge
[09:37:31] <DaveMethvin> yeah especially if it takes a global
[09:37:58] <m_gol> if we started to author in ES6 and compile to AMD/CommonJS, they could require modules they want avoiding all these factories
[09:38:00] <markelog> plus we can't test this stuff
[09:38:05] <DaveMethvin> good point
[09:38:15] <m_gol> I'd rather go this route than complicate this untestable intro any more
[09:38:24] <DaveMethvin> i'll close this ticket
[09:38:46] <m_gol> we've already spent way too much time on intro.js
[09:39:10] <DaveMethvin> yeah, i think that's part of the complaint
[09:39:20] <m_gol> in 2 years we'd have intro.js the size of Zepto
[09:39:38] <DaveMethvin> each library has to manage all this wrapper crap so that the consumer can use in any imaginable module system
[09:40:04] <DaveMethvin> it's like being a farmer and growing carrots, then having people complain that you don't offer them loose, or in bags, or in plastic wrappers, or ...
[09:40:17] <DaveMethvin> JUST EAT THE CARROTS AND SHUT UP!
[09:40:23] <markelog> ))
[09:40:35] <m_gol> "I want to take carrots in my own bag!"
[09:40:59] <DaveMethvin> i want a paper bag!
[09:41:06] <DaveMethvin> here is some other discussion https://github.com/tildeio/rsvp.js
[09:41:14] <DaveMethvin> trek has been pushing this for a while
[09:41:20] <DaveMethvin> and he commented in our thread
[09:41:28] <m_gol> DaveMethvin: you mean https://github.com/tildeio/rsvp.js/issues/327
[09:41:45] <DaveMethvin> yep, whoops, i chopped too much :)
[09:42:11] <DaveMethvin> just haven't gotten around to chiming in there
[09:42:53] <m_gol> here's one comment: https://github.com/jquery/jquery/issues/1691#issuecomment-63981724
[09:43:10] <m_gol> I don't like that he proposes not publishing ES6 modules to npm; why not?
[09:43:25] <m_gol> I'd rather have the world slowly move to one format instead of isolated silos
[09:43:41] <m_gol> and not publishing ES6 modules to npm would actively hamper that
[09:44:00] <m_gol> it seems on npm we'd have to publish all versions: source ES6, transpiled to AMD, transpiled to CommonJS
[09:44:15] <m_gol> since people can download jQuery from npm but use with AMD, no problem with that
[09:44:39] <DaveMethvin> and the frustrating part is that 80% or more just want the  minified file!!!!!
[09:44:47] <DaveMethvin> so we're complicating distribution
[09:44:59] <m_gol> yeah, I already see the flow of people complaining about that
[09:45:08] <m_gol> long-term I don't see a better solution, though
[09:45:09] <DaveMethvin> right, b/c it bloats their project
[09:45:27] <m_gol> people will need AMD in the foreseeable future but we should jump into the ES6 train anyway and advocate that
[09:45:39] <m_gol> not sure if for 3.0.0 but soon anyway
[09:46:07] <DaveMethvin> i like the idea of just moving to ES6 modules but then we still need to keep AMD around since some are using it
[09:46:29] <DaveMethvin> distribution repos help in some ways but are still a mess
[09:46:30] <m_gol> hopefully we could find a ready transpiler
[09:46:35] <m_gol> to AMD/CommonJS
[09:46:42] <m_gol> and not do it ourselves, that would be messy
[09:46:48] <DaveMethvin> agreed
[09:46:59] <DaveMethvin> we're not Angular after all :)
[09:47:09] <DaveMethvin> ba-dum-pum!
[09:47:24] <m_gol> angular.module is so terrible
[09:47:46] <DaveMethvin> i do like some of the js enhancements like typescript since they add almost no overhead
[09:47:58] <DaveMethvin> dojo is writing all their new stuff in TS
[09:48:03] <m_gol> interesting
[09:48:14] <m_gol> I worry that any non-standard stuff will limit participation
[09:48:24] <m_gol> especially if we tried to enforce types where we can
[09:48:30] <DaveMethvin> but i don't know of any TS compiler that does ES6 modules so it's kind of a non starter until that happens
[09:48:41] <DaveMethvin> supposedly TS will update now that ES6 is standardized
[09:48:45] <m_gol> TS 2.0 will ;)
[09:49:06] <DaveMethvin> but then again, jquery has a pretty nasty API for types ::)))))
[09:49:21] <m_gol> there's this: https://github.com/esnext/es6-module-transpiler
[09:49:25] <m_gol> true ;)
[09:49:30] <DaveMethvin> $(ANYTHING-YOU-WANT)
[09:49:48] <markelog> btw
[09:49:56] <markelog> i wanted to talk with you about it
[09:49:56] <DaveMethvin> oh that's interesting m_gol
[09:50:00] <DaveMethvin> maybe that would do the trick
[09:50:07] <DaveMethvin> sup markelog
[09:50:14] <markelog> you can use plain objects in $(ANYTHING-YOU-WANT)
[09:50:21] <m_gol> not sure how stable it is, though
[09:50:30] <markelog> should we continue to support it?
[09:50:49] <DaveMethvin> i don't think it costs us too much
[09:50:52] <markelog> it seems a bit weird, before it has some logic in it, but now, how would need that?
[09:50:57] <DaveMethvin> of course there are very few things supported on it
[09:51:09] <DaveMethvin> i think there's a list in $()
[09:51:23] <gibson0421> I don't think we should guarantee support for $( plainObject )
[09:51:34] <m_gol> I agree
[09:51:42] <DaveMethvin> At present, the only operations supported on plain JavaScript objects wrapped in jQuery are: .data(),.prop(),.on(), .off(), .trigger() and .triggerHandler(). The use of .data() (or any method requiring .data()) on a plain object will result in a new property on the object called jQuery{randomNumber} (eg. jQuery123456789).
[09:51:49] <DaveMethvin> http://api.jquery.com/jquery/
[09:52:28] <gibson0421> I'm fine with $([ plainObject, ... ]), it's just a subcase of $( arrayLike )
[09:52:30] <DaveMethvin> so not a lot of apis can be used, basically you can create an object and trigger stuff on it
[09:52:52] <markelog> so should we dropped entirly?
[09:53:07] <DaveMethvin> so what does removing $(plainObject) buy if $([plainObjects...]) stays?
[09:53:08] <markelog> and say to people that you shouldn't do that?
[09:53:19] <gibson0421> I don't care if $( plainObject ) continues to work; I just don't want to guarantee it
[09:53:32] <gibson0421> simplifies the constructor signatures
[09:53:36] <markelog> $([plainObjects...])  should it stay?
[09:53:57] <gibson0421> markelog: yes, but without reference to plain objects
[09:54:15] <DaveMethvin> tbh i'd just prefer to deprecate plain objects then, but i don't think we should remove it in 3.0
[09:54:24] <gibson0421> DaveMethvin: +1
[09:54:28] <markelog> sounds good
[09:54:35] <markelog> will create doc issue about that
[09:54:45] <gibson0421> valid input to constructor: selector; arrayLike; html string; function; DOM element
[09:55:30] <gibson0421> and I still might have missed one or two
[09:56:05] <DaveMethvin> stuff like $(document).attr("location") drives me nuts!
[09:56:07] <markelog> arrayLike - remaind about that, what is the use-case?
[09:56:23] <DaveMethvin> arrays of dom elements, but not plain objects now
[09:56:29] <gibson0421> make a list a jquery collection
[09:56:39] <markelog> oh, i see :-)
[09:56:49] <gibson0421> NodeList or maybe hand-constructed array
[09:57:09] <DaveMethvin> right like getElementsByClassName
[09:57:10] <markelog> "hand-constructed array" for what?
[09:57:26] <markelog> I get about NodeList, but any other array?
[09:57:39] <gibson0421> painting outside the lines is my guess
[09:57:43] <gibson0421> could be plain objects
[09:57:45] <gibson0421> text nodes
[09:57:50] <gibson0421> etc.
[09:57:53] <DaveMethvin> it's faster to construct as an array and turn into jquery at once
[09:57:58] <gibson0421> also that
[09:58:07] <markelog> okay, got it
[09:58:23] <DaveMethvin> especially b/c .add() sorts the nodes as you add them :)
[09:58:52] <DaveMethvin> also if you $([array])  you can get a specific order
[09:59:04] <DaveMethvin> so m_gol did you want to talk about https://github.com/jquery/jquery/pull/1847
[09:59:16] <m_gol> yeah, any objections?
[09:59:21] <DaveMethvin> do it! :)
[09:59:26] <m_gol> k :)
[09:59:39] <m_gol> there are some things that turned out to be not needed on master
[09:59:55] <markelog> maybe we could cc original contributors in that?
[09:59:57] <m_gol> when I was preparing the PR for compat to drop older browsers
[10:00:13] <m_gol> so I'll submit a PR with those changes after that other one lands
[10:00:31] <DaveMethvin> oh good idea markelog, it's a couple of years old so i assumed the phones that were old at the time would be gone
[10:00:35] <DaveMethvin> but we can cc them
[10:00:51] <DaveMethvin> yeah, anything we can clean up would be good
[10:00:56] <DaveMethvin> there's always 3.0.1 :)
[10:01:00] <markelog> maybe they could provide some context
[10:01:03] <markelog> true that!
[10:01:05] <markelog> :-)
[10:01:17] <DaveMethvin> some crazy japanese phone as i remember
[10:01:28] <m_gol> it's hard to cc people from bugs.jquery.com, though
[10:01:45] <DaveMethvin> oh true, and their accounts are gone
[10:01:48] <DaveMethvin> oh well ....
[10:01:52] <DaveMethvin> okay that's it for me
[10:01:53] <markelog> you have they handles in the commit :-)
[10:02:03] <DaveMethvin> oh cool then
[10:02:29] <markelog> oh, even gibson0421 in the original thread :-)
[10:02:49] <DaveMethvin> alrighty, let's get some stuff done! i should be around this week so ping me if you need anything
