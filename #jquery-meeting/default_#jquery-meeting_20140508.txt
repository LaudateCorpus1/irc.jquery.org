[11:01:29] <uGoMobi> arschmitz _|Nix|_ gseguin cgack agcolom
[11:02:05] <gseguin> be right there
[11:02:11] <cgack> hey
[11:02:25] <arschmitz> hi
[11:02:37] <_|Nix|_> Hey, all!
[11:02:48] <uGoMobi> hey all
[11:04:23] <uGoMobi> _|Nix|_: I saw you started with table review
[11:04:48] <_|Nix|_> Yep.
[11:04:56] <_|Nix|_> It's actually kind of winding down.
[11:04:59] <uGoMobi> _|Nix|_: ran into problems
[11:05:00] <uGoMobi> ?
[11:05:03] <_|Nix|_> Nope.
[11:05:08] <_|Nix|_> Not so far, anyway.
[11:05:34] <_|Nix|_> Just one question: If we disable the table, which is now possible, people can still tab to links inside the panel and navigate to them.
[11:05:51] <_|Nix|_> Are we responsible for disabling stuff inside the table? I hope not.
[11:05:53] <arschmitz> _|Nix|_: panel?
[11:05:59] <uGoMobi> popup you mean?
[11:06:02] <_|Nix|_> s/panel/table/
[11:06:06] <uGoMobi> the toggle menu
[11:06:09] <_|Nix|_> Nono.
[11:06:10] <_|Nix|_> The table.
[11:06:17] <uGoMobi> oh
[11:06:24] <_|Nix|_> Like, in our demos, we have links to wikipedia to the movies.
[11:06:36] <_|Nix|_> If you disable the table, those links are still reachable with TAB.
[11:06:44] <arschmitz> i dont think we should do anything to those
[11:06:59] <arschmitz> it should disable functionality of the widget
[11:07:11] <arschmitz> those have nothing to do with the functionality of the widget
[11:07:39] <arschmitz> like with a button the button should not work because that IS the widget same with checkboxs and other things
[11:07:49] <_|Nix|_> arschmitz: Well, in a native toolkit, disabling the widget will render everyhing inside it disabled. However, in HTML it's a different story, because the table can contain literally anything.
[11:08:01] <_|Nix|_> arschmitz: Yeah, that's easily taken care of.
[11:08:20] <arschmitz> _|Nix|_: what do you mean native toolkit you cant disable and html table?
[11:08:44] <arschmitz> and / an
[11:08:47] <_|Nix|_> arschmitz: In a native toolkit like GTK, if I disable a container, everything it contains is inert to mouse/keyboard action.
[11:09:20] <_|Nix|_> arschmitz: In HTML, I can render the table intert to mouse action easily, but not to keyboard action.
[11:09:27] <_|Nix|_> s/intert/inert/
[11:09:40] <arschmitz> _|Nix|_: i dont think we should disable things inside a table
[11:09:58] <_|Nix|_> arschmitz: No, I don't think so either. That should be up to app devs.
[11:10:08] <arschmitz> i think we should make the popup disable and that we should make it so its not responsive anymore
[11:10:18] <_|Nix|_> arschmitz: Yeah, that's already done.
[11:10:25] <uGoMobi> _|Nix|_: the style doesn't change either?
[11:10:39] <_|Nix|_> uGoMobi: Nono. I add ui-state-disabled to the table and to the "Columns..." button.
[11:10:50] <uGoMobi> ok
[11:10:51] <_|Nix|_> uGoMobi: ... and I add tabindex=-1 to the columns button, and I disable the popup.
[11:11:15] <_|Nix|_> So, the button link is no longer reachable via either mouse or keyboard, and the table is no longer reachable via mouse.
[11:11:44] <uGoMobi> right, so the widget functionality is disabled, the table itself stays the same
[11:12:12] <_|Nix|_> Though I bet in FF, which has the type-to-search functionality, if you start typing "Columns..." and then press enter, it will click on the "Columns..." button - of course, since the popup is disabled, that'll do you no good, but still, the link can be clicked.
[11:12:17] <uGoMobi> like arschmitz said you can't disable a table in html so this sounds good to me
[11:12:29] <_|Nix|_> Yeah, I think it's as far as we can go.
[11:12:39] <_|Nix|_> So, that's about it.
[11:12:46] <_|Nix|_> Table now has destroy and disable.
[11:12:49] <uGoMobi> I table isn't meant for interaction anyway
[11:12:59] <_|Nix|_> No, right.
[11:13:01] <uGoMobi> it's mean't for displaying information
[11:13:22] <_|Nix|_> Yeah, so that's about it.
[11:13:27] <uGoMobi> cool
[11:13:54] <uGoMobi> gseguin|away|awa: if futher away? ;)
[11:14:02] <uGoMobi> s/if/is/
[11:14:11] <cgack> haha
[11:14:30] <arschmitz> uGoMobi: he lives in colorado is probably REALLY far away :)
[11:14:37] <uGoMobi> yeah
[11:14:52] <uGoMobi> arschmitz: tell us about transitions and panel :)
[11:15:04] <arschmitz> uGoMobi: will do
[11:15:24] <arschmitz> so i got a bit distracted this week by people asking for a dragable panel
[11:15:36] <arschmitz> and knew this would be simple with draggable from ui
[11:15:37] <_|Nix|_> arschmitz: What exactly does that mean?
[11:15:48] <arschmitz> like with a tab so you can drag it open
[11:15:49] <_|Nix|_> arschmitz: You can drag the panel whereto?
[11:15:53] <arschmitz> and if you let go it snaps back
[11:16:05] <_|Nix|_> arschmitz: Oh, so the panel follows the finger/mouse?
[11:16:10] <arschmitz> _|Nix|_: yes
[11:16:35] <_|Nix|_> I dunno ... our panel is geared towards CSS animation, not JS animation.
[11:16:36] <arschmitz> _|Nix|_: https://rawgit.com/arschmitz/simple-panel/master/index.html
[11:16:46] <arschmitz> _|Nix|_: ill get to that dont you worry
[11:17:19] <uGoMobi> lol
[11:17:26] <uGoMobi> _|Nix|_: just listen ;)
[11:17:40] <_|Nix|_> arschmitz: Neat!
[11:17:45] <arschmitz> so while playing with this i noticed how great the js animations were performing no matter how slow the device
[11:17:56] <_|Nix|_> arschmitz: Wow! Really?
[11:18:09] <arschmitz> and iv been hearing a lot of squaking on twitter about cssanimations being outperformed by js animations
[11:18:15] <arschmitz> so i tried it out
[11:18:34] <arschmitz> on the slowest thing i could find a android 2.2 that was slow when it was made
[11:18:45] <arschmitz> and would you believe it was still perfectly smooth?
[11:18:59] <arschmitz> we cant even do css transitions on a good 2.3 device
[11:19:02] <_|Nix|_> WTF have we been smoking all this time? :)
[11:19:21] <arschmitz> so i built a page doing slide transition with simple jquery animate
[11:19:26] <arschmitz> and added a timer
[11:19:28] <uGoMobi> tested it couple of devices already and looks very smooth everywhere
[11:19:38] <arschmitz> http://jsbin.com/xatiz/1/edit
[11:19:51] <uGoMobi> s/it/it on/
[11:20:07] <arschmitz> would you be amazed that even on that same 2.2 device we cant run transitions on this was perfectly smooth?
[11:20:20] <arschmitz> or on ie8
[11:20:42] <arschmitz> and all the logic for every bit of it is like 15 lines
[11:20:52] <arschmitz> and no dealing with non existent callback events
[11:21:02] <arschmitz> or transition and transform bugs
[11:21:11] <_|Nix|_> K, this is seriously weird. Like, css is supposed to be all hardware accelerated 'n all that ...
[11:21:16] <uGoMobi> easier to customize too
[11:21:23] <arschmitz> and that the animations were within 20ms on android 2.2 and chrome 34 on my mbpr
[11:21:46] <_|Nix|_> So, who sold us on CSS animations again?
[11:21:47] <uGoMobi> yeah but the problems start already when the hardware acceleration kicks in
[11:21:56] <arschmitz> i even went as far as to make the flow transition and it was the same
[11:22:34] <arschmitz> for refrence also http://css-tricks.com/myth-busting-css-animations-vs-javascript/
[11:22:53] <arschmitz> and lets go a step further and there is velocity.js
[11:23:34] <arschmitz> which uses gasp to improve jquery animate performance by 20X verified
[11:23:55] <arschmitz> ( though our transitions and animations are so simple it cant actually improve them in my tests )
[11:24:10] <arschmitz> even on the android 2.2 a 350slide animation only took 400ms
[11:24:23] <arschmitz> which considering the poor granularity of js timers is about as good as it gets
[11:24:32] <_|Nix|_> arschmitz: Well, some wthings like flip and stuff might still require transformation.
[11:24:47] <arschmitz> _|Nix|_: we should just drop flip honestly
[11:24:50] <uGoMobi> or we drop them
[11:25:01] <uGoMobi> right :)
[11:25:04] <_|Nix|_> Yeah, anything that requires 3d transforms.
[11:25:21] <_|Nix|_> ... or even rotation, right?
[11:25:33] <arschmitz> _|Nix|_: and if you look at the code for that panel https://github.com/arschmitz/simple-panel/blob/master/simple-panel.js
[11:25:41] <arschmitz> _|Nix|_: no you can doo all that stuff with animate
[11:26:03] <arschmitz> _|Nix|_: but you will see that widget is crazy simple
[11:26:05] <uGoMobi> question is if we want it
[11:26:18] <arschmitz> its practically a giant switch statement
[11:26:26] <_|Nix|_> Yeah, pretty much.
[11:26:46] <arschmitz> which also means people can define their own mode / position combos by just adding a properly named method
[11:27:11] <arschmitz> the only catch so far is you can only have one reveal mode panel at a time
[11:27:25] <arschmitz> because you can only call draggable on the same page once
[11:27:49] <_|Nix|_> arschmitz: Well, we can do a token-passing thing, right?
[11:27:55] <arschmitz> but i think thats an acceptable limitation
[11:28:32] <arschmitz> _|Nix|_: we could but that adds a lot of complication for what is probably just bad ui anyway
[11:28:39] <arschmitz> you can have as many overlay as you want
[11:28:45] <_|Nix|_> Yeah, good point.
[11:28:58] <arschmitz> wont support push
[11:29:03] <uGoMobi> I prefer to keep it simple
[11:29:07] <arschmitz> because it would require a huge wrapper
[11:29:15] <uGoMobi> better to do a few things right
[11:29:41] <uGoMobi> focus on making it bug free instead of adding a lot of options and variations
[11:29:45] <arschmitz> so ill open a review issue for this
[11:29:56] <arschmitz> it will have to be a long term thing though
[11:30:07] <arschmitz> because it requires ui to land pointer events
[11:30:19] <arschmitz> the demo there uses touch punch
[11:30:35] <uGoMobi> I think both transitions and panel are on the roadmap for 1.7
[11:30:47] <arschmitz> transitions we can do when ever we get to it
[11:30:58] <_|Nix|_> We were also going to look at pointer events, IIRC.
[11:31:12] <arschmitz> _|Nix|_: no we are ust going to use the polyfill
[11:31:15] <_|Nix|_> Re-write vmouse on top of them, or something like that.
[11:31:18] <arschmitz> no
[11:31:23] <arschmitz> vmouse is dead
[11:31:29] <uGoMobi> true, transitions are on the roadmap for 1.6 BTW
[11:31:30] <arschmitz> no more work execpt bug fixing
[11:31:33] <uGoMobi> we can stick to that
[11:32:03] <arschmitz> we will drop in pointer events polyfill and just change vmousedown to pointerdown and etc
[11:32:22] <gseguin> so we'll have a pmouse?
[11:32:23] <arschmitz> one version later we pretend vmouse was all a bad dream :)
[11:32:29] <uGoMobi> lol
[11:32:58] <_|Nix|_> arschmitz: Then what did scott_gonzalez mean by https://github.com/jquery/jquery-mobile/pull/7295#issuecomment-40211090
[11:33:23] * gseguin hopes kinblas is not lurking
[11:33:25] <arschmitz> _|Nix|_: exactly what i just said in the future we will use pointer events
[11:33:40] <arschmitz> which will be polyfilled by the polymer pointer events polyfill kris worked on
[11:34:08] <_|Nix|_> arschmitz: I can see that we will excise all vmouse usage from our own code, but we have to do that in one version, all at once, right?
[11:34:13] <arschmitz> https://github.com/jquery/jquery-pointer-events
[11:34:25] <arschmitz> _|Nix|_: yes
[11:34:33] <arschmitz> it will be an all at once change
[11:34:40] <arschmitz> vmouse will be deprecated
[11:34:44] <arschmitz> and not used internally
[11:34:50] <arschmitz> and removed in the following version
[11:34:56] <gseguin> arschmitz: is that ready to use?
[11:35:02] <_|Nix|_> OK, that's great!
[11:35:05] <arschmitz> gseguin: i dont think so
[11:35:19] <arschmitz> gseguin: but very close i think
[11:35:23] <arschmitz> kborchers: you around?
[11:35:31] * kborchers hides
[11:35:41] <gseguin> I don't see kborchers
[11:35:41] <kborchers> what's up?
[11:35:42] <uGoMobi> :)
[11:35:53] <arschmitz> kborchers: :) just wondering what the status is pointer events poly fill how close that is
[11:36:08] <arschmitz> kborchers: not ui interactions but just the polyfill
[11:36:12] <kborchers> not ready
[11:36:24] <arschmitz> kborchers: :) will that i know
[11:36:26] <kborchers> i have to dig in because they rebroke a bunch of old IE stuff again
[11:36:36] <arschmitz> ah ok
[11:36:39] <uGoMobi> :(
[11:36:54] <arschmitz> kborchers: no rush i just didnt remember exactly what the status was on it
[11:37:00] <kborchers> we are going to get them a test or two that will tell them if they do that again in the future
[11:37:01] <uGoMobi> we have it on our roadmap for 1.6
[11:37:14] <uGoMobi> so that won't be before end of year anyway
[11:37:43] <kborchers> i would hope we have a working solution by then
[11:37:44] <uGoMobi> arschmitz: how will the deprecation of this work?
[11:38:04] <uGoMobi> cool
[11:38:05] <kborchers> arschmitz: something you might want to do though is start a branch that uses the polymer polyfill without our piece
[11:38:19] <arschmitz> kborchers: ok
[11:38:25] <kborchers> and start looking at performance on the browers that it will work in since that has been a concern
[11:38:36] <arschmitz> at leaset then on most everything we support we can see how it works
[11:38:41] <kborchers> right
[11:38:48] <arschmitz> its only ie8 right?
[11:39:02] <arschmitz> we dont support 7
[11:39:07] <kborchers> i think there are some minor IE9 issues too
[11:39:13] <arschmitz> ok
[11:39:18] <arschmitz> so realisticly 10+
[11:39:40] <kborchers> yeah without our fixes 10+
[11:40:09] <uGoMobi> ok
[11:40:19] <arschmitz> cool ill do that iv been testing tons of performance stuff lately anyway :)
[11:40:38] <uGoMobi> Alex "Preformance" Schmitz
[11:40:59] <arschmitz> so about dragable panel
[11:40:59] <uGoMobi> thanks kborchers
[11:41:04] <kborchers> np
[11:41:34] <arschmitz> i think we should work on that as we get to it on the side its in pretty good shape so with just a little work we could start pointing people to it to get feedback before its made official
[11:42:05] <arschmitz> then no worries about setteling on an api or options until we pull into main repo
[11:42:25] <uGoMobi> yeah
[11:42:25] <arschmitz> and it might quite down some of the vocal people about panel
[11:42:37] <uGoMobi> just create a branch with the code from your repo
[11:42:59] <arschmitz> panel has been such a headache it would be nice to take it nice and slow to get it right this time
[11:43:01] <uGoMobi> it's good when people see that we are looking into solutions
[11:43:08] <uGoMobi> and think of every possible way
[11:43:22] <uGoMobi> same with transitions
[11:43:42] <arschmitz> yeah i can start a branch using animations
[11:43:52] <arschmitz> start with like 1 transition
[11:43:56] <arschmitz> and we can test and add
[11:44:12] <_|Nix|_> arschmitz: It would be nice to abstract away transitions so they can apply to more than just the panel.
[11:44:16] <uGoMobi> I think that ticket about the blinks has over 100 comments by now
[11:44:27] <arschmitz> _|Nix|_: did you see the jsbin?
[11:44:32] <_|Nix|_> arschmitz: Yes.
[11:44:36] <arschmitz> that implemented slide page transition
[11:45:03] <arschmitz> _|Nix|_: most of the abstraction is done already
[11:45:12] <arschmitz> thats what animate and effects in jquery do
[11:45:14] * gseguin has to leave in 5 min
[11:45:32] <arschmitz> maybe we should move on to browserstackrunner if gseguin has to go
[11:45:38] <_|Nix|_> Yeah.
[11:45:44] <arschmitz> since thats probably most of concern to him
[11:45:50] <gseguin> yup
[11:45:53] <uGoMobi> yeah good idea
[11:45:58] <gseguin> did you create a branch?
[11:45:58] <arschmitz> so i got it running!
[11:46:00] <arschmitz> wooo yay
[11:46:06] <gseguin> w00t!
[11:46:13] <arschmitz> but it times out if i run any more then 2 test pages :(
[11:46:22] <gseguin> grr...
[11:46:28] <arschmitz> but it works
[11:46:39] <gseguin> branch?
[11:46:42] <arschmitz> so ill push that and gseguin and maybe jzaefferer can look and help
[11:46:49] <gseguin> sounds good
[11:46:53] <arschmitz> gseguin: i didnt i forgot about it but i will in a bit
[11:46:53] <jzaefferer> wat?
[11:46:53] <b-ot> jzaefferer: some ppl feel the need to wow
[11:47:02] <jzaefferer> thanks b-ot
[11:47:29] <arschmitz> jzaefferer: i was just saying that maybe at somepoint you might be able to help getting some of our tests running with browserstack-runner
[11:47:55] <arschmitz> jzaefferer: i solved the issues you helped me with before now i just need to actually get the tests passing when i run a lot of them
[11:49:45] <jzaefferer> I see.
[11:49:53] <jzaefferer> Let me know when there's something I can actually look at
[11:50:16] <arschmitz> jzaefferer: yeah will do i was not actually trying to get your attention right now
[11:50:23] <arschmitz> :) just mentioning you
[11:50:46] <jzaefferer> you can always refer to me as Jörn or "the german guy", I don't have highlights on those ;)
[11:50:55] <uGoMobi> lol
[11:50:56] <arschmitz> lol ok will do
[11:51:03] <gseguin> :d
[11:51:04] <gseguin> :D
[11:51:11] <_|Nix|_> jzaefferer: "the german guy" is not unique
[11:51:24] <uGoMobi> right, might confuse Felix
[11:51:42] <_|Nix|_> Anyhooo ...
[11:51:44] <arschmitz> cant even do the tall german guy with the long hair
[11:51:51] <_|Nix|_> Nope ...
[11:51:52] <jzaefferer> :P
[11:52:05] <_|Nix|_> How about "J"?
[11:52:09] <uGoMobi> arschmitz: one more question about deprecating vmouse
[11:52:15] <arschmitz> uGoMobi: shoot
[11:52:24] <uGoMobi> arschmitz: I suppose we can't have it next to pointer events
[11:52:34] <arschmitz> sure we can
[11:52:34] <_|Nix|_> I think we can.
[11:52:36] <gseguin> why not?
[11:52:52] <gseguin> different events
[11:53:09] <arschmitz> uGoMobi: the vmouse plugin will stay in the lib we will just not use it
[11:53:17] <uGoMobi> right
[11:53:18] <arschmitz> uGoMobi: and in the next version it will be removed
[11:53:18] <_|Nix|_> At the point where we land pointer events, it'll just be a bag on the side of jQM for a minor version, and then, *snip*
[11:53:40] <gseguin> in the setup method of vmouse events we can print console.warn
[11:54:01] <_|Nix|_> gseguin: console.anything is a bad proposition on oldIE, isn't it?
[11:54:05] <arschmitz> gseguin: im hesitent to do that in production code
[11:54:15] <arschmitz> _|Nix|_: if( console )
[11:54:30] <gseguin> or ship a migrate.js that will activate them or just an option
[11:54:34] <_|Nix|_> arschmitz: I share your hesitation.
[11:54:47] <arschmitz> gseguin: those are possible
[11:54:51] <gseguin> ok I gotta run
[11:55:00] <_|Nix|_> I think a clear and concise warning in the API docs should suffice.
[11:55:00] <gseguin> I'll catch you on -dev
[11:55:04] <_|Nix|_> That's always been our way.
[11:55:09] <gseguin> arschmitz: let me know when you push that branch
[11:55:11] <arschmitz> _|Nix|_: yeah pretty much
[11:55:14] <_|Nix|_> It's an ancient jQM tradition.
[11:55:17] <arschmitz> gseguin: will do
[11:55:37] <uGoMobi> we can just say it's deprecated like we do with other things
[11:55:55] <_|Nix|_> +1
[11:56:00] <uGoMobi> I was just thinking about changing code from vmouse to pointer events
[11:56:01] <arschmitz> gseguin: oh we allready have that plugin for deprecated warning
[11:56:19] <arschmitz> the events debugger has a deprecated option
[11:56:26] <uGoMobi> but we drop in pointer events and use that and leave vmouse
[11:56:31] <arschmitz> and it will print any deprecated events to the console with a warning :)
[11:57:01] <_|Nix|_> uGoMobi: Yeah, for one version, with a deprecated warning.
[11:57:01] <uGoMobi> _|Nix|_: https://github.com/jquery/jquery-mobile/issues/7363
[11:57:12] <uGoMobi> yup
[11:57:19] <_|Nix|_> Oh, /that/ one.
[11:57:27] <uGoMobi> more events
[11:57:47] <arschmitz> this was discussed in portland that we should not even trigger change
[11:57:49] <_|Nix|_> Yeah ... I've established that, when you .trigger( "change" ) it does not result in a native event that can be picked up with .addEventListener()
[11:57:50] <uGoMobi> I think this a general question
[11:57:57] <arschmitz> so i REALLY think we should not do this
[11:58:16] <uGoMobi> yeah, I remember we discussed this before
[11:58:36] <_|Nix|_> If we move away from triggering change, then we should maybe deprecate that functionalit.y
[11:59:04] <_|Nix|_> Make it clear that we are moving more towards layout-only and away from wrapping native.
[11:59:08] <arschmitz> _|Nix|_: its something we need to be consistent about and it should be changed all at once
[11:59:17] <_|Nix|_> arschmitz: Exactly.
[11:59:29] <_|Nix|_> arschmitz: ... and documented amply and shouted from the mountaintops.
[11:59:41] <arschmitz> its not layout only you still get change you just need to listen for widgetnamechange
[12:00:06] <arschmitz> and if you really want a change just do a listener for widgetnamechange and trigger change your self
[12:00:19] <_|Nix|_> arschmitz: Yeah, exactly.
[12:00:21] <uGoMobi> agreed
[12:00:27] <_|Nix|_> arschmitz: There's a wrinkle though.
[12:00:31] <_|Nix|_> arschmitz: Might not be much.
[12:00:47] <arschmitz> _|Nix|_: for the record ui still triggers change in some places too
[12:00:54] <arschmitz> so this needs to be a ful combined discussion
[12:01:00] <_|Nix|_> arschmitz: If /we/ listen to change on the native event so as to be notified that we need to update the layout, then we may end up with an event loop.
[12:01:12] <uGoMobi> yeah, that's what I meant with that it's a general question
[12:01:28] <uGoMobi> we have to be consistent in all widgets
[12:01:46] <arschmitz> it actually just came up recently again in ui too
[12:02:04] <arschmitz> for now we should just stick with trigger( "change" );
[12:02:04] <_|Nix|_> How about we do with change what we do in pagecontainer? _triggerWithDeprecated()?
[12:02:19] <arschmitz> _|Nix|_: its not deprecated
[12:02:33] <arschmitz> there has not even been a final decision made yet
[12:02:53] <_|Nix|_> arschmitz: Well, triggering change will have to be deprecated if we want to move away from it, right?
[12:03:04] <arschmitz> yes but we have not made that decision yet
[12:03:14] <_|Nix|_> Right, understood.
[12:03:16] <arschmitz> just because im against something does not mean its what we should do :)
[12:03:25] <arschmitz> or shouldnt do
[12:03:58] <_|Nix|_> No, agreed. I'm just saying, that, in the end, we should end up in one extreme or the other. Either we embrace "change" and emit it natively, or we avoid it entirely.
[12:04:00] <arschmitz> anyway for not i think we should just hold the course and do .trigger( "Change" )
[12:04:03] <uGoMobi> so that ticket is more a feature request than a bug
[12:04:26] <_|Nix|_> That's actually where that ticket comes in.
[12:05:00] <_|Nix|_> If we want to communicate to (possibly non-jQuery) code that there's a change in the native widget, we should use our own code for triggering change, which triggers a native event.
[12:05:11] <arschmitz> we dont keep open tickets for feature requests though
[12:05:20] <_|Nix|_> ... because triggering a native event will cause all the jQuery event handlers to fire, but vice versa will not.
[12:05:30] <arschmitz> _|Nix|_: no every jquery ui and mobile widget uses change we should not if you can excuse the pun change that
[12:05:59] <_|Nix|_> arschmitz: I'm just saying that we should trigger change in such a way that .addEventListener() type handlers will also pick it up.
[12:06:04] <_|Nix|_> arschmitz: Helps modularity and all that.
[12:06:49] <arschmitz> _|Nix|_: in this case i disagree we should use jquery trigger we are using jquery events system and are a jquery library unless we change all widgets in both ui and mobile to decide to trigger a true native change we should not change this
[12:06:58] <arschmitz> im saying the word change entirely to many times
[12:07:22] <_|Nix|_> Well, yeah, that's what all this is about. Don't worry though, you won't wear it out.
[12:07:30] <_|Nix|_> arschmitz: Well, this sounds a bit like jQuery lock-in.
[12:07:31] <_|Nix|_> :0
[12:07:33] <_|Nix|_> :)
[12:07:57] <uGoMobi> lol
[12:08:15] <uGoMobi> anything else we need to discuss?
[12:08:16] <_|Nix|_> arschmitz: I've thought about it, and if we don't want to trigger a native change, you can't just write code that triggers a native change in response to a jQuery change, because that'll cause the jQuery event handlers to fire again.
[12:08:38] <_|Nix|_> arschmitz: So, you have to trigger natively at the point where you trigger at all.
[12:08:59] <_|Nix|_> arschmitz: ... but anyway - agreed. Feature request, to be decided across project.
[12:09:02] <_|Nix|_> s
[12:09:11] <arschmitz> _|Nix|_: also the jquery events system is often faster then native
[12:09:20] <cgack> uGoMobi: I got started on the navbar review in a gist
[12:09:29] <uGoMobi> cgack: great
[12:09:31] <cgack> https://gist.github.com/cgack/c9c4ba051fe19c8305c5
[12:09:31] <arschmitz> cgack: i updated your issue
[12:09:43] <_|Nix|_> arschmitz: That's fine, but I suspect in this case (#7363) we're dealing precisely with a modular project where some modules don't use jQuery at all.
[12:09:51] <cgack> arschmitz: thanks: https://github.com/jquery/jquery-mobile/issues/7359
[12:10:53] <uGoMobi> cgack: looks like good starting point at first glance
[12:11:13] <_|Nix|_> arschmitz: Might be worth discussing the emission of native change until we're ready to drop triggering change altogether.
[12:11:38] <arschmitz> _|Nix|_: we will with the whole team most likely in chicago
[12:11:54] <arschmitz> thats the place for discussions like this
[12:12:05] <_|Nix|_> arschmitz: Agreed.
[12:12:08] <uGoMobi> yeah
[12:12:09] <cgack> uGoMobi: thanks, still plenty of info to gather and put in re: some old issues,etc
[12:12:41] <uGoMobi> cgack: sure, I understand
[12:12:57] <uGoMobi> we can look into it when you are done and discuss
[12:13:09] <uGoMobi> so we can make decision about the API
[12:13:12] <uGoMobi> and start coding
[12:13:27] <cgack> super! sounds like a plan
[12:13:46] <uGoMobi> cool
[12:14:38] <arschmitz> _|Nix|_: you should use that issue as a template for the table
[12:14:50] <arschmitz> _|Nix|_: its in a wiki to but that issue is more uptodate
[12:15:06] <arschmitz> ill update the wiki version soon we can use the wiki just as the template
[12:15:45] <_|Nix|_> arschmitz: Got it.
[12:15:47] <_|Nix|_> Nice!
[12:16:03] <arschmitz> we can keep evolving it but i think this is a good start
[12:16:52] <uGoMobi> yes, good idea to do it like this inside a ticket
[12:17:11] <uGoMobi> ok, I think we can wrap up here
[12:17:14] <uGoMobi> thanks all!
[12:17:18] <_|Nix|_> L8R
