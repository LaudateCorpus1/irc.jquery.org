[11:59:24] <timmywil> DaveMethvin, markelog, m_gol- https://docs.google.com/document/d/1BadwSO6Sn91RBfr05s77r81ncEi0oMBJ5mZS-k215vg/edit#
[11:59:31] <timmywil> 35 seconds early!
[11:59:45] <m_gol-> present
[11:59:50] <DaveMethvin> places everyone!
[11:59:59] <markelog> hey-hey
[12:00:33] <timmywil> how's it goin
[12:00:45] <markelog> ups and downs :-)
[12:00:58] <m_gol-> I replied to the markelog's list on issue https://github.com/jquery/jquery/issues/2723
[12:01:01] <m_gol-> good job :)
[12:01:08] <timmywil> yup, thank you markelog!
[12:01:13] <timmywil> huge undertaking
[12:01:19] <markelog> still a long way to go though
[12:01:41] <m_gol-> yeah, and 1.12 may be harder due to IE 6-7 and more weird code
[12:01:43] <timmywil> in terms of the questionable commits, or beyond that?
[12:02:17] <m_gol-> timmywil: we have to verify somehow there are no breaking changes in things that weren't reverted
[12:02:42] <timmywil> Maybe we could run the built code against 1.11's tests
[12:02:47] <timmywil> and see what's different
[12:02:47] <m_gol-> one way is looking at all commits & verifying, we might also run the tests from 2.1.4/1.11.3 on code from 2.2-stable/1.12-stable
[12:02:50] <markelog> we can generate the changelog and check out breaking label
[12:02:54] <m_gol-> haha, yeah, thought the same ;)
[12:03:12] <m_gol-> markelog: sounds good but not all issues that are breaking must have this label
[12:03:15] <timmywil> or, rather 2.1's tests
[12:03:33] <markelog> yeah, i added that label to some of the issues
[12:03:36] <m_gol-> 2.1.4 tests for 2.2-stable, 1.11.3 tests for 1.12-stable (once it's ready)
[12:03:38] <m_gol-> markelog: me too
[12:03:51] <markelog> timmywil: i think m_gol did that?
[12:04:02] <timmywil> seems like a great way to verify that there aren't breaking changes
[12:04:09] <m_gol-> markelog: I did but for a previous copy of 2.2-stable, I need to repeat
[12:04:14] <markelog> btw, why do we call 1.x 1.12?
[12:04:15] <m_gol-> and run it on more browsers than just Chrome
[12:04:21] <markelog> not 1.2?
[12:04:23] <m_gol-> but it'd be good to first fix the broken tests
[12:04:31] <timmywil> some tests might fail due to bug fixes, but it'd be a good way to see what's different
[12:04:44] <markelog> what broken tests?
[12:04:46] <m_gol-> markelog: 1.2 is waaay older than 1.11... not sure what you mean
[12:04:58] <markelog> for opera you mean? or old ios?
[12:05:11] <markelog> ooo, right
[12:05:21] <m_gol-> markelog: http://swarm.jquery.org/job/1699
[12:05:26] <markelog> weird versioning
[12:05:28] <m_gol-> it's mostly adding support tests results + fixing Opera
[12:05:49] <markelog> so yeah, old opera & ios
[12:05:50] <m_gol-> versions are not numbers
[12:05:56] <m_gol-> but a serios of numbers separated by dots
[12:06:01] <m_gol-> * a series
[12:06:03] <markelog> i specifically removed commit that supports it
[12:06:09] <timmywil> should that also run ie7 and 8? I'm okay with 1.12 being ie9+ tho.
[12:06:25] <m_gol-> timmywil: ie9+? O_o did you mean ie8+?
[12:06:26] <markelog> didn't do the 1.12 changes yet
[12:06:42] <m_gol-> I think removing support for browsers we officially supported and documented that is a breaking change
[12:06:45] <timmywil> sorry, 2.2
[12:07:02] <timmywil> m_gol-: fair enough
[12:07:03] <m_gol-> 2.2 can't support IE 8 obviously... I don't understand
[12:07:27] <markelog> so, remind me, when did we drop support for oldie?
[12:07:37] <timmywil> 3.0, right?
[12:07:47] <m_gol-> what is old IE? IE<9?
[12:07:55] <timmywil> DaveMethvin: remind us
[12:07:58] <m_gol-> we dropped it in 2.0 but we've been supporting the 1.x line as well
[12:07:58] <markelog> yeah, you forgot already :-)
[12:08:05] <DaveMethvin> oldie is 6,7,8
[12:08:11] <markelog> yeah, i'm talking about 1.x
[12:08:13] <DaveMethvin> 1.11 supports them right now
[12:08:15] <m_gol-> and we'll just stop supporting 1.x when 3.0 gets released
[12:08:22] <DaveMethvin> yeah
[12:08:26] <DaveMethvin> and yay too
[12:08:28] <timmywil> right, right. then compat was going to drop ie6/7
[12:08:35] <m_gol-> so 1.12 should support IE6+ & Opera 12.1x+, and Safari 5.1+ etc.
[12:08:37] <DaveMethvin> but for 1.12 it seems we need to support 6,7,8
[12:08:46] <gibson042> I think so
[12:08:49] <DaveMethvin> plus old opera&safari
[12:09:00] <DaveMethvin> otherwise it's not really a minor-version bump
[12:09:03] <timmywil> m_gol-: sounds right
[12:09:04] <m_gol-> right
[12:09:04] <markelog> long, long way to go :-)
[12:09:15] <markelog> week, or something
[12:09:28] <timmywil> markelog: yup, but what is left, specifically for 2.2.?
[12:09:38] <markelog> veryfication
[12:09:46] <timmywil> ok
[12:09:49] <m_gol-> + fixing Opera :)
[12:09:49] <markelog> otherwise we should be good
[12:09:56] <markelog> if we would want that
[12:10:05] <markelog> i specifically didn't include that commit
[12:10:14] <m_gol-> I can try to fix Opera 12.1x on 2.2 & later 1.12
[12:10:16] <timmywil> we supported Opera 12.1? I thought we always said Opera was current-1.
[12:10:23] <m_gol-> timmywil: nope
[12:10:28] <m_gol-> http://jquery.com/browser-support/
[12:10:31] <markelog> is dropping some env is really a major?
[12:10:33] <DaveMethvin> 12.x was the last of the old opera
[12:10:34] <timmywil> Oh, because of the blink adoption
[12:10:34] <m_gol-> "12.1x, (Current - 1) or Current"
[12:10:37] <m_gol-> yup
[12:10:42] <markelog> 12.17
[12:10:44] <markelog> to be correct
[12:10:48] <timmywil> right
[12:10:51] <m_gol-> & 12.16
[12:10:58] <DaveMethvin> FOR SOME VALUE OF X :)
[12:10:58] <m_gol-> there is no 12.17 for Linux/OS X
[12:11:00] <markelog> the same thing
[12:11:05] <m_gol-> bit that's not terribly important ;)
[12:11:07] <markelog> it should be
[12:11:14] <m_gol-> Opera 12.10 brought some changes in the engine
[12:11:17] <markelog> yeah, let's move on
[12:11:21] <m_gol-> later versions are just minor fixes
[12:11:23] <timmywil> wellll, Opera 12.1x still had auto-upgrades right? So maybe 12.17 is enough.
[12:11:26] <m_gol-> hence 12.1x
[12:11:33] <DaveMethvin> swarm looks pretty decent actually
[12:11:37] <m_gol-> by 12.1x I mean the latest 12.1x
[12:11:40] <DaveMethvin> as long as we didn't slip in any intentional breaking changes
[12:11:50] <markelog> so, dropping some env is really major change?
[12:12:11] <markelog> what does semver says about it?
[12:12:11] <m_gol-> that may be questionable since semver speaks about API mainlu
[12:12:15] <DaveMethvin> i think it would seem tha way to users
[12:12:21] <m_gol-> but people are just putting ^x.y.z in package.json
[12:12:33] <m_gol-> and one of major jQuery goals is making browsers behave
[12:12:38] <markelog> not for jQuery i think
[12:12:42] <DaveMethvin> agreed that semver is not really specific on that topic but in essence the api stops acting right on the unsupported browsers
[12:12:44] <m_gol-> so I think we should aim at not dropping browsers in minors
[12:12:52] <markelog> since only recently started doing semver
[12:13:10] <m_gol-> markelog: I did check that a while ago, most packages depending on jQuery (or at least about 50%) uses ^
[12:13:20] <DaveMethvin> ugh
[12:13:22] <markelog> well, i think, if semver doesn't says anything about and those envs that no one uses....
[12:13:25] <m_gol-> markelog: jQuery wasn't on npm before 1.11/2.1
[12:13:47] <markelog> like we dropped iojs at some point
[12:13:51] <timmywil> I mean, we are trying to follow semver here, but we didn't, really, in previous 1.x releases. We officialy adopted it for 3.0. That said, I'd like to keep the same browser support as 1.11 in 1.12.
[12:13:52] <markelog> and removed just the same
[12:13:56] <DaveMethvin> let's see how close we can get, i think markelog got us pretty close already so it may not be a worry
[12:13:58] <markelog> *added
[12:14:08] <m_gol-> markelog: io.js was never officially supported
[12:14:19] <timmywil> and io is gone now.
[12:14:24] <timmywil> so I'm not sure anyone would care
[12:14:26] <DaveMethvin> if we accidentally broke something minor for ie 6/7 it probalby won't be noticed
[12:14:29] <m_gol-> yup, not supported by upstream anymore
[12:14:30] <markelog> don't know what "officially" mean then
[12:14:40] <DaveMethvin> i don't think we do either markelog  :)
[12:14:41] <markelog> okay, so lets keep that support
[12:14:44] <m_gol-> markelog: that we document the support
[12:14:48] <m_gol-> like in http://jquery.com/browser-support/
[12:15:01] <markelog> well, we didn't document jsdom there
[12:15:06] <markelog> or even node
[12:15:07] <m_gol-> as I said, I can try to make Opera 12.1x behave if reverting that revert is not enough
[12:15:12] <m_gol-> markelog: that's true
[12:15:15] <markelog> does this mean, we don't support them?
[12:15:19] <markelog> "officially"
[12:15:25] <markelog> Opera support should be easy
[12:15:25] <m_gol-> markelog: not in the same way as browsers
[12:15:29] <markelog> that is the one commit
[12:15:33] <timmywil> It's somewhat moot now.
[12:15:34] <m_gol-> but maybe we should make a note of some sort
[12:15:44] <markelog> i think it would be a good idea
[12:15:44] <m_gol-> if it's easy, let's just add it back
[12:15:45] <DaveMethvin> if people report bugs do we fix them, that's the definition really
[12:15:52] <m_gol-> and drop in 3.0.0
[12:15:56] <markelog> m_gol: yeah, that is what i'm saying
[12:16:04] <DaveMethvin> sgtm
[12:16:07] <timmywil> DaveMethvin: We would not for io
[12:16:09] <markelog> i would be cool to have some help for 1.x though
[12:16:18] <DaveMethvin> io is kind of a dead end
[12:16:24] <timmywil> but, well, ok, that's fine m_gol-, markelog
[12:16:29] <DaveMethvin> what do you need help with markelog
[12:16:34] <m_gol-> re 1.12: I may not have a lot of time before Sunday
[12:16:45] <markelog> DaveMethvin: yeah, it was just an example, we added to travis and then removed couple months after
[12:16:46] <m_gol-> at least not for repeating what markelog did with 2.2
[12:16:51] <m_gol-> if no one has time I could try on Sunday
[12:16:55] <DaveMethvin> :)
[12:17:24] <markelog> first, i think, we need to verify 2.x changes
[12:17:24] <DaveMethvin> i actually started to look at Migrate and realize i left a lot of stuff undone, i wanted to get to that this week
[12:17:30] <timmywil> I can help some. given that the commits need to be reverted in the right order, it's unfortunatley a one-man job. However, we could help in determining which commits are necessary to revert.
[12:17:31] <markelog> i would need to revert opera fixes
[12:17:37] <markelog> then, we should be good
[12:17:54] <timmywil> and we can help verify 2.x
[12:17:55] <m_gol-> markelog: we also need to add back support test results for older browsers
[12:18:00] <markelog> timmywil: yeah
[12:18:01] <m_gol-> that's why the support tests are failing
[12:18:05] <m_gol-> in http://swarm.jquery.org/job/1699
[12:18:15] <timmywil> actually, markelog, you can leave the rest of 2.2 to the rest of us, I think and focus on 1.x
[12:18:19] <m_gol-> I can help with verifying 2.2 before Sunday
[12:18:22] <m_gol-> right
[12:18:23] <markelog> m_gol: yeah, i know
[12:18:37] <markelog> timmywil: ok-ok
[12:18:59] <markelog> we just need to be sure in api changes
[12:19:10] <timmywil> yup
[12:19:11] <m_gol-> timmywil: when we're finished we need to write a script that generates a list of issues that we backported to 2.2
[12:19:17] <m_gol-> and change their milestones on GitHub
[12:19:28] <timmywil> I think we can do that with git cherry
[12:19:29] <markelog> that could be done manually, should be easy
[12:20:01] <markelog> i mean generate changelog through generator
[12:20:07] <markelog> and change milestones manually
[12:20:11] <m_gol-> timmwyil: I didn't know about git cherry :-)
[12:20:29] <m_gol-> markelog: yup, agreed
[12:20:51] <DaveMethvin> can we add, at least temporarily, a wip jquery-2.x-git.js somewhere that can be built by the jenkins job? I need it for Migrate
[12:20:59] <m_gol-> DaveMethvin: I can do it
[12:21:03] <DaveMethvin> for the current Migrate I have to stop testing with jquery-git since it includes some jquery 3.0 changes that won't be supported until Migrate 3.0
[12:21:06] <m_gol-> I'm the Jenkins guy here ;-)
[12:21:13] <DaveMethvin> <3
[12:21:19] <timmywil> m_gol-: hooray!
[12:21:33] <m_gol-> DaveMethvin: just jquery-2.x-git.js or also one for 1.x?
[12:21:38] <markelog> Michał "Jenkins" Gołębiowski
[12:21:41] <markelog> :-)
[12:21:47] <DaveMethvin> 1.x as well, and i guess the .min. too
[12:21:55] <timmywil> markelog: HOW DID YOU TYPE THAT SO FAST
[12:21:56] <DaveMethvin> haha
[12:22:04] <m_gol-> markelog: I have a business card that says something like that somewhere... :P
[12:22:08] <markelog> copy-past ninja :-)
[12:22:12] <DaveMethvin> they have those funny-character keyboards
[12:22:19] <timmywil> ha
[12:22:20] <m_gol-> markelog: I appreciate the ogoneks
[12:22:35] <timmywil> gibson042: you here?
[12:22:48] <gibson042> yep
[12:22:59] <timmywil> let's decide on == null or === undefined
[12:23:08] <m_gol-> yup, that's a Polish name that exists in Unicode :-) http://www.fileformat.info/info/unicode/char/0105/index.htm
[12:23:34] <timmywil> Personally, I'm fine with == null if it saves a byte
[12:23:42] <DaveMethvin> i can go either way, would just like to know if we need to document that
[12:23:48] <DaveMethvin> in our style
[12:23:56] <markelog> what that is all about?
[12:24:05] <DaveMethvin> it was in one of the PRs markelog
[12:24:06] <timmywil> markelog: https://github.com/jquery/jquery/pull/2699
[12:24:06] <markelog> i remember we have an issue about that right?
[12:24:28] <gibson042> http://contribute.jquery.org/style-guide/js/#equality
[12:24:44] <timmywil> Yea, we document. The use of == null is acceptable in null/undefined agnostic cases.
[12:24:54] <timmywil> we *can document
[12:24:59] <DaveMethvin> wow i love  your word choice timmywil :)
[12:25:01] <gibson042> the question is whether `== null` is acceptable for a situation when one of `null` or `undefined` are known impossible
[12:25:09] <gibson042> +1 timmywil
[12:25:21] <DaveMethvin> worksforme
[12:25:29] <m_gol-> gibson042: I'm fine with that. It's undefined behavior so if that saves a byte, +1
[12:25:34] <DaveMethvin> i can put together a PR for the style guide
[12:25:42] <timmywil> DaveMethvin: cool, thanks
[12:25:53] <timmywil> gibson042: that means you can land
[12:25:58] <gibson042> hooray
[12:26:13] <markelog> hm, it would be good to check out uglifyjs
[12:26:22] <markelog> and see what is happing there
[12:26:28] <gibson042> there's really not much uglifyjs can do here
[12:26:30] <markelog> maybe there is even an option for this
[12:26:43] <timmywil> I imagine it just leaves it
[12:27:02] <m_gol-> can I change the label `master-only` to `2.x-only` and `compat-only` to `1.x-only`? it gets confusing currently and we need a way to tell apart fixes for just 1.12 from ones applied to both 1.12 & 2.2, and we have just one milestone
[12:27:05] <markelog> deflate algo should minimaze it properly just like the null
[12:27:11] <gibson042> it doesn't know that a particular `=== undefined` would be safe as `== null`
[12:27:25] <markelog> i don't mean mangle action
[12:27:39] <timmywil> m_gol-: sure
[12:27:42] <DaveMethvin> m_gol-: sounds like a good idea
[12:27:46] <markelog> but anyhow
[12:27:58] <markelog> if we would use null there is no issue
[12:28:06] <timmywil> https://github.com/jquery/jquery/pull/2721 On this one, did you see gibson042's comment, DaveMethvin?
[12:28:16] <markelog> so instead of `=== undefined` we would need to use `== null`?
[12:28:20] <DaveMethvin> yep, and I agree I think, just wanted to change it and stare a bit
[12:28:23] <m_gol-> done
[12:28:41] <DaveMethvin> ajax code is sooooo complicated
[12:28:47] <timmywil> ok
[12:28:48] <markelog> DaveMethvin: very
[12:29:03] <timmywil> Finally, are we all good with just running the Android 2.3 tests on release?
[12:29:08] <timmywil> I am
[12:29:11] <DaveMethvin> me too
[12:29:17] <m_gol-> at least for 3.0
[12:29:22] <timmywil> ya
[12:29:24] <m_gol-> since 1.12/2.2 seem not so bad for now
[12:29:25] <timmywil> in reference to 3.0
[12:29:26] <markelog> it would be tough for release person
[12:29:28] <m_gol-> and we support it "fully" there
[12:29:38] <markelog> since those tests take forever
[12:29:43] <DaveMethvin> really as long as it doesn't explode i'm good with it, even if it fails a few edge cases
[12:29:46] <m_gol-> markelog: but it's just basic tests
[12:29:54] <m_gol-> markelog: and on BrowserStack they just time out
[12:30:01] <timmywil> I'll probably use sauce
[12:30:09] <gibson042> it's absurd that we're running into these errors on the most stripped-down page possible
[12:30:27] <m_gol-> timmywil: not sure if that will be better. the issue is they're not using the x86 version of emulators
[12:30:36] <m_gol-> and the ARM emulation is dead slow
[12:30:43] <m_gol-> adding to that the dead slowness of Android 2.3...
[12:30:44] <markelog> we would need to do the same thing for ie6 too :-)
[12:30:50] <markelog> so much fun!
[12:31:02] <timmywil> markelog: I used to do that a lot. heh
[12:31:09] <markelog> me too!
[12:31:13] <m_gol-> markelog: we can see how problematic IE6-7 are after 1.12 is ready... maybe that won't be so bad
[12:31:24] <markelog> maybe, maybe
[12:31:30] <m_gol-> it seems they're faster now on BrowserStack than they used to be
[12:31:30] <markelog> but this is oldie
[12:31:35] <m_gol-> :-)
[12:31:37] <markelog> so i'm not optimistic
[12:31:37] <m_gol-> no devtools
[12:31:49] <m_gol-> even this crappy IE8 version is not there
[12:31:53] <m_gol-> alert-based debugging, fun fun
[12:32:04] <markelog> yeah, like the old days
[12:32:05] <timmywil> I used to use firebug lite
[12:32:23] <DaveMethvin> nothing will make the pain go away
[12:32:24] <timmywil> which was still slow
[12:32:36] <timmywil> alright, that's all I've got
[12:32:39] <markelog> what about show/hide?
[12:32:41] <m_gol-> timmywil: well, it's JavaScript on IE6, what do you expect :-(
[12:32:43] <m_gol-> * :-)
[12:32:45] <markelog> is there any progress?
[12:32:50] <timmywil> markelog: next step is a PR from gibson042
[12:32:58] <gibson042> I should have a show/hide PR within a week
[12:33:05] <markelog> coolsies!
[12:33:08] <timmywil> cool
[12:33:14] <markelog> what changes are gonna be there?
[12:33:32] <timmywil> We can discuss that when we've got code
[12:33:36] <gibson042> in the code or in the behavior?
[12:33:40] <m_gol-> I'll revert the Opera revert from 2.2 & add support test results for others so that we have a passing build - does that sounds OK?
[12:33:42] <markelog> in the code
[12:33:47] <m_gol-> * sound
[12:33:49] <markelog> but
[12:33:53] <gibson042> it's too early to tell
[12:33:58] <markelog> behaviour is more clear to explain i guess
[12:33:59] <timmywil> m_gol-: yup
[12:34:14] <markelog> m_gol: yeah
[12:34:36] <timmywil> thanks err'body!
[12:34:40] <m_gol-> is everyone ok
[12:34:43] <markelog> whait
[12:34:47] <m_gol-> with removign animation/tween tests from 2.2?
[12:34:55] <m_gol-> that's my other remark
[12:34:57] <markelog> gibson042: could you check out 2.2 issue?
[12:35:06] <markelog> there is couple tough reverts of your commits
[12:35:16] <gibson042> I will
[12:35:18] <timmywil> m_gol-: if it makes things easier. They weren't there before
[12:35:30] <markelog> m_gol: i would suggest gnarf opinion about it
[12:35:38] <markelog> *to get
[12:35:52] <timmywil> They won't be documented until 3.0 anyway
[12:35:57] <gibson042> I'm fine with omitting those added tests from 2.2
[12:36:02] <m_gol-> markelog: yeah, good idea
[12:36:14] <m_gol-> I mean, I'm definitely for removing tests
[12:36:21] <m_gol-> but another question is code changes in https://github.com/jquery/jquery/commit/b3b2d6c3dd51fbdc69e1942e9af75cc99a1834c2
[12:36:27] <markelog> gibson042: could you describe behaviour changes for the show/hide?
[12:36:39] <timmywil> they're in the doc
[12:36:51] <gibson042> basically, we try really hard to blank inline display
[12:37:08] <gibson042> and remember if we've had to synthesize a value
[12:37:24] <markelog> we don't do that now?
[12:37:43] <gibson042> (while still honoring cascade-overriding .show)
[12:38:11] <gibson042> pre-3.0 does not do the former; current master does not do the latter
[12:39:08] <markelog> okay, looking forward to that pr
[12:39:19] <timmywil> m_gol-: yea, considering those changes were done to expose tweenters and prefilters for 3.0, it is an API addition that doesn't need to be in 2.2
[12:39:45] <markelog> timmywil: is that bad?
[12:39:54] <markelog> they don't change behaviour
[12:39:58] <timmywil> bad if they stay?
[12:40:02] <markelog> yeah
[12:40:08] <timmywil> Not really
[12:40:21] <timmywil> just saying it's removable
[12:40:23] <DaveMethvin> if it's just adding apis and not changing behavior it's probably ok
[12:40:32] <timmywil> if you want to remove it
[12:40:47] <m_gol-> I definitely want to remove tests since they're problematic in old Android
[12:40:49] <markelog> third most conflicted revert i did :-)
[12:41:03] <timmywil> ok, if you don't want to remove it, that's fine too
[12:41:15] <timmywil> like DaveMethvin said, it's not a behavior difference
[12:41:24] <markelog> i did said that too )
[12:41:28] <DaveMethvin> yeah, dealer's choice
[12:41:32] <timmywil> ha, ok
[12:41:36] <timmywil> you said it too
[12:41:36] <DaveMethvin> and markelog is the dealer!
[12:41:41] <markelog> okay, but yeah, i'm fine either way
[12:41:55] <markelog> m_gol: says he don't like some tests
[12:42:11] <m_gol-> Android 2.3 fails a lot of animation tests
[12:42:11] <markelog> so i guess he is the dealer
[12:42:13] <m_gol-> we might ignore it
[12:42:21] <m_gol-> but then we shouldn't document it before 3.0
[12:42:25] <DaveMethvin> if they're flakey tests we could ignore them for android 2.3
[12:42:30] <timmywil> m_gol-: right, we won't
[12:42:34] <m_gol-> and someone might detect tests are there and may document them
[12:42:40] <markelog> why we shouldn't document it?
[12:42:47] <timmywil> markelog: we will for 3.0
[12:42:54] <markelog> why not now?
[12:43:09] <markelog> we can insure that new api is good
[12:43:12] <m_gol-> markelog: we'd have to add notes that we don't support those APIs on Android 2.3, not sure where
[12:43:14] <markelog> adding it in the minor
[12:43:21] <markelog> and remove it if is bad in major
[12:43:26] <markelog> but if we don't document it
[12:43:33] <markelog> we would need to wait until the 4.0
[12:43:47] <m_gol-> markelog: we should document it for 3.0
[12:43:51] <m_gol-> but IMO not for 2.2
[12:43:55] <DaveMethvin> sounded like the problem was that leaving it out made a lot of conflicts?
[12:44:05] <m_gol-> why would we need to wait until 4.0?
[12:44:05] <timmywil> I don't understand. What's wrong with just documenting for 3.0?
[12:44:17] <markelog> m_gol: cause if we can
[12:44:22] <markelog> can't remove it
[12:44:31] <markelog> if we will intro it in 3.0
[12:44:37] <markelog> until 4.0
[12:44:46] <markelog> but if we will introduce it in 2.2 we can remove it in 3.0
[12:45:16] <timmywil> ohhh. No. I don't think m_gol-  doesn't like the tests. He didn't think they were necesary for 2.2.
[12:45:17] <m_gol-> markelog: so you want feedback from people after releasing 2.2 & before 3.0?
[12:45:34] <markelog> yeah
[12:45:46] <markelog> that might be good opportunity for that
[12:46:10] <m_gol-> the problem is people might expect they work on Android 2.3 but the tests fail
[12:46:15] <m_gol-> unless it's just because of sinon problems
[12:46:17] <markelog> tests fail
[12:46:22] <markelog> but not the api
[12:46:27] <markelog> not the logic
[12:46:30] <markelog> i mean
[12:46:34] <m_gol-> but they might use them on projects that support Android 2.3
[12:46:37] <markelog> since gnarf only added tests
[12:46:39] <m_gol-> and get surprised later
[12:46:44] <markelog> did not change anything significantly
[12:47:13] <markelog> since beta would not be tests as much as 2.2
[12:47:20] <m_gol-> tbh even if we get feedback from 2.2
[12:47:25] <markelog> and we would not have a lot of time for  testing beta in the wild
[12:47:26] <m_gol-> it's IMO too late to change it for 3.0
[12:47:30] <timmywil> Let's not add to the work for 2.2. I'd rather leave the API additions undocumented until 3.0
[12:47:32] <m_gol-> so it'd be 4.0 anyway
[12:47:37] <timmywil> and we won't be removing it in 3.0
[12:47:59] <markelog> ok-ok, if you says so :-)
[12:48:25] <timmywil> ok, anything else?
[12:48:34] <markelog> although, i still thinkg feedback on it would be good :-)
[12:48:43] <markelog> that is it for me
[12:49:13] <timmywil> thanks all. have a good week. I'll help verify 2.2.
