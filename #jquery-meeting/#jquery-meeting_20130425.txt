[08:01:37] <JamesMGreene> Thanks scott_gonzalez
[08:01:57] <Krinkle> The room smells fresh :)
[08:02:24] <JamesMGreene> I have no idea what that means :)
[08:03:10] <Krinkle> oh well
[08:03:24] <Krinkle> Starting at qunit
[08:03:48] <Krinkle> We've had some chatter from Samsun who wants to use the junit reporter
[08:03:57] <Krinkle> We had some licensing lackings, those are fixed now.
[08:04:07] <Krinkle> Samsung Electronics*
[08:04:10] <JamesMGreene> Samsun or Samsung?
[08:04:13] <JamesMGreene> lol, ok
[08:04:22] <Krinkle> I also published both plugins on NPM
[08:04:32] <Krinkle> composite and junit
[08:04:33] <JamesMGreene> Including qunit-composite?
[08:04:34] <JamesMGreene> Hmm
[08:04:37] <JamesMGreene> ok
[08:05:00] <JamesMGreene> Won't work on Node AFAIK unless jsdom/cheerio can simulate iframes
[08:05:04] <Krinkle> let's standardize on the npm keyword 'qunit-plugin' (like 'gruntplugin')
[08:05:08] <Krinkle> that'll make discovery easy
[08:05:11] <JamesMGreene> but I guess it makes it easier to pull down
[08:05:15] <Krinkle> Exactly
[08:05:18] <JamesMGreene> k
[08:05:37] <JamesMGreene> Do we publish QUnit stuff to Bower at all yet?  Assuming not since I don't see a bower.json/component.json
[08:05:44] <Krinkle> qunit-reporter-junit has qunit, qunit-plugin, qunit-reporter, junit
[08:05:52] <Krinkle> No, we don't.
[08:06:13] <scott_gonzalez> We shouldn't publish packages to npm unless we know for sure they're useful.
[08:06:25] <Krinkle> I don't use bower anywhere, nor do I see it used in other jquery projects. I suppose we can add it on -demand, don't feel like adding it prematurely
[08:06:45] <scott_gonzalez> https://github.com/jquery/sizzle/blob/master/component.json
[08:07:06] <scott_gonzalez> But before we add anything, we should have a larger discussion about package managers.
[08:07:26] <Krinkle> scott_gonzalez: Is that why .min and .map are now in the repo? I assume bower is not capable of install hooks?
[08:07:40] <Krinkle> for sizzle that is
[08:07:47] <scott_gonzalez> I have no idea.
[08:09:10] <Krinkle> https://github.com/jquery/qunit/issues?sort=updated&state=open
[08:09:34] <Krinkle> I've triaged a bit earlier today adding labels where missing
[08:09:48] <Krinkle> should be a bit more organised now
[08:11:55] <Krinkle> JamesMGreene: Is there anything in particular you are or would like to work on?
[08:18:37] <Krinkle> Jenkins
[08:18:38] <JamesMGreene> sorry, was busy w/ day job
[08:19:51] <Krinkle> Jenkins still same old same old. Random out of memory, and web server crashing periodically causing all testswarm jobs to fail.
[08:20:26] <Krinkle> gnarf and I are waiting for a timezone overlap to get Jenkins moved to its own server. This might fix it, but should at least give better insight
[08:21:02] <Krinkle> and it'll force us to review what the environment contains (as we'll have to rebuild it) perhaps an opportunity to puppetise some
[08:21:06] <gnarf> Krinkle: if you want to work on that yourself, please do
[08:21:15] <gnarf> Krinkle: im gonna be even further away next week
[08:21:16] <gnarf> portland
[08:21:19] <JamesMGreene> I'm supposed to be working through the QUnit PRs for Node compatibility but I've just been swamped lately
[08:21:42] <gnarf> Krinkle: just take good notes, my only request :)
[08:21:57] <gnarf> perhaps you and jzaefferer can hack it together instead of me being around
[08:22:06] <Krinkle> gnarf: So what do I need to do exactly
[08:22:10] <Krinkle> gnarf: Jenkins is already installed, right?
[08:22:24] <JamesMGreene> I am also supposed to separate the PhantomJS plugin, though
[08:22:27] <gnarf> yeah, move jobs over, make sure they work well, make sure jenkins can scp to swarmy
[08:22:29] <gnarf> etc
[08:22:34] <JamesMGreene> though = too
[08:23:20] <JamesMGreene> Though scott_gonzalez is lamenting so many QUnit repos :)
[08:23:20] <Krinkle> gnarf: Can they communicate within the subnet? Or does it have to be through full domain names?
[08:23:48] <Krinkle> gnarf: I imagine 'jq03' could resolve as is, haven't tried though
[08:23:50] <gnarf> use the dns, it's probably safest
[08:24:03] <gnarf> though honestly
[08:24:08] <Krinkle> gnarf: what do you mean by use the dns?
[08:24:11] <gnarf> maybe we should still use the jenkins. subset for the http
[08:24:43] <gnarf> so like jenkins.jquery.com/jobout/jquery/sha/test/
[08:24:59] <gnarf> instead of scp for the whole built test suite
[08:25:00] <Krinkle> i mean the scp/ssh from jenkins to jq03
[08:25:05] <Krinkle> oh
[08:25:08] <Krinkle> hmm..
[08:25:12] <Krinkle> what do you mean
[08:25:18] <JamesMGreene> Krinkle: Any update on https://github.com/jquery/qunit/issues/422 ?
[08:25:25] <gnarf> yeah, target jqadmin@code.origin.jquery.com for the scp of builds to origin
[08:25:29] <gnarf> ^^^ use the dns
[08:25:39] <Krinkle> right, so over public IP.
[08:25:43] <gnarf> right now, all the tests are also hosted in the swarm
[08:25:59] <gnarf> but those could be hosted in a subfolder on jenkins.jquery.com/output/
[08:26:01] <gnarf> or something
[08:26:10] <Krinkle> gnarf: Yes, I'd prefer that actually
[08:26:13] <gnarf> same
[08:26:20] <gnarf> you feel okay with the "output" folder?
[08:26:27] <Krinkle> separation of concerns
[08:26:36] <gnarf> or maybe
[08:26:37] <Krinkle> though it'll need to be on apache, as it needs php execution for ajax tests etc.
[08:26:43] <gnarf> tests.jenkins.jquery.com ?
[08:26:51] <gnarf> screw apache
[08:26:53] <Krinkle> gnarf: have you, should I still ; set up proxy?
[08:26:57] <Krinkle> nginx of course
[08:27:00] <gnarf> if it doesn't work in nginx/php-fpm
[08:27:03] <gnarf> we need to fix it
[08:27:04] <gnarf> :)
[08:27:06] <Krinkle> I meant nginx
[08:27:09] <gnarf> yeah
[08:27:10] <gnarf> so
[08:27:14] <Krinkle> apache==web server :)
[08:27:29] <gnarf> i'll setup jenkins.jquery.com -> :8000 (or whatever port jenkins runs on)
[08:27:37] <gnarf> as a proxy
[08:27:42] <gnarf> lets do a subdomain output?
[08:27:53] <gnarf> builds.jenkins.jquery.com
[08:28:13] <JamesMGreene> I also need to work on some PRs to get the Composite and JUnit plugins to work together correctly (remember we talked about "suite" event emissions?), too
[08:28:17] <Krinkle> gnarf: ok
[08:28:24] <Krinkle> JamesMGreene: checking  https://github.com/jquery/qunit/issues/422 now
[08:28:31] <gnarf> Krinkle: i'll setup that proxy stuff today
[08:28:35] <JamesMGreene> So I've got no shortage of stuff to do, though only the Node compat PRs are specific to QUnit core
[08:28:47] <Krinkle> JamesMGreene: Working on it, though I've also been swamped with stuff
[08:28:49] <gnarf> Krinkle: also, i'll make sure jenkins@jenkins has a ssh key that can access jqadmin@code.origin
[08:29:03] <Krinkle> gnarf: ok
[08:29:09] <JamesMGreene> Krinkle: I don't see any updates on 422...?
[08:29:21] <Krinkle> JamesMGreene: there's nothing to say
[08:29:38] <Krinkle> it's assigned to me, I'm working it. commit shall appear at some point
[08:29:38] <JamesMGreene> oh, I misread your previous message
[08:29:51] <JamesMGreene> Thought you said "check" rather than "checking"
[08:34:00] <Krinkle> gnarf: updated task lists https://github.com/jquery/infrastructure/issues/176
[08:37:07] <gnarf> Krinkle: thanks
[08:37:53] <Krinkle> gnarf: Only thing I dont' know for sure is how to import the database, but I haven't looked into it either.
[08:38:01] <Krinkle> mysql dump? Or does it have its own thing
[08:38:08] <gnarf> pretty sure it's just a copy of /var/lib/jenkins
[08:38:19] <gnarf> don't think it uses sql at all
[08:38:54] <Krinkle> gnarf: isn't that (part of) the application itself as well?
[08:39:09] <gnarf> i think the lib is purely data
[08:39:10] <Krinkle> Or is the var/lib dir really just the state
[08:39:13] <Krinkle> ok
[08:39:19] <gnarf> confirm with jorn maybe?
[08:39:30] <Krinkle> will do
[08:41:43] <Krinkle> So, next, browserstack
[08:41:55] <Krinkle> working fine from what I can tell, getting stable
[08:42:11] <Krinkle> JamesMGreene: Do you have an account on splunk.jquery.com?
[08:42:17] <JamesMGreene> Not that I know of
[08:42:27] <Krinkle> https://splunk.jquery.com:8000/
[08:42:39] <Krinkle> It is where lots of data is aggregated for analytics
[08:42:45] <Krinkle> incl. logs and stuff
[08:43:04] <JamesMGreene> Data from where?
[08:43:09] <Krinkle> the servers
[08:43:19] <Krinkle> access logs, error logs, debug logs
[08:43:24] <Krinkle> e.g. from testswarm-browserstack
[08:44:14] <Krinkle> JamesMGreene: username "JamesMGreene" ok ?
[08:44:49] <JamesMGreene> Yup
[08:46:00] <Krinkle> pm'ed password
[08:46:03] <Krinkle> try logging in
[08:46:38] <Krinkle> https://splunk.jquery.com:8000/en-US/app/search/browserstack
[08:48:16] <Krinkle> Splunk has amazing indexing power
[08:48:40] <Krinkle> making queries is easy and you can just about combine any data and aggregate it and get anything out of it you want
[08:48:45] <Krinkle> https://splunk.jquery.com:8000/en-US/app/search/php_errors
[08:49:29] <Krinkle> example search https://splunk.jquery.com:8000/en-US/app/search/flashtimeline?q=source%3D%22%2Fvar%2Flog%2Fphp5-fpm%2Ferror.log%22%20%7C%20search%20NOT%20%22jQuery%20Mobile%20Branch%20Preview%2Fworkspace%2Fbranches%22
[08:49:55] <Krinkle> lastly, testswarm
[08:50:14] <Krinkle> the projects rewrite is landing, today (my time zone)
[08:54:59] <JamesMGreene> Yeah, I've used it just a little bit at work before
[08:56:05] <JamesMGreene> jzaefferer is at a conference, btw (probably FrontTrends?)
[09:05:04] <Krinkle> scott_gonzalez: You may lock the door behind us :)
[09:06:33] <gnarf> Krinkle: see meetings.jquery.org repo?
[09:06:56] <Krinkle> https://github.com/jquery/meetings.jquery.org ?
[11:01:04] <toddmparker> hi
[11:01:21] <toddmparker> Looks like it's -m up in here
[11:01:37] <toddmparker> The jQuery Mobile team meeting is starting up
[11:01:42] <toddmparker> Chime in if you're here
[11:05:24] <toddmparker> Hi _|Nix|_
[11:06:10] <toddmparker> SPEAK
[11:06:11] <uGoMobi> hi!
[11:06:17] <toddmparker> Hi uGoMobi
[11:06:37] <_|Nix|_> Hey!
[11:06:38] <toddmparker> wondered why it was so quiet here. I must be in op mode so it seemed -m
[11:06:49] <_|Nix|_> :)
[11:07:03] <arschmitz> Hi
[11:07:28] <toddmparker> Hey _|Nix|_, arschmitz
[11:08:02] <agcolom> Hi
[11:09:00] <toddmparker> Hi agcolom
[11:09:05] <toddmparker> agenda here: https://docs.google.com/document/d/1yrVEKJuEZa4gaM_bJkwPDm49zzdnLX6LrTYhLNq_HP4/edit#
[11:10:06] <toddmparker> do we have a wiki page where we're tracking 1.4 changes yet?
[11:10:22] <toddmparker> Hi johnbender
[11:10:34] <johnbender> :)
[11:10:39] <uGoMobi> toddmparker: the page is there, but I haven't added notes there yet
[11:10:55] <toddmparker> ok, cool
[11:10:59] <toddmparker> linking that up
[11:11:29] <toddmparker> might as well start
[11:11:34] <toddmparker> Team is focused on 1.4 work. Good progress with week in the “next” branch. Preview here: http://view.jquerymobile.com/next/demos/
[11:11:48] <uGoMobi> https://github.com/jquery/jquery-mobile/wiki/1.4-changelog
[11:14:33] <toddmparker> thanks uGoMobi - linked up in the notes
[11:14:54] <uGoMobi> will start adding notes there soon
[11:14:56] <toddmparker> Q on versions - should we switch to core 2.0 in "next" to really test the hell out of 2.0
[11:15:08] <uGoMobi> toddmparker: next is on core 2.0
[11:15:09] <toddmparker> uGoMobi: great. it was super helpful for 1.3
[11:15:19] <toddmparker> ah, sweet. master is 1.9?
[11:15:22] <uGoMobi> nope
[11:15:26] <uGoMobi> also on core 1.9
[11:15:36] <uGoMobi> sorry
[11:15:42] <uGoMobi> also on core 2.0
[11:15:55] <arschmitz> I think master should probably still be on 1.9 since we still support ie8
[11:15:55] <toddmparker> ok. so all dev is on 2.0
[11:16:10] <toddmparker> that's cool.
[11:16:20] <uGoMobi> IE8 is busted indeed
[11:16:33] <toddmparker> i will be good to figure out a way to test both core versions via a preview link
[11:16:37] <arschmitz> but we really do need to test 2.0 so good to have next on it
[11:16:38] <_|Nix|_> Is IE8 the last of the OldIE browser?
[11:16:43] <toddmparker> there a way to set that up?
[11:17:07] <arschmitz> the guys from bocoup have a setup using a query param for it
[11:17:11] <uGoMobi> we can set up a mirror branch
[11:17:12] <toddmparker> for now, we could leave master on 1.9 and use 2.0 in next
[11:17:20] <toddmparker> johnbender: what version does content-widget use?
[11:17:27] <uGoMobi> but have to merge master in it manually I suppose
[11:17:53] <arschmitz> we should look at what bocoup is doing with setting jquery version in url for view
[11:17:59] <johnbender> toddmparker: won't matter
[11:18:19] <toddmparker> arschmitz: ok
[11:18:44] <johnbender> toddmparker: the only thing that I can think of is event binding methods and I'm switching to the widget factory _on and _off so it should "just work"
[11:18:50] <toddmparker> 1.9 and 2.0 should be the same ATM, but they will diverge over time and there could already be subtle differences
[11:20:04] <toddmparker> i think if master is on 1,9 for now we can easily test old IE
[11:20:15] <toddmparker> if the new branches use 2.0, that's probably the way to go
[11:21:06] <toddmparker> once we start merging to master, we may need a way to switch versions so we can do device testing. I know we run automated tests against versions already, but that won't necessarily find everything
[11:21:33] <toddmparker> anyway, good to hear next is 2.0. that was the main thing
[11:22:05] <toddmparker> one item i saw - https://github.com/jquery/jquery-mobile/issues/5933
[11:22:33] <toddmparker> uGoMobi: I think I agree with your suggestion to remove some magic and make people assign a button role and positioning class in headers
[11:22:58] <toddmparker> +1 to Deprecate auto-enhancement of links in toolbars
[11:22:58] <uGoMobi> toddmparker: maybe arschmitz knows a good way to make page.sections handle this
[11:23:14] <uGoMobi> but otherwise I think we should deprecate
[11:23:26] <arschmitz> it is handled by new toolbar widget
[11:23:34] <arschmitz> page.sections is gone in branch for that
[11:23:35] <toddmparker> i'm in favor of just being more direct with the markup and making fewer assumptions
[11:23:39] <uGoMobi> right
[11:23:55] <toddmparker> anyone object?
[11:24:06] <uGoMobi> nope +1
[11:24:15] <toddmparker> this change would happen in 1.5
[11:24:24] <toddmparker> ok, add it to the wiki then
[11:24:58] <toddmparker> johnbender: want to prate us on the new branch you're tinkering with?
[11:25:04] <toddmparker> update :)
[11:26:30] <johnbender> sure
[11:26:32] <johnbender> so
[11:26:35] <johnbender> content-widget
[11:26:41] <johnbender> I'm ripping out about half of nav
[11:26:53] <johnbender> bit by bit I'm unit testing the parts that I rip out
[11:27:01] <johnbender> and running the whole nav test suite for each commit
[11:27:02] <johnbender> small commits
[11:27:23] <johnbender> if you're interested in more detail on what I have in mind you can read about it here: https://github.com/jquery/jquery-mobile/issues/5427#issuecomment-17026148
[11:27:37] <johnbender> anyhow the initial pass is going to be breaking up nav
[11:27:42] <johnbender> into tiny bits
[11:27:46] <johnbender> that make sense as a content container
[11:27:58] <johnbender> so changePage, loadPage, navigation even handling
[11:28:05] <johnbender> getting them tested
[11:28:12] <johnbender> so it's actually possible reason about
[11:28:33] <johnbender> then moving on to leveraging that
[11:28:37] <toddmparker> I like how you're using the issue to keep notes and updates flowing
[11:28:49] <johnbender> arschmitz: _|Nix|_: I want to keep you guys up to date
[11:29:00] <johnbender> there might be a point where you guys can dive in and help out
[11:29:03] <johnbender> anyhow
[11:29:05] <johnbender> that's that
[11:29:09] <johnbender> one other thing
[11:29:16] <arschmitz> absolutly just let me know
[11:29:22] <_|Nix|_> For sure!
[11:29:27] <toddmparker> your note about scrolling is a good one. that seems to be trouble across browsers
[11:29:29] <johnbender> agcolom: did we sort out where I should be pushing api site updates for 1.4?
[11:29:34] <toddmparker> cool, good stuff johnbender
[11:29:57] <agcolom> johnbender: I'll get that done with scott_gonzalez. probably next week
[11:30:01] <toddmparker> so you asked - "Need to discuss api website versioning"
[11:30:08] <toddmparker> junx
[11:30:19] <toddmparker> agcolom: great.
[11:30:25] <johnbender> cool
[11:30:26] <johnbender> agcolom: thakns
[11:30:28] <johnbender> *thanks
[11:30:36] <agcolom> We will follow the api ui docs
[11:30:36] <toddmparker> we need to figure out how to start updating the 1.4 docs
[11:30:42] <toddmparker> ya
[11:30:50] <agcolom> yes, there will be a 1.4 branch
[11:31:00] <toddmparker> so for now, can people update the API docs at all?
[11:31:09] <toddmparker> is that branch set up?
[11:31:23] <toddmparker> if that's the plan, easy enough to make a branch
[11:31:23] <agcolom> not set up yet. That's what I need to do with scott
[11:31:57] <toddmparker> alright, we can wait until you chat with him
[11:32:09] <agcolom> thx.
[11:32:17] <toddmparker> Congrats on being elected to the jQuery Board agcolom
[11:32:22] <uGoMobi> but if we merge that branch in master the info for previous versions will be gone?
[11:32:22] <toddmparker> woo hoo
[11:32:25] <agcolom> Thank you :)
[11:32:43] <agcolom> uGoMobi: That's what I'll check with Scott
[11:33:02] <uGoMobi> agcolom for president (sorry Dave)!
[11:33:09] <uGoMobi> agcolom:  ok cool
[11:34:10] <toddmparker> you all see this?
[11:34:12] <toddmparker> nativeDroid 0.1 - Impressive Android 4.x theme for jQuery Mobile 1.3 - nativedroid.godesign.ch
[11:34:22] <uGoMobi> yeah, nice theme
[11:34:28] <_|Nix|_> Highly cool!
[11:34:34] <agcolom> and it's in the resources page
[11:34:37] <toddmparker> really well done
[11:34:41] <toddmparker> agcolom: rokk
[11:35:24] <toddmparker> We now have solid 3rd party themes for iOS, WP7, BB10, Android 4.x
[11:35:31] <toddmparker> pretty cool
[11:35:57] <toddmparker> agcolom - anything you wanted to discuss?
[11:36:29] <agcolom> minor update this week Went to jQuery uk
[11:36:38] <agcolom> met johnbender and frequent
[11:36:47] <toddmparker> nice
[11:36:58] <agcolom> and Jason and Ralph
[11:37:12] <agcolom>     Started to rewrite the events to use the new events template (in the api docs). Completed swipe, swiperight, swipeleft
[11:37:12] <agcolom>     Fixed errors in api docs (panels)
[11:37:12] <agcolom>     some minor triage
[11:37:13] <toddmparker> mobile representing
[11:37:40] <agcolom>     updated the resources page with the nativeDroid theme and  Prime Faces
[11:38:12] <toddmparker> thanks
[11:38:16] <agcolom> (we're doing a course review at work and draft docs are due in tomorrow!)
[11:38:28] <toddmparker> good luck
[11:38:31] <toddmparker> thanks agcolom
[11:38:33] <agcolom> Thanks
[11:38:44] <agcolom> sorry for not doing more recently!
[11:38:58] <toddmparker> no worries at all, life happens
[11:39:12] <toddmparker> appreciate all the work you all do, it's sort of amazing
[11:39:31] <agcolom> that's because we have the BEST BOSS ever!
[11:39:47] <toddmparker> aww
[11:39:53] <toddmparker> thanks
[11:39:57] <toddmparker> so uGoMobi, _|Nix|_ - you want to talk about what's up on "next"
[11:40:04] <uGoMobi> sure
[11:40:15] <toddmparker> been a heck of a productive week
[11:40:20] <_|Nix|_> Sure!
[11:40:27] <uGoMobi> summary:
[11:40:29] <_|Nix|_> Absolutely ...
[11:40:29] <uGoMobi> buttonMarkup has been removed from all widgets
[11:40:29] <uGoMobi> icons are moved to a pseudo element
[11:40:29] <uGoMobi> working on: updating / cleaning up CSS of all the widgets that used buttonMarkup
[11:40:29] <uGoMobi> next step: theme inheritance / reduce addClass() for styling and icons
[11:40:44] <toddmparker> for those following along - preview here: http://view.jquerymobile.com/next/demos/
[11:41:15] <uGoMobi> did I forgot anything _|Nix|_ ?
[11:41:49] <_|Nix|_> Well, I just push a re-implem of buttonMarkup using only string processing and className.
[11:41:50] <toddmparker> all the widgets are back into good shape
[11:42:06] <_|Nix|_> I do have a potentially controversial thought though.
[11:42:24] <toddmparker> i do think that having a unique swatch for an inset element like a slider track or the off state of the flip switch might be useful
[11:42:31] <_|Nix|_> Now that buttonMarkup is gone, we do a lot of .addClass( "ui-btn ui-btn-" + theme + " ui-corner-all" )
[11:42:31] <toddmparker> and one for listviews
[11:42:34] <_|Nix|_> etc.
[11:42:35] <toddmparker> (when we get there)
[11:42:42] <uGoMobi> toddmparker: I agree
[11:42:54] <toddmparker> _|Nix|_: yes, yes we do
[11:43:10] <_|Nix|_> So, here's my thought ... we use .buttonMarkup() :)
[11:43:13] <toddmparker> tho the hope is uGoMobi will reduce that a lot with inheritance
[11:43:19] <_|Nix|_> But before you shoot me ...
[11:43:35] <toddmparker> WHAT
[11:43:38] <toddmparker> kidding
[11:43:43] <_|Nix|_> I'm only suggesting this amidst thorough perf tests ...
[11:44:07] <_|Nix|_> My justification: buttonMarkup is not what it used to be.
[11:44:22] <_|Nix|_> For example, it doesn't access any data-* attributes anymore.
[11:44:28] <_|Nix|_> It only accesses .className.
[11:45:06] <_|Nix|_> ... and I'm thinking about adding an option to buttonMarkup that simply skips checking that too.
[11:45:11] <toddmparker> so in the last pass, we got rid of button markup and added the class stuff to each plugin - that right?
[11:45:17] <_|Nix|_> So, it simply goes over the options and adds the appropriate classes.
[11:45:24] <_|Nix|_> toddmparker: Yeah.
[11:45:43] <_|Nix|_> The benefit would be that this gives us a chance to change the class names in one place rather than 23.
[11:45:51] <uGoMobi> and we removed all ui-btn-inner and ui-btn-text wrappers!
[11:45:56] <toddmparker> so there is a perf benefit to centralizing this or just makes the code DRY
[11:46:19] <toddmparker> sounds like the latter
[11:46:37] <_|Nix|_> It's likely a perf hit, but if it's small enough it will likely still be faaaar better than what we have now.
[11:47:01] <_|Nix|_> I can do the perf tests to see if this pans out at all.
[11:47:09] <toddmparker> ok, sounds good
[11:47:17] <toddmparker> anyone have opinions on this?
[11:47:21] <arschmitz> if the performance diff is small i like the idea of centralizing it
[11:47:22] <uGoMobi> I think we should first look at reducing the need to add classes
[11:47:23] <toddmparker> or just wait and see
[11:47:32] <arschmitz> but performance will be the deciding factor i think
[11:47:33] <_|Nix|_> uGoMobi: Agreed.
[11:47:35] <uGoMobi> and then look at how to add the classes we really need
[11:47:40] <toddmparker> uGoMobi: i agree there for sure.
[11:48:04] <toddmparker> might be more productive to see what add additions we need to support, then look at this
[11:48:20] <_|Nix|_> toddmparker: "add additions"?
[11:48:42] <uGoMobi> for example... with the markup we have for listviews now I can make a basic list with links work without adding a single class to a LI
[11:48:47] <toddmparker> sorry, see what each widget needs in terms of class decoration
[11:48:58] <toddmparker> uGoMobi: right, that is awesome
[11:49:17] <arschmitz> uGoMobi: for sure the less classes are added in js the better
[11:49:23] <toddmparker> in that case, we'd start encouraging people to add the classes themselves to the UL
[11:50:40] <_|Nix|_> ui-btn ui-btn-x ui-corner-all ui-shadow ui-icon ui-icon-x ui-btn-icon-x ui-shadow-icon ui-btn-inline ui-mini
[11:50:46] <_|Nix|_> That's what we have now.
[11:50:52] <toddmparker> the holy grail is that in 1.4, we can support the older data- attr API for things, even if a bit inefficient, but deprecate these in favor of adding a few classes/wrappers to the markup
[11:51:01] <toddmparker> in 1.5, we drop the old way
[11:51:16] <toddmparker> _|Nix|_: that is the an issue for sure.
[11:51:25] <_|Nix|_> Amen. In that case, we need to announce that buttonMarkup is deprecated.
[11:51:32] <toddmparker> a default button has a lot of those 'options' as true
[11:51:44] <_|Nix|_> After that, we can move it to a private method if we still want to centralize things.
[11:52:01] <uGoMobi> that large amount of classes is mostly because we are in between changing markup and changing theming
[11:52:05] <toddmparker> so we do end up with a ton of classes
[11:52:36] <_|Nix|_> Well, a lot of those correspond 1-to-1 with options.
[11:52:36] <toddmparker> sure, but since corners, shadows, btw styles, are all granular classes, you do need to add them
[11:53:15] <toddmparker> if we had a preprocessor, we could have a btn-default class that included ui-corner-all ui-shadow, etc.
[11:53:35] <_|Nix|_> However, if we can encode the defaults in CSS, then we do not need to add the classes that are default.
[11:53:42] <toddmparker> they do, but a lot of options are true by default so you don't need to explicitly set 'em
[11:53:53] <toddmparker> right
[11:54:09] <uGoMobi> we could decide to change the defaults in 1.4 right?
[11:54:15] <toddmparker> this somewhat comes back to that idea of using a pre-processor as a class config tool
[11:54:23] <_|Nix|_> Wait a sec ... we have ui-btn
[11:54:27] <toddmparker> uGoMobi: maybe
[11:54:37] <_|Nix|_> We could define ui-btn as having all the defaults.
[11:55:14] <_|Nix|_> Though I'm not sure how you would turn those off ...
[11:55:26] <toddmparker> think it may make sense to leave the classes as in generally and introduce a new class like ui-btn-defaultoptions (not really) that includes the true options into it
[11:55:36] <uGoMobi> yeah but if ui-btn has box-shadow because that's the default you need ui-no-shadow to unset
[11:55:43] <toddmparker> right, that avoids the need to ui-shadow-none
[11:56:02] <_|Nix|_> uGoMobi: Yeah, I realized that. It just inverts the whole thing but you need the same amount of classes.
[11:56:11] <toddmparker> and since we're adding to the class API, it's less distruptive
[11:56:28] <uGoMobi> _|Nix|_: I know you realized but I thought let's finish my line anyway ;-)
[11:56:37] <toddmparker> heh
[11:56:42] <_|Nix|_> That's the one redeeming quality of buttonMarkup: It can merge options ...
[11:56:58] <toddmparker> right. but it's js-dependent
[11:57:06] <_|Nix|_> Well, we could have one class for each combination.
[11:57:28] <_|Nix|_> That'd make for a funny name.
[11:57:31] <toddmparker> so uGoMobi - you're getting close to looking at inheritance and class reduction so that will provide the critical info here
[11:58:04] <uGoMobi> toddmparker: yes
[11:58:22] <toddmparker> so let's see how that shakes out, then look at potential solutions
[11:58:23] <_|Nix|_> uGoMobi: Is all this gradient-background-safe?
[11:58:35] <_|Nix|_> uGoMobi: In case somebody wants to make a theme with a gradient background?
[11:59:06] <uGoMobi> _|Nix|_: yeah, shouldn't be a problem
[11:59:17] <_|Nix|_> OK.
[11:59:18] <uGoMobi> background can't be inherited anyway
[11:59:35] <uGoMobi> so we have to set it, plain color or gradient doesn't matter
[12:00:09] <toddmparker> bg can't be inherited?
[12:00:43] <arschmitz> nope
[12:00:47] <toddmparker> huh, interesting
[12:01:08] <_|Nix|_> uGoMobi: So, correct me if I'm wrong: The goal for theme inheritance is to achieve this: If you set a theme on an element, all its children will have that theme, right?
[12:01:09] <uGoMobi> https://developer.mozilla.org/en-US/docs/CSS/background
[12:01:18] <toddmparker> uGoMobi: guessing we're going to have to add more widget scopes to get inheritance to work
[12:01:39] <uGoMobi> we have to do something smart with the selectors
[12:01:46] <toddmparker> right
[12:01:53] <uGoMobi> _|Nix|_: that's right
[12:02:02] <_|Nix|_> uGoMobi: OK. Just checking.
[12:02:36] <toddmparker> especially important for groups of button-y things like list views and controlgroups
[12:02:48] <uGoMobi> yes
[12:02:49] <_|Nix|_> uGoMobi: Also, there're multiple kinds of themes. There's theme, and divider-theme, and header-theme, and count-theme, etc.
[12:03:02] <toddmparker> so you can ideally set it on the parent and it ripples down
[12:03:19] <_|Nix|_> uGoMobi: So, if we do that all-the-children-have thing, then we need to do that for each kind of theme.
[12:03:20] <toddmparker> but you can also add a class on an inter inside and that will take precedence
[12:03:46] <uGoMobi> .ui-body-a .ui-btn { }
[12:03:54] <toddmparker> ^ right
[12:04:24] <_|Nix|_> toddmparker: Exactly. I think of it like poking a stick into a river: It makes a v-shaped wave on the water's surface. Now, if you poke a second stick into this wave, it makes a second smaller v inside the bigger v.
[12:04:40] <_|Nix|_> I just had to get that image off my mind. Sorry!
[12:05:29] <toddmparker> .ui-listview.ui-btn-a li { }
[12:05:29] <uGoMobi> we have to make sure that if you set a theme on a button itself that the selector that matches has a higher level of specificity
[12:05:42] <toddmparker> right, it's going to be tricky
[12:06:00] <uGoMobi> to make sure the if you specify swatch A it still overrides swatch Z for the body
[12:06:17] <uGoMobi> while style for swatch A precedes swatch Z in the stylesheet
[12:06:27] <toddmparker> i'm ok with losing some of the inheritance for convenience (i.e. all forms inside a container inherit), my main goal is reducing redundancy for list views and such
[12:06:38] <arschmitz> i think we need to add a section on css specificity lol people are going to get SOOO confused and file issues
[12:06:49] <toddmparker> agreed
[12:06:55] <toddmparker> good faq?
[12:07:11] <arschmitz> there is a faq about it but i think it needs to be expanded
[12:07:22] <arschmitz> it basicly just says check your specificity
[12:07:26] <toddmparker> ok
[12:07:32] <arschmitz> but maybe add some info about how specificity works
[12:07:38] <toddmparker> heh. "do it right, ok?"
[12:07:51] <toddmparker> great work on this stuff
[12:08:04] <toddmparker> arschmitz: you've gotten some goodies done this week too
[12:08:12] <arschmitz> yup!
[12:08:39] <arschmitz> branch page-sections is actually the removal of page.sections
[12:09:01] <uGoMobi> .ui-body-a .ui-btn, a.ui-btn.ui-btn-a { }
[12:09:01] <uGoMobi> .ui-body-z .ui-btn, a.ui-btn.ui-btn-z { }
[12:09:12] <uGoMobi> that should work ^^
[12:09:32] <_|Nix|_> arschmitz: Actually, next anticipates that. I've removed .ui-header > a and .ui-footer > a from the buttonMarkup "initSelector".
[12:09:35] <toddmparker> my brain hurts
[12:09:37] <uGoMobi> but also need to add button.ui-btn.ui-btn-a selector
[12:09:49] <arschmitz> it moves logic that was in page.sections to page widget and new toolbar widget
[12:09:57] <toddmparker> arschmitz: great
[12:10:01] <arschmitz> moves btn logic for headers to toolbar
[12:10:09] <toddmparker> be good to have that properly structured
[12:10:11] <_|Nix|_> uGoMobi: Only a.ui-btn? What about input and button?
[12:10:20] <arschmitz> it alows both fixed and regular toolbars outside of pages
[12:10:43] <toddmparker> that is hot
[12:10:55] <uGoMobi> _|Nix|_:  but also need to add button.ui-btn.ui-btn-a selector (and div.ui-btn.ui-btn-a for the input)
[12:10:58] <arschmitz> Makes true persistant tolbars possivle
[12:11:06] <toddmparker> so you can use a single header across multiple pages
[12:11:11] <arschmitz> yup!
[12:11:14] <toddmparker> nice
[12:11:21] <arschmitz> and made demo of checking http headers for ajax request
[12:11:22] <toddmparker> are they less jumpy then too?
[12:11:27] <_|Nix|_> uGoMobi: I think my brain just segfaul0)@)Q))>...@
[12:11:39] <toddmparker> http://view.jquerymobile.com/page-sections/demos/widgets/headers/footer-persist-a.php
[12:11:40] <arschmitz> yes because transitions dont take place on toolbars
[12:12:08] <arschmitz> the demo is nice because when its an ajax request it only sends the actual page div
[12:12:15] <arschmitz> no head or header / footer
[12:12:25] <arschmitz> but if you refresh it sends them
[12:12:32] <uGoMobi> cool!
[12:12:33] <toddmparker> perfect
[12:12:37] <toddmparker> smart
[12:12:52] <arschmitz> makes page loading quicker
[12:13:13] <_|Nix|_> arschmitz: That's great. No need to load what you already have.
[12:13:19] <arschmitz> exactly
[12:13:32] <arschmitz> im going to attack panels in same manor next
[12:13:36] <toddmparker> that will be a very important demo to explain in detail
[12:13:42] <arschmitz> yeah for sure
[12:13:45] <toddmparker> be good to link to that from the header docs page
[12:14:08] <arschmitz> it is
[12:14:20] <arschmitz> its on persistant page a at bottom
[12:14:33] <uGoMobi> arschmitz: are you going to look at this for panels https://github.com/jquery/jquery-mobile/issues/5659#issuecomment-16912295
[12:14:47] <arschmitz> yes
[12:14:52] <uGoMobi> ok, great
[12:15:26] <arschmitz> thats a little ways out want to polish off toolbars first though
[12:15:39] <uGoMobi> of course
[12:15:54] <arschmitz> also have a branch up for tabs
[12:16:26] <arschmitz> uses ui tabs as is and uses a very small file to made it a mobile widget with auto init
[12:16:45] <uGoMobi> with navbar?
[12:16:56] <arschmitz> i have demos with navbars and inset lists
[12:16:59] <toddmparker> http://view.jquerymobile.com/tabs/demos/widgets/tabs/
[12:17:26] <uGoMobi> looks good
[12:17:26] <arschmitz> i think we should no do any default css or style
[12:17:31] <arschmitz> leave them flexible
[12:17:48] <toddmparker> we did that with tables and panels - keep it very minimal
[12:17:52] <uGoMobi> I agree
[12:18:02] <toddmparker> this seems to leverage whatever widgets we already have which is nice
[12:18:08] <arschmitz> yeah
[12:18:14] <toddmparker> arschmitz: this one seems to not work - http://view.jquerymobile.com/tabs/demos/widgets/tabs/tabbed-content.php
[12:18:20] <uGoMobi> we can check if styling is ok when you add ui-body-? class
[12:18:40] <toddmparker> we need to set an on state too
[12:19:02] <arschmitz> toddmparker: that link is working for me
[12:19:38] <toddmparker> ah, think you need data-ajax="false"
[12:19:44] <toddmparker> ok if i refresh
[12:19:45] <arschmitz> yup was just typeing that lol
[12:20:01] <toddmparker> nice
[12:20:17] <arschmitz> an intresting effect of this is it still works with ajax tabs
[12:20:20] <toddmparker> productive week everyone
[12:20:32] <arschmitz> so you can hav different ajax pages on each tab without nav
[12:20:51] <toddmparker> that is slick
[12:20:57] <_|Nix|_> toddmparker: For sure, but merging it all into master ... d00000d!
[12:21:01] <toddmparker> you are you calling create on the ajax contents?
[12:21:24] <arschmitz> no right now it only does the basic ui functionality with auto init
[12:21:33] <toddmparker> this feels like it might cover most fetch link cases
[12:21:50] <toddmparker> if there are widgets in the response, are they enhanced?
[12:22:06] <toddmparker> if not, that would be good to add
[12:22:20] <arschmitz> no
[12:22:24] <arschmitz> but there is a callback
[12:22:30] <arschmitz> so its easy to wire up
[12:22:34] <toddmparker> ok
[12:22:54] <toddmparker> good stuff
[12:23:05] <toddmparker> 1.4 is coming together nicely
[12:23:12] <_|Nix|_> Tons of good stuff ... :)
[12:23:18] <uGoMobi> for sure
[12:23:28] <_|Nix|_> BTW:
[12:23:42] <_|Nix|_> I'm going to be in San Francisco between May 22 - 24 ...
[12:23:47] <_|Nix|_> Tizen Developers Conference ...
[12:23:53] <uGoMobi> nice
[12:24:01] <_|Nix|_> So, if anybody is in that general vicinity ... lemme know.
[12:24:03] <arschmitz> wrong coast lol!
[12:24:09] <_|Nix|_> arschmitz: I know ...
[12:24:17] <toddmparker> gseguin|away and johnbender are both there
[12:24:22] <arschmitz> yup
[12:24:32] <_|Nix|_> gseguin|away is back in SFO?
[12:24:36] <uGoMobi> I thought gseguin|away was in Colorado
[12:24:38] <toddmparker> oops
[12:24:40] <_|Nix|_> I though he was in CO
[12:24:42] <toddmparker> you're right
[12:24:58] <arschmitz> still closer to west coast lol
[12:25:04] <toddmparker> true
[12:25:11] <_|Nix|_> So, johnbender might be a candidate for beering it.
[12:25:20] <toddmparker> yep
[12:25:25] <_|Nix|_> Yeah ... other side of the mountains.
[12:25:40] <toddmparker> alright everyone, think we can wrap up so I can grab some lunch
[12:25:45] <johnbender> _|Nix|_: ah nice
[12:25:58] <toddmparker> any other topics to discuss?
[12:26:05] <_|Nix|_> johnbender: Yeah ... lessee if we can set something up ...
[12:26:06] <toddmparker> questions from the community?
[12:26:21] <_|Nix|_> queue jeopardy music ...
[12:26:27] <johnbender> _|Nix|_: we'll see I have a hard time sneaking away for confs
[12:26:36] <johnbender> _|Nix|_: two year old and a busy professional wife :)
[12:26:36] <_|Nix|_> johnbender: NP.
[12:26:43] <_|Nix|_> johnbender: Tell me about it.
[12:28:08] <uGoMobi> later all
[12:28:10] <_|Nix|_> OK ... so ... ummm ... -dev?
[12:28:15] <_|Nix|_> I guess so ...
[12:28:20] <_|Nix|_> L8Rz
[12:29:06] <toddmparker> alright everyone
[12:29:16] <toddmparker> thanks - you're all cranking!
