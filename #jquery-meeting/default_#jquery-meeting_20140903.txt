[09:01:35] <scott_gonzalez> arschmitz gnarf jzaefferer kborchers mikesherov petersendidit rxaviers tj_vantoll
[09:01:50] <arschmitz> hi
[09:01:53] <tj_vantoll> hey
[09:01:54] <kborchers> hey
[09:04:27] <mikesherov> hi
[09:05:01] <scott_gonzalez> arschmitz: Button update?
[09:05:17] <arschmitz> i rebased with the classes option
[09:05:27] <jzaefferer_> hi
[09:05:28] <arschmitz> and updated the new widgets to use it
[09:05:40] <jzaefferer_> I was on time, but my IRC client failed me :/
[09:06:08] <arschmitz> and have fixed all the issues that are not listen in the description of the pr
[09:06:43] <arschmitz> listed*
[09:07:04] <fnagel> hey
[09:08:32] <jzaefferer_> fnagel: something on datepicker?
[09:08:51] <arschmitz> and added a new demo for checkboxradio http://view.jqueryui.com/button/demos/checkboxradio/product-selector.html
[09:09:26] <arschmitz> which i see i need to update the description on lol
[09:09:30] <tj_vantoll> arschmitz: I like the demo a lot. It should probably default to the background image being on.
[09:09:39] <arschmitz> tj_vantoll: yeah i think your right
[09:09:53] <tj_vantoll> Because when you change the “brand” at first you don't see what you're changing.
[09:10:28] <fnagel> waiting for scotts review
[09:10:28] <fnagel> updated the PR with alex and tjs comments
[09:10:29] <arschmitz> yeah it just changes the background color to match otherwise
[09:10:44] <scott_gonzalez> There are a few things about this demo that bother me.
[09:10:50] <scott_gonzalez> The reliance on external images.
[09:10:59] <scott_gonzalez> The massive amount of CSS.
[09:11:42] <arschmitz> the images could be added other demos have some. the css though cant do much about with out changing it a lot
[09:12:53] <arschmitz> its all just setting the colors
[09:13:52] <scott_gonzalez> The demo can be reduced a lot while staying pretty much the same.
[09:13:57] <tj_vantoll> You should be able to drop the -moz- prefixes.
[09:14:13] <tj_vantoll> And the -ms- ones actually.
[09:14:23] <scott_gonzalez> Drop all of the animation stuff.
[09:14:52] <tj_vantoll> Yeah it adds a lot of code that's not what the demo necessarily is trying to show.
[09:14:53] <scott_gonzalez> Put the colors in data attributes and just change the background color/shadow directly instead of classes.
[09:15:15] <scott_gonzalez> Drop the ids since they're not used.
[09:15:44] <arschmitz> the ids are used
[09:16:30] <arschmitz> at least on the checkboxes
[09:16:52] <arschmitz> well no on all they are needed for the labels
[09:17:21] <scott_gonzalez> oh, right
[09:17:30] <jzaefferer> We can review that in the PR
[09:17:58] <jzaefferer> Sounds like we agree on simplifying the demo a bit
[09:18:16] <scott_gonzalez> It's just strange that the majority of the code isn't related to how button works.
[09:18:48] <scott_gonzalez> I haven't had time to look at the datepicker PR.
[09:19:12] <scott_gonzalez> For selectmenu, we're thinking that we'll just leave the accesskey attributes alone.
[09:19:26] <jzaefferer> Me neither, still want to at least test datepicker
[09:19:29] <scott_gonzalez> In browsers that support accesskey on options, it means that the selects can be out of sync.
[09:19:47] <scott_gonzalez> Because the accesskey for the option will still activate the option even if it's hidden.
[09:19:56] <fnagel> at least in chrome
[09:19:58] <scott_gonzalez> But this isn't supported cross-browser.
[09:20:07] <scott_gonzalez> So we're going to assume people aren't doing this.
[09:20:09] <scott_gonzalez> And just ignore it.
[09:20:20] <scott_gonzalez> We'll lobby for browser vendors to make accesskey work properly for us though.
[09:20:30] <fnagel> Should we document this only in the ticket?
[09:20:51] <fnagel> scott_gonzalez: you wanted to answer that ticket
[09:20:59] <jzaefferer> Sounds like something we should put in the documentation
[09:21:10] <scott_gonzalez> Yeah, we should document it.
[09:21:18] <scott_gonzalez> Proper documentation, on the API site.
[09:21:50] <scott_gonzalez> https://github.com/jquery/api.jqueryui.com/issues/228
[09:22:11] <jzaefferer> So can we close the PR?
[09:22:34] <fnagel> Merge and close as we still copy title attriutes
[09:22:49] <jzaefferer> Oh, right
[09:23:03] <scott_gonzalez> The PR needs to be updated.
[09:23:06] <jzaefferer> The unit test still checks for accesskey
[09:23:28] <jzaefferer> the one for the destroy method
[09:23:35] * rxaviers raises his hand to talk about datepicker
[09:23:46] <scott_gonzalez> rxaviers: go ahead
[09:23:55] <fnagel> I will fix that
[09:24:09] <rxaviers> it's a long time I dont follow updates and clearly fnagel did a great job so far
[09:24:46] <rxaviers> I've made two comments today to remember two topics I'd like to bring up to the team to discuss
[09:25:13] <rxaviers> 1) Data translations for all languages.
[09:25:29] <rxaviers> A long time ago, I remember talking with scott_gonzalez about it, and we realized we should get rid of this data and let user supply them.
[09:25:37] <rxaviers> Is that correct?
[09:26:03] <scott_gonzalez> Yes, via options.
[09:26:22] <rxaviers> ok
[09:26:49] <rxaviers> So, in -dev could start discussing the API for this new options....
[09:27:03] <rxaviers> The 2nd item) external/date.js
[09:27:22] <scott_gonzalez> What exactly does date.js do?
[09:27:35] <rxaviers> date.js is not an external library. But, it's part of the calendar implementation.
[09:27:46] <rxaviers> it has helper functions for the calendar as far as I remember
[09:28:00] <jzaefferer> What does 1) refer to? The strings for "prev", "next" etc.?
[09:28:07] <fnagel> We decided to move this to ui folder  https://github.com/jquery/jquery-ui/pull/1260#issuecomment-47407056
[09:28:15] <rxaviers> (jzaefferer, yes)
[09:28:21] <fnagel> basicaly its a date object rewrite
[09:28:40] <jzaefferer> Letting the user supply those doesn't sound like a good idea to me
[09:28:55] <scott_gonzalez> jzaefferer: That's what we do today.
[09:28:56] <rxaviers> fnagel, Ah! great! Thanks for finding this log
[09:29:04] <scott_gonzalez> But we provide the values, which we're no longer going to do.
[09:29:09] <scott_gonzalez> It's just too much to maintain.
[09:29:10] <fnagel> rxaviers: boomarks ftw :-)
[09:29:15] <jzaefferer> We should get the Wikimedia folks to use their translations power to translate these into all languages, with decent Q/A so that we have that solved once and for all
[09:29:20] <rxaviers> :)
[09:29:29] <scott_gonzalez> jzaefferer: And where does that data go?
[09:30:17] <scott_gonzalez> And how is this different from dialog's close option?
[09:30:19] <scott_gonzalez> closeText
[09:30:20] <rxaviers> I am not convinced this is a better approach. There's always fixes to be made.
[09:30:23] <rxaviers> on the data
[09:30:48] <fnagel> I dont like the idea of having about 5 or 6 xyzText options
[09:30:58] <fnagel> we dont want to use sub array, right?
[09:30:58] <jzaefferer> So we'd only bundle the english labels as the defaults and nothing else?
[09:31:00] <scott_gonzalez> How many are there?
[09:31:10] <fnagel> give me a second
[09:31:32] <rxaviers> User should be able to use whatever message they want to.
[09:31:45] <rxaviers> Users*
[09:31:46] <jzaefferer> Current datepickr has 4 xxxText options
[09:32:09] <jzaefferer> The rest can be supplied by CLDR
[09:32:25] <scott_gonzalez> What are they?
[09:32:52] <jzaefferer> closeText, prevText, nextText, currentText
[09:33:00] <fnagel> jzaefferer: I count 5 text strings
[09:33:08] <scott_gonzalez> currentText doesn't exist.
[09:33:11] <scott_gonzalez> There are no buttons.
[09:33:15] <fnagel> and datePickerRole
[09:33:19] <tj_vantoll> In the rewrite*
[09:33:37] <jzaefferer> I guess there's also "weekHeader"
[09:33:40] <scott_gonzalez> fnagel: role is not a translatable string.
[09:33:52] <tj_vantoll> Ditto closeText, it controls the text of a button.
[09:34:19] <fnagel> In the rewrite its 5: weekHeader, prevText, nextText , datePickerRole, weekHeader
[09:34:33] <jzaefferer> you have a duplicate
[09:34:48] <fnagel> scott_gonzalez: I dont know why it was translated, its used in _buildTitlebar
[09:35:01] <scott_gonzalez> I assume it's the role attribute?
[09:35:05] <fnagel> oh, sorry. its currentText instead of last weekHeader
[09:35:25] <fnagel> Its within a ui-helper-hidden-accessible paragraph
[09:35:29] <scott_gonzalez> I feel like we've been over this a million times. currentText doesn't exist. There is no today button.
[09:36:05] <scott_gonzalez> Has the today button been added back at some point without discussion?
[09:36:10] <jzaefferer> datePickerRole is used as the text of a ui-helper-hidden-accessible span
[09:36:21] <fnagel> No, its removed. Buts the current day in the calendar grid has a ui-helper-hidden-accessible element with currentText in it
[09:36:34] <fnagel> jzaefferer: same for currentText
[09:37:29] <scott_gonzalez> What is datePickerRole?
[09:38:09] <scott_gonzalez> Nevermind, we're going to spend too much time on this. I'll get to this when I do a review of the code.
[09:38:34] <jzaefferer> Hans added that to tell a screenreader user what he's "looking" at
[09:38:41] <tj_vantoll> This is something we can discuss in Chicago too. It's time consuming over irc.
[09:38:45] <jzaefferer> ok
[09:38:49] <rxaviers> true
[09:38:51] <fnagel> jzaefferer: yep, it adds a ", date picker" text
[09:39:01] <fnagel> ok
[09:39:16] <rxaviers> one more thin
[09:39:17] <rxaviers> g
[09:39:39] <fnagel> I think we should focus on merging the current PR to datepicker branch befoere changing other things anyway
[09:39:54] <rxaviers> fnagel, the issue you are seeing has been fixed. Im updating Globalize on your branch.
[09:40:10] <jzaefferer> regarding Rafael's 2) Moving date.js to ui/ makes more sense then pretending its an external module. I'm not quite happy with that either. A lot of it actually overlaps with what moment.js does
[09:40:13] <rxaviers> actually, I will push the changes to my branch, then you can fetch them. Or we push it to jquery repo
[09:40:30] <scott_gonzalez> fnagel: If this stuff already existed, that's fine. If it was added, then it needs to be reviewed/changed before the merge.
[09:40:58] <fnagel> scott_gonzalez: which stuff?
[09:41:10] <scott_gonzalez> Everything we're talking about.
[09:41:15] <jzaefferer> "existed" in the datepicker branch? Or in the current datepicker?
[09:41:20] <fnagel> rxaviers: that "if I change my system clock" issue?
[09:41:22] <scott_gonzalez> datepciker branch
[09:41:34] <rxaviers> (fnagel, yeap)
[09:41:54] <scott_gonzalez> I've only reviewed commits, not the full code.
[09:41:55] <jzaefferer> datePickerRole exists in the datepicker branch already
[09:41:57] <fnagel> rxaviers: cool!
[09:42:23] <jzaefferer> We have a lot of dependencies between branches
[09:42:25] <fnagel> All of these translatable strings already existed
[09:42:50] <jzaefferer> Globalize update needs requirejs, which should happen separetely, datepicker needs Globalize update
[09:43:14] <jzaefferer> button rewrite needs classes option
[09:43:33] <arschmitz> jzaefferer: guess you missed that
[09:43:47] <arschmitz> jzaefferer: it has been rebased and all the widget have the classes option added
[09:44:06] <arschmitz> i think i said it when you were having irc issues at beginning of meeting
[09:44:10] <jzaefferer> Well, classes option is still not in master, right? So you still depend on that other branch
[09:44:16] <arschmitz> jzaefferer: yes
[09:44:30] <jzaefferer> If we make changes to master or classes, you need to rebase classes and button
[09:44:37] <rxaviers> worth updating respective PR description to include that Dependency info
[09:45:05] <arschmitz> jzaefferer: yup but this is what it was decided was wanted at last meeting
[09:45:08] <jzaefferer> with requirejs -> globalize -> datepicker its even worse
[09:45:45] <jzaefferer> I don't see any better way to deal with that except to land this dependencies in master as soon as possible
[09:45:59] <scott_gonzalez> Speaking of classes...
[09:46:03] <jzaefferer> Which is why I had asked Rafael to start working on updating demos and tests to use requirejs
[09:46:11] <scott_gonzalez> arschmitz pointed out that the PR doesn't handle changes after init.
[09:46:46] <scott_gonzalez> I said that I'd be ok with classes being an init-only option, but then he pointed out valid use cases for changing it.
[09:47:10] <scott_gonzalez> And there's no good way to abstract this so that the base widget can handle it.
[09:47:19] <tj_vantoll> Curious what those use cases are.
[09:47:21] <scott_gonzalez> We'd need to expose a way to know which elements are tied to which keys.
[09:47:46] <arschmitz> tj_vantoll: controlgroup excludeInvisibles option
[09:47:47] <scott_gonzalez> For example a control group which has its first or last button's visibility togglable.
[09:48:03] <scott_gonzalez> You'd want to change the corner classes dynamically based on position.
[09:48:41] <arschmitz> yup
[09:48:55] <scott_gonzalez> Though we could just not set any corner classes at all and then do it exclusively through the controlgroup widget.
[09:49:16] <scott_gonzalez> So it'd be : { "ui-button": "" } instead of { "ui-button": "ui-corner-left" }
[09:49:23] <tj_vantoll> Yeah it seems like things that could change like that shouldn't be a part of classes.
[09:49:36] <arschmitz> scott_gonzalez: yes then controlgroup needs to listen to the selectmenuopen / close events
[09:49:49] <arschmitz> and adjust the corner classes in response
[09:50:03] <arschmitz> tj_vantoll: no they SHOULD be to be able to have the option useful at all
[09:50:21] <arschmitz> otherwise you could just do it yourself after init by doing add and remove class
[09:50:37] <scott_gonzalez> arschmitz: That's not true.
[09:50:42] <arschmitz> thats the real uses of classes is to be able to have dynamic things handled for you
[09:50:50] <scott_gonzalez> We didn't have dynamic classes in mind at all when designing this.
[09:50:54] <scott_gonzalez> And it was plenty useful.
[09:51:03] <scott_gonzalez> That's not the real use of classes.
[09:51:19] <jzaefferer> Let's move that discussion to the PR as well?
[09:51:40] <tj_vantoll> In general I fear allowing changes to classes after init because it seems like a big mess.
[09:51:45] <jzaefferer> We're still talking about https://github.com/jquery/jquery-ui/pull/790 - right?
[09:51:54] <tj_vantoll> Yes
[09:51:56] <scott_gonzalez> yes
[09:52:30] <arschmitz> for the record right now this works for controlgroup fine as is
[09:53:27] <jzaefferer> Would be good to point out the problem with examples on that PR, then we can discuss there
[09:53:54] <jzaefferer> rxaviers: wanna go through your Globalize list?
[09:54:07] <arschmitz> while we are on classes there is on more minor thing
[09:54:30] <arschmitz> right now in the PR it is inconsistent between null and an empty string when you want nothing
[09:54:36] <arschmitz> we should do one or the other
[09:54:43] <rxaviers> sure
[09:54:50] <scott_gonzalez> I'd prefer empty strings in this case.
[09:54:55] <scott_gonzalez> So that += " foo" works
[09:55:01] <arschmitz> yeah +1
[09:55:19] <tj_vantoll> +1
[09:55:54] <rxaviers> On Globalize, the big blockers for 1.0.0 (supporting Datepicker and Spinner) are (a) the generators, (b) currency formatting and parsing, and (c) test automation (which almost worked, but it didnt. I see timeout issues on the automation, which do not happen manually).
[09:56:14] <scott_gonzalez> Added a comment on the PR about the empty strings.
[09:56:41] <rxaviers> I initiated work on the number format generator as a proof of concept
[09:58:08] <jzaefferer> For some background: As far as I can see it, the main motivation for the generator is to pass functions to datepicker or spinner, which are then used for parsing and formatting
[09:58:19] <jzaefferer> That way these widgets don't have to depend directly on Globalize
[09:58:35] <rxaviers> well put
[09:58:36] <jzaefferer> Which is pretty important for spinner, since AMD has no concept of optional dependencies
[09:59:19] <jzaefferer> so { parser: Globalize.numberParser( options ), formatter: Globalize.numberFormatter({ currency: "EUR" }) }
[09:59:55] <jzaefferer> Makes spinner very flexible, since you could use new Intl.NumberFormat(...).format or anything else that supports the same signature
[10:00:24] <jzaefferer> It also happens to be good for performance, since the actual formatting has very low overhead compared to constructing the formatter
[10:01:02] <jzaefferer> scott_gonzalez tj_vantoll fnagel: Any thoughts on that?
[10:01:17] <rxaviers> thanks jzaefferer, more info about what jzaefferer has said can also be found in here https://github.com/jquery/globalize/issues/294
[10:01:57] <tj_vantoll> I certainly like the idea of making Globalize an optional dependency.
[10:02:08] <tj_vantoll> It's important for datepicker as well.
[10:02:33] <rxaviers> We may be able to do it for datepicker is we reduce our current dependency on it
[10:02:39] <rxaviers> for example, the translations we were talking before.
[10:02:48] <rxaviers> s/is/if
[10:02:50] <fnagel> I don't think somebody will actually use datepicker or calendar without globalize
[10:03:08] <tj_vantoll> How big is Globalize 1.0 in terms of filesize?
[10:03:14] <rxaviers> ouch true
[10:03:24] <jzaefferer> This is more about spinner then datepicker
[10:03:30] <rxaviers> datepicker doesn't only use Globalize for formatting and parsing dates. But, for the calendar implementation itself.
[10:03:32] <jzaefferer> (or calendar)
[10:03:53] <rxaviers> tj_vantoll, https://github.com/jquery/globalize/#pick-the-modules-you-need
[10:04:14] <rxaviers> datepicker needs Globalize core + date [+ message]
[10:04:27] <tj_vantoll> rxaviers: Ah okay thanks. That's not too bad.
[10:04:41] <fnagel> Whats "message"
[10:04:46] <rxaviers> translations
[10:05:14] <fnagel> thx
[10:05:14] <rxaviers> that's all for Glboalize
[10:05:22] <rxaviers> This week, I want to go deeper on Datepicker
[10:05:37] <tj_vantoll> I like the proposed APIs for Globalize/spinner.
[10:05:53] <rxaviers> cool ;)
[10:06:06] <fnagel> This way it should be possible to make this happen for calendar / datepicker too
[10:06:07] <rxaviers> To make sure the 1.0.0 issues reflect the actual need
[10:06:55] <fnagel> together with the options for localized strings
[10:07:03] <jzaefferer> Sounds sane to remove the dependency of calendar on Globalize for "translating" the text strings, like "nextText"
[10:07:27] <fnagel> +1
[10:07:31] <rxaviers> yeap
[10:07:38] <jzaefferer> If those are just plain options that the user has to override, we only need Globalize for date parsing and formatting and providing the calendar "data"
[10:08:09] <tj_vantoll> Agred
[10:08:13] <tj_vantoll> Agreed even
[10:08:14] <rxaviers> yeap
[10:08:42] <rxaviers> Spinner needing formatting and parsing functions only makes it really flexible, eg. being able to use ECMA-402 Intl formatters and parsers.
[10:08:44] <fnagel> I add this to my to do list
[10:08:50] <rxaviers> It would be cool to have something similar with datepicker.
[10:09:33] <fnagel> so, built in basic formatters?
[10:09:59] <fnagel> this leads to removing dateFormat option
[10:10:45] <tj_vantoll> Or dateFormat could be a function maybe.
[10:10:52] <tj_vantoll> Optionally
[10:11:08] <tj_vantoll> No that's kind of weird. We could play with some APIs though.
[10:13:47] <fnagel> I like the idea of making Globalize optional. By default the widget would support US standards, right?
[10:38:50] <jzaefferer> There's more to the calendar dependency on Globalize then just date formatting and parsing
[10:39:19] <jzaefferer> The various formats, the strings for month and day names, all that comes from Globalize anyway
[10:40:12] <jzaefferer> tj_vantoll: ^^
[10:40:24] <jzaefferer> (should've put that on -dev
