[08:53:24] <timmywil> .
[08:59:09] <DaveMethvin> ..
[09:00:13] <timmywil> ..................
[09:00:31] <timmywil> DaveMethvin, markelog_____, m_gol, arthurvr meeting time
[09:00:45] <markelog_____> hey-hey
[09:00:53] <timmywil> how's it goin all
[09:01:06] <DaveMethvin> pretty good
[09:01:44] <timmywil> So, I just landed the PR for returning null in attributes
[09:02:13] <timmywil> gibson landed the CSS PR last week and there seems to be some CSS failures related to that
[09:02:53] <timmywil> I'd like to see the Deferred PR landed soon, but it's got some conflicts. I'll ping him about that.
[09:03:51] <timmywil> Would anyone be willing to grab https://github.com/jquery/jquery/pull/2043
[09:03:55] <timmywil> to merge
[09:04:24] <timmywil> Actually, I can
[09:04:42] <timmywil> DaveMethvin: I've noticed lots of activity on migrate. How's that going?
[09:04:48] <DaveMethvin> pretty well
[09:04:51] <timmywil> Looks like some stuff needs worked out on deferred
[09:05:00] <DaveMethvin> i have a few prs that could use review
[09:05:15] <DaveMethvin> gibson042 gave me some pointers on one of them and i should have it done soon
[09:05:22] <m_gol> present
[09:05:35] <timmywil> Cool
[09:05:41] <DaveMethvin> oh also timmywil i owe you the draft blog post
[09:05:53] <DaveMethvin> haven't forgotten, just lazy and no good
[09:05:57] <timmywil> yup! that would be great :)
[09:06:02] <timmywil> DaveMethvin: hey! me too!
[09:06:09] <DaveMethvin> we should start a club
[09:06:14] <DaveMethvin> nah too much work
[09:06:22] <timmywil> heh
[09:07:33] <timmywil> gibson042: you here?
[09:07:38] <gibson042> yep
[09:07:42] <m_gol> ouch ouch, why is everything so red?
[09:07:59] <timmywil> gibson042: how's your stuff goin
[09:08:09] <gibson042> and looking at my schedule, this is the week to get a bunch of stuff in
[09:08:19] * timmywil dances
[09:08:22] <gibson042> including finally merging the deferred changes, which should happen tomorrow
[09:08:26] * timmywil looks bad dancing
[09:08:45] <timmywil> awesome, that's the bigun
[09:09:10] <timmywil> I'm still working on data. Wasn't able to get to it last week. Looking better this week, tho.
[09:09:16] <m_gol> it'd be good to have a green state before that lands, otherwise it's hard to be sure if this PR didn't break anything
[09:09:43] <timmywil> oh, right
[09:09:59] <gibson042> for sure
[09:10:11] <timmywil> yea, looks like mostly css failures related to +-
[09:10:39] <m_gol> off by one, the best kind
[09:10:49] <timmywil> yup
[09:11:02] <timmywil> gibson042: probably related to that pr, yea?
[09:11:04] <m_gol> also, dimensions float issue in IE
[09:11:06] <gibson042> yeah
[09:11:25] <m_gol> these ones started a few weeks ago
[09:11:54] <timmywil> for dimensions, it's ok that it's returning a float right?
[09:12:11] <timmywil> cause we stopped rounding, iirc
[09:13:08] <arschmitz> timmywil: api docs say you did http://api.jquery.com/outerheight/
[09:13:48] <m_gol> seems like that
[09:13:52] <timmywil> ok, so minor test update
[09:13:58] <arthurvr> Hey all! :D
[09:13:58] <DaveMethvin> outerHeight/Width can be fractional
[09:14:04] <DaveMethvin> hey arschmitz
[09:14:07] <DaveMethvin> arthurvr:
[09:14:13] <DaveMethvin> hey everyBODY!
[09:14:21] <timmywil> OI
[09:14:34] <DaveMethvin> the reason is b/c borders and margins can be
[09:14:38] <timmywil> gibson042: you ok if I take https://github.com/jquery/sizzle/issues/316?
[09:15:28] <gibson042> sure
[09:15:42] <gibson042> that one's super straightforward
[09:15:51] <timmywil> and once that lands, is there anything else that we want in before a Sizzle release?
[09:17:09] <timmywil> once we get Sizzle merged, we can knock out several jquery issues
[09:17:19] <gibson042> I still want to look over the https://github.com/jquery/sizzle/issues/311 fix
[09:17:39] <timmywil> oh sure
[09:17:42] <gibson042> but that all falls into the stuff I'll be doing this week
[09:17:56] <gibson042> so a Sizzle release within the next 8 days is highly likely
[09:18:21] <DaveMethvin> like snow in Boston i guess
[09:18:51] <timmywil> oh yea, I was in Boston last weekend for PAX (SO MUCH FUN) and the snow was up to my neck on the side of the road
[09:19:16] <timmywil> seriously, parking meters were covered
[09:19:22] <gibson042> it has been a very melty week up here
[09:19:24] <DaveMethvin> ours just melted off over the weekend
[09:19:37] <DaveMethvin> SO GLAD
[09:19:57] <m_gol> IE8 is completely broken in effects, what happened to that poor guy?
[09:21:00] <timmywil> hmm, not sure. they all look related to the queue tho
[09:21:47] <timmywil> would anyone have time to investigate that this week?
[09:22:05] <m_gol> unfortunately all the builds we have are red since older ones were purged
[09:22:08] <m_gol> where's that issue...
[09:22:31] <timmywil> yea, we'll get it green :)
[09:23:10] <DaveMethvin> hmmm
[09:23:11] <m_gol> 7cd9a36 is the first red commit according to https://github.com/jquery/jquery/issues/2104
[09:23:21] <m_gol> which is changing jQuery.each & #each signatures
[09:24:08] <DaveMethvin> the fail is pretty basic too
[09:24:16] <timmywil> hmm, so maybe compat was using that extra somewhere we missed
[09:24:20] <DaveMethvin> timers are still running
[09:24:21] <timmywil> extra arg
[09:24:25] <m_gol> seems like that
[09:24:35] <m_gol> otherwise nothing changed to warrant IE8 failures
[09:24:41] <m_gol> between these 2 commits
[09:25:23] <timmywil> m_gol: would you be able to commit a fix?
[09:25:32] <m_gol> I'll look into that, ys
[09:25:34] <m_gol> * yes
[09:25:41] <timmywil> cool
[09:26:14] <m_gol> btw, I think if we made sth red and we don't have a quick fix (like, to be done within next few hours) then we should revert; having a red build may scare contributors away as they have no way of seeing if they didn't break anything; at least in non-android browsers we should extra-care to not break the build for weeks or even days
[09:26:32] <DaveMethvin> yeah, broken builds are a pain
[09:27:25] <timmywil> yes, I'd agree with that for the future. For now, I think it'd be best to get it all green without reverts.
[09:27:40] <m_gol> sure
[09:28:32] <timmywil> I need to catch up on the discussions in markelog's latest PRs, but was there anything anyone wanted to bring up?
[09:28:43] <timmywil> not necessarily about those
[09:29:53] <timmywil> Ok, then I think we're in pretty good shape to make progress this week.
[09:30:21] <timmywil> DaveMethvin: I'll go through your migrate PRs
[09:30:23] <m_gol> did we reach any decision about https://github.com/jquery/jquery/issues/2139
[09:31:04] <timmywil> not a firm decision, but whatever we decide will have to wait until after 3.0
[09:31:05] <DaveMethvin> i suspect it may be easiest to stay with compat but drop ie8 on the next major release
[09:31:23] <DaveMethvin> since we have less than a year for ie8 to live
[09:31:26] <timmywil> yea, that seems to be where we're leaning.
[09:31:29] <timmywil> and I agree
[09:31:42] <m_gol> I agree as well
[09:31:50] <arthurvr> Iâ€™m a huge +1 as well
[09:31:53] <DaveMethvin> and if someone wants to keep using ie8 for longer they have all the old versions of jquery to choose from
[09:32:15] <timmywil> true
[09:32:18] <DaveMethvin> at that point i think it would definitely be nice to have a sizzle without such broad browser support
[09:32:25] <DaveMethvin> but it's a little ways off
[09:32:50] <timmywil> DaveMethvin: and that's on the roadmap
[09:32:53] <timmywil> for Sizzle
[09:33:10] <m_gol> this is https://github.com/jquery/sizzle/issues/294 for reference
[09:35:56] <timmywil> gibson042 just commented on my recent fix for non-elements and returning null in attributes
[09:35:57] <timmywil> https://github.com/jquery/jquery/commit/17bd6e9cf94f435807eeb538a47b5e506a01f4cb#commitcomment-10217441
[09:36:11] <timmywil> would it be better to return undefined in this case?
[09:36:20] <gibson042> I think so
[09:36:21] <timmywil> my thought was that if it's going through attr, it should return null
[09:36:28] <gibson042> leave the old source and update tests
[09:36:32] <timmywil> if it's going through prop, return undefined
[09:38:01] <DaveMethvin> is .attr() on a non-element a defined operation, really?
[09:38:26] <gibson042> DaveMethvin: I'd personally prefer that case to throw
[09:38:38] <gibson042> but `undefined` is more correct than `null`
[09:39:02] <timmywil> so, the docs would say that attr returns null for elements and undefined for everything else?
[09:39:12] <gibson042> I'm basically arguing that `null` means "the attribute you requested could have existed, but happens not to"
[09:39:26] <timmywil> I see
[09:39:32] <timmywil> I guess I can get on board with that
[09:39:34] <DaveMethvin> i'm just wondering about use cases of .attr() for non elements
[09:40:05] <m_gol> gibson042: this is basically what DOM does
[09:40:07] <DaveMethvin> and whether they are really in the domain of useful operations ... ideally i agree it could/should throw
[09:40:07] <timmywil> I can see why you'd throw, but unfortunately I imagine lots of code depends on that failing silently
[09:40:23] <m_gol> e.g. testing for History API support is checking if history.state !== undefined
[09:40:38] <timmywil> we still allow using .attr({})
[09:40:43] <timmywil> err
[09:40:45] <timmywil> you know what I mean
[09:40:47] <gibson042> you know what's really easy? `$collection.filter("*")`
[09:40:55] <DaveMethvin> haha
[09:41:02] <gibson042> I don't think we should encourage sloppiness
[09:41:42] <DaveMethvin> it's the extra checks and throwing that worries me, pretty soon we're giving localized error messages :)
[09:42:10] <gibson042> the browser will do that for us
[09:42:23] <timmywil> failing silently is not necessarily sloppy. It is arguably more useful to the user not to throw, since there will not be a usable value anyway.
[09:42:41] <DaveMethvin> well as long as it can be shimmed by Migrate, it's possible to do
[09:42:51] <DaveMethvin> just a question of how much code it will break and how badly
[09:43:03] <DaveMethvin> but we made it through 1.9 so who knows?
[09:43:06] <timmywil> I'm not sure, but my guess is it would break a lot
[09:43:23] <timmywil> especially for empty collections
[09:43:38] <timmywil> I don't want users to have to check .length every time they want to get an attribute after selecting
[09:43:50] <gibson042> timmywil: what do you mean?
[09:44:01] <DaveMethvin> oh that wouldn't break
[09:44:13] <DaveMethvin> empty sets return undefined for attrs don't they?
[09:44:28] <gibson042> yes
[09:44:44] <timmywil> I thought we were talking about throwing where that return is
[09:44:54] <timmywil> that if includes empty sets
[09:45:23] <gibson042> to clarify: I think we should throw on invalid input and return undefined on empty input
[09:45:26] <gibson042> https://github.com/jquery/jquery/issues/2134
[09:46:01] <gibson042> in the case of attr, it would look like just removing the non-element checks but leaving `!elem`
[09:46:26] <timmywil> I see
[09:46:46] <DaveMethvin> so, Migrate can shim that ... just a question of whether it breaks too much code
[09:46:50] <timmywil> well, if we change that, I would want to change it everywhere
[09:46:55] <gibson042> agreed
[09:47:10] <timmywil> so, we should make a decision in that issue before changing attr
[09:47:26] <DaveMethvin> that would make shimming a bit of a pain tho
[09:47:46] <DaveMethvin> since we'd need to shim almost every method
[09:47:46] <gibson042> for https://github.com/jquery/jquery/commit/17bd6e9cf94f435807eeb538a47b5e506a01f4cb specifically right now, I want to revert the change in src/attributes/attr.js and update tests instead
[09:48:15] <gibson042> https://github.com/jquery/jquery/issues/2134 is a laterâ€”and largerâ€”issue
[09:48:43] <timmywil> ok
[09:48:50] <timmywil> sounds good
[09:49:20] <timmywil> I'll go ahead and do that
[09:49:51] <timmywil> we can continue discussion of the larger issue in the ticket
[09:50:09] <gibson042> sounds good
[09:50:48] <timmywil> Ok, I think that's all for today. Thanks everybody!
[09:51:00] <timmywil> see you in -dev
