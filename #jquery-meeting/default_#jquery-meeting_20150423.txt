[09:00:26] <scott_gonzalez> `pepteam
[09:00:26] <b-ot> scott_gonzalez: arschmitz asir jperrault jrossi2 scott_gonzalez snover
[09:00:31] <snover> yoho.
[09:00:40] <arschmitz> Hi
[09:01:11] <scott_gonzalez> We released 0.3.0 this week :-)
[09:02:12] <scott_gonzalez> M4rius has been working on https://github.com/jquery/PEP/issues/177
[09:03:23] <scott_gonzalez> There's a related discussion going on in PEWG as well, about adding the ability to prevent all hit testing, so you wouldn't even get the over/out events for the capturing element.
[09:03:42] <scott_gonzalez> This would be used for performance reasons.
[09:04:27] <scott_gonzalez> But the discussion of how to opt-in to that is still ongoing.
[09:07:20] <scott_gonzalez> I'll be working on tests today and tomorrow.
[09:08:54] <snover> yeah, the holy altar of performance
[09:10:15] <scott_gonzalez> Does anyone have anything else to discuss today?
[09:10:45] <scott_gonzalez> Oh, I wanted to discuss style guide.
[09:11:03] <arthurvr> yeah definitely
[09:11:28] <scott_gonzalez> Any objections to just following http://contribute.jquery.org/style-guide/js/?
[09:12:15] <scott_gonzalez> We can follow whatever style guide we want.
[09:12:18] <snover> yes :P
[09:12:20] <arthurvr> are we going to port over all existing code, then?
[09:12:28] <snover> i hate the jquery style
[09:12:40] <snover> but if i am the only one that objects then whatever
[09:13:32] <arthurvr> I would like to have it on the jQuery style guide but I’m fine with whatever if it’s consistent lol
[09:13:48] <arschmitz> im +1 for jquery
[09:13:50] <snover> seeing as how my code contributions are probably going to be low i probably don’t need to have a lot of say in the matter
[09:13:55] <arschmitz> just because it will make my own life easier
[09:14:18] <snover> it’s just idiomatic to jquery and nothing else, nobody else uses this much whitespace
[09:14:22] <snover> not even in other languages
[09:14:30] <arschmitz> snover: we actually changed much of that
[09:14:37] <scott_gonzalez> Yeah, there's tons of whitespace, it's kinda crazy.
[09:14:39] <arschmitz> all the weird spacing rules and stuff got removed
[09:14:47] <arschmitz> but its very spacy now
[09:14:51] <scott_gonzalez> arschmitz: Those changes just added more spaces.
[09:15:15] <snover> the whitespace around punctuation is really the only problem i have with it i think
[09:15:24] <arschmitz> scott_gonzalez: yeah my comment was about it being very idiomatic to jquery not about the spaces
[09:16:27] <snover> https://github.com/sitepen/.jshintrc these are the lint styles that we use, with rationales
[09:16:51] <snover> but a lot of the things are just like, whatever
[09:17:30] <snover> the only two things that stick out as being different that i really dislike are the extra whitespace and cuddling else
[09:18:15] <arschmitz> Yeah i wont object if others want to use something else
[09:18:18] <snover> feel free to override my objection to those things if you want :)
[09:18:30] <arschmitz> but my preference is to just use jquery style guide
[09:18:51] <arschmitz> jscs and esformatter have a preset for it
[09:18:57] <arschmitz> which seems helpful also
[09:20:29] <arschmitz> arthurvr: to answer your original question we would probably just run it through esformatter with whatever options we decide
[09:20:38] <scott_gonzalez> snover: Can you list out the specific places where the whitespace differs?
[09:21:04] <snover> scott_gonzalez: if ( [here] blah [here] )
[09:21:06] <scott_gonzalez> Is it basically just inside conditionals and function calls?
[09:21:10] <snover> yes
[09:21:29] <snover> everything else is pretty unobjectionable
[09:21:40] <scott_gonzalez> I'm fine either way on that.
[09:22:02] <scott_gonzalez> If others don't object and we can easily override those in jscs and esformatter (pretty sure we can), we can make that change.
[09:22:04] <arschmitz> snover: do you have a published style guide with your rules somewhere
[09:22:16] <snover> arschmitz: i linked it, look up :)
[09:22:19] <scott_gonzalez> Then our style guide would just be "Follow the jQuery style guide with the following exceptions:"
[09:22:28] <scott_gonzalez> And we'd have a very short list of whitespace changes.
[09:22:42] <arschmitz> oh sorry i thought that was just a link to a jshintrc file
[09:22:51] <snover> scott_gonzalez: that sounds fine
[09:23:08] <arschmitz> im fine with that i just want to not recreate the wheel
[09:23:20] <arschmitz> and follow something more or less already established
[09:23:22] <snover> arschmitz: yeah i hear you
[09:24:04] <scott_gonzalez> Ok, I'll look into those settings. Assuming I can just use the jquery preset + some overrides, I'll just run the code through esformatter and send a PR with a short style guide.
[09:24:24] <scott_gonzalez> Are you ok with the cuddling else?
[09:24:28] <snover> i hate objecting to a simple answer but as it turns out i hate whitespace inside of ( ) even more :)
[09:24:44] <snover> yeah, that’s fine, i think i have a very good rationale for not doing it, but it’s way less important
[09:24:49] <scott_gonzalez> The funny thing is that a lot of the jQuery team dislikes it as well :-P
[09:25:27] <scott_gonzalez> Sure, I used to write a lot of code with the break and comments between.
[09:25:29] <snover> so people don’t have to look it up: “else and while keywords must be on their own line, not cuddled with the closing bracket of the previous if/do block. This is consistent with the use of all other block statements and allows comments to be placed consistently before conditional statements, rather than sometimes-before, sometimes-inside.”
[09:26:17] <arschmitz> snover: yeah i cant argue with the rational there i had a comment i was annoyed with just this morning for that very case
[09:26:33] <scott_gonzalez> I actually worked on a project where we always commented on the else so you know what the condition was.
[09:26:59] <arschmitz> im fine with whatever but would just like to keep exceptions to a minimum
[09:27:27] <scott_gonzalez> Ok, we can always revisit too, if we end up with lots of commented elses ;-)
[09:27:33] <snover> arschmitz: yes, i agree with wanting to minimise exceptions, so just the one is fine
[09:27:34] <arschmitz> yup
[09:28:02] <scott_gonzalez> snover: Are the exceptions properly captured here? https://docs.google.com/document/d/1nmk0W43PzkG5RNbJu9oEZv5f-5KWeJo5z22kza6q2AM/edit
[09:28:23] <snover> scott_gonzalez: the funny thing is, the whitespace in parens is not actually mentioned in the style guide prose
[09:28:35] <arschmitz> snover: also feel free to open an issue on https://github.com/jquery/contribute.jquery.org/ or one of us can for the else
[09:28:43] <snover> but whitespace rules for ternaries and objects is
[09:28:43] <arschmitz> snover: we change our style guide pretty often
[09:29:21] <arschmitz> snover: and your logic is pretty sound you may not get any objection
[09:29:37] <snover> scott_gonzalez: conditionals, loops, try/catch, function calls. i am sure there is a general word for these structures. statement blocks?
[09:29:52] <snover> i guess function calls are not that
[09:29:58] <scott_gonzalez> How about just "no spaces inside parens"
[09:30:05] <arschmitz> thats what i was just going to say
[09:30:10] <snover> FINE
[09:30:12] <snover> make it simple
[09:30:12] <snover> whatever
[09:30:20] <arschmitz> :-p
[09:30:31] <scott_gonzalez> You'd probably need to use a few different words to get it right.
[09:30:38] <scott_gonzalez> control structures and statements?
[09:30:44] <scott_gonzalez> I'm sure rwaldron could figure it out :-P
[09:30:51] <arschmitz> i bet he could
[09:31:20] <scott_gonzalez> Figuring out which overrides to use for jscs/esformatter might also provide some more explicit wording.
[09:31:28] <scott_gonzalez> But this is good enough for the notes.
[09:31:30] <arschmitz> good point
[09:31:33] <scott_gonzalez> Ok, anything else?
[09:31:39] <snover> IfStatement IterationStatement WithStatement SwitchStatement Catch FunctionDeclaration FunctionExpression Arguments
[09:31:56] <scott_gonzalez> Yeah, parens :-P
[09:31:56] <rwaldron> My answer is: "use jsbeautifier"
[09:33:16] <arschmitz> rwaldron: for what to call paren structures ? lol?
[09:34:07] <arschmitz> thats a funny name but ill go with scott_gonzalez "no spaces inside use jsbeautifier"
[09:34:36] <scott_gonzalez> Ok, I think that's it for today.
[09:34:36] <rwaldron> arschmitz no, as a solution to not worry about formatting rules anymore
[09:34:37] <scott_gonzalez> Thanks everyone.
[09:34:45] <arschmitz> rwaldron: i know i was being an ass
[09:37:39] <rwaldron> "The Grouping Operator" has many forms though...
[09:37:43] <rwaldron> ParenthesizedExpression : ( Expression )
[09:38:42] <rwaldron> CallExpression: CallExpression Arguments
[09:39:04] <rwaldron> Arguments: () and ( ArgumentList )
[09:39:40] <arschmitz> yeah that was our debate in coming up with a good term for now we went with just "inside parens"
[09:42:39] <rwaldron> the list snover made above...
[09:43:09] <snover> misses at least PrimaryExpression ( Expression ) ¯\_(ツ)_/¯
[09:44:13] <rwaldron> I would call the whole group something like "Parenthesized Bodies"
[09:44:36] <arschmitz> rwaldron: yeah that sounds like a good term i think scott_gonzalez^^
[09:50:00] <scott_gonzalez> ok
[11:01:58] <arschmitz> `mobileteam
[11:03:01] <agcolom> hey :-)
[11:04:27] <arschmitz> Hmm agcolom can you ping team that didn't work
[11:05:03] <arschmitz> I'm on phone phone hates irc commands
[11:05:41] <agcolom> sure
[11:06:00] <agcolom> `mobileteam
[11:06:08] <agcolom> gabriel_schulhof: jasperdegroot
[11:06:32] <agcolom> cgack
[11:06:37] <arschmitz> Agenda https://docs.google.com/spreadsheets/d/tTTJWZ7A8Nmf1PuGpPIrKxg/htmlview
[11:06:40] <agcolom> arthurvr:
[11:07:04] <arschmitz> Hmm so not me its b-ot
[11:07:17] <agcolom> alex the channel is muted!
[11:07:43] <arthurvr> oh there we go
[11:07:44] <arschmitz> Oh that would do it
[11:07:45] <gabriel_schulhof> Hey!
[11:07:46] <arthurvr> hey guys
[11:07:49] <cgack> hello!
[11:07:50] <arthurvr> `mobileteam
[11:07:50] <b-ot> arthurvr: agcolom, arschmitz, arthurvr, cgack, gabriel_schulhof, ianmaffett, jasperdegroot, sfrisk
[11:07:54] <arthurvr> works like a charm
[11:07:59] <sfrisk> allo
[11:08:14] <jasperdegroot> hi
[11:09:38] <arschmitz> Ok let's get started
[11:09:39] <agcolom> so hello again :-P
[11:09:54] <arschmitz> Ui stuff
[11:10:08] <arschmitz> Several more rounds of updates
[11:10:15] <arschmitz> On button stuff
[11:10:49] <arschmitz> To avoid this endless cycle jzaefferer and I are now finishing over Skype
[11:12:25] <arschmitz> We are also adding a couple new methods to ui core
[11:12:35] <arschmitz> Terror parent
[11:12:45] <arschmitz> Ahh auto correct
[11:12:48] <gabriel_schulhof> Very nice!
[11:12:57] <gabriel_schulhof> ... not the terror part :)
[11:13:02] <arschmitz> GetFormParent
[11:13:11] <arschmitz> And getLabel
[11:13:42] <arschmitz> We are super inconsisten with these and wrong in some form most places
[11:17:00] <arschmitz> so we can use those in textinput and selectmenu
[11:17:04] <arschmitz> once we pull them in
[11:18:18] <arschmitz> all the classes reviews are waiting on me
[11:19:10] <arschmitz> sfrisk: any news on accordion?
[11:20:16] <sfrisk> continuing styling, have a full day in the airport on sunday so I should have something done for you by next meeting
[11:20:49] <arschmitz> sfrisk: awesome thank you
[11:21:16] <arschmitz> so i pushed some updates to the auto init PR
[11:21:29] <arschmitz> addressing things we discussed in last weeks meeting
[11:21:58] <arschmitz> rebased with 1.5 dev again also
[11:22:19] <arschmitz> because all the esformatter pr's landed it caused a bunch of conflicts
[11:22:46] <arschmitz> so we are much closer to style guide compliance now
[11:22:59] <gabriel_schulhof> Yeah, the autoinit PR is once more in conflict because of the whitespace changes ...
[11:23:15] <arschmitz> oh i must need to push again then
[11:23:27] <arschmitz> because i fixed all that but must still just be local
[11:23:30] <gabriel_schulhof> Should be trivial ...
[11:23:44] <arschmitz> yeah it was not as much as you would think
[11:23:44] <gabriel_schulhof> Oh, OK :)
[11:23:57] <arschmitz> hard to see what changed to combine in places
[11:24:09] <gabriel_schulhof> arschmitz: I have a good trick for that ...
[11:24:18] <arschmitz> the ignore whitespace flag?
[11:24:22] <gabriel_schulhof> Nono.
[11:24:30] <gabriel_schulhof> TO make sure you fixed conflicts correctly.
[11:24:33] <gabriel_schulhof> git show <old-commit-id> in one tab
[11:24:34] <arschmitz> oh
[11:24:40] <gabriel_schulhof> git diff --cached in the other tab.
[11:24:51] <arschmitz> good idea
[11:24:55] <gabriel_schulhof> ... after you think you've resolved the conflict.
[11:25:15] <gabriel_schulhof> ... and then flip back and forth quickly and nothing should change aside from commitids and other trivial stuff.
[11:25:25] <gabriel_schulhof> You should see the whitespace changes as animations.
[11:25:33] <gabriel_schulhof> Call it vdiff
[11:25:34] <arschmitz> lol
[11:25:57] <arschmitz> so all our working trying to get to style guide compliance got me thinking
[11:26:25] <arschmitz> we dont do anything about all the style and script blocks embeded in the html and php files
[11:27:06] <gabriel_schulhof> What is the official style of <style> and <script> tags, anyway?
[11:27:20] <arschmitz> so i started making a tool that pulls out all the style and script blocks and runs jshint, jscs, csslint, csscomb, html5 verification and htmllint
[11:27:30] <gabriel_schulhof> Does their content inherit the indentation of the HTML file, or do we reset to column 0 inside?
[11:27:32] <arschmitz> gabriel_schulhof: what do you meant?
[11:27:52] <arschmitz> oh it should follow the html
[11:28:07] <gabriel_schulhof> Gotcha.
[11:28:19] <arschmitz> so at some point in the near future we will have a pile of work to do fixing the demos
[11:29:35] <arschmitz> but i think its important we are checking this especially since the code in demos is stuff we are actually showing to the public
[11:30:08] <arschmitz> jzaefferer: and scott_gonzalez and i have talked about a tool like this for a while but i finally got it working so its just cleanup now
[11:31:40] <arschmitz> ok so next is the enhanced option
[11:31:58] <arschmitz> gabriel_schulhof: and i have been talking about this for a little while but we need to re thing this and how it works
[11:32:08] <arschmitz> the classes option changes things for that option
[11:32:42] <gabriel_schulhof> I've developed a pattern for writing widgets that keeps it in mind.
[11:32:58] <jasperdegroot> so that's also for 1.5?
[11:33:15] <gabriel_schulhof> Basically, each widget ends up with a _toggleClasses() method that gets called during _create(), whether the widget is enhanced or not.
[11:33:39] <gabriel_schulhof> If it's enhanced, nothing will happen except tracking will be added.
[11:33:45] <gabriel_schulhof> If it's not enhanced, the classes will be added.
[11:34:10] <arschmitz> gabriel_schulhof: i was thinking we should just change the semantics of the option
[11:34:28] <arschmitz> gabriel_schulhof: to only apply to non class dom manipulation
[11:34:59] <gabriel_schulhof> OK, but if you need to generate new elements, you need to add classes programmatically.
[11:35:01] <arschmitz> or even further to only adding to the dom
[11:35:31] <arschmitz> gabriel_schulhof: you will need to set refrences anyway so that does not seem like an issue
[11:36:14] <arschmitz> now in our else branches for enhanced we will just identify elements and add classes to those elements
[11:36:31] <arschmitz> so using button as a simple example
[11:36:42] <arschmitz> in the else branch you would
[11:37:02] <arschmitz> this.icon = this.element.find( ".ui-icon" )
[11:37:17] <arschmitz> this._addClass( this.icon, classes )
[11:37:25] <gabriel_schulhof> Yeah, that's exactly what I'm doing: if ( this.options.enhanced ) { run a bunch of selectors, then toggleClasses( true ) } else { instantiate a bunch of elements, toggleClasses( true ), attach elements to DOM }
[11:37:45] <arschmitz> i dont think we need a special method
[11:37:49] <arschmitz> to seperate this out
[11:38:02] <arschmitz> its going to be pretty limited
[11:38:03] <gabriel_schulhof> No, I don't want to push for it to become a standard.
[11:38:20] <gabriel_schulhof> It just happens to work for some of the widgets, so I've chosen to do it that way for those.
[11:38:26] <arschmitz> ok
[11:38:35] <gabriel_schulhof> ... especially extensions which can be turned off, like autogrow.
[11:38:39] <gabriel_schulhof> ... and clearButton.
[11:38:54] <gabriel_schulhof> There, you need the _toggleClasses() because you can turn off the functionality via _setOptions()
[11:39:02] <arschmitz> gotcha
[11:39:11] <arschmitz> so in most cases the only things we generate are icons
[11:39:15] <gabriel_schulhof> So it works for both _create() and for _setOptions()
[11:39:54] <gabriel_schulhof> Yeah, TBH, I'm feeling the need for reintroducing buttonMarkup() :/ I'm finding that I have to look at one widget to remember how to do buttons for another widget.
[11:39:56] <arschmitz> the good part is this still works with classes regardless because of how the core methods work
[11:40:12] <arschmitz> gabriel_schulhof: i dont think that will ever happen
[11:40:50] <gabriel_schulhof> Yeah, likely not, though it might be of some use as an internal, stateless method.
[11:41:02] <arschmitz> in general any where else we are making a very specific button with out the need for any abstraction
[11:41:18] <gabriel_schulhof> Oh, that's another thing I noticed.
[11:41:28] <gabriel_schulhof> A button widget is getting instantiated on the clear button.
[11:41:38] <gabriel_schulhof> ... and I dunno where it's coming from.
[11:41:51] <arschmitz> oh autoinit
[11:42:02] <gabriel_schulhof> Yeah, probably. button runs after textinput.
[11:42:23] <arschmitz> what the markup for the clear button isnt it an anchor?
[11:42:25] <gabriel_schulhof> No ill effects that I could discern, but still :/
[11:42:31] <gabriel_schulhof> It is.
[11:42:48] <arschmitz> then why is it running are you adding a data-role?
[11:43:00] <arschmitz> and counting on old button markup to enhance it?
[11:43:02] <gabriel_schulhof> Lemme check, actually ...
[11:43:04] <gabriel_schulhof> Nono.
[11:43:23] <gabriel_schulhof> I'm adding the styling explicitly, but the role may have been left in ther.
[11:43:27] <gabriel_schulhof> Checking now ...
[11:43:49] <arschmitz> thats the only thing i can think of
[11:44:25] <gabriel_schulhof> Nope. No data-role.
[11:45:13] <arschmitz> hmm that seems odd then
[11:45:22] <arschmitz> as it does not run on plain anchors
[11:45:29] <gabriel_schulhof> OK, nm ... it's not there ...
[11:45:45] <arschmitz> wait what?
[11:45:49] <gabriel_schulhof> ... but I do remember seeing a widget instance where it shouldn't've been ... I need to remember which PR it's in.
[11:46:03] <gabriel_schulhof> arschmitz: clear button is clean. No button instance.
[11:46:09] <gabriel_schulhof> I was mistaken about clear button.
[11:46:25] <gabriel_schulhof> But I /do/ remember seeing a widget where none should be - just gotta remember where.
[11:47:16] <arschmitz> lol ok
[11:48:31] <gabriel_schulhof> Anyhoo ...
[11:49:35] <arschmitz> ok so no news on unstable tests
[11:49:55] <arschmitz> and i dont think any news on anything else on the agenda
[11:50:15] <gabriel_schulhof> Slowly working on the DB ...
[11:50:18] <arschmitz> so does any one else have anything?
[11:51:49] <cgack> i'm good
[11:51:54] <gabriel_schulhof> Same here ...
[11:51:59] <jasperdegroot> me too
[11:52:15] <arschmitz> ok see everyone back in -dev then
[11:52:17] <arthurvr> l8ter
[11:52:19] <jasperdegroot> later
[11:52:20] <gabriel_schulhof> K L8R
[12:24:54] <arschmitz> gabriel_schulhof: Ping!
[12:25:04] <arschmitz> oops
