[11:01:19] <toddparker> Hey everyone - The jQuery Mobile Team meeting will start in a minute
[11:02:24] <toddparker> Doc for meeting notes/agenda here
[11:02:25] <toddparker> https://docs.google.com/document/d/1_y0PkjqqhDCpel_SwAtH8r3Nufxug_ydnmQTtaJPZq0/edit
[11:02:56] <toddparker> ok, can we get a roll call?
[11:03:12] <toddparker> if you're here and alive, give a shout
[11:03:35] <gseguin> hey
[11:03:44] <toddparker> _nickel, eddiemonge, gseguin, kinblas, scottjehl
[11:04:08] <toddparker> hey gseguin!
[11:04:22] <toddparker> thanks for volunteering to look at the transitions
[11:04:24] <gseguin> 'morning
[11:04:30] <gseguin> no problem
[11:04:51] <kinblas> Here
[11:04:53] <gseguin> don't thank me until I delivered something that works though ;)
[11:05:03] <toddparker> heh
[11:05:11] <toddparker> so this is the issue you're looking at: https://github.com/jquery/jquery-mobile/issues/1445
[11:05:39] <gseguin> yeah, picking up the code from that and put it in a branch
[11:06:41] <toddparker> and the gist (i think) is for you to look at that code and maybe just do  proof of concept on one or two transitions to see how well it works on various platforms
[11:06:55] <toddparker> if it looks good, we can switch 'em all over
[11:07:05] <gseguin> yeah I'm doing that with slide
[11:07:12] <toddparker> perfect
[11:07:21] <gseguin> and adding vendor prefixes as well
[11:07:25] <toddparker> cool
[11:07:56] <toddparker> we're using keyframes right now
[11:08:06] <toddparker> but that doesn't work on FF and others, right?
[11:09:01] <gseguin> don't know, that's new to me
[11:09:31] <toddparker> guess you'll know soon
[11:09:39] <gseguin> heh
[11:10:10] <toddparker> ok, good. just added this as an area for this week:
[11:10:11] <toddparker> Cross-platform page transitions: Add Firefox, Opera in addition to Webkit
[11:10:11] <toddparker> https://github.com/jquery/jquery-mobile/issues/1445
[11:10:33] <toddparker> what else is on your plate?
[11:10:49] <toddparker> under active dev
[11:11:17] <gseguin> I was going to pick up the next blocker
[11:11:41] <toddparker> just looking at beta 2 blockers
[11:11:43] <gseguin> oh no more blocker after that
[11:11:46] <toddparker> https://github.com/jquery/jquery-mobile/issues?sort=created&direction=desc&state=open&page=1&milestone=6
[11:12:07] <gseguin> I don't know, then
[11:12:20] <toddparker> we should land this XSS fix today from you
[11:12:22] <gseguin> I can just go through my bugs
[11:12:29] <gseguin> I can land it
[11:12:31] <toddparker> just wanted kinblas to review
[11:12:38] <gseguin> it was more of a code review thing
[11:12:42] <toddparker> ya
[11:13:09] * kinblas tries to catch up with conversation
[11:13:37] <toddparker> guess this opera mobile is part of you transition stuff
[11:13:42] <toddparker> hi kinblas
[11:13:48] <kinblas> hey guys sorry
[11:13:52] <kinblas> I'm focused now
[11:14:02] <kinblas> so I saw gseguin's patch lastnight
[11:14:15] <kinblas> I'm not that familiar with jquery transport
[11:14:19] <gseguin> toddparker: yeah I think so
[11:14:36] <kinblas> so the one question I had was why it has to run every time we load a file? At least that's the way it looked in the diff
[11:14:50] <kinblas> we can take it off line
[11:15:35] <gseguin> should we ask jaubourg to jump in and review it
[11:15:43] <toddparker> that would be ideal, yes
[11:15:48] <toddparker> can you ping him?
[11:15:49] <gseguin> he's from core and owns ajax.js
[11:15:52] <kinblas> yeah that would be great
[11:15:53] <gseguin> I will
[11:16:01] <toddparker> perfect
[11:16:10] <toddparker> btw - adding notes here:
[11:16:11] <toddparker> https://docs.google.com/document/d/1_y0PkjqqhDCpel_SwAtH8r3Nufxug_ydnmQTtaJPZq0/edit
[11:17:14] <toddparker> i need to get the URL for scott's pushstate branch when he's back
[11:17:43] <toddparker> so kin - what's on your plate for your last day (sniff)
[11:18:08] <kinblas> well the last few days I've been focusing on regressions
[11:18:32] <toddparker> yeah, which is good
[11:18:49] <toddparker> actually kin, i'd really like you help editing the blog post re: vclcik changes
[11:18:55] <toddparker> i pasted it into the google doc
[11:19:08] <kinblas> Ok, I'll do that
[11:19:15] <toddparker> i'd like to expalin what happend crisply and follow up with our proposed changes
[11:19:28] <toddparker> i fyou're in WP, you can edit directly if you prefer
[11:19:32] <toddparker> up to you
[11:19:41] <toddparker> i want to push that in about an hour or so
[11:19:45] <kinblas> ok
[11:19:47] <toddparker> (i'm out tomorrow)
[11:20:03] <toddparker> if you are logged into WP: http://jquerymobile.com/wp-admin/post.php?post=1090&action=edit&message=10
[11:20:53] <kinblas> ok I see it
[11:21:19] <toddparker> cool
[11:21:40] <kinblas> @toddparker: the one thing I'm still holding on to
[11:21:46] <toddparker> yeah...
[11:22:04] <kinblas> is the single line change for resolving programatic calls to changePage() with relative URLs
[11:22:23] <kinblas> we had agreed that resolving against the URL used to load the active page made sense
[11:22:33] <kinblas> right now it resolves against the docment base
[11:22:44] <kinblas> I didn't check it in on the day we shipped beta 1
[11:22:55] <kinblas> because 2 tests in the navigation unit tests failed
[11:22:59] <kinblas> looking at the tests
[11:23:15] <kinblas> it looked like the tests needed to be redone
[11:23:25] <scottjehl> woops! (sorry)
[11:23:41] <kinblas> all other tests passed
[11:23:48] <kinblas> so I can either hold on to the one line change
[11:23:54] <kinblas> or give it to _nickel
[11:24:03] <kinblas> to check out the 2 tests that he wrote
[11:24:10] <toddparker> just gettting scott up to speed on this Q
[11:24:15] <kinblas> and make sure that they are really testing what they should
[11:24:53] <toddparker> i think this is probably good for _nickel to look at, yeah
[11:25:19] <kinblas> ok I'll send him the single line parameter change then
[11:25:24] <toddparker> cool
[11:25:44] <toddparker> what is the issue # on this one?
[11:25:56] <kinblas> There isn't one
[11:26:11] <kinblas> it was a left-over loose-end from the path changes
[11:26:24] <kinblas> we *ALWAYS* used to just tack on the document URL
[11:26:29] <kinblas> to a relative URL
[11:26:39] <toddparker> gotcha
[11:26:46] <kinblas> which was part of the problem of why we didn't load the right thing in certain scenarios
[11:26:58] <toddparker> ok, makes sense
[11:27:09] <toddparker> so you'll shoot him an email on that?
[11:27:10] <kinblas> so we're not acting any different ... that is no regression
[11:27:16] <kinblas> yeah I will
[11:28:24] <toddparker> cool
[11:28:34] <toddparker> we're gonna miss you kin
[11:28:46] <toddparker> oh, is the bender news public yet?
[11:28:58] * kinblas shrugs
[11:29:40] <kinblas> I'll check in from time to time.
[11:29:54] <toddparker> ok, appreciate it
[11:30:04] <eddiemonge> bender news?
[11:30:07] <toddparker> we'll try not to use up your beach time
[11:30:15] <kinblas> heh
[11:30:26] <toddparker> bender will be working a lot more on the project later in july
[11:30:34] <toddparker> which is great news
[11:31:54] <toddparker> so kinblas, nothing else we need to pick up?
[11:32:30] <kinblas> The big things are the transitions and the CORS/XHR thing
[11:33:08] <kinblas> nothing else on my end
[11:33:54] <scottjehl> re the cors/xhr thing:
[11:34:28] <kinblas>  I think we found our answer on that BB5 bug that says they want it on all the time.
[11:34:30] <kinblas> :-)
[11:34:37] <kinblas> We should *NOT*
[11:35:07] <kinblas> opting in is safer for folks that know nothing about it
[11:35:13] <scottjehl> is the $.ajaxTransport too internal for us regarding this issue?
[11:35:34] <scottjehl> in other words, should we set this up so the option ONLY affects our own automated ajax changePage?
[11:35:38] <toddparker> =agree that we should default to the safest option. turn this on with knowledge only
[11:35:53] <scottjehl> rather than digging into jQ core ajax
[11:35:57] <scottjehl> just wondering
[11:36:15] <scottjehl> someone might want our ajax handling for cross-domain off, but still be able to override it for a $.ajax call
[11:36:15] <kinblas> From our prespective that is the only place we need to safeguard
[11:36:43] <kinblas> oh and another thing ... there is already a cross-domain related option in jQuery mobile
[11:36:48] <kinblas> that was related to phone gap
[11:36:53] <gseguin> the reason I did that is to leverage core's logic to detect cross domain
[11:37:02] <kinblas> I wasn't clear from gseguin's patch how they related
[11:37:05] <kinblas> but they should
[11:37:20] <scottjehl> and in that case, we could just add a line to changepage that's like... if this setting is false and path.isExternal ...
[11:37:31] <scottjehl> since we do have a path function for that anyway, right?
[11:37:35] <kinblas> right
[11:37:48] <kinblas> we already do a cross-domain check
[11:38:00] <scottjehl> seems better if we just cover our own situations but not touch jq core?
[11:38:49] <scottjehl> changePage could just return early if the setting is disabled and the url is external
[11:39:07] <gseguin> ok
[11:39:15] <scottjehl> gseguin, what do you think?
[11:39:38] <scottjehl> I think what you did will work great. Just wondering if it goes a little farther than we need to is all
[11:39:45] <gseguin> sure, how do I figure out if it's cross domain url?
[11:39:52] <kinblas> the one thing I ask is that we ping someone using phonegap like adambiggs to test it out
[11:40:21] <scottjehl> sure. so he'd override the setting to true then right?
[11:40:33] <kinblas> documentUrl.domain != parseUrl(url).domain
[11:40:48] <gseguin> ok
[11:41:09] <toddparker> so gseguin 0- do you want to take another crack at this?
[11:41:10] <scottjehl> and does that go within loadpage then?
[11:41:15] <scottjehl> or changePage?
[11:41:23] <kinblas> yeah ... like I mentioned we already have a config option related to allowing cross-domain ... the problem is that it is instantiated in the click handler
[11:41:26] <kinblas> instead of changePage
[11:41:27] <gseguin> yup
[11:41:40] <kinblas> it's more of a loadPage thing
[11:41:43] <scottjehl> ok
[11:41:51] <scottjehl> yeah
[11:41:56] <kinblas> but changePage is the entry point most of the time for loadPage
[11:41:59] <scottjehl> should it throw an exception or anything?
[11:42:15] <gseguin> kinblas: which config option is that?
[11:43:00] <kinblas> 	//enable cross-domain page support
[11:43:01] <kinblas> 	$.mobile.allowCrossDomainPages = false;
[11:43:17] <kinblas> like I said, the reason it fails us today
[11:43:25] <kinblas> is because the check is done in the click handler
[11:43:28] <scottjehl> ah nice! so we just need to add a condition to loadPage then
[11:43:30] <kinblas> instead of the loadPage
[11:43:37] <scottjehl> option's already there
[11:43:39] <kinblas> the issue in question
[11:43:46] <kinblas> is triggered by hashchange
[11:43:47] <kinblas> not click
[11:43:50] <gseguin> oh got it
[11:44:13] <kinblas> oh and just for some background
[11:44:24] <kinblas> the current cross domain support
[11:44:27] <kinblas> limits you
[11:44:31] <kinblas> to origin of file://
[11:44:44] <gseguin> alright, I'll update that pull request
[11:44:46] <kinblas> so your document must have been loaded from file:// (phonegap)
[11:45:13] <kinblas> oh another thing probably for jQuery COre
[11:45:21] <kinblas> is to find out why on BB5 the support test fails
[11:45:30] <kinblas> $.support.cors == false on BB5
[11:45:33] <kinblas> but apparently it is there
[11:45:49] <kinblas> which is what that other issue was about where
[11:45:55] <kinblas> BB5 folks were asking us to turn that on
[11:46:02] <kinblas> ... which we shouldn't :-)
[11:47:25] <toddparker> super
[11:47:31] <toddparker> sounds like we have a gae plan
[11:47:44] <toddparker> i have two items i'd like opinions on...
[11:48:09] <toddparker> 1. should we release a bea 1.1 next week or just wait an extra week or two and release beta 2
[11:48:25] <kinblas> I can't take another double click bug!
[11:48:26] <kinblas> :-)
[11:48:26] <toddparker> we've already made a lot of changes so this may be too much for a . release
[11:48:30] <toddparker> heh
[11:49:13] <gseguin> why not call it beta 2 and we'll have beta 3 in a few weeks
[11:49:32] <kinblas> werd
[11:49:48] <kinblas> my concern is that this flood of issues may turn new users off
[11:50:19] <toddparker> so i agree
[11:50:21] <kinblas> and existing folks are already trying to upgrade
[11:50:28] <kinblas> from old stuff and finding things aren't working
[11:50:44] <toddparker> so we could try to hit beta 2 within a week or so with some of these other improvements
[11:50:50] <toddparker> so it's weighty enough
[11:50:55] * scottjehl apologizes yet again to Kin for double click bug
[11:51:00] <kinblas> beta 2 ... the code is pretty too
[11:51:12] <kinblas> heh
[11:51:16] <toddparker> i'd like to get the new transitions in and maybe pushstate
[11:51:22] <toddparker> that too
[11:51:35] <scottjehl> speaking of pushstate
[11:51:41] <toddparker> ...YES...
[11:52:36] <scottjehl> so pushstate is working quite well now
[11:52:40] <scottjehl> in that branch
[11:52:58] <scottjehl> (permission to hijack convo?)
[11:53:02] <toddparker> which would make all the "how do I view source" questions go away
[11:53:14] <toddparker> nice segue
[11:53:20] <toddparker> go for it
[11:53:35] <scottjehl> k yeah so quick recap
[11:54:15] <scottjehl> branch is here https://github.com/jquery/jquery-mobile/tree/pushstate-integration
[11:54:53] <scottjehl> demo from last week is here http://filamentgroup.com/examples/pushstate
[11:54:59] <scottjehl> (missing a few fixes)
[11:55:31] <scottjehl> implementation sits on top of our current system
[11:55:34] <toddparker> what browsers support this now?
[11:55:57] <scottjehl> hashchanges come through, if pushstate is supported, it's replacing the hash with a better url
[11:56:03] <scottjehl> using replaceState
[11:56:24] <scottjehl> currently pushstate url upgrades show in Firefox 5, Chrome, Safari, and Opera latest
[11:56:45] <scottjehl> I haven't done a lot of testing on mobile devices yet, outside of iOS, which gets pushstate wrong
[11:57:19] <scottjehl> (support is true, but it only lets you set pushstate based on a user action, like in a click callback)
[11:57:56] <scottjehl> that doesn't work for us, since we set hash based on all sorts of conditions, including programmatically
[11:58:04] <scottjehl> $.mobile.changePagge
[11:58:34] <scottjehl> anyway... the way it's working now means iOS still gets hash urls, despite its claimed pushState support
[11:58:45] <scottjehl> afaik, this isn't fixed in iOS5 either
[11:59:11] <scottjehl> so, I need to do more testing on how this plays out across android and bb and such
[11:59:48] <scottjehl> (btw, if we strictly used history.pushState when it is supported, iOS would really break because the URL just never updates)
[12:00:03] <scottjehl> so, using replaceState to react to hash changes seems to work around that
[12:00:32] <scottjehl> other things to note:
[12:00:44] <scottjehl> some URLs will always be hash-based
[12:00:49] <scottjehl> dialogs, nested lists
[12:01:04] <scottjehl> this lines up well with how hashes traditionally work, so that's kinda cool
[12:01:15] <scottjehl> (nested lists being a sub-section of a page)
[12:01:41] <scottjehl> when it's a dialog or a nested list page url, I'm only adding the relavant part to the hash
[12:01:51] <scottjehl> not a full hash path
[12:02:32] <scottjehl> demo url has a bug it seems but here's what I mean: http://filamentgroup.com/examples/pushstate/docs/lists/lists-nested.html#&ui-page=0-4
[12:03:28] <scottjehl> another issue:
[12:03:43] <scottjehl> our unit tests are based on hash urls all over the place, so this breaks a lot of them
[12:04:17] <scottjehl> we'll need to fork the tests based on $.support.pushState I guess...
[12:05:47] <scottjehl> that's it for now
[12:05:55] <scottjehl> anyone interested in reviewing the diff yet?
[12:06:54] <kinblas> under normal circumstances I would
[12:07:02] <toddparker> beach reading!
[12:07:04] <scottjehl> heh. understood
[12:07:05] <kinblas> heh
[12:07:17] <toddparker> maybe gseguin and _nickel can take a look
[12:07:39] <toddparker> gseguin - i added opera gradient support for beta 2 and assigned to you
[12:07:40] <toddparker> https://github.com/jquery/jquery-mobile/issues/1357
[12:07:44] <toddparker> should be quick
[12:07:50] <gseguin> ok
[12:07:56] <kinblas> scottjehl: so I was talking miketaylr in the dev channel ... have we looked at ditching our urlHistory stack in the pushstate case?
[12:07:56] <toddparker> i can take a crack if you get busy
[12:08:06] <gseguin> for reviewing, sure
[12:08:33] <kinblas> scottjehl: apparently you can attach data to the states in the history stack ... transition being something we would want
[12:08:34] <scottjehl> hmm. not sure. don't we still need it?
[12:09:03] <scottjehl> oh yes that's true. it'd mean storing things in two places though...
[12:09:45] <kinblas> well the idea would be to use the urlHistory only in the case where pushState wasn't supported
[12:09:55] <kinblas> shim/fallback/whatever it's called
[12:11:46] <scottjehl> ok. yeah I'm open to that
[12:12:09] <scottjehl> the way it works right now is just through straight urls
[12:12:20] <scottjehl> either get location.hash or location.href
[12:12:21] <toddparker> hey all - i need to jump off in a minute but you all can keep chatting
[12:12:34] <toddparker> kin - try to read that blog past right after this so i can push it
[12:12:35] <scottjehl> I'm good on this - we can flip it over to jqm dev
[12:12:53] <kinblas> yeah I'm good
[12:13:03] <gseguin> alright, see you on -dev
[12:16:25] <eddiemonge> ok
[12:18:17] <toddparker> bye all!
