[08:54:38] <DaveMethvin> .
[08:55:47] <DaveMethvin> agenda is here: https://docs.google.com/document/d/1MrLFvoxW7GMlH9KK-bwypn77cC98jUnz7sMW1rg_TP4/edit?hl=en_US
[08:58:45] <rwaldron> hi DaveMethvin
[08:58:46] <bot-t> (64 hours 50 mins ago) <mikesherov> tell rwaldron I'm looking to get a centralized location for the build files, scripts, and order. jshint-check.js should probably check indiv files read from a json objecty
[08:59:08] <DaveMethvin> happy new year rwaldron!
[08:59:18] <rwaldron> Happy New Year DaveMethvin! :D
[08:59:43] <DaveMethvin> so did  you have fun over the holiday?
[09:00:01] * gnarf sighs - i picked the wrong time to be afk from jquery
[09:00:21] <rwaldron> DaveMethvin in that document with the tallied votes
[09:00:32] <rwaldron> you're listed as owneer of the jQuery.browser ticket
[09:00:45] <DaveMethvin> is that one yours?
[09:00:49] <rwaldron> I have a branch that is 99% done
[09:00:54] <DaveMethvin> oh good!
[09:00:59] <rwaldron> ack
[09:01:01] <rwaldron> i cant edit
[09:01:14] <DaveMethvin> i got it
[09:01:17] <rwaldron> rad
[09:01:46] <rwaldron> this list is making me stabby
[09:01:50] <rwaldron> i cant click in boxes
[09:01:56] <rwaldron> to copy stuff :(
[09:02:19] <DaveMethvin> just gave edit to the bugs team
[09:02:22] <gnarf> so like, this animation tick throttling - seems the 1.7 votes carried over?
[09:02:31] <DaveMethvin> prolly did gnarf
[09:02:52] <gnarf> i'm so +0 on it
[09:03:01] <gnarf> so like, my vote wouldn't of changed anything
[09:03:18] <DaveMethvin> well don't feel like we're trapped by the vote if there are good reasons for other solutions
[09:04:12] <DaveMethvin> ok i hope some other folks will be coming by, it sounded like we'd have a few more based on the meeting two weeks ago
[09:04:19] <rwaldron> docs#10877
[09:04:21] <bot-t> [#10877] Make outerWidth/Height a setter (open feature) - http://jqbug.com/10877
[09:04:25] <rwaldron> um... what?
[09:04:26] <DaveMethvin> but i know how it can be, i expected to get a lot more jquery stuff done over the holidays
[09:04:45] <gnarf> i did too
[09:04:55] <DaveMethvin> i think 10877 also factors into the issue with box-sizing
[09:05:17] <rwaldron> I'm reading back
[09:05:30] <DaveMethvin> yeah a few of these are pretty filled with history
[09:05:37] <rwaldron> ok, nvm, I thought something else
[09:05:43] <rwaldron> strike that!
[09:05:51] <rwaldron> shit
[09:05:56] <DaveMethvin> louisremi are you here?
[09:06:09] <rwaldron> looks like I'm benched for 1.8
[09:06:16] <rwaldron> i'll work on the build system
[09:06:20] <DaveMethvin> well there are a bunch of blank tickets ....
[09:06:26] <DaveMethvin> the ones with no names
[09:06:27] <rwaldron> yeah...
[09:06:39] <rwaldron> but most of them might as well have names
[09:06:40] <DaveMethvin> and i think there will be quite a bit on the build system
[09:06:56] <DaveMethvin> esp once we know where closure compiler stands
[09:07:29] <gnarf> jQuery.debug needs an owner
[09:07:30] <gnarf> ;)
[09:07:45] <DaveMethvin> definitely a plugin tho
[09:07:46] <rwaldron> gnarf i dont see that...
[09:07:54] <gnarf> 10589
[09:08:11] <rwaldron> oh
[09:08:17] <rwaldron> data events
[09:08:23] <rwaldron> "events" in data
[09:08:24] <rwaldron> or whatever
[09:08:33] <gnarf> yeah, ripping that part out is easy
[09:08:43] <gnarf> the debugging extension is definately part of that plan tho
[09:08:48] <gnarf> gotta give an alternative
[09:08:50] <DaveMethvin> really it's not that scary a change, just jQuery._data(elem, "events") for those that want to snoop
[09:09:05] <rwaldron> DaveMethvin you can assign 5 aka 10589 to me
[09:09:19] <rwaldron> #7
[09:09:21] <rwaldron> as well
[09:09:25] <DaveMethvin> and really i broke a lot of those guys with 1.7 since i changed the data structures for delegated evengts
[09:09:44] <DaveMethvin> well let's run down the list and you can grab em then
[09:09:53] <gnarf> out of curiosity
[09:10:01] <gnarf> how do people feel about having a third build of jQ
[09:10:02] <rwaldron> I think #9 (10679) is more then meets the eye
[09:10:06] <gnarf> with notices built in
[09:10:10] <rwaldron> possibly the wrong ticket was references
[09:10:19] <rwaldron> referenced*
[09:10:24] <rwaldron> I'll take that one as well
[09:10:27] <DaveMethvin> i kinda-accidentally landed that
[09:10:31] <DaveMethvin> already
[09:10:51] <gnarf> with mikesherov's stuff on css3 vendor prefix?
[09:11:06] <rwaldron> DaveMethvin there was talk about actually adding the prefix as an accessible data property somewhere
[09:11:19] <rwaldron> like jQuery.css.vendor or something
[09:11:21] <rwaldron> IIRC
[09:11:36] <DaveMethvin> yeah just part of it has been landed, i thougt about backing it out but figured meh
[09:11:38] <rwaldron> maybe not
[09:11:41] * rwaldron shrugs
[09:12:15] <DaveMethvin> since modernizr does a lot of those things i don't want to build in that stuff unless it helps us internally
[09:12:48] <rwaldron> sounds good
[09:12:52] <rwaldron> I second that
[09:13:01] <rwaldron> OH SHIT
[09:13:05] <rwaldron> speaking of which
[09:13:12] <DaveMethvin> timmywil has a catch-all ticket for sizzle changes which is fine
[09:13:17] <rwaldron> the latest vrsion of html5shiv...
[09:13:23] <rwaldron> does all the inner shiv
[09:14:43] <rwaldron> I was cc'ed on it's commit and provided some test info
[09:14:48] <rwaldron> its*
[09:15:13] <rwaldron> considering we _always_ required the html5 shim/shiv anyway...
[09:15:51] <DaveMethvin> ok so lets take a quick run down that list ... anything in negative territory is not going in unless someone wants to plead a case
[09:16:40] <DaveMethvin> for the jQuery.browser stuff I'm proposing that we leave the builtin stuff as-is and create a plugin that does minimal fixes
[09:16:53] <DaveMethvin> that is, we're not planning on writing a gold-plated replacement
[09:17:08] <DaveMethvin> so we'll start a separate repo for the plugin and support it as of 1.8
[09:17:31] <DaveMethvin> but we won't encourage feature adds to it since we don't encourage browser detection in the first place
[09:19:25] <DaveMethvin> afaict, 10467 was voted up but it can't be done unless we first remove the sync option from ajax which can't happen until deprecation
[09:19:36] <DaveMethvin> so at best it's a long-term direction thing
[09:20:17] <ben_alman> test
[09:20:19] <ben_alman> ?ping
[09:20:40] <DaveMethvin> hey ben_alman
[09:20:46] <ben_alman> hiya
[09:20:50] <rwaldron> ugh
[09:20:51] <ben_alman> we just had a net hiccup here
[09:20:54] <timmywil> im here
[09:21:13] <DaveMethvin> now the party is starting :D
[09:21:14] <rwaldron> so, after I said "considering we _always_ required the html5 shim/shiv anyway..."
[09:21:22] <rwaldron> I then said: "the thought crossed my mind that we could remove some unnec. code by taking out the safe frag stuff... maybe."
[09:21:29] <rwaldron> and I missed everything after
[09:21:33] <DaveMethvin> oh didn't see that
[09:21:51] <gnarf> https://gist.github.com/16ba402bce4da139bae5
[09:21:54] <timmywil> take out the safe fragment?
[09:21:55] <gnarf> for rwaldron to catch up on
[09:21:59] <rwaldron> thank you
[09:22:18] <ben_alman> did you guys see my comments (a week or so ago) on that .serializeObject issue?
[09:22:31] <DaveMethvin> ben_alman: the one in the ticket?
[09:22:31] <ben_alman> i think ajpiano had opened it
[09:22:38] <rwaldron> DaveMethvin so for the jQuery.browser repo
[09:22:43] <ben_alman> DaveMethvin: i think so. it's all a blur
[09:22:46] <rwaldron> I actually already have that set up here as well
[09:22:50] <DaveMethvin> great
[09:22:55] <rwaldron> i have both a branch with its removal
[09:23:03] <rwaldron> and a new repo where it will live
[09:23:21] <rwaldron> so, just ping me when the jquery repo is ready and I will send PRs
[09:23:30] <DaveMethvin> well i think we can use a "fixed" external plugin as a carrot to get people to move over to it <evil grin>
[09:23:40] <rwaldron> sure
[09:23:43] <rwaldron> sounds goods
[09:23:47] <rwaldron> good*
[09:23:55] <rwaldron> I moved all the tests over as well
[09:24:16] <rwaldron> basically, everything jQuery.browser needs...
[09:25:01] <gnarf> So, I still want to take a deep look at refactoring effects.js over the 1.8 cycle - I never got around to making a ticket for voting on.  TBH - considering my current work load on stuff, I might not have time in the 1.8 cycle to finish it anyway.
[09:25:43] <DaveMethvin> well we haven't talked about time lines yet either so we don't know how much time there is :P
[09:25:56] <gnarf> :)
[09:26:11] <DaveMethvin> i think we'll need a 1.7.2, perhaps target that for a couple of weeks from now?
[09:26:17] <rwaldron> gnarf DaveMethvin just to reiterate, I think 1.8 should be long
[09:26:21] <rwaldron> no rush
[09:26:32] <DaveMethvin> i agree with that, we don't have users pushing us for it
[09:26:46] <rwaldron> take our time and release "test builds" and shit
[09:26:49] <DaveMethvin> they are more trying to catch up, a lot are still on 1.4 something
[09:26:54] <rwaldron> yeah
[09:27:00] <gnarf> ewww 1.4
[09:27:03] <rwaldron> i want to see more 1.7 migration
[09:27:16] <timmywil> I'd be okay with taking our time on 1.8.  The community might appreciate leaving a 1.7 stable branch out for a while
[09:27:19] <rwaldron> otherwise releasing versions is meaningless
[09:27:27] <rwaldron> timmywil exactly!
[09:27:42] <DaveMethvin> yeah i think we'll want to make a 1.8 playground branch
[09:27:52] <rwaldron> in fact, my suggestion was a direct result of things I had read on twitter
[09:27:53] <DaveMethvin> or a stable
[09:27:54] <rwaldron> nothing negative
[09:28:18] <rwaldron> but folks basically saying "too fast, i can't migrate projects in time"
[09:29:07] <DaveMethvin> going down the list from top to bottom, let's see if we can get a resolution on each of these
[09:29:22] <rwaldron> cools
[09:29:26] <rwaldron> cool*
[09:29:32] <DaveMethvin> gnarf, if 1.8 came out 6 months from now would that be too ambitious for you?
[09:29:33] <timmywil> well, the first one is moot for now
[09:30:20] <DaveMethvin> i think there is a lot of higher-level thinking we want to do about what will happen in animations and this is too specific
[09:30:36] <timmywil> agreed
[09:30:53] <timmywil> we need to see the direction of the effects revamp first
[09:31:01] <DaveMethvin> is that resolution wimpy enough? :)
[09:31:10] <timmywil> sounds good
[09:31:20] <gnarf> so like the animation tick thing, i really just don't see what benefit it has if any, but i would like to be able to support it in a refactor anyway
[09:31:45] <DaveMethvin> on .size() i'm fine with deprecation but i doubt we'd ever remove it
[09:31:56] <DaveMethvin> and for some reason this got the most votes from everywhere
[09:32:03] <gnarf> its cruft
[09:32:06] <gnarf> people like to remove it
[09:32:06] <DaveMethvin> so we can make ppl happy by deprecating it
[09:32:21] <ben_alman> deprecating what?
[09:32:26] <DaveMethvin> .size()
[09:32:26] <ben_alman> our net is totally flaking out here
[09:32:30] <gnarf> .fn.size()
[09:32:30] <ben_alman> oh yeah
[09:32:32] <timmywil> agreed as well, it's still widely used even though we don't like it and we've always said that .length is preferred
[09:32:57] <ben_alman> it would be so easy to make a .size after the fact if you REALLY needed it
[09:33:01] <DaveMethvin> and in my mind deprecation doesn't obligate us to remove, it's just our stmt of whether it's good practice
[09:33:15] <gnarf> as much as i hate to bring this up, we could VERY easily make a back compat for .size()
[09:33:26] <timmywil> grr, i have another work meeting.  be back later.  But I'll skip ahead and say that I will be doing the sizzle changes
[09:33:29] <ben_alman> or just tell people how, it's 1 line of code
[09:33:43] <DaveMethvin> sure and we may do that once we have enough stuff in the removed (vs deprecated) pile
[09:34:07] <gnarf> ben_alman: by the same argument though, how big is that one line of code in jQuery ? :)
[09:34:13] <gnarf> DaveMethvin: did you size that one up?
[09:34:25] <ben_alman> gnarf: it all adds up? heh
[09:34:31] <DaveMethvin> i don't think we'll ever remove it honestly
[09:34:38] <DaveMethvin> and it's not that much code
[09:34:42] <gnarf> ben_alman: if its like 10 bytes gzipped, i'd be suprised
[09:34:46] <DaveMethvin> next .... i am fine with .offset() being cleaned up as long as we don't have
[09:34:52] <DaveMethvin> any issues with mobile browsers
[09:34:56] <rwaldron> +1
[09:35:32] <gnarf> i think we've made enough public statements about .data("events") that we can rip it out hopefully
[09:35:56] <rwaldron> i think it goes in two parts
[09:36:00] <DaveMethvin> jaubourg isn't here, quite a bit in his back  yard but we'll muddle thru
[09:36:02] <rwaldron> 1. debugging extension
[09:36:08] <rwaldron> let that simmer
[09:36:18] <rwaldron> give people time to switch
[09:36:21] <rwaldron> 2. remove
[09:36:41] <gnarf> i asked this earlier
[09:36:45] <DaveMethvin> we never even documented that formally
[09:36:50] <DaveMethvin> it was in a slide or two that john had
[09:36:51] <gnarf> but since we are on the "debugging" extension
[09:37:23] <ben_alman> what is the "the "debugging" extension"
[09:37:46] <gnarf> i wonder if it wouldn't be possible to build jQuery with a "debugging" flag - to say, console.warn() deprecation notices, etc
[09:38:04] <DaveMethvin> gnarf: i was thinking about something like that for a minimized version of jquery
[09:38:12] <rwaldron> ben_alman  a "safe" api by which the information currently at data("events") can be inspected
[09:38:23] <gnarf> ben_alman: basically, jQuery.debug.js - a plugin with something like .fn.events() to get at data("events")
[09:38:27] <DaveMethvin> i have a branch that takes out effects.js and replaces with stubs that throw or warn
[09:38:29] <rwaldron> which will allow us to move the actual information
[09:38:54] <DaveMethvin> i don't think we need to obligate core devs to writing a debugging plugin for events
[09:39:07] <rwaldron> oh, ok
[09:39:07] <ben_alman> gnarf: it only has events?
[09:39:11] <gnarf> rwaldron: the data has already been moved, it just is "hacked" into visibility in the data
[09:39:14] <DaveMethvin> again we never documented it
[09:39:21] <ben_alman> or is there other debugging stuff? or "tbd"
[09:39:29] <DaveMethvin> and i broke it for 1.7 not realizing that ppl used it
[09:39:32] <rwaldron> gnarf ah, yeah... i forgot about this
[09:39:52] <rwaldron> for some reason i thought we "undid" something
[09:39:52] <gnarf> ben_alman: it was more of a "tbd" -- i think .events() is a good enough start, there might be others
[09:39:53] <rwaldron> nvm
[09:40:13] <ben_alman> gnarf: sure.
[09:40:17] <DaveMethvin> i think our focus for 1.8 is to figure out ways to either make things smaller or severable via better modularity (fewer cross-dependencies)
[09:40:32] <gnarf> ben_alman: it might also duck punch deprecation notices or something
[09:40:34] <DaveMethvin> yes
[09:40:38] <gnarf> i dunno
[09:41:19] <rwaldron> DaveMethvin +1
[09:41:27] <rwaldron> I'll be right back
[09:41:28] <rwaldron> i think
[09:41:52] <DaveMethvin> imma run down the list adding in resolutions, if i get ahead of anyone or you want to change soemting let me know
[09:42:05] <gnarf> i like css3 work
[09:43:03] <gnarf> docs#7442
[09:43:11] <gnarf> grr bot-t
[09:43:26] <DaveMethvin> margin collapse
[09:43:34] <gnarf> crazy
[09:43:46] <gnarf> there is an effects ticket that rick didn't assign to me? :)
[09:44:32] <DaveMethvin> gnarf you mean an umbrella ticket for effects? I didn't see one
[09:44:58] <DaveMethvin> so how big is serializeObject?
[09:45:06] <DaveMethvin> that's a ben_alman question i guess
[09:45:21] <gnarf> nah, this slide one
[09:45:22] <ben_alman> so my serializeObject plugin is very small
[09:45:26] <ben_alman> and very naive
[09:45:30] <ben_alman> like my comments in the ticket
[09:45:34] <ben_alman> it won't do what people are expecting
[09:45:35] <DaveMethvin> oh yeah i recall
[09:45:50] <DaveMethvin> in that case the gold-plated plugin woudl be better
[09:46:07] <ben_alman> yeah and tbh it's easier to just param it then deparam it into an object
[09:46:14] <DaveMethvin> it might become another ajax.settings.traditional mess
[09:46:27] <DaveMethvin> where ppl want semantics that aren't controlled by any standard
[09:46:30] <DaveMethvin> just "what i expect:
[09:46:47] <ben_alman> keep in mind that i had to fight for traditional, the original plan was to just change the behavior, period.
[09:46:57] <ben_alman> granted, it's in a gross place
[09:47:13] <ben_alman> but that was a compromise
[09:47:45] <gnarf> i gotta run
[09:47:58] <DaveMethvin> well this has four upvotes so technically we should do it, but i'd like to see what the "right" implementation looks like
[09:48:05] <DaveMethvin> cya gnarf
[09:48:14] <gnarf> ill be around more
[09:48:16] <gnarf> promise :)
[09:48:21] <ben_alman> the upvotes were probably pre-my comment
[09:48:22] <DaveMethvin> good we missed you
[09:48:37] <ben_alman> and definitely not by people who have really given it enough thought
[09:48:43] <DaveMethvin> and for 1.8 in particular everything needs to pass the size test
[09:48:48] <ben_alman> well
[09:48:57] <ben_alman> deparam is just a huge amount of "bigggggar"
[09:49:05] <ben_alman> so that won't work
[09:49:12] <ben_alman> so the only alternative is to change param
[09:49:18] <ben_alman> instead of just serializing
[09:49:26] <ben_alman> we'd need it to do 2 things
[09:49:33] <ben_alman> actually
[09:49:36] <ben_alman> scratch that
[09:49:41] <ben_alman> that makes no sense
[09:49:42] <DaveMethvin> ben_alman: do you want to enhance that to where you think it should be if it were in core, and we can take a look?
[09:49:55] <ben_alman> DaveMethvin: it doesn't make any sense
[09:50:03] <ben_alman> do you have a moment to hear an explanation?
[09:50:11] <DaveMethvin> sure
[09:50:18] <ben_alman> maybe you can find where i've gone wrong or something
[09:50:47] <ben_alman> traditional query params: a=1&a=2&a=3&b=1 deserialized by server into {a:["1","2","3"],b:"1"}
[09:51:10] <ben_alman> although some servers would deserialize that as {a:"3",b:"1"}
[09:51:28] <ben_alman> some servers see multiple entries of the same key as an array, some just use the last specified value
[09:51:39] <DaveMethvin> right unless you add [] to the name
[09:51:47] <ben_alman> so the fix for the latter was to do like a[]=1&a[]=2&a[]=3&b=1
[09:51:48] <ben_alman> right.
[09:51:54] <DaveMethvin> which is stupid imo
[09:51:54] <ben_alman> but that opens us up to:
[09:52:19] <ben_alman> a[x]=1&a[y]=2 -> {a: {x: "1", y: "2"}}
[09:52:26] <DaveMethvin> we're back to the same issues as .traditional had to deal with
[09:52:33] <ben_alman> well this is just the setup
[09:52:41] <ben_alman> and you see this in forms, like <input name="a[x]" ...>
[09:52:53] <DaveMethvin> the abandoned jquery-form plugin also dealt with this
[09:52:58] <ben_alman> SO. this is what my serializeObject plugin does
[09:53:04] <DaveMethvin> jquery-datalink excuse me
[09:53:09] <ben_alman> it just iterates over all form inputs and builds an object
[09:53:26] <ben_alman> so if you had inputs with a[x] of 1 and a[y] of 2
[09:53:40] <ben_alman> you'd get this object: {"a[x]": "1", "a[y]": "2"}
[09:53:51] <ben_alman> you wouldn't get{a: {x: "1", y: "2"}}
[09:54:00] <ben_alman> because the former is trivially easy
[09:54:08] <ben_alman> and the latter requires lots of parsing
[09:54:24] <ben_alman> SO if you;re going to do the parsing, you might as well just write a full deparam, which you'll need
[09:54:42] <ben_alman> because anything more than the most simple keys is going to need to be parsed
[09:54:52] <ben_alman> so the easiest way to do this is to keep the existing param, and complement it with deparam
[09:54:56] <ben_alman> which is what i've done in bbq
[09:55:12] <DaveMethvin> yeah this is a lot of what jquery-datalink dealt with, getting form <=> object and there are several reasonable ways to do it each of which is useful in different situations
[09:55:17] <ben_alman> i don't see how it would be easier or smaller to make a half-assed deparam as serializeObject
[09:55:29] <ben_alman> because it still wouldn't deparam
[09:55:47] <ben_alman> it's just turn forms into objects
[09:55:57] <ben_alman> i mean, it would be like a specialized version of deparam
[09:56:30] <ben_alman> this is my latest deparam fwiw https://gist.github.com/1025817
[09:56:38] <ben_alman> i still have to make a few minor tweaks
[09:56:41] <ben_alman> it's non-trivial.
[09:57:07] <ben_alman> you're not goung to want it in jquery cory
[09:57:15] <ben_alman> but it's an excellent plugin.
[09:57:50] <ben_alman> does this help explain things?
[09:58:06] <DaveMethvin> if I have an object { x: 3} and a form with three checkboxes named x that have values 1, 2, and 3, does the plugin check the third box?
[09:58:36] <ben_alman> my plugin converts a query stringto an object
[09:58:39] <ben_alman> it knows nothing of forms
[09:58:48] <ben_alman> it's the complement to $.param
[09:59:16] <DaveMethvin> oh i thought it did the datalink stuff too
[09:59:19] <ben_alman> my serializeObject plugin is like 10 lines
[09:59:20] <ben_alman> https://raw.github.com/cowboy/jquery-misc/master/jquery.ba-serializeobject.js
[09:59:28] <ben_alman> nope, my plugin is just a params deserializer
[09:59:53] <DaveMethvin> oh i'm caught up
[09:59:59] <ben_alman> ok
[10:00:15] <DaveMethvin> i just think this is outside what we want to do in core
[10:00:39] <ben_alman> i could talk about this at great length, but the tl;dr of it all is that this is too big and complex for core, and my deparam plugin (which i'm going to release as stand-alone soon) works fine
[10:00:44] <DaveMethvin> but again ppl voted for it so did they vote for the wrong idea then?
[10:01:02] <ben_alman> they voted for the idea, not the cold hard reality
[10:01:13] <ben_alman> they effectively voted for .deparam to be in core
[10:01:21] <ben_alman> because that's what it would take to do this
[10:01:35] <DaveMethvin> lol reality
[10:01:46] <ben_alman> deparam is about 650 bytes minified
[10:01:56] <ben_alman> don't know the gzip size offhand
[10:02:34] <DaveMethvin> ok let's leave it at that then
[10:02:54] <DaveMethvin> i don't think we can justify a few hundred bytes for it
[10:03:01] <ben_alman> prob not
[10:03:48] <DaveMethvin> ok 7442
[10:04:23] <DaveMethvin> well this is another one ppl voted to fix but it seems like a tough one to fix
[10:04:48] <ben_alman> this is the "when margins are set, sliding jumps" ?
[10:04:54] <DaveMethvin> yeah
[10:05:04] <ben_alman> john explained this to me once
[10:05:08] <DaveMethvin> and to me this is something the designer/programmer should avoid
[10:05:25] <DaveMethvin> margin collapse isn't something we control
[10:05:32] <DaveMethvin> and we're being asked to work around it
[10:05:33] <ben_alman> he said it looks weird when margins are animated because the things explaning or contracting also appear to move closer or farther from each other as they go, which looks bad
[10:05:48] <ben_alman> he said it was an aesthetic thing
[10:06:06] <DaveMethvin> i know the definite way to kill it
[10:06:27] <ben_alman> include css in jquery that does * { margin: 0 !important; }
[10:06:32] <ben_alman> SOLVED
[10:06:35] <DaveMethvin> lol
[10:06:40] <DaveMethvin> i like your style ben_alman
[10:06:49] <ben_alman> (my css style)
[10:07:05] <ben_alman> not sure anyone else is here
[10:07:16] <ben_alman> they all took my tl;dr as an opportunity to go on vacation or something
[10:07:49] <DaveMethvin> timmy had to bail for a job meeting (they're working today?)
[10:07:51] <DaveMethvin> gnarf left too
[10:07:58] <ben_alman> a bunch of us are @ work
[10:08:01] <DaveMethvin> rwaldron is on the same flakey net as  you?
[10:08:08] <ben_alman> yeah but he's not at his desk
[10:08:40] <DaveMethvin> so hey ben_alman, it's just you and me i guess
[10:08:46] <DaveMethvin> any thoughts on the other tickets?
[10:08:48] <ben_alman> should we hold hands?
[10:09:05] <DaveMethvin> lol
[10:09:09] <ben_alman> tbh i haven't looked for 2 weeks, i don't remember.. i've spent my whole vacation working on my dotfiles
[10:09:19] <DaveMethvin> yeah i was pretty lazy all holiday
[10:09:21] <ben_alman> well there was one thing i really wanted but i don't think it made it to any list
[10:09:27] <DaveMethvin> wazzat
[10:09:41] <ben_alman> looking
[10:09:56] <ben_alman> http://bugs.jquery.com/ticket/9800
[10:10:06] <ben_alman> it seems to have inherited some spam
[10:10:12] <ben_alman> but i really think the api could use this
[10:10:42] <ben_alman> and i don't buy the idea of "andSelf should be pure and not allow a selector"
[10:11:24] <ben_alman> but anyhoo, it came up again a week ago and i figured i'd just mention it again
[10:12:14] <DaveMethvin> ok i removed the spam
[10:12:21] <DaveMethvin> i agree on the name, not intuitive at alle
[10:12:22] <ben_alman> i wonder if i could've done that
[10:12:31] <DaveMethvin> if you had a delete button on the comment, yes
[10:12:38] <ben_alman> lol i could've deleted the smap too :D
[10:12:41] <ben_alman> SMAP
[10:12:44] <ben_alman> i never noticed
[10:13:00] <DaveMethvin> i  have it set to email me on every new ticket or comment, but these spammy ones sometimes get thrown out
[10:13:39] <DaveMethvin> addPrior seems liek a good name too
[10:14:18] <ben_alman> we're running out of terms for things
[10:15:01] <DaveMethvin> well andSelf is not good at all seeing that self is such a loaded term
[10:15:07] <ben_alman> yeah
[10:15:26] <ben_alman> it only makes sense when you think of your chain as a sentence
[10:15:31] <ben_alman> and even then, it can be confusing
[10:15:42] <ben_alman> maybe it should be called andPrevObject
[10:15:47] <ben_alman> i dunno
[10:16:13] <ben_alman> http://api.jquery.com/end/
[10:16:18] <ben_alman> says "previous state"
[10:16:23] <ben_alman> which is misleading
[10:16:46] <ben_alman> because it implies that a traversal or filter just changes the state of an object
[10:17:01] <ben_alman> instead of creating or returning an entirely new object
[10:17:28] <DaveMethvin> we need to do a better job in general of indicating when a method returns a modified (new) jQuery object vs the one that came in
[10:17:33] <ben_alman> maybe it helps people to think of a "jquery chain" as an object
[10:17:39] <ben_alman> but it's not
[10:17:49] <ben_alman> DaveMethvin: agreed
[10:18:35] <DaveMethvin> maybe have the return type be jQueryFiltered or something
[10:18:42] <DaveMethvin> and explain that in the types
[10:19:02] <DaveMethvin> so that it was clear you needed .end() to get back to the previous
[10:19:16] <ben_alman> there are like 4 possible things that get returned. 1) the same object. 2) a new object that's a subset of the previous object (filtering) 3. a new object that could be all different elements (traversing) 4. a new object that contains clones of elements (appending to multiple targets)
[10:19:33] <DaveMethvin> oh good point
[10:19:46] <ben_alman> ni can't think of another
[10:20:23] <DaveMethvin> right now we differentiate those by putting text in the writeup, which isn't very good
[10:22:35] <DaveMethvin> ok that's prolly it for now ... any other comments from anyone?
[10:22:40] <ben_alman> heh
[10:22:45] <DaveMethvin> echo echo echo
[10:22:48] <ben_alman> (crickets)
[10:23:07] <DaveMethvin> alright well i hope you had a great holiday ben
[10:23:27] <DaveMethvin> now the cruelty of having to get back to work sets in
[10:23:57] <DaveMethvin> and i was so sure i'd get a bunch of stuff done over the holidays
[10:24:00] <DaveMethvin> but noooooo
[10:24:12] <DaveMethvin> ok imma shut down the channel
[10:24:35] <ben_alman> thx
