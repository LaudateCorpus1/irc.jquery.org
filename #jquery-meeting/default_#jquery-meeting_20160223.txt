[14:02:27] <sfrisk> Chassis Meeting time!
[14:02:33] <geekman-rohit> hey
[14:02:44] <sfrisk> geekman-rohit, kristyjy, arschmitz
[14:03:27] <geekman-rohit> Im gonna be gone early
[14:03:36] <geekman-rohit> so I could do with some reviews on https://github.com/jquery/css-chassis/pull/139
[14:04:03] <kristyjy> hello
[14:04:07] <sfrisk> I'm in the process of looking over it
[14:04:10] <geekman-rohit> I plan to complete that tomorrow
[14:04:13] <arschmitz> hi
[14:04:15] <sfrisk> Agenda: https://docs.google.com/spreadsheets/d/1FUdRcAq2d8njs8KAcfQmEyoZL74SXLsLp1rtc7E9z_I/edit?usp=sharing
[14:04:28] <sfrisk> I've actually started working html 4 form elements and styling for states and whatnot
[14:04:46] <kristyjy> oh glad you said that I was going to offer to work on it lol
[14:04:50] <sfrisk> but that is on my computer and not ready to submit - although it should be ready later this week
[14:04:52] <kristyjy> glad I didn't start :D
[14:05:25] <sfrisk> sorry :-/
[14:05:34] <sfrisk> I would love your advice on stuff though
[14:05:38] <sfrisk> and how things should look
[14:05:58] <sfrisk> I also sat down this weekend and marked everything that is Phase One in our issue list https://github.com/jquery/css-chassis/milestones/Phase%20One
[14:06:01] <kristyjy> no worries. Yeah I'm happy to help with that. Maybe once we settle on some styles for those I can pick up the HTML5 elements and try to match them up
[14:06:26] <sfrisk> So if anyone is looking for work to do, that is a list of things that need doing
[14:07:03] <sfrisk> to be fair, automated accessibility testing is done - I just have to finish that merge
[14:07:27] <kristyjy> I could pick up the table styles if you want. I was looking through last weekend but I couldn't quite figure out the state it was left in and what needed to be done
[14:07:49] <kristyjy> if you could go over that with me that might be a good quick win
[14:08:11] <sfrisk> if you look at the original closed story, it was about 80% done
[14:08:18] <sfrisk> just the typography stuff in there needed to be pulled out
[14:08:36] <kristyjy> ah look at the closed story. That's where I was thrown off lol
[14:08:36] <sfrisk> https://github.com/jquery/css-chassis/pull/69
[14:09:12] <sfrisk> https://github.com/jquery/css-chassis/pull/130 replaced it
[14:09:36] <sfrisk> so that one is probably closer to the state you want to work in
[14:09:45] <kristyjy> cool thanks
[14:10:03] <sfrisk> some of the work that needs to be done is also pulling features into variables in JSASS for use in a theme builder
[14:10:07] <geekman-rohit> no 130
[14:10:22] <geekman-rohit> I think marestads work is good to build on
[14:10:37] <sfrisk> yeah, I had that link after
[14:10:48] <sfrisk> 130 was based on marestad's work
[14:10:59] <sfrisk> but was bringing it up to date to what was current in the code base
[14:11:27] <sfrisk> and removing the typography stuff that was in there that hadn't been pulled into master when work began on table
[14:11:40] <geekman-rohit> kristyjy I could help with tables
[14:11:46] <geekman-rohit> i have a thing for them
[14:12:49] <kristyjy> oh okay I can take something else if you have it covered
[14:13:18] <sfrisk> there are two parts to the table styling
[14:13:22] <sfrisk> there is that base styling
[14:13:39] <sfrisk> but also alternative custom styling : https://github.com/jquery/css-chassis/issues/76
[14:14:08] <geekman-rohit> @kristyjy nope!! you can start there
[14:14:13] <geekman-rohit> ill help is all
[14:14:21] <kristyjy> okay cool :)
[14:14:24] <sfrisk> if someone wants to finish up the work on the base table styling, the two of you could take turns on alternate table stylings
[14:14:31] <geekman-rohit> yep
[14:14:48] <geekman-rohit> im still getting used to sass though
[14:15:48] <geekman-rohit> so  i may not know best practices and stuff.. so please be hard when reviewing my prs
[14:16:03] <sfrisk> Sounds good, I should have a finished review for you done by EOD
[14:16:40] <sfrisk> Also on that note, I know we've identified some issues on https://github.com/jquery/css-chassis/pull/138 but if anyone can think of anything else before I go into for a refactor, let me know
[14:19:12] <geekman-rohit> it looks good to me
[14:19:23] <geekman-rohit> went through it to see how u use palette earlier
[14:19:35] <kristyjy> yeah looks good to me as well
[14:19:57] <geekman-rohit> i do think that prs use of mixins could be simplified, but hey you know better
[14:20:44] <sfrisk> if you can think of a more simplified/efficient way of doing something I would like to hear it
[14:20:50] <sfrisk> also looking at the code, I have some spacing issues
[14:21:02] <sfrisk> When we launch phase one, I think I'll want a more thorough demo area that discusses best practices as well as being a visual guide for how things work
[14:21:14] <sfrisk> so that the demo could Potentially act as a future style guide for projects
[14:21:37] <sfrisk> that people could be encouraged to add custom project specific widgets to
[14:22:26] <geekman-rohit> i think we should have a consistent way of code
[14:22:45] <geekman-rohit> so if you have btn-colors mixin all components should follow that practice
[14:22:59] <sfrisk> hrmm, good idea!
[14:23:20] <sfrisk> have a larger set of utility mixins for colors?
[14:23:54] <geekman-rohit> sounds good but we should do that in a major rewrite after we have atleast a few more components merged in
[14:24:31] <sfrisk> once we figure out what sort of mixins we need?
[14:24:40] <geekman-rohit> and once we have more code
[14:24:53] <geekman-rohit> i still dont have a sharp clarity of how our code is gonna be
[14:25:06] <sfrisk> Sounds good
[14:25:19] <sfrisk> work on getting stuff done, and we can refactor to the best practices of how we want things to work
[14:25:25] <geekman-rohit> yep
[14:25:32] <kristyjy> yeah I agree that sounds perfect
[14:25:32] <geekman-rohit> i think you should pull buttons in
[14:25:41] <geekman-rohit> its good enough for phase 1
[14:26:07] <geekman-rohit> others can follow in the coding standards/colors you used
[14:26:27] <sfrisk> I do want to fix the button bar to not rely on cascading
[14:26:39] <kristyjy> yeah I think that's worth fixing but otherwise pull it in
[14:26:45] <sfrisk> and I would like an example of to different button bar groups together in one line
[14:26:50] <geekman-rohit> i dont understand?
[14:27:01] <geekman-rohit> you want the buttons inside the bar to be styled with a different class?
[14:27:09] <sfrisk> http://view.css-chassis.com/96-buttons-take-two/demos/buttons.html
[14:27:16] <sfrisk> The button bar at the botoom
[14:27:18] <sfrisk> bottom*
[14:27:55] <sfrisk> relies on the CSS having ".btn-bar" with a ".btn" within that div
[14:28:11] <sfrisk> instead of the the CSS relying on a class that is just on the button
[14:28:57] <geekman-rohit> .btn-group you mean?
[14:30:14] <geekman-rohit> how do we benefit by not having a 'container .btn-group'
[14:30:23] <geekman-rohit> thats how it should be.. logically
[14:30:37] <geekman-rohit> atleast thats how i have done it todate
[14:31:15] <kristyjy> yeah logically I agree it makes sense but like I said in my comment keeping things down to a single class is what I think we should try to retain from BEM. This way users of the framework won't have to do lots of cascading to overwrite our styles
[14:32:09] <kristyjy> I've learned this lesson the hard way. Working with the Drupal CMS their base styles have 2-3 levels of cascade which forces me to have like 4-5 levels
[14:32:33] <geekman-rohit> sounds good. but we dont want to complicate the markup
[14:32:53] <geekman-rohit> a container element for things like a group keeps it simple
[14:33:04] <kristyjy> I think keeping the markup like that is fine. It's just making sure the css doesn't need that many selectors
[14:33:31] <geekman-rohit> theres just 2 levels?
[14:33:45] <geekman-rohit> and it just removes border-radius and adds a float
[14:34:14] <geekman-rohit> adding another class to the buttons to do that would be too many classes on a button
[14:35:10] <sfrisk> yeah ,btn group
[14:35:29] <sfrisk> yeah, cascading makes things harder
[14:35:49] <sfrisk> yeah, that's where I was going back and forth - two many classes, or two many cascades
[14:36:00] <sfrisk> if we limit to 1 parent object only, it might not be too bad
[14:36:47] <kristyjy> I'm wondering if it would be helpful to keep a button base styles in a mixin. Then you could include that mixin on the .btn class and the .button-group--btn class
[14:36:57] <kristyjy> then you would only need the one class
[14:37:20] <sfrisk> that was a conversation we were having that the "basic" class .btn really didn't do anything
[14:37:30] <sfrisk> because .btn assumes default colors, and a medium button
[14:37:51] <sfrisk> https://github.com/jquery/css-chassis/pull/138#issuecomment-164895440
[14:37:52] <kristyjy> oh gotcha
[14:38:15] <geekman-rohit> but if you already have a .btn-group container.. adding another class makes things weird?
[14:38:26] <geekman-rohit> i am looking at how bootstrap and foundation do it
[14:38:55] <sfrisk> bootstrap has .btn-group .btn for a button group
[14:39:00] <kristyjy> they cascade. At least I'm pretty sure bootstrap does. I'm not sure about foundation
[14:39:08] <sfrisk> bootstrap did have this discussion : https://github.com/twbs/bootstrap/issues/18592
[14:39:14] <sfrisk> bootstrap still cascades
[14:39:25] <geekman-rohit> foundation cascades too
[14:39:28] <sfrisk> which has it's pros and cons - but normally makes customization difficult
[14:39:34] <geekman-rohit> i think we should try to keep cascading minimum
[14:39:42] <geekman-rohit> but it is a necessary evil
[14:39:58] <geekman-rohit> we can have everything in variables,
[14:40:00] <sfrisk> that does move away from any BEM discussions we did have
[14:40:05] <geekman-rohit> so its easy for people to modify
[14:40:27] <geekman-rohit> we already have styles coming from 3 classes for a button
[14:40:44] <geekman-rohit> a 4th class or a cascaded style, i doubt there would be much performance difference
[14:41:02] <sfrisk> arschmitz might know
[14:41:06] <geekman-rohit> we already lost any BEM benefits(if there were any) by breaking class
[14:41:17] <arschmitz> hi sorry what might i know
[14:41:35] <geekman-rohit> hey, to cascade in btn-group or not to
[14:41:41] <sfrisk> http://view.css-chassis.com/96-buttons-take-two/demos/buttons.html
[14:41:50] <geekman-rohit> the button bar at end
[14:41:57] <sfrisk> at the moment it is a parent class surrounding .btn
[14:42:05] <geekman-rohit> i think the style is good and simple and should be that way
[14:42:13] <sfrisk> but that does go against cascading goals
[14:42:53] <arschmitz> well going with the original theory we had
[14:43:02] <arschmitz> the btns in a btn group
[14:43:07] <arschmitz> should not get class btn
[14:43:23] <arschmitz> they should be btn-group--btn
[14:43:28] <sfrisk> yeah
[14:43:36] <sfrisk> so I was thinking about refactoring to that
[14:43:54] <arschmitz> then use the same modifiers as btn where possible
[14:44:03] <geekman-rohit> i dont quite like it though
[14:44:16] <arschmitz> geekman-rohit: why?
[14:44:30] <geekman-rohit> its a button
[14:44:35] <geekman-rohit> just inside a group
[14:44:41] <arschmitz> yes which changes it
[14:44:45] <geekman-rohit> sa a .group .btn is the logical markup
[14:45:06] <arschmitz> i dont think that is any more logical
[14:45:19] <geekman-rohit> im thinking how many classes will user have to remember?
[14:45:20] <arschmitz> and it goes against the goals we originally established
[14:45:25] <geekman-rohit> or keep looking for in docs
[14:45:33] <arschmitz> its just block-element
[14:45:48] <sfrisk> https://css-tricks.com/bem-101/
[14:45:51] <arschmitz> its also what we chose when we talked about be-m
[14:45:53] <arschmitz> or whatever
[14:45:57] <geekman-rohit> .progress .progrss-bar when a .progress span would do
[14:46:33] <arschmitz> that completely breaks our goal of being as markup agnostic as possible
[14:46:52] <arschmitz> if we do that exactly how are we different then bootstrap or others
[14:47:05] <geekman-rohit> so no cascading at all?
[14:47:11] <geekman-rohit> not even 2 levels
[14:47:14] <arschmitz> that was the original plan yes
[14:47:19] <arschmitz> and never use bare elements
[14:47:27] <arschmitz> or specificy elements at all
[14:47:40] <geekman-rohit> okay
[14:47:40] <sfrisk> and there has been a move in the CSS community to adapting to BEM
[14:48:06] <arschmitz> this also is part of how we will work with different js frameworks with different markup requirments
[14:48:17] <arschmitz> we should leave the markup and structure as loose as possible
[14:48:25] <geekman-rohit> makes sense
[14:48:39] <arschmitz> specificty breaks that ability
[14:48:46] <arschmitz> and also makes it harder to ovrride
[14:48:54] <arschmitz> specificty === cascading
[14:49:17] <sfrisk> So I'll adjust my code to remove the need for cascading
[14:49:22] <sfrisk> also fix up the base .btn class
[14:49:24] <arschmitz> geekman-rohit: im not saying i dont see where your coming from
[14:49:25] <sfrisk> while I'm at it
[14:49:30] <geekman-rohit> ill adjust mine
[14:49:31] <arschmitz> but that was not the original goals of the project
[14:49:35] <geekman-rohit> yep
[14:49:38] <geekman-rohit> makes sense
[14:49:47] <sfrisk> We were trying to provide a Bem-y solution as an alternative
[14:49:49] <geekman-rohit> now that i see your perspective
[14:49:55] <arschmitz> and there are reasons for that that play into our larger goal of a standard
[14:50:03] <geekman-rohit> i keep forgetting the user is gonna be js frameworks mostly
[14:50:12] <geekman-rohit> i keep thinking how to make markup simple
[14:50:29] <arschmitz> geekman-rohit: and i think its pretty user friendly
[14:50:29] <sfrisk> but it does mean looking at the markup - you know exactly what an element does
[14:50:34] <arschmitz> if you just think about it
[14:50:44] <arschmitz> ok i have a btngroup
[14:50:48] <arschmitz> and a btn inside it
[14:50:52] <arschmitz> btngroup-btn
[14:50:55] <arschmitz> etc
[14:51:11] <arschmitz> this is already done but in a non strict way other places
[14:51:36] <arschmitz> its pretty common in many css frameworks to have this block-element pattern but not super standardized
[14:51:42] <arschmitz> bootstrap does it in a few places
[14:51:46] <arschmitz> both jquery ui and mobile do
[14:52:05] <arschmitz> but its very haphazard and just where needed
[14:52:33] <geekman-rohit> fair enough
[14:52:49] <sfrisk> Okay, so we're near the end of our hour
[14:52:58] <sfrisk> 1.) Review Typography
[14:53:01] <geekman-rohit> and i had to tuck in early which i forgot
[14:53:09] <sfrisk> 2.) Review Button / Sarah is refactoring some stuff
[14:53:13] <geekman-rohit> i could do with your daylight savings starting early
[14:53:20] <sfrisk> 3.) Kristyjy is on tables
[14:53:26] <sfrisk> 4.) sfrisk is on inputs when not buttoning
[14:53:43] <sfrisk> 5.) Phase one stuff is all milestoned out, so if you're looking for something to do, it's listed there
[14:54:02] <sfrisk> 6.) sfrisk, for goodness sakes, pull in accessibility testing and finish that merge already
[14:54:13] <sfrisk> anything else?
[14:56:23] <sfrisk> okay then
[14:56:29] <sfrisk> see everyone on the forums/next week
