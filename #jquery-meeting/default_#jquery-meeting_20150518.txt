[09:04:50] <timmywil> DaveMethvin, gibson042, arthurvr, markelog, m_gol meeting!
[09:04:55] <markelog> they-hey
[09:05:02] <timmywil> I'm in a car with crappy hotspot, so I might cut out
[09:05:07] <arthurvr> hey there
[09:05:14] <DaveMethvin> hey, you found a connection!
[09:05:24] <timmywil> On my way back from the beach :)
[09:05:31] <timmywil> anniversary trip and all
[09:06:34] <gnarf> yo yo
[09:06:42] <markelog> timmywil: congrats!
[09:06:44] <gnarf> Getting started on effects units today
[09:06:50] <gnarf> on an open sourcerer week
[09:06:57] <arthurvr> awesome news gnarf :)
[09:07:17] <timmywil> thanks gnarf !
[09:07:59] <timmywil> ok, first up https://github.com/jquery/jquery/issues/2267
[09:09:03] <timmywil> are we leaning towards allowing null/undefined. I know gibson042 had reservations.
[09:09:21] <DaveMethvin> i'm ok with null and undefined geting through, we just need to document it since it was the old previous behavior
[09:09:22] <timmywil> was this the one we were saving an argument for?
[09:09:25] <DaveMethvin> but numbers and strings no
[09:09:28] <DaveMethvin> lol
[09:09:29] <timmywil> ^^
[09:09:37] <gibson042> hehe
[09:10:16] <gibson042> I think allowing null/undefined can mask bugs, but apparently people lived with it for years
[09:10:22] <DaveMethvin> at some point it's just a random spin of the wheel as to the best solution
[09:10:42] <gnarf> I think you could put it in with a warning in compat ?
[09:11:00] <DaveMethvin> if we document it we'd be saying it is correct behavior tho
[09:11:05] <gnarf> or migrate sorry
[09:11:07] <DaveMethvin> so i wouldn't want to warn on that
[09:11:11] <gibson042> right
[09:11:43] <timmywil> gibson042: actually, now that I'm thinking of it, could you clarify your position on invalid input? It seems to me there are 3 options, but maybe I'm missing something. 1. throw for invalid input 2. fail silently 3. leave the behavior undefined. Sometimes it will throw, sometimes it won't.
[09:11:50] <gnarf>  each on null/undefined seems a bit crazy - but going based on underscore/lodash isn't a bad plan there
[09:11:51] <m_gol> present
[09:11:52] <gibson042> the question is whether or not to accept them as valid, it being given that such acceptance necessitates updated documentation
[09:12:04] <markelog> it seems number 3 is a preferable on
[09:12:05] <markelog> e
[09:12:06] <gibson042> timmywil: I'm solidly (3)
[09:12:19] <timmywil> ok, I think we agree then
[09:12:44] <markelog> in previous years jquery was throwing less we even landed some patches for incorrect output, so it would specifically not throw
[09:12:59] <markelog> i think we should excplicitly mention this in the blog post
[09:13:06] <timmywil> markelog: yes, I think John leaned more towards failing silently.
[09:13:37] <markelog> given that jquery became popular, i fear new policy might be dangerous
[09:13:44] <markelog> although i fully agree with it
[09:13:58] <markelog> given how jquery*
[09:14:58] <timmywil> I think we're making changes cautiously, tho
[09:15:37] <DaveMethvin> you never really know until it's released and ppl try it
[09:15:38] <markelog> i mean in general sense - throwing instead of returning something pointless
[09:15:52] <markelog> DaveMethvin: yep
[09:15:58] <DaveMethvin> all it takes is some popular plugin that does things a certain way
[09:16:03] <DaveMethvin> and isn't updated very often
[09:16:07] <timmywil> So, for this ticket, I think we're accepting null and undefined as valid input.
[09:16:27] <timmywil> numbers and strings are invalid
[09:16:45] <timmywil> and behavior will be undefined for those
[09:21:12] <m_gol> timmywil_: car has striked back? ;)
[09:22:10] <DaveMethvin> always a problem keeping a connection in a moving car!
[09:23:35] <DaveMethvin> so we've been going around and around on that issue with originalEvent, most likely because it isn't very common or critical
[09:24:09] <DaveMethvin> if there was a strong reason one way or the other i'd have a stronger opinion
[09:24:22] <DaveMethvin> but any solution that eliminates the error is fine with me
[09:25:02] <markelog> just writing response on that )
[09:26:07] <timmywil> I might be back?
[09:26:21] <DaveMethvin> backer than you were before :)
[09:26:31] <timmywil> cool
[09:27:33] <timmywil> so, how do we feel about $(window).offset()
[09:27:37] <timmywil> did you already discuss that?
[09:28:18] <DaveMethvin> i think it should break
[09:28:22] <timmywil> I'm ok doing what gibson042 suggested and let migrate take over
[09:28:41] <DaveMethvin> me too
[09:29:29] <DaveMethvin> gibson042 created https://github.com/jquery/jquery-migrate/issues/108 so we're good
[09:30:20] <gnarf> timmywil: how would you feel about pulling in more of sinon -- I kind of want to use spies to make sure some of the hooks are called correctly
[09:30:36] <timmywil> gnarf: sounds fine to me
[09:30:43] <m_gol> gnarf: +1
[09:33:17] <timmywil> https://github.com/jquery/jquery/issues/2308
[09:33:57] <timmywil> For this, I'd like to explore the possibility of showing stylesheet-hidden elements without reverting everything
[09:34:06] <DaveMethvin> so i know that's gonna be a big breaking change, but making it work means backing out a lot of the improvements from hide/show which is sad
[09:34:31] <DaveMethvin> i'm conflicted
[09:34:40] <timmywil> yea, me too
[09:34:45] <DaveMethvin> we've created a MONSTER!
[09:35:08] <timmywil> the performance issue was a simple read in webkit, which is unfortunate
[09:35:18] <DaveMethvin> if the middle ground still requires checking computed styles we might as well not do anything
[09:35:52] <gibson042> I disagree, we can still get better _behavior_ (e.g., not cementing in computed styles)
[09:36:05] <m_gol> what if we allowed people to provide their own default display for the affected element?
[09:36:32] <timmywil> m_gol: that is a possibility
[09:36:34] <gibson042> wouldn't that be analogous to just showing it before animating?
[09:36:46] <timmywil> gibson042: yes, but in one call
[09:37:05] <m_gol> #id {display: none} and $('#id').show({display: 'block'}) or sth
[09:38:01] <gibson042> ah, so animate code would start by setting explicit display if provided?
[09:38:17] <gibson042> and therefore the value would be locked-in after the animation?
[09:38:54] <timmywil> yea, not ideal
[09:39:57] <DaveMethvin> well the point scott was making is that if you're writing a plugin, a lot of this won't be known to you
[09:40:12] <DaveMethvin> but that's exactly how our stuff got so ugly
[09:40:25] <DaveMethvin> as we try to figure out the entire display world before doing anything
[09:40:53] <DaveMethvin> if we let people pass in the display value it will still break plugin code that doesn't pass it in
[09:41:00] <timmywil> can we use defaultDisplay without reading computed?
[09:41:00] <DaveMethvin> so they'd need to update
[09:41:18] <DaveMethvin> if someone tells us the value
[09:42:51] <timmywil> but that would still break our fix for responsive stylesheet, I suppose
[09:43:18] <m_gol> yes, those two seem to contradict each other
[09:43:21] <DaveMethvin> yeah, that's the beauty of clearing it out
[09:43:48] <m_gol> basically, the responsive stylesheet remark was explicitly about that if it's hidden in a stylesheet it might be behind a media query so it should stay hidden
[09:43:56] <m_gol> a feature & a bug at the same time
[09:45:18] <gibson042> also that if it happens to be block at animation time, that should not be made permanent because the stylesheet rules could change
[09:45:22] <DaveMethvin> so OBVIOUSLY the right solution is to parse the stylesheets and see if it's hidden by a media query :)
[09:45:47] * timmywil shoots himeself
[09:46:19] <timmywil> ok, I'm not sure what to do here.
[09:46:20] <m_gol> DaveMethvin: the abyss of evil
[09:46:35] <timmywil> Maybe we just leave it as-is for the beta
[09:46:47] <DaveMethvin> i don't think there's a way to change anything without breaking a lot
[09:47:05] <gibson042> it looks to me like having it both ways may be possible, but at a performance penalty
[09:47:10] <DaveMethvin> but we know that show/hide creates a lot of problems as is
[09:47:37] <timmywil> gibson042: yea, then Dave's going to have to keep telling everyone not to use it
[09:47:47] <gibson042> :)
[09:47:48] <markelog> should we explore other possibilities?
[09:48:00] <markelog> introducing new arguments?
[09:48:05] <markelog> or another API?
[09:48:07] <timmywil> I'm all for brainstorming
[09:48:12] <DaveMethvin> maybe we could do a blog about it?
[09:48:23] <markelog> DaveMethvin: what would be in it?
[09:48:30] <m_gol> .show({ mySiteIsResponsive: true })
[09:48:35] <DaveMethvin> "here is the problem we are trying to solve"
[09:48:35] <markelog> recommending not to use show/hide?
[09:48:46] <markelog> recommmend to use it in some cases only?
[09:48:54] <markelog> or?
[09:48:57] <DaveMethvin> explain that show/hide have some bad behaviors and explain the solutions we've been considering
[09:49:06] <timmywil> DaveMethvin: sounds like a good idea
[09:49:15] <timmywil> more input in this area could be helpful
[09:49:19] <markelog> basically ask the community what should we do?
[09:49:32] <DaveMethvin> at least show the work and thinking we've been doing
[09:49:38] <timmywil> yea
[09:49:42] <m_gol> sounds good
[09:49:44] <markelog> how about new API?
[09:49:58] <m_gol> markelog: what would it do?
[09:50:17] <DaveMethvin> new api might be useful for something but if we don't change the old one we aren't fixing anything
[09:50:19] <markelog> revert what we did for show/hide and for new methods use hidden property
[09:50:33] <DaveMethvin> or reducing anything
[09:50:40] <markelog> and not breaking anything )
[09:50:52] <DaveMethvin> OK TRUE :)
[09:50:56] <markelog> )
[09:51:03] <timmywil> except it was already broken :P
[09:51:08] <markelog> well
[09:51:11] <markelog> it was perf bad
[09:51:14] <gibson042> markelog: what landed is very similar to using hidden
[09:51:18] <markelog> not like broken all the way
[09:51:29] <markelog> gibson042: yeah
[09:51:33] <gibson042> no, defaultDisplay was pretty damn broken
[09:51:43] <markelog> gibson042: it worked
[09:51:51] <markelog> that is an important part
[09:51:51] <gibson042> it "worked" as long as you didn't do anything tricky
[09:52:05] <markelog> okay, what do you mean there?
[09:52:36] <DaveMethvin> media queries for example
[09:52:36] <gibson042> media queries, or animation of elements with the same nodeName but different cascaded display, etc.
[09:53:03] <markelog> how hidden property works with media queries?
[09:53:10] <markelog> didn't check that?
[09:53:15] <markelog> if we doing the same
[09:53:19] <markelog> then it is not broken
[09:53:24] <gibson042> hidden acts like a boolean switch equivalent to display: none
[09:53:37] <gibson042> you can override hidden with inline display, for instance
[09:53:41] <m_gol> except hidden is supposed to mean hidden for all eternity in all presentations, no?
[09:53:49] <markelog> "animation of elements with the same nodeName but different cascaded display" - not sure if that broken, just tricky
[09:53:56] <gibson042> no, it's broken
[09:54:11] <markelog> we need to have a test case :-)
[09:54:16] <gibson042> because defaultDisplay uses an object in which the keys are nodeName values
[09:54:23] <timmywil> We're almost out of time. I want to fit in two more things.
[09:54:35] <markelog> gibson042: so?
[09:54:44] <markelog> we taking best we can do
[09:54:49] <markelog> it is a default display
[09:54:53] <timmywil> we'll keep thrashing on show/hide. Will be plenty of time to discuss.
[09:54:57] <gibson042> aye
[09:55:02] <m_gol> before we land anything, our server setup is currently broken
[09:55:04] <markelog> if user changed, then he did this to himself
[09:55:20] <timmywil> https://github.com/jquery/jquery/pull/2303
[09:55:34] <m_gol> something fishy is going on with the PHP setup so ajax, manipulation & support tests fail everywhere
[09:55:37] <timmywil> I'd like to land this and make the necessary docs adjustments
[09:55:59] <timmywil> m_gol: oh sorry
[09:56:22] <m_gol> I wanted to make iOS 8.3 work, s5fs suggested updateing packages & restarting the server and then it broke
[09:56:26] <timmywil> ah yea, swarm looks mad
[09:56:40] <m_gol> Krinkle made iOS 8.3 work later, a simple change in testswarm-browserstack mappings was enough
[09:56:46] <m_gol> but PHP setup is still broken
[09:56:58] <m_gol> all the failures are executing PHP
[09:57:23] <markelog> timmywil: i think we could discuss pull/2303 further
[09:57:29] <timmywil> m_gol: ok, do you think you'd have time to take a look?
[09:57:34] <m_gol> someone needs to debug it, I may try but not sure if I'll have time before Thursday
[09:57:55] <m_gol> before it's fixed we need to manually test every commit, I guess
[09:57:57] <markelog> it is too bad new infra for core didn't pass for the google code summer ((
[09:58:25] <m_gol> I'll create an issue & describe in more detail
[09:58:25] <markelog> probably wouldn't have this problem or issues like that in month or, if we would pass (
[09:58:29] <timmywil> m_gol: if we can't get to it right away, maybe we should revert the updates until we can address the issues?
[09:58:45] <m_gol> timmywil: these are apt-get updates, I don't think it's that easy to revert :)
[09:58:49] <m_gol> s5fs would know more
[09:58:53] <timmywil> ah ok
[09:58:57] <timmywil> then an issue would be good
[09:58:58] <markelog> after 3.0 release i think we really should work on infra stuff
[09:59:06] <timmywil> markelog: agreed
[09:59:13] <markelog> so this kind of thing wouldn't happen again and again
[09:59:16] <m_gol> yup
[09:59:26] <markelog> bus factor for this server setup is low (
[09:59:30] <timmywil> so, we'll wait on landing PRs
[09:59:44] <m_gol> I'll create an issue today & describe the issue
[09:59:53] <m_gol> I mean, describe which files cause the failures
[09:59:58] <m_gol> and maybe someone will notice sth
[10:00:08] <DaveMethvin> gotta run, i
[10:00:17] <markelog> DaveMethvin: see ya Dave!
[10:00:18] <DaveMethvin> will catch up on the ticket conversations later
[10:00:40] <timmywil> since PRs are on hold for now, what I was going to bring up can wait
[10:00:58] <timmywil> thanks everybody, see you in -dev and on github
[10:01:14] <markelog> bye!
