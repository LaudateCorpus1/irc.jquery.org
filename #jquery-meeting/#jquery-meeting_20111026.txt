[09:01:22] <gnarf> sry
[09:01:44] <rworth> hey all
[09:01:57] <kborchers> hi
[09:02:14] <gnarf> i was late on the -m
[09:02:16] <gnarf> i apologize
[09:03:09] <gnarf> so testing
[09:03:32] <jzaefferer> no infrastructure?
[09:03:32] <gnarf> the idea of skipping tests on hidden pages is finnicy
[09:03:47] <jzaefferer> ah, that one
[09:03:58] <jzaefferer> what does "finnicy" mean?
[09:04:07] <gnarf> i tried to play with it for a little bit - but its just not reliable at all
[09:04:13] <scott_gonzalez> it means finicky :-P
[09:04:31] <gnarf> scott and I found some interesting behaviors when playing with focus
[09:04:56] <jzaefferer> so, what can we do?
[09:04:57] <gnarf> turns out that detecting a "hidden page" might not be that easy, we could always bind the window blur/focus
[09:05:23] <rworth> what's the idea behind this? Won't this get in the way of having a bunch of different browsers running on a bunch of machines?
[09:05:32] <Dave_Stein> gnarf: just yell my name when youre up to my stuff, at work, working away :)
[09:05:54] <gnarf> so like - most of the focus issues we can work around with some unit test code
[09:06:08] <gnarf> rworth: the idea was since the "hidden browser" is causing test fails
[09:06:25] <gnarf> we should perhaps think about not letting swarm run from a "hidden browser"
[09:06:26] <rworth> gnarf: thanks
[09:06:42] <gnarf> https://gist.github.com/f7491a188a70437dce7b
[09:06:51] <gnarf> thats the current method i'm using to jump around all the focus bugs
[09:06:55] <gnarf> for testing
[09:07:21] <gnarf> but i don't think this is a good idea anymore, we should remove it from the agenda next week :)
[09:07:28] <gnarf> unless scott_gonzalez thinks there is still merit
[09:07:55] <scott_gonzalez> yeah, I think we can move the focus/blur logic into the simulate plugin and just use that
[09:08:08] <jzaefferer> okay, so no modding of testswarm?
[09:08:15] <scott_gonzalez> correct
[09:08:26] <kborchers> but like rworth was saying, won't this require that tests only be run on one browser per machine since you can't have more than one focused?
[09:08:35] <scott_gonzalez> but we should verify that it works in all of our test suites first
[09:08:47] <scott_gonzalez> kborchers: that was the original idea
[09:08:54] <scott_gonzalez> the new idea is to fake focus and blur
[09:09:03] <scott_gonzalez> which is what that gist does
[09:09:28] <scott_gonzalez> well, it actually forces it even if the browser doesn't want to do it
[09:09:30] <kborchers> oh, i guess i should have read that instead of typing my question :P
[09:10:20] <gnarf> i talked with dave for a little bit
[09:10:22] <scott_gonzalez> yeah, so I think we can get all of our tests passing even in inactive tabs
[09:10:23] <gnarf> about this
[09:10:34] <gnarf> to see what he thought we should do about it
[09:10:34] <scott_gonzalez> gnarf tested it on mask last night
[09:11:03] <gnarf> it cleared up a LOT of BS i was doing in focus that i didn't need to
[09:11:12] <gnarf> because i was trying to get it working in the units
[09:11:19] <gnarf> where it was failing in general
[09:11:36] <gnarf> new methods made some great improvements....
[09:11:49] <jzaefferer> if we can move stuff into simulate and out of the widgets..
[09:11:59] <jzaefferer> we should do that!
[09:12:02] <gnarf> jzaefferer: do we maintain simulate?
[09:12:10] <scott_gonzalez> gnarf: yes, it's our plugin
[09:12:11] <jzaefferer> sometimes
[09:12:24] <jzaefferer> well, yes
[09:12:34] <rworth> we've talked about removing its dependence on jQuery, and making it part of QUnit
[09:13:22] <gnarf> okay
[09:13:28] <gnarf> then yeah, I can start playing with it
[09:13:38] <gnarf> perhaps this code just becomes input.simulate("focus")
[09:13:50] <rworth> sounds good
[09:13:52] <jzaefferer> sounds good
[09:14:10] <scott_gonzalez> gnarf: I've actually wanted to try using the DOH Robot instead
[09:14:16] <jzaefferer> and the QUnit integration is a nice idea, but not happening unless someone starts leading that effort
[09:14:26] <rworth> I might think about it (again)
[09:14:27] <jzaefferer> I won't
[09:14:30] <scott_gonzalez> but I don't think it works in the background
[09:14:49] <gnarf> heh
[09:15:24] <gnarf> view.jqueryui.com - haven't heard any update from clarkbox yet - maybe mentioning him will cause a miraculous status update
[09:15:25] <gnarf> :)
[09:15:52] <jzaefferer> speaking of that
[09:15:53] <jzaefferer> http://view.jqueryui.com/grid/grid-spf/
[09:16:03] <jzaefferer> this shouldn't exist anymore: http://view.jqueryui.com/grid/grid-spf/dataview-nested.js
[09:16:13] <jzaefferer> was renamed to -preloader.js
[09:18:15] <jzaefferer> not that much a problem though
[09:18:37] <gnarf> jzaefferer: hrm, so there is dirt?
[09:18:52] <gnarf> its not deleting old stuff?
[09:19:26] <jzaefferer> it deleted stuff at some point, but doesn't seem to happen along with regular updates
[09:19:38] <jzaefferer> like grid.js doesn't exist anymore, or other grid-â€¦ folders
[09:19:58] <jzaefferer> nevermind, let's get tags fixed first
[09:20:05] <jzaefferer> any docs updates?
[09:20:16] <jzaefferer> or animation tests?
[09:20:21] <rworth> none from me
[09:20:27] <gnarf> no :(
[09:20:42] <jzaefferer> Dave_Stein: wanna share your status on draggable rewrite?
[09:21:04] <gnarf> sat too long on that one, scott_gonzalez im gonna pick your brain again to make sure we're still on the same page there
[09:21:42] <jzaefferer> yeah, its getting smelly :p
[09:22:11] <gnarf> Dave_Stein kborchers and I were chatting last night re: canceling events with draggable
[09:22:30] <gnarf> i wanted to try to get that covered in a meeting if possible
[09:23:06] <gnarf> http://wiki.jqueryui.com/w/page/12137878/Draggable has some info on events
[09:23:34] <gnarf> i was wondering if canceling a drag event should begin a "stop"
[09:23:45] <gnarf> and/or if we should provide a .draggable("stop") method
[09:23:58] <gnarf> that pretends like a mouseup occured and just drops the element wherever it is
[09:23:58] <jzaefferer> can you put that on the open issues list?
[09:24:00] <scott_gonzalez> canceling drag should not cause a stop
[09:24:08] <jzaefferer> or TODOs at the top
[09:24:28] <scott_gonzalez> it's not very user-friendly to stop someone in the middle of a drag
[09:24:40] <scott_gonzalez> do you have a use case for it?
[09:24:42] <gnarf> I was just imagining a use case of like an "auto-drop"
[09:24:52] <gnarf> drag some item over the box and it gets eaten
[09:24:58] <jzaefferer> what's the way to implement containment?
[09:24:59] <rworth> are we talking about cancelling a started drag and preventing a drag from continuing to start after an almost start?
[09:24:59] <scott_gonzalez> got an example where that happens?
[09:25:11] <jzaefferer> cancelling drag event, or rewriting position?
[09:25:18] <scott_gonzalez> jzaefferer: either
[09:25:18] <gnarf> scott_gonzalez: no
[09:25:30] <scott_gonzalez> jzaefferer: the best implementation is rewriting position
[09:25:33] * rworth meant "drag or preventing"
[09:25:39] * kborchers hides
[09:26:00] <scott_gonzalez> rworth: canceling a started drag
[09:26:00] <jzaefferer> so what's the use case for cancelling drag events?
[09:26:42] <rworth> I'm with scott_gonzalez, it's too late. Preventing a drop is one thing, but a started drag shouldn't stop until the user says so
[09:26:54] <scott_gonzalez> you can build containment with it, but it won't handle edge cases
[09:26:59] <gnarf> Dave_Stein: ping ;)
[09:27:01] <scott_gonzalez> like if you start and you're already outside of the containment
[09:28:39] <Dave_Stein> gnarf: hey
[09:28:45] <Dave_Stein> was helping coworker
[09:28:59] <Dave_Stein> reading now
[09:29:29] <gnarf> i think looking over the last bit of chat, the descriptions in the wiki are 100% accurate then...
[09:29:36] <Dave_Stein> he means, if we're dragging, user preents default, the dragging is on hold, stop isn't fire
[09:29:52] <Dave_Stein> shoudl we let the user decide if that gets fired via a public stop
[09:29:59] <Dave_Stein> we def don't want to automatically trigger stop in that situation
[09:30:29] <gnarf> i mean, im willing to say that I can't show a single use of an "auto-droppable"
[09:30:37] <gnarf> other than in my imaginiation
[09:30:46] <gnarf> so its prolly not worth adding it
[09:30:49] <Dave_Stein> kk
[09:31:14] <Dave_Stein> and scott, we want to change my cancelBubble check to defaultPrevented right?
[09:31:51] <Dave_Stein> scott_gonzalez: sorry i was afk
[09:32:10] <scott_gonzalez> cancelBubble? is that new?
[09:32:37] <gnarf> isPropagationStopped -> isDefaultPrevented
[09:33:00] <Dave_Stein> i was using e.stopPropagation() in my drag callback
[09:33:10] <Dave_Stein> and then in draggable i was looking to see if e.bubbleCanceled or whatever
[09:33:21] <gnarf> i would use the preventDefault()
[09:33:35] <scott_gonzalez> this is inside the plugin?
[09:33:39] <Dave_Stein> yeah
[09:33:50] <Dave_Stein> so gnarf suggested i switch to checking against preventDefault vaia isDefaultPrevented
[09:33:51] <scott_gonzalez> you shouldn't be checking anything directly inside the plugin
[09:33:54] <Dave_Stein> so that way user can return false
[09:33:59] <scott_gonzalez> you should just check if _trigger() returns false
[09:34:07] <Dave_Stein> ah ok
[09:34:16] <Dave_Stein> i was asying i wasn't sure of internals of trigger
[09:34:28] <Dave_Stein> how does that work if a user binds 3x and has 3 return values?
[09:34:36] <Dave_Stein> *i was saying last night
[09:34:59] <gnarf> scott_gonzalez: i thought that was a possibility, but you want event.preventDefault() to still prevent it right? is that the return of _trigger?
[09:35:41] <Dave_Stein> https://github.com/DaveStein/jquery-ui/blob/interactions/ui/jquery.ui.draggable.js#L190
[09:35:43] <Dave_Stein> for some context
[09:37:09] <scott_gonzalez> _trigger returns whether the default action was prevented
[09:37:27] <scott_gonzalez> it doesn't matter how many return values there are, if any of them are false, then the default is prevented
[09:37:28] <Dave_Stein> ahhh ok that's excellent
[09:37:57] <Dave_Stein> and then my todo
[09:38:03] <Dave_Stein> / TODO: should user be able to change position of draggable, if event stopped?
[09:38:05] <Dave_Stein> was curious
[09:38:13] <Dave_Stein> so if they returned false, should is till check to see if they altered position?
[09:38:49] <scott_gonzalez> that's a good question
[09:39:17] <Dave_Stein> i would imagine yes on start and stop, but not drag
[09:39:21] <scott_gonzalez> I'd say if they prevent default, then it shouldn't move at all
[09:39:50] <Dave_Stein> well actually just on stop. if the user stops dragging, didnt put it in a "good spot" and then the program just moves it back to a good one
[09:39:59] <Dave_Stein> so if i can drag my element from one box to another
[09:40:04] <Dave_Stein> i dont put it in Box B
[09:40:10] <Dave_Stein> oh wait i'd just bind to stop in that case
[09:40:41] <Dave_Stein> okay well my code is already setup like that soi'll be able to remove the TODOs the same time i check what trigger returned
[09:41:47] <Dave_Stein> i should be able to knock down the rest of the todos this weekend. so what do we think next steps are
[09:42:26] <rworth> so after our brief design convo about mouse/touch, what's the idea with draggable, as it doesn't currently build on existing or new mouse plugin
[09:42:48] <rworth> are we moving ahead and when the new one exists we'll swap under?
[09:43:09] <scott_gonzalez> rworth: yes
[09:43:10] <Dave_Stein> yeah that sounds good
[09:43:13] <rworth> cool
[09:43:17] <Dave_Stein> when new mouse is good i can swap out the shit
[09:43:27] <Dave_Stein> and that'd be a good time to find any kinks in mine/your code
[09:43:31] <scott_gonzalez> Dave_Stein: next step could be the iframe fix
[09:43:43] <scott_gonzalez> on start, we need to place a div over every iframe in the page
[09:43:49] <scott_gonzalez> so that they don't capture mouse events
[09:43:54] <scott_gonzalez> and we need to remove the divs on stop
[09:44:05] <Dave_Stein> that's 5 mins of work :)
[09:44:09] <scott_gonzalez> yeah
[09:44:22] <rworth> esp. thanks to position
[09:44:33] <gnarf> it would be easier with .box() ;)
[09:44:35] <Dave_Stein> are we re-implementing all existing options
[09:44:39] <Dave_Stein> or are we removing/changing any others
[09:44:43] <rworth> gnarf: all magic is
[09:44:44] <scott_gonzalez> Dave_Stein: no
[09:44:56] <scott_gonzalez> I think after iframe fix, we can start moving on to droppable :-)
[09:45:03] <Dave_Stein> sounds great then
[09:45:11] <Dave_Stein> ill knock back todos, do iframe fix
[09:45:30] <scott_gonzalez> gnarf and I can do another code review of draggable too once you finish those todos
[09:45:31] <rworth> are we going to do tests before moving on, or will those come later?
[09:45:45] <Dave_Stein> i'll need help, never used qunit before
[09:45:50] <gnarf> we should prolly write units before moving on
[09:45:52] <scott_gonzalez> they'll come a bit later
[09:45:56] <Dave_Stein> but then if i get started on that with draggable i'd be able to do droppable with em
[09:46:02] <rworth> a bit, but not too much (I hope)
[09:46:21] <scott_gonzalez> we should probably start working on the mouse/touch layer soon
[09:46:29] <scott_gonzalez> because we'll probably want to hook into that in the tests
[09:46:40] <Dave_Stein> who's in charge of that? rworth?
[09:46:41] <gnarf> yeah
[09:46:50] <rworth> I can be, I'm interested
[09:46:51] <scott_gonzalez> that's part of the reason I don't want to write tests yet
[09:46:58] <gnarf> makes sense
[09:47:02] <gnarf> tests will be changing
[09:47:19] <scott_gonzalez> we should schedule a design meeting
[09:47:36] <gnarf> did you guys ever hear my idea for .box() btw ? :)
[09:47:41] <Dave_Stein> well if you wanna take control of mouse/touch that'd be great. i just wanna be in the loop cause i'm curious
[09:47:55] <Dave_Stein> i don't have any mobile experience :/
[09:48:47] <Dave_Stein> man 3 of us just asked 3 questions and then we went all silent
[09:49:53] <Dave_Stein> #productivity :)
[09:50:03] <gnarf> heh
[09:50:06] <gnarf> welcome to a meeting ;)
[09:50:15] <rworth> does Thu or Fri work for a meeting?
[09:50:25] <rworth> I'd love to do it this week as I'm travelling all of next week
[09:50:26] <gnarf> for what rworth?
[09:50:32] <gnarf> the mouse stuff?
[09:50:33] <rworth> design meeting for mouse+touch
[09:50:34] <Dave_Stein> design meeting
[09:50:46] <Dave_Stein> i can do a fri night between work and play
[09:50:50] <gnarf> just lemme know when, i can prolly make it
[09:51:00] <rworth> Dave_Stein: what time zone are you in?
[09:51:03] <Dave_Stein> EST
[09:51:07] <Dave_Stein> youre central?
[09:51:34] <jzaefferer> Dave_Stein: can you take some of the existing demos and rebuild them on the new API? like containment and grid, using the drag event to rewrite position
[09:51:35] <rworth> gnarf is central, scott_gonzalez are eastern
[09:51:42] <jzaefferer> unless you've got that already
[09:51:57] * rworth meant scott_gonzalez and I
[09:51:59] <Dave_Stein> nah i don't
[09:52:16] <Dave_Stein> so on a friday im good like 630-8 i can figure out something
[09:52:35] <rworth> that's date night for me
[09:52:38] <Dave_Stein> jzaefferer: those are easy to tag on later... scott suggests we keep moving onto other elements before filling those in
[09:52:46] <scott_gonzalez> those demos should actually be written as extensions, I was going to work on those
[09:52:54] <Dave_Stein> i can do thursday 900+ i think
[09:53:13] <rworth> sorry, Dave_Stein: 9:00am?
[09:53:15] <Dave_Stein> oh i'm curious about the extension stuff on the plugins
[09:53:18] <Dave_Stein> no pm
[09:53:23] <rworth> oh, that works for me
[09:53:24] <jzaefferer> I'd like to have them as tests to verify that all options that worked on their own before can be replicated with the new API
[09:53:46] <rworth> scott_gonzalez gnarf Tomorrow (Thu) 9pm ET?
[09:53:58] <gnarf> i can be there
[09:54:03] <rworth> might even be able to get wycats at such a time
[09:54:11] <jzaefferer> is there and test or demo that rewrites position on drag right now?
[09:54:12] <wycats> ohai
[09:54:19] <gnarf> hey wycats
[09:54:22] <wycats> HI
[09:54:31] <Dave_Stein> yeah
[09:54:33] <Dave_Stein> on my home pc
[09:54:34] <scott_gonzalez> I should be able to do tomorrow 9pm
[09:54:36] <Dave_Stein> :/
[09:54:46] <rworth> wycats: we're gonna get together on our extending rewrite of the mouse (drag and drop) plugin to support touch, with a unified API
[09:54:50] <gnarf> 1700 EST :)
[09:55:03] <Dave_Stein> 2100 EST
[09:55:05] <rworth> wycats: any chance you can join us Thu at 6pm your time?
[09:55:09] <gnarf> doh
[09:55:12] <gnarf> brain is FRIED
[09:55:15] <gnarf> lol
[09:55:18] <jzaefferer> Dave_Stein: is there a test or demo that rewrites position on drag right now?
[09:55:19] <gnarf> too many timepickers!
[09:55:31] <wycats> rworth: seems plausible
[09:55:42] <kborchers> i am probably available then too so will probably jump in
[09:55:43] <rworth> scheduled
[09:55:59] <Dave_Stein> a demo
[09:56:05] <Dave_Stein> i was saying earlier i need to learn abuot qunit
[09:56:39] <jzaefferer> is that on your branch?
[09:56:55] <jzaefferer> can we pull over the interactions rewrite to jquery-ui, as for selectmenu and editable?
[09:57:01] <jzaefferer> I want a viewâ€¦ link
[09:57:04] <Dave_Stein> my interactions is on my fork
[09:57:19] <Dave_Stein>  my draggable is here: https://github.com/DaveStein/jquery-ui/blob/interactions/ui/jquery.ui.draggable.js
[09:57:21] <jzaefferer> Dave_Stein: we also have visual tests, that's what I was referring to
[09:57:25] <gnarf> i can push Dave_Stein/interactions to jquery/interactions
[09:57:29] <Dave_Stein> yeah isnt qunit that?
[09:57:41] <Dave_Stein> its inbrwoser automated testing? or am i wrong?
[09:57:45] <Dave_Stein> *inbrowser
[09:57:45] <jzaefferer> Dave_Stein: nope, thats unit test
[09:57:48] <jzaefferer> check tests folder
[09:57:53] <jzaefferer> unit/ and /visual
[09:57:55] <Dave_Stein> okay
[09:58:06] <jzaefferer> gnarf: you mean jquery/jquery-ui/tree/interactions?
[09:58:09] <gnarf> we have 3 min
[09:58:21] <Dave_Stein> ill look into tests this weekend
[09:58:35] <gnarf> jzaefferer: yeah, i was speaking in terms of repo owner/branch - both in the jquery-ui repo :)
[09:58:41] <jzaefferer> k
[09:58:45] <jzaefferer> let's do that
[09:59:00] <gnarf> then Dave_Stein can actually send pulls to that branch too
[09:59:06] <rworth> I sent an invite to all who said they could attend xcept I need an email address for Dave_Stein
[09:59:17] <jzaefferer> just give him write access
[09:59:20] <Dave_Stein> be.davestein@gmail.com is my skype
[09:59:22] <jzaefferer> works for selectmenu and stuff
[09:59:27] <Dave_Stein> and my git
[09:59:28] <gnarf> any quick news on selectmenu/tabs ?
[09:59:31] <Dave_Stein> dave@behance.com is my work
[09:59:56] <Dave_Stein> ah shit i havent gotten lunch and i have to interview someone in 30 mins
[10:00:00] <Dave_Stein> im gonna hop off
[10:00:07] <Dave_Stein> but tomorrow 9PM EST ill be around for sure
[10:00:16] <gnarf> jzaefferer: then just give him access to jquery/jquery-ui - Dave_Stein ping me about pushing your interactions to upstream
[10:00:41] <Dave_Stein> gnarf: will do when im home
[10:00:51] <Dave_Stein> off i go
[10:01:26] <gnarf> selectmenu / tabs?
[10:01:37] <gnarf> or... GRID!@@#?
[10:01:39] <rworth> out of time, time to start grid mtg
[10:01:41] <rworth> yup
[10:01:52] <rworth> though we'll wait a minute for brad
[10:02:04] <rworth> hey borismoore
[10:02:24] <borismoore> hey
[10:02:28] <brado23> hey
[10:03:03] <rworth> alright, welcome all, let's get started
[10:03:03] <jzaefferer> hey borismoore brado23
[10:03:27] <rworth> hope you all saw and retweeted, jzaefferer did an awesome blog update http://blog.jqueryui.com/2011/10/state-of-the-jquery-ui-grid/
[10:03:40] <rworth> thanks jzaefferer
[10:04:18] <brado23> nice!
[10:04:31] <rworth> as noted in there, we're going to be wrapping up some existing components and then start on stage 4
[10:04:55] <rworth> jzaefferer and I will also be doing some planning for some things that won't be done by then and we'll move them into stage 4 or later
[10:05:11] <rworth> might even scope in a 5th stage at this point, we'll see
[10:05:29] <rworth> jzaefferer: borismoore: template?
[10:06:11] <borismoore> On my side, I have been working on getting something closer to the jquery.tmpl scenario coverage
[10:06:34] <borismoore> Latest bits are not yet committed
[10:06:48] <borismoore> Some issues around 'chained tags'
[10:07:03] <borismoore> Lots of people struggling to port tmpl to jsrender
[10:07:24] <borismoore> things like {{if a===b)}}
[10:08:14] <borismoore> I have an approach which solves most scenarios but still does not fall back on eval'ing expressions in the template markup
[10:08:19] <jzaefferer> which is expected, after all, we want them to get rid of embedding javascript in templates, right?
[10:09:08] <borismoore> Yes that's what we wanted, but the scenarios are there, very common ones, which need to be addressed, _if possible_ without going back on that principle
[10:09:19] <borismoore> That's what I am trying to achieve
[10:09:45] <borismoore> Looks like it will work but with modified syntax for {{a {{b}} }}
[10:10:03] <jzaefferer> would be good to get involved in planning those approaches before they're implemented
[10:10:09] <borismoore> which anyway people found to be a 'steeper learning curve' than tmpl
[10:10:26] <borismoore> I'll give details once I have confirmed it can be achieved.
[10:10:34] <jzaefferer> okay
[10:10:48] <jzaefferer> I did some testing with jsrender, replacing jquery-tmpl within grid
[10:11:16] <jzaefferer> porting templates itself is trivial, as we don't have any expressions at all, not even an `if` or `for`
[10:11:42] <jzaefferer> I'll put together a proposal for the API and jQuery wrappers, hope to have that by end of week
[10:11:53] <rworth> great, thanks guys
[10:11:56] <rworth> Dataview?
[10:12:31] <gnarf> jzaefferer: great blog post btw
[10:12:40] <jzaefferer> I fixed some stuff while working on the blog post, pretty much what the agenda says
[10:12:57] <jzaefferer> initialzing a dataview with { sort: "column" } is now working properly
[10:13:16] <jzaefferer> thanks gnarf
[10:13:41] <borismoore2> lost my connection
[10:13:50] <borismoore2> back on new alias
[10:14:10] <borismoore2> Joern, didn't get your last stuff
[10:14:43] <borismoore2> Last I saw was :  I did some testing with jsrender, replacing jquery-tmpl within grid
[10:15:08] <brado23> back now...IRC had gone down
[10:15:52] <borismoore2> joern are you there?
[10:15:58] <jzaefferer> I did some testing with jsrender, replacing jquery-tmpl within grid
[10:15:58] <jzaefferer> porting templates itself is trivial, as we don't have any expressions at all, not even an `if` or `for`
[10:15:58] <jzaefferer> I'll put together a proposal for the API and jQuery wrappers, hope to have that by end of week
[10:16:09] <borismoore2> ok cool
[10:16:10] <jzaefferer> as for dataview, I fixed some stuff while working on the blog post, pretty much what the agenda says, initialzing a dataview with { sort: "column" } is now working properly
[10:16:39] <gnarf> http://services.jquery.com/%23jquery-meeting_20111026.log.html
[10:16:45] <borismoore2> btw I am hoping for some perf improvements on compiling and rendering richer templates, in the upcoming version
[10:16:56] <gnarf> although that seems a few minutes out of date :)
[10:17:07] <rworth> Observable then?
[10:18:27] <jzaefferer> brado23: any updates on the todo-app?
[10:18:30] <brado23> I sent email about "observer".  It's raw at this point.  I just pushed what I had at EOD yesterday.  Happy to discuss...but it'd probably be more worthwhile in a few days.
[10:19:17] <brado23> I've been able to replace the custom binding logic in the TODO app itself.  I'm working on similarly fixing Grid to remove the manual, dynamic event binding.
[10:20:01] <brado23> If folks want a preview...it's probably best to look at the diff of the todo-app.html file...let me send a github link.
[10:21:16] <brado23> https://github.com/brado23/jquery-ui/blob/gh-pages/grid-editing/todo-app.html
[10:22:16] <brado23> If you look at line 47, you'll see where this is going.
[10:22:57] <brado23> The "observer" receives all editing events in its single "change" handler.
[10:23:20] <brado23> "observer" itself is a proxy that I pass into a modified $.tmpl.
[10:23:21] <gnarf> hrm
[10:24:18] <gnarf> the array mutations handle binding inside $.observer i imagine?
[10:24:30] <brado23> $.tmpl will exercise the "observer" proxy...the editing events that bubble are only from the data observed by $.tmpl.
[10:24:55] <brado23> yes, that's right.
[10:25:07] <gnarf> seems useful
[10:25:08] <jzaefferer> what's the $.tmpl modification?
[10:25:25] <brado23> it's only to use observer.getAt instead of []
[10:25:48] <brado23> I don't know if it's viable to make observer a true transparent proxy over your data.
[10:26:01] <brado23> (that is, have observer implement [])
[10:26:17] <gnarf> hrm
[10:26:26] <gnarf> so jQuery has ".get()" for accessing an array elem
[10:26:30] <borismoore2> One concern about abstracting getters is that it puts and 'observable' dependency on tmpl/jsrender, even for r/o scenarios
[10:27:10] <gnarf> and ".get()" also can return the whole array for passing
[10:27:25] <brado23> yes, that's right.  rworth 's take on this is that it's an _optional_ dependency.
[10:27:49] <borismoore2> My philosophy up to now was that observable is only for binding and setting, and jsrender without observable or jsviews work with nothing, not even jquery
[10:28:00] <jzaefferer> brado23: can we do a skype walkthrough tomorrow?
[10:28:13] <brado23> jzaefferer : sure
[10:28:18] <rworth> that would be great
[10:29:08] <brado23> I can do 9am or 11am PST tomorrow (that's an hour before or and hour after today's time)
[10:30:01] <jzaefferer> 9am would be good for me
[10:30:02] <gnarf> i can be around for either
[10:30:09] <brado23> 9am then?
[10:30:30] <borismoore2> I can do either, with preference for 10 :)
[10:30:38] <gnarf> noon EST
[10:30:41] <borismoore2> ok 9 - for joern
[10:30:47] <borismoore2> didn't see that
[10:31:01] <brado23> rworth ?
[10:31:03] <rworth> ok, so 1 hour earlier than today's mtg?
[10:31:10] <brado23> yes, that's right
[10:31:11] <jzaefferer> yeah, pretty much
[10:31:15] <rworth> worksforme
[10:31:26] <jzaefferer> might have the template api proposal by then
[10:31:42] <rworth> that would be great
[10:31:45] <rworth> let's plan on 1hr then
[10:31:51] <brado23> k
[10:32:05] <rworth> gnarf: any custom inputs update?
[10:32:10] <rworth> or jzaefferer?
[10:32:19] <gnarf> yeah, timepicker click focus is way hotter now
[10:32:20] <jzaefferer> nope
[10:32:31] <gnarf> :)
[10:32:40] <gnarf> like if you click on minutes, it starts on minutes
[10:32:40] <brado23> ...guys, I'm sorry, but I have a hard stop at 2 minutes ago.  I'll see you tomorrow.
[10:32:51] <gnarf> cya brado23
[10:32:54] <jzaefferer> see you brado23
[10:33:03] <borismoore2> on another subject, there has been some noise/confusion/concern around the roadmap/tmpl
[10:33:07] <rworth> gnarf: don't know if you saw the shift+arrow issue I added to wiki page?
[10:33:13] <borismoore2> maybe we should talk about that some time
[10:33:40] <gnarf> rworth: you want to not allow shift+selection?
[10:33:41] <jzaefferer> borismoore2: we should
[10:33:54] <rworth> I want to allow it, it isn't currently working
[10:34:15] <borismoore2> Things like this comment : I am very disappointed to hear about the decision to drop jquery tmpl, which seems to be a part of some political fallout between MS and the jQuery team.
[10:34:35] <gnarf> rworth: its possible, i'll look into it
[10:34:40] <rworth> gnarf: thanks
[10:34:56] <borismoore2> and "still think there should be a link on the current templates docs, rather than just "this is now dead", even if alpha"
[10:35:17] <rworth> was some docs link taken down?
[10:35:55] <borismoore2> no, there is a comment that templates are dead, but no link to a roadmap or similar
[10:36:26] <borismoore2> similarly on the githup repo
[10:36:44] <rworth> as to the first comment, it's a delicate situation, unfortunate even. While I don't share the commenter's take, I'm not sure how to handle it better than the blog post we carefully authored
[10:37:09] <borismoore2> you mean the one some time back on official plugins
[10:37:21] <rworth> yes
[10:37:48] <jzaefferer> borismoore2: that post should be the first to point to
[10:37:54] <jzaefferer> along with "its not political"
[10:38:30] <borismoore2> Folks are getting the message to drop template NOW! - but there is no recent info on what they might to do replace it.  My blog tries to address that, but is not pointed to, of course.
[10:38:38] <borismoore2> http://www.borismoore.com/2011/10/jquery-templates-and-jsviews-roadmap.html
[10:38:43] <rworth> when I say "we carefully authored" I'm not just talking about our team, we worked together with Microsoft to coordinate on that message
[10:38:58] <rworth> because of the impact and potential for confusion
[10:39:03] <jzaefferer> can we get a link in our post to Boris' post?
[10:39:28] <borismoore2> yes but it does not tell people why now there is a new message that "you should no longer use tmpl"
[10:39:43] <borismoore2> they have been happily using tmpl for months since that blog
[10:39:59] <borismoore2>  which said that jQuery UI would take over tmpl,\
[10:40:10] <borismoore2> not that it would be 'killed'
[10:40:18] <rworth> that blog post did NOT say jQuery UI would take over tmpl
[10:40:40] <borismoore2> that they owned it, right
[10:40:55] <borismoore2> nothing to say that they would maintain it.
[10:41:09] <borismoore2> But that was what people thought, I think
[10:41:25] <borismoore2> now it is being said they will not maintain it
[10:41:25] <rworth> if that's what you think it said, you did not read it carefully
[10:41:32] <borismoore2> which is new
[10:41:35] <rworth> if that's what anyone thinks, they did not read it carefully
[10:41:40] <borismoore2> can you clarify for me?
[10:41:45] <rworth> sure
[10:42:43] <rworth> "The jQuery UI team plans to begin work a new on templating and globalization, starting with the normal process for UI plugins: Collaborative development on a spec. While some may perceive this as a setback, given existing progress on the current jquery-tmpl plugin, it is really an opportunity for us to work in tandem with the community â€” Microsoft included â€” to develop an implementation that will be effective and flexi
[10:43:10] <rworth> there is no way to read that paragraph and assume that the jQuery UI team will develop or support or maintain or continue anything on jquery-tmpl
[10:43:35] <borismoore2> Well they read the first bit
[10:43:35] <borismoore2> The jQuery UI project will take ownership over plugins on which it has a current or future dependency: Templating, Globalization, and bgiframe.
[10:43:38] <rworth> that blog post nor that paragraph are sufficient to make that clear, hence the more recent updates on the -tmpl README and GitHub page to make that clear
[10:44:02] <rworth> right, that means a templating plugin, not jquery-tmpl
[10:44:14] <borismoore2> Anyway, I am only reporting feedback. See the last comment on my post - and others higher up
[10:44:47] <rworth> if you feel it would be helpful, I'm happy to add a comment on your post, after I've read all the comments
[10:44:54] <rworth> I thought your post was great, btw
[10:45:03] <rworth> haven't had a chance to tell you yet, but saw it when it came out
[10:45:09] <borismoore2> ok, sounds good
[10:45:22] <rworth> thanks
[10:45:31] <borismoore2> Can we link to it, from tmpl and from the doc site?
[10:45:40] <borismoore2> If we think it is reasonable clear and accurate
[10:45:53] <rworth> sounds fine
[10:46:07] <borismoore2> I think that would already help
[10:46:07] <rworth> well, hmm
[10:46:10] <rworth> let me back up a bit
[10:47:04] <rworth> ok, just had to quick re-read, yeah looks good for a link
[10:47:28] <borismoore2> You can add comment(s) too, to help get the right message across
[10:47:35] <rworth> good idea
[10:47:39] <borismoore2> I am getting 800 hits per day on that
[10:47:46] <borismoore2> so there is a lot of interest
[10:48:42] <borismoore2> ok, thx, I like that plan
[10:49:23] <borismoore2> BTW search twitter for jsviews, tmpl, jsrender etc. to get some sense of what folks are thinking/feeling
[10:51:55] <gnarf> we done?
[10:52:05] <rworth> yup
[10:52:14] <borismoore2> ok, thx all
[10:52:17] <gnarf> see you in -dev
