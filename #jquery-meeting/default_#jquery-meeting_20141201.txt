[09:01:02] <DaveMethvin> hay de ho everyone .... anyone?
[09:01:21] <DaveMethvin> mgol and markelog are out today
[09:01:56] <gibson042> heyo
[09:02:56] <DaveMethvin> hey gibson042
[09:03:01] <DaveMethvin> timmywil you here?
[09:03:07] <timmywil> si
[09:03:18] <DaveMethvin> how were your thanksgivings
[09:03:24] <timmywil> wonderful
[09:03:27] <DaveMethvin> i still feel full
[09:03:49] <DaveMethvin> leftovers don't bother me either, i could eat turkey and cranberry every day of the year
[09:03:58] <m_gol> (I'm here but only partially today, ping me if sth important comes up)
[09:04:05] <timmywil> quick question: do you guys keep getting emails about reviewing a jQuery book?
[09:04:09] <gibson042> a fried had her baby at my house after we swapped dinner locations when they lost power
[09:04:10] <DaveMethvin> ok thanks m_gol
[09:04:12] <gibson042> *friend
[09:04:15] <m_gol> timmywil: yes
[09:04:23] <DaveMethvin> wat!
[09:04:24] <b-ot> DaveMethvin: Keep in mind lot of sites that have HTML5 use it only on specific user-agents, they can't detect that you have Flash disbaled
[09:04:38] <m_gol> I haven't replied to them
[09:04:42] <m_gol> but already got 3 emails
[09:04:43] <DaveMethvin> gibson042: you mean that someone had a baby born at their house?
[09:04:46] <DaveMethvin> your
[09:04:48] <m_gol> so it seems I have to
[09:04:49] <gibson042> yes
[09:04:54] <DaveMethvin> whoa
[09:04:54] <timmywil> gibson042: wow
[09:04:58] <gibson042> it was nuts
[09:05:08] <timmywil> grats!
[09:05:09] <m_gol> gibson042: you'll remember that one for sure :D
[09:05:37] <timmywil> DaveMethvin: any suggestions on whether we should review this book? did you get the email too?
[09:05:47] <DaveMethvin> i may have turned them down a while back
[09:05:53] <DaveMethvin> is this a Pakt book?
[09:05:55] <timmywil> yea
[09:06:10] <DaveMethvin> sometimes the quality can be bad
[09:06:23] <timmywil> yea, that's what I'm afriad of. I don't my name on something bad.
[09:06:24] <DaveMethvin> and then if you give honest feedback you end up nursing the author up to speed
[09:06:33] <timmywil> *want
[09:06:49] <DaveMethvin> so like, if it turns out being bad you could offer to do work on it if you get coauthorship
[09:07:05] <timmywil> that sounds like work I don't have time for
[09:07:05] <DaveMethvin> but that would mean you get some of the money too!
[09:07:11] <DaveMethvin> yeah
[09:07:21] <DaveMethvin> writing the code is hard enough
[09:07:29] <timmywil> also, I'd like to publish something myself
[09:07:36] <timmywil> maybe not on jQuery
[09:07:40] <timmywil> but something
[09:07:50] <DaveMethvin> on web dev perhaps
[09:07:54] <timmywil> yea
[09:08:13] <DaveMethvin> it's like grave digger but smells worse
[09:08:38] <timmywil> also, are there legal restrictions when it comes to including our experience with jQuery in a book?
[09:08:56] <DaveMethvin> none that i could think of
[09:09:28] <timmywil> ok
[09:09:47] <timmywil> anyway, we can meet now. thanks
[09:10:00] <DaveMethvin> so we have a pretty easy fix for https://github.com/jquery/jquery/issues/1874 right?
[09:10:07] <DaveMethvin> just name the handler and use the name?
[09:10:13] <timmywil> yea, the fix is easy, the test not so much
[09:10:23] <DaveMethvin> right
[09:10:32] <DaveMethvin> well you could punt on the test honestly
[09:10:48] <DaveMethvin> leaks are really difficult to unit test
[09:10:53] <timmywil> O.o do I have permission?
[09:11:09] <DaveMethvin> as long as gibson042 doesn't sneer at us :)
[09:11:18] <gibson042> it's all good :)
[09:11:25] <DaveMethvin> it's easier than childbirth i guess
[09:11:28] <timmywil> ok, here goes
[09:12:38] <DaveMethvin> Let's attack the separate repos for bower/npm closer to the release date
[09:12:51] <DaveMethvin> this junk makes me a bit sick to my stomach
[09:13:05] <DaveMethvin> https://github.com/jquery/jquery/issues/1869
[09:13:35] <DaveMethvin> still seems really ugly to need to do this but keeping it in our dev repo seems worse
[09:14:48] <DaveMethvin> gibson042: thanks
[09:15:35] <DaveMethvin> all good questions on https://github.com/jquery/jquery/pull/1821
[09:15:43] <DaveMethvin> i do think we undeprecate pipe
[09:15:45] <gibson042> for https://github.com/jquery/jquery/pull/1821 ? I deserve condemnation for taking so long, not praise
[09:16:06] <DaveMethvin> i come here not to condemn gibson042, but to praise him
[09:16:29] <gibson042> anyway, I think the three bullet points cover my concerns
[09:16:44] <DaveMethvin> yeah, i dunno about the extensions
[09:16:57] <DaveMethvin> i guess the promise/a+ tests don't check for `this` being set?
[09:17:00] <gibson042> if we do undeprecate pipe (or even if we don't), for how long do we hold on to two models?
[09:17:11] <gibson042> they do check
[09:17:18] <DaveMethvin> i think it's likely we'd need them forever
[09:17:30] <DaveMethvin> but we might have custom builds etc
[09:17:46] <gibson042> ugh
[09:17:52] <DaveMethvin> i think it's good enough to have a p/a+ .then
[09:18:02] <DaveMethvin> and see where the community goes
[09:18:28] <gibson042> as in, abandoning multi-resolution etc.?
[09:18:50] <DaveMethvin> i sure wish we knew what people were doing with it
[09:19:06] <timmywil> hmm, I just tried removing the function wrapper from setDocument and got Permission Denied in IE10
[09:19:07] <gibson042> there was that ticket filed a little bit ago
[09:19:24] <DaveMethvin> ugh
[09:19:31] <gibson042> https://github.com/jquery/jquery/issues/1839
[09:19:46] <timmywil> I'll try saving the anonymous function outside setDocument
[09:19:58] <DaveMethvin> right and on that one i think .then() shouldn't expect the special context handling
[09:20:00] <gibson042> which is kind of stupid anyway, since we apparently *preserve* context from promise to promise in a chain right now
[09:20:31] <DaveMethvin> it makes me very happy that p/a+ doesn't need context :)
[09:21:15] <DaveMethvin> i would be fine with keeping the current context behavior, the use case in that ticket is kind of shaky
[09:21:23] <timmywil> that works
[09:21:25] <DaveMethvin> basically he wants to return garbage and have it be ignored
[09:21:41] <gibson042> I think it's a bug that context is not overwritten for each callback
[09:21:57] <DaveMethvin> it seems that way to me as well
[09:22:13] <DaveMethvin> but i wonder if it's worth changing
[09:22:31] <gibson042> I think that's dependent upon Promises/A+ compatibility
[09:22:57] <DaveMethvin> that is, our Deferred impl behavior shoudl stay as constant as it can, and the .then() should be as P/A+ as it can
[09:23:08] <gibson042> right'
[09:23:11] <DaveMethvin> and at this point Deferred behavior should not be enhanced or changed
[09:23:17] <DaveMethvin> since it's basically deprecated
[09:23:24] <gibson042> either move all the old stuff into pipe like #1821, or make only those changes necessary to pass the suite
[09:23:31] <DaveMethvin> yeah
[09:23:41] <DaveMethvin> lemme type some of this :)
[09:25:15] <gibson042> and in either case, decide on what to do with functionality not in the spec
[09:26:46] <DaveMethvin> so anybody have thoughts on https://github.com/jquery/jquery/issues/1867
[09:26:59] <DaveMethvin> it turns out .detail is used on mouse events in general
[09:27:07] <DaveMethvin> so i'm now inclined to just put it in the list
[09:28:02] <DaveMethvin> and re https://github.com/jquery/jquery/issues/1855
[09:28:34] <DaveMethvin> maybe we shoudl just use gBCR always? it might be a bit slower but solve several tickets
[09:29:35] <gibson042> detail seems at least as reasonable as what's already in mouseHooks
[09:29:57] <DaveMethvin> yeah
[09:30:15] <DaveMethvin> i'll do that one
[09:32:16] <DaveMethvin> gibson042: you want to reply to domenic? dunno if he's been following along
[09:32:22] <gibson042> typing it now
[09:34:55] <gibson042> what is affected by https://github.com/jquery/jquery/issues/1855 ?
[09:36:30] <m_gol> FYI to all: I plan finish my PR dropping older browsers (and a few other related PRs) this week, I've just had (& have) very limited time until tomorrow
[09:36:57] <DaveMethvin> oh and good luck on your thesis defense m_gol !!!!
[09:37:04] <m_gol> thx :)
[09:38:03] <DaveMethvin> gibson042: that issue with offsetWidth/Height being wrong for some elements is one, but i though gBCR may also give correct results for transformed coordinates
[09:38:09] <DaveMethvin> not sure tho
[09:39:19] <gibson042> mmm
[09:40:58] <DaveMethvin> so does the spec (P/A+ or ES6) *proscribe* the use of multiple args?
[09:41:44] <DaveMethvin> we document the hell out of the 3-arg ajax and it's gonna be really confusing if it gets chopped off
[09:41:59] <DaveMethvin> "we" being the entire world for the last 4 years
[09:42:50] <gibson042> not as such, at least by my reading
[09:44:30] <DaveMethvin> it seems like the major compat complaint in the past has been that errors are not being caught
[09:44:39] <DaveMethvin> and the sync resolution
[09:44:54] <DaveMethvin> also that the Deferred gets "wedged" when there is an error
[09:45:02] <DaveMethvin> but that can be fixed now that there is try/finally
[09:45:05] <DaveMethvin> without a catch
[09:45:11] <DaveMethvin> since we're dropping IE7 support
[09:45:52] <DaveMethvin> but i guess that gets fixed with .then() anyway, duh
[09:46:46] <gibson042> that's basically the third point, that `.then` should work even when `.done` is busted
[09:48:01] <gibson042> ES6 draft does not technically prohibit 3-arg then: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise.prototype.then
[09:48:07] <m_gol> btw, I've recently discovered Chrome dumps the trace when rethrowing errors
[09:48:19] <m_gol> quite surprising, I thought it's just older browsers
[09:48:45] <gibson042> or multi-value fullfill/reject: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-fulfillpromise , https://people.mozilla.org/~jorendorff/es6-draft.html#sec-rejectpromise
[09:48:50] <m_gol> Safari does the right thing, I think Firefox as well
[09:49:39] <DaveMethvin> i guess the main thing is that if you use the standards-based subset of .then() it should act right
[09:50:07] <m_gol> http://crbug.com/435574
[09:50:17] <DaveMethvin> we could limit it to that subset but it probably requires more code and firewalling, plus it makes more old code break
[09:50:33] <gibson042> yeah
[09:50:38] <DaveMethvin> yeah, losing a stack trace is a bitch
[09:51:06] <DaveMethvin> and i don't want US to have to piece one together for them! :)
[09:51:19] <DaveMethvin> esp since stack traces aren't standard
[09:51:48] <DaveMethvin> okay, time is rapidly running out here
[09:52:03] <DaveMethvin> any specific issues we need to discuss more?
[09:53:06] <gibson042> not for discussion just yet, but I think Sizzle-free builds can be made practical
[09:53:54] <gibson042> probably not the default for 3.0 because we lose custom filters, but it saves about 5k
[09:54:02] <DaveMethvin> wow
[09:55:07] <DaveMethvin> ok, i have to run
[09:55:41] <DaveMethvin> let's keep things going!
