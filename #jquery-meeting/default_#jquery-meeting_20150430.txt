[08:58:31] <snover> aosdihad
[08:58:37] <snover> i’m going to be a minute late
[09:01:55] <scott_gonzalez> `pepteam
[09:01:55] <b-ot> scott_gonzalez: arschmitz asir jperrault jrossi2 scott_gonzalez snover
[09:02:04] <arschmitz> Hi
[09:03:41] <scott_gonzalez> We actually have stuff to discuss today :-)
[09:03:49] <scott_gonzalez> snover: Let us know when you're around.
[09:04:13] <scott_gonzalez> I implemented the style guide based on last week's discussion.
[09:04:14] <scott_gonzalez> https://github.com/jquery/PEP/pull/185
[09:04:30] <scott_gonzalez> Using JSCS and JSHint for linting and JSCS for automated whitespace fixes.
[09:04:52] <scott_gonzalez> But there's apparently more whitespace changes that snover wants: https://github.com/jquery/PEP/pull/185#discussion_r29373592
[09:05:28] <scott_gonzalez> Yesterday, he said: "object/array literals vs accessors, the whitespace for literals is actually partially to visually differentiate them from accessors. contrived example, foo[[ a ][0]]"
[09:07:30] <scott_gonzalez> That seems a little odd to me. What do others think?
[09:07:49] <arschmitz> i think thats crazy
[09:08:11] <snover> me me me
[09:08:13] <arschmitz> i think that will be no end of confusion forcontributors
[09:08:49] <snover> you think it’s confusing to not put whitespace in property accessors?
[09:09:16] <arschmitz> i think we should have whitespace inside brackets
[09:09:20] <arschmitz> all brackets
[09:09:21] <scott_gonzalez> To handle literals differently than accessors.
[09:09:40] <arschmitz> i dont think literals should be different then accessors
[09:11:56] <snover> if you think about the code as code instead of as tokens then i’m not sure why it would be confusing. you put whitespace in object literals, you put whitespace in array literals. you don’t put whitespace around dot property, you don’t put whitespace around array property. one is a Literal, one is a MemberExpression
[09:11:59] <snover> but whatever
[09:12:31] <snover> it’s all just supposed to make it easier to read and understand what is going on
[09:12:44] <snover> so if nobody thinks that it helps readability then i don’t care
[09:14:18] <arschmitz> i think its unnessasarry complication
[09:15:38] <scott_gonzalez> I understand the logic behind it.
[09:15:55] <scott_gonzalez> I just expect contributors will get that wrong.
[09:16:02] <arschmitz> me too
[09:16:05] <arthurvr> exactly ^
[09:16:09] <snover> a[b] is more common than a[ b ]
[09:16:13] <arschmitz> im not confused by it i just think it will be hard for contributors
[09:16:20] <scott_gonzalez> Though I suppose snover actually has a lot of experience with this style and contributors.
[09:16:26] <snover> so if you want to just normalise it all then don’t have whitespace in either place
[09:16:36] <snover> which i think is how pep was already written
[09:16:57] <arschmitz> so switch jquery execpt no spaces inside baracket
[09:17:03] <arschmitz> to no spaces inside brackets or parens"
[09:17:04] <arschmitz> ?
[09:17:13] <arschmitz> i got that backward
[09:17:28] <snover> it’s really all just a question about what colour to paint the bike shed
[09:17:35] <snover> so i’d prefer to not belabour the point
[09:19:30] <scott_gonzalez> I'm talking to markelog about this right now.
[09:19:53] <snover> there was another issue to discuss too right? the pointerid thing?
[09:20:11] <scott_gonzalez> Apparently we can enforce snover's rule with JSCS.
[09:20:24] <scott_gonzalez> And jscs:fix should handle it since it's just whitespace.
[09:20:34] <scott_gonzalez> `grunt jscs:fix`, I mean
[09:21:21] <scott_gonzalez> Ok, well, let's come back to that and just finalize something.
[09:21:25] <arschmitz> i still would brefer either always space or always no space inside brackets
[09:21:26] <scott_gonzalez> I don't really care which we choose.
[09:21:53] <scott_gonzalez> snover: Ok with just no space for brackets?
[09:22:02] <snover> sure
[09:22:07] <scott_gonzalez> Ok, I'll update that.
[09:22:33] <scott_gonzalez> I started the functional testing against the W3C test suite: https://github.com/jquery/PEP/pull/184
[09:22:42] <snover> sweet
[09:22:50] <scott_gonzalez> I implemented two tests to show how it works.
[09:22:53] <snover> glad to see it is working
[09:22:56] <scott_gonzalez> One where it passes and one where it fails.
[09:23:39] <scott_gonzalez> Can we pull this into a separate method? https://github.com/scottgonzalez/PEP/commit/ad96576143e134bd49d5f84914793d180f197118#diff-8e1cad246b742866cf380a82aaf4fcf7R15
[09:24:01] <scott_gonzalez> I'd prefer to have a constant timeout duration and reduce the number of dependencies in the boilerplate.
[09:24:13] <snover> sure
[09:24:24] <scott_gonzalez> I think you saw my first attempt with the promises which didn't work.
[09:25:02] <snover> getResults: function () { return pollUntil(function () { return window.w3cTests; }, 1000)(); }
[09:25:03] <scott_gonzalez> Has anyone had a chance to look over the implementation?
[09:25:50] <snover> or maybe it needs to be `getResults: function () { return pollUntil(function () { return window.w3cTests; }, 1000).call(this); }`
[09:26:08] <scott_gonzalez> I thought about that, but didn't think it was going to work because of the problems I had before.
[09:26:34] <scott_gonzalez> But I guess that was only because I was trying to use the promises inside the page, and this implementation doens't have that problem.
[09:26:58] <scott_gonzalez> Oh, it's because I'd be using .then() and not .execute().
[09:27:00] <snover> you should be able to eliminate the change to testharnessreport.js by injecting that after you load the page
[09:27:25] <snover> .get('page.html').execute(function () { add_completion_callback(function (tests) { window.w3cTests = tests; }) })
[09:27:48] <scott_gonzalez> ok
[09:27:56] <scott_gonzalez> What about injecting PEP?
[09:28:11] <scott_gonzalez> Just execute the document.write()?
[09:28:39] <snover> no, that would nuke the page
[09:29:16] <snover> executeAsync(function (done) { var script = document.createElement('script'); script.src = '/dist/pep.js'; script.onload = done; })
[09:29:26] <snover> uh, appendChild too probably :)
[09:30:05] <scott_gonzalez> Ok, so with all of that, I can probably simplify the boilerplate with a custom Page object too, right?
[09:30:10] <snover> yes, i was just about to say that
[09:31:42] <scott_gonzalez> Something like `new W3cPage(this.remote, url)`?
[09:32:01] <snover> i was thinking like return w3cTest(this.remote).load('file.html').commands().etc().etc().checkResults(); would probably be pretty decent
[09:32:01] <scott_gonzalez> I'm pretty sure the example is missing the part where the page is actually loaded.
[09:32:11] <scott_gonzalez> ok
[09:32:20] <scott_gonzalez> https://theintern.github.io/intern/#page-objects
[09:32:20] <snover> i guess you can combine the first two calls into one call
[09:32:51] <snover> technically this isn’t really a page object since you do want to be doing a bunch of low-level stuff
[09:33:31] <snover> the key is just that all the initialisation and finalisation stuff is neatly abstracted so you don’t have extra boilerplate
[09:33:46] <snover> whatever interface makes you feel happiest to get to that point is fine
[09:34:13] <scott_gonzalez> Ok, I'll ping you about how that API actually works after the meeting.
[09:34:28] <scott_gonzalez> Because I'm not sure how .commands().etc() works if it's not a Page object.
[09:34:58] <scott_gonzalez> So, last item on the agenda.
[09:35:15] <scott_gonzalez> Someone filed an issue about using a random pointerId for mouse events.
[09:35:16] <scott_gonzalez> https://github.com/jquery/PEP/issues/186
[09:35:24] <scott_gonzalez> jrossi1: Is this changing in Spartan?
[09:35:34] <scott_gonzalez> Or are you still staying with a value of 1?
[09:35:46] <scott_gonzalez> The spec no longer requires it, but it doesn't forbid it.
[09:36:12] <scott_gonzalez> I figure if it ain't broke, don't fix it.
[09:36:27] <snover> just use NaN :)
[09:36:30] <scott_gonzalez> haha
[09:41:26] <scott_gonzalez> Anyone?
[09:43:37] <jrossi1> scott_gonzalez: no plans to change
[09:43:57] <scott_gonzalez> So any objection to leaving the current implementation and closing the issue?
[09:44:02] <jrossi1> I'd highly recommend PEP use 1...  unfortunately, i bet code exists that expects that :-(
[09:44:08] <scott_gonzalez> We'll just remove the comment about the spec requiring it.
[09:44:17] <jrossi1> (sorry I'm slow to respond... at the BUILD conf right now)
[09:45:04] <scott_gonzalez> Anyone have anything else to discuss?
[09:45:11] <snover> jrossi1: waiting for my hololens to arrive in the mail, ahem ahem
[09:45:51] <snover> i have no other thing to say. :)
[09:47:01] <scott_gonzalez> Ok, thanks everyone.
[09:47:08] <snover> thanks!
[11:02:38] <arschmitz> `mobileteam
[11:02:38] <b-ot> arschmitz: agcolom, arschmitz, arthurvr, cgack, gabriel_schulhof, ianmaffett, jasperdegroot, sfrisk
[11:02:43] <arschmitz> Meeting time!
[11:03:00] <jasperdegroot> hello
[11:03:52] <agcolom> hello
[11:04:06] <cgack> howdy
[11:04:13] <gabriel_schulhof> Hey!
[11:05:39] <arschmitz> https://docs.google.com/spreadsheets/d/1xGEVtftLDEHAA37YYlA23J_EZwIRyMUaseBY790byPM/edit#gid=463017647
[11:05:40] <arschmitz> agends
[11:05:42] <arschmitz> agenda
[11:06:17] <arschmitz> ok lets start with some things happening in UI
[11:06:21] <arschmitz> that will effect us
[11:06:55] <arschmitz> last week we talked about getFormParent and getLabels methods
[11:07:00] <arschmitz> this have changed a bit
[11:07:11] <arschmitz> they will now be $.fn.form and $.fn.labels
[11:07:29] <arschmitz> and they mimic the native .form and .labels props
[11:07:55] <gabriel_schulhof> Very nice API!
[11:07:58] <arschmitz> in addition there will now be $.ui.escapeSelector
[11:08:10] <gabriel_schulhof> Yaaaa
[11:08:18] <gabriel_schulhof> y!
[11:08:33] <gabriel_schulhof> Looks like I'm getting most of my pet features :)
[11:08:34] <arschmitz> scott_gonzalez: is also adding a form reset extension in ui
[11:08:45] <gabriel_schulhof> Hut dawg!
[11:08:55] <cgack> exciting
[11:09:04] <arschmitz> these are all things that were being done a variety of different ways
[11:09:12] <arschmitz> and i think every one of them was wrong in some case
[11:09:31] <gabriel_schulhof> It'll be good to fix whatever bugs we find in exactly /one/ place.
[11:10:01] <gabriel_schulhof> What's that called? DRY? Right?
[11:10:06] <arschmitz> gabriel_schulhof: yup for example we are doing all of those things wrong execpt the escape
[11:10:17] <arschmitz> currently in mobile
[11:10:43] <gabriel_schulhof> Nice to know I got one of them right :)
[11:11:02] <gabriel_schulhof> ... and it's a one-liner :)
[11:11:07] <arschmitz> gabriel_schulhof: lol
[11:11:17] <arschmitz> form will not be public api though
[11:11:32] <arschmitz> it will only probably exist until the end of the year when we stop supporting IE8
[11:11:39] <arschmitz> IE8 is the only reason for it to exist
[11:11:57] <gabriel_schulhof> Aaah, so at that point all our supported browsers will have it natively?
[11:12:08] <arschmitz> they all do already including ie8
[11:12:18] <arschmitz> but ie8 breaks if you do <input form="boom">
[11:12:37] <gabriel_schulhof> Aaah, OK, so it needs a polyfill ... gotcha.
[11:12:38] <arschmitz> element.form will return "boom" instead of a form
[11:12:43] <arschmitz> no
[11:12:51] <arschmitz> we dont polyfill at all
[11:12:58] <arschmitz> you cant really with out lots of crazy
[11:13:01] <gabriel_schulhof> Nono I know ... sorry ... I used the wrong term.
[11:13:25] <arschmitz> in ie8 we do this.closest( "form" )
[11:13:36] <arschmitz> because it does not support that attribute
[11:13:48] <arschmitz> but what happens is if you set the attribute it overwrites the prop
[11:14:01] <arschmitz> with that string insted of a node
[11:14:09] <gabriel_schulhof> Ummm ... what about document.etElementById( theElement.getAttribute( "form" ) )?
[11:14:16] <arschmitz> that would be wrong
[11:14:36] <arschmitz> becuse the element is not actually associted with that form by the browser
[11:14:45] <arschmitz> so submiting or reseting that form should not reset that element
[11:14:45] <gabriel_schulhof> Oh, I see! OK.
[11:15:01] <arschmitz> the implementation is only one line
[11:15:13] <gabriel_schulhof> So, wait a sec - is this not a fixup by us to make IE8 work the way it should?
[11:15:19] <arschmitz> yes
[11:15:27] <arschmitz> thats exactly what it is
[11:15:55] <arschmitz> gabriel_schulhof: https://github.com/jquery/jquery-ui/pull/1546/files#diff-9642379d08d860be4c2831b0ff5b9a85R141
[11:15:58] <gabriel_schulhof> OK, then I'm misunderstanding something, becaue the way it /should/ work is that the element should be associated with a form of which it's not a child.
[11:16:07] <arschmitz> no it shouldnt
[11:16:13] <arschmitz> ie8 does not support that
[11:16:45] <arschmitz> this is just working around a bug in ie8
[11:16:54] <gabriel_schulhof> OK, well, it doesn't matter since it's only there for another 8 months and change :)
[11:17:14] <arschmitz> gabriel_schulhof: the point is if you did what your saying and you hit submit on the form it points to
[11:17:18] <arschmitz> ie8 will not submit that form
[11:17:24] <arschmitz> *input
[11:17:30] <gabriel_schulhof> Right, OK ...
[11:17:47] <gabriel_schulhof> Well, we do hijack submits, so we could fix that part too ... but too much effort, I guess ...
[11:17:55] <arschmitz> well and thats us
[11:18:03] <arschmitz> and only with ajax nac
[11:18:04] <arschmitz> nav
[11:18:14] <gabriel_schulhof> Yeah, for sure ... not worth the effort.
[11:18:14] <arschmitz> not checkboxes selects etc in general when outside a page
[11:18:30] <jasperdegroot> isn't this more a discussion for -dev?
[11:18:40] <arschmitz> yes
[11:18:40] <gabriel_schulhof> Yeah for sure ...
[11:18:44] <gabriel_schulhof> I'm good.
[11:19:06] <arschmitz> so now we can extract all these things out of our form widgets
[11:19:16] <gabriel_schulhof> :+1:
[11:19:28] <jasperdegroot> nice
[11:19:33] <arschmitz> we can now also handle multiple labels properly
[11:19:38] <arschmitz> we have never done this before
[11:20:15] <arschmitz> we will now use labels()[ 0 ] for creating a button out of for things like checkboxradio
[11:20:33] <arschmitz> and the whole set for things like event binding in custom select
[11:21:18] <arschmitz> labels() is always sorted in dom order and works on fragments also
[11:21:28] <gabriel_schulhof> Actually, checkboxradio is in an interesting situation in that the label is actually styled to be part of the checkbox, so if [ 0 ] happens to be 50 miles from the <input>, it might not look so good.
[11:21:45] <gabriel_schulhof> ... unless we relocate it ...
[11:21:52] <arschmitz> gabriel_schulhof: thats exactly why we will always use the first
[11:21:59] <arschmitz> because then people know which one will be styled
[11:22:03] <gabriel_schulhof> OK.
[11:22:08] <arschmitz> and we will never relocate
[11:22:27] <gabriel_schulhof> So, like "Don't put the first label over there, man, or it ain't gonna look good!"
[11:22:43] <arschmitz> put the first label where ever you want the button
[11:22:48] <gabriel_schulhof> Right.
[11:22:59] <arschmitz> which is essentially what we did already
[11:23:04] <arschmitz> execpt weird
[11:23:14] <arschmitz> we have always just used the first one we found
[11:23:23] <arschmitz> but there was no real rhyme or reson to our search order
[11:23:58] <arschmitz> now we are going to be explicit
[11:25:05] <gabriel_schulhof> Excellent!
[11:25:34] <arschmitz> hmm ok
[11:25:41] <arschmitz> so i just thought of a valid usecase this prevents
[11:26:30] <arschmitz> having forms like this http://demos.jquerymobile.com/1.4.5/forms/#Fieldcontainergroupings
[11:26:36] <arschmitz> with a label to the right of the button
[11:27:38] <arschmitz> hmm thats really a legend though in that case right?
[11:28:07] <arschmitz> hmm ill bring it up to scott_gonzalez and jzaefferer and the others in ui and see what they think
[11:28:36] <gabriel_schulhof> Yeah, it's a bit of a conundrum ...
[11:28:46] <jasperdegroot> I am not sure what you mean
[11:28:57] <arschmitz> the only thing we could do is add a labelIndex option
[11:29:00] <jasperdegroot> we only look for first one we find if the label has no id, right?
[11:29:01] <arschmitz> and default it to 0
[11:29:05] <gabriel_schulhof> What about a label for a label?
[11:29:11] <scott_gonzalez> I don't know what you're linking to.
[11:29:35] <gabriel_schulhof> scott_gonzalez: Yeah, deep linking doesn't work. Go to quick links and choose fieldcontainer groupings
[11:30:14] <arschmitz> gabriel_schulhof: works in chrome
[11:30:14] <scott_gonzalez> I'm there. The link worked.
[11:30:22] <scott_gonzalez> I just don't see a label on the right.
[11:30:23] <gabriel_schulhof> arschmitz: <label for="other-label">Description</label><label id="other-label" for="the-checkbox">Checkbox</label><input type="checkbox" id="the-checkbox">
[11:30:45] <arschmitz> gabriel_schulhof: is that even valid and does it work?
[11:31:07] <gabriel_schulhof> Why not? Can a label not be created for another label?
[11:31:08] <jasperdegroot> i thought you could only associate one label with an input
[11:31:15] <arschmitz> jasperdegroot: no
[11:31:18] <jasperdegroot> oh ok
[11:31:20] <arschmitz> you can have as many as you want
[11:31:32] <gabriel_schulhof> The question is whether you can associate a label with another label
[11:31:35] <jasperdegroot> didn't know that
[11:31:42] <gabriel_schulhof> Like, daisy-chain them.
[11:32:10] <arschmitz> gabriel_schulhof: that does not work
[11:32:16] <arschmitz> http://jsbin.com/kulorex/1/edit
[11:32:31] <jasperdegroot> The LABEL element may be used to attach information to controls. Each LABEL element is associated with exactly one form control.
[11:32:45] <gabriel_schulhof> Yeah ... no dice.
[11:32:52] <arschmitz> gabriel_schulhof: yes it does not say each form control exactly one label
[11:32:59] <arschmitz> jasperdegroot: i meant
[11:33:02] <jasperdegroot> true
[11:33:18] <jasperdegroot> but it does say it is associated with a control, so not another label
[11:33:24] <arschmitz> yup
[11:33:53] <gabriel_schulhof> Well, it doesn't say it MUSTN'T be associated with another label, but yeah, it's pretty clear that it shouldn't be.
[11:34:04] <gabriel_schulhof> It breaks the semantics.
[11:34:07] <arschmitz> http://jsbin.com/kulorex/1/edit
[11:34:15] <arschmitz> you can just use two labels
[11:35:08] <arschmitz> the only problem is then you have a hard time doing traditional form layouts with description in one column and control in the other
[11:35:44] <jasperdegroot> right
[11:36:26] <scott_gonzalez> What is the use case you're trying to address?
[11:36:38] <arschmitz> http://demos.jquerymobile.com/1.4.5/forms/#Fieldcontainergroupings
[11:36:40] <gabriel_schulhof> http://jsbin.com/rejasuruqu/1/edit?html,output
[11:36:43] <arschmitz> a form with a layout like that
[11:36:59] <arschmitz> where you have the label text all in a column on the right
[11:37:03] <arschmitz> left*
[11:37:10] <arschmitz> and the control associated on the right
[11:37:12] <scott_gonzalez> I still have no idea what you're linking to in the demos.
[11:37:22] <arschmitz> just a sec let me find a better example
[11:37:24] <scott_gonzalez> All I see is a text input and a select, both with standard labels.
[11:37:26] <gabriel_schulhof> I dunno ... I'm not seeing that the spec explicitly forbids one from creating a label /for/ another label.
[11:37:39] <arschmitz> scott_gonzalez: yes thats what im talking about
[11:37:40] <scott_gonzalez> gabriel_schulhof: Get off that line of thinking.
[11:37:50] <gabriel_schulhof> scott_gonzalez: Yeah, OK ...
[11:37:51] <arschmitz> just pretend the selectmenu was a checkbox button
[11:38:01] <scott_gonzalez> why?
[11:38:07] <arschmitz> scott_gonzalez: why what?
[11:38:11] <scott_gonzalez> Why would you do that?
[11:38:15] <scott_gonzalez> Have you seen this on real sites?
[11:38:22] <arschmitz> we have had requests for it
[11:38:31] <gabriel_schulhof> arschmitz: Actually, in the current version, the checkbox takes up the whole width - both the width of the description and that of the form control.
[11:38:39] <arschmitz> gabriel_schulhof: yup
[11:38:45] <scott_gonzalez> And clicking on description would toggle the checkbox?
[11:38:47] <arschmitz> gabriel_schulhof: like i said we have had feature requests for it
[11:39:01] <gabriel_schulhof> arschmitz: So, correct me if I'm wrong: We want to achieve what I've shown in http://jsbin.com/rejasuruqu/1/edit?html,output but without the bad markup, right?
[11:39:03] <arschmitz> scott_gonzalez: that would be the idea the alernative is say use a legend
[11:39:06] <arschmitz> and it would not toggle it
[11:39:30] <gabriel_schulhof> arschmitz: So, if that's the case, why not use a span with a special class?
[11:39:32] <arschmitz> gabriel_schulhof: clicking on description does not activate the checkbox
[11:39:36] <arschmitz> with a label it does
[11:39:41] <gabriel_schulhof> Oh, OK.
[11:40:02] <arschmitz> gabriel_schulhof: to do what your showing with proper makrup would just be a legend
[11:40:12] <gabriel_schulhof> So, why not simply use the last label for the checkbox?
[11:40:23] <gabriel_schulhof> Instead of the first?
[11:40:35] <gabriel_schulhof> 99.9% of the time they're the same thing.
[11:40:41] <arschmitz> make same arugment other way around
[11:40:44] <gabriel_schulhof> ... since there's only one label.
[11:41:01] <gabriel_schulhof> What can't you do if you use the last label?
[11:41:23] <arschmitz> some other layout someone dreams up
[11:41:40] <gabriel_schulhof> OK, and when we get a request for that, we'll think it over.
[11:41:59] <gabriel_schulhof> Until then, we /have/ had requests for this layout, and to provide it we need to use the last label, not the first.
[11:42:13] <arschmitz> that is an option
[11:42:32] <scott_gonzalez> Well, honestly, I would expect the markup to be quite differnet.
[11:43:09] <jasperdegroot> I am still not sure if I understand the problem correctly but can't we just offer some CSS so people can add a span in their markup that serves as label next to the checkbox?
[11:43:29] <gabriel_schulhof> jasperdegroot: Not unless we also implement the mouse bindings.
[11:43:44] <gabriel_schulhof> jasperdegroot: Clicking a label, any label, causes the checkbox to be toggled.
[11:43:47] <jasperdegroot> ah right, click a real label toggles the input
[11:43:51] <jasperdegroot> yup
[11:44:05] <jasperdegroot> but for markup I think span is best option
[11:44:11] <gabriel_schulhof> Definitely.
[11:44:14] <jasperdegroot> wouldn't force people to use a fieldset + legend
[11:44:28] <gabriel_schulhof> OKOK, wait a sec - what's wrong with that?
[11:44:41] <arschmitz> scott_gonzalez: what would you expect
[11:44:41] <gabriel_schulhof> After all, it is a ... set ... of fields ...
[11:44:46] <jasperdegroot> because a fieldset groups a group of inputs
[11:44:56] <jasperdegroot> and now you use it for only one input
[11:45:05] <jasperdegroot> not saying it is invalid
[11:45:14] <gabriel_schulhof> Oh, right ... these are disparate, but related.
[11:46:04] <scott_gonzalez> Perhaps something like http://jsbin.com/sacuwujuji/1/edit
[11:46:45] <scott_gonzalez> Ugh, I then modified it.
[11:46:47] <scott_gonzalez> Let me go back
[11:46:59] <scott_gonzalez> So this is markup I've seen on real sites: http://jsbin.com/sacuwujuji/1/edit
[11:47:22] <arschmitz> scott_gonzalez: thats what we do now in mobiel
[11:47:27] <scott_gonzalez> This is what I had first: http://jsbin.com/sacuwujuji/2/edit
[11:47:55] <scott_gonzalez> And of course the problem here is that you want the second label to be used for the actual widget.
[11:48:02] <gabriel_schulhof> Right.
[11:48:02] <arschmitz> right
[11:48:19] <arschmitz> that was my original point
[11:48:33] <gabriel_schulhof> Well, can we style the second label to appear to the left of the first label?
[11:48:37] <scott_gonzalez> Is there an open issue for this?
[11:48:42] <scott_gonzalez> If not, I'd say ignore it.
[11:48:48] <gabriel_schulhof> ... or a feature request ...
[11:48:50] <arschmitz> there is one
[11:48:52] <gabriel_schulhof> ... in the wiki ...
[11:48:55] <scott_gonzalez> If there is, we can look at the actual request.
[11:49:07] <agcolom> sorry, got to get Alex from rock climbing. if you can make sure everything is in the notes, I'll upload them tomorrow
[11:49:08] <arschmitz> let me see if i can find it
[11:49:16] <arschmitz> agcolom: no problem
[11:49:18] <jasperdegroot> bye agcolom
[11:49:30] <gabriel_schulhof> agcolom: K L8R
[11:50:26] <arschmitz> https://github.com/jquery/jquery-mobile/issues/7453
[11:50:30] <gabriel_schulhof> arschmitz: Also, what about .labels().not( ".ignore-this-label" )[ 0 ]
[11:51:08] <gabriel_schulhof> arschmitz: Call the class ui-fieldset-label
[11:51:26] <gabriel_schulhof> So .labels().not( ".ui-fieldset-label" )[ 0 ]
[11:51:36] <gabriel_schulhof> It's the first non-fieldset label.
[11:52:41] <jasperdegroot> if you want to make this work you have to add your own CSS for styling so you need add a class to one of the labels anyway to be able to target it
[11:52:56] <gabriel_schulhof> Then you could simple <label for="cb" class="ui-fieldset-label">Description:</label><label for="cb">I want some cake</label><input type="checkbox">
[11:53:12] <arschmitz> jasperdegroot: well the question is a bit more general for any layout you want the label before the button
[11:53:25] <arschmitz> jasperdegroot: not specific to mobile fieldset
[11:53:33] <jasperdegroot> ah ok
[11:53:56] <gabriel_schulhof> arschmitz: If we modify the selector to filter out ui-fieldset-label before chosing the first element, we needn't worry about having to style around DOM order.
[11:53:57] <jasperdegroot> and how about RTL?
[11:54:15] <jasperdegroot> right
[11:54:17] <arschmitz> jasperdegroot: the dom is essentially reversed so its fine
[11:54:36] <arschmitz> gabriel_schulhof: i almost think i would just prefer the ability to set an index to use
[11:54:59] <gabriel_schulhof> arschmitz: Like, as a widget option?
[11:55:14] <arschmitz> yeah execpt i dont really want to add an option lol
[11:55:24] <arschmitz> scott_gonzalez: any thoughts?
[11:55:35] <gabriel_schulhof> arschmitz: ui-fieldset-label can serve more purposes than just the option.
[11:55:44] <arschmitz> options as i see them:
[11:55:54] <arschmitz> 1 ) ignore this
[11:55:59] <arschmitz> 2 ) use last label
[11:56:14] <arschmitz> 3 ) add option to use a different index then 0
[11:56:21] <arschmitz> 4 ) add a filterclass
[11:56:29] <gabriel_schulhof> Sums it up.
[11:56:51] <scott_gonzalez> I think the first step here is to talk to some a11y folks.
[11:56:55] <arschmitz> scott_gonzalez: maybe we should bring this to the ui meeting since its a checkboxradio issue
[11:57:08] <arschmitz> yeah see if they would expect it to toggle or now
[11:57:09] <gabriel_schulhof> Wait a sec ... the label has to be immediately next to the input for the styling to work, right?
[11:57:10] <arschmitz> not
[11:57:16] <scott_gonzalez> We need to know what the recommended markup is before we have any discussion about the API.
[11:57:17] <arschmitz> gabriel_schulhof: no
[11:57:20] <arschmitz> it can be anywhere
[11:57:45] <gabriel_schulhof> I'm talking about the label that will be used to draw the button.
[11:57:49] <gabriel_schulhof> Oh, OK.
[11:57:50] <gabriel_schulhof> Yes.
[11:57:54] <gabriel_schulhof> It can be anywhere.
[11:57:59] <arschmitz> yup
[11:58:16] <arschmitz> gabriel_schulhof: depending on the browser it can even be in a different form lol
[11:58:55] <gabriel_schulhof> So what we're really talking about is the fieldset label - it has to immediately preceed the button label, right?
[11:59:06] <gabriel_schulhof> ... to avoid complications in styling.
[11:59:35] <gabriel_schulhof> ... but if it does, we have to tell the widget not to use it for drawing the button.
[12:00:09] <arschmitz> gabriel_schulhof: for this use case yes
[12:00:16] <gabriel_schulhof> Yeah ... OK.
[12:00:32] <gabriel_schulhof> NM ... I thought I had something, but it's still down to those four options ...
[12:00:50] <arschmitz> so yeah i think im going to move this to the wiki for checkboxradio
[12:00:59] <arschmitz> and we can talk to some accessability people
[12:01:43] <arschmitz> Does anyone have anything else to talk about specificly this week? we are out of time and i need to go soon
[12:01:55] <arschmitz> we kinda got stuck in a rabbit hole this week
[12:02:04] <gabriel_schulhof> arschmitz: It may be good if the decision as to which label is used were made extensible, so we can implement an extension in mobile ...
[12:02:21] <gabriel_schulhof> Listview is almost ready to go.
[12:02:25] <gabriel_schulhof> Just fixing some tests.
[12:02:27] <arschmitz> check your PR's i have reviewed almost all of them
[12:02:30] <gabriel_schulhof> ... and I'll address the reviews.
[12:02:41] <arschmitz> will probably finish the ones i didnt get to yet tonight
[12:02:48] <gabriel_schulhof> :+1:
[12:03:00] <gabriel_schulhof> The quest rages on, essentially.
[12:03:40] <arschmitz> button is all reviewed and approved by jzaefferer execpt waiting on some updates in other prs
[12:03:51] <arschmitz> so we are getting close to being able to move to ui mater
[12:03:53] <arschmitz> master
[12:04:02] <jasperdegroot> great
[12:04:12] <jasperdegroot> I need to go too ... later all
[12:04:18] <gabriel_schulhof> jasperdegroot: K L8R
[12:04:42] <arschmitz> if anyone needs anything on a PR ping me
[12:04:52] <arschmitz> lets try to get the count down this week
[12:04:52] <arthurvr> bye
[12:05:21] <arschmitz> see everyone back in -dev
