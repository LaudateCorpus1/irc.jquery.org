[11:01:49] <gabriel_schulhof> I bid y'all good "${PART_OF_DAY}"!
[11:01:57] <arschmitz> agcolom: cgack: gabriel_schulhof: ianmaffett: sfrisk: Meeting time
[11:02:10] <arschmitz> jasperdegroot:
[11:02:17] <cgack> howdy
[11:02:25] <jasperdegroot> hello
[11:02:27] <agcolom> at board meeting, so cannot join today
[11:02:31] <ianmaffett> howdy
[11:02:46] <arschmitz> agcolom: thats fine i was just doing it for completeness
[11:04:17] <agcolom> we can use https://coloma.users.ecs.westminster.ac.uk/jqueryStats/mobileIssues.php to track open issues (issues + PRs) in all jQM-related repos (tracking only since sunday)
[11:04:44] <arschmitz> agenda https://docs.google.com/spreadsheet/ccc?key=0AskujzE4Ig0QdG5nSmZiSUhjYm4ya29CdjhLZmJwSWc&usp=drive_web#gid=57
[11:04:57] <gabriel_schulhof> agcolom: Login required
[11:05:13] <agcolom> shame sorry
[11:05:28] <agcolom> I thought that got opened up
[11:06:02] <agcolom> i'll need to reach out to the work infra guys
[11:06:08] <arschmitz> I saw it the other day
[11:06:10] <arschmitz> its pretty awesome
[11:08:43] <arschmitz> Ok so 1.5
[11:08:51] <arschmitz> classes continues
[11:09:26] <arschmitz> implementation on new api is about 3/4 done but found some issues that had to be addressed
[11:09:40] <arschmitz> nothing major just took some time
[11:10:21] <arschmitz> Also sfrisk chimed in on button agreeing on floats for controlgroups vs inline block and i have no opinion so will be changing that
[11:10:37] <arschmitz> chimed in agreeing with jasperdegroot that is
[11:11:08] <jasperdegroot> arschmitz: you can pick the CSS from 1.5-button-css-and-demos
[11:11:34] <arschmitz> jasperdegroot: we wil lstil ldo double border
[11:11:48] <jasperdegroot> arschmitz: ok, then you have to delete that part :)
[11:11:50] <arschmitz> just switching to floats
[11:12:28] <arschmitz> i think thats it on the ui side of things
[11:12:28] <gabriel_schulhof> So, cgack will take over exactly what?
[11:12:36] <arschmitz> huh?
[11:12:43] <arschmitz> oh thats old i have not hcnaged it yet
[11:12:48] <cgack> gabriel_schulhof: that was from ages ago
[11:12:49] <arschmitz> its just from the cheet i copied
[11:13:13] <gabriel_schulhof> Oh, OK. Was just wondering.
[11:14:14] <gabriel_schulhof> Well, "all updates from ui pulled in" is also out-of-date, right?
[11:14:21] <arschmitz> yes fixing right now
[11:14:23] <gabriel_schulhof> OK.
[11:15:42] <arschmitz> ok anything else about updates for 1.5 i know we are kinda stalled there waiting on ui
[11:15:58] <jasperdegroot> arschmitz: shall we pull https://github.com/jquery/jquery-mobile/pull/7846 into ui-1-12 branch/
[11:15:59] <jasperdegroot> ?
[11:16:18] <arschmitz> jasperdegroot: im going to do it when i pull in the ui updates i think
[11:16:28] <jasperdegroot> arschmitz: ok, sounds good
[11:16:39] <gabriel_schulhof> arschmitz: I guess the touch events split-up?
[11:16:40] <arschmitz> so i can properly rebase everything easily
[11:16:45] <gabriel_schulhof> I suppose that'll go into 1.5.0.
[11:16:51] <arschmitz> gabriel_schulhof: yes
[11:16:56] <gabriel_schulhof> I'm working on that.
[11:17:08] <gabriel_schulhof> I've made good progress, but I'd like to separate out the tests.
[11:17:13] <arschmitz> ok want to add that
[11:17:24] <gabriel_schulhof> ... and I may need a place to put shared code, like triggerCustomEvent()
[11:17:35] <gabriel_schulhof> I can't use $.mobile, because events are independent of the mobile ns.
[11:17:42] <gabriel_schulhof> I'll add it.
[11:17:42] <arschmitz> yup
[11:17:59] <arschmitz> ok is there anything to discuss on that or your just working on it?
[11:18:25] <gabriel_schulhof> Well, I could use some ideas as to where to put stuff that's common.
[11:18:34] <gabriel_schulhof> $.event._privateStuff?
[11:18:42] <gabriel_schulhof> $.event._mobilePrivateStuff?
[11:18:43] <arschmitz> why dont you work on a pr so its easier to see what your talking about
[11:18:45] <gabriel_schulhof> I dunno.
[11:18:51] <gabriel_schulhof> arschmitz: OK.
[11:18:55] <gabriel_schulhof> I'll do a PR.
[11:18:59] <arschmitz> and once we have code to look at its easier to put in context for a discussion
[11:19:31] <arschmitz> speaking of touch
[11:19:51] <arschmitz> the pointer events poly fill is officially now home with the jQuery foundation
[11:20:06] <arschmitz> https://github.com/jquery/PointerEvents
[11:20:37] <jasperdegroot> cool
[11:20:50] <arschmitz> and in related news PointerEvents became a Proposed Recommendation at the W3C yesterday.
[11:21:08] <ianmaffett> about time!
[11:21:11] * gabriel_schulhof queues marching band music
[11:21:22] <arschmitz> well not yesterday tuesday but close enough
[11:21:24] <gabriel_schulhof> Ha! Despite Google, I guess.
[11:21:45] <arschmitz> they never said it should not be a spec
[11:21:50] <arschmitz> in fact they helped draft it
[11:22:03] <arschmitz> and they didnt pull out of the working group
[11:22:13] <arschmitz> they just chose not to implement
[11:22:22] <gabriel_schulhof> Riiiight ... O_o
[11:23:08] <arschmitz> So 1.6 we will hopefully be using pointer events!!
[11:23:32] <cgack> awesome
[11:23:35] <arschmitz> I also finally got back to autoinit this week
[11:23:41] <gabriel_schulhof> *whew* ... will we ship the polyfill inline?
[11:23:47] <arschmitz> gabriel_schulhof: yes
[11:24:03] <arschmitz> it will be a hard dependency like core
[11:24:11] <gabriel_schulhof> arschmitz: Ummm ... what about making it download-builder-excludable?
[11:24:12] <arschmitz> will more like ui-core
[11:24:33] <gabriel_schulhof> I guess it short-circuits itself if there's a native implementation, right? Still, the size ...
[11:24:37] <arschmitz> yeah we will have a way to do that
[11:25:01] <arschmitz> but since almost no enviroment can exclude it
[11:25:15] <arschmitz> only ie has pointer events and only mobile or 10+
[11:25:22] <gabriel_schulhof> Right. Nice :)
[11:25:43] <arschmitz> so its pretty much required lol
[11:26:02] <gabriel_schulhof> arschmitz: Do you know what Mozilla's gonna do about it?
[11:26:12] <arschmitz> they are implementing
[11:26:14] <arschmitz> 100%
[11:26:30] <arschmitz> they implementation fully passes the wc3 test squite already
[11:26:36] <arschmitz> but its not in most builds right now
[11:26:45] <gabriel_schulhof> Cool!
[11:27:08] <arschmitz> microsoft open tech contributed most of it
[11:27:30] <gabriel_schulhof> Wow! That's ... just ... wow!
[11:27:47] <gabriel_schulhof> Must've been all those cakes the Mozilla guys sent the IE guys :)
[11:27:59] <jasperdegroot> :)
[11:28:15] <arschmitz> so auto init related things
[11:28:23] <arschmitz> nojs is not documented at all
[11:28:31] <arschmitz> so its going to be removed
[11:28:43] <arschmitz> its pointless
[11:28:53] <gabriel_schulhof> Yeah, we already have a mechanism for that.
[11:29:09] <arschmitz> since we never documented and its exactly the same as data-role none execpt it also makes it display none
[11:29:21] <arschmitz> by adding ui-nojs
[11:29:29] <arschmitz> which you could still do your self
[11:29:55] <arschmitz> since this is crazy and undocumented i think we just remove it
[11:30:28] <arschmitz> on the lines of crazy
[11:30:46] <arschmitz> does anyone think we should actually have degradeinputs any more?
[11:31:17] <gabriel_schulhof> Well, we need something for slider, otherwise we'll have a native slider next to a bunch of divs that look (much better) like a slider.
[11:31:29] <gabriel_schulhof> Same for search input, IIRC.
[11:31:36] <arschmitz> no just tell people to use input type=number
[11:31:40] <arschmitz> or type=text
[11:31:57] <gabriel_schulhof> OK, but what about backcompat?
[11:32:01] <arschmitz> replacing an element is very destructive
[11:32:11] <gabriel_schulhof> Yeah, agreed. It's a very bad way of doing it.
[11:32:45] <gabriel_schulhof> I suppose it's OK for backcompat to have a native slider next to a non-native one.
[11:32:46] <arschmitz> backcompat we just deprecate it and remove the next version?
[11:32:48] <gabriel_schulhof> I mean, it works.
[11:32:58] <gabriel_schulhof> ... and it provides a **strong** incentive to move forward :)
[11:33:00] <arschmitz> there is no backcompat issue?
[11:33:06] <arschmitz> gabriel_schulhof: that would never happen?
[11:33:20] <arschmitz> how would you get that case?
[11:33:32] <gabriel_schulhof> arschmitz: By having an input type range turn into a jQM slider.
[11:33:49] <gabriel_schulhof> input type range gets rendered natively as a slider, but now it has a jQM slider next to it.
[11:33:52] <arschmitz> right for 1.5 we wuld still have degrade inputs
[11:33:57] <arschmitz> so there is backcompat there
[11:34:12] <gabriel_schulhof> Yeah, OK. Just declare it as deprecated.
[11:34:25] <arschmitz> and in 1.6 that could happen happen but you would then not be following the published api
[11:35:22] <arschmitz> for 1.5 we can factor this out into a wrapper on enhance
[11:35:31] <arschmitz> which is also how we will handle popup links
[11:36:22] <gabriel_schulhof> arschmitz: Right, but please make the enhancer itself such that it doesn't unconditionally assign $.fn.enhance
[11:36:38] <arschmitz> gabriel_schulhof: yes that wont be an issue
[11:36:41] <gabriel_schulhof> OK. Good.
[11:36:51] <arschmitz> last auto init thing is keepNative
[11:36:59] <arschmitz> we already talked about deprecating this
[11:37:07] <arschmitz> just want to confirm everyone is ok with that
[11:37:14] <jasperdegroot> +1
[11:37:45] <arschmitz> between setting individual initselectors and the ability to create an initselector generator i see no need for this
[11:37:50] <gabriel_schulhof> OK, so modifying initSelectors is the future way of preventing unwanted widget init, right?
[11:38:00] <arschmitz> yes
[11:38:09] <arschmitz> the one and only way
[11:38:12] <gabriel_schulhof> arschmitz: ... and people can shim the enhancer, because they can control the load order for their project.
[11:38:17] <arschmitz> deprecate all others
[11:38:31] <gabriel_schulhof> arschmitz: ... but we need not endorse this latter approach.
[11:38:41] <arschmitz> gabriel_schulhof: there is also an initselector generator in the enhancer
[11:39:44] <arschmitz> gabriel_schulhof: https://gist.github.com/arschmitz/47610f7fd7bf2d9fb2d5#file-enhancer-js-L31
[11:40:45] <gabriel_schulhof> Aaah, OK, so we no longer inflict initSelectors on unsuspecting widgets upon definition, right?
[11:41:01] <arschmitz> no of course we do
[11:41:07] <arschmitz> autoinit would not work if we didnt
[11:41:41] <gabriel_schulhof> Well, no. We do not set initSelector, but we look for it to see if it's present.
[11:41:56] <arschmitz> oh yeah we dont add it to the prototype you mean/
[11:42:03] <gabriel_schulhof> Yeah, that's what I mean.
[11:42:26] <gabriel_schulhof> ... and so, the initGenerator can become a sort of hash of custom initSelectors.
[11:42:40] <arschmitz> it can be what ever you want it to
[11:42:54] <arschmitz> it just needs to return a valid selector
[11:42:55] <gabriel_schulhof> That's an offer one can't refuse.
[11:43:21] <arschmitz> so you could do .auto-widgetname
[11:43:33] <arschmitz> for better perf if you wanted instead of attributes
[11:43:47] <arschmitz> since selectors are much faster
[11:43:53] <arschmitz> class selectors*
[11:43:55] <gabriel_schulhof> Yeah, for sure.
[11:45:17] <arschmitz> anyway this got me thinking about our removing the data-attribute namespace
[11:45:51] <arschmitz> the back compat for this is a little ugly when it comes to selectors
[11:46:32] <arschmitz> there will be a big perf hit if people dont switch to using data-ui-
[11:46:38] <arschmitz> to make backcompat work
[11:46:56] <arschmitz> its also going to litter the code with conditionals about the length of the return
[11:47:04] <gabriel_schulhof> ... and the initGenerator does not allow one to do the two-step query process.
[11:47:19] <arschmitz> it will have to be modified for 1.5
[11:47:22] <arschmitz> to allow it
[11:47:30] <gabriel_schulhof> Yeah.
[11:47:31] <arschmitz> in the actual enhance function
[11:47:56] <arschmitz> it will check the return and check a backcompat one
[11:48:12] <gabriel_schulhof> So, the enhancer will be owned by jQM?
[11:48:27] <arschmitz> no
[11:48:39] <arschmitz> it will check if $.mobile.ns exists just for one version
[11:48:46] <arschmitz> and if it does do the fallback
[11:49:12] <gabriel_schulhof> So, where will the enhancer be? external/?
[11:49:27] <arschmitz> no its part of the jqm repo if thats what you mean
[11:49:36] <gabriel_schulhof> Yeah, that's what I meant. OK.
[11:49:41] <arschmitz> it will be in js/widgets/
[11:49:52] <arschmitz> even though its not a widget it only works on widgets so seems right
[11:50:02] <gabriel_schulhof> Yeah.
[11:50:21] <gabriel_schulhof> It will be of no lesser value to UI for the extra check.
[11:50:47] <gabriel_schulhof> ... because UI will be seeing data-attributes for the first time, so they can start out without any backcompat, going straight to data-ui-*
[11:50:56] <arschmitz> yes
[11:51:16] <arschmitz> ok and last thing
[11:51:21] <arschmitz> Chassis
[11:51:34] <arschmitz> sfrisk and i met with Yandex on tuesday
[11:51:51] <arschmitz> and its now looking very likely we will go with a BEM naming convention
[11:52:28] <jasperdegroot> nice
[11:52:30] <arschmitz> its actually very very similar to what we do now just a formalized version using sass
[11:52:45] <gabriel_schulhof> Wasn't there an issue with having lots of rules in that case?
[11:52:46] <arschmitz> basicly what we have right now in theme.css and in core.css
[11:52:58] <jasperdegroot> lots of selectors
[11:53:02] <arschmitz> will become extends on the other structure classes
[11:53:24] <arschmitz> its actually not bad depending on how you do it
[11:53:39] <arschmitz> basicly we already do
[11:53:48] <gabriel_schulhof> Does it positively affect the DOM structure design choices you make?
[11:53:58] <jasperdegroot> it just takes some time to get used to it
[11:54:00] <arschmitz> indifferent
[11:54:09] <arschmitz> basicly we already do it very close
[11:54:22] <arschmitz> so right now we have classes like ui-menu-item-heading-icon
[11:54:48] <arschmitz> they would have ui-menu--item--heading__icon
[11:55:05] <arschmitz> and not add ui-shadow or ui-corner or things like that
[11:55:15] <arschmitz> because they would be part fo that already
[11:55:23] <arschmitz> and the whole -- __ is optional
[11:55:28] <arschmitz> thats just what they like
[11:56:01] <gabriel_schulhof> OK, but again, with the use of automated CSS generation tools, we should carefully watch their output before a release.
[11:56:21] <arschmitz> gabriel_schulhof: sass is not a new thing
[11:56:40] <jasperdegroot> gabriel_schulhof: we should carefully test
[11:56:51] <arschmitz> the output is very accurate
[11:57:12] <arschmitz> what exactly do you propose testing"/
[11:57:14] <arschmitz> ?
[11:57:33] <gabriel_schulhof> Yeah, I'm more concerned about performance than correctness.
[11:57:53] <arschmitz> well performance is a completely seperate thing then what you said
[11:57:54] <jasperdegroot> arschmitz: just mean testing if widgets are enhanced as they are supposed to be
[11:58:18] <arschmitz> jasperdegroot: well that has nothing to do with sass? thats just making sure if we have a new theme we properly implement it?
[11:58:25] <jasperdegroot> I don't think we will go over all processed css before a release
[11:58:27] <gabriel_schulhof> arschmitz: I meant that the tool may generate unnecessarily complex CSS resulting in lower performance.
[11:58:35] <gabriel_schulhof> Or a larger CSS file.
[11:58:49] <arschmitz> gabriel_schulhof: thats not an issue
[11:58:51] <gabriel_schulhof> Although I guess gzip can take care of that.
[11:58:55] <arschmitz> there are unit tests for both
[11:58:59] <arschmitz> just like we have test
[11:59:03] <jasperdegroot> arschmitz: right, what I mean is that sass doesn't make a difference
[11:59:22] <jasperdegroot> exactly
[11:59:29] <arschmitz> gabriel_schulhof: there are both rendering performance tests
[11:59:36] <arschmitz> and gzip comparison
[11:59:49] <gabriel_schulhof> Very nice!
[12:00:00] <arschmitz> and bem done properly is has the smallest file size by far
[12:00:18] <arschmitz> topcoat the only big framework implementing it current acheives better compression then any other framework
[12:00:22] <arschmitz> by a large factor
[12:00:37] <arschmitz> because its all about repeted strings which bem takes full advantage of
[12:00:49] <arschmitz> when done properly
[12:01:22] <arschmitz> but this is not really the right place for these sort of discussions
[12:01:27] <arschmitz> thats tuesdays at 1pm
[12:02:04] <arschmitz> i think thats everything on the agenda for this week i think does any one have anything else?
[12:02:23] <jasperdegroot> when is next meeting?
[12:02:30] <jasperdegroot> next week is Chrismas
[12:02:39] <arschmitz> then newyears
[12:02:40] <jasperdegroot> week after New Year's Day, right?
[12:02:43] <gabriel_schulhof> Yep.
[12:02:49] <gabriel_schulhof> Both holidays up here.
[12:02:51] <arschmitz> no for sure on christmas
[12:03:09] <gabriel_schulhof> I'm out on New Year's Day, too.
[12:03:11] <arschmitz> we can see whos around on new years if people are we will have on if not week after
[12:03:18] <jasperdegroot> ok
[12:04:02] <gabriel_schulhof> Sounds good!
[12:04:09] <arschmitz> ok thanks see everyone back in -dev
[12:04:14] <jasperdegroot> later
[12:04:16] <arthurvr> bye!
[12:04:18] <gabriel_schulhof> Well, I guess nothin' but Merry Christmas and a Happy New Year, right?
