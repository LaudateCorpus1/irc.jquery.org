[08:26:28] <jzaefferer> leobalter Krinkle JamesMGreene: Testing meeting in 4 minutes!
[08:26:35] <JamesMGreene> true story
[08:26:43] <leobalter> \o/
[08:31:04] <jzaefferer> Let's do this
[08:31:13] <jzaefferer> Last recorded meeting was June 18th
[08:31:30] <jzaefferer> We've made a lot of progress on QUnit since then
[08:31:30] <JamesMGreene> Details details
[08:31:39] <JamesMGreene> \o/ leobalter
[08:31:48] <jzaefferer> Very much
[08:31:54] <jzaefferer> Is Krinkle here?
[08:32:02] <Krinkle> o/
[08:32:12] <leobalter> nice
[08:32:18] <jzaefferer> Released 1.15 on Friday, still need to update jQuery projects to make use of that
[08:32:21] * Krinkle is in London
[08:32:27] <Krinkle> Yep, saw that. nice work.
[08:32:45] <JamesMGreene> Our plugins need some updating for 1.15
[08:33:00] <jzaefferer> How so?
[08:33:10] <leobalter> I saw that issue on Composite
[08:33:11] <Krinkle> Personally I've switched various projects from grunt-contrib-qunit to karma-qunit (to have make it easier to test local browsers and/or sauce labs). It seems they fixed their peerDependency on qunit to 1.14 so it's a bit annoying.
[08:33:33] <JamesMGreene> Hmm, or some bug submitter lied
[08:33:33] <Krinkle> I've reached out to get them to change it to =>1.14.0 or something like that
[08:34:17] <JamesMGreene> This is why I assumed so:  https://github.com/JamesMGreene/qunit-assert-html/pull/8
[08:34:34] <jzaefferer> Every time npm fails to install based on mismatched peerDependencies, I rimraf node_modules and the full install then just works fine. Probably not what was originally intended, eh?
[08:34:51] <leobalter> JamesMGreene: this one
[08:35:36] <JamesMGreene> He appears to be accurate
[08:35:47] <leobalter> well, I'm working on a console reporter which I'll suggest in a future PR
[08:35:50] <Krinkle> jzaefferer: not in this case. They didn't want to include qunitjs in karma-qunit so that users can provide their own version, which is nice (so myproject.git devdepends on qunitjs 1.14 and karma-qunit: 1.whatever
[08:35:57] <JamesMGreene> Unofficial but formerly public `QUnit.addEvent` is internal to the HTML reporter now
[08:36:04] <Krinkle> but then they made the peerDependency so strict that it's basically useless
[08:36:14] <jzaefferer> Makes sense. As long as its only plugins using undocumented APIs it should be okay to just update the plugins
[08:36:45] <jzaefferer> Krinkle: yeah, that also seems to happen for grunt. Where one plugin wants one specific grunt version, no range at all
[08:38:07] <jzaefferer> Krinkle: do you have a link for the issue?
[08:38:22] <jzaefferer> leobalter: you've been experimenting with console reporters, right?
[08:38:29] <leobalter> yes
[08:38:46] <leobalter> I tried a TAP reporter but I'm rewriting it to make it user friendly
[08:38:59] <leobalter> TAP report got machine friendly only
[08:39:11] <leobalter> I did write this tap reporter: https://gist.github.com/leobalter/b1fe1f7b34f37a809e2d
[08:39:37] <leobalter> so I'm not making a simple console reporter with a verbose option
[08:40:01] <jzaefferer> I think there's various node modules that eat tap and output something nice
[08:40:06] <jzaefferer> saw that somewhere...
[08:40:17] <leobalter> and it's called by default WHEN there's no browser env or #qunit
[08:40:19] <JamesMGreene> Is the intent for the console reporter to support all of the crazy SSJS environments rather than just Node?
[08:40:32] <jzaefferer> here: https://github.com/substack/tape#pretty-reporters
[08:40:59] <leobalter> but I'm probably dropping turning it on when #qunit is not present, some people might want to use other reporter
[08:41:00] <jzaefferer> Was there an open issue for the console reporter?
[08:41:08] <leobalter> yes
[08:41:28] <leobalter> https://github.com/jquery/qunit/issues/576
[08:41:54] <leobalter> JamesMGreene: I'm simply printing some results to the console.log
[08:42:14] <leobalter> with that I'll try with that crazy envs issue
[08:42:32] <leobalter> my first intention is to make it node friendly without extra plugins
[08:42:45] <JamesMGreene> leobalter: Tangentially, do you recall all/most of the formerly public QUnit methods that were removed from the public API when the HTML reporter was separated?
[08:43:01] <jzaefferer> leobalter: have you looked at the `qunit` node module? I think it does (a lot) more then just console output
[08:43:48] <leobalter> JamesMGreene: @a5bee49 addEvent, addClass, removeClass, hasClass
[08:44:14] <JamesMGreene> Didn't `id` used to be public, too?
[08:45:34] <leobalter> JamesMGreene: was there too, @2000ed3
[08:45:42] <leobalter> and QUnit.extend
[08:46:01] <leobalter> jzaefferer: I should look at that
[08:46:04] <JamesMGreene> Aww, `extend` went away? :'(
[08:46:14] <leobalter> but I'm doing it pretty simple so far
[08:46:36] <Krinkle> karma issue https://github.com/karma-runner/karma-qunit/pulls
[08:46:39] <leobalter> QUnit.extend is still there
[08:46:40] <Krinkle> https://github.com/karma-runner/karma-qunit/pull/16
[08:46:44] <Krinkle> https://github.com/karma-runner/karma-qunit/pull/17
[08:47:04] <leobalter> Well, the console reporter won't be hard to solve
[08:47:28] <leobalter> the problem I'm facing now is upgrading QUnit to 1.15 on jQuery Core
[08:48:00] <leobalter> jQuery Core test suite is totally messed
[08:48:32] <leobalter> I did many tests on jQuery Core tests before the 1.15 release, as I did on jQuery UI and Mobile
[08:48:41] <leobalter> but now I'm getting a lot of failing tests
[08:51:25] <jzaefferer> Krinkle: Thanks, I subscribed to those two
[08:52:28] <jzaefferer> leobalter: let's bug some core team members about that
[08:53:07] <leobalter> nice, jzaefferer. Part of the problem is again related to qunit fixture. empty()
[08:53:13] <jzaefferer> m_gol markelog: one of you around?
[08:53:22] <markelog> hey
[08:54:07] <leobalter> o/ hey, we need shared work to place QUnit 1.15 jQuery Core
[08:54:32] <jzaefferer> leobalter is trying to update Core to QUnit 1.15, but got lots of failing tests, even with the version he was testing before successfully
[08:55:00] <jzaefferer> We've got the UI meeting coming up here in a few minutes. Let's take that discussion to #jquery-dev?
[08:55:10] <markelog> okay
[08:55:29] <jzaefferer> markelog: btw. now that 1.15 is out, Karma should be able to report number of tests (or assertions?) properly at the beginning
[08:55:51] <markelog> cool, will check it out
[08:55:54] <leobalter> https://github.com/leobalter/jquery/compare/jquery:master...leobalter:qunit-1.15?expand=1
[08:57:40] <leobalter> jzaefferer Krinkle JamesMGreene: I'll file the console reporter PR later today or tomorrow.
[08:58:21] <jzaefferer> okay, thanks. I'll check it out when I can
[09:00:15] <Krinkle> jzaefferer: markelog: Yeah, except that you can't use karma-qunit with qunitjs 1.15 right now
[09:00:30] <Krinkle> it's not a warning/notice from npm install, it's a fatal
[09:01:46] <jzaefferer> ah, right. Hopefully your second PR is accepted to fix that
[09:01:47] <markelog> Krinkle: something we can't fix?
[09:01:54] <JamesMGreene> g2g, biz mtg. Sorry
[09:02:04] <jzaefferer> markelog: this should help: https://github.com/karma-runner/karma-qunit/pull/17
[09:02:33] <markelog> i see, thanks
[09:03:10] <tj_vantoll> Do you guys need more time? We can hold off on UI for a few minutes.
[09:03:11] <jzaefferer> Anyway, time for the UI meeting. Ping fnagel gnarf kborchers mikesherov petersendidit tj_vantoll arschmitz scott_gonzalez
[09:03:20] <tj_vantoll> Good timing
[09:03:24] <jzaefferer> :-)
[09:03:25] <kborchers> hi
[09:03:27] <arschmitz> Hi
[09:04:02] <tj_vantoll> arschmitz: Do you want to start with a button update?
[09:04:15] <arschmitz> Sure
[09:04:31] <arschmitz> jzaefferer: did another round of reviewing
[09:04:33] <fnagel> hey
[09:04:37] <arschmitz> and i another of updating
[09:04:59] <jzaefferer> I started reviewing again today, not quite done yet
[09:05:09] <arschmitz> the focus outline i think looks good toned it down a little from the original
[09:05:28] <tj_vantoll> Do you have a link to the up-to-date demos?
[09:05:37] <arschmitz> yup
[09:06:14] <arschmitz> http://view.jqueryui.com/button-icon-span/demos/button/checkbox.html
[09:06:24] <arschmitz> that shows the focus outline
[09:07:31] <jzaefferer> I think that works pretty well on OSX. On Windows the outline is not consistent across browsers, so its hard to emulate. But it also doesn't stick out too much, since there is no consistent style anyway.
[09:07:54] <arschmitz> yeah there is no way to make it consistent with browsers
[09:08:09] <arschmitz> so i just kinda picked osx since it was fairly consistent and emulated that
[09:08:26] <tj_vantoll> I like it. At least I think it's the best we can do.
[09:08:34] <arschmitz> yup i think so to
[09:08:41] <jzaefferer> I guess it doesn't matter for most touch screens, since you don't get to see a focus outline anyway?
[09:08:52] <arschmitz> jzaefferer: you do when you tap
[09:08:57] <tj_vantoll> Yeah that ^
[09:09:11] <jzaefferer> Gotcha. I obviously didn't try that yet :-)
[09:09:47] <arschmitz> jzaefferer: can you still get the collapsing buttons in the demo when you tab
[09:09:52] <arschmitz> i cant make that happen
[09:10:00] <jzaefferer> Anyway, I think this works and is better then no focus indicator. Eventually wee'll see if people complain about it.
[09:10:15] <arschmitz> jzaefferer: and its just a single class with one prop
[09:10:18] <jzaefferer> arschmitz: was only on the buttons-label branch. I can check again later
[09:10:22] <arschmitz> so they can override easily
[09:10:23] <tj_vantoll> jzaefferer: Agreed. And people can always overwrite our styles with their own.
[09:10:30] <arschmitz> jzaefferer: ohhhhhhh
[09:10:36] <arschmitz> that was the demo
[09:10:45] <arschmitz> and i fixed it already because it was annoying
[09:10:58] <arschmitz> but not on that branch its only fixed in the main branch
[09:11:11] <tj_vantoll> arschmitz: So what's left to do?
[09:11:35] <arschmitz> just a few minor things from jzaefferer i think for button and checkboxradio
[09:11:37] <jzaefferer> arschmitz: btw. how old are these branches? It seemed like some style errors should get catched by jscs, like element[0] instead of elemenet[ 0 ]
[09:11:46] <arschmitz> then finish controlgroup
[09:12:02] <jzaefferer> Well, I haven't even started a detailed code review of checkboxradio
[09:12:15] <arschmitz> it has not been rebased in a bit
[09:12:19] <jzaefferer> But issues in button.js are pretty minor
[09:12:20] <arschmitz> i can re-rebase it if you like
[09:12:25] <jzaefferer> Okay, let's fix that, too
[09:12:29] <tj_vantoll> Sounds good.
[09:12:30] <jzaefferer> Yes please :-)
[09:12:32] <jzaefferer> Actually
[09:12:41] <jzaefferer> let's update jscs in master first, its now grunt-jscs
[09:12:55] <tj_vantoll> Oh
[09:13:02] <tj_vantoll> That's cool.
[09:13:14] <jzaefferer> Whoever had that originally gave it up
[09:13:15] <arschmitz> oh something else we may want to consider changing
[09:13:24] <jzaefferer> grunt-jscs-checker now outputs a deprecated warning
[09:13:29] <arschmitz> currently things like this.element are undefined in _getCreateOptions
[09:13:42] <arschmitz> because they have not been set yet at that point
[09:13:57] <arschmitz> i see no practical reason for this though
[09:14:13] <tj_vantoll> That does seem odd.
[09:14:15] <arschmitz> sorry not this.element
[09:14:22] <arschmitz> this.document and this.window
[09:14:27] <tj_vantoll> ah ok
[09:14:41] <tj_vantoll> Yeah I'd send a PR to change that.
[09:14:55] <jzaefferer> Moving those up seems fine, since they don't use options
[09:14:58] <arschmitz> i mentioned to scott when i noticed and he said we was pretty sure it was just an oversight when _getCreateOptions was added
[09:15:20] <arschmitz> but wanted to see if anyone else knew a reason why not to change
[09:15:32] <tj_vantoll> I say change it.
[09:15:42] <arschmitz> yeah its kind of a pain
[09:15:49] <tj_vantoll> Anything else on button?
[09:15:51] <arschmitz> nope
[09:16:04] <tj_vantoll> fnagel: Any updates on datepicker?
[09:16:51] <tj_vantoll> btw jzaefferer were you going to take care of updating jscs?
[09:17:05] <jzaefferer> I just tried grunt-jscs 0.6.2, brings us tons of jscs errors :/
[09:17:07] <fnagel> Worked a little on the rebase but nothing important. Tomorrow and friday will hopefully have more impact
[09:17:21] <jzaefferer> tj_vantoll: yeah, I may disable a check or two though to get this to pass for now
[09:17:30] <tj_vantoll> jzaefferer: Cool thanks
[09:17:44] <arschmitz> jzaefferer: can you let me know when your done and ill rebase then?
[09:18:15] <tj_vantoll> fnagel: Sounds good. Let me know when it's ready and I can take a look as well. I'd like to help out with datepicker again once we can get this PR merged in.
[09:19:19] <tj_vantoll> jzaefferer released 1.11.1 today.
[09:19:23] <jzaefferer> arschmitz: yep
[09:19:36] <tj_vantoll> We have 4 regressions still open http://bugs.jqueryui.com/query?status=!closed&keywords=~regression&report=40
[09:19:57] <tj_vantoll> The menu one we can't fix until 1.12.
[09:20:17] <tj_vantoll> The sortable one isn't new (it regressed in 1.10.2), but it now has 5 duplicates.
[09:20:42] <tj_vantoll> The scale effect one is fixed by the effects rewrite.
[09:21:01] <tj_vantoll> The autocomplete one is new http://bugs.jqueryui.com/ticket/10527
[09:21:17] <fnagel> tj_vantoll: yeah, it will take some more time. I need to squash a lot of commits and fix the unit test for each commit.
[09:21:43] <tj_vantoll> fnagel: Ok thanks
[09:22:17] <tj_vantoll> I'm going to take a look at the autocomplete + IE8 issue unless anyone else is interested.
[09:22:20] * rxaviers is here
[09:22:55] <tj_vantoll> Maybe we can convince mikesherov to look into #9335 (http://bugs.jqueryui.com/ticket/9335).
[09:23:38] <tj_vantoll> Apparently the latest draggable fixes introduced some test failures too: http://swarm.jquery.org/project/jqueryui
[09:24:39] <tj_vantoll> fnagel: Want to give an update on the selectmenu changes?
[09:25:06] <tj_vantoll> _renderButtonItem is just waiting for 1.12 right? (https://github.com/jquery/jquery-ui/pull/1299)
[09:25:11] <fnagel> yes
[09:25:31] <tj_vantoll> What about the attribute copying changes? (https://github.com/jquery/jquery-ui/pull/1298)
[09:25:43] <fnagel> This one is interesting as it seems its related to an older dialog fix: http://bugs.jqueryui.com/ticket/10543
[09:26:28] <fnagel> regarding attribute copying: scott wanted to do some more tests but its ready for selectmenu
[09:26:50] <fnagel> jzaefferer: I could need your help on this one: http://bugs.jqueryui.com/ticket/10458
[09:27:05] <fnagel> Seems this needs to be done in Menu typeahead
[09:27:51] <jzaefferer> fnagel: Okay, I'll check the details of that later
[09:28:47] <tj_vantoll> fnagel: Yeah the dialog issue (http://bugs.jqueryui.com/ticket/10543) is an interesting one
[09:29:08] <fnagel> general question: is it possible to configure trac to send me notifications on new comments when I commented an ticket? Or do I need to click "watch this"?
[09:29:15] <tj_vantoll> We added overflow: hidden to the dialog to fix a separate issue.
[09:29:32] <tj_vantoll> You have to watch it I believe.
[09:30:26] <fnagel> tj_vantoll: yep, I'm sure this worked (having a selectemnu in dialog) when I added selectemenu to the dialog_widgets.html visual demo as we fixed the ui-front mechanism in selectmenu
[09:30:43] <tj_vantoll> Here are your notification options: http://i.imgur.com/fxwWvSN.png
[09:30:47] <fnagel> tj_vantoll: ahh ok, good to know. I was missing the updates :-/
[09:31:19] <tj_vantoll> fnagel: Yeah the overflow: hidden change broke it.
[09:31:28] <fnagel> Found them before and added selectemnu widget to my watchlist
[09:31:43] <tj_vantoll> scott_gonzalez wants to find a fix for the other issue that doesn't involve overflow: hidden.
[09:31:53] <fnagel> So, this is a regression, right?
[09:32:18] <tj_vantoll> Well selectmenu released with this behavior, so… kind of?
[09:32:46] <fnagel> :-)
[09:33:13] <tj_vantoll> Last on the agenda is pointer events.
[09:33:34] <tj_vantoll> Apparently Polymer *just* deprecated their polyfill.
[09:33:40] <kborchers> yeah :/
[09:34:07] <jzaefferer> Without any replacement?
[09:34:26] <jzaefferer> So first an update that breaks out extension, then it gets abandoned?
[09:34:29] <kborchers> they are using a custome, non spec gesture library for polymer now
[09:34:34] <tj_vantoll> https://github.com/Polymer/polymer-gestures
[09:34:52] <tj_vantoll> So a gesture library rather than a polyfill.
[09:35:09] <jzaefferer> That doesn't help us, right?
[09:35:27] <kborchers> yep because the polyfill (and browser impl) seem to choke on shadow dom and since their focus is web components that is the priority
[09:35:32] <jzaefferer> I wonder if there is a brighter future for https://github.com/ibm-js/dpointer
[09:35:36] <kborchers> no it doesn't jzaefferer
[09:36:09] <kborchers> jzaefferer: maybe but
[09:36:26] <arschmitz> the support there is bad for browsers
[09:36:30] <arschmitz> android 4.1.1 +
[09:36:39] <kborchers> i hate to keep jumping ship every time someone else decides their done with something ... we need to decide what our plans are and stick with it
[09:36:49] <kborchers> we have gone through about 3 or 4 polyfills now for this
[09:37:11] <jzaefferer> Can we go back to what interactions were doing at some point, using mouse, touch or pointer events as available?
[09:37:21] <kborchers> the scary part is google has basically dropped pointer event impl over all
[09:37:34] <jzaefferer> That seemed to work well enough for us, and removes the external dependency
[09:37:46] <arschmitz> this poly fill solved so many problems for mobile too
[09:37:48] <tj_vantoll> Yeah Google is basically moving away from pointer events completely.
[09:37:57] <jzaefferer> "interactions" as in in the interactions branch, not what we have in master
[09:37:58] <kborchers> so that basically kills it since ~95% of browser seem to be going mouse+touch
[09:38:31] <tj_vantoll> https://twitter.com/tjvantoll/status/485083983147831296
[09:38:31] <b-ot> tj_vantoll: @tjvantoll: “Growing consensus at Google is that Blink shouldn’t invest in Pointer events at this time.” :( https://t.co/8rsZtd7DtT
[09:38:45] <jzaefferer> Let's have this discussion (again) when Scott is back?
[09:38:53] <tj_vantoll> Was just typing the same thing.
[09:38:56] <kborchers> jzaefferer: not sure what the best route is ... interactions still feels like a bandage for a big problem ... like vmouse
[09:39:16] <kborchers> yes, we should have a call when scott is back so we don't have to type through this
[09:39:18] <jzaefferer> arschmitz: can you write down how the polyfill was helping mobile? Would be good to know, since we've been mostly focusing on interactions here
[09:39:39] <tj_vantoll> I like the idea of a call when Scott is back.
[09:39:41] <kborchers> if we like the polyfill though, there is still a lot of work to do
[09:39:49] <arschmitz> yes
[09:40:24] <kborchers> i have started digging back in but there is a lot broken in older browsers since the polymer folks added support for shadow dom, breaking the fixes i had in place before and making it much worse
[09:40:32] <jzaefferer> If the rest of the "industry" abandons pointer events, it might be better for us to focus on a more specific solution
[09:40:39] <arschmitz> i got the polyfill working in ie8
[09:40:51] <arschmitz> but have to have a big file of polyfills to do it
[09:41:01] <kborchers> yeah, that's not an option
[09:41:13] <arschmitz> oh i know
[09:41:23] <kborchers> i am in the process of rewriting every bit of ES5 specific stuff they did .. .which is fun :/
[09:41:30] <jzaefferer> What's not an option?
[09:41:44] <kborchers> jzaefferer: big pile of polyfills on top of the polyfill
[09:41:49] <jzaefferer> Using es5 polyfills?
[09:41:50] <jzaefferer> Ah
[09:42:06] <arschmitz> yeah basicly it needs parts of both es5 shim and es5 sham
[09:42:24] <arschmitz> i have a full list of all the methods that need to be polyfilled to get it to work
[09:42:42] <kborchers> i have "fixed" everywhere theu used bind and Object.create(null) locally
[09:42:49] <jzaefferer> Would be good if both arschmitz and kborchers could write down their perspective on the polyfill. What did it solve, what is missing? Share that with the team and do a call do discuss next steps
[09:42:52] <kborchers> now trying to dive into Array.prototype.*
[09:43:05] <tj_vantoll> jzaefferer: agreed
[09:43:18] <jzaefferer> *to discuss
[09:43:26] <kborchers> yeah, i can pull stuff from the talks i have done on it :)
[09:43:30] <arschmitz> that works for me
[09:43:31] <tj_vantoll> We could consider assuming ES5 and providing an optional shim, but that's a separate discussion for another day.
[09:43:49] <tj_vantoll> That's the end of the agenda. Anyone have anything else? I was wondering if anyone had an Ubuntu install to test http://bugs.jqueryui.com/ticket/10542.
[09:43:52] <kborchers> tj_vantoll: yeah ... but for mobile that would be huge. but yes, we should consider all options
[09:43:54] <arschmitz> yeah i mean i suppose that the current state of globalize
[09:43:59] <jzaefferer> If that call happens after the 25th, I can join as well. Before then might be difficult.
[09:44:40] <kborchers> jzaefferer: i would like to try to do sooner rather than later but we'll see availability
[09:44:42] <tj_vantoll> kborchers: I agree, I'm just saying it's something to consider. Android 2.X are IE 8 are slowly getting less relevant everyday.
[09:44:49] <arschmitz> kborchers: my current file is about 350 lines of polyfilles
[09:45:00] <kborchers> i'll organize the call, please chime in if you want to be on it
[09:45:10] <tj_vantoll> :raises hand:
[09:45:19] <jzaefferer> kborchers: Sure, whatever works. Scott has a lot more to say about this than me anyway.
[09:45:48] <kborchers> right now the meeting witll be scott, jörn, alex, tj, me
[09:45:49] <arschmitz> id like to be on that call of course :-)
[09:45:59] <jzaefferer> Consider me optional
[09:46:04] <kborchers> ok
[09:46:34] <tj_vantoll> Anything else?
[09:47:10] <tj_vantoll> See everyone in #jqueryui-dev then.
[09:53:04] <jzaefferer> Thanks tj_vantoll
