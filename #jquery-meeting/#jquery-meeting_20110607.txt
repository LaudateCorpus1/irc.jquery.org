[11:00:14] <scottjehl_> hi
[11:00:19] <toddparker> Hey everyone!
[11:00:20] <gseguin> hi
[11:00:22] <kinblas> hey
[11:00:24] <_nickel> I'm actually here on time, though my relative value for the discussion is debatable :(
[11:00:31] <toddparker> The jQuery Mobile team meeting will start in a minute
[11:00:48] <toddparker> woo hoo. special day, we're all here with no technical glitches
[11:00:56] <toddparker> agenda here: https://docs.google.com/document/d/1kqZVgb9fcvv_hVWV8Vr62wgQB6sLJyDj1UDMFFiGbdA/edit
[11:01:51] <toddparker> Note: This meeting is for core mobile team members only so please don't jump in tif that's not you. Support for mobile is available on the #jquerymobile channel
[11:02:07] <toddparker> Ok, should we jump in?
[11:02:15] * _nickel nods
[11:02:24] <scottjehl_> sure
[11:02:31] <toddparker> ok, let's see where we're at on navigation
[11:02:51] <toddparker> decoupling & cleanup is 100% done right?
[11:03:16] <scottjehl_> think so - Kin?
[11:03:18] <kinblas> I think we still need to decouple a few more things, but for the most part
[11:03:28] <kinblas> what we need to move forward is done
[11:03:28] <toddparker> done enough for beta 1?
[11:03:30] <kinblas> yeah
[11:03:31] <toddparker> cool
[11:03:45] <kinblas> I just meant things like decoupling hashchanges, etc
[11:03:52] <kinblas> so folks don't need it if they don't want it
[11:03:57] <kinblas> but that can happen much later
[11:04:00] <toddparker> gotcha
[11:04:03] <toddparker> makes sense
[11:04:14] <toddparker> maybe create a new ticket for each of those so we can track
[11:04:20] <kinblas> yeah
[11:04:23] <toddparker> next item:
[11:04:24] <toddparker> ok, so the improved URL handling and base href stuff
[11:04:37] <toddparker> in a branch right now, right?
[11:04:46] <kinblas> I was hoping to have it done today, but I'm still fixing a few things
[11:05:01] <kinblas> and I've busted lots of the unit tests due to path utility name changes
[11:05:10] <kinblas> I'm focused on it today
[11:05:18] <kinblas> so hope to make some good progress today.
[11:05:18] <toddparker> cool
[11:05:24] <kinblas> the public branch is 'path-fixes'
[11:05:30] <toddparker> tell everyone to leave you alone
[11:05:43] <kinblas> so just so folks know
[11:06:00] <toddparker> great
[11:06:03] <kinblas> I'm trying to make it so that we can handle any relative variant, and also not drop query params
[11:06:11] <kinblas> etc
[11:06:34] <toddparker> right. do you need anything from us to wrap that up?
[11:06:37] <kinblas> once I land the last of my fixes (hopefully today) I need to test things on the devices
[11:06:39] <_nickel> I think thats expected by some of the integration tests currently
[11:06:41] <scottjehl_> sounds about right. Once we implement pushState, that'll become even more important
[11:06:44] <kinblas> and with phone gap where this stuff really matters
[11:06:48] <toddparker> yeah
[11:06:55] <gseguin> kinblas: Let me know when I can pull and test it against Jive's use case
[11:07:09] <toddparker> i'm here if you want me to test...give send me a (short) URL and list of devices
[11:07:15] <kinblas> gseguin: will do ... though I haven't done anything regarding URL hooks
[11:07:20] <toddparker> it's my priority to help you out on testing
[11:07:28] <kinblas> ok will do
[11:07:46] <toddparker> you mean the "extensibility hooks" item in the agenda
[11:08:35] <toddparker> is that the kind of thing where it should be tackled as a big, holistic thing or is it easy to add a hook or two now then keep adding later?
[11:08:36] <kinblas> yeah ... hooks include allowing developers to encode/decode the urls
[11:08:40] <kinblas> or I should format/unformat
[11:08:52] <toddparker> ah, so you mean just for URLs
[11:08:55] <kinblas> so for example they can stick our page hash urls in a query param
[11:09:09] <kinblas> no other hooks include pre-processing content after its loaded
[11:09:14] <kinblas> support for other formats like JSON
[11:09:15] <kinblas> etc
[11:09:40] <kinblas> folks like Jive and John R. are using JSON instead of HTML to load pages
[11:09:48] <toddparker> gotcha. let's land the core stuff first and create a wiki/issue to track the extensibility stuff, maybe for beta 2?
[11:09:51] <kinblas> but they're forced to tweak our source
[11:09:58] <kinblas> yeah
[11:09:59] <toddparker> that's bad
[11:10:22] <toddparker> are there any low-hanging fruit things we could do shorter-term?
[11:10:40] <kinblas> in terms of hooks?
[11:10:43] <scottjehl_> well, I think John R was setting some things up on touchstart/mousedown so that the page was present when ajax ran through. Pretty cool actually
[11:10:57] <scottjehl_> not modding source for it
[11:11:07] <scottjehl_> but anyway... we need hooks for sure :)
[11:11:12] <toddparker> sure do
[11:11:27] <kinblas> scottjehl: the more examples I have the better the decisions we can make on how to structure and place hooks.
[11:11:44] <toddparker> so yeah, i was asking if there were a few easy hooks to add this week or if this is a bigger thing that we should wait until beta 2
[11:12:11] * kinblas thinks
[11:12:26] <kinblas> we can add a hook for post-insert of a loaded page
[11:12:43] <kinblas> so folks can inject content or invoke their own widgets or whatever
[11:12:57] <kinblas> we can modify loadPage to take a contentType
[11:13:26] <kinblas> I was holding off on stuff like that till I could get a clear picture of things after the dust settled, but if someone else wants to think about and do it that's fine
[11:13:43] <toddparker> thoughts all?
[11:14:00] <toddparker> i think we should probably wait til beta 2
[11:14:03] <_nickel> Anyone have docs or information on the best way to provide hooks?
[11:14:09] <_nickel> out of curiousity
[11:14:12] <toddparker> i'd rather get beta 1 out sooner and with fewer bugs
[11:14:14] <scottjehl_> Kin, doesn't that pre-insert hook need to take place before ajax even goes out?
[11:14:35] <_nickel> before kin put his changepage hook in I was looking at the namespaced events provided by jquery but I haven't any idea what the issues involved might be
[11:14:39] <scottjehl_> (we can discuss later)
[11:14:41] <kinblas> this is why I was wanting to wait
[11:14:44] <toddparker> think so
[11:14:45] <kinblas> in theory what we want to do is
[11:15:04] <kinblas> give folks a chance to catch the raw data returned from the server so they can munge it
[11:15:25] <kinblas> there's also the phase where that resulting HTML data should be turned into  a DOM
[11:15:29] <toddparker> ...or generate pages on the fly from data already in JS?
[11:15:37] <kinblas> so we need a hook to allow them to do stuff before/after enhance
[11:15:42] <toddparker> lots of possible scenarios
[11:15:44] <kinblas> right
[11:15:47] <kinblas> toddparker: right
[11:15:58] <kinblas> that was the other thing i mentioned a while back
[11:16:07] <kinblas> was the idea of setting up loadHandlers
[11:16:10] <kinblas> based on content type
[11:16:17] <toddparker> yeah. let's wait and do some thinking on this
[11:16:17] <scottjehl_> yeah... they might have a JSON store for the whole app up front
[11:16:22] <scottjehl_> cool sounds good
[11:16:27] <toddparker> moving on...
[11:16:28] <kinblas> some loadHandlers will use ajax, others just build from data structures in memory
[11:16:29] <toddparker> Page caching on/off flag (Steven) - BETA 1
[11:16:29] <toddparker> Add a simple "don't cache" flag per page via a new data-cache attribute on the page div to tell framework to re-load it if shown again, default is “true” (re-use the page) but you can set data-cache="false" to tell the framework to re-load everytime it’s viewed
[11:16:30] <toddparker> Issue: https://github.com/jquery/jquery-mobile/issues/1554
[11:16:42] <toddparker> stevenblack has a pull for this i believe
[11:16:50] <toddparker> kinblas - exactly
[11:17:03] <kinblas> He has a pull for the basic utility for removing pages from the DOM
[11:17:09] <gseguin> I think he closed all his pull requests
[11:17:12] <toddparker> first question: critical for beta 1 or add it in beta 2
[11:17:20] <toddparker> did he?
[11:17:31] <kinblas> it wasn't hard
[11:17:34] <scottjehl_> we can add this one pretty easily
[11:17:39] <kinblas> you just look for the element by selector
[11:17:46] <scottjehl_> tomorrow maybe Kin and I can take a look
[11:17:58] <scottjehl_> I'd like to start with what Steven had, if it's available, and mod what we need to
[11:18:02] <scottjehl_> but either way
[11:18:09] <toddparker> scottjehl - that would be great, esp. if you could take the lead on landing that sucker
[11:18:21] <kinblas> it was just a selector lookup and compare against the first and last thing on the stack
[11:18:24] <scottjehl_> we can check into it tomorrow when I've got time for jqm again
[11:18:26] <toddparker> i agree with starting with steven's work
[11:18:39] <toddparker> sure. i'm making time for you this week.
[11:18:41] <scottjehl_> Kin: yeah. sounds good
[11:18:51] <toddparker> ok, so we'll try to land this for beta 1 if we can
[11:18:53] <scottjehl_> we'll get back in touch on that one
[11:19:09] <kinblas> so the snag with the caching stuff
[11:19:15] <kinblas> was the nested lists, according to steven
[11:19:24] <toddparker> yeah, it's a problem
[11:19:33] <scottjehl_> sure. I'm not sure of how much benefit it'll bring perf-wise, but it'll let folks hit the server when they want to
[11:19:46] <scottjehl_> yeah, is that in the agenda?
[11:19:49] <scottjehl_> nested lists?
[11:19:59] <toddparker> it is...we can discuss now
[11:20:00] <kinblas> it landed btw :-)
[11:20:09] <scottjehl_> they're always going to be hash-dependent, even if pushstate is in place
[11:20:09] * kinblas claps for gseguin
[11:20:11] <toddparker> woo hoo
[11:20:18] <toddparker> that is the ID issue, right?
[11:20:19] <scottjehl_> thanks gseguin :)
[11:20:19] <gseguin> /me blushing
[11:20:43] <gseguin> you're welcome
[11:21:07] <scottjehl_> nested lists and dialogs are the only widgets that'll require hash usage even in pushstate browsers. They'll always be JS dependent as well
[11:21:08] <kinblas> scottjehl: so the pushstate issue has to do with the fact that it has to always pont to real content?
[11:21:17] <toddparker> so the issue scottjehl_ is talking about is how to handle nested lists (and select menu dialogs) with Ajax off
[11:21:30] <scottjehl_> well, that's one thing
[11:21:48] <scottjehl_> but mainly, the nested list is in fact just an anchor reference to content within a page
[11:21:57] <scottjehl_> so we can't use pushstate for that
[11:21:59] <scottjehl_> needs to be #
[11:22:08] <toddparker> right. it's like an internal page ref
[11:22:21] <scottjehl_> (there's no server resource for that nested list)
[11:22:24] <scottjehl_> yep.
[11:22:29] <kinblas> on top of that it might not have a reference on it
[11:22:31] <scottjehl_> so that'll mean even more forking
[11:22:52] <toddparker> if we have pushstate, would that allow us to support # anchors again?
[11:22:59] <gseguin> oh btw, deep linking to a nested list still doesn't work though
[11:23:09] <toddparker> yeah?
[11:23:15] <_nickel> gseguin: neither does deep linking to dialogs
[11:23:16] <toddparker> do we have an issue for that?
[11:23:23] <scottjehl_> todd: yeah but not if we ALSO still support hashchange
[11:23:29] <toddparker> right
[11:23:30] <kinblas> gseguin: it doesn't work in a specific case I thought
[11:23:32] <scottjehl_> which I guess we will?
[11:23:46] <toddparker> think we have to if pushstate isn't well supported
[11:24:03] <_nickel> I thought the stance was that you can't deep link to dialogs
[11:24:17] <kinblas> _nickel: right
[11:24:33] <scottjehl_> that's true but they need to create a history entry
[11:24:33] <gseguin> kinblas: I'll double check and we'll take that offline
[11:24:34] <toddparker> think that's true
[11:24:36] <scottjehl_> so that'll use #
[11:25:38] <toddparker> ok, so moving on?
[11:25:41] <kinblas> gseguin: I just tested it, it works, it's just the listview in the app document case.
[11:25:55] <scottjehl_> if it used pushstate, it'd have to be a query string I guess. Which btw, we could still consider (we use a query param for nested lists as-is), but it seems more intrusive in non-hash urls
[11:26:09] <scottjehl_> we can move on, sure
[11:26:56] <toddparker> nested lists will be an issue if hashchange is broken too
[11:27:06] <toddparker> anyway, we can mull that stuff over
[11:27:14] <toddparker> kinblas - next is
[11:27:21] <toddparker> Same-page as a navigation target (Kin)
[11:27:21] <toddparker> Some developers are opting to repeatedly re-use the same container as a target for generated markup.  Think self-referent pages as a desirable feature design-wise (Steve to elaborate).
[11:27:28] <kinblas> That's part of the hooks discussion
[11:27:37] <toddparker> this is part of the url extensibility stuff really
[11:27:40] <_nickel> hmm
[11:27:42] <toddparker> right, moving on...
[11:27:53] <kinblas> the hooks we're talking about would allow you to catch a URL,map to specific page, and then modify it
[11:28:00] <toddparker> right
[11:28:03] <_nickel> same page nagivagation is dangerous unless we're dong it purely with hooks eh?
[11:28:08] <toddparker> right
[11:28:20] <kinblas> _nickel: yeah, it's an advanced case
[11:28:24] <kinblas> Jive is doing this
[11:28:27] <toddparker> a dev would need to handle all this themselves via hooks
[11:28:31] <_nickel> yes
[11:28:34] <toddparker> cool
[11:28:36] <_nickel> we can't do that in a generic way
[11:28:41] <_nickel> I thought long and hard about that one lol
[11:28:49] <toddparker> heh
[11:28:52] <toddparker> next
[11:28:56] <toddparker> scottjehl_
[11:28:57] <toddparker> Page show initial focus: can we handle this better? (Scott)
[11:28:57] <toddparker> We need to have focus brought to the top of the current page on transition for accessibility and keyboard/focus-based navigation
[11:29:09] <toddparker> have you had a chance to think about this?
[11:29:15] <toddparker> if not, we can move on
[11:29:33] <scottjehl_> I think we should talk on this one tomorrow morning
[11:29:40] <scottjehl_> but I have ideas to try out
[11:29:53] <scottjehl_> named anchors for one... heh
[11:29:55] <toddparker> ok, cool
[11:30:14] <toddparker> next
[11:30:20] <toddparker> kinblas
[11:30:22] <toddparker> Transitions: how to smooth out, eliminate blinking and jumpiness (Kin)
[11:30:41] <toddparker> there was that issue you responded to a few days ago, somewhat related
[11:30:50] <kinblas> So someone posted a patch for switching everything over to transitions
[11:30:56] <kinblas> *for* Android
[11:31:00] <toddparker> meh
[11:31:08] <toddparker> i agree with you
[11:31:16] <kinblas> Not sure we want to support both methods. We should just use one method
[11:31:27] <toddparker> google needs to de-crappify their browser
[11:31:34] <kinblas> but the key thing about his patch was that he was placing a translate3d() on the body
[11:31:40] <toddparker> great tweet about it being the IE6 of mobile browsers. so true
[11:31:46] <scottjehl_> transitions would mean scraping hardware acceleration in favor of gaining some browser support?
[11:31:57] <kinblas> that forces all rendering through the GPU pipeline, but it may have some significant memory implications
[11:32:07] <toddparker> = crashtastic
[11:32:10] <kinblas> heh
[11:32:20] <toddparker> that is dangerous bizness
[11:32:31] <kinblas> anyways, we can probably try it out with what we have, it would be a one line CSS change to try
[11:32:32] <toddparker> think we're going to have to look at this for beta 2...sound like a plan?
[11:32:39] <toddparker> ok, worth a shot
[11:32:48] <toddparker> maybe scott and i can give this a test tomorrow?
[11:32:53] <_nickel> can we send them a strong worded email?
[11:32:57] <toddparker> heh
[11:32:58] <_nickel> *strongly
[11:33:05] <kinblas> like in all caps?
[11:33:07] <kinblas> :-)
[11:33:14] <_nickel> just ask nicely for anti-aliasing at least?
[11:33:15] <toddparker> "please anti-alias your corners. kthanx."
[11:33:24] <_nickel> seriously
[11:33:32] <_nickel> :/
[11:33:47] <_nickel> hmm
[11:33:49] <_nickel> it is open source
[11:34:09] <toddparker> fix it _nickel!
[11:34:12] <_nickel> lol
[11:34:21] <_nickel> I was just thinking who I could bribe
[11:34:37] <kinblas> _nickel: this is in refernce to gpu for transitions/animations? Or for the rounded corners?
[11:34:48] <_nickel> both
[11:34:49] <_nickel> sorry
[11:34:53] <kinblas> they are working on it
[11:34:59] <_nickel> I'm just whining
[11:35:11] <kinblas> the 3d hooks are there in webkit, but every vendor needs to implement it
[11:35:15] <scottjehl_> what's up next
[11:35:19] <toddparker> self-invocation via binding to pagecreate + push/replacestate will be beta 2, right?
[11:35:41] <scottjehl_> self-invoke could happen sooner
[11:35:50] <kinblas> what does that mean?
[11:35:52] <scottjehl_> some quick testing will tell us how feasible
[11:35:52] <kinblas> :-
[11:35:57] <toddparker> like in the next day or two?
[11:36:14] <scottjehl_> that widgets init themselves by binding to pagecreate
[11:36:23] <toddparker> let's look at the blockers first to see...i might have some stuff for you to look at :)
[11:36:32] <toddparker> ...would be awesome tho
[11:36:34] <kinblas> scottjehl: any chance that will get rid of the need for mobilinit?
[11:36:34] <scottjehl_> and aren't called out individually in the page plugin
[11:36:45] <scottjehl_> no
[11:36:49] <scottjehl_> that's for globals
[11:36:51] <toddparker> but what about if you append markup to a page?
[11:37:06] <toddparker> needs to be a way to auto-update then, not just at pagecreate, right?
[11:37:06] <scottjehl_> (and widgets of course, but mostly globals)
[11:37:06] <kinblas> the mobileinit just feels wierd
[11:37:21] <kinblas> the way you have to go about using live() and a callback
[11:37:23] <toddparker> WE NEED MORE MAGIC
[11:37:36] <scottjehl_> suggestions on overriding globals another way are welcome :)
[11:37:53] <kinblas> the reason I asked about the self init thing
[11:38:03] <scottjehl_> Todd, if you append an input, you can call the widget method on it, right?
[11:38:09] <kinblas> was because I think the reason we have to do it that way is because some of the widgets initialize on JS load
[11:38:16] <scottjehl_> much more efficient that way
[11:38:36] <toddparker> think so, but people keep asking if there is a way to append a bunch of markup and say "enhancify"
[11:38:56] <kinblas> oh yeah, pull out the magic in page()
[11:38:58] <toddparker> basically, not need to pick through and call the refresh or plugin manually on each doodad in your markup
[11:39:00] <kinblas> into a callable function
[11:39:14] <toddparker> exactly.
[11:39:15] <kinblas> the enhance magic
[11:39:29] <toddparker> magicalUnicornRainbows()
[11:39:36] <kinblas> heh
[11:40:19] <toddparker> that is really the thing. people would be ok calling enhance() or whatever on their markup if it sort of worked like page where it auto-enhanced everything
[11:40:19] <scottjehl_> hmm... yeah we could think about that
[11:40:33] <toddparker> that might be even more useful
[11:40:43] <toddparker> cool...keep mulling that over
[11:40:48] <toddparker> that's it for nav!
[11:40:55] <scottjehl_> k
[11:40:59] <toddparker> eddiemonge - any update on the docs template?
[11:41:30] <toddparker> bueller?
[11:41:36] <toddparker> alrighty, moving on
[11:41:52] <toddparker> so i started making a short list of blockers for beta 1
[11:42:04] <eddiemonge> toddparker,  not yet but this week
[11:42:36] <toddparker> cool. if you can get that set up, i bet i can get some voluteers to help us fill it out
[11:42:55] <toddparker> so i *really* want to ship beta 1 very soon
[11:42:56] <toddparker> there is a new milestone you can assign issues to: https://github.com/jquery/jquery-mobile/issues?sort=created&direction=desc&state=open&page=1&milestone=5
[11:43:14] <toddparker> let's go thru a few items, some are more questions
[11:43:27] <toddparker> ChangePage() and Navigation paths refactor
[11:43:27] <toddparker> https://github.com/jquery/jquery-mobile/issues/1778
[11:43:54] <kinblas> issue 1778 wasn't due to the refactor
[11:44:14] <kinblas> anyways, the work I'm doing will make this consistent
[11:44:25] <kinblas> of course that will involve lots of unit test changes :-(
[11:44:48] <kinblas> because the unit tests rely on the old behavior (non site relative url)
[11:44:54] <scottjehl_> sounds good
[11:45:09] <scottjehl_> Todd: I need to duck out in 2-3 mins
[11:45:20] <toddparker> so is this issue still kind of open
[11:45:26] <toddparker> k
[11:45:37] <kinblas> yeah leave 1778 open until I land
[11:45:56] <toddparker> ok, but is should pretty much be fixed with the stuff in the branch right?
[11:45:59] <kinblas> just an fyi, this is only a problem if you programatically call changePage()
[11:46:09] <scottjehl_> these all appear to be nav items except for the radios one. I can look at that one tomorow
[11:46:18] <scottjehl_> sorry guys, gotta jump off
[11:46:21] <scottjehl_> thanks!!
[11:46:30] <kinblas> toddparker: yeah it will be consistent (fixed)
[11:46:30] <toddparker> ok, yeah those radios would be good for you to look at scott
[11:46:35] <toddparker> cool
[11:46:35] <kinblas> no matter how you invoke changePage()
[11:46:48] <toddparker> Double vclick - not an issue?
[11:46:49] <toddparker> https://github.com/jquery/jquery-mobile/issues/1787
[11:47:03] <toddparker> kin, you said this is probably operator error?
[11:47:08] <kinblas> I have to get more details before I can fix anything
[11:47:14] <kinblas> it's not happening for us?
[11:47:15] <kinblas> :-)
[11:47:26] <kinblas> I explained how things work in the issue but have not heard back
[11:47:31] <toddparker> ok, moving on. we'll see if he writes back
[11:47:44] <toddparker> iOS scroll position history broken in A4
[11:47:44] <toddparker> https://github.com/jquery/jquery-mobile/issues/1342
[11:47:45] <toddparker> Fixed?
[11:48:03] <kinblas> hmmm that's not showing up in the list
[11:48:04] <kinblas> for me
[11:48:25] <toddparker> #1342?
[11:48:50] <toddparker> i just can't tell what's up with this one
[11:48:56] <toddparker> i'll pass this to scott
[11:49:07] <_nickel> stepping out guys thanks! :D
[11:49:21] <kinblas> that's the scrolling one?
[11:49:23] <toddparker> thanks _nickel
[11:49:26] <toddparker> ya
[11:49:34] <toddparker> s'ok
[11:49:42] <toddparker> i just send this over to scott to look at
[11:49:45] <kinblas> well we fixed the scrolling/focus problem after A4
[11:49:51] <kinblas> remember that problem where things were chopped off?
[11:49:57] <kinblas> I'm wondering if this is related
[11:49:59] <toddparker> riiight
[11:50:14] <toddparker> but seems like people had issues after scott's commit
[11:50:21] <toddparker> the issue trail is kinda confusing
[11:50:30] <kinblas> oh yeah that is
[11:50:42] <toddparker> odd, right?
[11:50:43] <kinblas> the quote eddie posted in that issue was me talking to him on skype
[11:50:51] <toddparker> anyway, i'll see what scott says tomorrow
[11:50:57] <kinblas> ok should be fixed
[11:50:58] <toddparker> oh
[11:51:07] <kinblas> but lets let scott confirm?
[11:51:23] <toddparker> sure
[11:51:37] <toddparker> so kin, the next two issues seem like they are already on your radar
[11:51:38] <toddparker> AJAX requests broken due to incorrect host name
[11:51:38] <toddparker> https://github.com/jquery/jquery-mobile/issues/1640
[11:51:38] <toddparker> Ajax in Chrome & Android
[11:51:38] <toddparker> https://github.com/jquery/jquery-mobile/issues/1605
[11:51:59] <toddparker> i tagged them as b1 blockers anyway
[11:52:00] <kinblas> yes, they should be fixed already in my branch
[11:52:10] <toddparker> we can close a bunch of stuff when you land that stuff today/tomorrow
[11:52:13] <toddparker> ok, cool
[11:52:30] <toddparker> scott is going to look at those 2 radiobutton issue
[11:52:43] <toddparker> last item i had: Change page CSS error
[11:52:43] <toddparker> https://github.com/jquery/jquery-mobile/issues/1507
[11:52:50] <gseguin> I can give another look at #1507
[11:52:52] <kinblas> great, I haven't had the bandwidth to engage folks on that issue at all
[11:53:00] <toddparker> gseguin - that would be great!
[11:53:26] <gseguin> looks like the last fix failed, I'll spend some time on it after lunch
[11:53:36] <toddparker> that's fine kin. i'd rather keep you focused on navigation. always better to have you looking at one big gnarly issue at a time
[11:53:42] <toddparker> great
[11:54:02] <toddparker> are there any other issues that seem really bad that we should try to fix for beta 1?
[11:54:04] * kinblas puts his blinders back on
[11:54:09] <toddparker> anything that jumps out
[11:54:12] <kinblas> dates!
[11:54:21] <toddparker> for the release?
[11:54:31] <kinblas> betas and releases
[11:54:38] <kinblas> we need to come up with some strawman dates
[11:54:51] <kinblas> and put that against availability/projects
[11:55:04] <toddparker> agreed. we had some already but we're already off by at least a week :0
[11:55:23] <toddparker> do you think we can get nav and these few items in good shape for thursday?
[11:55:31] <kinblas> I have folks asking me internally all the time for dates
[11:55:34] <gseguin> do you think beta 1 will happen this week?
[11:55:39] <toddparker> if so, we can target beta 1 for friday
[11:55:41] <kinblas> they're getting tired of me shrugging my shoulders :-P
[11:55:45] <gseguin> same here
[11:55:50] <toddparker> gseguin - how much time do you have this week
[11:55:52] <toddparker> me too!
[11:56:04] <gseguin> I have this afternoon
[11:56:11] <gseguin> and Thursday I think
[11:56:19] <toddparker> generally, i think beta 1 will happen this week or very early next
[11:56:29] <gseguin> actually just half of this afternoon
[11:56:40] <toddparker> beta 2 should happen by july 4th!!!
[11:56:58] <toddparker> 1.0 sometime in mid august
[11:57:15] <kinblas> I'll be back August 1st
[11:57:24] <toddparker> looking at where we are, i think a lot of the bigger items are getting wrapped up
[11:57:40] <toddparker> we have a ton of issues but i think i can close a lot soon
[11:57:50] <kinblas> once we get the big stuff done
[11:57:54] <kinblas> we can jam on the issues
[11:57:59] <toddparker> it will be good to have a few weeks of your time before 1.0 kin
[11:58:02] <toddparker> yeah
[11:58:04] <kinblas> we tend to fix a lot of them when we're not distracted with big ticke items
[11:58:12] <toddparker> i'm trying to free up some of scott's time
[11:58:17] <toddparker> yeah
[11:58:26] <toddparker> we've just been slammed with the globe project
[11:58:32] <kinblas> I can imagine
[11:58:35] <kinblas> gots to feed the kids
[11:58:46] <toddparker> yep. gots to deliver the e-newspaper
[11:58:49] <kinblas> heh
[11:59:03] <toddparker> so let's all try to crank the next 2 days
[11:59:13] <toddparker> scott will be on this tomorrow for sure too
[12:00:03] <toddparker> the nav changes are the only big ticket item right now
[12:00:08] <toddparker> the other issues are pretty small
[12:00:15] <toddparker> and it seems like you're close
[12:00:21] <kinblas> yeah
[12:00:23] <toddparker> so let's just push hard for friday
[12:00:33] <kinblas> ok, then I'm going to get back to work :-P
[12:01:33] <kinblas> toddparker: I think I tagged all of the blockers with my name (minus the css ones)
[12:01:53] <kinblas> I think we'll be able to close all of them soon.
[12:02:20] <kinblas> Any other issues?
[12:03:39] <toddparker> not that i can see, but i'll comb though the issues to see if there are any baddies we should close for beta 1
[12:03:49] <toddparker> thanks all...back to work!
[12:03:50] <kinblas> ok
[12:03:57] <gseguin> ok
