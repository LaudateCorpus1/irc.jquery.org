[09:00:11] <jaubourg> hi there
[09:00:19] <DaveMethvin> hey jaubourg !
[09:00:24] <DaveMethvin> timmywil is here too!
[09:00:36] <jaubourg> (I'll have 20 minutes only as usual :/)
[09:00:40] <jaubourg> sup guyz
[09:00:41] <jaubourg> ?
[09:00:47] <timmywil> yo ho!
[09:01:18] <DaveMethvin> alright now the party can start!
[09:01:30] <DaveMethvin> don't see markelog
[09:01:34] <DaveMethvin> m_gol is here?
[09:02:10] <jaubourg> in case somebody missed this one: https://github.com/jquery/jquery/commit/d0e5c0447775239edc7819960b7c61b4b71d402f
[09:02:40] <timmywil> oh, did we decide on gh issues? hooray!
[09:02:43] <DaveMethvin> ok I did
[09:03:01] <DaveMethvin> so the infra team has been fighting hackers for more than a week now
[09:03:08] <DaveMethvin> they broke into jquery.com
[09:03:09] <gibson042> I saw it but have yet to do anything with it
[09:03:14] <DaveMethvin> then they DDoSed us
[09:03:28] <DaveMethvin> so it's been a mess, they're really overworked and stressed out
[09:03:46] <DaveMethvin> that's part of my reasoning about Trac, it's  just one less thing to worry about
[09:03:49] <jaubourg> I just don't get the interest of hackers into disrupting jquery :/
[09:04:02] <DaveMethvin> and I can't figure out how anyone is getting Trac to even load pages
[09:04:07] <DaveMethvin> it doesn't seem to do it for me
[09:04:22] <DaveMethvin> i've gone in several times over  hte past few weeks to triage tix and can't get it to load
[09:04:25] <jaubourg> yeah, I tried to log in to close an issue and I just couldn't
[09:04:35] <DaveMethvin> could be part of the DDoS I guess
[09:04:47] <DaveMethvin> although i think Trac does a pretty good job of DDoSing itsel
[09:04:58] <jaubourg> probably but that's another argument for offloading this responsibility to a third party like gh
[09:05:19] <DaveMethvin> yeah
[09:05:34] <timmywil> jaubourg: haven't you heard? jquery is evil.
[09:05:42] <DaveMethvin> lol yeah!
[09:05:55] <DaveMethvin> that's why 77% of the top 100k web sites use it too
[09:06:00] <jaubourg> well, we have team members working with drones on their spare time... so that's that :P
[09:06:09] <DaveMethvin> i work for the NSA
[09:06:14] <DaveMethvin> oh damn, now they'll have to kill me
[09:06:16] <jaubourg> I KNEW IT!!!!111
[09:06:33] <DaveMethvin> ok
[09:06:49] <timmywil> .tweet timmywil
[09:06:50] <b-ot> timmywil: @timmywil: "Trac does a pretty good job of DDoSing itself" - @davemethvin
[09:07:22] <DaveMethvin> so to move over, we need to set up GH issues and move open ticket
[09:07:27] <DaveMethvin> any volunteers for that?
[09:07:33] <DaveMethvin> i think we have <100 tix
[09:07:44] <DaveMethvin> there may be a way to import them
[09:07:49] <timmywil> Could be a group effort. Move over your own tix?
[09:07:58] <DaveMethvin> yeah, that works
[09:08:04] <DaveMethvin> except for the unowned ones :)
[09:08:12] <timmywil> true
[09:08:13] <jaubourg> I thought the idea was to close the existing ones on trac itself, just closing it
[09:08:16] <timmywil> we don't care about those
[09:08:32] <timmywil> NO BUGZ LOOK
[09:08:32] <DaveMethvin> oh i guess the gh hook will still work, right jaubourg
[09:08:39] <DaveMethvin> so we could just create new issues
[09:08:48] <DaveMethvin> does that seem reasonable?
[09:08:57] <DaveMethvin> leave the old ones on trac
[09:08:59] <jaubourg> yeah, I don't really see the interest of porting only the opened tix anyway
[09:09:02] <timmywil> good idea
[09:09:16] <DaveMethvin> ok then, i can turn on gh issues
[09:09:30] <DaveMethvin> and change the message on the main page to direct ppl to gh
[09:09:52] <jaubourg> can I jump frantically now? \o/
[09:10:55] <DaveMethvin> yes!
[09:11:10] <jaubourg> =)
[09:11:41] <DaveMethvin> ok then, i'll do that later today
[09:12:05] <DaveMethvin> gotta figure out how to turn off logins in trac
[09:12:11] <DaveMethvin> and account creation
[09:13:02] <DaveMethvin> mikesherov: did you talk to domenic about the Promise error handling?
[09:13:25] <timmywil> well, keep in mind we need to retire existing open issues before we can disregard it completely.
[09:14:09] <DaveMethvin> yeah, we still may want to port over some tickets if it makes sense but we can look at each case
[09:14:23] <DaveMethvin> and we'll still need it to be up so we can refer to tickets
[09:14:46] <DaveMethvin> jaubourg: are you pretty happy with the Promise/A PR now?
[09:15:11] <jaubourg> the PR is outdated but the branch I stole from m_gol passes all Promise/A+ tests
[09:15:17] <jaubourg> so yeah
[09:15:34] <DaveMethvin> just needs to be smaller i guess
[09:15:36] <DaveMethvin> ideally at least
[09:15:43] <jaubourg> those tests are not running in the browser yet though
[09:16:10] <jaubourg> yeah, the spec is stubborn regarding great many things
[09:16:18] <gibson042> I still think it will fail in a `jQuery.Deferred().done( fnThrows ).then( fnNeverCalled )` scenario
[09:16:40] <DaveMethvin> which is okay since it didn't become promise/A until later :)
[09:16:42] <jaubourg> yeah and it shouldn't handle it
[09:16:48] <gibson042> it certainly should
[09:16:53] <jaubourg> or else we break back compat completely
[09:17:19] <gibson042> we already are
[09:17:25] <jaubourg> why should it? Just use .then()
[09:17:33] <jaubourg> only regarding then
[09:17:48] <gibson042> that's my point, .then (which is defined by spec) can be broken by .done
[09:17:48] <jaubourg> and we have pipe as a save guard for people to transition
[09:17:49] <DaveMethvin> yeah, .done() is outside Promise/A so that's a pretty strange case
[09:18:02] <DaveMethvin> if you mix stuff it's gonna get confusing
[09:18:06] <jaubourg> we are standard compliant
[09:18:10] <gibson042> we can't stop people from mixing
[09:18:16] <jaubourg> that was the goal
[09:18:24] <timmywil> gibson042: it's not a big problem. Promises/A fanatics won't use done
[09:18:36] <DaveMethvin> .done() doesn't have error-swallowing semantics tho
[09:18:42] <gibson042> but they could *receive* a Deferred that has had .done applied to it
[09:18:49] <gibson042> from code they don't control
[09:19:05] <gibson042> DaveMethvin: nor should it
[09:19:15] <gibson042> I'm saying that use of .done should not break .then
[09:19:30] <DaveMethvin> gibson042: do you want to propose a fix for that?
[09:19:40] <timmywil> yea, let's look at the changes
[09:19:46] <jaubourg> I completely opposed to that
[09:19:57] <DaveMethvin> i want to see what the impact is
[09:19:59] <jaubourg> breaking a single method is one thing
[09:20:06] <jaubourg> messing the entire interface is another
[09:20:38] <jaubourg> and my 20 minutes of availabilty are up
[09:20:41] <gibson042> I'm not talking about changing .done functionality; this is still in-scope for .then
[09:20:45] <jaubourg> :/
[09:20:58] <timmywil> yea, I think it could be changed without touching done
[09:21:08] <jaubourg> well, if you want done to catch exceptions, you ARE changing its functionality
[09:21:26] <jaubourg> but heh, gotta fly
[09:21:31] <gibson042> I don't want done to catch exceptions
[09:21:33] <jaubourg> cya guys :)
[09:21:36] <DaveMethvin> ok thanks JamesMGreene
[09:21:38] <DaveMethvin> jaubourg:
[09:21:41] <DaveMethvin> that's the one
[09:21:51] <JamesMGreene> You're welcomed :-P
[09:21:54] <DaveMethvin> hah
[09:22:12] <timmywil> gibson042: what are you proposing exactly?
[09:22:21] <DaveMethvin> i have a related discussion in the topic on compat below
[09:22:45] <timmywil> I see a few options
[09:22:58] <gibson042> basically, that .then callbacks are handled before .done
[09:23:11] <DaveMethvin> so to wrap this point up, gibson042 were you going to propose something via code here?
[09:23:16] <gibson042> yes
[09:23:18] <DaveMethvin> ok
[09:23:29] <DaveMethvin> i'm open to it, just want to be sure we know the impact
[09:23:41] <timmywil> yea, that's one option, the other is to only catch exceptions if there's a .then
[09:24:17] <DaveMethvin> well it relates to the discussion on versioning so i moved that next
[09:24:21] <gibson042> I will put up some code
[09:24:26] <DaveMethvin> thanks!
[09:24:58] <dcherman>  
[09:25:15] <DaveMethvin> so i am wondering whether we could stay with the 1.x branch being the old behavior ... with this logic:
[09:25:33] <DaveMethvin> the reason we wanted to change .then() was becaues of $.xhr
[09:25:47] <DaveMethvin> if you look at $.xhr i am not sure we can even do it on IE8
[09:26:05] <DaveMethvin> it doesn't support the full XHR interface
[09:26:14] <DaveMethvin> which is why 1.x  uses polling and can't catch as many errors
[09:26:26] <DaveMethvin> so we would have to really mangle it to make it work
[09:26:46] <DaveMethvin> so maybe it makes sense to do this only for master?
[09:27:17] <DaveMethvin> and if we make this 3.x we could be okay in doing that
[09:27:33] <DaveMethvin> but then keep 1.x unchanged, and say this is the point where API compat diverges
[09:27:51] <DaveMethvin> thoughts?
[09:29:05] <gibson042> I want any changes to cut across both
[09:29:14] <gibson042> at least for Deferred
[09:29:34] <gibson042> it would be a nightmare to maintain divergence there
[09:30:07] <DaveMethvin> yeah i can see where that could be a pain
[09:30:19] <DaveMethvin> i don't know how to get $.xhr to work in oldIE tho
[09:30:35] <DaveMethvin> i should have written down the probs i found
[09:30:36] <timmywil> gibson042: sounds like the right course until we drop support for old IE completely.
[09:30:59] <DaveMethvin> dropping oldie is basically dropping 1.x
[09:31:06] <timmywil> well, I think having $.xhr as modern-only is a separate issue
[09:31:10] <gibson042> agreed
[09:31:50] <DaveMethvin> i do get nervous about changing Deferred a lot
[09:32:11] <gibson042> the API changes are actually minor; it's the implementation that gets reworked
[09:32:22] <DaveMethvin> lots of installed base that uses .then() and doesn't deal with errors i suspect
[09:32:41] <DaveMethvin> so we need some way to bark about that
[09:32:53] <timmywil> DaveMethvin: right, but the current behavior is to just crash right?
[09:33:04] <gibson042> right
[09:33:10] <DaveMethvin> right, but crashing fires window.onerror and barfs on the console
[09:33:13] <DaveMethvin> so it can be noticed
[09:33:16] <timmywil> we'll get complaints like, "my app keeps working"
[09:33:24] <gibson042> this is where the reporter comes in
[09:33:24] <DaveMethvin> but doesn't do what i told it to
[09:33:29] <DaveMethvin> right
[09:33:34] <DaveMethvin> we talked about the reporting interface
[09:33:44] <DaveMethvin> which would yell about the errors
[09:33:54] <DaveMethvin> unhandled deferred rejections
[09:34:34] <timmywil> would it just report to the console, or would it rethrow?
[09:34:54] <DaveMethvin> well either way you've screwed up :)
[09:35:01] <DaveMethvin> it can do either if it's a hook
[09:35:13] <DaveMethvin> ok so if we introduce breaking changes we need to rename/renumber both branches
[09:35:14] <timmywil> true
[09:35:21] <DaveMethvin> which was the point of this topic
[09:35:35] <timmywil> oh, sure, I assumed as much
[09:35:38] <DaveMethvin> unless we're going to introduce them on a minor, which people now think is a bad thing
[09:35:55] <DaveMethvin> and we need two different package names most likely in npm
[09:36:04] <timmywil> wellll, I think it's understood that jQuery doesn't follow semver
[09:36:16] <DaveMethvin> but now we're on npm
[09:36:19] <timmywil> our "minor" has always been more like major
[09:36:20] <DaveMethvin> and npm follows semver
[09:36:33] <DaveMethvin> it's like a transitive thing :)
[09:36:35] <timmywil> ok, yea, that doesn't affect more people
[09:36:50] <timmywil> so, what, 3.x and 4.x?
[09:37:00] <DaveMethvin> well if it's in one package, yes
[09:37:16] <DaveMethvin> but then people are doing some pretty crazy version ranges to ensure they don't break
[09:37:19] <timmywil> hmm, two repos?
[09:37:24] <DaveMethvin> two packages
[09:37:27] <gibson042> one repo, two packages
[09:37:39] <timmywil> jquery-legacy or something?
[09:37:48] <gibson042> :D
[09:37:59] <timmywil> I'm fine with that.
[09:38:12] <DaveMethvin> that's what was proposed, i'm a bit concerned that 95% of people will need and use legacy
[09:38:18] <DaveMethvin> that seems sad
[09:38:27] <DaveMethvin> but pretty much necessary on the internet
[09:38:39] <gibson042> we might be able to soften the name
[09:38:44] <timmywil> I don't think that's a problem
[09:38:51] <timmywil> the latest version on npm right now is 2.x
[09:38:59] <gibson042> but I agree that it will be the more heavily used
[09:39:19] <DaveMethvin> does jquery-web sound too general?
[09:39:22] <timmywil> If they're using legacy + npm, they are specifying 1.x versions and it just won't update
[09:39:31] <DaveMethvin> with the idea that most general WEB sites want the best compat
[09:39:59] <DaveMethvin> if you're doing an app you'd prob want 2.x
[09:40:01] <timmywil> not a big fan of that one. they're both for the web
[09:40:05] <DaveMethvin> yeah i know
[09:40:12] <DaveMethvin> just that legacy sounds like -ghetto
[09:40:25] <timmywil> jquery-compat?
[09:40:34] <timmywil> queue from lodash
[09:40:41] <DaveMethvin> yeah maybe compat
[09:40:56] <DaveMethvin> oh and version numbers
[09:41:07] <gibson042> 3.0.0
[09:41:17] <DaveMethvin> so if jquery master goes to 3.0 with this, what is jquery-compat or whatever?
[09:41:29] <DaveMethvin> 3.0.0 as well?
[09:41:30] <timmywil> 1.0.0?
[09:41:38] <gibson042> also 3.0.0
[09:41:42] <timmywil> ok 3.0
[09:41:43] <gibson042> we'd match them
[09:41:45] <DaveMethvin> i think starting from 1.0 will confuse people
[09:41:54] <DaveMethvin> or we could start from 1.12 :)
[09:41:57] <gibson042> lol
[09:41:59] <timmywil> heh, whatever we do will confuse people
[09:42:08] <DaveMethvin> yeah
[09:42:15] <DaveMethvin> even i'm confused
[09:42:35] <timmywil> 3.0 is fine
[09:42:56] <timmywil> we can keep up release parity
[09:42:59] <DaveMethvin> ok so jquery-compat 3.0, jquery 3.0
[09:43:14] <DaveMethvin> we usually have enough to rev both when we've made new versions
[09:44:33] <timmywil> bio
[09:44:53] <DaveMethvin> bio?
[09:45:32] <timmywil> back in one
[09:45:50] <DaveMethvin> so gibson042 i'm in yer cursor changing yer words
[09:46:17] <gibson042> for today's minutes, or past?
[09:46:27] <gibson042> ah
[09:46:28] <gibson042> cool
[09:47:09] <DaveMethvin> ok im getting comfortable with jquery-compat
[09:49:38] <DaveMethvin> so gibson042 what's your feeling on the $.xhr api?
[09:51:28] <gibson042> I'm putting something a little more thorough together now
[09:51:36] <gibson042> didn't quite have it ready for this meeting
[09:52:29] <DaveMethvin> you and me both
[09:53:25] <DaveMethvin> the chaining api is growing on me, wonder if we could build $.get and $.post on it (rather than ajax) in 3.0?
[09:53:43] <DaveMethvin> i guess not if it turns out it can't work with oldie tho
[09:55:24] <DaveMethvin> http://blogs.msdn.com/b/ieinternals/archive/2009/07/23/the-ie8-native-xmlhttprequest-object.aspx
[09:55:26] <gibson042> I think it can work
[09:57:11] <DaveMethvin> it's always a pain finding the older authoritative docs for IE
[09:57:21] <DaveMethvin> since they tend to upgrade the page in place
[09:57:33] <DaveMethvin> without explaining what was broken in the old verison
[09:57:35] <DaveMethvin> version
[09:57:51] <DaveMethvin> i have another meeting at 1pm so i've got to take off
[09:58:24] <DaveMethvin> we didn't get to the one PR  you have on the cloned props gibson042
[09:58:36] <DaveMethvin> but markelog wasn't here to discuss anyway
[09:58:36] <gibson042> I'm ok with keeping that discussion on the PR
[09:58:38] <gibson042> and async
[09:58:40] <DaveMethvin> ok
[09:58:47] <DaveMethvin> in that case, let's bail!
[09:58:49] <DaveMethvin> thanks
