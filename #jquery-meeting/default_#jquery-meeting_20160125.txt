[12:01:57] <timmywil> DaveMethvin|away, m_gol, gibson042 https://docs.google.com/document/d/1uhcW9_TlSwD8JnO1_HNnSYJAriTK9WYZ8uQNDvtAAhA/edit
[12:03:39] <timmywil> heyheyhey
[12:03:49] <m_gol> hi
[12:04:03] <timmywil> who's here?
[12:04:15] <markelog> hey-hey
[12:04:32] <timmywil> coo
[12:04:33] <markelog> i was almost late
[12:04:37] <markelog> wow
[12:04:48] <timmywil> you made it!
[12:05:07] <markelog> yepsies )
[12:05:27] <markelog> and today we released new version of jscs )
[12:05:34] <timmywil> gibson042 opened this https://github.com/jquery/jquery/issues/2863 for toggling disconnected nodes.
[12:05:37] <timmywil> markelog: nice!
[12:05:48] <markelog> thanks timmy )
[12:06:06] <timmywil> I see his point. It does seem a little weird that displays can be locked in by disconnecting the nodes.
[12:06:38] <markelog> it could be locked the same way with connected elements too
[12:07:07] <timmywil> How so?
[12:07:23] <markelog> well, if there is an inline display, and we saved it in data
[12:07:31] <timmywil> locking in inline display is okay. This is locking in computed.
[12:08:12] <markelog> what quote are you referring to?
[12:08:25] <timmywil> quote?
[12:08:47] <timmywil> I'm just talking
[12:09:34] <markelog> at some point we can take defaultDisplay
[12:09:49] <markelog> which could happen even if element is connected or not
[12:10:05] <markelog> but i'm not sure if gibson referring to this situation
[12:10:19] <markelog> i think he means who we treating detached elements in toggle
[12:10:27] <markelog> before
[12:10:29] <markelog> in show/hide
[12:10:41] <markelog> we checked if element is connected with isHidden
[12:10:47] <markelog> now we doing it only in toggle
[12:10:57] <timmywil> Yea, there's the case of retrieving a default display for display:none, but this is retrieving a default display for no other reason than being disconnected.
[12:11:18] <markelog> so in one place, logic is old, in showHide it is new
[12:11:29] <timmywil> it could be hidden or shown when attached, we don't know. But this does affect how we interact with responsive stylesheets.
[12:11:49] <markelog> yeah, we don't
[12:11:59] <markelog> but we do what user actually asked us to do
[12:12:07] <markelog> so if user makes mistakes it is on them
[12:12:29] <markelog> situation with responsive styles is impoved
[12:12:35] <markelog> but it would be improved either way
[12:12:52] <markelog> whenever or not we use new logic or old
[12:13:01] <timmywil> The more we avoid locking in a display, the more it's improved.
[12:13:11] <timmywil> so this is an either/or situation.
[12:13:21] <markelog> no-no
[12:13:23] <markelog> that is the point
[12:13:29] <markelog> it is either
[12:13:50] <markelog> the thing is
[12:13:59] <markelog> if we change the logic to back how it was
[12:14:10] <timmywil> the way I see it, if we choose to keep the current behavior, the display gets cached and we don't respect responsiveness.
[12:14:24] <markelog> meaning treating detached elements as if they are hidden or not
[12:14:33] <markelog> we still wouldn't lock the display
[12:14:39] <markelog> as much as we did before
[12:15:45] <timmywil> oh, which logic are you referring to? The most important change for me is dropping the computed display check in hide. I consider everything else secondary.
[12:16:06] <markelog> yeah, i'm not saying we should change hide logic
[12:16:08] <markelog> hide is perfect
[12:16:10] <markelog> show isn't
[12:16:24] <timmywil> ok cool
[12:16:30] <markelog> let me give you code links
[12:16:33] <timmywil> thanks
[12:16:50] <timmywil> I've probably seen it, but there's a lot bouncing around in my head on this topic.
[12:17:08] <markelog> in that ticket we talking about this - https://github.com/jquery/jquery/blob/master/src/effects.js#L482
[12:17:27] <markelog> before it was called isHidden
[12:17:32] <markelog> you know, you change it )
[12:17:36] <timmywil> yea
[12:17:57] <timmywil> I mean, the within tree part still makes sense to me, but I'm not sure how disconnected elements fit in
[12:18:00] <markelog> so in show/hide
[12:18:07] <timmywil> I could go either way
[12:18:10] <markelog> we had this
[12:18:10] <markelog> https://github.com/jquery/jquery/blob/2.2-stable/src/css.js#L201
[12:18:16] <markelog> but now
[12:18:20] <markelog> logic is reversed
[12:18:58] <markelog> https://github.com/jquery/jquery/blob/master/src/css/showHide.js#L57-L63
[12:19:12] <markelog> so now we have a discrepancy
[12:19:32] <markelog> we treating detached nodes differently
[12:19:41] <timmywil> ok, old way, it was saying if disconnected, set a display, right?
[12:19:52] <markelog> always set display
[12:20:01] <markelog> basically, if we called hide()
[12:20:05] <markelog> we would add display:none
[12:20:14] <markelog> if show() display: block or something
[12:20:16] <markelog> now
[12:20:26] <markelog> we it works only for hide()
[12:20:31] <markelog> it*
[12:21:00] <markelog> gibson saying something about respecting inline style
[12:21:05] <markelog> which i don't get
[12:21:45] <markelog> it is very hard to understand, the whole thing i mean )
[12:22:11] <markelog> since gibson is not here we can table this discussion if you want
[12:25:30] <timmywil> I see what you're saying now, but I think gibson is saying that we can work solely with inline displays on disconnected elements without changing what we do for connected ones. The advantage there is we don't presume the default display for the element is the right one.
[12:26:59] <timmywil> Anyway, we should talk more when gibson is here.
[12:27:05] <markelog> hm, i see
[12:27:19] <markelog> i still think my way is better )
[12:27:28] <timmywil> ha ok
[12:27:31] <markelog> like, i don't why we need to change it
[12:27:36] <timmywil> let's discuss it more in the ticket
[12:27:50] <markelog> it is smaller, more perf and all that
[12:28:00] <markelog> but i liked you get it timmy )
[12:28:18] <markelog> means you can take informed desion
[12:28:27] <timmywil> I hope so
[12:28:31] <markelog> *decision
[12:28:55] <timmywil> https://github.com/jquery/jquery/issues/2841 I don't think we'll get any pushback from the team on this one.
[12:29:10] <markelog> +1
[12:29:22] <timmywil> cool
[12:29:33] <m_gol> I'll need to upgrade our tests to a version of jsdom that actually works
[12:29:43] <m_gol> which is now only the latest one
[12:30:07] <markelog> i love that m_gol was initially opposed to support node testers and now he holding the torch
[12:30:12] <m_gol> but that requires some test changes as I was doing a dirty job of removing the global Symbol
[12:30:16] <m_gol> :P
[12:30:43] <m_gol> but yeah, first step is to remove the logic for testing jsdom@3
[12:30:44] <timmywil> m_gol: thanks for doing that
[12:30:56] <timmywil> For https://github.com/jquery/jquery/issues/2382, we do document that error callbacks don't work for jsonp. Is it possible now that we've dropped IE8?
[12:31:05] <m_gol> ok, I'm assigning it to myself
[12:32:06] <timmywil> I'm not familiar enough with the history to know why we didn't do that before, but I would assume it's IE's fault.
[12:32:37] <m_gol> could be doable on IE9+
[12:32:39] <markelog> always assume IE )
[12:32:49] <m_gol> or Android<4.4 ;)
[12:32:55] <timmywil> ha, right
[12:33:03] <markelog> !
[12:33:16] <timmywil> ok, just wanted to make sure it was worth investigating. I'll leave it open.
[12:34:19] <markelog> will cc jabourg there
[12:34:24] <markelog> maybe he knows more
[12:34:26] <m_gol> we have one test failure
[12:34:37] <m_gol> on Android 4.4
[12:34:49] <m_gol> in the test for weird tag names
[12:34:57] <m_gol> apparently its Chrome version mangles that
[12:35:26] <m_gol> http://swarm.jquery.org/result/1010166
[12:35:39] <markelog> btw, we need to start moving to node for tests
[12:35:49] <markelog> since we now have released a bunch new versions )
[12:36:02] <markelog> and give a gitter a try
[12:36:04] <markelog> )
[12:36:19] <timmywil> move to node? you mean in ajax?
[12:36:37] <markelog> need to gather my strengths for that
[12:36:44] <timmywil> jaubourg started that, not sure he'll ever finish. We'll probably need someone to take the reins.
[12:37:02] <markelog> mine!!!11!!!
[12:37:04] <markelog> )
[12:37:08] <timmywil> haha, all yours
[12:37:33] <markelog> just need to finish that whole thing with show/hide, so there will be no more distractions
[12:37:39] <timmywil> m_gol: thanks, added
[12:38:18] <m_gol> before we start any major refactoring
[12:38:30] <m_gol> I'd like to remove obsolete code from tests
[12:38:39] <timmywil> https://github.com/jquery/jquery/issues/1799 this seems to be caused by our json -> jsonp promotion. I think it's too big of a break to remove that and since there's a workaround, I'm inclined to close, but does anyone want to fight for it?
[12:38:40] <markelog> like what?
[12:38:40] <m_gol> weird ifs for long unsupported browsers etc
[12:38:53] <m_gol> that were kept there only to keep compat between branches
[12:38:58] <m_gol> and it'd be hard to remove on both
[12:39:08] <m_gol> now we have only one branch, high time for a cleanup
[12:39:19] <markelog> timmywil: not me
[12:39:36] <m_gol> timmywil: I guess this is enough an edge case that it may as well stay
[12:39:43] <markelog> m_gol: i know you will, but please be very careful with that
[12:39:45] <m_gol> since the query is mostly invalid anyway
[12:40:07] <m_gol> we might optionally move to ??? but probably something somewhere might depend on ?? (or is it purely internal?)
[12:40:27] <timmywil> cool. As far as cleanup, it would be nice to have some of that stale code out of the tests.
[12:41:06] <m_gol> I was thinking of basically looking at Support comments and remove what can be removed
[12:41:24] <m_gol> i can take care of it, just wanted to ask when would be a good moment
[12:41:43] <timmywil> m_gol: I'd say we'll start gutting things right after 3.0 final.
[12:41:44] <m_gol> better not to rewrite ajax tests at the same time ;)
[12:41:51] <m_gol> k, sounds good
[12:42:51] <timmywil> Alright, I've gotta run. We'll go through the rest next week with more people.
[12:43:00] <markelog> yeah
[12:43:10] <markelog> but i would like to note
[12:43:18] <markelog> that i'm very not sure about perf pulls
[12:43:33] <timmywil> me neither
[12:43:40] <timmywil> I won't be landing this week
[12:43:46] <m_gol> created https://github.com/jquery/jquery/issues/2868 for the cleanup
[12:43:54] <timmywil> m_gol: great
[12:44:20] <timmywil> thanks you two. I'll be available in about an hour.
