[07:00:52] <rxaviers> Hi Nikerabbit, iskren, santhosh, siebrand, Krinkle|detached, jzaefferer, scott_gonzalez, tj_vantoll
[07:01:34] <scott_gonzalez> hey
[07:02:07] <rxaviers> Im afraid it's too early for iskren
[07:06:05] <rxaviers> Ending the meeting, no quorum. We may need to re-schedule it.
[11:00:42] <_|Nix|_> Hey, all!
[11:00:47] <uGoMobi> hey _|Nix|_
[11:00:56] <cgack> hi
[11:01:13] <uGoMobi> hey cgack
[11:01:14] <arschmitz> hi
[11:01:22] <uGoMobi> hi arschmitz
[11:01:27] <agcolom> hey :-)
[11:01:34] <uGoMobi> hey agcolom
[11:02:09] <uGoMobi> gseguin
[11:02:39] <uGoMobi> ok what do we have to discuss?
[11:02:53] <uGoMobi> anything about the page events demo?
[11:03:17] <agcolom> I have a v quick one but not to do with page events demo ;-)
[11:03:57] <arschmitz> yes lot actually lol
[11:04:06] <arschmitz> agcolom: you can go first if you want
[11:04:08] <uGoMobi> agcolom: sure, add it in the agenda doc please
[11:04:09] <agcolom> I have added labels to api docs PRs
[11:04:35] <agcolom> they are only visible in issue tab
[11:04:47] <agcolom> but on the issue tab, you can see the labels
[11:04:54] <agcolom> https://github.com/jquery/api.jquerymobile.com/issues?state=open
[11:04:57] <uGoMobi> agcolom: yeah, but it's nice we can add labels to PRs at least
[11:05:26] <agcolom> so ok to land are the ones that have received the :+1:
[11:05:38] <agcolom> and authors can land
[11:06:04] <uGoMobi> ok
[11:06:05] <agcolom> need modification need action
[11:06:33] <agcolom> needs discussing and needs reviewing are self describing
[11:06:54] <uGoMobi> yup
[11:07:28] <agcolom> so I'll check them all in the near future and would be great to land those that are green so we can close some issues.
[11:07:58] <uGoMobi> yeah
[11:07:59] <agcolom> I thought it'd be a good way to track as so easy to miss a go ahead
[11:08:35] <uGoMobi> I wonder if we should discuss PRs (library or docs) every week during meeting or pick other moments for that
[11:08:42] <uGoMobi> agcolom: yes, for sure
[11:08:43] <uGoMobi> thanks
[11:08:47] <_|Nix|_> We should maybe have the same for the library repo+.
[11:09:04] <gseguin> here, sorry
[11:09:12] <uGoMobi> hey gseguin
[11:09:46] <uGoMobi> _|Nix|_: yeah, we could do the same
[11:10:08] <gseguin> I'd like to port the casperjs to 1.4-stable since we're going to do more releases on that branch
[11:10:15] <uGoMobi> now we do everything via PRs it's useful to label them
[11:10:28] <uGoMobi> gseguin: wait your turn :)
[11:10:32] <gseguin> sorry
[11:10:47] * gseguin hides in the corner
[11:10:51] <uGoMobi> lol
[11:11:21] <_|Nix|_> We<should probably start to merge them little by little.
[11:11:42] <uGoMobi> _|Nix|_: what do you mean?
[11:11:46] <_|Nix|_> There are some that need more discussion/review/testing, so it'd suck to bump into those at the eleventh hour.
[11:12:09] <arschmitz> _|Nix|_: what are you talking about i think you lost us
[11:12:40] <_|Nix|_> We were talking about labelling PRs.
[11:12:41] <_|Nix|_> Right?
[11:12:49] <uGoMobi> yes
[11:12:50] <arschmitz> yes
[11:13:23] <agcolom> sorry i just lost connections!
[11:13:31] <_|Nix|_> So, in addition to labelling them, I was suggesting that we start landing them little-by-little, otherwise we'll have a bear of a time landing them all right before a release.
[11:13:31] <uGoMobi> +1 to labels for library repo as well
[11:13:46] <uGoMobi> _|Nix|_: gotcha
[11:13:55] <_|Nix|_> The labels should help with that process.
[11:13:57] <arschmitz> _|Nix|_: we land things as soon as its ready
[11:13:59] <uGoMobi> yes, and labels help keeping overview
[11:14:22] <arschmitz> _|Nix|_: if there is something that you know needs discussion you should add it to the agenda
[11:14:36] <arschmitz> and if it needs review point me to it and ill get right on it
[11:15:34] <_|Nix|_>  For example, https://github.com/jquery/jquery-mobile/pull/7197, where I delay triggering change until after the selectmenu popup/dialog has closed.
[11:15:46] <arschmitz> to be clear im not saying we should not have labels
[11:15:58] <arschmitz> im just not sure how this would effect when something lands
[11:16:26] <uGoMobi> arschmitz: do you think we should add discussion of open PRs to agenda each week?
[11:16:27] <_|Nix|_> arschmitz: It might make it easy to search for issues that have the label and just land the ones that belong to you.
[11:16:50] <arschmitz> _|Nix|_: ok
[11:16:54] <uGoMobi> arschmitz: like we did for a while before we started to do every commit via PRs
[11:17:09] <arschmitz> uGoMobi: no just if there is one that someone knows needs discussion
[11:17:17] <uGoMobi> ok
[11:17:40] <arschmitz> if anyone sees an issue in need of discussion it should be part of the meeting
[11:17:52] <arschmitz> isnt that the whole point :)
[11:17:59] <_|Nix|_> OK, so if we have some time for a PR, may I suggest the one above? I'll append it to the minutes.
[11:18:34] <uGoMobi> ok, if a PR needs discussion, just add it to the agenda
[11:19:05] <uGoMobi> and we use labels to keep overview
[11:19:12] <arschmitz> if they are not urgent you can add them to the end of the agenda and we can skip for that week if we run out of time
[11:19:24] <uGoMobi> arschmitz: good idea
[11:20:07] <uGoMobi> ok next topic
[11:20:36] <arschmitz> page events
[11:20:38] <uGoMobi> I stick to the agenda
[11:20:40] <uGoMobi> right
[11:20:58] <arschmitz> ok there is actually a lot to discuss here
[11:21:50] <arschmitz> so working with these events i realized we have released whats essentially a broken api
[11:21:54] <arschmitz> https://docs.google.com/spreadsheets/d/10FBrCSUFCmLIbJlODJCXvLNmKSUqQesWIX41H26YWsc/edit
[11:22:20] <arschmitz> you can see there the current state of the events and what i propose we change
[11:22:50] <arschmitz> the problem is we change the element on which the events are triggered
[11:23:14] <arschmitz> which would be fine but in some cases there is no way to determine what page the event is for now
[11:23:32] <arschmitz> because the toPage and prevPage properties are inconsistent and generally missing
[11:23:50] <uGoMobi> hmm
[11:23:58] <arschmitz> and there are some events that for no reason it seems were just never implemented as pagecontainer events
[11:23:59] <uGoMobi> that is essential
[11:24:20] <arschmitz> we have like half an api currently
[11:24:27] <uGoMobi> yeah
[11:24:31] <uGoMobi> nice overview
[11:24:43] <arschmitz> also we changed the order of some events
[11:24:50] <_|Nix|_> Agreed - it is a nice overview.
[11:24:53] <arschmitz> and they directly conflict with what is documented now
[11:25:28] <arschmitz> so there is one semi radical thing in what i propose we do
[11:25:42] <arschmitz> which is add events that were not in 1.4.0 to 1.4.3
[11:25:44] <gseguin> arschmitz: the ones that don't have a number in "new" disappear, right?
[11:26:00] <arschmitz> and considder that they are not there now a bug
[11:26:10] <arschmitz> gseguin: look at the key red means deprecate
[11:26:19] <gseguin> duh!
[11:26:19] <arschmitz> all the red ones are what are missing numbers
[11:26:25] * gseguin goes back to his corner
[11:26:31] <uGoMobi> :)
[11:26:33] <arschmitz> gseguin: :)
[11:27:11] <arschmitz> these changes will give a consistent and usable api to interact with
[11:27:42] <_|Nix|_> ... making it possible to deprecate the events.
[11:27:57] <_|Nix|_> As it stands, we're not really providing a replacement for that which we are deprecating.
[11:28:01] <arschmitz> and we can actually add something similar to this spred sheet to the upgrade guide
[11:28:32] <arschmitz> so people can see directly the events their order and the differences
[11:29:04] <cgack> sounds brilliant
[11:29:04] <uGoMobi> yeah, this is a good guide
[11:29:12] <uGoMobi> just think about the versions
[11:29:18] <arschmitz> so the second part of what i propose is a plugin
[11:29:32] <arschmitz> i call toPage
[11:29:34] <gseguin> the only thing I don't see is that currently in the pagebeforechange handler if you call e.preventDefault() it cancels the changepage
[11:29:36] <uGoMobi> we could do an extra release
[11:30:20] <arschmitz> uGoMobi: not sure what you mean?
[11:30:40] <gseguin> so I guess there should be a column to say if calling preventDefault does anything
[11:30:43] <_|Nix|_> uGoMobi: Do you mean 1.5.0 === fixed page events?
[11:30:44] <arschmitz> gseguin: im not following what what that means?
[11:30:51] <arschmitz> gseguin: oh ok
[11:31:02] <uGoMobi> arschmitz: broken API is a bug, but introducing new events is more something for new version
[11:31:05] <_|Nix|_> gseguin: Good point!
[11:31:10] <agcolom> yes, I think we should add a diagram to the docs with the events and order (a bit like http://bradbroulik.blogspot.co.uk/2011/12/jquery-mobile-events-diagram.html )
[11:31:20] <uGoMobi> _|Nix|_: yeah, that was what I meant
[11:31:35] * gseguin is happy he didn't get sent back to the corner
[11:31:42] <uGoMobi> lol
[11:31:43] <_|Nix|_> :)
[11:31:55] <uGoMobi> agcolom: that's indeed a good way to document it
[11:31:59] <_|Nix|_> I'm good with 1.5.0 === fix page events.
[11:32:05] <arschmitz> uGoMobi: yes but without the new events we still have an inconsistent api
[11:32:18] <arschmitz> and that means we are telling everyone on 1.4 sorry but deal with it
[11:32:24] <arschmitz> we dont care we broke this
[11:32:51] <uGoMobi> arschmitz: that's true, you would have to update to 1.5
[11:33:02] <gseguin> I think what uGoMobi is trying to say is that in 1.4.x we should introduce the missing new events
[11:33:03] <arschmitz> uGoMobi: and wait for it to come out
[11:33:14] <gseguin> so people can start migrating their codebase
[11:33:27] <gseguin> and have a smooth transition to 1.5
[11:33:39] <uGoMobi> arschmitz: we could release 1.5 as soon as we are ready with fixing the events
[11:33:41] <gseguin> amiright, uGoMobi ?
[11:33:45] <uGoMobi> just do another release
[11:33:49] <arschmitz> gseguin: if so im fine with that i was not saying we should deprecate in a point release?
[11:34:10] <arschmitz> uGoMobi: do you think people want to upgrade again already to a new full version
[11:34:33] <arschmitz> its semantics
[11:34:41] <uGoMobi> gseguin: nah, I was trying to say that we could fix everything in 1.5 and just do that release asap
[11:34:42] <gseguin> I'm voting for a transition release where there are both old and new events
[11:34:42] <arschmitz> but it makes a big difference in peoples oppinion
[11:35:06] <arschmitz> gseguin: what i think is basicly i think what you prepose
[11:35:10] <_|Nix|_> gseguin: 1.4 was supposed to be that release.
[11:35:19] <arschmitz> which is add the missing things to complete the api in 1.4.3
[11:35:27] <uGoMobi> arschmitz: well, if it's basically only contains the fix of the events it won't be hard to upgrade
[11:35:27] <gseguin> if of course technically not a challenge for us
[11:35:32] <arschmitz> and not remove anything not already deprecated until 1.6
[11:35:42] <arschmitz> uGoMobi: but people wont look at it that way
[11:35:52] <arschmitz> if its a .x release its major
[11:35:52] <uGoMobi> arschmitz: yeah, true
[11:36:57] <arschmitz> uGoMobi: we should not break anything people built on 1.4
[11:37:10] <arschmitz> nothing changes just adding more info where possible to things basicly
[11:37:23] <gseguin> introducing new events should not break anything
[11:37:32] <arschmitz> gseguin: exactly
[11:37:34] <uGoMobi> yeah
[11:37:48] <arschmitz> i normally wouldnt be in favor of this
[11:37:53] <gseguin> unless... the user is already binding on them
[11:37:53] <arschmitz> but i think we messed up here
[11:37:55] <uGoMobi> it's just that introducing new events is normally not something you do in a maintenance release
[11:38:17] <_|Nix|_> Thing is ... if we implement the alternative to the deprecated events halfwa through 1.4, can we remove the deprecated events earlier than halfway through 1.5?
[11:38:33] <arschmitz> _|Nix|_: im not worried about removal
[11:38:37] <arschmitz> they can wait till 1.6
[11:38:45] <arschmitz> its about making the api usable
[11:38:58] <gseguin> _|Nix|_: the incrementation of minor release means incompatible change
[11:39:09] <_|Nix|_> arschmitz: I'm a little worried. The code is ugly, and it may give us headaches when we're considering more serious refactoring.
[11:39:28] <arschmitz> _|Nix|_: what code is ugly?
[11:39:48] <_|Nix|_> arschmitz: _triggerWithDeprecated, and in some places, it just plain triggers the deprecated event.
[11:40:03] <arschmitz> _|Nix|_: right thats why we fix it to be consistent
[11:40:07] <gseguin> I don't think we introduce a behavior change so to me it works in a patch release
[11:40:27] <_|Nix|_> arschmitz: Yeah, but if we keep the code that triggers the deprecated events around for long, then it
[11:40:36] <uGoMobi> yeah I can live with it too
[11:40:36] <arschmitz> gseguin: how ugly or not internal code is has nothing to do with major vs minor
[11:40:46] <_|Nix|_> 's gonna be that much harder reading the code with an eye towards refactoring.
[11:40:47] <arschmitz> i meant _|Nix|_ sorry
[11:41:00] <arschmitz> _|Nix|_: i disagree
[11:41:05] <arschmitz> this is part of refactoring
[11:41:13] <arschmitz> that we thought was done already
[11:41:22] <_|Nix|_> arschmitz: It does have to do with it, because we'll spend another version having to look at it while trying to refactor.
[11:41:32] <_|Nix|_> ... another minor version.
[11:41:40] <_|Nix|_> But OK, I guess it's part of the deal.
[11:41:42] <arschmitz> _|Nix|_: im not sure what you think is better then
[11:41:52] <arschmitz> that we deprecate in 1.4 even now
[11:41:56] <arschmitz> and remove all in 1.5
[11:42:12] <uGoMobi> sorry, now I am lost
[11:42:16] <_|Nix|_> That'd be great, but I think that's not enough of a transition period.
[11:42:17] <uGoMobi> deprecate what in 1.4?
[11:42:19] <_|Nix|_> arschmitz: ^
[11:42:20] <arschmitz> and _|Nix|_ i have already made his chanfe in a branch
[11:42:35] <arschmitz> and i just change all triggering to be done with trigger with deprecated basicly
[11:42:39] <arschmitz> and make it work correctly
[11:42:54] <arschmitz> so in future you just replace that method with a call to _trigger anywhere its used and no worries
[11:43:14] <arschmitz> so it does not effect refactoring or future work at all
[11:43:15] <_|Nix|_> arschmitz: Do all future events have a deprecated counterpart?
[11:43:30] <arschmitz> not sure i dont think so
[11:43:39] <arschmitz> but in that case you just use _trigger already
[11:43:49] <arschmitz> i can check i already worked all this out in the branch
[11:43:53] <_|Nix|_> arschmitz: OK. Sounds good!
[11:44:16] <arschmitz> _|Nix|_: then we dont need to let this effect us at all no matter when the events are removed
[11:44:30] <arschmitz> so this is purely about making 1.4 not broken
[11:44:37] <uGoMobi> everyone agrees with landing this in 1.4.3?
[11:44:40] <_|Nix|_> Yeah, OK.
[11:44:42] <_|Nix|_> +1
[11:44:50] <arschmitz> +1
[11:44:53] <uGoMobi> +1
[11:45:05] <arschmitz> ok so the second part of this
[11:45:10] <arschmitz> is a plugin called onPage
[11:45:17] <gseguin> +1
[11:45:20] <arschmitz> this allows people to attach events the same way they did in 1.3
[11:45:34] <arschmitz> you just call onPage instead of on
[11:45:39] <_|Nix|_> arschmitz: Is this plugin part of the library?
[11:45:45] <arschmitz> uses exact same api
[11:45:54] <arschmitz> _|Nix|_: well thats part of what i wanted to discuss
[11:46:10] <arschmitz> _|Nix|_: right now its in my own repo
[11:46:16] <arschmitz> there is no way this could land in 1.4.3
[11:46:24] <arschmitz> its a totally new feature
[11:46:33] <_|Nix|_> TBH, I'd keep this separate.
[11:46:37] <_|Nix|_> It
[11:46:42] <_|Nix|_> 's a convenience.
[11:46:43] <arschmitz> i would also
[11:47:19] <uGoMobi> yeah I think so too
[11:47:27] <arschmitz> the other good part about this besides making it possible to use 1.3 style event bindings is its actually a substantial perf imporvment
[11:47:36] <arschmitz> because it does not actually bind any events at all
[11:47:40] <uGoMobi> arschmitz: it says page events but it is actually about pagecontainer events I suppose?
[11:47:40] <arschmitz> it uses the option callbacks
[11:48:15] <arschmitz> uGoMobi: yes but you use it like your deal with pages so its like $( document ).on( "pagechange", "#page-id", function(){});
[11:48:18] <gseguin> or we create a backCompat directory where we host this kind of code
[11:48:27] <uGoMobi> right, the old way
[11:48:53] <arschmitz> uGoMobi: with this you do $( document ).onPage( "change", "#page-id", function(){});
[11:49:18] <uGoMobi> it's a nice plugin
[11:49:22] <arschmitz> gseguin: its not just about backcompat
[11:49:29] <arschmitz> its also a modular performance based approach
[11:49:39] <uGoMobi> if you didn't upgrade to 1.4 yet you could use this and just replace on() by onPage()
[11:49:52] <_|Nix|_> Thing is, it's not exactly backcompat, because the syntax /is/ different.
[11:49:57] <arschmitz> that was a big complaint is the new events dont lend to modular developemnt
[11:50:11] <arschmitz> so this is to address that complaint
[11:50:33] <arschmitz> and for easy transition
[11:50:44] <arschmitz> it also addresses event name length complaints
[11:51:14] <arschmitz> basicly this plugin combined with the proposed event changes address all the things people are complaining about in the issues about the new api
[11:51:44] <arschmitz> https://github.com/arschmitz/jquery-mobile-onpage/blob/master/jquery.mobile.onpage.js
[11:52:04] <uGoMobi> arschmitz: but it also means there are two ways of event binding
[11:52:05] <arschmitz> im also writing an offPage right now to detach events bound with onPAge
[11:52:13] <arschmitz> there always have neen
[11:52:16] <arschmitz> now there are 3
[11:52:32] <arschmitz> but again this is not the lib this is a plugin
[11:52:39] <uGoMobi> right
[11:52:55] <arschmitz> the big things with the plugin are name length modularity and performance
[11:53:14] <arschmitz> performance because your not waiting for events its a direct function call there are no events involved anywhere
[11:53:33] <uGoMobi> is there a downside of making it part of the library? does it make it harder to maintain our code?
[11:54:01] <arschmitz> um not really i dont think
[11:54:07] <arschmitz> there could be confusion with create
[11:54:21] <arschmitz> because there is and will always be both a pagecontainercreate and a pagecreate
[11:54:51] <arschmitz> i was just going to document which one this works with
[11:54:56] <arschmitz> as pagecontainer
[11:55:01] <_|Nix|_> arschmitz: Yeah, but that confusion should subside once pagebeforechange pagechange pageload and their ilk disappear.
[11:55:12] <arschmitz> _|Nix|_: yeah
[11:56:00] <_|Nix|_> arschmitz: I also don't get why people can't just $( ":mobile-pagecontainer" ).pagecontainer({ beforetransition: function() {}, change: function() {}}), etc.
[11:56:11] <_|Nix|_> arschmitz: That's option callbacks, isn't it?
[11:56:30] <arschmitz> _|Nix|_: what if you work with other people on a modular project
[11:56:41] <arschmitz> and both need to listen to that event
[11:57:04] <_|Nix|_> arschmitz: Right, that was it. Then you have to go with events.
[11:57:12] <arschmitz> or use this plugin
[11:57:17] <arschmitz> this plugin addresses that
[11:57:28] <arschmitz> you set via option and can set as many as you want
[11:57:36] <_|Nix|_> arschmitz: Yeah, that's nice n' all, but I can't help but think that this replicates some of jQuery's event dispatch code.
[11:57:49] <arschmitz> _|Nix|_: this does not handle events
[11:58:14] <arschmitz> _|Nix|_: and is only 70 lines and is not part of the library
[11:58:33] <_|Nix|_> arschmitz: I know. jQuery has extensive code for looping through arrays of handlers and calling them in turn.
[11:58:39] <_|Nix|_> arschmitz: That's what I'm talking about.
[11:58:58] <arschmitz> _|Nix|_: yes but again thats events
[11:58:59] <_|Nix|_> arschmitz: But you're right. It's definitely convenient.
[11:59:01] <arschmitz> this is not events
[11:59:24] <_|Nix|_> I
[11:59:33] <arschmitz> there is never a single event bound with this plugin so you cant really compare
[11:59:33] <_|Nix|_> 'd love to see the difference in performance this makes.
[12:00:01] <arschmitz> _|Nix|_: it all depends on the amount of binding you do and if you care about your callbacks getting push onto the stack
[12:00:25] <arschmitz> because with this your callbacks happen syncronous and dont get pushed onto the stack
[12:00:31] <arschmitz> there is an actual difference there
[12:01:14] <_|Nix|_> arschmitz: Event handlers are also synchronous. If you .trigger( "abc" ), then all handlers of abc will have gotten called before it moves on to the line after the .trigger()
[12:01:31] <arschmitz> _|Nix|_: but this happens before any handlers i mean
[12:01:57] <_|Nix|_> arschmitz: Anyway. I don't wanna hold up the discussion. It's a good thing. +1 from me.
[12:02:34] <arschmitz> ok
[12:02:39] <arschmitz> so thats all for page events
[12:02:45] <arschmitz> finally
[12:02:47] <uGoMobi> nice work
[12:02:56] <arschmitz> told you guys there was a lot to discuss
[12:03:06] <uGoMobi> yeah, but this is important stuff
[12:03:11] <agcolom> will someone respond to https://github.com/jquery/jquery-mobile/issues/7283#issuecomment-39161510 ?
[12:03:24] <uGoMobi> it will stay in 2.0 so it's worth to invest time in this
[12:03:35] <arschmitz> yup
[12:03:46] <arschmitz> agcolom: iv been waiting to
[12:03:54] <arschmitz> agcolom: i had to know what we decided first though
[12:03:55] <agcolom> arschmitz: great! Thanks
[12:04:24] <agcolom> yes, I just thought I'd remind about the comment on github just in case :-)
[12:05:06] <uGoMobi> gseguin: what did you want to say about CasperJS?
[12:05:14] <gseguin> me me me!
[12:05:20] <gseguin> landed
[12:05:26] <uGoMobi> awesome
[12:05:45] <gseguin> I'm going to do a PR to land it on 1.4-stable as well
[12:05:59] <uGoMobi> ok cool
[12:06:19] <uGoMobi> gseguin: can you add link to the (closed) PR in the meeting doc ?
[12:06:30] <uGoMobi> _|Nix|_: what PR did you want to discuss
[12:06:34] <uGoMobi> ?
[12:06:56] <_|Nix|_> uGoMobi:  Weird ...
[12:06:58] <_|Nix|_> I added it ...
[12:07:17] <_|Nix|_> https://github.com/jquery/jquery-mobile/pull/7197
[12:07:17] <arschmitz> wrong date?
[12:07:20] <_|Nix|_> Maybe.
[12:07:46] <_|Nix|_> There, I added it to today :)
[12:08:17] <uGoMobi> weird, but yeah I see it now
[12:08:18] <_|Nix|_> So, what do you think? Is it OK to delay triggering .change() until after the custom select dialog/popup has gone away.
[12:08:24] <uGoMobi> and moved it up
[12:08:24] <arschmitz> there are copys of the sheet for today??
[12:08:33] <_|Nix|_> WTF?! It's gone again.
[12:08:51] <_|Nix|_> Maybe it's a google docs bug.
[12:08:57] <gseguin> uGoMobi: added it
[12:09:04] <uGoMobi> err... the doc is messed up
[12:09:06] <uGoMobi> gseguin: thanks
[12:09:43] <uGoMobi> ok, looks good again
[12:09:50] <_|Nix|_> Sheesh!
[12:10:13] <arschmitz> i deleted all the dups
[12:10:17] <uGoMobi> thanks
[12:11:00] <_|Nix|_> So, what do you think? It's a pretty invasive change.
[12:11:26] <arschmitz> can you explain what and why your doing here?
[12:11:40] <_|Nix|_> But I think it makes sense, conceptually, because opening the custom select is a navigation event, so triggering change() should only happen after it navigates back.
[12:12:14] <_|Nix|_> arschmitz: Basically, I wait for the popup/dialog to completely close before triggering .change()
[12:12:45] <arschmitz> and what did it do before?
[12:13:06] <_|Nix|_> arschmitz: It triggered change() and then closed the dialog.
[12:13:08] <uGoMobi> this doesn't seem a custom select specific issue
[12:13:29] <_|Nix|_> uGoMobi: The issue occurs if the custom select is inside a dialog.
[12:13:31] <uGoMobi> more a dialog and popup issue in general if the event is triggered to early
[12:13:47] <arschmitz> uGoMobi: but how? its a change event those dont have that
[12:14:00] <arschmitz> it has to be a form element to have a change event?
[12:14:13] <_|Nix|_> arschmitz: The dialog containing the custom select is programmatically closed when the custom select emits a change event.
[12:14:27] <uGoMobi> duh.... sorry, was thinking pagechange event for a moment
[12:14:39] <uGoMobi> select change event... got it ;)
[12:14:52] <_|Nix|_> arschmitz: However, if the custom select emits the change event before its internally-generated dialog closes, then the dev's closing of the dialog will not work because it's not the topmost dialog in the stack.
[12:15:38] <arschmitz> _|Nix|_: right ok
[12:15:53] <_|Nix|_> https://dl.dropboxusercontent.com/u/33175266/github/jqm-7076/dialog/page.html is the example from the OP.
[12:16:06] <arschmitz> so how does this potentially impact and most importently break peoples code if we change?
[12:16:38] <_|Nix|_> arschmitz: It shouldn't, but it does detangle the navigational mess that ensues if you close a dialog in response to a custom select change event.
[12:16:50] <arschmitz> is there any change of this or any change in how we fundamentally understand the nav process in this respect
[12:17:06] <arschmitz> _|Nix|_: ok remember dialogs are gone in 1.5
[12:17:14] <uGoMobi> was looking at this issue too https://github.com/jquery/jquery-mobile/issues/5514
[12:17:19] <arschmitz> but yes for 1.4
[12:17:29] <uGoMobi> also about select, Chrome, and the change event
[12:18:48] <arschmitz> uGoMobi: dont think its related but maybe
[12:18:56] <_|Nix|_> uGoMobi: I can check if the https://github.com/jquery/jquery-mobile/issues/7197 fixes that too, or if it's related.
[12:19:11] <uGoMobi> arschmitz: looks like it is a bit different indeed
[12:19:20] <_|Nix|_> Yeah, there are fixed toolbars involved.
[12:19:34] <uGoMobi> yeah
[12:19:35] <arschmitz> it has to do with detecting a select closeing
[12:19:45] <arschmitz> and if its really possible to do this
[12:20:05] <uGoMobi> right
[12:20:51] <_|Nix|_> Ummm ... I don't see any issues in FF ...
[12:21:29] <_|Nix|_> I don't think it's possible to detect a native select closing.
[12:21:45] <arschmitz> _|Nix|_: yeah not consistently
[12:21:55] <uGoMobi> don't think so either
[12:22:15] <arschmitz> thats why this is still open despite uGoMobi and my efforts
[12:22:47] <arschmitz> its something to perhaps rething when we review the fixed toolbars
[12:23:04] <uGoMobi> yeah, the whole hideDuringFocus thing
[12:23:08] <arschmitz> yup
[12:23:15] <arschmitz> and reset on new devices os's
[12:23:22] <_|Nix|_> If Chrome leaks the mouse events that cause the select menu to open/close, that's a browser bug.
[12:23:22] <arschmitz> to see how things really work now
[12:23:51] <arschmitz> _|Nix|_: this was using focus to detect in some places
[12:23:52] <uGoMobi> _|Nix|_: I suggest to put this back on the agenda for next week
[12:23:55] <arschmitz> but it does not work in chrome
[12:24:20] <arschmitz> _|Nix|_: focus and or change
[12:24:26] <uGoMobi> I want a bit more time to look into issue and PR
[12:24:53] <uGoMobi> we can also discuss on -dev next week
[12:25:23] <_|Nix|_> OK, but I think it's unrelated to https://github.com/jquery/jquery-mobile/issues/7197 and https://github.com/jquery/jquery-mobile/issues/7076, because there the select is native, not non-native.
[12:25:38] <arschmitz> _|Nix|_: yeah i agree
[12:25:48] <uGoMobi> yeah
[12:27:13] <uGoMobi> shall we wrap up and discuss this a bit more next week?
[12:27:20] <_|Nix|_> +1
[12:27:33] <uGoMobi> ok
[12:27:42] <arschmitz> ok just so everyone knows there is a bunch going on with the touch events issues on chrome
[12:27:51] <arschmitz> and some potential stuff with pointer events
[12:27:59] <uGoMobi> arschmitz: yeah, saw that
[12:28:55] <arschmitz> oh and tomorrow ill be unavailable execpt maybe email
[12:29:04] <arschmitz> but back saturday
[12:29:16] <uGoMobi> ok
[12:29:43] <uGoMobi> long but good meeting.... thanks everyone!
[12:30:00] <_|Nix|_> K L8R
