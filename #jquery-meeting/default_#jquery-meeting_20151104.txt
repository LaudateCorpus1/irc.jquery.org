[11:34:12] <leobalter> gibson042 jzaefferer Krinkle hey!
[11:34:18] <Krinkle> Hey
[11:34:22] <leobalter> James is offline
[11:35:00] <Krinkle> Belated cheers on taking QUnit lead Leo :)
[11:35:10] <leobalter> Thanks Krinkle!
[11:35:15] <leobalter> last week I talked to JÃ¶rn about js-reporters and we extended it to talk about the QUnit 2.0 plan
[11:35:28] <leobalter> you can see details here: https://github.com/jquery/qunit/issues/891
[11:35:54] <leobalter> other features won't block it
[11:36:22] <leobalter> and also we need to discuss https://github.com/jquery/qunit/issues/890 (the reporter).
[11:36:28] <Krinkle> I've got a little bit of time coming available to work on QUnit. If you'd like feedback on API designs, features or pull requests, feel free to ping me IRC or @ me on github anytime.
[11:37:12] <leobalter> I would appreciate your feedback on 890, Krinkle
[11:37:59] <Krinkle> I'd rename it to setReporter() or addReporter() depending on whether the semantic is replacing or not.
[11:38:01] <leobalter> also, I need to talk about it there, on `QUnit.reporter( str )` (argument as a string, loading a bundled reporter)
[11:38:33] <leobalter> addReporter would be better in this case as it is not meant to replace
[11:38:39] <Krinkle> Cool.
[11:38:52] <leobalter> also
[11:39:03] <leobalter> QUnit.reporter follows Mocha
[11:39:17] <leobalter> I know we shouldn't follow them in blind
[11:39:45] <leobalter> but that would be easier for interoperation
[11:40:38] <leobalter> about the 2.0 plan: we do not have blockers for other features, but I believe this is the last moment to talk about any other deprecations on QUnit 1.x
[11:41:21] <leobalter> also
[11:41:55] <gibson042> I'd like to have all the global functions & methods deprecated, but I'm not sure if all of them have replacements yet
[11:42:07] <gibson042> doesn't seem right to deprecate without a remedy
[11:42:08] <leobalter> We were waiting for JDalton to bundle QUnit with webpack/browserify
[11:42:12] <leobalter> it didn't happen so far
[11:42:40] <gibson042> (for invoking within callbacks, that is)
[11:42:43] <leobalter> gibson042: they are deprecated, we do not trigger any warning so far
[11:42:50] <gibson042> _all_ of them?
[11:43:09] <leobalter> yes, only QUnit will prevail.
[11:43:27] <leobalter> that's the current plan, we can change it.
[11:43:53] <gibson042> I mean the same thing for QUnit methods, though (e.g., QUnit.ok inside a callback)
[11:44:53] <leobalter> assertions will be all on the assert object. so inside tests you can see them from the assert argument
[11:45:16] <leobalter> QUnit.test( assert => { ... } )
[11:45:28] <gibson042> right, we have a remedy there
[11:45:34] <gibson042> but I'm not sure for other methods
[11:45:57] <gibson042> there was one that came up with nested modules
[11:46:18] <leobalter> test, module, start, stop, are all on QUnit namespace
[11:46:33] <Krinkle> Yeah, I think we can also potentially learn from JSCS with the plugin model as well. E.g. potentially autoloading from the node modules directory e.g. qunit-reporter-* would be loaded when calling addReporter(*)
[11:46:36] <Krinkle> (sorry was AFK for a min)
[11:46:39] <leobalter> and all of them work if referenced in a local variable
[11:46:56] <Krinkle> I'm okay calling it reporter() if there's a consistency win. No worries.
[11:47:57] <leobalter> gibson042: all of the global methods are here: https://github.com/jquery/qunit/blob/master/src/export.js
[11:48:44] <leobalter> and expect is found at QUnit.assert too
[11:48:46] <gibson042> yeah, `test` and `module` are the problem children
[11:49:35] <leobalter> Krinkle: do you have any example from JSCS?
[11:51:23] <leobalter> Also, we've got 3 bogus PRs that I really want someone else's PR to overpass them: #887, #888 and #889
[11:51:46] <leobalter> see: https://github.com/jquery/qunit/pull/889
[11:51:51] <Krinkle> leobalter: They don't have it documented yet but it's implemented with tests in node-jscs.
[11:52:12] <leobalter> I'll try to find that
[11:52:20] <Krinkle> Basically, specifying preset: X will first try to load jscs-*-X from node_modules before using the ones that are shipped.
[11:52:39] <Krinkle> Which I think is a nice implicit model without any fragile side effects
[11:52:51] <Krinkle> Passing require() directly should work too, though.
[11:53:05] <leobalter> that's nice!
[11:53:17] <jzaefferer> leobalter: I think you can close those PRs
[11:53:30] <Krinkle> Paladox
[11:53:39] <Krinkle> He's been active around wikimedia/* repos as well.
[11:53:42] <jzaefferer> You've spent too much time trying to them into shape
[11:53:56] <jzaefferer> *trying to get them
[11:56:02] <leobalter> I just closed them
[11:56:47] <leobalter> anything else?
[11:58:55] <leobalter> before we finish: we should look at node-qunit
[11:59:02] <leobalter> We also need to add gibson042 as a commiter there
[11:59:31] <jzaefferer> getting QUnit to be useful on node is still pretty far away
[11:59:39] <jzaefferer> node-qunit might help a lot though
[11:59:55] <jzaefferer> to actually get to 2.0, I wonder if we should continue to mostly ignore node for now
[12:00:14] <jzaefferer> get the event emitter implement, with js-reporter event and event details
[12:00:42] <jzaefferer> keep the old callback around until 3.0 or something, to give more time for migration
[12:00:47] <jzaefferer> *old callbacks
[12:01:01] <leobalter> jzaefferer: if we get the event emitter and the reporter, we won't have problems with Node
[12:01:02] <jzaefferer> figure out QUnit.reporter later
[12:01:05] <gibson042> I think "js-reporter event emitter" accurately describes the bulk of work necessary for node :)
[12:01:15] <jzaefferer> I don't think so
[12:02:01] <leobalter> node-qunit supplies the missing cli parts
[12:02:04] <jzaefferer> QUnit itself currently runs on QUnit, but it requires a custom "reporter", using the existing callbacks. Replacing with .on() calls and js-reporter protocol doesn't change that
[12:02:30] <jzaefferer> yes, it does, but actually getting it to work with 1.20.0 or even 2.0 might still be a ton of work
[12:02:35] * scott_gonzalez looks at the time
[12:02:39] <jzaefferer> it currently only works with 1.10
[12:02:56] <leobalter> I'll look at node-qunit.
[12:03:03] <jzaefferer> maybe its not so bad
[12:03:08] <leobalter> but I believe it's jquery-ui time now :)
[12:03:14] <scott_gonzalez> :-)
[12:03:21] <scott_gonzalez> ?uiteam
[12:03:22] <b-ot> arschmitz fnagel jzaefferer mikesherov rxaviers_ scott_gonzalez tjvantoll
[12:03:24] <jzaefferer> but I'd rather see QUnit 2.0 done sooner, with more time for proper node support
[12:03:29] <jzaefferer> *without!
[12:03:32] <jzaefferer> add that later..
[12:03:38] <fnagel> hey
[12:05:03] <arschmitz> hi
[12:05:29] <scott_gonzalez> I sent an email to a bunch of people about button/checkboxradio/controlgroup accessibility.
[12:05:34] <scott_gonzalez> Haven't heard anything yet.
[12:07:30] <scott_gonzalez> Does anyone have anything to discuss about those widgets?
[12:07:35] <arschmitz> ok
[12:07:38] <Krinkle> Ah yeah, node-qunit.
[12:08:02] * Krinkle makes room for UI meeting
[12:08:04] <arschmitz> no
[12:09:13] <scott_gonzalez> fnagel: I assume not much to report for datepicker since rxaviers has been busy.
[12:09:37] <fnagel> yes, contacted him again but no response so far
[12:09:44] <scott_gonzalez> ok
[12:09:44] <fnagel> sorry
[12:09:54] <jzaefferer> He's back home since today, I think :-)
[12:09:59] <scott_gonzalez> No problem. I know you're waiting on him and he's been travelling.
[12:10:18] <jzaefferer> Ping him again tomorrow or Friday, and he's more likely to respond
[12:10:52] <scott_gonzalez> I fixed the icon sprites: https://github.com/jquery/jquery-ui/pull/1636
[12:10:58] <arschmitz> yay
[12:11:33] <scott_gonzalez> I've been working through the upgrade guide as well.
[12:12:00] <scott_gonzalez> Landed all the work that jzaefferer did.
[12:12:17] <scott_gonzalez> And made a list of what's still left to cover: https://github.com/jquery/jqueryui.com/issues/132
[12:12:24] <scott_gonzalez> I've been slowly making progress on that.
[12:13:18] <arschmitz> cool
[12:13:36] <scott_gonzalez> The api.jqueryui.com updates have landed: https://github.com/jquery/api.jqueryui.com/pull/280
[12:13:44] <scott_gonzalez> I still need to go through and make sure that's complete as well.
[12:15:51] <scott_gonzalez> I want to ask Mike and TJ if they plan on being active on the team again. If not, I think it's time to move them to past contributors.
[12:16:33] <arschmitz> makes since
[12:16:40] <arschmitz> have not seen them around in a long time
[12:16:49] <scott_gonzalez> Also, arschmitz: Send a PR to add yourself to http://jqueryui.com/about/
[12:16:56] <arschmitz> will do
[12:17:11] <arschmitz> ( said that over a year ago too guess i should follow through lol )
[12:17:13] <scott_gonzalez> We forgot to do that when we added you to the maintainers list in package.json.
[12:17:29] <scott_gonzalez> SUCH A SLACKER.
[12:18:22] <scott_gonzalez> andrewoxenburgh: Did you have something to discuss?
[12:20:27] <jzaefferer> I'm hoping for more input from Rafael on the release script issue as well
[12:20:44] <jzaefferer> I've pushed a branch to collaborate on: https://github.com/jquery/jquery-ui/tree/release-cdn
[12:21:13] <jzaefferer> I'd like to slightly extend and eventually land my test script in master: https://github.com/jquery/jquery-ui/blob/release-cdn/build/release-test.js - this makes it much easier to verify this part of the release still works
[12:21:41] <jzaefferer> Adding a `grunt update-authors` call would also avoid wasting time on a release with stale AUTHORS.txt
[12:22:26] <jzaefferer> DB issue: https://github.com/jquery/download.jqueryui.com/issues/282
[12:23:18] <scott_gonzalez> I don't want to run `grunt update-authors` during the release.
[12:23:27] <scott_gonzalez> I want that to be manual so that it actually gets reviewed.
[12:23:31] <andrewoxenburgh> Hi, no thanks, just lurking. I like QUnit though, and will have a look at it and see if I can contribute something.
[12:23:31] <arschmitz> i agree that seems bad
[12:23:42] <scott_gonzalez> And here's a perfect example of why: https://github.com/jquery/PEP/commit/ca5e9178f7aa0c596a69e5de675b501747fb7ce6
[12:24:42] <scott_gonzalez> jzaefferer: I guess the test script is ok to add.
[12:26:08] <jzaefferer> scott_gonzalez: that's fine, I just want to release-test script to run that
[12:26:18] <scott_gonzalez> Oh, ok
[12:26:43] <scott_gonzalez> Wait, wouldn't the release-test not care about that?
[12:26:46] <jzaefferer> if it ends up changing AUTHORS.txt, you can commit that change to master before ever running the actual release script
[12:26:57] <scott_gonzalez> Ok, I see what you want.
[12:27:00] <jzaefferer> if no one runs the release-test script, it'll fail later
[12:27:17] <arschmitz> oh i see i misunderstood too
[12:29:37] <scott_gonzalez> Well, I always run a real test before a release.
[12:29:45] <arschmitz> so do i
[12:29:47] <scott_gonzalez> But I'm fine with this for quicker tests.
[12:30:37] <scott_gonzalez> Anything else to discuss?
[12:30:41] <jzaefferer> yeah, cloning and installing npm-dependencies once more just because authors were outdated is annoying
[12:30:55] <jzaefferer> It now installs dependencies automatically: https://github.com/jquery/jquery-ui/blob/release-cdn/build/release-test.js
[12:31:41] <jzaefferer> scott_gonzalez: are you going to work on the remaining upgrade guide tasks?
[12:32:04] <scott_gonzalez> yeah
[12:35:56] <scott_gonzalez> I guess that's all for today.
[12:35:58] <scott_gonzalez> Thanks everyone.
[12:36:01] <scott_gonzalez> See you back in -dev.
