[09:02:48] <DaveMethvin> timmywil gibson042 rwaldron jaubourg gnarf orkel mikesherov meeting time!
[09:02:49] <DaveMethvin> https://docs.google.com/document/d/1MrLFvoxW7GMlH9KK-bwypn77cC98jUnz7sMW1rg_TP4/edit
[09:03:36] <rwaldron> Hi!
[09:03:50] <DaveMethvin> hey rwaldron
[09:04:11] <gibson042> hello
[09:04:14] <DaveMethvin> so this week i really want to get something done ... i've been so busy with client work
[09:04:19] <orkel> hello!
[09:04:56] <timmywil> hola
[09:05:34] <DaveMethvin> hokay, not bad turnout here
[09:05:54] <timmywil> I worked a little on the focus issues last week. I need a failing test to proceed, but I think using documentElement will work
[09:06:05] <DaveMethvin> if so that would be great
[09:06:23] <DaveMethvin> rwaldron i noticed you closed that ticket on IE10 and getAttribute, was that a dup?
[09:06:33] <rwaldron> I did?
[09:06:47] <DaveMethvin> oh nm he said it wasn't a bug
[09:06:48] <gibson042> timmywil I haven't had a chance to look at that yet, but will see if I can get a failing test today
[09:06:54] <rwaldron> Oh right
[09:06:56] <rwaldron> just now
[09:07:00] <rwaldron> I closed per OP
[09:07:09] <rwaldron> per OP request*
[09:07:09] <DaveMethvin> it sounded a lot like that other getAttribute bug
[09:07:09] <timmywil> gibson042: cool, I'll be around
[09:07:41] <DaveMethvin> tbranyen mentioned he wanted to remove the named global jQuery in 2.0 ... how's everyone feel about that?
[09:08:27] <DaveMethvin> it's going to be a diff btwn 2.0 and 1.9 which is generaly not something we have wanted
[09:08:32] <gibson042> I don't care as long as it goes with 1.10 also
[09:08:36] <tbranyen> allowing for instance to put jquery in vendor/lib/jquery and referencing it with require("vendor/lib/jquery")
[09:08:55] <DaveMethvin> if we pull the named global then most plugins wont' work unless they are wrapped with new code
[09:09:04] <DaveMethvin> s/most/99.9%/
[09:09:13] <tbranyen> DaveMethvin: nah, thats up to the end user to map correctly
[09:09:15] <tbranyen> map exists for that reason
[09:09:18] <gibson042> oh, *that* named global?
[09:09:23] <DaveMethvin> lol
[09:09:27] <timmywil> only need to pull the global if the user is using modules
[09:09:28] <tbranyen> "my/broken/plugin": { "jquery": "vendor/lib/jquery" }
[09:09:43] <tbranyen> oh oh, i meant define("jquery", [], function() {
[09:09:46] <tbranyen> remove the name there
[09:09:51] <gibson042> yeah, that's what I thought
[09:09:54] <tbranyen> yea
[09:09:55] <gibson042> the AMD one
[09:09:57] <timmywil> oh ok, sure
[09:10:05] <timmywil> yea, that shouldn't break plugins
[09:10:19] <tbranyen> i'd say keep it in 1.*
[09:10:21] <tbranyen> change for 2.*
[09:10:30] <tbranyen> humble recommendation
[09:10:35] <timmywil> nah, they should be interchangable
[09:10:42] <DaveMethvin> and you want to keep it in 1.x to prevent breakage?
[09:10:51] <tbranyen> just seems like a breaking change should go in a major version change
[09:10:56] <timmywil> they need to work the same way, whatever we do
[09:11:05] <tbranyen> ah okay, i'm not familiar with your design goals
[09:11:08] <timmywil> for us 1.10 is a major version
[09:11:10] <gibson042> our take is basically that 2.x is 1.<x+10> "for modern environments"
[09:11:16] <tbranyen> word
[09:11:20] <tbranyen> then yeah, i agree
[09:11:47] <DaveMethvin> well the other way to look at it is that AMD users already have to know more shit than the average jQuery user
[09:11:54] <DaveMethvin> and should be able to work their way out of this
[09:12:15] <timmywil> it's not a difficulat fix, we could put something in the README about loading with AMD
[09:12:25] <timmywil> example path setting and all that
[09:12:26] <rwaldron> DaveMethvin tbranyen... i suspect this could be done with a custom build
[09:12:41] <DaveMethvin> rwaldron but i think amd users still want to use the cdn version?
[09:12:47] <timmywil> true, a custom exports
[09:12:51] <rwaldron> just sayin'
[09:12:58] <DaveMethvin> thats why we added amd in the first place so the cdn would work
[09:13:01] <timmywil> but yea, prefer cdn
[09:13:07] <rwaldron> if tbranyen doesn't want to use the cdn and wants no global
[09:13:16] <rwaldron> problem solved?
[09:13:18] <DaveMethvin> yeah, screw that guy
[09:13:20] <rwaldron> or rather...
[09:13:20] <DaveMethvin> :D
[09:13:26] <rwaldron> if tbranyen is ok with not using the cdn
[09:13:35] <scott_gonzalez> FWIW, it seems lot a lot of people would be mad about this.
[09:13:37] <rwaldron> naw, not screw that guy
[09:13:53] <scott_gonzalez> At least that what http://gregfranko.com/blog/registering-the-jqueryui-widget-factory-as-an-amd-module/ makes it sound like
[09:14:06] <rwaldron> I think we can provide a build, on the order of our modular builds
[09:14:10] <rwaldron> anyway
[09:14:18] <rwaldron> DaveMethvin re 2.0 and beta 3
[09:14:28] <tbranyen> i've been using AMD exclusively for like two years now
[09:14:35] <tbranyen> there is no downside for this
[09:14:35] <scott_gonzalez> "The reason most popular third-party libraries register as named AMD modules is because many other libraries depend on them, and desire a common name that they can list as a dependency."
[09:14:36] <rwaldron> I have to resolve a "thing" that Boris moore emailed me about data
[09:14:44] <scott_gonzalez> I think removing it is fine.
[09:14:44] <tbranyen> by making it named, you are making it harder
[09:14:48] <tbranyen> not easier
[09:14:54] <tbranyen> more flexibility with it gone
[09:15:10] <rwaldron> hasData uses Data.prototype.key to get the unlock key, but that function also installs a lock
[09:15:17] <DaveMethvin> tbranyen there must be some reason why it was named though, right?
[09:15:18] <rwaldron> so it's a side effect... sort of
[09:15:25] <timmywil> agreed, anonymouse modules are more flexible in general. It's the change that might cause a ruckus
[09:15:29] <rwaldron> if you use the jQuery API, then no big deal
[09:16:17] <timmywil> anyone loading jQuery from a cdn won't be affected since they've already set their path
[09:16:53] <tbranyen> timmywil: its also because no other library does this
[09:16:55] <tbranyen> what makes jquery special
[09:16:58] <DaveMethvin> well i am not a big AMD user so I would like to hear from people who are...if it seems like it's good and relatively low impact then i'm good with it
[09:17:07] <DaveMethvin> it's got lots of users
[09:17:07] <tbranyen> DaveMethvin: i just pinged jrburke and asked him to join
[09:17:18] <DaveMethvin> yeah i was gonna invoke his name
[09:17:28] <tbranyen> :)
[09:17:39] <tbranyen> my only argument is that i want to use vendor/lib/jquery as the name
[09:17:40] <DaveMethvin> yay jrburke
[09:17:44] <jrburke> hi DaveMethvin
[09:17:45] <tbranyen> if there is way to do this with a named define
[09:17:52] <tbranyen> then awsome, otherwise, it's a limitation
[09:18:20] <DaveMethvin> so if we dropped the named global what impact would it have? dogs and cats sleeping together etc?
[09:18:46] <jrburke> tbranyen: being able to load 'vendor/jquery/someversion' is an antipattern most of the time. for scripts that use amd and depend on jquery, they will always say 'jquery' as the dependency name
[09:18:56] <tbranyen> jrburke: it's my code, why should this library dictate
[09:18:56] <timmywil> tbranyen: I think anonymous is more intuitive. It's one of the only named ones that doesn't get required using a lib path (if loading locally). Like I said, if using the CDN, it doesn't matter.
[09:19:12] <DaveMethvin> potential for breaking existing code?
[09:19:13] <tbranyen> i have conventions
[09:19:21] <tbranyen> and jquery breaks my own conventions, no other AMD library does
[09:19:24] <tbranyen> that i've used
[09:19:38] <jrburke> but really the reason it is a named define is the weaknesses in what a script loader can detect with script-src-based loading
[09:19:46] <timmywil> jrburke: arguably, setting the path for plugins is a pattern for any library
[09:19:48] <jrburke> and how jquery often is loaded twice in a page
[09:20:08] <tbranyen> true, but isn't that a problem with the end developer?
[09:20:15] <tbranyen> jquery shouldn't coddle
[09:20:32] <DaveMethvin> easy for you to say tbranyen :D
[09:20:33] <tbranyen> its a professional tool
[09:20:41] <tbranyen> DaveMethvin: :)
[09:20:44] <DaveMethvin> it's on half the damn sites on the web
[09:20:52] <tbranyen> yeah how many of those are using AMD
[09:21:00] <tbranyen> and would load twice without the named define
[09:21:09] <tbranyen> i think the numbers get much smaller
[09:21:16] <DaveMethvin> i don't know, that was MY question :)
[09:21:27] <tbranyen> maybe make it a build option like rwaldron suggested
[09:21:36] <tbranyen> would that be okay jrburke ?
[09:21:39] <jrburke> the named define was to avoid possibly hard to track down errors in the case of bad script mixing with multiple jquerys and an amd loader.
[09:21:41] <tbranyen> that way i could opt into it
[09:21:51] <tbranyen> my only problem is that i use a package manager
[09:21:53] <DaveMethvin> to a small delta, NOBODY does their own jQuery buid
[09:21:56] <timmywil> the way it is included doesn't need to change. this is a config change for some people who load locally. The number gets even smaller then.
[09:22:00] <tbranyen> and i maintain the jquery jamjs package
[09:22:04] <tbranyen> so i could include that build
[09:22:11] <tbranyen> timmywil: exactly
[09:22:16] <jrburke> but i suppose the error would be an amd loader error, not a jquery error
[09:22:36] <jrburke> my main concern was having people bother jquery folks if they did get the error
[09:22:41] <jrburke> as that would not be good
[09:22:48] <timmywil> lol
[09:22:53] <tbranyen> jrburke: maybe we can intentionally cause that error and doument it in the blog post
[09:22:58] <tbranyen> for the release change log
[09:23:03] <tbranyen> easy enough to point people to
[09:23:27] <DaveMethvin> one for each loader?
[09:23:30] <scott_gonzalez> tbranyen: Are you volunteering to triage our bug tracker?
[09:23:38] <DaveMethvin> lol DON'T DO IT!
[09:23:39] <jrburke> but since the error will be from the amd loader, then it may not be so bad. main concern was CMS-type usage where a developer may not have the right authority to actually fix the problem
[09:23:45] <DaveMethvin> THE HUMANITY
[09:24:00] <tbranyen> scott_gonzalez: i'll start a youtube channel reading each one dramatically
[09:24:25] <DaveMethvin> is AMD used a lot in CMS situations?
[09:24:37] <DaveMethvin> seems like the list shoudl be short enough to enumerate
[09:24:54] <timmywil> if so, require.config can fix that, right?
[09:25:41] <jrburke> timmywil: no, what could fix it is a reordering of script tags (make sure the non-amd-used jquery comes before the tag for the amd script loader)
[09:26:03] <JamesMGreene> ^ we do that at work today
[09:26:18] <DaveMethvin> okay, so the general concensus is that this will not cause current AMD users to scream in pain, and will make tbranyen happy?
[09:26:24] <JamesMGreene> Though I must say I hate mixed mode operation of old style plus AMD :(
[09:26:37] <JamesMGreene> It will also make JamesMGreene happy :)
[09:26:38] <tbranyen> i am never happy, but this will make my life easier
[09:26:55] <tbranyen> and keep my code consistent
[09:26:59] <DaveMethvin> so all we need is a ticket and an owner...
[09:26:59] <timmywil> trademark
[09:27:06] <tbranyen> I can create the ticket
[09:27:13] <scott_gonzalez> So, jQuery plugins continue to reference it as just "jquery" ?
[09:27:21] <tbranyen> yep its what they all do already
[09:27:34] <tbranyen> and then the end user maps or uses paths to set jquery to the correct path
[09:27:37] <tbranyen> as they should already be doing
[09:27:51] <DaveMethvin> can you outline that in the ticket tbranyen?
[09:28:06] <tbranyen> Yes
[09:28:07] <jrburke> yeah i'm still on the fence about it. it feels like just kicking the problem down to once the user includes a library that depends on 'jquery'
[09:28:17] <jrburke> but best to formally document in a ticket.
[09:28:22] <tbranyen> agreed
[09:28:33] <DaveMethvin> jrburke yeah feel free to add in the ticket
[09:28:50] <jrburke> DaveMethvin: is there a ticket for it now?
[09:28:51] <tbranyen> I'll reference your reasoning link as well
[09:29:06] <DaveMethvin> i didn't think there was
[09:29:31] <jrburke> ok tbranyen if making a ticket feel free to then ping me
[09:29:45] <DaveMethvin> don't see one
[09:29:49] <tbranyen> Writing it up right now
[09:29:53] <JamesMGreene> So catch me up for a second: what version(s) would this be for?
[09:30:04] <DaveMethvin> 1.9 and 2.0
[09:30:09] <DaveMethvin> since we want them in sync
[09:30:17] <scott_gonzalez> 1.9 or 1.10?
[09:30:23] <JamesMGreene> ^ Right, that was my main question
[09:30:25] <DaveMethvin> oh 1.10 yeah
[09:30:28] <DaveMethvin> sorry
[09:31:13] <DaveMethvin> okay i have Migrate updated except for the "you're tryna run a script" part
[09:31:40] <DaveMethvin> and that applies to everywhere that we deal with html
[09:31:46] <DaveMethvin> $(), $().append() etc
[09:32:07] <JamesMGreene> Hey jrburke, can I steal a few more minutes of your time in PM?
[09:32:24] <DaveMethvin> so it needs to be hooked into some low level areas and those change version to vesion
[09:32:44] <DaveMethvin> wondered if anyone had some thoughts about how to do it simply
[09:32:59] <DaveMethvin> or wanted to grab it as their project
[09:33:25] <jrburke> JamesMGreene: sure
[09:34:12] <DaveMethvin> if not I am not sure I can get to it before the 2.0b3 release
[09:35:02] <DaveMethvin> Okay on 1.10, let's make that 1.x branch today and work off that for 1.x releases from now on
[09:35:09] <DaveMethvin> basically our "1.x master"
[09:36:19] <scott_gonzalez> DaveMethvin: Why not 1.10-stable?
[09:36:36] <DaveMethvin> we don't need separate branches
[09:36:52] <scott_gonzalez> When we get to 2.1.x, we'll probably want 1.11-stable in case we go back.
[09:36:53] <DaveMethvin> if we were going to maintain 1.9 i guess it would make sense
[09:37:11] <timmywil> scott_gonzalez: we won't go back
[09:37:18] <scott_gonzalez> famous last words
[09:37:24] <scott_gonzalez> :-)
[09:37:32] <gibson042> we can always make those branches if necessary
[09:37:32] <DaveMethvin> we've never gone back in the past
[09:37:52] <DaveMethvin> mainly just wanted to avoid trying to maintain more than two branches
[09:37:57] <gibson042> what is DEFINITELY necessary is a 1.x analog for master, which seems to be best named "1.x"
[09:38:12] <timmywil> I don't think we need to start. Besides, like gibson042 said, we can always create more branches later
[09:38:21] <scott_gonzalez> ok
[09:38:25] <timmywil> or even 1.x-master
[09:38:31] <DaveMethvin> since we will never have a tag 1.x we don't need to call it 1.x-stable
[09:38:38] <DaveMethvin> hmmm 1.x-master
[09:38:46] <DaveMethvin> it's pretty descriptive
[09:38:57] <DaveMethvin> what yall think?
[09:39:06] <gibson042> I like it
[09:39:11] <scott_gonzalez> Makes sense to me.
[09:39:27] <DaveMethvin> in that case 1.x-master it is
[09:40:25] <DaveMethvin> gibson042 i think you wanted to land some 1.10 stuff, do you want to do the honors?
[09:40:35] <gibson042> you got it
[09:40:40] <DaveMethvin> awesome
[09:41:25] <DaveMethvin> YAY
[09:41:33] <DaveMethvin> just looking at the triage tix
[09:42:22] <DaveMethvin> boooring ...
[09:43:23] <DaveMethvin> okay, i'm being bugged to run off to another meeting ... anything else that we should cover?
[09:43:26] <gibson042> we'll need to update the jquery-git generation etc. to use 1.x-master now
[09:43:39] <DaveMethvin> oh good point
[09:43:50] <DaveMethvin> but at least it won't change again
[09:44:02] <DaveMethvin> in fact we can just repoint the current jenkins job to that branch
[09:44:13] <gibson042> yep
[09:45:40] <DaveMethvin> changed the job
[09:45:44] <DaveMethvin> running it again
[09:46:06] <DaveMethvin> the dependent jobs for UI and Mobile need to be renamed/changed
[09:46:53] <DaveMethvin> otherwise it looks liike it 's working
[09:47:05] <DaveMethvin> okay gotta run
[09:49:27] <DaveMethvin> see you guys in -dev!
