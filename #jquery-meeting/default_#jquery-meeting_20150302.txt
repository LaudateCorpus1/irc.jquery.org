[08:59:36] <DaveMethvin> .
[08:59:43] <DaveMethvin> :)
[09:01:32] <timmywil> DaveMethvin, markelog__, m_gol meeting time!
[09:01:40] <DaveMethvin> YAY!
[09:01:42] <arthurvr> Hi guys!
[09:01:49] <timmywil> and arthurvr :)
[09:01:50] <markelog__> hey-hey
[09:01:52] <m_gol> present
[09:01:55] <m_gol> (partially)
[09:02:30] <DaveMethvin> i sure wish google docs had tab completion for irc handles
[09:02:45] <timmywil> that would be great
[09:03:03] <timmywil> Ok, so, I see cursors down by the blockers. We can start there.
[09:03:23] <timmywil> I'm still in progress with .data.
[09:03:51] <timmywil> I'd love to land the Deferred changes, but it's conflicting right now. I'll need to ping gibson on that later.
[09:04:21] <timmywil> were there any concerns about the Deferred stuff?
[09:04:32] <DaveMethvin> none from me, i'd just like to see it land
[09:04:46] <DaveMethvin> we can straighten out any issues later
[09:04:51] <timmywil> agreed
[09:05:24] <timmywil> m_gol: are you all conferenced out?
[09:05:50] <m_gol> almost, I'll be in SLC for most of this week
[09:06:12] <timmywil> kk
[09:06:40] <timmywil> and gibson has another blocker that we'll review when he gets a PR in for the DOM insertion stuff
[09:06:44] <m_gol> so don't expect anything from me this week :)
[09:07:00] <timmywil> that's fine
[09:07:14] <timmywil> did we have a plan for https://github.com/jquery/jquery/issues/1767?
[09:07:15] <DaveMethvin> i am headed over to jQuery UK on Wednesday thru Sunday ... hope to get some coding done on the flights
[09:07:32] <timmywil> are we still leaning towards ignoring stylesheets for .show
[09:07:42] <timmywil> DaveMethvin: hooray!
[09:07:46] <DaveMethvin> on #1767 we talked about a bunch of things, can't recall the outcome
[09:07:51] <markelog__> i'd say we need to try it out
[09:08:29] <DaveMethvin> timmywil the change you made in Sizzle to get :visible being faster fixes a lot of the perf issues that paul_irish pointed out
[09:08:37] <DaveMethvin> regardless of the .show() changes
[09:08:52] <timmywil> yea, I was super-happy about how that turned out
[09:09:05] <timmywil> DaveMethvin: will you be writing the release notes or should I handle that?
[09:09:12] <DaveMethvin> i can do that if you want
[09:09:33] <DaveMethvin> i was trying to tag any big stuff as behavior-change to be sure that was mentioned
[09:09:39] <timmywil> I'm fine either way, but we can boast the :visible improvement. :)
[09:09:43] <DaveMethvin> yeah!
[09:10:07] <timmywil> .show is also assigned to gibson
[09:10:25] <timmywil> but if anyone wants to take that on, I don't think he would mind
[09:10:25] <DaveMethvin> how bout if i write up some draft stuff and give it to you for the final beta blog post?
[09:10:31] <DaveMethvin> what's our schedule for the beta?
[09:10:37] <timmywil> DaveMethvin: sounds good
[09:11:14] <timmywil> I was waiting on getting these blockers pushed through to schedule a beta date
[09:11:15] <markelog__> there is couple places that are behaviour changes, but i'm not sure if they would go in to 3.0, like .show for example
[09:11:43] <timmywil> there's the man gibson042
[09:11:43] <DaveMethvin> well, when in doubt we might as well mention it
[09:11:52] <markelog__> yeah :-)
[09:12:17] <gibson042> note to self: do not attempt long drives in winter
[09:12:20] <gibson042> NEVER AGAIN
[09:12:43] <timmywil> did you do some sliding?
[09:12:49] <DaveMethvin> been there, done that, ugh
[09:12:59] <gibson042> way too much of it
[09:13:07] <gibson042> but we're all back in one piece now
[09:13:29] <timmywil> gibson042: so, the Deferred PR needs a rebase, but I think we can merge that
[09:13:47] <timmywil> I tried and ran into some stuff I wasn't sure about
[09:13:58] <gibson042> yeah, I hoped to do that before the meeting
[09:14:27] <timmywil> np
[09:14:31] <gibson042> it shouldn't take too long to sort them out
[09:14:35] <timmywil> yea
[09:14:58] <timmywil> gibson042: did you happen to have time for domManip interception?
[09:15:07] <gibson042> looks like I do
[09:15:34] <timmywil> cool
[09:16:26] <timmywil> I was thinking we could run through the PRs real quick to see if we could land any.
[09:16:55] <timmywil> the .offset() seems really close https://github.com/jquery/jquery/pull/2043
[09:17:46] <timmywil> looks like removing "|| { top: 0, left: 0 }" and appending to #qunit-fixture in the tests would close it up
[09:18:13] <gibson042> cool; did everyone else agree to throwing the exception then?
[09:18:30] <DaveMethvin> i'm good with it, at least until we find out some high-profile plugin breaks :)
[09:18:43] <markelog__> )
[09:18:56] <DaveMethvin> i'd rather have the thing error out on nonsense input
[09:19:02] <gibson042> same here
[09:19:08] <timmywil> by the way, I'm not sure what we did before. Is this a behavior change?
[09:19:16] <DaveMethvin> strictly, yes
[09:19:19] <markelog__> yeah, ticket mentioned as one
[09:19:21] <gibson042> yes
[09:19:39] <timmywil> Ok, I labeled then
[09:19:40] <markelog__> is that would be a situation for detached node?
[09:19:52] <markelog__> throwining an exception?
[09:19:53] <gibson042> exactly
[09:20:04] <markelog__> hmm
[09:20:12] <DaveMethvin> yeah, asking for the offset of a detached node seems pretty wrong
[09:20:14] <gibson042> .offset() (upon which .position() depends) used to return (0, 0)
[09:20:26] <gibson042> this is a ripple effect
[09:20:44] <DaveMethvin> neither makes sense if the element isn't in a doc
[09:20:51] <timmywil> ^^
[09:21:34] <gibson042> awesome, that's some API cleanup right there!
[09:21:36] <markelog__> user might not know if element is in the doc
[09:21:48] <DaveMethvin> well they will if they get an error :)
[09:21:50] <markelog__> depends on the context through
[09:21:58] <DaveMethvin> right now it says 0,0 which is wrong
[09:22:13] <markelog__> do native method throws in this situation/
[09:22:14] <markelog__> ?
[09:22:59] <gibson042> gBCR returns an object with all zeroes in every browser but one, IIRC
[09:23:41] <DaveMethvin> is there a use case where someone could reasonably pass in disconnected nodes and not know it?
[09:23:44] <markelog__> how we gonna throw then?
[09:23:46] <gibson042> "IE8 throws error when uses with disconnected element"
[09:24:02] <markelog__> detect if node is disconnected and then throw?
[09:24:05] <gibson042> no
[09:24:24] <gibson042> our change to .offset has it return undefined when position can't be calculated
[09:24:40] <gibson042> so the setter will be looking for undefined.top
[09:24:43] <gibson042> which will throw
[09:25:10] <markelog__> this code - https://github.com/NekR/jquery/blob/1784-fix-offset-in-shadow-dom/src/offset.js#L96
[09:25:14] <markelog__> would still be needed?
[09:26:07] <gibson042> yes, I think it's reasonable to return undefined for `$disconnected.offset()`
[09:26:15] <gibson042> does everyone else agree?
[09:26:38] <markelog__> seems like big change for another PR
[09:26:53] <markelog__> i would prefer it in another PR, so it would be clear what the code does
[09:27:23] <markelog__> since shadow dom is not about throwing or not for offset
[09:27:33] <gibson042> we may be talking about more than one thing here
[09:28:06] <gibson042> the primary technical change of the PR is to stop using jQuery.contains in the .offset getter
[09:28:06] <arthurvr> Iâ€™m afk for a while. Bye guys!
[09:28:16] <timmywil> I think markelog__ is suggesting we leave the PR as is and open a separate issue to change the behavior. Is that right markelog__ ?
[09:28:27] <markelog__> timmywil: yeah )
[09:28:38] <timmywil> I'm fine with that.
[09:28:41] <DaveMethvin> sounds okay with me, if that makes it clearer
[09:28:43] <gibson042> ok; same here
[09:28:43] <timmywil> Will be clear for release notes.
[09:28:57] <gibson042> but it still does include a behavior change
[09:29:01] <DaveMethvin> yeah
[09:29:29] <DaveMethvin> and, based on what the beta uncovers, we may need to retreat if some bunch of popular plugins depend on this behavior
[09:29:34] <DaveMethvin> but i sure hope not
[09:29:49] <DaveMethvin> it's undocumented but that never stopped anyone in the past
[09:30:00] <markelog__> yeah, that is a concern too
[09:31:34] <gibson042> so, final verdict is to leave the extra code for .position() behavior preservation, land the pull (as-is now plus test suite cleanup), and then create and fix a ticket for .position() ?
[09:31:47] <markelog__> sounds good to me
[09:32:04] <timmywil> yup
[09:32:11] <timmywil> Ok, so the next one is https://github.com/jquery/jquery/pull/2029. Small PR to remove deprecated JSHint options. According to scott_gonzalez, this is ready to land.
[09:33:04] <markelog__> if he sure of it, then lets land it
[09:33:28] <markelog__> although i still don't understand why we're deviating from the contribute.jquery.org here
[09:33:43] <timmywil> there's still an open question about our style guide, but removing these options from jshintrc seems ok
[09:34:12] <timmywil> markelog__: I think you were right in suggesting moving that conversation to contribute
[09:35:24] <markelog__> if i'm right, scott_gonzalez doesn't want to change contribute since it would need to be changed in major way, since it needs to be changed anyway
[09:35:50] <markelog__> if i'm making any sence here )
[09:36:36] <markelog__> btw, i can land this one
[09:36:38] <timmywil> you are, but for the purposes of managing the code base, it seems like we'll want to remove these options eventually anyway
[09:36:57] <timmywil> cool
[09:37:02] <markelog__> okay, on me then
[09:38:10] <timmywil> for the .css() one https://github.com/jquery/jquery/pull/2011, I'd love to see his work come to fruition and it looks ready
[09:38:59] <gibson042> it is ready
[09:39:09] <gibson042> I will merge as soon as I get a chance :)
[09:39:13] <timmywil> awesome
[09:40:24] <timmywil> Maybe https://github.com/jquery/jquery/pull/1975 (XHR) is a larger discussion
[09:40:39] <timmywil> jauborg isn't keen
[09:41:17] <DaveMethvin> yeah it wasn't about byte savings tho
[09:41:31] <DaveMethvin> it was about avoiding all the special cases to detect whether we needed to use CORS
[09:41:43] <markelog__> try..catch sucks!
[09:41:59] <DaveMethvin> if XHR is the default transport we can just try it and x-domain will fail if it can't be done?
[09:42:19] <DaveMethvin> right now we need that big whitelist of allowed protocols
[09:43:09] <DaveMethvin> the "no transport" error is kind of strange to begin with
[09:44:29] <timmywil> so, do we want to merge? Seems like we need jaubourg here for rebuttal
[09:44:35] <timmywil> that's not how you spell that
[09:44:49] <timmywil> wait, it is!
[09:45:39] <markelog__> i'm +1 for landing it, but it would cool to hear from jaubourg about it
[09:45:55] <timmywil> yea
[09:46:14] <markelog__> seems beta is ideal time for this kind of changes, if there would something to break ppl will tell us
[09:46:33] <timmywil> so we'll leave that one for now, but ping jaubourg again
[09:46:48] <timmywil> gibson042: does https://github.com/jquery/jquery/pull/1821 overlap with your PR at all?
[09:47:08] <gibson042> it's an exclusive alternative
[09:47:25] <timmywil> Ok, yea, so should we just close it?
[09:47:27] <gibson042> there can be only one
[09:47:29] <gibson042> landed
[09:47:39] <gibson042> I suppose so
[09:48:06] <gibson042> :(
[09:48:23] <timmywil> yea, that's kinda sad to ditch all that work
[09:48:35] <timmywil> but seems like we have to
[09:48:37] <markelog__> it helped though
[09:48:42] <DaveMethvin> agreed
[09:48:55] <gibson042> #1996 may be a bad move
[09:49:13] <gibson042> we just never got the discussion around relevant points that I was hoping for
[09:49:40] <DaveMethvin> we need a good beta to tell us which moves were the right ones
[09:49:45] <gibson042> oh, that reminds me: I think DaveMethvin was asking about pipe recently
[09:49:50] <DaveMethvin> oh yeah
[09:50:09] <gibson042> my preference is to keep it deprecated; I don't want to drag around two asynchronous fulfillment models
[09:50:16] <DaveMethvin> while reviewing what needed to be done for jQuery Compat
[09:50:23] <DaveMethvin> ah, true
[09:50:42] <DaveMethvin> long term it would be nice to totally deprecate the non-Promise/A+ methods
[09:50:50] <DaveMethvin> but i doubt that will happen in our lifetimes
[09:50:58] <markelog__> deprecation?
[09:51:00] <markelog__> or removal?
[09:51:00] <gibson042> I think 3.0 is the time, actually
[09:51:10] <markelog__> we can do the deprecation in 3.0
[09:51:30] <gibson042> removal, who knows, but we're saying "jQuery <3 Promises" now
[09:51:30] <timmywil> does migrate already warn about .pipe?
[09:51:30] <DaveMethvin> deprecation would be fine in 3.0 although you know how people feel about deprecated thigns
[09:51:38] <DaveMethvin> no warnings there
[09:52:11] <timmywil> should it?
[09:52:30] <timmywil> I mean if we deprecate in 3.0
[09:52:38] <timmywil> I don't know how much usage .pipe gets
[09:52:42] <m_gol> We're now more compliant than
[09:52:48] <m_gol> Q! ;)
[09:52:59] <DaveMethvin> well if we deprecate all the old Deferred methods we'd be in trouble since we use them internally still
[09:53:04] <DaveMethvin> but .pipe alone, i don't think we do
[09:53:33] <DaveMethvin> i wouldn't want Migrate throwing warnings from inside the latest jQuery
[09:53:35] <markelog__> m_gol: aam, what?
[09:53:37] <gibson042> I guess we need to define "all the old methods"
[09:53:42] <markelog__> gibson042: +1
[09:53:46] <timmywil> DaveMethvin: good point
[09:53:56] <DaveMethvin> done, fail, etc
[09:54:21] <gibson042> at any rate, I'm against undeprecating .pipe
[09:54:30] <DaveMethvin> since .pipe is a non-compliant .then i think it's a good idea to warn on it
[09:54:40] <DaveMethvin> i'll add a Migrate ticket
[09:55:09] <m_gol> markelog__: https://github.com/kriskowal/q/issues/449
[09:55:32] <m_gol> "Q is Promises/A+ 1.0 compliant, but not 1.1."
[09:55:37] <DaveMethvin> ha ha!
[09:55:44] <DaveMethvin> in your face Q!
[09:55:50] <timmywil> said Picard
[09:55:55] <DaveMethvin> :)
[09:56:00] <m_gol> Open since over a year
[09:56:11] <m_gol> Ago
[09:56:12] <markelog__> am, what is that means?
[09:56:21] <timmywil> Ok, last one https://github.com/jquery/jquery/pull/1714
[09:56:49] <timmywil> This one is a little stale, but it makes sense to me
[09:56:50] <markelog__> stricly speaking we're deviating from the spec in a lot of places right?
[09:57:14] <m_gol> Promises/A+? Where?
[09:57:54] <markelog__> like accepting more then one argument
[09:58:29] <timmywil> I think it's debatable whether that's deviation :)
[09:58:40] <markelog__> see "Maintained backwards compatibility (outside of specifications):"
[09:58:43] <markelog__> from https://github.com/jquery/jquery/pull/1996
[09:58:51] <DaveMethvin> timmywil: on #1714 i was just unsure of whether it was right and hoped mikesherov could verify
[09:59:04] <m_gol> markelog__: that's outside the spec IMO
[09:59:15] <DaveMethvin> seemed strange a bug like that could go unfixed for so long if it was truly a bug
[09:59:21] <markelog__> just like timmy said - debatable
[09:59:32] <markelog__> some people will agree some will not
[09:59:51] <m_gol> well, the spec is formal so it shouldn't be subject to interpretation
[09:59:55] <DaveMethvin> my standard is whether it acts like Promise/A+ when used as Promise/A+
[10:00:19] <markelog__> everything is subject to interpretation
[10:00:23] <m_gol> unless we're talking about the spirit and not the law ;)
[10:00:49] <markelog__> before Domenic post about promises, everyone has very different opinions about those couple paragraphs
[10:00:50] <gibson042> my opinion is that the spec defines behavior in certain cases, and that other cases are outside of it
[10:00:52] <timmywil> m_gol: yes, but I think we can allow for additions to the spec without interfering
[10:01:01] <DaveMethvin> well the key is that we probably broke it enough to piss off existing users but not enough to satisfy Promise/A+ zealots
[10:01:03] <DaveMethvin> :)
[10:01:11] <m_gol> gibson042: that
[10:01:37] <DaveMethvin> i have to run, see you guys later!
[10:01:41] <markelog__> see ya
[10:01:46] <timmywil> thanks DaveMethvin
[10:02:10] <m_gol> cu
[10:02:30] <timmywil> I think we actually got through everything though. If anyone has opinions on https://github.com/jquery/jquery/pull/1714, please comment in the PR, but we'll leave it for now.
[10:02:46] <timmywil> thanks everyone! see you in -dev
[10:02:53] <m_gol> are we leaving markelog__'s large item for next time? ;)
[10:03:03] <markelog__> huh?
[10:03:10] <timmywil> large item?
[10:03:24] <m_gol> one code base etc., closing the room, mic dropped etc. ;)
[10:03:35] <markelog__> ))
[10:03:42] <markelog__> were pretty busy on the day job
[10:03:49] <markelog__> didn't create those tickets
[10:03:53] <markelog__> but i will
[10:03:55] <m_gol> probably better to leave it for the next time then :)
[10:03:56] <timmywil> ohhh, right
[10:04:10] <timmywil> yea, I'd like to leave it <= an hour
[10:04:23] <timmywil> we'll put it in the agenda for next week
[10:04:27] <timmywil> thanks all
[10:04:29] <markelog__> okay, cool
