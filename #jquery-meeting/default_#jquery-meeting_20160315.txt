[14:00:26] <sfrisk> Chassis meeting time!
[14:00:39] <nashvail> Hey everyone!
[14:00:45] <kristyjy> hello
[14:00:55] <sfrisk> kristyjy, arschmitz, geekman-rohit
[14:01:04] <arschmitz> Hi
[14:01:20] <thej> hi everyone
[14:02:15] <sfrisk> https://docs.google.com/document/d/1ke2x_powoI8QnfyFtyOdeOI1ZJjL0PzAy9oXgyUYXb8/edit?usp=sharing
[14:02:17] <sfrisk> Agenda
[14:02:56] <sfrisk> Okay so we've got a bunch of things to cover today, and I've also got a bunch of work stuff happening, so
[14:03:27] <sfrisk> I'm going to try and have this meeting not take much more than a half hour, but I'll leave some time at the end for any GSoC students who have questions
[14:03:44] <sfrisk> First up is JSASS
[14:03:55] <sfrisk> arschmitz has released a stable version with new api docs and tests
[14:04:24] <kristyjy> woot!
[14:04:25] <geekman-rohit> and he told me the other day he already has a feature to have a prefix
[14:04:48] <arschmitz> yes
[14:04:50] <sfrisk> that PR updating chassis is current WIP, but node sass is being a bit of a butt
[14:04:52] <arschmitz> so also something to address
[14:05:01] <sfrisk> dependencies?
[14:05:02] <arschmitz> the issue with buttons
[14:05:04] <arschmitz> yes
[14:05:12] <arschmitz> was not jsass or the task in chassis
[14:05:19] <arschmitz> it was the the dependency was not declared
[14:05:31] <arschmitz> if we refrence one variable file in another
[14:05:36] <arschmitz> it must depend on it
[14:05:58] <arschmitz> to get build order right
[14:06:17] <geekman-rohit> arschmitz is there a doc or example?
[14:06:26] <arschmitz> https://github.com/jquery/css-chassis/blob/master/scss/variables/z_buttons.js#L3
[14:06:40] <arschmitz> its a standard umd wrapper with amd and cjs
[14:06:47] <arschmitz> just need to add the dependency
[14:06:56] <arschmitz> there is a test for it in jsass
[14:07:12] <geekman-rohit> good enough! that solves our issue!!
[14:07:27] <arschmitz> https://github.com/arschmitz/JSass-vars/blob/master/tests/src/z_buttons.js
[14:08:56] <arschmitz> https://github.com/arschmitz/JSass-vars
[14:08:58] <arschmitz> docs
[14:09:23] <arschmitz> also can be used as a cli now
[14:09:55] <thej> awesome stuff !
[14:09:59] <arschmitz> documented there as well but you can also just do --help like most things
[14:10:16] <sfrisk> in your PR do you want to just rename z_buttons
[14:10:25] <arschmitz> sfrisk: yeah i was goingto
[14:10:32] <sfrisk> also, arschmitz, I know you and I talked about naming conventions earlier this week for variables
[14:10:51] <arschmitz> oh right
[14:10:55] <sfrisk> I want to say having the files have the prefix of the variables
[14:11:03] <sfrisk> and also simplifying buttons' variables
[14:11:06] <arschmitz> well that was part of it
[14:11:08] <sfrisk> so btn instead of ui-btn
[14:11:10] <arschmitz> yeah
[14:11:12] <geekman-rohit> arschmitz can you see why the cla isnt valid? I doubt we can get the person whose cla is left tot sign it
[14:11:20] <arschmitz> and keeping file names consistent with the modules they define
[14:11:21] <geekman-rohit> he/she has disappeared
[14:11:25] <sfrisk> the weird thing is they were on the list at one point
[14:11:32] <geekman-rohit> https://github.com/jquery/css-chassis/pull/151
[14:11:38] <sfrisk> because they were approved at the developer summit
[14:11:41] <kristyjy> yeah I was wondering about that. I resigned to make sure it wasn't me but it's not lol
[14:12:13] <sfrisk> oh wait
[14:12:14] <sfrisk> nm
[14:12:24] <sfrisk> error happened after those commits
[14:12:25] <geekman-rohit> but its easier to remember them in scss if we use name as it is
[14:12:28] <arschmitz> looks like their commits no longer exist
[14:12:44] <sfrisk> https://github.com/jquery/css-chassis/pull/130
[14:13:03] <arschmitz> the other thing with naming was that names like "default"
[14:13:06] <arschmitz> are not good
[14:13:08] <arschmitz> default what
[14:13:14] <arschmitz> if it was colors.default
[14:13:16] <arschmitz> would make sense
[14:13:21] <sfrisk> definitely
[14:13:33] <arschmitz> or if its from btn
[14:13:37] <arschmitz> btn.default
[14:13:42] <geekman-rohit> yep agreed
[14:13:51] <kristyjy> hmm I like that I'll update the table one I just made to table.default
[14:14:03] <arschmitz> kristyjy: jsass can do that
[14:14:10] <arschmitz> its a normal option we just dont have turned on
[14:14:33] <kristyjy> oh.. I'll go read the docs :D
[14:14:33] <geekman-rohit> we should rather have the variables declared in jsass with full names as they will be used in scss
[14:14:58] <arschmitz> that just seems annoying
[14:15:17] <geekman-rohit> yeah but easier to understand for new people
[14:15:28] <arschmitz> i dont know its just object notation
[14:15:38] <arschmitz> and its the module name
[14:15:46] <geekman-rohit> this was the argument after which we decided against it last year
[14:15:52] <arschmitz> how would you know the name in the first placw wiht out knowing what module it comes from
[14:15:59] <arschmitz> that was nested though
[14:16:02] <geekman-rohit> yep but its easier if its defined as it is in scss
[14:16:02] <arschmitz> not single level
[14:16:27] <arschmitz> when you start doing it recursivly you need to remember structure
[14:16:28] <arschmitz> not just module
[14:16:34] <geekman-rohit> i agree
[14:16:48] <geekman-rohit> i just think the argument is valid for single level too
[14:17:00] <geekman-rohit> atlease for time being
[14:17:40] <arschmitz> im not sure i agree
[14:17:55] <sfrisk> well, at the moment that's the way buttons work
[14:18:08] <arschmitz> buttons do their own thing
[14:18:11] <arschmitz> they also include ui
[14:18:18] <sfrisk> there is reference to color variables in there by their scss variable name
[14:18:20] <sfrisk> rather than js
[14:18:38] <arschmitz> which is fine scss or js refrence is fine but we should be consistent
[14:18:51] <sfrisk> yeah, well that PR was also open for over a month.
[14:18:57] <sfrisk> I agree in general the 'ui' part should be removed
[14:19:01] <sfrisk> and I can remove that
[14:19:09] <geekman-rohit> there will be cases when scss names are included
[14:19:22] <geekman-rohit> easier if we are consistent with the names, through out
[14:19:29] <arschmitz> one downfall of refrencing scss
[14:19:34] <arschmitz> is its meaningless in the js file
[14:19:45] <sfrisk> I can see pros and cons to both argument
[14:19:50] <arschmitz> when you load it in the browser
[14:19:50] <sfrisk> how about we bring this up in issues
[14:20:04] <geekman-rohit> good idea
[14:20:09] <sfrisk> see if we can get any feedback on what would work better for people?
[14:20:11] <arschmitz> so like with the idea of auto generating the style guide
[14:20:27] <arschmitz> that wont work with anything that uses a scss refrence rather then js
[14:21:03] <arschmitz> because when you try to use the variable in js you will get the string "$variable-name" rather then its actual value
[14:22:29] <arschmitz> geekman-rohit: another reason to auto prefix module names
[14:22:31] <arschmitz> is to avoid typos
[14:22:56] <arschmitz> easy to make a type
[14:23:04] <arschmitz> if your typing typography- 22 times
[14:23:10] <geekman-rohit> agreed
[14:23:24] <geekman-rohit> but harder to read
[14:23:27] <geekman-rohit> for new people
[14:23:31] <arschmitz> how so
[14:23:38] <arschmitz> they need to be told to go to the file anyway
[14:23:43] <arschmitz> which is completely non standard
[14:23:56] <arschmitz> at that point how is it hard to say all variables are prefixed with the module name?
[14:24:28] <arschmitz> jsass is 100% non standard at this point so any amount of usage requires instruction
[14:25:16] <arschmitz> it would also be consistent with the js
[14:25:29] <arschmitz> since in js it will always be chassis.module.name
[14:25:35] <arschmitz> since its an object
[14:25:49] <arschmitz> no
[14:26:01] <sfrisk> okay, so I guess it depends on how the JSASS returns the SCSS if you reference the javascript variable
[14:26:01] <arschmitz> chassic[ "module.name" ]
[14:26:21] <sfrisk> in SCSS is it going to return $varName or will it output the full results of that JS ?
[14:26:27] <sfrisk> like a map of colors or whatever
[14:26:32] <arschmitz> sfrisk: not sure what you mean?
[14:26:56] <sfrisk> so right now placing a the sass variable string means that your output in the scss variables file is a sass variable
[14:27:12] <sfrisk> rather than a copy of the value of the sass variable
[14:27:33] <arschmitz> well its whatever you put there
[14:27:43] <arschmitz> so if you do $somevar and its a string it make a string
[14:27:45] <sfrisk> my question is if you make a reference to the JS object in JSASS, in the SASS variables file, are you getting the sass variable name, or the value of the sass variables?
[14:27:48] <arschmitz> if its an object it makes a map
[14:29:02] <sfrisk> because where I'm concerned is someone taking our SCSS, but saying "I don't want to use grunt on this project, I rather use gulp" or opt to build things with compass and use are SCSS variables file as a starting point
[14:29:35] <sfrisk> changing the $color-primary map might not effect the $btn-primary background map
[14:29:54] <arschmitz> so right now you only frefrence strings
[14:30:05] <sfrisk> I guess my question is if you're referring to the object with JS, is it returning the variable in SCSS, or the value
[14:30:13] <sfrisk> I reference a color map
[14:30:41] <arschmitz> oh sorry
[14:30:49] <arschmitz> so it will output that map
[14:31:00] <sfrisk> instead of $color-default?
[14:31:06] <arschmitz> yes
[14:31:26] <sfrisk> See, that I have concern with for people who might take this to integrate with their own projects
[14:32:05] <sfrisk> because if someone opts to take the SCSS files to do the variable development instead of JSASS (for whatever reason), it means if they change that $color-default map, it won't change the places that map is referenced
[14:32:13] <sfrisk> within another variable or mixin
[14:32:51] <arschmitz> but how would they get the scss file without jsass / grunt?
[14:32:58] <arschmitz> they have to generate it in the first place
[14:33:15] <sfrisk> for our distributed files?  Are we going to do a SCSS version of it?
[14:33:40] <arschmitz> why would you start with the dist files if your going to bodify
[14:33:42] <arschmitz> modify
[14:34:03] <arschmitz> shouldnt you be using the source files was that not the whol concept of being able to integrate chassis into a build
[14:34:06] <arschmitz> as a node module?
[14:34:28] <arschmitz> its kinda a basic principle of dependency managment to not modify dist files
[14:35:03] <sfrisk> I'm saying I could see people taking the compiles SCSS files, and modifying variables directly in SCSS, rather than using JSASS
[14:35:12] <sfrisk> which is a distinct possibility depending on when a themeroller gets going
[14:35:41] <arschmitz> ok thats fine but remembr part of your original reason to use json / js
[14:35:47] <arschmitz> was to be able to generate a style guide
[14:35:57] <arschmitz> if you refrence the scss names that wont work
[14:36:05] <sfrisk> to make it easier yes, but I think we should also be aware people might use this who don't use grunt as a build system
[14:36:22] <arschmitz> ok im not seeing the connection to grunt?
[14:36:30] <arschmitz> grunt is for our internal use
[14:36:34] <arschmitz> nothing to do with users
[14:36:46] <sfrisk> but it helps us build the SCSS variable files
[14:36:48] <arschmitz> its a task running
[14:36:50] <sfrisk> yes
[14:36:52] <arschmitz> right
[14:37:31] <sfrisk> and do we have a jsass gulp for someone who decides they like chassis, what to adjust the colors or whatever in the variables and want to compile locally because their project depends require gulp?
[14:37:39] <arschmitz> its a node module
[14:37:47] <arschmitz> any one can use it in any build system
[14:37:56] <arschmitz> we use a grunt wrapper because we use grunt
[14:38:23] <sfrisk> It's more my concern is I could see CSS devs using Chassis in different ways
[14:38:24] <arschmitz> or as a cli with no build system
[14:38:47] <sfrisk> and I think that having the generated SCSS Variable file output the SCSS variable instead o copy of the value of the variable
[14:38:55] <sfrisk> would be a better solution for CSS developers
[14:39:19] <arschmitz> but worse for library developers
[14:39:30] <arschmitz> who now cant access many of the variables in the js files
[14:39:34] <arschmitz> as they are nothing but strings
[14:39:50] <arschmitz> that cant be resolved to a meaningful value
[14:39:59] <sfrisk> is there anything we can do to get jsass to be like "oh, this javascript variable is referenced, output the SCSS value here?"
[14:40:18] <arschmitz> i can think about it
[14:40:30] <arschmitz> problem is knowing it
[14:40:43] <arschmitz> because how do you know if its a refrence
[14:40:50] <arschmitz> or just a value
[14:41:00] <arschmitz> when you read it you just get the value either way
[14:41:17] <arschmitz> i dont know ill think about it
[14:41:53] <sfrisk> if we can get JSASS out output the SCSS variable name, I'm all for using the JS reference
[14:42:12] <arschmitz> i can probably think of something
[14:42:23] <sfrisk> however if they only way to get the SCSS variable reference is to put the SCSS variable name in a string, I say we continue with that method
[14:44:43] <arschmitz> i could probably add a helper
[14:44:48] <arschmitz> and do something like
[14:45:09] <arschmitz> jsass.ref( "colors.default" );
[14:45:19] <arschmitz> and in the scss it ouputs
[14:45:22] <arschmitz> $default
[14:45:29] <sfrisk> that works
[14:45:29] <arschmitz> and in the js the object
[14:45:43] <arschmitz> so it wont be quite as clean but will work
[14:46:32] <arschmitz> "ui-btn-default": {
[14:46:32] <arschmitz> 		name: "Default Button",
[14:46:32] <arschmitz> 		value: {
[14:46:34] <arschmitz> 			"color": "#212121",
[14:46:36] <arschmitz> 			"background": jsass.ref( “chassis.colors.default” ),
[14:46:38] <arschmitz> 			"border": "transparent",
[14:46:40] <arschmitz> 			"shadow": "true"
[14:46:42] <arschmitz> 		}
[14:46:44] <arschmitz> 	},
[14:46:45] <sfrisk> How does that work for everyone?
[14:47:13] <geekman-rohit> works with me
[14:47:29] <geekman-rohit> cant we have something like scss.colors.default
[14:47:30] <arschmitz> if there are other helpers that make sense
[14:47:50] <arschmitz> chassis is the global we expose in js
[14:48:02] <arschmitz> and so its the module name passed between files
[14:48:07] <geekman-rohit> also some values may not be computed until sass runs
[14:48:22] <geekman-rohit> we must have it in style guide
[14:48:30] <geekman-rohit> not to mention functions in sass variables
[14:48:32] <arschmitz> yes
[14:48:56] <geekman-rohit> so no btn.margin : "em(default.margin)"
[14:48:57] <arschmitz> true anything with a function or something will fail
[14:49:11] <geekman-rohit> we can live with that
[14:49:46] <arschmitz> if we use a strict naming scheme
[14:49:57] <arschmitz> we can also explain how to back refrence the js
[14:50:01] <arschmitz> with regex
[14:50:05] <geekman-rohit> agreed
[14:50:10] <arschmitz> but that would be like advanced usage
[14:50:55] <arschmitz> so that seems like something just for an advanced demo down the line
[14:51:07] <arschmitz> and the margin example
[14:51:21] <arschmitz> you should just do btn.margin : default.margin
[14:51:38] <arschmitz> then when you it do em( btn.margin )
[14:51:53] <arschmitz> keep the functions in the scss rather then the vars where possible
[14:52:13] <sfrisk> definitely
[14:52:18] <sfrisk> I don't want the mixins in the JS
[14:52:29] <arschmitz> that gets crazy fast
[14:52:36] <arschmitz> and too much having to cross frefrence
[14:52:39] <kristyjy> yeah definitely
[14:52:57] <sfrisk> okay, we're getting near the end of the hour, and we haven't really touched a lot of stuff on the list, but I need to get back to work soon, so let's talk GSOC real quick
[14:52:59] <arschmitz> ideally stick to strings and maps where possible
[14:53:01] <sfrisk> before our hour is up
[14:53:22] <sfrisk> anything more complicated than that, SCSS can handle using the variable
[14:53:30] <arschmitz> sfrisk: exactly
[14:53:31] * all3fox indicates presence, but does not want to interrupt
[14:53:45] <nashvail> so do we get to discuss the PRs in the next meeting ?
[14:54:10] <sfrisk> Looks like, since a bunch of us are at work, and there is only so much time we can take for meetings during the day
[14:54:20] <sfrisk> I will say, everyone go over the existing PRs and comment on them
[14:54:40] <nashvail> that'd be good
[14:54:50] <geekman-rohit> if any gsoc students have queries related to proposals or contributing
[14:54:56] <geekman-rohit> fire them away
[14:55:03] <nashvail> yes
[14:55:05] <geekman-rohit> sfrisk here or css-chassis?
[14:55:09] <sfrisk> GSoC QA Party time!
[14:55:12] <all3fox> would like to participate in GSoC, planning on doing a small PR this Friday-Sunday, do you have any PRs that you could advise?
[14:55:15] <geekman-rohit> i believe you have to mute it
[14:55:25] <sfrisk> we could close up this meeting and put the questions in #css-chassis
[14:55:30] <sfrisk> and answer over the course of an hour
[14:55:37] <geekman-rohit> im free for half an hour
[14:55:51] <geekman-rohit> all3fox ill answer in #css-chassis in a moment
[14:55:53] <geekman-rohit> see you all there
[14:55:54] <sfrisk> I'm not super free, but I can answer questions here and there
[14:56:01] <sfrisk> Okay GSOC questions -> #css-chassis
[14:56:09] <nashvail> alright
[14:56:15] <sfrisk> This has been your regularly scheduled Chassis meeting
