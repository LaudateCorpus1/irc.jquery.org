[08:59:44] <scott_gonzalez> gnarf gseguin agcolom arschmitz JasonDScott___ johnbender jzaefferer kborchers petersendidit rxaviers tj_vantoll toddmparker uGoMobi uGoMobi_ uGoMobi__
[08:59:50] <rxaviers> hello
[08:59:56] <arschmitz> Hey
[08:59:58] <uGoMobi__> Hi
[09:00:00] <tj_vantoll> Heyo
[09:00:49] <jzaefferer> Hey y'all
[09:01:08] <uGoMobi__> I am phone and 3G so if I react slow you know why that is
[09:01:41] <uGoMobi__> on phone *
[09:03:30] <scott_gonzalez> So we started discussing AMD/UMD before.
[09:03:54] <kborchers> kind of around
[09:03:58] <scott_gonzalez> I'd like to have a meeting with someone from mobile and DaveMethvin this week to discuss how we want to proceed with that.
[09:04:14] <scott_gonzalez> I don't think we should spend time discussing that in this meeting.
[09:04:25] <scott_gonzalez> Who from mobile should be in that meeting?
[09:04:47] <arschmitz> scott_gonzalez: gseguin knows the most but hes busy not around these days
[09:04:50] <jzaefferer> not mobile, but I'd like to join that
[09:05:03] <fnagel> Sorry for the delay
[09:05:27] <arschmitz> scott_gonzalez: aside from him _|Nix|_ or myself probably
[09:05:45] <scott_gonzalez> Ok, since you responded, I'll put your name down :-P
[09:05:57] <arschmitz> thats fine im happy to
[09:06:16] <scott_gonzalez> So after this meeting, we'll try to find a time that works for me, jzaefferer, arschmitz, DaveMethvin
[09:06:40] <scott_gonzalez> We can probably talk about Bower in that same meeting.
[09:06:45] <scott_gonzalez> That's probably a much shorter conversation.
[09:06:53] <arschmitz> ok
[09:07:02] <scott_gonzalez> jzaefferer: Let's ping danheberden about gaining ownership of the existing package.
[09:07:04] <rxaviers> scott_gonzalez, I'd like to join that meeting too. Any time works for me
[09:07:17] <scott_gonzalez> rxaviers: Added to the list.
[09:07:19] <DaveMethvin> also timmywil who owns our AMD ticket
[09:07:22] <rxaviers> \o/
[09:07:35] <scott_gonzalez> added timmywil
[09:07:44] <timmywil> woo!
[09:08:09] <scott_gonzalez> Ok, on to a topic with actual discussions.
[09:08:09] <timmywil> so excited about that
[09:08:18] <scott_gonzalez> Well, that makes one of us :-P
[09:08:55] <scott_gonzalez> arschmitz: Do you want to discuss mobile/UI widgets and the merge?
[09:09:02] <arschmitz> sure
[09:09:16] <scott_gonzalez> jzaefferer posted https://gist.github.com/jzaefferer/5b16b9aa19726f351d90 with some notes
[09:09:29] <johnbender> I'm not going to participate today, I'm heading out to breakfast with my family (vacation)
[09:09:31] <scott_gonzalez> I think there was a Google Doc that was created after that.
[09:09:46] <uGoMobi_> Yeah
[09:09:46] <jzaefferer> arschmitz: did you do a review of UI widgets that can/should be packaged in mobile?
[09:09:49] <arschmitz> yes its the same though uGoMobi and i are going to comment on it
[09:09:57] <uGoMobi_> So we can comment
[09:10:03] <jzaefferer> can you share that we jquery-devs-team?
[09:10:13] <arschmitz> jzaefferer: quickly but not nicely done like this yet
[09:10:24] <uGoMobi_> Ok will do
[09:10:26] <jzaefferer> that's okay, I had a long flight ;)
[09:11:13] <arschmitz> we have already pulled in tabs
[09:11:23] <arschmitz> thats where we are starting
[09:12:27] <arschmitz> others that i think could make sense are autocomplete, datepicker, menu, spinner, accordion
[09:12:51] <arschmitz> dialog could be a replacement for our popup
[09:12:56] <gseguin> scott_gonzalez: when would that meeting be?
[09:13:16] <scott_gonzalez> gseguin: We'll discuss a date/time after this meeting.
[09:13:22] <jzaefferer> arschmitz: okay, would be nice if you or someone else could do some basic testing of each of these to see how good or terrible they are right now
[09:13:31] <arschmitz> already done
[09:13:34] <fnagel> Having the normal select popup for options on touch devices will be asked for UI selectmenu
[09:13:36] <scott_gonzalez> Don't bother testing datepicker :-P
[09:14:15] <arschmitz> jzaefferer: iv already got them all working in mobile execpt accordian and dialog
[09:14:32] <jzaefferer> ah, nice
[09:14:58] <arschmitz> its mostly just about themeing and extending them to work with autoinit
[09:14:59] <uGoMobi_> arschmitz: great!
[09:15:50] <arschmitz> i think for things that are going to be shared they should be written as a "ui" widget first and foremost
[09:16:00] <scott_gonzalez> correct
[09:16:04] <arschmitz> then extended to work for mobile and add autoinit
[09:16:20] <jzaefferer> fnagel: that's a good point. The selectmenu in mobile has the custom menu as an extension
[09:16:29] <scott_gonzalez> And we can organize the code in UI to make any customizations that need to occur as easy as possible.
[09:16:38] <arschmitz> exactly
[09:16:50] <arschmitz> i already started discussing that with jzaefferer on the datepicker a little
[09:17:22] <arschmitz> the other issue is namespace
[09:18:02] <scott_gonzalez> Right now you have https://github.com/jquery/jquery-mobile/blob/master/js/widgets/tabs.js#L11
[09:18:05] <fnagel>  jzaefferer: It was asked a dozen time for the old version, so...   But what exactly is the "custom menu"? Custom renderer?
[09:18:07] <scott_gonzalez> Can you just do $.mobile.tabs = $.ui.tabs?
[09:18:20] <arschmitz> scott_gonzalez: i tried that it didnt work for some reason
[09:18:30] <arschmitz> i dont recal why right this second
[09:18:46] <scott_gonzalez> arschmitz: Let's get together this afternoon and look into that.
[09:18:52] <arschmitz> scott_gonzalez: perfect
[09:18:55] <jzaefferer> fnagel: custom menu is the menu we render, in place of the native select menu
[09:19:22] <arschmitz> the way we may potentially use menu is a little different then what you might think lol
[09:19:37] <arschmitz> it actually gives us an easy way to do nested listviews
[09:20:04] <arschmitz> one of the examples from ui adapted for mobile http://jsbin.com/itixun/3/edit
[09:20:56] <fnagel>  jzaefferer: Ahh ok. Can you give a little context for this whoe discussion? It's about merging mobile and UI widgets, right?
[09:21:58] <jzaefferer> fnagel: yeah, having UI the home of all widgets that are useful in both contexts, then having mobile wrap those with theming and autoinit support. Along with widgets like navigation that don't belong in UI
[09:22:36] <jzaefferer> fnagel: we wanted to move there for a while, but finally got talking and taking actions a few weeks ago, while a few of us were together in Portland
[09:23:19] <fnagel>  jzaefferer: Thanks, exactly what I thought.
[09:24:18] <uGoMobi_> arschmitz: I can look into how to deal with theming
[09:24:18] <jzaefferer> fnagel: afaik the mobile selectmenu uses the native select menu by default, but it has a bundled extension that adds a custom menu
[09:24:30] <arschmitz> jzaefferer: thats exactly correct
[09:24:51] <fnagel>  jzaefferer: I guess merging both widgets should be no big deal then
[09:24:58] <_|Nix|_> We also hide the native menu below a div that looks like a button.
[09:26:02] <uGoMobi_> But that's not the custom select menu extension
[09:26:21] <fnagel> uGoMobi: But another extension?
[09:26:34] <_|Nix|_> fnagel: No. We do that for all select menus.
[09:26:36] <arschmitz> custom select makes the select into a popup basicly
[09:26:45] <uGoMobi_> No that's just the select menu widget
[09:27:21] <_|Nix|_> fnagel: All select menu native widgets are enhanced by mobile. Additionally, if data-native-menu=false is set on any of them, the extension is applied as well.
[09:27:41] <fnagel> Ok, thats more clear
[09:28:01] <_|Nix|_> fnagel: You can opt any of them out with data-role="none", IIRC.
[09:28:25] <fnagel> How do you handle big menus? That was always a problem when using the custom menu within the UI widget
[09:28:34] <_|Nix|_> fnagel: A dialog.
[09:28:38] <arschmitz> fnagel: we make a custom page
[09:28:42] <_|Nix|_> fnagel: ... containing a single listview.
[09:28:42] <arschmitz> thats just the menu
[09:29:30] <_|Nix|_> fnagel: Yeah, I guess that's another mobile thing. A dialog is just like a page, only styled slightly differently.
[09:29:38] <fnagel> Nice solution but I think thats not usable when not in a straight mobile context
[09:29:47] <arschmitz> _|Nix|_: our concept of dialog and uis are very different
[09:29:58] <fnagel> _|Nix|_: Thats my thought too
[09:30:02] <arschmitz> fnagel: thats 100% correct
[09:30:07] <_|Nix|_> I figured so ...
[09:31:01] <arschmitz> moving forward i think our best bet is to just go one widget at a time and merge them
[09:31:02] <_|Nix|_> We were thinking of separating out the dialog-ification into an extension as well.
[09:31:03] <fnagel> Possible solution? I would like to have your "native menu option" in UI Selectmenu. Best usability and no a11y issues
[09:31:38] <fnagel> Agree on both points
[09:32:07] <arschmitz> there are going to be special usecase issues like in menu / select for all different widgets but if we can collaborate on the core widget to work for both and extend for mobile
[09:33:12] <arschmitz> so i think maybe we should prioritize which widgets to start with
[09:33:31] <uGoMobi_> +1
[09:33:37] <arschmitz> and as one or two are done it will give us a clear plan as we do more
[09:34:09] <tj_vantoll> Agreed. Slider seems like a decent one.
[09:34:31] <arschmitz> tj_vantoll: yeah there is already some planning work done on a combined slider
[09:34:43] <arschmitz> but this brings up an issue scott_gonzalez discussed in portland a bit
[09:35:13] <arschmitz> scott_gonzalez: you said we should never trigger the native change event on an input we should use a custom event like sliderChange
[09:36:02] <scott_gonzalez> Yeah, we have this documented for all UI widgets.
[09:36:11] <arschmitz> scott_gonzalez: we discussed this a little but it seems like it would be an issue for progressive enhancment
[09:36:25] <tj_vantoll> Native change events are not fired when you change the value with JavaScript so it's an attempt to stay consistent with that.
[09:37:20] <arschmitz> the problem comes with something like our custom select
[09:37:44] <arschmitz> when someone clicks on a select and selects a value a change event is expected to be fired
[09:38:04] <arschmitz> and if jqm bails due to the browser and its not enhanced change will be fired
[09:38:20] <fnagel>  arschmitz: we advise users to use built in events atm
[09:38:22] <arschmitz> but if its enhanced no change will be fired only a selectChange
[09:39:17] <arschmitz> right now in mobile we try to stay as close to native behavior as possible as if the element was not enhanced
[09:39:25] <tj_vantoll> You *could* listen for the native change and fire a selectChange right?
[09:40:10] <arschmitz> part of the problem is our graded broswer support
[09:40:22] <arschmitz> in c grade we run none of the jqm js at all
[09:40:35] <_|Nix|_> tj_vantoll: This is the opposite problem. We need to coax the native element into firing its event, because we've changed the value programmatically, but it looks as though it was changed via user action.
[09:40:58] <arschmitz> but js could still be supported and running whatever other scripts are there besides jqm
[09:41:26] <_|Nix|_> Yeah, so this is basically for the benefit of third-party code that listens for change events.
[09:41:28] <fnagel> tj_vantoll: Listening to events is currenlty not possible across all browsers if I remeber correct.
[09:41:43] <scott_gonzalez> I feel like if you're using jQuery Mobile and supporting C grade browsers, you need to write different branches of JS anyway.
[09:42:03] <scott_gonzalez> fnagel: There's no way that jQuery supports a browser in which events just do not work.
[09:42:18] <arschmitz> scott_gonzalez: true
[09:42:25] <tj_vantoll> Change events will always fire if the user actually changed the value of a native control. When it fires is inconsistent.
[09:42:29] <_|Nix|_> scott_gonzalez: Well, the branch for the case where it's a C-grade browser is really short. We return immediately.
[09:42:48] <arschmitz> _|Nix|_: i think he means any 3rd party scripts
[09:42:52] <scott_gonzalez> tj_vantoll: Well, the problem is that the user changes the value, then the widget sees that, and changes the value again. And now there won't be a change event.
[09:42:58] <_|Nix|_> arschmitz: Oh.
[09:43:10] <scott_gonzalez> Yes, I mean 3rd party scripts.
[09:43:12] <tj_vantoll> Ah right.
[09:43:32] <scott_gonzalez> Since the case that was brought up was an inconcistency across A and C grade browsers listening for changes.
[09:43:33] <_|Nix|_> arschmitz: But why would they have different paths? If all you want is to catch the change event and maybe do some validation ...
[09:44:04] <scott_gonzalez> The events are generally different.
[09:44:16] <fnagel> scott_gonzalez: Perhaps more clear with jörns words from selectmenu wiki: "While selectmenu updates the underlying select element, it doesn't  trigger any events on that element, e.g. change. If other components  rely on that event, you have to build the integration manually."
[09:44:19] <scott_gonzalez> For example, an autocomplete change event has data, and informs you if an item was chosen.
[09:44:24] <_|Nix|_> I guess we can only render the environment browser-agnostic to a point.
[09:45:11] <_|Nix|_> fnagel: I guess you guys solved it with documentation. That's prescient of you!
[09:45:29] <arschmitz> i think im actually starting to come around that its not needed ( triggering native change )
[09:45:37] <_|Nix|_> fnagel: Unfortunately, I think we've already spoiled our users with apparently-native change events.
[09:45:55] <arschmitz> it will just be a big change with a BOLD deprecation waring
[09:45:58] <arschmitz> warning
[09:46:13] <_|Nix|_> arschmitz: Yeah. Agreed.
[09:46:52] <fnagel>  _|Nix|_: We talked about this a lot and came to the conslusion its technically not possible without huge performance loss (event polling)
[09:47:22] <scott_gonzalez> What's not possible?
[09:47:55] <fnagel> trigger event on the original select
[09:48:15] <fnagel> you discusses this with us in one of the PRs
[09:48:21] <_|Nix|_> If we stop triggering native events, will it be exactly correct to .on( "change selectChange", function() {} );?
[09:48:48] <scott_gonzalez> You may get double notified, depending on whether the widget actually makes any changes.
[09:48:51] <_|Nix|_> That is, will one XOR the other fire and exactly according to spec?
[09:49:06] <_|Nix|_> scott_gonzalez: Does the widget trigger change if the change was done programmatically?
[09:49:15] <_|Nix|_> scott_gonzalez: ... the native widget ...
[09:49:18] <scott_gonzalez> no
[09:49:29] <scott_gonzalez> Programmatic changes don't trigger events.
[09:49:33] <tj_vantoll> It has no way of knowing that happened without polling.
[09:49:43] <_|Nix|_> scott_gonzalez: So, under what circumstances would you receive double notification?
[09:50:16] <scott_gonzalez> Well, since we're talking hypotheticals and not specific widgets right now, let's make up a new widget to discuss.
[09:50:18] <scott_gonzalez> We have a text field.
[09:50:29] <scott_gonzalez> And it triggers textchange whenever the value changes and the field loses focus.
[09:50:41] <tj_vantoll> Yep. So autocomplete, datepicker, etc
[09:50:54] <scott_gonzalez> The user tabs to the field, types in a value, and tabs out.
[09:51:12] <scott_gonzalez> If the widget doesn't do anything, but observes the focus and blur, it should trigger textchange.
[09:51:22] <scott_gonzalez> But because no programmatic value was set, the native change will occur as well.
[09:51:38] <uGoMobi> I have a to leave in a few minutes. shall we discuss grunticon and Topcoat on -dev and in next meeting
[09:51:44] <uGoMobi> ?
[09:52:12] <_|Nix|_> scott_gonzalez: What if we render the native widget unfocusable?
[09:52:24] <scott_gonzalez> In many cases that's now what we do.
[09:52:39] <scott_gonzalez> And I certainly wouldn't want to start doing that for things like autocomplete and datepicker.
[09:52:43] <scott_gonzalez> s/now/not/
[09:53:58] <_|Nix|_> This puts a crimp in third-party C-grade functionality.
[09:54:28] <_|Nix|_> Or, rather non-C-grade functionality, because that's where double notifications can occur.
[09:54:50] <arschmitz> _|Nix|_: if they dont want to handle both they should not bind to both
[09:55:03] <tj_vantoll> *Usually* double notifications are ok in change event handlers.
[09:55:09] <_|Nix|_> arschmitz: They have to bind to both to handle both C-grade and non-C-grade.
[09:55:22] <arschmitz> _|Nix|_: they could asicly have two code paths
[09:55:30] <scott_gonzalez> non-C-grade should just bind to the custom widget change event.
[09:55:54] <scott_gonzalez> Who is writing single-path code for C and non-C browsers?
[09:55:55] <arschmitz> or not even they could use a varible for the event name if cgrad event = change else event = select change
[09:56:21] <_|Nix|_> scott_gonzalez: OK, but what would you have third parties do? .on( $.mobile.grade === "c" ? "change" : "widgetChange", function() {} ); ?
[09:56:30] <_|Nix|_> scott_gonzalez: I'm not saying that's bad, I'm just asking ...
[09:56:36] <rxaviers> guys, can we wrap this discussion into -dev, so we can quickly go thru the meeting items?
[09:56:39] <arschmitz> single path or not its pretty easy to handle like that
[09:56:40] <scott_gonzalez> What type of 3rd party are we talking about?
[09:56:53] <scott_gonzalez> 3rd party to Mobile is everyone, including direct users.
[09:57:02] <_|Nix|_> OKOK. Let's talk about it on -dev.
[09:57:03] <scott_gonzalez> 3rd party to users would be things like extensions.
[09:57:15] <_|Nix|_> scott_gonzalez: I meant app devs.
[09:57:28] <scott_gonzalez> App devs should have completely separate code for C and non-C, I would think.
[09:57:44] <scott_gonzalez> I can't imagine having a single code path for a fully enhanced app and an unenhanced app.
[09:58:14] <scott_gonzalez> It'd be like basic Gmail and normal Gmail being in a single file.
[09:58:21] <arschmitz> and if they want to its as simple as checking the grade and chaing event names
[09:58:32] <arschmitz> i dont think this is really an issue
[09:58:43] <scott_gonzalez> This seems like the smallest of their concerns if they're writing code to handle both.
[09:58:55] <arschmitz> i agree
[09:59:54] <arschmitz> so as rxaviers suggested maybe move on for now
[10:00:25] <scott_gonzalez> uGoMobi: Yes, let's discuss grunticon and topcoat in -dev.
[10:00:32] <arschmitz> one more mobile ui merge item
[10:00:37] <arschmitz> ui core
[10:00:52] <arschmitz> does mobile just pull in the whole ui core as is
[10:00:56] <arschmitz> or something else
[10:01:14] <scott_gonzalez> Well, when we add AMD, we can split ui.core into multiple files.
[10:01:16] <arschmitz> scott_gonzalez: we discussed this a little before and i think that was the conclusion we came to
[10:01:19] <scott_gonzalez> And then you can pull in the sane stuff.
[10:01:30] <rxaviers> scott_gonzalez, uGoMobi, does anyone started some work for grunticon and topcoat? I'd like to know what are the plans there
[10:01:31] <arschmitz> scott_gonzalez: and mobile does not have a core anymore
[10:01:35] <scott_gonzalez> Today, the answer would be yes, pull in the whole thing.
[10:01:49] <scott_gonzalez> But once AMD lands, we'll be able to remove the stuff you don't care about.
[10:01:53] <scott_gonzalez> Like old jQuery support.
[10:01:58] <scott_gonzalez> And deprecated features.
[10:02:20] <arschmitz> scott_gonzalez: yeah and core right now is not so big that its going to be a huge hit until then
[10:02:31] <scott_gonzalez> yup
[10:02:42] <arschmitz> and with mobile core gone i think it makes more sense now too
[10:02:52] <scott_gonzalez> cool
[10:03:32] <arschmitz> ok i think that covers the basics for now unless some one else has something about merge?
[10:06:24] <scott_gonzalez> ok, well we've hit the 1 hour mark.
[10:06:32] <scott_gonzalez> So let's move any other discussions to -dev.
[10:06:34] <rxaviers> scott_gonzalez, before you close the meeting. Could you talk in very high level what are the plans for next items? Any work started? Do we have a summary wiki for topcoat and grunticon, like jzaefferer did for AMD support?
[10:07:02] <scott_gonzalez> Mobile has docs for grunticon and icon support in general.
[10:07:13] <scott_gonzalez> I don't think we have anything for topcoat yet.
[10:07:49] <scott_gonzalez> Grunticon supports several layers of fallbacks.
[10:07:56] <scott_gonzalez> Perferred is data-URI SVGs.
[10:08:02] <scott_gonzalez> Then data-URI pngs.
[10:08:07] <scott_gonzalez> Then external pngs.
[10:08:30] <arschmitz> the main issue for icons right now is settings and having them be required
[10:08:35] <scott_gonzalez> Each fallback is a separate stylesheet. So you only serve up what's required.
[10:09:01] <scott_gonzalez> So the biggest issue, as arschmitz just said, is that to have the fallbacks be automatic, you need to provide some config in JS.
[10:09:12] <scott_gonzalez> So the JS knows where the stylesheets are when it determines which one to load.
[10:09:41] <scott_gonzalez> Scott Jehl is looking into a single stylesheet that would have data-URI SVGs + an external png sprite.
[10:09:42] <rxaviers> ok
[10:10:01] <scott_gonzalez> So that would give us slightly more bytes to load for the CSS file.
[10:10:08] <scott_gonzalez> But it would remove the need for any config.
[10:10:36] <scott_gonzalez> Right now there are no sprites that get used, the external pngs are a separate file for each iamge.
[10:10:44] <rxaviers> so, we have this "experiment" in progress before we decide what path we take.
[10:11:09] <scott_gonzalez> Right, it looks like this new idea of merged rules should work.
[10:11:27] <rxaviers> cool. any link to the experiment?
[10:11:28] <scott_gonzalez> The mobile team has done a lot of research into this already, and they know the grunticon concept works.
[10:11:45] <arschmitz> yeah its all just about implementation right now
[10:12:05] <scott_gonzalez> Well, you can see grunticon at https://github.com/filamentgroup/grunticon
[10:12:06] <arschmitz> and can it reasonably done with out required config
[10:12:14] <rxaviers> nice ok thanks
[10:12:55] <rxaviers> so, I guess for topcoat, we still need to discuss and summarize requirements and action points in a perhaps wiki entry?
[10:13:55] <scott_gonzalez> There's https://github.com/jquery/jquery-mobile/issues/6110
[10:14:06] <scott_gonzalez> Which doesn't have any details :-P
[10:14:10] <rxaviers> great
[10:14:13] <rxaviers> ;)
[10:14:14] <rxaviers> ok thks
[10:14:47] <jzaefferer> Well, Todd has a comment there, that's something to start with
[10:14:53] <jzaefferer> How does it work like in a RWD context?
[10:17:32] <rxaviers> scott_gonzalez, by the way for DownloadBuilder. The current bullets of the agenda have been landed. Right now, we have 1.11 support pretty much done. The only thing left is this https://github.com/jquery/api.jqueryui.com/issues/154
[10:18:59] <scott_gonzalez> ok, let's move this to -dev now.
