[10:01:24] <sfrisk> Meeting time!
[10:01:29] <sfrisk> (For chassis)
[10:02:17] <sfrisk> arschmitz_, kristyjy, geekman-rohit, arthurvr
[10:03:47] <arschmitz_> hi
[10:04:07] <sfrisk> agenda: https://docs.google.com/spreadsheets/d/1FUdRcAq2d8njs8KAcfQmEyoZL74SXLsLp1rtc7E9z_I/edit?usp=sharing
[10:05:05] <kristyjy> hello
[10:06:45] <sfrisk> hope everyone had a good weekend
[10:08:30] <sfrisk> Okay, First think I had was for geekman-rohit, who I know is online right now, guess he's not in this chatroom though
[10:08:42] <sfrisk> so I'm going to skip to Build Related PRs
[10:08:51] <sfrisk> and when he shows up cycle back to that
[10:09:07] <sfrisk> I've pulled in Build: make JSCS and JSHint lint the grunt config too and Linting:Add scss variable files to linting
[10:09:36] <sfrisk> although that had the downside to having some jscs errors pop up in task files (which for some reason didn't pop up when I ran grunt test locally)
[10:09:55] <sfrisk> so I've got a PR to fix that, https://github.com/jquery/css-chassis/pull/118
[10:10:08] <sfrisk> nothing super exciting, mostly just spacing issues
[10:10:20] <sfrisk> but if you guys and gals want to glance through it to make sure it's okay I'll pull it in
[10:15:33] <sfrisk> arschmitz, how goes accessibility testing pr with dylanb?
[10:15:44] <arschmitz_> he just updated it yesterday
[10:15:47] <arschmitz_> have not looked again
[10:16:11] <sfrisk> so close
[10:16:19] <sfrisk> we miss you michaelarestad
[10:16:20] <kristyjy> lol for reals
[10:17:02] <sfrisk> Okay, going into the stuff I wanted to discuss last week but we ran over and didn't get to it
[10:17:40] <geekman-rohit> sorry, late, got distracted again
[10:18:04] <sfrisk> we have the [hidden] Pr https://github.com/jquery/css-chassis/pull/109
[10:18:25] <sfrisk> Personally I'm in favor of adding it, if no one else disagrees, I'll pull this in tonight
[10:19:01] <geekman-rohit> I agree too,
[10:21:33] <sfrisk> I've updated the buttons pr
[10:21:34] <sfrisk> http://view.css-chassis.com/96-basic-buttons/demos/buttons.html
[10:21:49] <sfrisk> so it's pulled in master and now uses jsass vars for variables
[10:22:25] <sfrisk> I've set up variables for borders, rounded corners, opacity, colors, backgrounds, font weight, text capitalization
[10:22:31] <sfrisk> and something else I can't think of right now
[10:22:39] <sfrisk> I ended up using the colors from bootstrap for testing
[10:22:43] <arthurvr> Late but I’m here :) Hey everybody
[10:22:52] <sfrisk> hey arthurvr! hope vacation went well
[10:23:14] <arthurvr> I’m on a bus atm so let’s hope LTE stays stable :P
[10:24:44] <sfrisk> lol
[10:26:28] <arschmitz_> so a few things i notice right off
[10:26:40] <arschmitz_> there are states missing live --hover--focus
[10:26:51] <arschmitz_> its perfectly valid to be hovered and focused
[10:27:03] <arschmitz_> and any other valid combo
[10:27:25] <arschmitz_> is --default really a modifier? should it just be nothing?
[10:27:48] <arschmitz_> the order of the modifiers matters too
[10:28:02] <arschmitz_> so there needs to be a specified order in which they go
[10:29:02] <arschmitz_> you should also either remove the href from the links or add a line of js with a prefventDefault
[10:29:17] <arschmitz_> because clicking them takes you to the top of the page
[10:29:17] <sfrisk> yeah, I know we had discussed having a hover--focus state - but I wasn't quite sure how we wanted to style those
[10:29:23] <arschmitz_> same with the inputs they submit the forms
[10:29:39] <sfrisk> will do on the links
[10:30:20] <arschmitz_> not the inputs but the submit i mean
[10:30:41] <arschmitz_> and all the buttons since you used type="submit"
[10:30:51] <arschmitz_> which you should probably just not use a type here
[10:31:06] <sfrisk> I think at some point I just started copying and pasting
[10:31:16] <arschmitz_> should also be consistent and use buttons everywhere
[10:31:17] <sfrisk> lower half is almost all <a> and I want to switch those to buttons
[10:31:22] <arschmitz_> and just show that it works on other things at the top
[10:31:32] <sfrisk> it was part of the showing "hey, you can use styling for disabled on buttons!"
[10:32:30] <sfrisk> any ideas on how to style hover-focus?
[10:32:41] <sfrisk> right now the only real difference is that hover is slightly lighter than focus
[10:32:52] <geekman-rohit> well it should be styling of hover
[10:33:13] <geekman-rohit> or so I think
[10:33:15] <sfrisk> because I have focus classes and hover classes on the button page
[10:34:46] <arschmitz_> oh and the disabled class does not really work
[10:34:59] <arschmitz_> click anything with --disabled and it still takes you to top of page
[10:36:34] <sfrisk> the major problem is all the --[some state] examples are all on <a> tags
[10:37:03] <arschmitz_> also there shoud not be a role="button" on links
[10:37:15] <arschmitz_> unless they are being used as a button and not for navigation
[10:37:31] <sfrisk> I'll adjust the demo code to use buttons, and for the disabled ones, remove the href
[10:37:48] <sfrisk> javascript to disable it on a prevent default however hsould be left up for the javascript framework
[10:37:55] <arschmitz_> sfrisk: there should be a note that disabled style does not prevent navigation on links
[10:38:17] <arschmitz_> or default actions on anything thats not an input
[10:38:19] <sfrisk> Okay, I'll ad it in that
[10:38:53] <sfrisk> I used role=button mostly because that's what bootstrap was using for there links as button examples
[10:39:10] <sfrisk> I could add a note that the role="button" should be used if it's acting as a button
[10:39:17] <sfrisk> and it should not be there if navigation is involved
[10:39:22] <arschmitz_> you also can still focus the buttons with disabled class
[10:39:32] <arschmitz_> i mean links
[10:40:12] <sfrisk> I'll write done what notes you've given here on the agenda notes
[10:40:18] <sfrisk> but it would help if this is also in the PR
[10:41:44] <arschmitz_> should probably add tabindex="-1" to remove from the tab order
[10:42:12] <sfrisk> I did have an [aria-disabled="true"] in there at one point too, but that was triggering errors with css lint
[10:42:12] <arschmitz_> and add aria-hidden
[10:42:28] <arschmitz_> yeah aria-disabled is better sorry
[10:43:51] <arschmitz_> for modifiers i recommend strict alphabetical order
[10:44:02] <arschmitz_> its the only simple way to make this work with out need for a refrence sheet lol
[10:44:21] <sfrisk> makes sense
[10:45:01] <sfrisk> wiat, for how things are listed on the page?
[10:45:07] <arschmitz_> no
[10:45:14] <arschmitz_> the modifiers in the actually class
[10:46:02] <arschmitz_> so instead of ui-button--success--large--active ui-button--active--large--success
[10:46:18] <sfrisk> that complicates things potentially
[10:46:33] <arschmitz_> why?
[10:46:48] <sfrisk> ui-button--acitve--danger--large
[10:46:52] <sfrisk> active*
[10:47:13] <arschmitz_> ok whats the problem?
[10:47:40] <sfrisk> right now the way the scss is set up, is it goes by "button type" "button size" "button state"
[10:47:52] <arschmitz_> i understand that
[10:47:56] <arschmitz_> im saying we should change it
[10:48:00] <sfrisk> if you're changing the order of states based on alphabetical order, type/size/state isn't consistent
[10:48:07] <arschmitz_> correct
[10:48:12] <sfrisk> and it complicates how things are laid out
[10:48:32] <sfrisk> right now the scss file is consistent for how you look for things
[10:48:37] <arschmitz_> but do we really expect people to remember the order if its not alphabetical
[10:48:54] <arschmitz_> how will people ever know the order modifiers go in
[10:49:01] <arschmitz_> for example you dont have one for corners yet
[10:49:06] <arschmitz_> what about shadow
[10:49:15] <sfrisk> but they can remember "hey, I want a success button, I want it to by this size, and I need this state"
[10:49:18] <arschmitz_> what about other things with other things besides just type size state
[10:49:44] <arschmitz_> there is a never ending list of possible categories for modifiers
[10:49:53] <arschmitz_> how should people remember the order
[10:50:06] <sfrisk> https://github.com/jquery/css-chassis/blob/96-basic-buttons/scss/atoms/buttons/_buttons.scss
[10:50:39] <arschmitz_> and what about if it is a modifier where its possible to have multiple modifiers at the same time
[10:50:43] <sfrisk> if we go with the way you suggest, it could very greatly about where you have to look for active styling when looking at the actual code
[10:50:59] <arschmitz_> so your not answering the question
[10:51:10] <arschmitz_> how should people remember the order of different modifers
[10:51:22] <sfrisk> part of that is good documentation
[10:51:34] <arschmitz_> ok so you think people should ALWAYS have a cheat sheet open
[10:51:38] <arschmitz_> and refer to that
[10:51:53] <sfrisk> in this case I think alphabetical might be more confusing
[10:52:17] <arschmitz_> so do you think our recomendation should be to keep a cheat sheet of modifier orders for each component?
[10:52:37] <sfrisk> you'll have a cheat sheet either way
[10:52:48] <arschmitz_> how do you need a cheat sheet for alphabetical?
[10:52:59] <sfrisk> to know the various options you can select
[10:53:00] <arschmitz_> unless your unaware of alphabetical order?
[10:53:15] <arschmitz_> i think people will have an easier time remember --active --focus etc
[10:53:24] <arschmitz_> then the essentially random order
[10:53:28] <arschmitz_> across componnts
[10:53:46] <arschmitz_> i think we are crazy if we expect people to do this
[10:53:49] <sfrisk> I don't think it's too complicated to remember "hey, active/focus/etc is always at the end of the class"
[10:53:51] <arschmitz_> no common framework does this
[10:54:03] <arschmitz_> but is it ALWAYS
[10:54:04] <arschmitz_> ?
[10:54:12] <arschmitz_> what about when we have 2 dozen components
[10:54:13] <sfrisk> If we set it up to do it that way
[10:54:18] <arschmitz_> with their own sets of modifiers
[10:54:24] <arschmitz_> how do thoes get ordered
[10:54:54] <arschmitz_> with basicly every common css framework you can add modifier classes as you please order means nothing
[10:55:04] <geekman-rohit> arschmitz_ but the code repitition for alphabetical ?
[10:55:04] <sfrisk> but we're using bem
[10:55:07] <arschmitz_> we will be forcing a strict order that has no concret logic
[10:55:13] <sfrisk> it does have logic
[10:55:18] <arschmitz_> geekman-rohit: there is no difference in repition
[10:55:27] <sfrisk> code organization is kinda helpful though
[10:55:31] <arschmitz_> sfrisk: what will the logic be that will work across variying components
[10:55:32] <sfrisk> makes it easier to maintain
[10:55:37] <geekman-rohit> plus its logical to have --size in at firs / last
[10:55:50] <arschmitz_> that have no strict shared sets of modifier categories
[10:56:10] <arschmitz_> let me give an example
[10:56:10] <geekman-rohit> if we do alphabetical, there is no telling --size will be at end or start
[10:56:21] <arschmitz_> buttons lets add a new modifier
[10:56:26] <arschmitz_> --corners
[10:56:35] <arschmitz_> that adjusts the corner radio=us
[10:56:38] <arschmitz_> radius
[10:56:42] <arschmitz_> where in the order does this go
[10:57:23] <arschmitz_> not lets think about a checkbox this will have all the same modifiers as a button but also some new ones like --icon to add or remove an icon we will say
[10:57:28] <arschmitz_> now where in order does that one go?
[10:57:34] <sfrisk> buttons have a hierarchal order of modifiers, it makes more sense to me that the type of modifier is always in the same locasion
[10:57:36] <sfrisk> location*
[10:57:37] <sfrisk> so
[10:57:45] <sfrisk> Button type, Button size, button state
[10:58:05] <arschmitz_> and lets go with tabs that may have a modifier for position left or top which order should that one go in
[10:58:16] <sfrisk> pick somewhere corners will go, but if you always know corners is going to be the xth number thing in, you'll be fine
[10:58:43] <arschmitz_> oh and for buttons we will want a modifier for block vs inline where does that one go
[10:59:07] <arschmitz_> i can go on forever this becomes a nightmare fast as you add components
[10:59:10] <geekman-rohit> the more we discuss this the less I like bem :/
[10:59:39] <arschmitz_> and iv yet to hear anyone propose a logic that handles this thats not well lets just pick an order
[10:59:47] <arschmitz_> just picking is not firendly its not machine parseable
[11:00:38] <arschmitz_> writing an algorithem to add classes in an order like you suggest is pretty messy you would need huge arrays of componenets and modifiers
[11:00:55] <arschmitz_> and how the order changes compoent to component
[11:01:26] <arschmitz_> just to do a simple function to construct a class
[11:02:30] <sfrisk> I think there should be a hierarchal importance to the type of modifier you're adding to a button - I don't think all modifiers are equal enough to warrent just blindly putting all attributes in alphabetical order
[11:02:56] <sfrisk> yes, alphabetical order can be very useful, but I don't believe it would be in this case
[11:03:23] <arschmitz_> i vry strongly disagree and i think this will kill our adoption
[11:03:27] <sfrisk> or maybe I'm just frustrated because I'm going to have to rewrite everything to make it so each attribute is in alphabetical order
[11:03:29] <arschmitz_> espically by JS frameworks
[11:03:51] <arschmitz_> no one will want to deal with either a always having a cheat sheet
[11:03:56] <sfrisk> and up to this point no one reviewing this pr except for you has complained about the order of attributes
[11:04:00] <arschmitz_> or the night mare it will be to construct classes from js
[11:04:21] <sfrisk> I think having a list that says button constructs or
[11:04:44] <sfrisk> [type] [size] [state] isn't that difficult, and it's similar to having attributes in a javascript function
[11:04:57] <sfrisk> you don't put attributes in a javascript function out of order just to make them alphabetical
[11:05:06] <arschmitz_> ok so how should js frameworks programaticly construct classes
[11:05:22] <arschmitz_> answer me that one question
[11:05:22] <sfrisk> Treat buttons as if they were a function
[11:05:48] <arschmitz_> so there should be in every js framework that uses chassis
[11:05:52] <arschmitz_> a spical function
[11:05:55] <arschmitz_> for each component
[11:05:59] <geekman-rohit> <arschmitz_> ok so how should js frameworks programaticly construct classes
[11:06:05] <sfrisk> button (type, size, state)
[11:06:06] <geekman-rohit> he has a point
[11:06:06] <arschmitz_> whafor each element in each componenet i mean
[11:06:12] <arschmitz_> that constructs just the class
[11:06:33] <arschmitz_> im sorry but i think thats insane no framework will want to deal withthat
[11:06:36] <geekman-rohit> but arschmitz_ code organization will be hard if we do this alphabetical
[11:07:02] <geekman-rohit> I just did a meter PR that used a certain heirarchy as order
[11:07:07] <geekman-rohit> like sfrisks
[11:07:08] <arschmitz_> does code organization matter if no one uses it because its too complicated and they just stick with what they have already
[11:07:36] <geekman-rohit> I agree, I was just pointing out a concern
[11:08:10] <geekman-rohit> it wont be possible for js libraries to create classes
[11:08:16] <geekman-rohit> if we dont have a logical algorithm
[11:08:24] <arschmitz_> geekman-rohit: thank you
[11:08:37] <geekman-rohit> and wither we do it alphabetically
[11:08:43] <geekman-rohit> or we provide that algorithm
[11:08:45] <arschmitz_> and we are claiming to be the css framework for javascript libraries
[11:08:48] <geekman-rohit> in chassis module
[11:09:13] <geekman-rohit> I think we should have addressed this sooner
[11:09:17] <sfrisk> Then let the community decide
[11:09:18] <arschmitz_> then we wont be just a css framework anymore
[11:09:32] <geekman-rohit> we have a table pr
[11:09:32] <sfrisk> We'll put this up on the PR, the pros and cons for each side of this discussion
[11:09:35] <geekman-rohit> a buttons pr
[11:09:44] <geekman-rohit> much will have to be rewritten for this
[11:09:50] <sfrisk> we've had people contributing feedback on the buttons PR that don't necessarily come to this meeting
[11:10:22] <sfrisk> and see if it makes more sense to them to have bem attributes listed alphabetically, or a predefined algorithm that we choose
[11:10:32] <geekman-rohit> arschmitz_ s logic is sound behind this, but rewriting 2 PRs ???
[11:10:53] <arschmitz_> geekman-rohit: again prs dont matter if no one likes what we do
[11:10:56] <sfrisk> based on the feedback from that, if alphabetical makes more sense, then we'll rewrite the existing PRs that have been in development
[11:11:06] <arschmitz_> the 3rd option is dont use bem
[11:11:10] <geekman-rohit> yeah but lets take feedback like sfrisk said
[11:11:26] <geekman-rohit> just to be sure its the best way before rewriting things
[11:11:33] <arschmitz_> i think you should open an issue for this specificly this is not button specific
[11:12:00] <geekman-rohit> and I really really should ask us all why we didnt address this sooner
[11:12:03] <sfrisk> Sounds good enough, I'll reference the button pr however as an example
[11:12:05] <geekman-rohit> :(
[11:13:15] <arschmitz_> geekman-rohit: actually this is not the first time i have brought this up
[11:13:34] <sfrisk> Okay, action items for today then on the buttons PR is I'll fix the issues to the documentation that Alex pointed out, as well as tweak a few features, and create an issue discussing the viability of BEM, and how we want to handle BEM modifiers moving forward
[11:14:07] <arschmitz_> we could always do our own kinda bem
[11:14:15] <arschmitz_> modifiers are individual classes
[11:14:21] <arschmitz_> strictly forbid inheritance
[11:14:26] <sfrisk> on that note though, I need to get back to work, since I'm helping prep for a release
[11:14:46] <arschmitz_> and specificity
[11:14:58] <sfrisk> we could do that, and it wouldn't be too unlike what other frameworks are doing
[11:15:30] <geekman-rohit> arschmitz_ If  we do decide to use alphabetical we need to think of a way to organize code better
[11:15:47] <arschmitz_> just do ns-block--element modifier
[11:16:38] <arschmitz_> geekman-rohit: you keep things logical
[11:16:53] <arschmitz_> you dont do alphabetical order in the file
[11:16:59] <arschmitz_> you do logical order
[11:17:27] <arschmitz_> so you would not nessasariily change the order of rules in a file
[11:17:31] <geekman-rohit> I mean the heirarchy of doing &--size { &-- {}, } will be harder with alphabetical
[11:17:37] <geekman-rohit> more code will be repeated
[11:17:52] <geekman-rohit> any way to help with this using js?
[11:17:54] <arschmitz_> so you just mean in the variables?
[11:18:15] <geekman-rohit> we could have a mixin / js function that takes two styles and merges them
[11:18:30] <geekman-rohit> like pass (--size, --active)
[11:18:40] <arschmitz_> geekman-rohit: im not completely clear on your concern or what your trying to address but yes you could
[11:18:53] <geekman-rohit> and it takes styles and merges based on alphabetical / decided order
[11:20:09] <arschmitz_> to be honest at this point true bem does not seem like the right answer for what we are trying to do
[11:20:42] <geekman-rohit> I dont even like bem anymore
[11:20:53] <sfrisk> bem might be better for smaller projects
[11:21:01] <geekman-rohit> adding .focus .disabled is so much easier for everyone
[11:21:01] <arschmitz_> also does explain why the BEM folks were so pushy about wanting UI ane mobile to completely re-write in the BEM JS style too
[11:21:06] <geekman-rohit> machines and humans
[11:21:11] <arschmitz_> geekman-rohit: i agree
[11:21:28] <geekman-rohit> and franklu
[11:21:48] <sfrisk> Okay, I really need to get back to work
[11:21:50] <geekman-rohit> to do that meter pR i had to fret over how to order heirarchy of mixins to reduce duplication
[11:21:58] <arschmitz_> and im not aware nor have i seen any real penelty for multiple classes on an element as long as you avoid specificity and inheritance
[11:22:00] <geekman-rohit> im sure sfrisk had to rewrite a lot already
[11:23:02] <geekman-rohit> I vote we should revote our choice
[11:23:10] <geekman-rohit> before we have more nightmares
[11:23:23] <sfrisk> Button PR on hold then, I'll create an issue summarizing the discussion here
[11:23:42] <sfrisk> (or if someone else wants to do it, cool, since I have to be heads down in code for work for the next few hours)
[11:24:06] <geekman-rohit> sfrisk you can start the issue
[11:24:12] <geekman-rohit> ill summarize this and comment later
[11:24:42] <geekman-rohit> and if I miss anything you and arschmitz and add that
[11:25:23] <sfrisk> Okay
[11:25:47] <arschmitz_> geekman-rohit: it might make more sense for you to open it
[11:25:54] <arschmitz_> then you wil be able to update the description
[11:26:28] <geekman-rohit> Okay
[11:28:36] <sfrisk> Okay, geekman-rohit will create the issue with the description
[11:28:59] <sfrisk> see everyone on the issues/prs/css-chassis channel
