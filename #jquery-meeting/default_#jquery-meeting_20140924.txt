[08:33:26] <jzaefferer> there
[08:33:46] <jzaefferer> JamesMGreene scott_gonzalez gibson042 leobalter Krinkle|detached over here!
[08:33:52] <jzaefferer> https://docs.google.com/document/d/13FbWhiFQ9gWQvB1Tm4QM_OC4me-ha2ujDWH5sdF7ueo/edit
[08:35:17] <jzaefferer> Looks like #668 should be done soon
[08:35:25] <jzaefferer> Looking at the rest of the pre-2.0 milestone: https://github.com/jquery/qunit/milestones/pre-2.0
[08:35:46] <jzaefferer> There's still the discussion about deprecating assert.expect
[08:36:06] <jzaefferer> https://github.com/jquery/qunit/issues/666
[08:36:58] <JamesMGreene> It's useful for our own unit tests but I still find it to be a commonly abused anti-pattern elsewhere
[08:37:35] <JamesMGreene> I'm OK with leaving it in but it oftentimes leads to a false sense of security/confidence as gibson042 mentions in the thread
[08:38:29] <jzaefferer> "I think it's caused about as much harm as good" - I don't understand where that is coming from
[08:39:06] <gibson042> basically, that its "good" is very small
[08:39:42] <gibson042> in my experience, adding expect mostly seems to create busywork
[08:40:32] <jzaefferer> so the "harm" is having to specify the number of assertions?
[08:40:41] <jzaefferer> Not that it actually has negative effects?
[08:40:55] <JamesMGreene> No
[08:42:04] <gibson042> that was probably worded too strongly; I can't think of any actual harm beyond lost time counting and updating tests after making changes
[08:42:29] <gibson042> but like I said, the actual benefit is very slight, often completely negligible
[08:44:45] <jzaefferer> Well, that's pretty difficult to measure. Within jQuery UI we decided to always specify expect, we even added a config option to enforce that
[08:44:54] <JamesMGreene> The harm is common in situations with using `expect` as an overly convenient way to verify array/collection lengths and getting burned later
[08:45:21] <JamesMGreene> It's not that `expect` itself is bad, it's that people use it in situations where they shouldn't
[08:45:26] <gibson042> +1
[08:45:28] <jzaefferer> Can we make this a documentation issue then?
[08:45:40] <JamesMGreene> I'd be content with that
[08:45:42] <jzaefferer> Be more specific about where and where not to use it
[08:46:07] <jzaefferer> on api.qunitjs.com/expect and in the cookbook or whereever else its used
[08:47:02] <jzaefferer> I'll close the ticket and create docs issues later
[08:47:09] <gibson042> even that still leaves open test/beforeEach/afterEach cross-talk
[08:47:17] <jzaefferer> Another discussion: https://github.com/jquery/qunit/issues/665#issuecomment-56380147 - make global beforeEach/afterEach setters
[08:47:23] <gibson042> how does everyone feel about that, especially in the face of nesting?
[08:48:18] <jzaefferer> Nesting is still a strawman for me. Its not going to happen in 2.0 for sure, and that's the version I want to get to for now
[08:48:39] <jzaefferer> otherwise I'm not sure what you are referring to with "cross-talk"
[08:49:28] <gibson042> expect generally appears under `test`, but covers all assertions (including those from beforeEach/afterEach)
[08:49:48] <gibson042> I think it's generally worked around by only pushing failures in afterEach
[08:50:08] <gibson042> at least in the jQuery core suite
[08:50:44] <jzaefferer> To me that begs the question: Why do you have assertions in beforeEach/afterEach?
[08:51:12] <jzaefferer> I also don't understand how pushing failures in afterEach is a workaround
[08:51:40] <JamesMGreene> Yeah, I know what you mean, gibson042
[08:51:41] <gibson042> to assert that proper cleanup took place, usually because all tests share one fixture
[08:52:04] <gibson042> pushing failures is a workaround because without expect, we'd also be happy to push successes
[08:52:21] <JamesMGreene> `expect` FEELS like it should/is bound to the current function context (i.e. only the test callback)
[08:53:08] <jzaefferer> Well, all tests sharing one giant fixture is also one of the biggest problem in the Core testsuite, isn't it?
[08:53:22] <jzaefferer> As Timo likes to say, its the worst testsuite he's ever seen...
[08:53:42] <jzaefferer> (I contributed my share of baggage to that early on)
[08:53:42] <gibson042> no doubt
[08:54:00] <gibson042> a concrete example: https://github.com/jquery/jquery/blob/master/test/data/testrunner.js#L149
[08:54:14] <jzaefferer> I think no single line I wrote in Core src still exists, but probably a lot of the fixtures do...
[08:54:43] <jzaefferer> That comment is interesting
[08:54:50] <gibson042> but also note this one: https://github.com/jquery/jquery/blob/master/test/data/testrunner.js#L130
[08:54:52] <jzaefferer> you can call expect() without arguments
[08:55:04] <jzaefferer> to do expect( expect() + 1 )
[08:55:30] <gibson042> that also seems like an anti-pattern
[08:57:13] <jzaefferer> gibson042: Could you do a summary of various problems in the Core testsuite? I'd like to look into those, but that needs more time
[08:57:21] <jzaefferer> For now, what do we do with https://github.com/jquery/qunit/issues/665 ?
[09:01:24] <jzaefferer> Thank you leobalter for commenting :-)
[09:01:50] <scott_gonzalez> jzaefferer: Can you run the UI meeting?
[09:02:00] <leobalter> jzaefferer: yes. I was catching up the conversation. But I need to leave. I'm on my way to the hospital (family issues)
[09:02:31] <jzaefferer> leobalter: thank you! Let's chat some time soon
[09:02:45] <jzaefferer> scott_gonzalez: yeah, one more reason to keep it brief
[09:02:56] <jzaefferer> Thanks JamesMGreene gibson042 leobalter!
[09:03:44] <jzaefferer> Now on to the jQuery UI meeting. Ping tj_vantoll arschmitz gabriel_schulhof mikesherov petersendidit rxaviers gnarf
[09:03:50] <rxaviers> hello
[09:03:51] <tj_vantoll> yo
[09:03:52] <arschmitz> hi
[09:04:45] <jzaefferer> Steady ticket count and one less PR :-)
[09:04:58] <jzaefferer> arschmitz: button update?
[09:05:01] <gabriel_schulhof> Hey!
[09:05:12] <jzaefferer> I see that you checked some of those checkboxes
[09:05:29] <arschmitz> jzaefferer: yes the remaining are things i couldnt just "fix"
[09:05:42] <arschmitz> like backcompat which we have not discussed yet really
[09:05:47] <jzaefferer> Yeah, I can see why
[09:06:05] <arschmitz> and the button demos lines up with our other demos we have for other widgets and what was there before
[09:06:10] <jzaefferer> We had some discussion about button options
[09:06:37] <jzaefferer> Well, most UI demos suck, so this is a good opportunity for improvement
[09:07:05] <jzaefferer> arschmitz: Can you implement the common "proxies" for button options that we renamed?
[09:07:21] <arschmitz> jzaefferer: sure
[09:07:30] <arschmitz> jzaefferer: i also added a split button demo back
[09:07:31] <jzaefferer> Can we map icons?
[09:07:37] <arschmitz> which is now a LOT similar
[09:07:46] <arschmitz> simpler
[09:07:51] <jzaefferer> ah, nice
[09:08:23] <arschmitz> jzaefferer: well not need to mess with custom stuff any more
[09:08:37] <arschmitz> its just a button and a select in a controlgroup with the select text hidden
[09:09:13] <jzaefferer> sounds good
[09:09:20] <arschmitz> this also fixes all the accessability issues the old demo had
[09:10:09] <arschmitz> also merged in all jaspers updates
[09:10:15] <arschmitz> and anything you had pointed out
[09:10:38] <jzaefferer> so mapping button options seems reasonable, what do we do about .button() applied to checkboxes?
[09:10:45] <jzaefferer> Does it throw a reasonable error?
[09:10:59] <arschmitz> jzaefferer: that was my queston scott said it was "simple"
[09:11:03] <arschmitz> but never told me his plan
[09:11:12] <arschmitz> and he and i are stuck in a call right now on other stuff
[09:11:31] <arschmitz> but i can get with him when we are done to see what his thoughts were
[09:11:48] <jzaefferer> Okay. Can you put a backcompat section on the button wiki page?
[09:11:56] <arschmitz> yup
[09:11:57] <jzaefferer> I can review that then
[09:12:02] <jzaefferer> before you implement it
[09:12:09] <arschmitz> sure
[09:12:19] <arschmitz> everything thats there now should be ok to review
[09:12:45] <jzaefferer> Okay. Would be good to find someone else to do that, too, I have limited availability for the rest of this month
[09:12:53] <arschmitz> sure
[09:13:01] <arschmitz> i can bully scott into looking maybe
[09:13:03] <arschmitz> or tj?
[09:13:09] <jzaefferer> Maybe Jasper or gabriel_schulhof can do some (more) testing. Or tj_vantoll?
[09:14:15] <tj_vantoll> I can take a look. This is for button or controlgroup or both?
[09:14:47] <jzaefferer> Everything in https://github.com/jquery/jquery-ui/pull/1333 - button, checkboxradio, controlgroup
[09:15:02] <tj_vantoll> Ok I'll add this to my list.
[09:15:20] <arschmitz> on big thing though
[09:15:30] <arschmitz> is we need to make a finial decision about the classes implementation
[09:15:45] <arschmitz> because that will effect controlgroup quite a bit
[09:15:58] <jzaefferer> Right. I'm completely out of the loop on that one, though
[09:16:27] <arschmitz> its basicly about should it be an option
[09:16:45] <arschmitz> should it be able to be changed via setOption
[09:18:19] <jzaefferer> yeah, I can't answer that
[09:18:27] <arschmitz> yeah i wouldnt think so
[09:18:39] <tj_vantoll> arschmitz: I would ping the appropriate people on the classes PR and we can come to a decision there.
[09:18:44] <arschmitz> was just pointing out our decision on that will make a big difference to the implementation of controlgroup
[09:18:58] <jzaefferer> Let's do a separate meeting to discuss classes?
[09:19:00] <arschmitz> tj_vantoll: there was a ton of talk on that pr already
[09:19:02] <arschmitz> maybe too much
[09:19:14] <arschmitz> jzaefferer: that sounds good
[09:19:18] <jzaefferer> Let's do a Skype call sometime soon
[09:19:24] <arschmitz> jzaefferer: sounds good
[09:19:24] <jzaefferer> "high bandwidth discussion"
[09:19:49] <arschmitz> jzaefferer: yeah i agree we should try to do it asap as its the basis for most of ui-1-12 and mobile 1-5
[09:19:57] <jzaefferer> arschmitz: could you organize that?
[09:20:01] <arschmitz> jzaefferer: sure
[09:20:02] <jzaefferer> do a doodle
[09:20:08] <arschmitz> yup
[09:21:05] <jzaefferer> I guess neither Scott nor Felix are here to talk about Datepicker
[09:21:11] <jzaefferer> rxaviers: do you have anything on that?
[09:21:19] <jzaefferer> rxaviers: or Globalize?
[09:21:40] <rxaviers> My datepicker branch has been updated to accommodate the new Globalize generators.
[09:21:50] <rxaviers> 1341
[09:22:15] <jzaefferer> That's still blocked by the other datepicker branch?
[09:22:23] <jzaefferer> yeah...
[09:22:39] <rxaviers> correct. it's blocked (and it's still a work in progress anyway) by 1316
[09:22:54] <jzaefferer> okay
[09:23:02] <rxaviers> On Globalize, you've reviewed yesterday my generators PR with me (obviously you know, but for the record)
[09:23:14] <rxaviers> I plan to fix and land that still on this week
[09:23:31] <rxaviers> I have updates for the "CLDR data as versioned “peer” dependency"
[09:23:39] <jzaefferer> arschmitz tj_vantoll: We're looking for another contributor to Globalize. If can think of anyone who might be interested contributing there, let me or Rafael know
[09:24:06] <jzaefferer> rxaviers: can I remove the longish list from the notes?
[09:24:09] <jzaefferer> for Globalize
[09:24:10] <arschmitz> jzaefferer: i dont have anyone of the top of my head but let me think about it maybe i can find someone
[09:24:26] <rxaviers> Sure
[09:25:15] <rxaviers> (feel free to remove the longish list)
[09:27:52] <jzaefferer> rxaviers: sorry, done now
[09:27:56] <jzaefferer> What about cldr data?
[09:30:14] <rxaviers> I've tried several approaches using npm and bower.
[09:30:26] <jzaefferer> tj_vantoll: apart from reviewing button, what are you working on in UI currently, if anything?
[09:31:07] <tj_vantoll> Menu wrapping
[09:31:12] <rxaviers> The simpler approaches, like mirroring the whole CLDR JSON in a repo and then use npm / bower to fetch it is awful.
[09:31:36] <tj_vantoll> Which has turned out to more complicated than I had hoped. I'm hoping to have that PR ready relatively soon though.
[09:31:45] <jzaefferer> Ugh, menu wrapping, right. Which ticket was that?
[09:32:04] <rxaviers> jzaefferer, just let me know if you want me to proceed...
[09:32:11] <jzaefferer> rxaviers: considering the file sizes, that was to be expected
[09:32:31] <jzaefferer> rxaviers: We didn't discuss that yesterday, let's get back to that some time tomorrow?
[09:32:36] <tj_vantoll> jzaefferer: http://bugs.jqueryui.com/ticket/10162
[09:32:49] <rxaviers> exactly, I have also tried some other approaches that turned out to be better
[09:32:50] <rxaviers> sure
[09:32:50] <tj_vantoll> In progress PR https://github.com/jquery/jquery-ui/pull/1342
[09:34:05] <jzaefferer> All those <div>s :/
[09:34:48] <tj_vantoll> It's painful.
[09:34:51] <tj_vantoll> Really painful.
[09:35:27] <gabriel_schulhof> I heard the expression "div soup" several times at the conference.
[09:35:49] <jzaefferer> More like div sewage
[09:35:53] <tj_vantoll> lol
[09:36:51] <gabriel_schulhof> :)
[09:36:58] <jzaefferer> "Web developer quits career after wading through too much "div sewage" [Editors note: No idea what that is] for too long"
[09:37:23] <gabriel_schulhof> ... and takes up basketweaving.
[09:37:34] <jzaefferer> :+1:
[09:37:51] <tj_vantoll> :)
[09:38:31] <jzaefferer> Well, would be nice to hear from mikesherov, but since he's not around, I think that's all we have for today
[09:38:42] <tj_vantoll> Anyways this change has been depressingly difficult. I got autocomplete working but selectmenu more complex.
[09:38:51] <tj_vantoll> That's all I have.
[09:39:33] <jzaefferer> Alright, thanks everyone!
[09:40:05] <jperrault> arschmitz: can you include me on the classes implementation skype doodle?
[09:40:25] <arschmitz> jperrault: of course
[09:40:29] <jperrault> thx
