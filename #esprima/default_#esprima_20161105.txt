[07:20:56] <pecastro> Morning guys. Anyone around ?
[07:22:22] <pecastro> docs say this http://esprima.org/doc/index.html#ast and produce a wonderful parse tree my code refuses to comply in a similar fashion..
[07:23:18] <pecastro> > var esprima = require('./dist/esprima');
[07:23:18] <pecastro> undefined
[07:23:18] <pecastro> > var p2 = 'answer0 = 42;'
[07:23:18] <pecastro> undefined
[07:23:18] <pecastro> > esprima.parse(p2, { sourceType: 'script' })
[07:23:20] <pecastro> { type: 'Program',
[07:23:23] <pecastro>   body:
[07:23:25] <pecastro>    [ { type: 'ExpressionStatement',
[07:23:28] <pecastro>        expression: [Object] } ],
[07:23:30] <pecastro>   sourceType: 'script' }
[07:23:33] <pecastro> > esprima.parse(p2)
[07:23:35] <pecastro> { type: 'Program',
[07:23:38] <pecastro>   body:
[07:23:40] <pecastro>    [ { type: 'ExpressionStatement',
[07:23:43] <pecastro>        expression: [Object] } ],
[07:23:45] <pecastro>   sourceType: 'script' }
[07:23:48] <pecastro> Sorry about the bluntness ...
[07:24:10] <pecastro> currently on cfd8eba
[07:27:10] <esprima-gh> [esprima] pecastro opened issue #1617: Docs suggested output VS real output https://git.io/vX80p
[12:07:26] <esprima-gh> [esprima] ariya closed issue #1617: Docs suggested output VS real output https://git.io/vX80p
[15:19:53] <esprima-gh> [esprima] ariya opened issue #1618: ES2017: Trailing comma in the parameter for arrow function https://git.io/vX8FV
[22:45:38] <esprima-gh> [esprima] bakkot opened issue #1619: Incorrectly accepts \x{0} in string/template literals https://git.io/vX43G
